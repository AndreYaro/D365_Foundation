<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesFormLetter_DeliverySlip_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Form letter implementation for delivery slips.
/// </summary>
[DocumentStatusFactoryAttribute(DocumentStatus::DeliverySlip_BR)]
class SalesFormLetter_DeliverySlip_BR extends SalesFormLetter_PackingSlip implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the status of the current document.
    /// </summary>
    /// <returns>
    /// The status of the current document.
    /// </returns>
    public DocumentStatus documentStatus()
    {
        return DocumentStatus::DeliverySlip_BR;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initBasedOnMenuItem</Name>
				<Source><![CDATA[
    public void initBasedOnMenuItem(MenuItemNameAction _callerMenuItem)
    {
        super(_callerMenuItem);

        if (_callerMenuItem == menuitemActionStr(SalesFormLetter_DeliverySlipCancel_BR))
        {
            this.parmVersioningUpdateType(VersioningUpdateType::Cancel);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void  new(identifierName             _className = classstr(FormletterService),
                     identifierName             _methodName= methodstr(FormletterService, postSalesOrderDeliverySlip_BR),
                     SysOperationExecutionMode  _executionMode = SysOperationExecutionMode::Synchronous)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00041, funcName());

        if (!BrazilParameters::isEnabled())
        {
            throw error(strFmt("@SYS19306", funcName()));
        }
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>