<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSalesQuotationEmpty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Empty tax sales quotation used for core tax sales quotation when GTE is enabled
/// </summary>
class TaxSalesQuotationEmpty extends TaxSalesQuotation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowAdjustBaseAmountForTaxAdjustment</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Determines whether the transaction supports adjusting the calculated base amount
    ///   when tax is included in item price and the users adjusts the tax amount.
    /// </summary>
    /// <returns>
    ///   true if adjusting the calculated base amount is supported; otherwise, false.
    /// </returns>
    public boolean allowAdjustBaseAmountForTaxAdjustment()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the tax amount.
    /// </summary>
    /// <returns>
    /// The instance of the <c>TaxAmountCur</c> class.
    /// </returns>
    TaxAmount  calc()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the tax amount for markup line.
    /// </summary>
    /// <param name="amountInclTax">
    /// Store the line amounts for tax included scenario.
    /// </param>
    /// <param name="amountInclTax">
    /// Store the base amounts for tax excluded scenario.
    /// </param>
    protected void calcMarkup(Map amountInclTax, Map amountExclTax)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>configureTaxForMarkupLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Configures the tax engine for a markup line.
    /// </summary>
    protected void configureTaxForMarkupLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void  new(SalesQuotationCalcTax_Sales   _salesQuotationForm)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceLinesHaveTaxGroups</Name>
				<Source><![CDATA[
    /// <returns>
    /// true if the sales trans have the tax group; otherwise, false.
    /// </returns>
    protected boolean sourceLinesHaveTaxGroups()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSalesTaxAdjustments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether to use the sales tax adjustments.
    /// </summary>
    /// <returns>
    /// true if the sales tax adjustments should be used; otherwise, false.
    /// </returns>
    /// <remarks>
    /// Always returns false.
    /// </remarks>
    public boolean useSalesTaxAdjustments()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>