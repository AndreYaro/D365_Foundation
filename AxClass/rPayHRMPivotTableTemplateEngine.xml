<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayHRMPivotTableTemplateEngine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rPayHRMPivotTableTemplateEngine extends RunBase
{
    RPayHRMPivotTableType         pivotTableType;
    Object                        pivotTable;

    RPayHRMPivotTableTemplate     pivotTableTemplate;
    RPayHRMPivotTableTemplateItem pivotTableTemplateItem;

    RPayHRMPivotTemplateId        pivotTemplateId;
    RPayHRMPivotTemplateName      pivotTemplateName;

    DialogField                   dfPivotTemplateId;
    DialogField                   dfPivotTemplateName;

    COM                           ptRowAxis;
    COM                           ptColAxis;
    COM                           ptTotals;
    COM                           ptView;
    COM                           ptDataAxis;

    COM                           pivotTableFields;
    COM                           pivotTableField;

    COM                           ptPivotFieldSets;
    COM                           ptPivotTotals;
    COM                           ptGroupAxis;
    COM                           ptField;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(RPayHRMPivotTableType _pivotTableType, Object _pivotTable)
    {
        super();

        pivotTableType = _pivotTableType;
        pivotTable     = _pivotTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        InteropPermission   perm;
        int                 lines = infologLine();
        ;

        perm = new InteropPermission(InteropKind::ComInterop);
        perm.assert();

        try
        {
            ptView           = pivotTable.activeView();
            ptRowAxis        = ptView.rowAxis();
            ptColAxis        = ptView.columnAxis();
            ptDataAxis       = ptView.dataAxis();
            ptTotals         = ptDataAxis.totals();
            ptPivotFieldSets = ptView.fieldSets();
            ptPivotTotals    = ptView.totals();
        }
        catch
        {
            infolog.clear(lines);
        }
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret;

        ret = super(calledFrom);

        if (ret && ! pivotTemplateId)
        {
            ret = checkFailed("@GLS113612");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPivotTableTemplate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void runPivotTableTemplate(RPayHRMPivotTableType _pivotTableType,
                                             Object                _pivotTable,
                                             boolean               _saveTemplate = false)
    {
        RPayHRMPivotTableTemplateEngine pivotTableTemplateEngine;

        if (_saveTemplate)
        {
            pivotTableTemplateEngine = new RPayHRMPivotTableTemplateSave(_pivotTableType, _pivotTable);
        }
        else
        {
            pivotTableTemplateEngine = new RPayHRMPivotTableTemplateOpen(_pivotTableType, _pivotTable);
        }

        if (pivotTableTemplateEngine.prompt())
        {
            pivotTableTemplateEngine.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>