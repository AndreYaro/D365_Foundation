<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankStatementSubledgerJournalTransferCommandExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Bank statement extension for the <c>SubledgerJournalTransferCommand</c> class.
/// </summary>
[SourceDocumentExtensionAttribute()]
public final class BankStatementSubledgerJournalTransferCommandExtension extends SubledgerJournalTransferCommandExtension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertedGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    public void insertedGeneralJournalAccountEntry(RefRecId _transferidVal, SourceDocument _sourceDocument, boolean _doSummarization)
    {
        if (!_doSummarization)
        {
            SourceDocumentHeader sourceDocumentHeader = _sourceDocument.parmSourceDocumentHeader();

            if (sourceDocumentHeader.TypeEnumName == enumStr(SourceDocument_BankStatement))
            {
                switch (sourceDocumentHeader.TypeEnumValue)
                {
                    case SourceDocument_BankStatement::BankStatement:
                        this.updateGeneralJournalAccountEntryText(_transferidVal);
                        break;
                    case SourceDocument_BankStatement::BankStatementLinePost:
                        this.updateGeneralJournalAccountEntryTextBankStatementLinePost(_transferidVal);
                        break;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGeneralJournalAccountEntryText</Name>
				<Source><![CDATA[
    private void updateGeneralJournalAccountEntryText(RefRecId _transferidVal)
    {
        BankStmtISOAccountStatement bankStmtISOAccountStatement;
        BankStmtISOReportEntry bankStmtISOReportEntry;
        AccountingDistribution accountingDistributionLoc;
        SubLedgerJournalAccountEntryDistribution subLedgerJournalAccountEntryDistributionLoc;
        SubLedgerJournalAccountEntry subLedgerJournalAccountEntryLoc;
        BankStatementLineBankDocumentInformation bankStatementLineBankDocumentInformation;
        GeneralJournalAccountEntry generalJournalAccountEntry;
        SubledgerJournalAccountEntryView subledgerJournalAccountEntryView;
        GeneralJournalEntry generalJournalEntry;

        generalJournalAccountEntry.skipDataMethods(true);
        generalJournalAccountEntry.skipEvents(true);

        update_recordset generalJournalAccountEntry
        setting Text = bankStatementLineBankDocumentInformation.TransactionTxt
        join generalJournalEntry
            where generalJournalEntry.TransferId == _transferidVal &&
                generalJournalEntry.RecId == generalJournalAccountEntry.GeneralJournalEntry
        join SourceDocumentHeader, GeneralJournalAccountEntry, PostingType, TransferId from subledgerJournalAccountEntryView
            where subledgerJournalAccountEntryView.GeneralJournalAccountEntry == generalJournalAccountEntry.RecId &&
                subledgerJournalAccountEntryView.PostingType != LedgerPostingType::Bank &&
                subledgerJournalAccountEntryView.TransferId == _transferidVal
        join SourceDocumentLine, SubledgerJournalAccountEntry from subLedgerJournalAccountEntryDistributionLoc
            where subLedgerJournalAccountEntryDistributionLoc.SubledgerJournalAccountEntry == subledgerJournalAccountEntryView.SubLedgerJournalAccountEntry
        join BankStmtISOAccountStatement, RecId from bankStmtISOReportEntry
            where bankStmtISOReportEntry.SourceDocumentLine == subLedgerJournalAccountEntryDistributionLoc.SourceDocumentLine
        join TransactionTxt from bankStatementLineBankDocumentInformation
            where bankStatementLineBankDocumentInformation.BankStmtISOReportEntry == bankStmtISOReportEntry.RecId
                && bankStatementLineBankDocumentInformation.TransactionTxt > SysQueryRangeUtil::valueEmptyString()
        join SourceDocumentHeader, RecId from bankStmtISOAccountStatement
            where bankStmtISOAccountStatement.SourceDocumentHeader == subledgerJournalAccountEntryView.SourceDocumentHeader &&
                bankStmtISOAccountStatement.RecId == bankStmtISOReportEntry.BankStmtISOAccountStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGeneralJournalAccountEntryTextBankStatementLinePost</Name>
				<Source><![CDATA[
    private void updateGeneralJournalAccountEntryTextBankStatementLinePost(RefRecId _transferidVal)
    {
        BankStmtISOReportEntry bankStmtISOReportEntry;
        BankStatementLinePostTable bankStmtLinePostTable;
        AccountingDistribution accountingDistributionLoc;
        SubLedgerJournalAccountEntryDistribution subLedgerJournalAccountEntryDistributionLoc;
        SubLedgerJournalAccountEntry subLedgerJournalAccountEntryLoc;
        BankStatementLineBankDocumentInformation bankStatementLineBankDocumentInformation;
        GeneralJournalAccountEntry generalJournalAccountEntry;
        SubledgerJournalAccountEntryView subledgerJournalAccountEntryView;
        GeneralJournalEntry generalJournalEntry;

        generalJournalAccountEntry.skipDataMethods(true);
        generalJournalAccountEntry.skipEvents(true);

        update_recordset generalJournalAccountEntry
            setting Text = bankStatementLineBankDocumentInformation.TransactionTxt
            join generalJournalEntry
                where generalJournalEntry.TransferId == _transferidVal &&
                    generalJournalEntry.RecId == generalJournalAccountEntry.GeneralJournalEntry
            join GeneralJournalAccountEntry, PostingType, TransferId from subledgerJournalAccountEntryView
                where subledgerJournalAccountEntryView.GeneralJournalAccountEntry == generalJournalAccountEntry.RecId &&
                    subledgerJournalAccountEntryView.PostingType != LedgerPostingType::Bank &&
                    subledgerJournalAccountEntryView.TransferId == _transferidVal
            join SourceDocumentLine, SubledgerJournalAccountEntry from subLedgerJournalAccountEntryDistributionLoc
                where subLedgerJournalAccountEntryDistributionLoc.SubledgerJournalAccountEntry == subledgerJournalAccountEntryView.SubLedgerJournalAccountEntry
            join RecId from bankStmtISOReportEntry
                where bankStmtISOReportEntry.SourceDocumentLine == subLedgerJournalAccountEntryDistributionLoc.SourceDocumentLine
            join TransactionTxt from bankStatementLineBankDocumentInformation
                where bankStatementLineBankDocumentInformation.BankStmtISOReportEntry == bankStmtISOReportEntry.RecId
                    && bankStatementLineBankDocumentInformation.TransactionTxt > SysQueryRangeUtil::valueEmptyString();
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribe</Name>
				<Source><![CDATA[
    protected void subscribe()
    {
        super();

        command.insertedGeneralJournalAccountEntry += eventhandler(this.insertedGeneralJournalAccountEntry);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>