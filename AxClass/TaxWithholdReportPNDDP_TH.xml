<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdReportPNDDP_TH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxWithholdReportPNDDP_TH</c> class is the Report Data Provider class for the
///    <c>TaxWithholdReportPND</c> SRS Report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(TaxWithholdReportPNDContract_TH))
]
class TaxWithholdReportPNDDP_TH extends SRSReportDataProviderBase
{
    TaxWithholdReportPNDTmp_TH  taxWithholdReportPNDTmp_TH;
    RecId                       tmpTableDataRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTaxWithholdReportPNDTmp_TH</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from the <c>TaxWithholdReportDataTmp_TH</c> temporary table.
    /// </summary>
    /// <returns>
    ///    Data from the <c>TaxWithholdReportDataTmp_TH</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(TaxWithholdReportPNDTmp_TH))
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxWithholdReportPNDTmp_TH getTaxWithholdReportPNDTmp_TH()
    {
        select taxWithholdReportPNDTmp_TH;
        return taxWithholdReportPNDTmp_TH;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data into <c>TaxWithholdReportDataTmp_TH</c> temporary table.
    /// </summary>
    public void processReport()
    {
        SrsReportRunPermission          permission;
        TaxWithholdReportPNDContract_TH contract = this.parmDataContract() as TaxWithholdReportPNDContract_TH;

        tmpTableDataRecId = contract.parmSrsTmpTblMarshallerContract().parmTmpTableDataRecId();
        permission        =  new SrsReportRunPermission();
        permission.assert();
        //Temp Table Object that was returned from SRSTmpTblMarshaller
        taxWithholdReportPNDTmp_TH = SRSTmpTblMarshaller::GetTmpTbl(tmpTableDataRecId);

        SRSTmpTblMarshaller::deleteTmpTblData(tmpTableDataRecId);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
