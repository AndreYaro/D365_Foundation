<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSRecordSortedListWorkTypeWrapper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSRecordSortedListWorkTypeWrapper</c> class wrap <c>RecordSortedList</c> and store expected <c>WhsWorkType</c> of it's records.
/// </summary>
internal final class WHSRecordSortedListWorkTypeWrapper
{
    private RecordSortedList list;
    private WhsWorkType workType;
    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(RecordSortedList _list, WhsWorkType _workType)
    {
        this.list = _list;
        this.workType = _workType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>WHSRecordSortedListWorkTypeWrapper</c> instance.
    /// </summary>
    /// <param name = "_list">The <c>RecordSortedList</c> to initialize the <c>WHSRecordSortedListWorkTypeWrapper</c>.</param>
    /// <param name = "_workType">The <c>WhsWorkType</c> to initialize the <c>WHSRecordSortedListWorkTypeWrapper</c>.</param>
    /// <returns>A new instance of the <c>WHSRecordSortedListWorkTypeWrapper</c> class.</returns>
    [Hookable(false)]
    internal static WHSRecordSortedListWorkTypeWrapper construct(RecordSortedList _list, WhsWorkType _workType)
    {
        return new WHSRecordSortedListWorkTypeWrapper(_list, _workType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ins</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void ins(WHSWorkOrderLineInterface _workOrderLineInterface)
    {
        if (_workOrderLineInterface.parmWorkType() != workType)
        {
            this.instrumentationLogger().logInformation(
                strFmt('Expected work type is %1 but workType of the workLine is %2.', enum2int(workType), enum2int(_workOrderLineInterface.parmWorkType()))
            );
        }

        _workOrderLineInterface.addToRecordSortedList(list);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkType</Name>
				<Source><![CDATA[
    internal WhsWorkType parmWorkType()
    {
        return workType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecordSortedList</Name>
				<Source><![CDATA[
    internal RecordSortedList parmRecordSortedList()
    {
        return list;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instrumentationLogger</Name>
				<Source><![CDATA[
    private WHSInstrumentationLogger instrumentationLogger()
    {
        if (!logger)
        {
            logger = WHSInstrumentationLogger::createLogger(classId2Name(classIdGet(this)));
        }

        return logger;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>