<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxGroupViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxGroupViewModel</c> class holds the presentation logic that is invoked through the <c>TaxGroup</c> form.
/// </summary>
class TaxGroupViewModel
{
    // Datasources
    FormDataSource           taxGroupHeadingDataSource;

    // Controls
    FormButtonControl        recalcTaxForTaxGroupControl;

    // The Model
    TaxGroupModel            taxGroupModel;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        // Construct model
        taxGroupModel = taxGroupModel::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Construct a new instance of the <c>TaxGroupViewModel</c> class.
    /// </summary>
    /// <returns>
    ///    A tax group form view model.
    /// </returns>
    public static TaxGroupViewModel construct()
    {
        return new TaxGroupViewModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroupHeadingDataSource</Name>
				<Source><![CDATA[
    public FormDataSource parmTaxGroupHeadingDataSource(FormDataSource _dataSource)
    {
        taxGroupHeadingDataSource = _dataSource;

        return taxGroupHeadingDataSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecalcTaxForTaxGroupControl</Name>
				<Source><![CDATA[
    public FormButtonControl parmRecalcTaxForTaxGroupControl(FormButtonControl _control)
    {
        recalcTaxForTaxGroupControl = _control;

        return recalcTaxForTaxGroupControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>TaxGroupViewModel</c> class.
    /// </summary>
    public void init()
    {
        // Initialize controls
        this.initControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the form view controls.
    /// </summary>
    protected void initControls()
    {
        this.registerOverloadMethods();

        taxGroupHeadingDataSource.object(fieldNum(TaxGroupHeading, FillVATDueDate_W)).visible(TaxParameters::isEasternEuropeOrVatDueDateFeatureEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerOverloadMethods</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers the form control overload methods.
    /// </summary>
    private void registerOverloadMethods()
    {
        // Recalc tax for tax group control
        recalcTaxForTaxGroupControl.registerOverrideMethod(
            methodStr(FormButtonControl, clicked),
            methodStr(TaxGroupViewModel, recalcTaxForTaxGroup_clicked),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>recalcTaxForTaxGroup_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Overload method for clicking the recalc tax for tax group button
    /// </summary>
    /// <param name="_buttonControl">
    ///    The button control that raised the event.
    /// </param>
    public void recalcTaxForTaxGroup_clicked(FormButtonControl _buttonControl)
    {
        // Call code on the actual button control in case the clicked method is overridden
        if (_buttonControl != null)
            _buttonControl.clicked();

        List selectedTaxGroups = new List(Types::String);
        TaxGroupHeading localTaxGroupHeading;
        for (localTaxGroupHeading = getFirstSelection(taxGroupHeadingDataSource);
            localTaxGroupHeading;
            localTaxGroupHeading = taxGroupHeadingDataSource.getNext())
        {
            selectedTaxGroups.addEnd(localTaxGroupHeading.TaxGroup);
        }

        taxGroupModel.recalcTaxForTaxGroup(selectedTaxGroups);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>