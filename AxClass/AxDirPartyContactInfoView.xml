<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>AxDirPartyContactInfoView</Name>
  <SourceCode>
    <Declaration><![CDATA[
class AxDirPartyContactInfoView extends AxInternalBase
{
    DirPartyContactInfoView dirPartyContactInfoView;
    DirPartyLocationRoleNames   roles;
    boolean                     rolesSet;

}
]]></Declaration>
    <Methods>
      <Method>
        <Name>axOrig</Name>
        <Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>currentRecord</Name>
        <Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>AxDirPartyContactInfoView</c> table.
    /// </summary>
    /// <param name="_dirPartyContactInfoView">
    /// The <c>DirPartyContactInfoView</c> record to set; optional.
    /// </param>
    /// <returns>
    /// The instance of the common object for the class.
    /// </returns>
    public Common currentRecord(Common _dirPartyContactInfoView = dirPartyContactInfoView)
    {
        if (!prmisDefault(_dirPartyContactInfoView))
        {
            super(_dirPartyContactInfoView);
            dirPartyContactInfoView = _dirPartyContactInfoView;
        }
        else
        {
            super();
        }

        return dirPartyContactInfoView;
    }

]]></Source>
      </Method>
      <Method>
        <Name>dirPartyContactInfoView</Name>
        <Source><![CDATA[
        public DirPartyContactInfoView dirPartyContactInfoView(DirPartyContactInfoView _dirPartyContactInfoView = dirPartyContactInfoView)
    {
        if (!prmisDefault(_dirPartyContactInfoView))
        {
            this.setCurrentRecordFromExternal(_dirPartyContactInfoView);
        }

        return this.currentRecord();
    }

]]></Source>
      </Method>
      <Method>
        <Name>emptyRecord</Name>
        <Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>DirPartyContactInfoView</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>DirPartyContactInfoView</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        DirPartyContactInfoView localDirPartyContactInfoView;
        return localDirPartyContactInfoView;
    }
]]></Source>
      </Method>
      <Method>
        <Name>parmCountryRegionCode</Name>
        <Source><![CDATA[
        public LogisticsCountryRegionCode parmCountryRegionCode(LogisticsCountryRegionCode _countryRegionCode = '')
    {
        if (!prmisDefault(_countryRegionCode))
        {
            this.setField(fieldNum(DirPartyContactInfoView, CountryRegionCode), _countryRegionCode);
        }

        return dirPartyContactInfoView.CountryRegionCode;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmElectronicAddress</Name>
        <Source><![CDATA[
        public RecId parmElectronicAddress(RecId _electronicAddress = 0)
    {
        if (!prmisDefault(_electronicAddress))
        {
            this.setField(fieldNum(DirPartyContactInfoView, ElectronicAddress), _electronicAddress);
        }

        return dirPartyContactInfoView.ElectronicAddress;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmIsInstantMessage</Name>
        <Source><![CDATA[
        public LogisticsIsInstantMessage parmIsInstantMessage(LogisticsIsInstantMessage _isInstantMessage = NoYes::No)
    {
        if (!prmisdefault(_isInstantMessage))
        {
            this.setField(fieldNum(DirPartyContactInfoView, IsInstantMessage), _isInstantMessage);
        }

        return dirPartyContactInfoView.IsInstantMessage;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmIsLocationOwner</Name>
        <Source><![CDATA[
        public DirPartyIsLocationOwner parmIsLocationOwner(DirPartyIsLocationOwner _isLocationOwner = NoYes::No)
    {
        if (!prmisDefault(_isLocationOwner))
        {
            this.setField(fieldNum(DirPartyContactInfoView, IsLocationOwner), _isLocationOwner);
        }

        return dirPartyContactInfoView.IsLocationOwner;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmIsMobilePhone</Name>
        <Source><![CDATA[
        public LogisticsIsMobilePhone parmIsMobilePhone(LogisticsIsMobilePhone _isMobilePhone = NoYes::No)
    {
        if (!prmisdefault(_isMobilePhone))
        {
            this.setField(fieldNum(DirPartyContactInfoView, IsMobilePhone), _isMobilePhone);
        }

        return dirPartyContactInfoView.IsMobilePhone;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmIsPrimary</Name>
        <Source><![CDATA[
        public NoYes parmIsPrimary(NoYes _isPrimary = NoYes::No)
    {
        if (!prmisDefault(_isPrimary))
        {
            this.setField(fieldNum(DirPartyContactInfoView, IsPrimary), _isPrimary);
        }

        return dirPartyContactInfoView.IsPrimary;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmIsPrivate</Name>
        <Source><![CDATA[
        public NoYes parmIsPrivate(NoYes _isPrivate = NoYes::No)
    {
        if (!prmisDefault(_isPrivate))
        {
            this.setField(fieldNum(DirPartyContactInfoView, IsPrivate), _isPrivate);
        }

        return dirPartyContactInfoView.IsPrivate;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLocation</Name>
        <Source><![CDATA[
        public RecId parmLocation(RecId _location = 0)
    {
        if (!prmisDefault(_location))
        {
            this.setField(fieldNum(DirPartyContactInfoView, Location), _location);
        }

        return dirPartyContactInfoView.Location;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLocationId</Name>
        <Source><![CDATA[
        public LogisticsLocationId parmLocationId(LogisticsLocationId _locationId = '')
    {
        if (!prmisDefault(_locationId))
        {
            this.setField(fieldNum(DirPartyContactInfoView, LocationId), _locationId);
        }

        return dirPartyContactInfoView.LocationId;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLocationName</Name>
        <Source><![CDATA[
        public Description parmLocationName(Description _locationName = '')
    {
        if (!prmisDefault(_locationName))
        {
            this.setField(fieldNum(DirPartyContactInfoView, LocationName), _locationName);
        }

        return dirPartyContactInfoView.LocationName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLocator</Name>
        <Source><![CDATA[
        public LogisticsElectronicAddressLocator parmLocator(LogisticsElectronicAddressLocator _locator = '')
    {
        if (!prmisDefault(_locator))
        {
            this.setField(fieldNum(DirPartyContactInfoView, Locator), _locator);
        }

        return dirPartyContactInfoView.Locator;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmLocatorExtension</Name>
        <Source><![CDATA[
        public PhoneLocal parmLocatorExtension(PhoneLocal _locatorExtension = '')
    {
        if (!prmisDefault(_locatorExtension))
        {
            this.setField(fieldNum(DirPartyContactInfoView, LocatorExtension), _locatorExtension);
        }

        return dirPartyContactInfoView.LocatorExtension;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmParty</Name>
        <Source><![CDATA[
        public DirPartyRecId parmParty(DirPartyRecId _party = 0)
    {
        if (!prmisDefault(_party))
        {
            this.setField(fieldNum(DirPartyContactInfoView, Party), _party);
        }

        return dirPartyContactInfoView.Party;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPartyLocation</Name>
        <Source><![CDATA[
        public RecId parmPartyLocation(RecId _partyLocation = 0)
    {
        if (!prmisDefault(_partyLocation))
        {
            this.setField(fieldNum(DirPartyContactInfoView, PartyLocation), _partyLocation);
        }

        return dirPartyContactInfoView.PartyLocation;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPrivateForParty</Name>
        <Source><![CDATA[
        public DirPartyPrivateLocationRecId parmPrivateForParty(DirPartyPrivateLocationRecId _privateForParty = 0)
    {
        if (!prmisdefault(_privateForParty))
        {
            this.setField(fieldNum(DirPartyContactInfoView, PrivateForParty), _privateForParty);
        }

        return dirPartyContactInfoView.PrivateForParty;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmRoles</Name>
        <Source><![CDATA[
    /// <summary>
    /// Param method to set or get the semi colon separated list of location roles
    /// </summary>
    /// <param name="_roles">
    /// String of semi colon seperated roles
    /// </param>
    /// <returns>
    /// String of roles
    /// </returns>
    public DirPartyLocationRoleNames parmRoles(DirPartyLocationRoleNames _roles = '')
    {
        LogisticsElectronicAddress  elecAddress;
        #Characters

        if (!prmisDefault(_roles))
        {
            // Set
            rolesSet = true;
            roles = _roles;
        }
        else if (!rolesSet)
        {
            rolesSet = true;

            // Get the electronic address record
            elecAddress = LogisticsElectronicAddress::findRecId(this.parmElectronicAddress());
            if (elecAddress.RecId > 0)
            {
                roles = (con2Str(conPeek(elecAddress.locationRoles(), 2),#SEMICOLON));
            }
        }

        return roles;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmType</Name>
        <Source><![CDATA[
        public LogisticsElectronicAddressMethodType parmType(LogisticsElectronicAddressMethodType _type = LogisticsElectronicAddressMethodType::None)
    {
        if (!prmisDefault(_type))
        {
            this.setField(fieldNum(DirPartyContactInfoView, Type), _type);
        }

        return dirPartyContactInfoView.Type;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmTypeIcon</Name>
        <Source><![CDATA[
        public Integer parmTypeIcon(Integer _typeIcon = 0)
    {
        if (!prmisDefault(_typeIcon))
        {
            this.setField(fieldNum(DirPartyContactInfoView, TypeIcon), _typeIcon);
        }

        return dirPartyContactInfoView.TypeIcon;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmValidFrom</Name>
        <Source><![CDATA[
        public EffectiveDateTime parmValidFrom(EffectiveDateTime _validFrom = utcDateTimeNull())
    {
        if (!prmisDefault(_validFrom))
        {
            this.setField(fieldNum(DirPartyContactInfoView, ValidFrom), _validFrom);
        }

        return dirPartyContactInfoView.ValidFrom;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmValidTo</Name>
        <Source><![CDATA[
        public ExpirationDateTime parmValidTo(ExpirationDateTime _validTo = utcDateTimeNull())
    {
        if (!prmisDefault(_validTo))
        {
            this.setField(fieldNum(DirPartyContactInfoView, ValidTo), _validTo);
        }

        return dirPartyContactInfoView.ValidTo;
    }

]]></Source>
      </Method>
      <Method>
        <Name>resetInternalValues</Name>
        <Source><![CDATA[
        public void resetInternalValues()
    {
        rolesSet = false;
        super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>setTableFields</Name>
        <Source><![CDATA[
        protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
      </Method>
      <Method>
        <Name>construct</Name>
        <Source><![CDATA[
        static AxDirPartyContactInfoView construct()
    {
        return new AxDirPartyContactInfoView();
    }

]]></Source>
      </Method>
      <Method>
        <Name>newDirPartyContactInfoView</Name>
        <Source><![CDATA[
        public static AxDirPartyContactInfoView newDirPartyContactInfoView(DirPartyContactInfoView _dirPartyContactInfoView)
    {
        AxDirPartyContactInfoView axDirPartyContactInfoView = AxDirPartyContactInfoView::construct();
        axDirPartyContactInfoView.dirPartyContactInfoView(_dirPartyContactInfoView);

        return axDirPartyContactInfoView;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>