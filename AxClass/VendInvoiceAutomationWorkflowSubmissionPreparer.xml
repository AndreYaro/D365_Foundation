<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationWorkflowSubmissionPreparer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Concrete implementation of <c>VendInvoiceAutomationIWorkflowSubmissionPreparer</c> performs necessary operations on vendor invoices
/// prior to automatic workflow submission.
/// </summary>
internal final class VendInvoiceAutomationWorkflowSubmissionPreparer implements VendInvoiceAutomationIWorkflowSubmissionPreparer
{
    private VendInvoiceAutomationIWorkflowSubmissionPreparationStepGatherer preparationStepGatherer;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {

    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInvoiceWorkflowSubmission</Name>
				<Source><![CDATA[
    internal static VendInvoiceAutomationWorkflowSubmissionPreparer newFromInvoiceWorkflowSubmission(
        VendInvoiceAutomationIWorkflowSubmissionPreparationStepGatherer _preparationStepGatherer)
    {
        VendInvoiceAutomationWorkflowSubmissionPreparer submissionPrepper = new VendInvoiceAutomationWorkflowSubmissionPreparer();
        submissionPrepper.preparationStepGatherer = _preparationStepGatherer;

        return submissionPrepper;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareForSubmissionToWorkflow</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void prepareForSubmissionToWorkflow()
    {
        VendInvoiceAutomationInstrumentationWorkflowSubmissionActivities instrumentationWorkflowSubmissionActivities =
            VendInvoiceAutomationInstrumentationWorkflowSubmissionActivities::createFromLoggerName(
            classStr(VendInvoiceAutomationWorkflowSubmissionPreparer));

        List invoicePreparationSteps = preparationStepGatherer.getInvoicePreparationSteps();
        ListEnumerator invoicePreparationStepEnumerator = invoicePreparationSteps.getEnumerator();

        using (var activityContext = instrumentationWorkflowSubmissionActivities.prepareForWorkflowSubmissionContext(invoicePreparationSteps.elements()))
        {
            // Iterate over preparation steps and perform preparation
            while (invoicePreparationStepEnumerator.moveNext())
            {
                VendInvoiceAutomationIWorkflowSubmissionPreparationStep preparationStep = 
                    invoicePreparationStepEnumerator.current() as VendInvoiceAutomationIWorkflowSubmissionPreparationStep;

                if (preparationStep)
                {
                    System.Diagnostics.Stopwatch stopWatch = new System.Diagnostics.Stopwatch();
                    stopWatch.Start();

                    preparationStep.performPreparationStep();

                    stopWatch.Stop();

                    instrumentationWorkflowSubmissionActivities.properties().preparationStepDurationProperty(activityContext, preparationStep.GetType().Name, stopWatch.get_ElapsedMilliseconds());
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>