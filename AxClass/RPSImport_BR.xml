<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rpsImport_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RPSImport_BR</c> class implements the dialog
/// that allows to import NFe files related to the
/// exported RPS file.
/// </summary>
class rpsImport_BR extends RunBase
{
    ConfImportRPS_BR                                confImport;

    FiscalDocumentTypeId_BR                         fiscalDocumentTypeId;
    FiscalEstablishmentId_BR                        fiscalEstablishmentId;
    FileUploadTemporaryStorageResult                fileUpload;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        Args            parameters = new Args();
        FormRun         formRun;

        parameters.name(formStr(RPSImport_BR));
        parameters.caller(this);
        formRun = classfactory.formRunClass(parameters);

        return formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        confImport = ConfImportRPS_BR::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRPSFileUpload</Name>
				<Source><![CDATA[
    public FileUploadTemporaryStorageResult parmRPSFileUpload(FileUploadTemporaryStorageResult _fileUpload = fileUpload)
    {
        fileUpload = _fileUpload;

        return fileUpload;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalDocumentTypeId</Name>
				<Source><![CDATA[
    public FiscalDocumentTypeId_BR parmFiscalDocumentTypeId(FiscalDocumentTypeId_BR _fiscalDocumentTypeId = fiscalDocumentTypeId)
    {
        fiscalDocumentTypeId = _fiscalDocumentTypeId;

        return fiscalDocumentTypeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalEstablishmentId</Name>
				<Source><![CDATA[
    public FiscalEstablishmentId_BR parmFiscalEstablishmentId(FiscalEstablishmentId_BR _fiscalEstablishmentId = fiscalEstablishmentId)
    {
        fiscalEstablishmentId = _fiscalEstablishmentId;

        return fiscalEstablishmentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        FiscalDocumentType_BR   fiscalDocumentType      = FiscalDocumentType_BR::find(fiscalDocumentTypeId, fiscalEstablishmentId);
        FiscalDocumentFormat_BR fiscalDocumentFormat    = FiscalDocumentFormat_BR::find(fiscalDocumentType.RecId);

        confImport.parmConfLayoutGroupId(fiscalDocumentFormat.eInvoiceImportLayout);
        confImport.parmFileUpload(fileUpload);
        confImport.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates all the class fields values.
    /// </summary>
    /// <param name="calledFrom">Not used.</param>
    /// <returns>true if all fields are validated; false, otherwise.</returns>
    public boolean validate(Object calledFrom = null)
    {
        boolean                 ret;
        FiscalDocumentType_BR   fiscalDocumentType      = FiscalDocumentType_BR::find(fiscalDocumentTypeId, fiscalEstablishmentId);
        FiscalDocumentFormat_BR fiscalDocumentFormat    = FiscalDocumentFormat_BR::find(fiscalDocumentType.RecId);

        ret = super(calledFrom);

        if (!fiscalDocumentTypeId)
        {
            ret = checkFailed("@GLS456");
        }
        else if (!fiscalDocumentType)
        {
            ret = checkFailed(strFmt("@SYS112224", fiscalDocumentTypeId, fieldPName(FiscalDocumentType_BR, FiscalDocumentTypeId), tablePName(FiscalDocumentType_BR)));
        }
        else if (!fiscalDocumentType.ElectronicInvoice)
        {
            ret = checkFailed(strFmt("@GLS60363", fiscalDocumentType.Name));
        }
        else if (!fiscalDocumentFormat.eInvoiceImportLayout)
        {
            ret = checkFailed(strFmt("@GLS221419", fieldPName(ConfLayoutGroups_BR, LayoutGroupId)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static ClassDescription description()
    {
        return "@GLS60368";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        RPSImport_BR rpsImport = new RPSImport_BR();

        if (rpsImport.prompt())
        {
            rpsImport.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>