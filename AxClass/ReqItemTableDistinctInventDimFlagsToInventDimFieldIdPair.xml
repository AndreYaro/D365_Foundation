<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair</c> holds a pair of <c>FieldId</c>s
/// that maps fields between <c>ReqItemTableDistinctInventDimFlags</c> and <c>InventDim</c>.
/// </summary>
class ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair
{
    public FieldId inventDimFieldId;
    public FieldId reqItemTableDistinctInventDimFlagsFieldId;
    
    private const str listPairKey = classStr(ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allPairsEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an enumerator of a complete list of all <c>ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair</c>s.
    /// </summary>
    /// <returns>An enumerator of a complete list of all <c>ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair</c>s.</returns>
    [Hookable(false)]
    public static ListEnumerator allPairsEnumerator()
    {
        List fieldPairs = ReqMemoryCache::getCrossSession(listPairKey);
        if (!fieldPairs)
        {
            fieldPairs = new List(Types::Class);

            ListEnumerator enumerator = InventDim::dimFieldListEnumerator();

            while (enumerator.moveNext())
            {
                fieldPairs.addEnd(ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair::fromInventDimFieldId(enumerator.current()));
            }

            ReqMemoryCache::addCrossSession(listPairKey, fieldPairs);
        }

        return fieldPairs.getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromInventDimFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a pair based on the given <c>InventDim</c> <c>FieldId</c>.
    /// </summary>
    /// <param name = "_inventDimFieldId">The <c>FieldId</c> of an <c>InventDim</c> field.</param>
    /// <returns>A <c>ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair</c>.</returns>
    [Hookable(false)]
    public static ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair fromInventDimFieldId(FieldId _inventDimFieldId)
    {
        ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair pair = new ReqItemTableDistinctInventDimFlagsToInventDimFieldIdPair();
        pair.inventDimFieldId = _inventDimFieldId;
        pair.reqItemTableDistinctInventDimFlagsFieldId = ReqItemTableDistinctInventDimFlags::inventDimFieldIdToFlagFieldId(pair.inventDimFieldId);

        return pair;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>