<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionForecastListHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Executes menu functions from Forecast position list from.
/// </summary>
class HcmPositionForecastListHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>openMenuItemDisplayFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Open a form referenced by a supplied menu item.
    /// </summary>
    /// <param name="menuItemStr">
    /// The menu item string.
    /// </param>
    /// <param name="_record">
    /// The record passed as args.
    /// </param>
    /// <param name="_caller">
    /// The caller form.
    /// </param>
    /// <param name="_openMode">
    /// The mode to open the form in.
    /// </param>
    /// <param name="_modal">
    /// Whether to open the form modally.
    /// </param>
    /// <returns>
    /// true if the form closed from the OK button; otherwise, false.
    /// </returns>
    public static boolean openMenuItemDisplayFunction(str menuItemStr, Common _record=null, Object _caller=null,
                                    OpenMode _openMode = OpenMode::Auto, boolean _modal = false)
    {
        MenuFunction    menuFunction;
        Args            args;
        FormRun         formRun;
        boolean         result;

        menuFunction = new MenuFunction(menuItemStr,MenuItemType::Display);
        menuFunction.openMode(_openMode);

        // Check access rights
        if (!menuFunction || !menuFunction.checkAccessRights())
        {
            // Access rights are not sufficient to use this function.
            throw error("@SYS81158");
        }

        args = new Args();
        args.record(_record);
        args.caller(_caller);

        formRun = menuFunction.create(args);

        if (formRun)
        {
            formRun.run();
            formRun.wait(_modal);
            result = formRun.closedOk();
        }
        else
        {
            // Call menu item class
            menuFunction.run(args);
            result = true;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openMenuItemActionFunction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Open a form referenced by a supplied action menu item.
    /// </summary>
    /// <param name="menuItemStr">
    /// The menu item string.
    /// </param>
    /// <param name="_record">
    /// The record passed as args.
    /// </param>
    /// <param name="_caller">
    /// The caller form.
    /// </param>
    /// <param name="_openMode">
    /// The mode to open the form in.
    /// </param>
    /// <param name="_modal">
    /// Whether to open the form modally.
    /// </param>
    /// <returns>
    /// true if the form closed from the OK button; otherwise, false.
    /// </returns>
    public static boolean openMenuItemActionFunction(str menuItemStr, Common _record=null, Object _caller=null,
                                    OpenMode _openMode = OpenMode::Auto, boolean _modal = false)

    {
        MenuFunction    menuFunction;
        Args            args;
        FormRun         formRun;
        boolean         result;

        menuFunction = new MenuFunction(menuItemStr, MenuItemType::Action);
        menuFunction.openMode(_openMode);

        // Check access rights
        if (!menuFunction || !menuFunction.checkAccessRights())
        {
            // Access rights are not sufficient to use this function.
            throw error("@SYS81158");
        }

        args = new Args();
        args.record(_record);
        args.caller(_caller);

        formRun = menuFunction.create(args);

        if (formRun)
        {
            formRun.run();
            formRun.wait(_modal);
            result = formRun.closedOk();
        }
        else
        {
            // Call menu item class
            menuFunction.run(args);
            result = true;
        }

        return result;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>