<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>psaIndirectComponentTransEntry</Name>
	<SourceCode>
		<Declaration><![CDATA[
// Description:     trans entry
class psaIndirectComponentTransEntry
{
    PSAIndirectComponentId      m_sComponentId;
    Amount                      m_rCostAmount;
    Amount                      m_rRevenueAmount;
    Amount                      m_rInvoiceAmount;
    PSAIndirectComponentGroupId m_sGroupId;
    TransDate                   m_dTrans;
    RecId                       m_iTransRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCostAmount</Name>
				<Source><![CDATA[
        public Amount parmCostAmount(Amount _rCostAmount = m_rCostAmount)
    {
        m_rCostAmount = _rCostAmount;

        return m_rCostAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIndirectComponentGroupId</Name>
				<Source><![CDATA[
        public PSAIndirectComponentGroupId parmIndirectComponentGroupId(PSAIndirectComponentGroupId _sGroupId = m_sGroupId)
    {
        m_sGroupId = _sGroupId;

        return m_sGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIndirectComponentId</Name>
				<Source><![CDATA[
        public PSAIndirectComponentId parmIndirectComponentId(PSAIndirectComponentId _sId = m_sComponentId)
    {
        m_sComponentId = _sId;

        return m_sComponentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAmount</Name>
				<Source><![CDATA[
        public Amount parmInvoiceAmount(Amount _rInvoiceAmount = m_rInvoiceAmount)
    {
        m_rInvoiceAmount = _rInvoiceAmount;

        return m_rInvoiceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRevenueAmount</Name>
				<Source><![CDATA[
        public Amount parmRevenueAmount(Amount _rRevenueAmount = m_rRevenueAmount)
    {
        m_rRevenueAmount = _rRevenueAmount;

        return m_rRevenueAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransDate</Name>
				<Source><![CDATA[
        public TransDate parmTransDate(TransDate _dTrans = m_dTrans)
    {
        m_dTrans = _dTrans;

        return m_dTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransRecId</Name>
				<Source><![CDATA[
        public RecId parmTransRecId(RecId _iTransRecId = m_iTransRecId)
    {
        m_iTransRecId = _iTransRecId;

        return m_iTransRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntryFromTrans</Name>
				<Source><![CDATA[
        public void updateEntryFromTrans(PSAIndirectComponentTrans _tIndirectComponentTrans)
    {
        m_sGroupId                  = _tIndirectComponentTrans.IndirectComponentGroup;
        m_sComponentId              = _tIndirectComponentTrans.IndirectComponentId;

        switch (_tIndirectComponentTrans.IndirectComponentType)
        {
            case PSAIndirectComponentType::Cost:
                m_rCostAmount += _tIndirectComponentTrans.Amount;
                break;

            case PSAIndirectComponentType::Revenue:
                m_rRevenueAmount += _tIndirectComponentTrans.Amount;
                break;

            case PSAIndirectComponentType::Invoice:
                m_rInvoiceAmount += _tIndirectComponentTrans.Amount;
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromIndirectComponentTrans</Name>
				<Source><![CDATA[
        // Description:     init from trans
    public static PSAIndirectComponentTransEntry initFromIndirectComponentTrans(PSAIndirectComponentTrans _tIndirectComponentTrans)
    {
        PSAIndirectComponentTransEntry      oEntry = new PSAIndirectComponentTransEntry();

        oEntry.parmIndirectComponentGroupId(_tIndirectComponentTrans.IndirectComponentGroup);
        oEntry.parmIndirectComponentId(_tIndirectComponentTrans.IndirectComponentId);
        oEntry.parmTransDate(_tIndirectComponentTrans.TransDate);
        oEntry.parmTransRecId(_tIndirectComponentTrans.RecId);

        switch (_tIndirectComponentTrans.IndirectComponentType)
        {
            case PSAIndirectComponentType::Cost:
                oEntry.parmCostAmount(_tIndirectComponentTrans.Amount);
                break;

            case PSAIndirectComponentType::Revenue:
                oEntry.parmRevenueAmount(_tIndirectComponentTrans.Amount);
                break;

            case PSAIndirectComponentType::Invoice:
                oEntry.parmInvoiceAmount(_tIndirectComponentTrans.Amount);
                break;

            default:
                break;
        }

        return oEntry;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>