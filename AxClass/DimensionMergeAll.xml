<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionMergeAll</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionMergeAll</c> class merges two default dimensions into a single default dimension.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
class DimensionMergeAll extends DimensionMerge
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>merge</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension attribute value set that holds the combination of the entity default
    ///    dimension, the default dimension of the buffer, and the provided input parameters.
    /// </summary>
    /// <param name="_defaultDimension1">
    ///    The primary default dimension to use for the merge.
    /// </param>
    /// <param name="_defaultDimension2">
    ///    The secondary default dimension to use for the merge.
    /// </param>
    /// <returns>
    ///    A dimension attribute value set that holds the combination of the entity default dimension, the
    ///    default dimension of the buffer, and the provided input parameters.
    /// </returns>
    /// <remarks>
    ///    To make sure that the inventory site and financial dimension link is working, the
    ///    <c>DimensionCopy</c> class is called.
    /// </remarks>
    public DimensionDefault merge(
        DimensionDefault _defaultDimension1,
        DimensionDefault _defaultDimension2
        )
    {
        return DimensionMergeAll::mergeOnServer(_defaultDimension1, _defaultDimension2, dimensionDefaultMap, legalEntityRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static DimensionMergeAll construct()
    {
        return new DimensionMergeAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>DimensionMerge</c> class.
    /// </summary>
    /// <returns>
    /// A new <c>DimensionMerge</c> instance.
    /// </returns>
    public static DimensionMerge newStandard()
    {
        return DimensionMergeAll::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mergeOnServer</Name>
				<Source><![CDATA[
    private static DimensionDefault mergeOnServer(
        DimensionDefault    _defaultDimension1,
        DimensionDefault    _defaultDimension2,
        DimensionDefaultMap _dimensionDefaultMap,
        LegalEntityRecId    _legalEntityRecId
        )
    {
        DimensionDefault            mergedDimensionDefault;
        DimensionCopy               dimensionCopy;

        // Now merge the dimensions
        mergedDimensionDefault = LedgerDimensionDefaultFacade::serviceMergeDefaultDimensions(
                                                                _dimensionDefaultMap.DefaultDimension,            // Values that are currently on the record
                                                                _defaultDimension1,                               // Input value 1
                                                                _defaultDimension2);                              // Input value 2

        // Check if I need to replace something based on the site link
        dimensionCopy = DimensionCopy::newFromTable(_dimensionDefaultMap, _legalEntityRecId);

        return dimensionCopy.copy(mergedDimensionDefault);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>