<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PrintMgmtHierarchy_Ledger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PrintMgmtHierarchy_Ledger</c> class is responsible for managing the general ledger hierarchy.
/// </summary>
/// <remarks>
/// The <c>PrintMgmtHierarchy_Ledger</c> class manages the default hierarchy for the general ledger
/// module.The class manages print management data for transactions in this module.
/// </remarks>
class PrintMgmtHierarchy_Ledger extends PrintMgmtHierarchy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNodesImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds valid nodes for the <c>PrintMgmtHierarchy_Ledger</c> class.
    /// </summary>
    /// <returns>
    ///    A list of <c>PrintMgmtNodeType</c> enumeration values that specify the valid nodes for the
    ///    <c>PrintMgmtHierarchy_Ledger</c> class hierarchy.
    /// </returns>
    protected List getNodesImplementation()
    {
        List supportedNodes = new List(Types::Enum);

        // Add allowable nodes for this hierarchy
        supportedNodes.addEnd(PrintMgmtNodeType::Ledger);

        return supportedNodes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getParentImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the parent node instance based on the information provided.
    /// </summary>
    /// <param name="_nodeInstance">
    /// An instance of the <c>PrintMgmtNodeInstance</c> class for which the parent is being requested.
    /// </param>
    /// <param name="_docType">
    /// The <c>PrintMgmtDocumentType</c> enumeration value that is used to determine the appropriate parent.
    /// </param>
    /// <returns>
    /// An instance of the parent <c>PrintMgmtNodeInstance</c> class; otherwise, null.
    /// </returns>
    /// <remarks>
    /// The parent returned can vary on the table being referenced by the _ <paramref name="nodeInstance"
    /// /> parameter and the _ <paramref name="docType" /> parameter being requested.
    /// </remarks>
    protected PrintMgmtNodeInstance getParentImplementation(PrintMgmtNodeInstance _nodeInstance, PrintMgmtDocumentType _docType)
    {
        // Find the appropriate parent
        PrintMgmtNodeInstance result;

        // Get the node instance type
        switch (_nodeInstance.parmNodeDefinition().getNodeType())
        {
            case PrintMgmtNodeType::VendTable:
                // No record to reference, but there is another node in the hierarchy
                result = new PrintMgmtNodeInstance();
                result.parmReferencedTableBuffer(null);
                result.parmNodeDefinition(PrintMgmtNode::construct(PrintMgmtNodeType::Ledger));
                break;

            case PrintMgmtNodeType::CustTable:
                // No record to reference, but there is another node in the hierarchy
                result = new PrintMgmtNodeInstance();
                result.parmReferencedTableBuffer(null);
                result.parmNodeDefinition(PrintMgmtNode::construct(PrintMgmtNodeType::Ledger));
                break;

            case PrintMgmtNodeType::Sales:
                // When no parent is present, return null
                result = null;
                break;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>