<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerFiscalPeriodNameContractER_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Contains the from period, to period, from date and to date data contract for GER report.
/// General data contract for from and to fiscal period name.
/// This contract is used for selecting from and to fiscal period name.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerFiscalPeriodNameUIBuilderER_CN), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract),
    SysOperationGroupAttribute('PeriodGroup', "@SYS4080", '1')
]
public class LedgerFiscalPeriodNameContractER_CN implements SysOperationValidatable
{
    PeriodName          fromPeriod;
    PeriodName          toPeriod;
    FromDate            fromDate;
    ToDate              toDate;
    boolean             validateDates;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        validateDates = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS24050")),
        SysOperationGroupMemberAttribute('PeriodGroup'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromPeriod.
    /// </summary>
    /// <param name="_fromPeriod">
    /// The new value of the datacontract parameter FromPeriod.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter FromPeriod
    /// </returns>
    [
        DataMemberAttribute('FromPeriod'),
        SysOperationLabelAttribute(literalstr("@GLS64474")),
        SysOperationGroupMemberAttribute('PeriodGroup'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public PeriodName parmFromPeriod(PeriodName _fromPeriod = fromPeriod)
    {
        fromPeriod = _fromPeriod;
        return fromPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS35904")),
        SysOperationGroupMemberAttribute('PeriodGroup'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToPeriod.
    /// </summary>
    /// <param name="_toPeriod">
    /// The new value of the datacontract parameter ToPeriod.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ToPeriod
    /// </returns>
    [
        DataMemberAttribute('ToPeriod'),
        SysOperationLabelAttribute(literalstr("@SYS137232")),
        SysOperationGroupMemberAttribute('PeriodGroup'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public PeriodName parmToPeriod(PeriodName _toPeriod = toPeriod)
    {
        toPeriod = _toPeriod;
        return toPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidateDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the parameter validateDates, default value is True.
    /// </summary>
    /// <param name="_validateDates">
    /// The new value of the parameter validateDates.
    /// </param>
    /// <returns>
    /// The current value of parameter validateDates.
    /// </returns>
    public Boolean parmValidateDates(Boolean _validateDates = validateDates)
    {
        validateDates = _validateDates;

        return validateDates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (validateDates && fromDate && toDate)
        {
            if (fromDate > toDate)
            {
                //From date cannot be greater than To date.
                isValid = checkFailed("@SYS120590");
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>