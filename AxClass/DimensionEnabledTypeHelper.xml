<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionEnabledTypeHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionEnabledTypeHelper</c> class has subscriber methods to delegates on the <c>DimensionEnabledType</c> class.
/// </summary>
class DimensionEnabledTypeHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFieldsForDeleteOrRenameDelagate1</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID and <c>DimensionEnabledType</c> instance for the specified table buffer when the <c>getFieldsforDeleteOrRenameDelagate1</c>
    /// delegate on the <c>DimensionEnabledType</c> class is called.
    /// </summary>
    /// <param name = "_table">The table buffer.</param>
    /// <param name = "_args">The event handler result.</param>
    [SubscribesTo(classstr(DimensionEnabledType), delegatestr(DimensionEnabledType, getFieldsForDeleteOrRenameDelagate1))]
    public static void getFieldsForDeleteOrRenameDelagate1(Common _table, DimensionEnabledTypeEventArgs _args)
    {
        tableId viewId;
        DimensionEnabledType    dimEnabledType;

        // <GEERU>
        if (_table.TableId == tableNum(EmployeeTable_RU))
        {
            viewId = tableNum(DimAttributeEmployeeTable_RU);
            dimEnabledType = DimensionEnabledType::constructForSystemDefinedByTableId(viewId);

            _args.viewId(viewId);
            _args.dimEnabledType(dimEnabledType);
        }
        else if (_table.TableId == tableNum(RTax25ProfitTable))
        {
            viewId = tableNum(DimAttributeRTax25ProfitTable_RU);
            dimEnabledType = DimensionEnabledType::constructForSystemDefinedByTableId(viewId);

            _args.viewId(viewId);
            _args.dimEnabledType(dimEnabledType);
        }

        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldsForDeleteOrRenameDelagate2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the table ID for the specified table buffer when the <c>getFieldsForDeleteOrRenameDelagate2</c> delegate
    /// on the <c>DimensionEnabledType</c> class is called.
    /// </summary>
    /// <param name = "_table">The table buffer.</param>
    /// <param name = "_ret">The event handler result.</param>
    [SubscribesTo(classstr(DimensionEnabledType), delegatestr(DimensionEnabledType, getFieldsForDeleteOrRenameDelagate2))]
    public static void getFieldsForDeleteOrRenameDelagate2(Common _table, EventHandlerResult _ret)
    {
        if (_table.TableId == tableNum(RTax25ProfitTable))
        {
            _ret.result(_table.TableId);
        }
        return;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>