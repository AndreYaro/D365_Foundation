<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EximBankCertificate_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The exim bank certificate class.
/// </summary>
class EximBankCertificate_IN extends RunBase
{
    DialogField                    fieldApplyTo;
    DialogField                    fieldBankCertificateNum;
    DialogField                    fieldIssueDate;
    EximDEPBApplyTo_IN             applyTo;
    EximBankCertificateNum_IN      bankCertificateNum;
    TransDateTime                  issueDate;
    TmpEximDEPBExportOrderLine_IN  eximDEPBExportOrderLine;
    TmpEximDEPBExportOrderTable_IN eximDEPBExportOrderTable;
    TmpEximExportOrderTable_IN     eximExportOrderTable;
    TmpEximExportOrderLines_IN     eximExportOrderLines;
    RefRecId                       exportOrderTableRecId;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        applyTo,
        bankCertificateNum,
        issueDate
    #endMacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog = new DialogRunbase("@GLS61761",this);
        ;

        fieldApplyTo            = dialog.addField(enumstr(EximDEPBApplyTo_IN), "@SYS115857", "@GLS64144");
        fieldBankCertificateNum = dialog.addField(extendedtypestr(EximBankCertificateNum_IN), "@GLS61761", "@GLS62215");
        fieldIssueDate          = dialog.addField(extendedtypestr(TransDateTime), "@GLS61802", "@GLS62216");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets fields value from the dialog.
    /// </summary>
    /// <returns>
    /// If 'True', the value of the fields can be got successfully.
    /// </returns>
    public boolean getFromDialog()
    {
        applyTo            = fieldApplyTo.value();
        bankCertificateNum = fieldBankCertificateNum.value();
        issueDate          = fieldIssueDate.value();
        issueDate = DateTimeUtil::removeTimeZoneOffset(issueDate, DateTimeUtil::getUserPreferredTimeZone());

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEximDEPBExportOrderLine</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpEximDEPBExportOrderLine_IN parmEximDEPBExportOrderLine(TmpEximDEPBExportOrderLine_IN _eximDEPBExportOrderLine = eximDEPBExportOrderLine)
    {
        eximDEPBExportOrderLine = _eximDEPBExportOrderLine;

        return eximDEPBExportOrderLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEximDEPBExportOrderTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpEximDEPBExportOrderTable_IN parmEximDEPBExportOrderTable(TmpEximDEPBExportOrderTable_IN _eximDEPBExportOrderTable = eximDEPBExportOrderTable)
    {
        eximDEPBExportOrderTable = _eximDEPBExportOrderTable;

        return eximDEPBExportOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEximExportOrderLines</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpEximExportOrderLines_IN parmEximExportOrderLines(TmpEximExportOrderLines_IN _eximExportOrderLines = eximExportOrderLines)
    {
        eximExportOrderLines = _eximExportOrderLines;

        return eximExportOrderLines;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEximExportOrderTable</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TmpEximExportOrderTable_IN parmEximExportOrderTable(TmpEximExportOrderTable_IN _eximExportOrderTable = eximExportOrderTable)
    {
        eximExportOrderTable = _eximExportOrderTable;

        return eximExportOrderTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportOrderTableRecId</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RecId parmExportOrderTableRecId(RecId _exportOrderTableRecId = exportOrderTableRecId)
    {
        exportOrderTableRecId = _exportOrderTableRecId;

        return exportOrderTableRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (this.parmEximExportOrderLines())
        {
            this.updateExportDeatils();
        }
        else if (this.parmEximDEPBExportOrderLine())
        {
            this.updateDEPBExportDeatils();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        EximBankCertificate_IN eximBankCertificate_IN = new EximBankCertificate_IN();

        eximBankCertificate_IN.getLast();

        if (eximBankCertificate_IN.prompt())
        {
            eximBankCertificate_IN.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = RunBase::getVersion(_packedClass);
        switch (version)
        {
            case #CurrentVersion :
                [version, #CurrentList] = _packedClass;
                break;
            default :
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDEPBExportDeatils</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates DEPB export details.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateDEPBExportDeatils()
    {
        boolean mark;
        ;

        if (applyTo == EximDEPBApplyTo_IN::All)
        {
            update_recordset eximDEPBExportOrderLine
                setting BankCertificateNum       = bankCertificateNum,
                        BankCertificateDateTime  = issueDate
                where eximDEPBExportOrderLine.ExportOrderTableRecId == exportOrderTableRecId;
        }
        else
        {
            mark = (applyTo == EximDEPBApplyTo_IN::Marked) ? true : false ;

            update_recordset eximDEPBExportOrderLine
                setting BankCertificateNum       = bankCertificateNum,
                        BankCertificateDateTime  = issueDate
                where eximDEPBExportOrderLine.ExportOrderTableRecId == exportOrderTableRecId
                   && eximDEPBExportOrderLine.Mark == mark;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExportDeatils</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates export details.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void updateExportDeatils()
    {
        boolean mark;
        ;

        if (applyTo == EximDEPBApplyTo_IN::All)
        {
            update_recordset eximExportOrderLines
                setting BankCertificateNum       = bankCertificateNum,
                        BankCertificateDateTime  = issueDate
                where eximExportOrderLines.ExportOrderTableRecId == exportOrderTableRecId;
        }
        else
        {
            mark = (applyTo == EximDEPBApplyTo_IN::Marked) ? true : false ;

            update_recordset eximExportOrderLines
                setting BankCertificateNum       = bankCertificateNum,
                        BankCertificateDateTime  = issueDate
                where eximExportOrderLines.ExportOrderTableRecId == exportOrderTableRecId
                   && eximExportOrderLines.Mark == mark;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static ClassDescription description()
    {
        return "@GLS61761";
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>