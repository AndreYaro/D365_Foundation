<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplTransSource_AdvanceAdj_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class EmplTransSource_AdvanceAdj_RU extends EmplTransSource_RU
{
    EmplAdvLine_RU advLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillSourceData</Name>
				<Source><![CDATA[
    protected void fillSourceData()
    {
        sourceAmountCur         = emplTrans.AmountCur;
        sourceAmountMST         = emplTrans.AmountMST;
        sourceTaxAmountCur      = 0.0;
        sourceTaxAmountMST      = 0.0;
        sourceCurrencyCode      = emplTrans.CurrencyCode;
        sourceDefaultDimension  = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(emplTrans.LedgerDimension);
        sourceName              = enum2str(EmplTransSourceType_RU::AdvanceAdj);
        sourceNum               = advLine.AdvanceId;
        sourceRecId             = advLine.RecId;
        sourceTableId           = tableNum(EmplAdvLine_RU);
        sourceTransDate         = advLine.DocumentDate;
        sourceDescription       = "@GLS112724";
        sourceType              = EmplTransSourceType_RU::AdvanceAdj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceRecord</Name>
				<Source><![CDATA[
    protected void findSourceRecord()
    {
        ;

        advLine = EmplAdvLine_RU::findTransEmplRecId(emplTrans.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initOutputNames</Name>
				<Source><![CDATA[
    protected void initOutputNames()
    {
        ;
        formName        = formStr(EmplAdvTable_RU);
        itemOutputName  = menuitemOutputStr(EmplReportAdvance_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Ledger dimension
    /// </summary>
    /// <returns>
    ///  <c>LedgerDimensionAccount</c>
    /// </returns>
    public LedgerDimensionDefaultAccount ledgerDimension()
    {
        GeneralJournalAccountEntry          generalJournalAccountEntry;
        GeneralJournalAccountEntry_W        generalJournalAccountEntryW;
        GeneralJournalEntry                 generalJournalEntry;
        SubledgerVoucherGeneralJournalEntry subledgerVoucherGeneralJournalEntry;
        DimensionAttributeValueCombination  dimAttrValueCombination;

        select firstonly * from generalJournalAccountEntryW
            exists join generalJournalAccountEntry
                where generalJournalAccountEntry.RecId == generalJournalAccountEntryW.GeneralJournalAccountEntry
            exists join generalJournalEntry
                where generalJournalEntry.RecId   == generalJournalAccountEntry.GeneralJournalEntry
                    && generalJournalEntry.RecId  == generalJournalAccountEntryW.GeneralJournalEntry
                    && generalJournalEntry.Ledger == Ledger::current()
            exists join subledgerVoucherGeneralJournalEntry
                where subledgerVoucherGeneralJournalEntry.GeneralJournalEntry == generalJournalEntry.RecId
                    && subledgerVoucherGeneralJournalEntry.Voucher            == emplTrans.Voucher
            exists join  dimAttrValueCombination
                where dimAttrValueCombination.RecId       == generalJournalAccountEntry.LedgerDimension
                   && dimAttrValueCombination.MainAccount == LedgerDimensionFacade::getMainAccountRecIdFromLedgerDimension(emplTrans.LedgerDimension);

        return generalJournalAccountEntryW.ledgerDimensionCorr_RU();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>