<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>TrvRequisitionController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>TrvRequisitionController</c> class is the controller class for the <c>TrvRequisition</c> report.
/// </summary>
public class TrvRequisitionController extends SrsReportRunController implements BatchRetryable
{
    TrvRequisitionTable     trvReqTable;
    TrvRequisitionLine      trvReqLine;
    public static const str parmCaption = 'Caption';

}
]]></Declaration>
    <Methods>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
    /// <summary>
    /// Modifies the report query and parameters by using the caller settings.
    /// </summary>
    protected void prePromptModifyContract()
    {
        if (this.parmArgs().record())
        {
            this.setRecord();
            Query query = this.getFirstQuery();
            
            str caption = TrvRequisitionHelper::generateRequisitionCaption(trvReqTable, trvReqTable.employeeName());
            this.parmDialogCaption(caption);

            if (this.parmReportContract() && this.parmReportContract().parmRdlContract())
            {
                this.parmReportContract().parmRdlContract().setValue(parmCaption, caption);
            }

            if (query)
            {
                QueryBuildDataSource qbdsTrvRequisitionTable = query.dataSourceTable(tablenum(TrvRequisitionTable));
                QueryBuildDataSource qbdsTrvRequisitionLine = query.dataSourceTable(tablenum(TrvRequisitionLine));

                qbdsTrvRequisitionTable.clearRanges();
                qbdsTrvRequisitionLine.clearRanges();

                QueryBuildRange qbrExpNumber = SysQuery::findOrCreateRange(qbdsTrvRequisitionTable, fieldnum(TrvRequisitionTable, RequisitionNumber));
                qbrExpNumber.value(trvReqTable.RequisitionNumber);
                qbrExpNumber.status(RangeStatus::Locked);

                QueryBuildRange qbrReferenceDataAreaId = SysQuery::findOrCreateRange(qbdsTrvRequisitionTable, fieldnum(TrvRequisitionTable, ReferenceDataAreaId));
                qbrReferenceDataAreaId.value(trvReqTable.ReferenceDataAreaId);
                qbrReferenceDataAreaId.status(RangeStatus::Locked);

                if (trvReqLine.RecId)
                {
                    QueryBuildRange qbrRecId = SysQuery::findOrCreateRange(qbdsTrvRequisitionLine, fieldnum(TrvRequisitionLine, RecId));
                    qbrRecId.value(queryValue(trvReqLine.RecId));
                    qbrRecId.status(RangeStatus::Hidden);
                }
            }
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>setRecord</Name>
        <Source><![CDATA[
    private void setRecord()
    {
        switch (this.parmArgs().record().TableId)
        {
            case tableNum(TrvRequisitionTable):
                trvReqTable = this.parmArgs().record();
                break;

            case tableNum(TrvRequisitionLine):
                trvReqLine = this.parmArgs().record();
                trvReqTable = TrvRequisitionTable::find(trvReqLine.RecId);
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        SrsReportRunController controller  = new TrvRequisitionController();
        controller.parmArgs(_args);
        controller.parmReportName(ssrsReportStr(TrvRequisition, Report));
        controller.parmShowDialog(false);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>