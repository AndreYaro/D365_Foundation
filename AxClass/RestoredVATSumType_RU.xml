<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RestoredVATSumType_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RestoredVATSumType_RU
{
    Common                  common;
    Common                  commonPrev;
    Common                  parentRecord;
    container               parentKey;
    RestoredVATSumType_RU   parentSumType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>keyFields</Name>
				<Source><![CDATA[
        public container keyFields()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(Common _common, Map _mapParentSumTypes)
    {
        int idx;
        Map mapParentSumTypes = _mapParentSumTypes;
        ;

        common = _common;

        parentKey += classidget(this);

        for (idx = 1; idx <= conlen(this.keyFields()); idx++)
        {
            parentKey += common.(conpeek(this.keyFields(), idx));
        }

        if (parentRecord)
        {
            if (mapParentSumTypes.exists(parentKey))
            {
                parentSumType = mapParentSumTypes.lookup(parentKey);
            }
            else
            {
                parentSumType = RestoredVATSumType_RU::construct(parentRecord, mapParentSumTypes);

                mapParentSumTypes.insert(parentKey, parentSumType);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parentKey</Name>
				<Source><![CDATA[
        public container parentKey()
    {
        return parentKey;
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
        public Common record()
    {
        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDatabase</Name>
				<Source><![CDATA[
        public void updateDatabase()
    {
        ;
        common.doUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSum</Name>
				<Source><![CDATA[
        public void updateSum(Common _updatedRecord = common)
    {
        if (parentSumType)
        {
            parentSumType.updateSum();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static RestoredVATSumType_RU construct(Common   _common,
                                           Map      _mapParentSumTypes)
    {
        switch (_common.TableId)
        {
            case tablenum(RestoredVATLogTable_RU)       : return new RestoredVATSumType_RU          (_common, _mapParentSumTypes);
            case tablenum(RestoredVATLogTrans_RU)       : return new RestoredVATSumType_Trans_RU    (_common, _mapParentSumTypes);
            case tablenum(RestoredVATLogTransOper_RU)   : return new RestoredVATSumType_TransOper_RU(_common, _mapParentSumTypes);
            case tablenum(RestoredVATLogGain_RU)        : return new RestoredVATSumType_Gain_RU     (_common, _mapParentSumTypes);
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>