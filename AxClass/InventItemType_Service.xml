<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemType_Service</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventItemType_Service extends InventItemType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculationType</Name>
				<Source><![CDATA[
        ItemCalcType calculationType(
        InventTable     _inventTable    = null
        )
    {
        return ItemCalcType::Service;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canBeAutoReserved</Name>
				<Source><![CDATA[
        boolean canBeAutoReserved()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCostGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the default cost group.
    /// </summary>
    /// <returns>
    /// The default cost group.
    /// </returns>
    public CostGroupId defaultCostGroupId()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(LeanManufacturing)))
        {
            return BOMCostGroup::defaultCostGroupId(CostGroupType::DirectOutsourcing);
        }
        else
        {
            return BOMCostGroup::defaultCostGroupId(CostGroupType::Undefined);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>imageRessNo</Name>
				<Source><![CDATA[
        int imageRessNo()
    {
        return #ImageService;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCostGroupTypeValid</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether the cost group type of the current cost group is correct with regard to the product
    ///    type.
    /// </summary>
    /// <returns>
    ///    true if cost group type is correct; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    Only the undefined and direct outsourcing cost group types are allowed for products of the service
    ///    type.
    /// </remarks>
    public boolean isCostGroupTypeValid()
    {
        boolean         ret = true;

        if (inventTable.CostGroupId)
        {
            CostGroupType costGroupType = BOMCostGroup::find(inventTable.CostGroupId).CostGroupType;
            if (!(costGroupType == CostGroupType::Undefined || costGroupType == CostGroupType::DirectOutsourcing))
            {
                ret = checkFailed("@SYS332337");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isServiceItem</Name>
				<Source><![CDATA[
        boolean isServiceItem()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeReqCreated</Name>
				<Source><![CDATA[
        boolean mustBeReqCreated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustInventBeControlled</Name>
				<Source><![CDATA[
        boolean mustInventBeControlled()
    {
        // <GEERU>
        if (inventTable.AssetGroupId_RU)
            return true;
        // </GEERU>
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static InventItemType construct(ItemType _itemType)
    {
        return new InventItemType_Service();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>