<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayTblTimeComparerDocTimeCode</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Comparer for calculating hash based on time codes.
/// </summary>
class RPayTblTimeComparerDocTimeCode extends RPayTblTimeComparer
{
    #define.lowestPriority(255)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPriorityByType</Name>
				<Source><![CDATA[
        private int getPriorityByType(RpayTblSpecTimeType _type)
    {
        #define.SickListPriority(10)
        #define.BusinessTripPriority(20)
        #define.VacationPriority(30)

        switch (_type)
        {
            case RpayTblSpecTimeType::SickList:
                return #SickListPriority;

            case RpayTblSpecTimeType::Mission:
                return #BusinessTripPriority;

            case RpayTblSpecTimeType::Vacation:
                return #VacationPriority;

            default:
                return #lowestPriority;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTblTimeHash</Name>
				<Source><![CDATA[
        public container getTblTimeHash(RPayTblTime _tblTime)
    {
        return [
            this.timeCodePriority(_tblTime.dimension().parmTimeCode()),
            _tblTime.parmStartDate(),
            _tblTime.parmEndDate(),
            conPeek(_tblTime.parmSrcDocumentAttr(), 1),
            conPeek(_tblTime.parmSrcDocumentAttr(), 2),
            _tblTime.dimension().parmCorrectedPeriod()
            ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>timeCodePriority</Name>
				<Source><![CDATA[
        private Integer timeCodePriority(RPayTblTimeCode _timeCode)
    {
        RpayTblSpecTimeTable    specTime = RpayTblSpecTimeTable::findTimeCode(_timeCode);

        return specTime.RecId ? this.getPriorityByType(specTime.RPayTblSpecTimeType) : #lowestPriority;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>