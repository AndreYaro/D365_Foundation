<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayHRMPivotTableView</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rPayHRMPivotTableView
{
    #define.NumberFormat("#,##0.00")
    #define.plFunctionSum(1)

    FormActiveXControl        pivotTable;
    FormActiveXControl        excelSheet;

    COM                       ptView;
    COM                       ptData;
    COM                       ptTotals;
    COM                       ptFieldSets;
    COM                       ptDataAxis;
    COM                       ptTitleBar;

    RPayHRMPivotTableMetaData pivotTableMetadata;

    Map                       mapFieldNameCaption;
    Set                       setMeasureFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
        private void init()
    {
        InteropPermission perm;
        int               lines = infologLine();
        ;

        perm = new InteropPermission(InteropKind::ComInterop);
        perm.assert();

        try
        {
            ptView      = pivotTable.activeView();
            ptData      = pivotTable.activeData();
            ptTotals    = ptView.totals();
            ptFieldSets = ptView.fieldSets();
            ptDataAxis  = ptView.dataAxis();
            ptTitleBar  = ptView.titleBar();
        }
        catch
        {
            infolog.clear(lines);
        }

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void new(FormActiveXControl        _pivotTable,
             RPayHRMPivotTableMetaData _pivotTableMetadata)
    {
        ;

        pivotTableMetadata  = _pivotTableMetadata;
        setMeasureFields    = pivotTableMetadata.measureFields();
        mapFieldNameCaption = pivotTableMetadata.fieldNameCaption();
        pivotTable          = _pivotTable;

        this.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeTotalsFromDimensionList</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void removeTotalsFromDimensionList()
    {
        InteropPermission perm;
        int               lines = infologLine();
        SetIterator       it = new SetIterator(setMeasureFields);
        str               fldName;
        COM               ptFieldSet;
        ;

        perm = new InteropPermission(InteropKind::ComInterop);
        perm.assert();

        try
        {
            while (it.more())
            {
                fldName = it.value();
                ptFieldSet = ptFieldSets.item(fldName);
                ptFieldSet.displayInFieldList(false);
                it.next();
            }
        }
        catch
        {
            infolog.clear(lines);
        }

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public void run()
    {
        InteropPermission perm;
        int               lines = infologLine();
        COM               pivotFields;
        COM               pivotField;
        COM               pivotFieldSet;
        int               idxFieldSets;
        int               cntFieldSets;
        int               idxFields;
        int               cntFields;
        ;

        perm = new InteropPermission(InteropKind::ComInterop);
        perm.assert();

        try
        {
            cntFieldSets = ptFieldSets.count();

            for (idxFieldSets=0; idxFieldSets<cntFieldSets; idxFieldSets++)
            {
                ptTitleBar.visible(false);
                pivotFieldSet = ptFieldSets.item(idxFieldSets);
                this.setFieldName(pivotFieldSet);
                pivotFields = pivotFieldSet.fields();
                cntFields = pivotFields.count();
                for (idxFields=0; idxFields<cntFields; idxFields++)
                {
                    pivotField = pivotFields.item(idxFields);
                    this.setFieldName(pivotField);
                    this.setTotals(pivotField);
                }
            }
            ptData.hideDetails();

            pivotTable.allowDetails(false);
            pivotTable.allowFiltering(false);
            pivotTable.allowFiltering(true);
            pivotTable.allowGrouping(true);

            this.removeTotalsFromDimensionList();
        }
        catch
        {
            infolog.clear(lines);
        }

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFieldName</Name>
				<Source><![CDATA[
        private void setFieldName(COM _object)
    {
        MapIterator nameIt;
        str         objName;
        int         suffLen;
        int         idxSpace;
        int         subLen;
        str         fldName;
        str         objCaption;
        ;

        objName = _object.name();

        nameIt = new MapIterator(mapFieldNameCaption);

        while (nameIt.more())
        {
            fldName = nameIt.key();
            idxSpace = strFind(objName, " ", 1, strLen(objName));

            if (! idxSpace)
            {
                subLen = strLen(objName);
            }
            else
            {
                subLen = idxSpace-1;
            }
            if (subStr(objName, 1, subLen) == fldName)
            {
                objCaption = _object.caption();
                suffLen = strLen(objCaption) - strLen(fldName);
                if (suffLen)
                {
                    objCaption = nameIt.value() + subStr(objCaption, strLen(fldName)+1, suffLen+1);
                }
                else
                {
                    objCaption = nameIt.value();
                }

                _object.caption(objCaption);
                break;
            }
            nameIt.next();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTotals</Name>
				<Source><![CDATA[
        private void setTotals(COM _ptField)
    {
        InteropPermission perm;
        int               lines = infologLine();
        str               fldName;
        COM               pivotTotal;

        #define.space(' ')
        ;

        perm = new InteropPermission(InteropKind::ComInterop);
        perm.assert();

        try
        {
            fldName = _ptField.name();
            if (setMeasureFields.in(fldName))
            {
                pivotTotal = ptView.addTotal("@SYS7391" + #space + fldName, _ptField, #plFunctionSum);
                pivotTotal.numberFormat(#NumberFormat);
                pivotTotal.caption(_ptField.caption());
                ptDataAxis.insertTotal(pivotTotal);
            }
        }
        catch
        {
            infolog.clear(lines);
        }

        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>