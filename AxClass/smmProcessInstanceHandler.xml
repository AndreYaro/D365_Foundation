<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmProcessInstanceHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Event handler for <c>smmProcessActivities</c>.
/// </summary>
class smmProcessInstanceHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SmmProcessInstance_onConstructHierarchyTemplateCopying</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for after the <c>smmProcessInstance.onConstructHierarchyTemplateCopying</c> method call.
    /// </summary>
    /// <param name="_toStage">The stage being changed to.</param>
    /// <param name="_last">Whether it is the last stage or not.</param>
    /// <param name="_elementNumber">The current element number.</param>
    /// <param name="_result">Add an instance of HierarchyTemplateCopying to the result.</param>
    [SubscribesTo(classStr(SmmProcessInstance), delegateStr(SmmProcessInstance, onConstructHierarchyTemplateCopying))]
    public static void SmmProcessInstance_onConstructHierarchyTemplateCopying(ElementNumber _toStage, boolean _last, ElementNumber _elementNumber, EventHandlerResult _result)
    {
        if (_elementNumber != _toStage && !_last)
        {
            // Change stage and create nodes
            HierarchyTemplateCopying_CRM hierarchyTemplateCopying;
            hierarchyTemplateCopying = new HierarchyTemplateCopying_CRM();
            _result.result(hierarchyTemplateCopying);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>SmmProcessInstance_onTransferExistingActivities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Event handler for after the <c>smmProcessInstance.transferExistingActivities</c> method call.
    /// </summary>
    /// <param name="_eventArgs">The <c>smmProcessInstanceEventArgs</c> instance.</param>
    [SubscribesTo(classStr(SmmProcessInstance), delegateStr(SmmProcessInstance, onTransferExistingActivities))]
    public static void SmmProcessInstance_onTransferExistingActivities(smmProcessInstanceEventArgs _eventArgs)
    {
        smmCampaignSelection smmCampaignSelection;

        if (_eventArgs.parmParentType() == smmActivityParentType::Campaign)
        {
            select firstonly RecId from smmCampaignSelection
                where smmCampaignSelection.ActivityNumber == _eventArgs.parmActivityNumber();

            if (smmCampaignSelection.RecId)
            {
                _eventArgs.parmContinue(true);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>