<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMReport_T4</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RHRMReport_T4 extends RHRMReport implements BatchRetryable
{
     RHRMVirtualNetworkLanguageSkill        rHRMVirtualNetworkLanguageSkill;
     RHRMVirtualNetworkEducation            rHRMVirtualNetworkEducation;
     RHRMVirtualNetworkFamily               rhrmEmployeeContact;
     RHRMVirtualNetworkEvaluation           rHRMVirtualNetworkEvaluation;
     RHRMVirtualNetworkRaisingSkill         rHRMVirtualNetworkRaisingSkill;
     RHRMVirtualNetworkVocationalRetraining rHRMVirtualNetworkVocationalRetraining;
     RPayVacationTable                      rPayVacationTable;
     RHRMVirtualNetworkBenefit              rHRMVirtualNetworkBenefit;
     RHRMEmplTable                              emplTable;
     RHRMeducationType                      rHRMeducationType;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>animationBoxCaption</Name>
				<Source><![CDATA[
    public str animationBoxCaption()
    {
        return "@RUP1718";
    }

]]></Source>
			</Method>
			<Method>
				<Name>animationBoxText</Name>
				<Source><![CDATA[
    public str animationBoxText()
    {
        return "@RUP1818";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initData</Name>
				<Source><![CDATA[
    public void initData(Args _args)
    {
        super(_args);
        emplTable               = _args.record();
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    public boolean prompt()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        str             r1;
        RPayHistory     rPayHistory;
        date            reportDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        RHRMPersonTable personTable = emplTable.personTable();
        DirPersonName   dirPersonName = personTable.dirPersonName();

        rPayHistory = RPayHistory::getHistoryLineByDate(emplTable.EmployeeId, reportDate);

        wordDocument.insertFieldValue(#CI_Name, CompanyInfo::find().Name);

        wordDocument.insertFieldValue(#CI_CodeOKPO_RU, CompanyInfoHelper::partyOKPOasOfDate_RU(CompanyInfo::find(), reportDate));

        wordDocument.insertFieldValue(#ET_CreateDate_RU, this.dateInNumber(reportDate));

        wordDocument.insertFieldValue(#organization, rPayHistory.HrmOrganizationId);

        wordDocument.insertFieldValue(#title, rPayHistory.titleId());

        wordDocument.insertFieldValue(#ET_EmplId, emplTable.EmployeeId);

        wordDocument.insertFieldValue(#Alfavit,substr(dirPersonName.LastName,1,1));

        wordDocument.insertFieldValue(#ET_SortOfWork_RU, enum2str(emplTable.SortOfWork));

        wordDocument.insertFieldValue(#VNT_gender,substr(enum2str(personTable.Gender),1,1));

        wordDocument.insertFieldValue(#ET_lastName, dirPersonName.LastName);

        wordDocument.insertFieldValue(#ET_firstName, dirPersonName.FirstName);

        wordDocument.insertFieldValue(#ET_middleName, dirPersonName.MiddleName);

        wordDocument.insertFieldValue(#ET_BirthDate, this.dateInNumber(personTable.hcmPersonPrivateDetails().BirthDate));

        select firstonly rHRMVirtualNetworkEducation
            order by EndDate desc
            where rHRMVirtualNetworkEducation.AfterCollege        == RHRMAfterCollegeName::None                &&
                  rHRMVirtualNetworkEducation.PersonnelNumber    == personTable.PersonnelNumber
            exists join rHRMeducationType
                where rHRMVirtualNetworkEducation.EducationTypeId == rHRMeducationType.EducationTypeId         &&
                      rHRMeducationType.EducationKind             == RHRMEducationKind::Higher;

        r1 = rHRMVirtualNetworkEducation.Description == "" || year(rHRMVirtualNetworkEducation.EndDate) <= 0 ? "" : "@GLS116882";

        if (rHRMVirtualNetworkEducation.EndDate)
            r1 = int2str(year(rHRMVirtualNetworkEducation.EndDate));

        wordDocument.insertFieldValue(#Higher, this.delimiter(rHRMVirtualNetworkEducation.Description, r1));

        select firstonly rHRMVirtualNetworkEducation
            order by EndDate desc, AfterCollege desc
            where rHRMVirtualNetworkEducation.AfterCollege     != RHRMAfterCollegeName::None &&
                  rHRMVirtualNetworkEducation.PersonnelNumber == personTable.PersonnelNumber;

        wordDocument.insertFieldValue(#VNEdu_afterCollege, enum2str(rHRMVirtualNetworkEducation.AfterCollege));
        wordDocument.insertFieldValue(#VNEdu_description_a, rHRMVirtualNetworkEducation.Description);

        wordDocument.insertFieldValue(#VNEdu_Diploma_a, rHRMVirtualNetworkEducation.EducationDiploma);

        wordDocument.insertFieldValue(#VNEdu_DiplomaType_a,
                                          enum2str(rHRMVirtualNetworkEducation.DiplomaCertificate));

        if (rHRMVirtualNetworkEducation.EndDate)
             wordDocument.insertFieldValue(#VNEdu_endDate_a, int2str(year(rHRMVirtualNetworkEducation.EndDate)));

        wordDocument.insertFieldValue(#VNEdu_Special_a,rHRMVirtualNetworkEducation.EducationSpecialization);
        wordDocument.insertFieldValue(#VNEdu_CodeOKCO_a,rHRMVirtualNetworkEducation.EducationCodeOKCO);

        wordDocument.insertFieldValue(#ET_Phone, personTable.hcmWorker().phone());
        wordDocument.unlinkFields();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>