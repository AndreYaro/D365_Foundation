<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjMissingHourRegContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for ProjMissingHourReg SSRS report
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(ProjMissingHourRegUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly)
]
public class ProjMissingHourRegContract implements SysOperationValidatable
{
    ProjPeriodId periodId;
    ProjPeriodFrom periodFrom;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPeriodFrom</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PeriodFrom.
    /// </summary>
    /// <param name="_periodFrom">
    /// The new value of the datacontract parameter PeriodFrom; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter PeriodFrom
    /// </returns>
    [
        DataMemberAttribute('PeriodFrom'),
        SysOperationLabelAttribute(literalstr("@SYS35856")),
        SysOperationHelpTextAttribute(literalstr("@SYS25445"))
    ]
    public ProjPeriodFrom parmPeriodFrom(ProjPeriodFrom _periodFrom = periodFrom)
    {
        periodFrom = _periodFrom;
        return periodFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter PeriodId.
    /// </summary>
    /// <param name="_periodId">
    /// The new value of the datacontract parameter PeriodId; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter PeriodId
    /// </returns>
    [
        DataMemberAttribute('PeriodId'),
        SysOperationLabelAttribute(literalstr("@SYS22717")),
        SysOperationHelpTextAttribute(literalstr("@SYS50471"))
    ]
    public ProjPeriodId parmPeriodId(ProjPeriodId _periodId = periodId)
    {
        periodId = _periodId;
        return periodId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the parameters.
    /// </summary>
    /// <returns>
    ///    true if the parameters are valid; otherwise, false
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!periodId)
        {
            isValid = checkFailed(strFmt("@BI:ReportParameterMissingValue", "@SYS22717"));
        }
        else if (!ProjPeriodTable::exist(periodId))   //check to make sure period id exists
        {
            isValid = checkFailed(strFmt("@SYS134109", periodId, "@SYS22717"));
        }

        if (!periodFrom)
        {
            isValid = checkFailed(strFmt("@BI:ReportParameterMissingValue", "@SYS35856"));
        }
        else if (isValid && !ProjPeriodLine::exist(periodId, periodFrom))   //make sure the date is from the selected period id
        {
            isValid = checkFailed(strFmt("@SYS134109", periodFrom, "@SYS35856"));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>