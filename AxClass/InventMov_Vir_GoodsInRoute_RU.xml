<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_Vir_GoodsInRoute_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventMov_Vir_GoodsInRoute_RU extends InventMov_Virtuel
{
    boolean                         mustBeBookedPhysicalRevenue;
    LedgerPostingType               postingPhysicalRevenue;
    LedgerDimensionDefaultAccount   accountPhysicalRevenue;
    LedgerPostingType               postingPhysicalRevenueOffset;
    LedgerDimensionDefaultAccount   accountPhysicalRevenueOffset;

    boolean                         mustBeBookedPhysicalTax;
    LedgerPostingType               postingPhysicalTax;
    LedgerDimensionDefaultAccount   accountPhysicalTax;

    AmountMSTPhysicalRevenue        estimatedPhysicalRevenue;
    AmountMST                       estimatedPhysicalTax;

    CustVendAC                      custVendAC;

    InventDimId                     inventDimIdSales;
    InventTransOriginId             inventTransOriginSales;
    SalesCategory                   salesCategory;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountPhysicalRevenue</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount accountPhysicalRevenue()
    {
        if (mustBeBookedPhysicalRevenue)
        {
            return accountPhysicalRevenue;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountPhysicalRevenueOffset</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount accountPhysicalRevenueOffset()
    {
        if (mustBeBookedPhysicalRevenue)
        {
            return accountPhysicalRevenueOffset;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountPhysicalTax</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount accountPhysicalTax()
    {
        if (mustBeBookedPhysicalTax)
        {
            return accountPhysicalTax;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>custVendAc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets customer account number.
    /// </summary>
    /// <returns>
    /// Account number of the customer.
    /// </returns>
    CustVendAC custVendAc()
    {
        return custVendAC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTransFromBuffer</Name>
				<Source><![CDATA[
        public void initInventTransFromBuffer(InventTrans _inventTrans, InventMovement _movement_orig)
    {
        super(_inventTrans, _movement_orig);

        _inventTrans.InventDimIdSales_RU        = inventDimIdSales;
        _inventTrans.InventTransOriginSales_RU  = inventTransOriginSales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeBookedPhysicalRevenue</Name>
				<Source><![CDATA[
        boolean mustBeBookedPhysicalRevenue()
    {
        return mustBeBookedPhysicalRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeBookedPhysicalTax</Name>
				<Source><![CDATA[
        boolean mustBeBookedPhysicalTax()
    {
        return mustBeBookedPhysicalTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeExpectedAgain</Name>
				<Source><![CDATA[
        boolean mustBeExpectedAgain()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeRemainControlled</Name>
				<Source><![CDATA[
        boolean mustBeRemainControlled()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustBeSameTransSign</Name>
				<Source><![CDATA[
        boolean mustBeSameTransSign()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustCreateQuarantineOrder</Name>
				<Source><![CDATA[
        boolean mustCreateQuarantineOrder()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
        InventMovement newMovement_Orig()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountPhysical</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmAccountPhysical(LedgerDimensionDefaultAccount _accountPhysical = accountPhysical)
    {
        LedgerDimensionDefaultAccount ret = super(_accountPhysical);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountPhysicalRevenue</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmAccountPhysicalRevenue(LedgerDimensionDefaultAccount _accountPhysicalRevenue = accountPhysicalRevenue)
    {
        accountPhysicalRevenue = _accountPhysicalRevenue;
        return accountPhysicalRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountPhysicalRevenueOffset</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmAccountPhysicalRevenueOffset(LedgerDimensionDefaultAccount _accountPhysicalRevenueOffset = accountPhysicalRevenueOffset)
    {
        accountPhysicalRevenueOffset = _accountPhysicalRevenueOffset;
        return accountPhysicalRevenueOffset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountPhysicalTax</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmAccountPhysicalTax(LedgerDimensionDefaultAccount _accountPhysicalTax = accountPhysicalTax)
    {
        accountPhysicalTax = _accountPhysicalTax;
        return accountPhysicalTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendAC</Name>
				<Source><![CDATA[
        public CustVendAC parmCustVendAC(CustVendAC _custVendAC = custVendAC)
    {
        custVendAC = _custVendAC;
        return custVendAC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEstimatedPhysicalRevenue</Name>
				<Source><![CDATA[
        public AmountMSTPhysicalRevenue parmEstimatedPhysicalRevenue(AmountMSTPhysicalRevenue _estimatedPhysicalRevenue = estimatedPhysicalRevenue)
    {
        estimatedPhysicalRevenue = _estimatedPhysicalRevenue;
        return estimatedPhysicalRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEstimatedPhysicalTax</Name>
				<Source><![CDATA[
        public AmountMST parmEstimatedPhysicalTax(AmountMST _estimatedPhysicalTax = estimatedPhysicalTax)
    {
        estimatedPhysicalTax = _estimatedPhysicalTax;
        return estimatedPhysicalTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimIdSales</Name>
				<Source><![CDATA[
        public InventDimId parmInventDimIdSales(InventDimId _inventDimIdSales = inventDimIdSales)
    {
        inventDimIdSales = _inventDimIdSales;
        return inventDimIdSales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransOriginSales</Name>
				<Source><![CDATA[
        public InventTransOriginId parmInventTransOriginSales(InventTransOriginId _inventTransOriginSales = inventTransOriginSales)
    {
        inventTransOriginSales = _inventTransOriginSales;
        return inventTransOriginSales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMustBeBookedPhysically</Name>
				<Source><![CDATA[
        public boolean parmMustBeBookedPhysically(boolean _mustBeBookedPhysically = mustBeBookedPhysically)
    {
        boolean ret = super(_mustBeBookedPhysically);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMustBeBookedPhysicalRevenue</Name>
				<Source><![CDATA[
        public boolean parmMustBeBookedPhysicalRevenue(boolean _mustBeBookedPhysicalRevenue = mustBeBookedPhysicalRevenue)
    {
        mustBeBookedPhysicalRevenue = _mustBeBookedPhysicalRevenue;
        return mustBeBookedPhysicalRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMustBeBookedPhysicalTax</Name>
				<Source><![CDATA[
        public boolean parmMustBeBookedPhysicalTax(boolean _mustBeBookedPhysicalTax = mustBeBookedPhysicalTax)
    {
        mustBeBookedPhysicalTax = _mustBeBookedPhysicalTax;
        return mustBeBookedPhysicalTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetAccountPhysical</Name>
				<Source><![CDATA[
        public LedgerDimensionDefaultAccount parmOffsetAccountPhysical(LedgerDimensionDefaultAccount _offsetAccountPhysical = offsetAccountPhysical)
    {
        LedgerDimensionDefaultAccount ret = super(_offsetAccountPhysical);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingOffsetPhysical</Name>
				<Source><![CDATA[
        public LedgerPostingType parmPostingOffsetPhysical(LedgerPostingType _postingOffsetPhysical = postingOffsetPhysical)
    {
        LedgerPostingType ret = super(_postingOffsetPhysical);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingPhysical</Name>
				<Source><![CDATA[
        public LedgerPostingType parmPostingPhysical(LedgerPostingType _postingPhysical = postingPhysical)
    {
        LedgerPostingType ret = super(_postingPhysical);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingPhysicalRevenue</Name>
				<Source><![CDATA[
        public LedgerPostingType parmPostingPhysicalRevenue(LedgerPostingType _postingPhysicalRevenue = postingPhysicalRevenue)
    {
        postingPhysicalRevenue = _postingPhysicalRevenue;
        return postingPhysicalRevenue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingPhysicalRevenueOffset</Name>
				<Source><![CDATA[
        public LedgerPostingType parmPostingPhysicalRevenueOffset(LedgerPostingType _postingPhysicalRevenueOffset = postingPhysicalRevenueOffset)
    {
        postingPhysicalRevenueOffset = _postingPhysicalRevenueOffset;
        return postingPhysicalRevenueOffset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingPhysicalTax</Name>
				<Source><![CDATA[
        public LedgerPostingType parmPostingPhysicalTax(LedgerPostingType _postingPhysicalTax = postingPhysicalTax)
    {
        postingPhysicalTax = _postingPhysicalTax;
        return postingPhysicalTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesCategory</Name>
				<Source><![CDATA[
        public SalesCategory parmSalesCategory(SalesCategory _salesCategory = salesCategory)
    {
        salesCategory = _salesCategory;
        return salesCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseEnteredPriceAsCost</Name>
				<Source><![CDATA[
        public boolean parmUseEnteredPriceAsCost(boolean _userEnteredPriceAsCost = userEnteredPriceAsCost)
    {
        userEnteredPriceAsCost = _userEnteredPriceAsCost;
        return userEnteredPriceAsCost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingPhysicalRevenue</Name>
				<Source><![CDATA[
        public LedgerPostingType postingPhysicalRevenue()
    {
        if (mustBeBookedPhysicalRevenue)
        {
            return postingPhysicalRevenue;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingPhysicalRevenueOffset</Name>
				<Source><![CDATA[
        public LedgerPostingType postingPhysicalRevenueOffset()
    {
        if (mustBeBookedPhysicalRevenue)
        {
            return postingPhysicalRevenueOffset;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingPhysicalTax</Name>
				<Source><![CDATA[
        public LedgerPostingType postingPhysicalTax()
    {
        if (mustBeBookedPhysicalTax)
        {
            return postingPhysicalTax;
        }
        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
