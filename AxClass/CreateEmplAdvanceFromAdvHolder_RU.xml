<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreateEmplAdvanceFromAdvHolder_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Creates advandce report for specific employee.
/// </summary>
class CreateEmplAdvanceFromAdvHolder_RU
{
    EmplAdvTable_RU emplAdvTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new Advance report record and initializes it with data from <c>EmployeeTable_RU</c> and opens EmplAdvTable_RU form
    /// </summary>
    /// <param name="_employeeTable">
    /// <c>EmployeeTable_RU</c> record used for initialization
    /// </param>
    /// <returns>
    /// Created <c>EmplAdvTable_RU</c> record
    /// </returns>
    public EmplAdvTable_RU create(EmployeeTable_RU _employeeTable)
    {
        EmplAdvTableForm_RU emplAdvTableForm = new EmplAdvTableForm_RU();

        ttsbegin;

        emplAdvTableForm.initValues(emplAdvTable);

        emplAdvTable.EmplAccount = _employeeTable.EmployeeId;
        emplAdvTable.DefaultDimension = HcmEmployment::find(_employeeTable.HcmEmployment).DefaultDimension;
        // <RUPAY>
        if (emplAdvTable.validateWrite())
        {
            emplAdvTable.insert();
        }
        // </RUPAY>

        ttscommit;

        return emplAdvTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static CreateEmplAdvanceFromAdvHolder_RU construct()
    {
        return new CreateEmplAdvanceFromAdvHolder_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        EmplAdvTable_RU                 emplAdvTable;
        CreateEmplAdvanceFromAdvHolder_RU   emplAdvanceFromAdvHolder = CreateEmplAdvanceFromAdvHolder_RU::construct();
        Args                            emplAdvTableArgs = new Args();

        emplAdvTable = emplAdvanceFromAdvHolder.create(_args.record());

        // <RUPAY>
        if (emplAdvTable)
        {
        // </RUPAY>
            emplAdvTableArgs.record(emplAdvTable);
            emplAdvTableArgs.caller(_args.caller());
            emplAdvTableArgs.parmObject(_args.caller());
            emplAdvTableArgs.openMode(OpenMode::Edit);
            new MenuFunction(menuitemDisplayStr(EmplAdvTable_Action), MenuItemType::Display).run(emplAdvTableArgs);
        // <RUPAY>
        }
        // </RUPAY>
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>