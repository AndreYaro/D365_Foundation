<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ForecastAccumulate</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class ForecastAccumulate
{
    ItemId              itemId;
    container           accumRecId;
    container           accumQty;
    container           accumCWQty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accumulate</Name>
				<Source><![CDATA[
    void accumulate(ItemId  _itemId)
    {
        ForecastInvent      forecastInvent;
        InventQty           acc;
        PdsCWInventQty      accCW = 0;

        if (itemId == _itemId)
            return;

        itemId = _itemId;

        acc = 0;

        while select QtyInvent, RecId, PdsCWQty
         from forecastInvent
            // Must ensure ordering to calculate accumulated values
            index ItemModelIdx
            where forecastInvent.ItemId == itemId
        {
            acc += forecastInvent.QtyInvent;

            accumRecId += [forecastInvent.RecId];
            accumQty   += [acc];
            accCW += forecastInvent.PdsCWQty;
            accumCWQty += [accCW];
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>accumulated</Name>
				<Source><![CDATA[
    InventQty  accumulated(recId recId)
    {
        Integer         position = confind(accumRecId,recId);
        InventQty       qty;

        if (position)
        {
            qty   = conpeek(accumQty,position);
        }

        return qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    container pack()
    {
        return [accumRecId,accumQty, accumCWQty];
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWAccumulated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the accumulated catch weight quantity.
    /// </summary>
    /// <param name="recId">
    /// A record ID of the forecast record.
    /// </param>
    /// <returns>
    /// A catch weight inventory quantity.
    /// </returns>
    PdsCWInventQty  pdsCWAccumulated(recId recId)
    {
        Integer         position = confind(accumRecId,recId);
        PdsCWInventQty  cwQty;

        if (position)
        {
            cwQty   = conpeek(accumCWQty,position);
        }

        return cwQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    void unpack(container c)
    {
        [accumRecId,accumQty, accumCWQty] = c;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accumulateItem</Name>
				<Source><![CDATA[
    static container accumulateItem(ItemId itemId)
    {
        ForecastAccumulate  forecastAccumulate = new ForecastAccumulate();
        forecastAccumulate.accumulate(itemId);

        return forecastAccumulate.pack();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>