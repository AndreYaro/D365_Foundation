<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxVendInvoiceInfoLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxVendInvoiceInfoLine extends AxVendDocumentLineMap
{
    VendInvoiceInfoLine vendInvoiceInfoLine;

    str item;
    AxInventDim axInventDim;

    int axVendInvoiceInfoTableIdx;
    boolean isTableToLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axVendInvoiceInfoTable</Name>
				<Source><![CDATA[
    public AxVendInvoiceInfoTable axVendInvoiceInfoTable(AxVendInvoiceInfoTable _axVendInvoiceInfoTable = null)
    {
        AxVendInvoiceInfoTable axVendInvoiceInfoTable;

        if (!axVendInvoiceInfoTableIdx)
        {
            axVendInvoiceInfoTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axVendInvoiceInfoTable))
        {
            this.classCacheInsert(axVendInvoiceInfoTableIdx, _axVendInvoiceInfoTable);
            axVendInvoiceInfoTable = _axVendInvoiceInfoTable;
        }
        else
        {
            if (this.classCacheExist(axVendInvoiceInfoTableIdx))
            {
                axVendInvoiceInfoTable = this.classCacheLookup(axVendInvoiceInfoTableIdx);
            }
            else
            {
                this.setTableRefId();
                axVendInvoiceInfoTable = AxVendInvoiceInfoTable::newVendInvoiceInfoTable(
                                            VendInvoiceInfoTable::find(this.parmParmId(), this.parmTableRefId()));

                this.classCacheInsert(axVendInvoiceInfoTableIdx, axVendInvoiceInfoTable);
            }
        }

        return axVendInvoiceInfoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _vendInvoiceInfoLine = vendInvoiceInfoLine)
    {
        if (!prmisDefault(_vendInvoiceInfoLine))
        {
            super(_vendInvoiceInfoLine);
            vendInvoiceInfoLine = _vendInvoiceInfoLine as VendInvoiceInfoLine;
        }

        return vendInvoiceInfoLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateField</Name>
				<Source><![CDATA[
    protected boolean checkTableValidateField(fieldId _fieldNum)
    {
        return vendInvoiceInfoLine.validateField(_fieldNum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkTableValidateWrite</Name>
				<Source><![CDATA[
    protected boolean checkTableValidateWrite()
    {
        return vendInvoiceInfoLine.validateWrite();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an empty record from the table to which this AxBC class relates.
    /// </summary>
    /// <returns>
    ///    An empty record from the table to which this AxBC class relates.
    /// </returns>
    /// <remarks>
    ///    The table to which this AxBC class relates has the same name as the class without the first two
    ///    letters, a and x.
    /// </remarks>
    protected Common emptyRecord()
    {
        VendInvoiceInfoLine localVendInvoiceInfoLine;
        return localVendInvoiceInfoLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxVendInvoiceInfoLine, parmTableRefId));
        this.setParmMethodAsNotMandatory(methodStr(AxVendInvoiceInfoLine, parmOrigPurchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTableToLine</Name>
				<Source><![CDATA[
    public boolean isTableToLine(boolean _isTableToLine = isTableToLine)
    {
        if (!prmisDefault(_isTableToLine))
        {
            isTableToLine = _isTableToLine;
        }

        return isTableToLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new()
    {
        //axInventDim = AxInventDim_VendInvoiceInfoLine::newAxVendInvoiceInfoLine(this);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    public RefRecId parmAccountingDistributionTemplate(RefRecId _accountingDistributionTemplate = 0)
    {
        if (!prmisDefault(_accountingDistributionTemplate))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, AccountingDistributionTemplate), _accountingDistributionTemplate);
        }

        return vendInvoiceInfoLine.AccountingDistributionTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdvanceApplicationId</Name>
				<Source><![CDATA[
    public recId parmAdvanceApplicationId(recId _advanceApplicationId = 0)
    {
        if (!prmisDefault(_advanceApplicationId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, AdvanceApplicationId), _advanceApplicationId);
        }

        return vendInvoiceInfoLine.AdvanceApplicationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChangedManually</Name>
				<Source><![CDATA[
    public NoYes parmChangedManually(NoYes _changedManually = NoYes::No)
    {
        if (!prmisDefault(_changedManually))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, ChangedManually), _changedManually);
        }

        return vendInvoiceInfoLine.ChangedManually;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClosed</Name>
				<Source><![CDATA[
    public NoYes parmClosed(NoYes _closed = NoYes::No)
    {
        if (!prmisDefault(_closed))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Closed), _closed);
        }

        return vendInvoiceInfoLine.Closed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest _countyOrigDest = '')
    {
        if (!prmisDefault(_countyOrigDest))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, CountyOrigDest), _countyOrigDest);
        }

        return vendInvoiceInfoLine.CountyOrigDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    public str parmCurrencyCode(str _currencyCode = '')
    {
        if (!prmisDefault(_currencyCode))
        {
            // no value mapping on inbound
            this.setField(fieldNum(VendInvoiceInfoLine, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(vendInvoiceInfoLine.CurrencyCode);
        }
        else
        {
            return vendInvoiceInfoLine.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, DefaultDimension), _defaultDimension);
        }

        return vendInvoiceInfoLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public VendName parmDeliveryName(VendName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, DeliveryName), _deliveryName);
        }

        return vendInvoiceInfoLine.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return vendInvoiceInfoLine.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public InvoiceLineDescription parmDescription(InvoiceLineDescription _description = '')
    {
        if (!prmisDefault(_description))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Description), _description);
        }

        return vendInvoiceInfoLine.Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentOrigin</Name>
				<Source><![CDATA[
    public DocumentOrigin parmDocumentOrigin(DocumentOrigin _documentOrigin = DocumentOrigin::Manual)
    {
        if (!prmisDefault(_documentOrigin))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, DocumentOrigin), _documentOrigin);
        }

        return vendInvoiceInfoLine.DocumentOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, InventDimId), _inventDimId);
        }

        return vendInvoiceInfoLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventNow</Name>
				<Source><![CDATA[
    public InventQty parmInventNow(InventQty _inventNow = 0)
    {
        if (!prmisDefault(_inventNow))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, InventNow), _inventNow);
        }

        return vendInvoiceInfoLine.InventNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public TradeInventTransId parmInventTransId(TradeInventTransId _inventTransId = '')
    {
        if (!prmisDefault(_inventTransId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, InventTransId), _inventTransId);
        }

        return vendInvoiceInfoLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public str parmInvoiceAccount(str _invoiceAccount = '')
    {
        if (!prmisDefault(_invoiceAccount))
        {
            // no value mapping on inbound
            this.setField(fieldNum(VendInvoiceInfoLine, InvoiceAccount), _invoiceAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(vendInvoiceInfoLine.InvoiceAccount);
        }
        else
        {
            return vendInvoiceInfoLine.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public str parmItemId(str _itemId = '')
    {
        DictField dictField;
        AxVendInvoiceInfoTable axVendInvoiceInfoTable;
        AxVendInvoiceInfoSubTable axVendInvoiceInfoSubTable;

        if (!prmisDefault(_itemId))
        {
            item = _itemId;
            dictField = new DictField(tableNum(VendInvoiceInfoLine),fieldNum(VendInvoiceInfoLine,ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                axVendInvoiceInfoSubTable = this.parentAxBC();
                if (axVendInvoiceInfoSubTable)
                {
                    axVendInvoiceInfoTable = axVendInvoiceInfoSubTable.parentAxBC();
                }

                if (axVendInvoiceInfoTable)
                {
                    item = conPeek(this.axPurchItemId(axVendInvoiceInfoTable.vendInvoiceInfoTable().OrderAccount, _itemId, vendInvoiceInfoLine.inventDim()), 1);
                }
            }

            this.setField(fieldNum(VendInvoiceInfoLine, ItemId), item);
        }

        if (this.valueMappingOutbound())
        {
            return conPeek(this.axPurchItemId(vendInvoiceInfoLine.OrderAccount,vendInvoiceInfoLine.ItemId,vendInvoiceInfoLine.inventDim()),1);
        }
        return vendInvoiceInfoLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    public AmountCur parmLineAmount(AmountCur _lineAmount = 0)
    {
        if (!prmisDefault(_lineAmount))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, LineAmount), _lineAmount);
        }

        return vendInvoiceInfoLine.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public PurchLineDisc parmLineDisc(PurchLineDisc _lineDisc = 0)
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, LineDisc), _lineDisc);
        }

        return vendInvoiceInfoLine.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, LineNum), _lineNum);
        }

        return vendInvoiceInfoLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    public PurchLinePercent parmLinePercent(PurchLinePercent _linePercent = 0)
    {
        if (!prmisDefault(_linePercent))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, LinePercent), _linePercent);
        }

        return vendInvoiceInfoLine.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    public PurchMultiLnDisc parmMultiLnDisc(PurchMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisDefault(_multiLnDisc))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, MultiLnDisc), _multiLnDisc);
        }

        return vendInvoiceInfoLine.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    public PurchMultiLnPercent parmMultiLnPercent(PurchMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisDefault(_multiLnPercent))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, MultiLnPercent), _multiLnPercent);
        }

        return vendInvoiceInfoLine.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderAccount</Name>
				<Source><![CDATA[
    public str parmOrderAccount(str _orderAccount = '')
    {
        if (!prmisDefault(_orderAccount))
        {
            // no value mapping
            this.setField(fieldNum(VendInvoiceInfoLine, OrderAccount), _orderAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axVendAccount(vendInvoiceInfoLine.OrderAccount);
        }
        else
        {
            return vendInvoiceInfoLine.OrderAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrdering</Name>
				<Source><![CDATA[
    public DocumentStatus parmOrdering(DocumentStatus _ordering = DocumentStatus::None)
    {
        if (!prmisDefault(_ordering))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Ordering), _ordering);
        }

        return vendInvoiceInfoLine.Ordering;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigPurchId</Name>
				<Source><![CDATA[
    public PurchIdOrig parmOrigPurchId(PurchIdOrig _origPurchId = '')
    {
        if (!prmisDefault(_origPurchId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, OrigPurchId), _origPurchId);
        }

        return vendInvoiceInfoLine.OrigPurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParmId</Name>
				<Source><![CDATA[
    public ParmId parmParmId(ParmId _parmId = '')
    {
        if (!prmisDefault(_parmId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, ParmId), _parmId);
        }

        return vendInvoiceInfoLine.ParmId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPDSCalculatedUnitPrice</Name>
				<Source><![CDATA[
    public PDSCalculatedUnitPrice parmPDSCalculatedUnitPrice(PDSCalculatedUnitPrice _calcPrice = 0)
    {
        if (!prmisDefault(_calcPrice))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PDSCalculatedUnitPrice), _calcPrice);
        }

        return vendInvoiceInfoLine.PDSCalculatedUnitPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPDSCalculationId</Name>
				<Source><![CDATA[
    public PDSCalculationId parmPDSCalculationId(PDSCalculationId _calcId = '')
    {
        if (!prmisDefault(_calcId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PDSCalculationId), _calcId);
        }

        return vendInvoiceInfoLine.PDSCalculationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWReceiveNow</Name>
				<Source><![CDATA[
    public PdsCWInventQty parmPdsCWReceiveNow(PdsCWInventQty _cwReceiveNow = 0)
    {
        if (!prmisdefault(_cwReceiveNow))
        {
            this.setField(fieldnum(VendInvoiceInfoLine, PdsCWReceiveNow), _cwReceiveNow);
        }

        return vendInvoiceInfoLine.PdsCWReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainAfter</Name>
				<Source><![CDATA[
    public PdsCWInventQty parmPdsCWRemainAfter(PdsCWInventQty _cwRemainAfter = 0)
    {
        if (!prmisdefault(_cwRemainAfter))
        {
            this.setField(fieldnum(VendInvoiceInfoLine, PdsCWRemainAfter), _cwRemainAfter);
        }

        return vendInvoiceInfoLine.PdsCWRemainAfter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWRemainBefore</Name>
				<Source><![CDATA[
    public PdsCWInventQty parmPdsCWRemainBefore(PdsCWInventQty _cwRemainBefore = 0)
    {
        if (!prmisdefault(_cwRemainBefore))
        {
            this.setField(fieldnum(VendInvoiceInfoLine, PdsCWRemainBefore), _cwRemainBefore);
        }

        return vendInvoiceInfoLine.PdsCWRemainBefore;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisDefault(_port))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Port), _port);
        }

        return vendInvoiceInfoLine.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisDefault(_priceUnit))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PriceUnit), _priceUnit);
        }

        return vendInvoiceInfoLine.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcurementCategory</Name>
				<Source><![CDATA[
    public PurchCategory parmProcurementCategory(PurchCategory _procurementCategory = 0)
    {
        if (!prmisDefault(_procurementCategory))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, ProcurementCategory), _procurementCategory);
        }

        return vendInvoiceInfoLine.ProcurementCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseLineLineNumber</Name>
				<Source><![CDATA[
    public TradeLineNumber parmPurchaseLineLineNumber(TradeLineNumber _lineNumber = 0)
    {
        if (!prmisDefault(_lineNumber))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PurchaseLineLineNumber), _lineNumber);
        }
        return vendInvoiceInfoLine.PurchaseLineLineNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchCommitmentLine_PSN</Name>
				<Source><![CDATA[
    public RefRecId parmPurchCommitmentLine_PSN(RefRecId _purchCommitmentLine_PSN = 0)
    {
        if (!prmisdefault(_purchCommitmentLine_PSN))
        {
            this.setField(fieldnum(VendInvoiceInfoLine, PurchCommitmentLine_PSN), _purchCommitmentLine_PSN);
        }

        return vendInvoiceInfoLine.PurchCommitmentLine_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchInvoiceLineType</Name>
				<Source><![CDATA[
    public PurchInvoiceLineType parmPurchInvoiceLineType(PurchInvoiceLineType _purchInvoiceLineType = PurchInvoiceLineType::Standard)
    {
        if (!prmisDefault(_purchInvoiceLineType))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, LineType), _purchInvoiceLineType);
        }

        return vendInvoiceInfoLine.LineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchLineRecId</Name>
				<Source><![CDATA[
    public PurchLineRefRecId parmPurchLineRecId(PurchLineRefRecId _purchLineRecId = 0)
    {
        if (!prmisDefault(_purchLineRecId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PurchLineRecId), _purchLineRecId);
        }

        return vendInvoiceInfoLine.PurchLineRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchMarkup</Name>
				<Source><![CDATA[
    public PurchMarkup parmPurchMarkup(PurchMarkup _purchMarkup = 0)
    {
        if (!prmisDefault(_purchMarkup))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PurchMarkup), _purchMarkup);
        }

        return vendInvoiceInfoLine.PurchMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchPrice</Name>
				<Source><![CDATA[
    public PurchPrice parmPurchPrice(PurchPrice _purchPrice = 0)
    {
        if (!prmisDefault(_purchPrice))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, PurchPrice), _purchPrice);
        }

        return vendInvoiceInfoLine.PurchPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchUnit</Name>
				<Source><![CDATA[
    public PurchUnit parmPurchUnit(PurchUnit _purchUnit = '')
    {
        DictField dictField;

        if (!prmisDefault(_purchUnit))
        {
            dictField = new DictField(tableNum(VendInvoiceInfoLine),fieldNum(VendInvoiceInfoLine,PurchUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_purchUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                _purchUnit = this.axUnitOfMeasureSymbol(_purchUnit);
            }
            else
            {
                this.validateInboundString(_purchUnit,dictField);
            }

            this.setField(fieldNum(VendInvoiceInfoLine, PurchUnit), _purchUnit);
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(vendInvoiceInfoLine.PurchUnit);
        }

        return vendInvoiceInfoLine.PurchUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiveNow</Name>
				<Source><![CDATA[
    public PurchQty parmReceiveNow(PurchQty _receiveNow = 0)
    {
        if (!prmisDefault(_receiveNow))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, ReceiveNow), _receiveNow);
        }

        return vendInvoiceInfoLine.ReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainAfter</Name>
				<Source><![CDATA[
    public PurchQty parmRemainAfter(PurchQty _remainAfter = 0)
    {
        if (!prmisDefault(_remainAfter))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RemainAfter), _remainAfter);
        }

        return vendInvoiceInfoLine.RemainAfter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainAfterInvent</Name>
				<Source><![CDATA[
    public InventQty parmRemainAfterInvent(InventQty _remainAfterInvent = 0)
    {
        if (!prmisDefault(_remainAfterInvent))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RemainAfterInvent), _remainAfterInvent);
        }

        return vendInvoiceInfoLine.RemainAfterInvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBefore</Name>
				<Source><![CDATA[
    public PurchQty parmRemainBefore(PurchQty _remainBefore = 0)
    {
        if (!prmisDefault(_remainBefore))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RemainBefore), _remainBefore);
        }

        return vendInvoiceInfoLine.RemainBefore;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBeforeInvent</Name>
				<Source><![CDATA[
    public InventQty parmRemainBeforeInvent(InventQty _remainBeforeInvent = 0)
    {
        if (!prmisDefault(_remainBeforeInvent))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RemainBeforeInvent), _remainBeforeInvent);
        }

        return vendInvoiceInfoLine.RemainBeforeInvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainBeforeInventPhysical</Name>
				<Source><![CDATA[
    public TradeRemainBeforeInventPhysical parmRemainBeforeInventPhysical(TradeRemainBeforeInventPhysical _remainBeforeInventPhysical = 0)
    {
        if (!prmisDefault(_remainBeforeInventPhysical))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RemainBeforeInventPhysical), _remainBeforeInventPhysical);
        }

        return vendInvoiceInfoLine.RemainBeforeInventPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRequestStatus</Name>
				<Source><![CDATA[
    public VendInvoiceRequestStatus parmRequestStatus(VendInvoiceRequestStatus _requestStatus = VendInvoiceRequestStatus::Draft)
    {
        if (!prmisDefault(_requestStatus))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, RequestStatus), _requestStatus);
        }

        return vendInvoiceInfoLine.RequestStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisDefault(_statProcId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, StatProcId), _statProcId);
        }

        return vendInvoiceInfoLine.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTableRefId</Name>
				<Source><![CDATA[
    public TradeLineRefId parmTableRefId(TradeLineRefId _tableRefId = '')
    {
        if (!prmisDefault(_tableRefId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TableRefId), _tableRefId);
        }

        return vendInvoiceInfoLine.TableRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099Amount</Name>
				<Source><![CDATA[
    public Tax1099Amount parmTax1099Amount(Tax1099Amount _tax1099Amount = 0)
    {
        if (!prmisDefault(_tax1099Amount))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Tax1099Amount), _tax1099Amount);
        }

        return vendInvoiceInfoLine.Tax1099Amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099BoxDetail</Name>
				<Source><![CDATA[
    public Tax1099RecId parmTax1099BoxDetail(Tax1099RecId _tax1099RecId = 0)
    {
        Tax1099BoxDetail tax1099BoxDetail;

        if (!prmisDefault(_tax1099RecId))
        {
            ttsbegin;
            tax1099BoxDetail.data(Tax1099BoxDetail::findRecId(_tax1099RecId));
            tax1099BoxDetail.insert();
            ttscommit;

            this.setField(fieldNum(VendInvoiceInfoLine, Tax1099BoxDetail), tax1099BoxDetail.RecId);
        }

        return vendInvoiceInfoLine.Tax1099BoxDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099Fields</Name>
				<Source><![CDATA[
    public Tax1099FieldsRecId parmTax1099Fields(Tax1099FieldsRecId _tax1099Fields = 0)
    {
        if (!prmisDefault(_tax1099Fields))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Tax1099Fields), _tax1099Fields);
        }

        return vendInvoiceInfoLine.Tax1099Fields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099State</Name>
				<Source><![CDATA[
    public Tax1099State parmTax1099State(Tax1099State _tax1099State = "")
    {
        if (!prmisDefault(_tax1099State))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Tax1099State), _tax1099State);
        }

        return vendInvoiceInfoLine.Tax1099State;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTax1099StateAmount</Name>
				<Source><![CDATA[
    public Tax1099StateAmount parmTax1099StateAmount(Tax1099StateAmount _tax1099StateAmount = 0)
    {
        if (!prmisDefault(_tax1099StateAmount))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Tax1099StateAmount), _tax1099StateAmount);
        }

        return vendInvoiceInfoLine.Tax1099StateAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TaxGroup), _taxGroup);
        }

        return vendInvoiceInfoLine.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    public TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
        if (!prmisDefault(_taxItemGroup))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TaxItemGroup), _taxItemGroup);
        }

        return vendInvoiceInfoLine.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdGroup</Name>
				<Source><![CDATA[
    public TaxWithholdGroup parmTaxWithholdGroup(TaxWithholdGroup _taxWithholdGroup = '')
    {
        if (!prmisDefault(_taxWithholdGroup))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TaxWithholdGroup), _taxWithholdGroup);
        }

        return vendInvoiceInfoLine.TaxWithholdGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdItemGroupHeadingId</Name>
				<Source><![CDATA[
    public TaxWithholdItemGroupId_TH parmTaxWithholdItemGroupHeadingId(TaxWithholdItemGroupId_TH _taxWithholdItemGroupHeadingId = 0)
    {
        if (!prmisDefault(_taxWithholdItemGroupHeadingId))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TaxWithholdItemGroupHeadingId), _taxWithholdItemGroupHeadingId);
        }

        return vendInvoiceInfoLine.TaxWithholdItemGroupHeadingId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisDefault(_transactionCode))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, TransactionCode), _transactionCode);
        }

        return vendInvoiceInfoLine.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisDefault(_transport))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, Transport), _transport);
        }

        return vendInvoiceInfoLine.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBudgetReservationLine_PSN</Name>
				<Source><![CDATA[
    public RefRecId parmBudgetReservationLine_PSN(BudgetReservationLineRecId_PSN _budgetReservationLine = 0)
    {
        if (!prmisDefault(_budgetReservationLine))
        {
            this.setField(fieldNum(VendInvoiceInfoLine, BudgetReservationLine_PSN), _budgetReservationLine);
        }

        return vendInvoiceInfoLine.BudgetReservationLine_PSN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLine</Name>
				<Source><![CDATA[
    public PurchLine purchLine()
    {
        return this.vendInvoiceInfoLine().purchLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        super();
        item = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(VendInvoiceInfoLine, DeliveryPostalAddress)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParmId</Name>
				<Source><![CDATA[
    protected void setParmId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(VendInvoiceInfoLine, ParmId)))
        {
            return;
        }

        if (!this.parmParmId())
        {
            this.parmParmId(this.axVendInvoiceInfoTable().parmParmId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchCommitmentLine_PSN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>PurchCommitmentLine_PSN</c> field in the <c>VendInvoiceInfoLine</c> table.
    /// </summary>
    protected void setPurchCommitmentLine_PSN()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(VendInvoiceInfoLine, PurchCommitmentLine_PSN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        Set tableToLineFields;
        AxVendInvoiceInfoTable axVendInvoiceInfoTable;

        super();

        if (this.isTableToLine())
        {
            axVendInvoiceInfoTable = this.axVendInvoiceInfoTable();

            tableToLineFields = axVendInvoiceInfoTable.getModifiedFields();
        }

        this.vendInvoiceInfoLine().defaultRow(null, null, naReal(), naReal(), naReal(), tableToLineFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableRefId</Name>
				<Source><![CDATA[
    protected void setTableRefId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(VendInvoiceInfoLine, TableRefId)))
        {
            return;
        }

        if (!this.parmTableRefId())
        {
            this.parmTableRefId(this.axVendInvoiceInfoTable().parmTableRefId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBudgetReservationLine_PSN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>BudgetReservationLine_PSN</c> field in the <c>VendInvoiceInfoLine</c> table.
    /// </summary>
    protected void setBudgetReservationLine_PSN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(VendInvoiceInfoLine, BudgetReservationLine_PSN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    public void updateFromInventDim()
    {
        ttsbegin;
        runState = AxBCRunState::Save;
        fieldModified = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        //this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateFields();

        this.validateWrite();

        this.write();

        vendInvoiceInfoLine.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueMapDependingFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs incoming value mapping of fields in which the value mapping for a field depends on another
    ///    field, such as the item, state, and county fields.
    /// </summary>
    /// <remarks>
    ///    This method is used in the save method. Therefore, the incoming value mapping is performed before
    ///    the fields are defaulted.
    /// </remarks>
    protected void valueMapDependingFields()
    {
        if (this.valueMappingInbound())
        {
            if (vendInvoiceInfoLine.OrderAccount && item)
            {
                this.parmItemId(conPeek(this.axPurchItemId(vendInvoiceInfoLine.OrderAccount,item),1));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendDocumentLineMap</Name>
				<Source><![CDATA[
    public VendDocumentLineMap vendDocumentLineMap(VendDocumentLineMap _vendInvoiceInfoLine = vendInvoiceInfoLine)
    {
        return this.vendInvoiceInfoLine(_vendInvoiceInfoLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendInvoiceInfoLine</Name>
				<Source><![CDATA[
    public VendInvoiceInfoLine vendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine = vendInvoiceInfoLine)
    {
        if (_vendInvoiceInfoLine != vendInvoiceInfoLine)
        {
            this.setCurrentRecordFromExternal(_vendInvoiceInfoLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    protected void write()
    {
        super();

        Markup::saveFromPurchOrder(this.purchLine(), this.currentRecord(), this.purchLine().CurrencyCode);
        Markup::connectCustVendTo(this.purchLine(), this.currentRecord());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxVendInvoiceInfoLine construct()
    {
        return new AxVendInvoiceInfoLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVendInvoiceInfoLine</Name>
				<Source><![CDATA[
    public static AxVendInvoiceInfoLine newVendInvoiceInfoLine(VendInvoiceInfoLine _vendInvoiceInfoLine)
    {
        AxVendInvoiceInfoLine axVendInvoiceInfoLine = AxVendInvoiceInfoLine::construct();
        axVendInvoiceInfoLine.vendInvoiceInfoLine(_vendInvoiceInfoLine);

        return axVendInvoiceInfoLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>