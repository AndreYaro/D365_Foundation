<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgResetProdFinishedParametersToDefault</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When run, this class resets the finished parameters of the Shop Floor Control production report to
/// default values.
/// </summary>
/// <remarks>
///  The following fields on the <see cref="T:ProdParmReportFinished" />
///   table are set.
///  <list type="table">
///   <listHeader>
///   <description>Field</description><description>Value</description>
///   </listHeader>
///   <item>
///    <description>
///    BOMAutoConsump
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>BOMAutoConsump::FlushingPrincip</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///   <item>
///    <description>
///    RouteAutoConsump
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>RouteAutoConsump::RouteDependent</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///   <item>
///    <description>
///    EndPickList
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>NoYes::No</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///   <item>
///    <description>
///    EndRouteCard
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>NoYes::No</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///   <item>
///    <description>
///    EndJob
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>NoYes::Yes</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///   <item>
///    <description>
///    AcceptError
///    </description>
///    <description>
///     <list type="bullet">
///      <item>
///       <description>
///       Set to <c>NoYes::Yes</c>
///       </description>
///      </item>
///     </list>
///    </description>
///   </item>
///  </list>
/// </remarks>
class JmgResetProdFinishedParametersToDefault extends RunBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns a class that contains the methods described by the <see cref="T:RunBaseDialogable" />
    ///    interface.
    /// </summary>
    /// <param name="dialog">
    ///    An already initialized dialog can be passed.
    /// </param>
    /// <param name="forceOnClient">
    ///    Specifies if the dialog must be instantiated on the client.
    /// </param>
    /// <returns>
    ///    The class that contains the methods described by the <see cref="T:RunBaseDialogable" /> interface.
    /// </returns>
    /// <remarks>
    ///    A dialog can either be built using the <see cref="T:Dialog" /> system or using a class created in
    ///    the Application Object Tree (AOT).The <c>JmgResetProdFinishedParameters</c> class adds a text to
    ///    the dialog prompting the user to confirm that the report as finished parameters should be reset to
    ///    default values.
    /// </remarks>
    public Object dialog(DialogRunbase dialog = null, boolean forceOnClient = false)
    {
        Dialog ret = this.dialogInternal(dialog, forceOnClient);

        ret.caption("@SYS55764");
        ret.addText("@SYS27477");

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS55764";
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>JmgResetProdFinishedParametersToDefault</c> class
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>JmgResetProdFinishedParametersToDefault</c> class.
    /// </returns>
    public static JmgResetProdFinishedParametersToDefault construct()
    {
        return new JmgResetProdFinishedParametersToDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resets the Production report as finished parameters to default values.
    /// </summary>
    /// <remarks>
    ///    If the class is called from a form, its data source is refreshed. See <see
    ///    cref="T:JmgResetProdFinishedParametersToDefault" /> for a list of default values.This method must
    ///    contain the code that does the actual job of the class.
    /// </remarks>
    ///
    public void run()
    {
        ProdParmReportFinished  prodParmReportFinished;

        super();

        ttsbegin;
        prodParmReportFinished                  = ProdParmReportFinished::find(tablestr(JmgParameters),JmgParameters::version(), true);
        prodParmReportFinished.ParmId           = tablestr(JmgParameters);
        prodParmReportFinished.ProdId           = JmgParameters::version();
        prodParmReportFinished.bomAutoConsump   = BOMAutoConsump::FlushingPrincip;
        prodParmReportFinished.RouteAutoConsump = RouteAutoConsump::RouteDependent;
        prodParmReportFinished.EndPicklist      = NoYes::No;
        prodParmReportFinished.EndRouteCard     = NoYes::No;
        prodParmReportFinished.EndJob           = NoYes::Yes;
        prodParmReportFinished.AcceptError      = NoYes::Yes;
        prodParmReportFinished.write();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedClass)
    {
        boolean ret = super(packedClass);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Provides an entry point for the <c>JmgResetProdFinishedParametersToDefault</c> class when it is
    ///    called from a menu item.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the <c>JmgResetProdFinishedParametersToDefault</c> class.
    /// </param>
    /// <remarks>
    ///       Use the
    ///    <c>
    ///       main
    ///    </c>
    ///       class design pattern whenever a class is called from a menu item. Do not call the
    ///    <c>
    ///       main
    ///    </c>
    ///       method explicitly from the code; call it implicitly from a menu item.Typically, you would:
    ///    <list type="bullet">
    ///       <item>
    ///          <description>
    ///             Instantiate the class by calling the static <c>construct</c> method.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Call the <c>prompt</c> method to create a dialog box.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Call the <c>run</c> method, if the user clicks OK in the dialog box.
    ///          </description>
    ///       </item>
    ///    </list>
    /// </remarks>
    public static void main(Args _args)
    {
        JmgResetProdFinishedParametersToDefault jmgResetProdFinishedParametersToDefault = JmgResetProdFinishedParametersToDefault::construct();

        if (jmgResetProdFinishedParametersToDefault.prompt())
        {
            jmgResetProdFinishedParametersToDefault.runOperation();
            if (_args && _args.caller())
            {
                FormRun caller = _args.caller();
                caller.dataSource().research();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>