<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetRollForwardContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    This class is the data contract class for the <c>AssetRollForwardDP</c> class.
/// </summary>
/// <remarks>
///    This is the data contract class for the Asset roll forward report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(AssetRollForwardUIBuilder))
]
public class AssetRollForwardContract extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    FromDate fromDate;
    ToDate toDate;
    ERFormatMappingId formatMapping;
    str query;
    private LedgerCurrencySelection ledgerCurrencySelection;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the from date.
    /// </summary>
    /// <param name="_fromDate">
    /// The from date.
    /// </param>
    /// <returns>
    /// The value of from Date.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(FromDate)),
        SysOperationLabelAttribute(literalstr("@SYS5209")),
        SysOperationHelpTextAttribute(literalstr("@SYS5209")),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The to date.
    /// </param>
    /// <returns>
    /// The current value of toDate.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(ToDate)),
        SysOperationLabelAttribute(literalstr("@SYS179583")),
        SysOperationHelpTextAttribute(literalstr("@SYS179583")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or Sets the <C>ledgerCurrencySelection</C> parameter.
    /// </summary>
    /// <param name="_ledgerCurrencySelection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter.
    /// </returns>
    [
        DataMemberAttribute(identifierStr(LedgerCurrencySelection)),
        SysOperationLabelAttribute(literalstr("@SYS177160")),
        SysOperationHelpTextAttribute(literalstr("@FixedAssets:FA_Reports_CurrencySelectionText")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the report parameters.
    /// </summary>
    /// <returns>
    ///    true if no errors; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (!formatMapping)
        {
            ret = checkFailed(strFmt("@SYS26332", new SysDictType(extendedTypeNum(ERFormatMappingId)).label()));
        }

        if (ret)
        {            
            if (!fromDate)
            {
                ret = checkFailed("@SYS91557");
            }
            else if (!toDate)
            {
                ret = checkFailed("@SYS90868");
            }
            else if (toDate < fromDate)
            {
                ret = checkFailed("@SYS312567");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFormatMapping</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute('FormatMapping'),
        SysOperationLabelAttribute(literalstr("@ElectronicReporting:FormatMapping")),
        SysOperationHelpTextAttribute(literalstr("@ElectronicReporting:FormatMapping"))
    ]
    public ERFormatMappingId parmFormatMapping(ERFormatMappingId _formatMapping = formatMapping)
    {
        formatMapping = _formatMapping;
        return formatMapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter query
    /// </summary>
    /// <param name="_query">
    /// The new value of the datacontract parameter query
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter query
    /// </returns>
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_query', querystr(AssetRollForward))
    ]
    public str parmQuery(str _query = query)
    {
        query = _query;

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>