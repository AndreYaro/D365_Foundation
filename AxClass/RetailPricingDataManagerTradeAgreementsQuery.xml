<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingDataManagerTradeAgreementsQuery</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailPricingDataManagerTradeAgreementsQuery</c> class creates queries related to the <c>RetailPricingDataManager</c> class.
/// </summary>
public final class RetailPricingDataManagerTradeAgreementsQuery
{
    public CurrencyCode currencyCode;
    public ValidFromDate minFromDate;
    public ValidToDate maxToDate;
    public PriceDiscTable tradeAgreement;
    public InventDim inventDim;
    public RetailTempOrderItem tmpOrderItem;
    public RetailChannelTable retailChannelTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(
        CurrencyCode _currencyCode,
        ValidFromDate _minFromDate,
        ValidToDate _maxToDate,
        PriceDiscTable _tradeAgreement,
        InventDim _inventDim,
        RetailTempOrderItem _tmpOrderItem,
        RetailChannelTable _retailChannelTable)
    {
        currencyCode = _currencyCode;
        minFromDate = _minFromDate;
        maxToDate = _maxToDate;
        tradeAgreement = _tradeAgreement;
        inventDim = _inventDim;
        tmpOrderItem = _tmpOrderItem;
        retailChannelTable = _retailChannelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>execute</Name>
				<Source><![CDATA[
    static internal SysDaSearchObject execute(
        CurrencyCode _currencyCode,
        ValidFromDate _minFromDate,
        ValidToDate _maxToDate,
        PriceDiscTable _tradeAgreement,
        InventDim _inventDim,
        RetailTempOrderItem _tmpOrderItem,
        RetailChannelTable _retailChannelTable)
    {
        var retailPricingDataManagerTradeAgreementsQuery = new RetailPricingDataManagerTradeAgreementsQuery();
        retailPricingDataManagerTradeAgreementsQuery.initialize(
            _currencyCode,
            _minFromDate,
            _maxToDate,
            _tradeAgreement,
            _inventDim,
            _tmpOrderItem,
            _retailChannelTable);

        SysDaQueryObject query = retailPricingDataManagerTradeAgreementsQuery.getPriceDiscTableQuery();
        SysDaSearchObject searchObject = new SysDaSearchObject(query);
        return searchObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceDiscTableQuery</Name>
				<Source><![CDATA[
    private SysDaQueryObject getPriceDiscTableQuery()
    {
        SysDaQueryObject priceDiscTableQuery = this.getPriceDiscTableQueryObject();
        SysDaQueryObject inventDimQueryObject = this.getInventDimQueryObject();

        priceDiscTableQuery.joinClause(SysDaJoinKind::InnerJoin, inventDimQueryObject);

        SysDaQueryObject tmpOrderItemQueryObject = this.getTmpOrderItemQueryObject();
        inventDimQueryObject.joinClause(SysDaJoinKind::ExistsJoin, tmpOrderItemQueryObject);

        return priceDiscTableQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryForItemRelationTable</Name>
				<Source><![CDATA[
    static internal SysDaQueryObject getQueryForItemRelationTable(
        CurrencyCode _currencyCode,
        ValidFromDate _minFromDate,
        ValidToDate _maxToDate,
        PriceDiscTable _tradeAgreement,
        InventDim _inventDim,
        RetailTempOrderItem _tmpOrderItem,
        RetailChannelTable _retailChannelTable)
    {
        var retailPricingDataManagerTradeAgreementsQuery = new RetailPricingDataManagerTradeAgreementsQuery();
        retailPricingDataManagerTradeAgreementsQuery.initialize(
            _currencyCode,
            _minFromDate,
            _maxToDate,
            _tradeAgreement,
            _inventDim,
            _tmpOrderItem,
            _retailChannelTable);

        SysDaQueryObject query = retailPricingDataManagerTradeAgreementsQuery.getPriceDiscTableQueryForItemRelationTable();
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQueryForItemRelationTableAccountCodeGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get trade agreement query with Item relation = PriceDiscItemRelation::Table and PriceDiscPartyCodeType::Group.
    /// </summary>
    /// <param name = "_currencyCode">Currency code.</param>
    /// <param name = "_minFromDate">Minimum from date of the order lines.</param>
    /// <param name = "_maxToDate">Max to date of the order lines.</param>
    /// <param name = "_tradeAgreement">PriceDiscTable buffer.</param>
    /// <param name = "_inventDim">InventDim buffer.</param>
    /// <param name = "_tmpOrderItem">Temp table containing sales items.</param>
    /// <param name = "_priceDiscGroupTmp">Temp table containing price group Ids.</param>
    /// <param name = "_retailChannelTable">RetailChannelTable buffer.</param>
    /// <returns>Trade agreement query with Item code = PriceDiscProductCodeType::Table and Account code = PriceDiscPartyCodeType::Group.</returns>
    static internal SysDaQueryObject getQueryForItemRelationTableAccountCodeGroup(
        CurrencyCode _currencyCode,
        ValidFromDate _minFromDate,
        ValidToDate _maxToDate,
        PriceDiscTable _tradeAgreement,
        InventDim _inventDim,
        RetailTempOrderItem _tmpOrderItem,
        RetailPricingPriceDiscGroupTmp _priceDiscGroupTmp,
        RetailChannelTable _retailChannelTable)
    {
        var retailPricingDataManagerTradeAgreementsQuery = new RetailPricingDataManagerTradeAgreementsQuery();
        retailPricingDataManagerTradeAgreementsQuery.initialize(
            _currencyCode,
            _minFromDate,
            _maxToDate,
            _tradeAgreement,
            _inventDim,
            _tmpOrderItem,
            _retailChannelTable);

        SysDaQueryObject query = retailPricingDataManagerTradeAgreementsQuery.getPriceDiscTableQueryForItemRelationTableAccountCodeGroup(_priceDiscGroupTmp);
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceDiscTableQueryForItemRelationTable</Name>
				<Source><![CDATA[
    private SysDaQueryObject getPriceDiscTableQueryForItemRelationTable()
    {
        SysDaQueryObject priceDiscTableQuery = this.getPriceDiscTableQueryObject();
        SysDaQueryObject inventDimQueryObject = this.getInventDimQueryObject();

        priceDiscTableQuery.joinClause(SysDaJoinKind::InnerJoin, inventDimQueryObject);

        SysDaQueryObject tmpOrderItemQueryObject = this.getTmpOrderItemQueryObjectForItemRelationTable();
        inventDimQueryObject.joinClause(SysDaJoinKind::ExistsJoin, tmpOrderItemQueryObject);

        return priceDiscTableQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceDiscTableQueryForItemRelationTableAccountCodeGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get trade agreement query with Item relation = PriceDiscItemRelation::Table and Account code = PriceDiscPartyCodeType::Group.
    /// </summary>
    /// <param name = "_priceDiscGroupTmp">Temp table containing price group Ids.</param>
    /// <returns>Trade agreement query with Item relation = PriceDiscItemRelation::Table and account code = PriceDiscPartyCodeType::Group.</returns>
    private SysDaQueryObject getPriceDiscTableQueryForItemRelationTableAccountCodeGroup(
        RetailPricingPriceDiscGroupTmp _priceDiscGroupTmp)
    {
        SysDaQueryObject priceDiscTableQuery = this.getPriceDiscTableQueryObject();
        SysDaQueryObject inventDimQueryObject = this.getInventDimQueryObject();

        priceDiscTableQuery.joinClause(SysDaJoinKind::InnerJoin, inventDimQueryObject);

        SysDaQueryObject tmpOrderItemQueryObject = this.getTmpOrderItemQueryObjectForItemRelationTable();
        inventDimQueryObject.joinClause(SysDaJoinKind::ExistsJoin, tmpOrderItemQueryObject);

        // Where clause for Account code = PriceDiscPartyCodeType::Group should be added outside the join clause here to optimize query performance.
        SysDaQueryObject priceGroupQueryObject = new SysDaQueryObject(_priceDiscGroupTmp);
        priceGroupQueryObject.whereClause(
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, AccountRelation)),
                new SysDaFieldExpression(_priceDiscGroupTmp, fieldStr(RetailPricingPriceDiscGroupTmp, GroupId))));
        tmpOrderItemQueryObject.joinClause(SysDaJoinKind::ExistsJoin, priceGroupQueryObject);

        return priceDiscTableQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpOrderItemQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getTmpOrderItemQueryObject()
    {
        SysDaQueryObject queryObject = this.addTmpOrderItemFieldsToQueryObject();

        if (RetailPricingDisableGetPriceTradeAgreementsBySearchCriteriaFlight::instance().isEnabled())
        {
            this.addTmpOrderItemFieldsToQueryObjectWhereClause(queryObject);
        }
        else
        {
            this.addTmpOrderItemFieldsWithSearchCriteriaToQueryObjectWhereClause(queryObject);
        }

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPriceDiscTableQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getPriceDiscTableQueryObject()
    {
        SysDaQueryObject queryObject = this.addPriceDiscTableFieldsToQueryObject();
        this.addPriceDiscTableFieldsToQueryObjectWhereClause(queryObject);
        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscTableFieldsToQueryObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>PriceDiscTable</c> table fields to a query object.
    /// </summary>
    /// <returns>
    /// The query object with fields added.
    /// </returns>
    [Wrappable(true)]
    protected final SysDaQueryObject addPriceDiscTableFieldsToQueryObject()
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(tradeAgreement);
        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addPriceDiscTableFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>PriceDiscTable</c> where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addPriceDiscTableFieldsToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        var priceDiscTableWhereClause = new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, Relation)),
                new SysDaValueExpression(PriceType::PriceSales)),
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, Currency)),
                new SysDaValueExpression(currencyCode)));

        priceDiscTableWhereClause = new SysDaAndExpression(priceDiscTableWhereClause,
            new SysDaOrExpression(new SysDaLessThanOrEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, FromDate)),
                new SysDaValueExpression(minFromDate)),
            new SysDaLessThanOrEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, FromDate)),
                new SysDaValueExpression(DateTimeUtil::date(DateTimeUtil::minValue())))));

        priceDiscTableWhereClause = new SysDaAndExpression(priceDiscTableWhereClause,
            new SysDaOrExpression(new SysDaGreaterThanOrEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ToDate)),
                new SysDaValueExpression(maxToDate)),
            new SysDaLessThanOrEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ToDate)),
                new SysDaValueExpression(DateTimeUtil::date(DateTimeUtil::minValue())))));
        _queryObject.whereClause(priceDiscTableWhereClause);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDimQueryObject</Name>
				<Source><![CDATA[
    private SysDaQueryObject getInventDimQueryObject()
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(inventDim);
        this.addInventDimFieldsToQueryObject(queryObject);
        this.addInventDimFieldsToQueryObjectWhereClause(queryObject);
        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventDimFieldsToQueryObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>InventDim</c> fields to the projection of a query object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the fields to.
    /// </param>
    [Wrappable(true)]
    protected final void addInventDimFieldsToQueryObject(SysDaQueryObject _queryObject)
    {
        _queryObject.projection()
            .add(fieldStr(InventDim, InventColorId))
            .add(fieldStr(InventDim, InventSizeId))
            .add(fieldStr(InventDim, InventStyleId))
            .add(fieldStr(InventDim, InventVersionId))
            .add(fieldStr(InventDim, configId))
            .add(fieldStr(InventDim, InventSiteId))
            .add(fieldStr(InventDim, InventLocationId))
            .add(fieldStr(InventDim, InventSerialId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addInventDimFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>InventDim</c> where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addInventDimFieldsToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(this.getInventDimFieldsToQueryObjectWhereClause());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDimFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    protected SysDaQueryExpression getInventDimFieldsToQueryObjectWhereClause()
    {
        return new SysDaEqualsExpression(
            new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, InventDimId)),
            new SysDaFieldExpression(inventDim, fieldStr(InventDim, InventDimId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpOrderItemQueryObjectForItemRelationTable</Name>
				<Source><![CDATA[
    private SysDaQueryObject getTmpOrderItemQueryObjectForItemRelationTable()
    {
        SysDaQueryObject queryObject = this.addTmpOrderItemFieldsToQueryObject();

        if (RetailPricingDisableGetPriceTradeAgreementsBySearchCriteriaFlight::instance().isEnabled())
        {
            this.addItemRelationTableToQueryObjectWhereClause(queryObject);
        }
        else
        {
            this.addItemRelationTableWithSearchCriteriaToQueryObjectWhereClause(queryObject);
        }

        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTmpOrderItemFieldsToQueryObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the <c>RetailTempOrderItem</c> table fields to an query object.
    /// </summary>
    /// <returns>
    /// The query object with fields added.
    /// </returns>
    [Wrappable(true)]
    protected final SysDaQueryObject addTmpOrderItemFieldsToQueryObject()
    {
        SysDaQueryObject queryObject = new SysDaQueryObject(tmpOrderItem);
        return queryObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTmpOrderItemFieldsToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>RetailTempOrderItem</c> where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addTmpOrderItemFieldsToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaOrExpression(this.getTmpOrderItemTableWhereClause(), this.getTmpOrderItemAllWhereClause()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addTmpOrderItemFieldsWithSearchCriteriaToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds <c>RetailTempOrderItem</c> with search criteria fields where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    /// <remarks>
    /// The where clause here is equivalent to
    ///   where (InventDim.InventSiteId = RetailTempOrderItem.InventSiteId or InventDim.InventSiteId = '')
    ///     and (InventDim.InventLocationId = RetailTempOrderItem.InventLocationId or InventDim.InventLocationId = '')
    ///     and ((PriceDiscTable.ItemRelation = RetailTempOrderItem.itemId and PriceDiscTable.ItemCode = 0)
    ///         or PriceDiscTable.ItemCode = 2)
    /// </remarks>
    [Wrappable(true)]
    protected final void addTmpOrderItemFieldsWithSearchCriteriaToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaAndExpression(
            this.getTmpOrderItemSearchCriteriaFieldsWhereClause(),
            new SysDaOrExpression(this.getTmpOrderItemTableWhereClause(), this.getTmpOrderItemAllWhereClause())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addItemRelationTableToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds PriceDiscTable.ItemCode equals to Table and <c>RetailTempOrderItem.ItemId</c> to where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addItemRelationTableToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ItemRelation)),
                new SysDaFieldExpression(tmpOrderItem, fieldStr(RetailTempOrderItem, itemId))),
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ItemCode)),
                new SysDaValueExpression(PriceDiscProductCodeType::Table))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addItemRelationTableWithSearchCriteriaToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds PriceDiscTable.ItemCode equals to Table and <c>RetailTempOrderItem</c> search criteria fields to where clause expression to a query Object.
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addItemRelationTableWithSearchCriteriaToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaAndExpression(this.getTmpOrderItemSearchCriteriaFieldsWhereClause(), this.getTmpOrderItemTableWhereClause()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>addItemRelationAllToQueryObjectWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds PriceDiscTable.ItemCode equals to PriceDiscProductCodeType::All to a query object
    /// </summary>
    /// <param name = "_queryObject">
    /// The query object to add the where clauses to.
    /// </param>
    [Wrappable(true)]
    protected final void addItemRelationAllToQueryObjectWhereClause(SysDaQueryObject _queryObject)
    {
        _queryObject.whereClause(new SysDaAndExpression(_queryObject.whereClause(), this.getTmpOrderItemAllWhereClause()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpOrderItemSearchCriteriaFieldsWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>RetailTempOrderItem</c> with search criteria fields where clause expression.
    /// </summary>
    /// <remarks>
    /// The where clause here is equivalent to
    ///   where (InventDim.InventSiteId = RetailTempOrderItem.InventSiteId or InventDim.InventSiteId = '')
    ///     and (InventDim.InventLocationId = RetailTempOrderItem.InventLocationId or InventDim.InventLocationId = '')
    /// </remarks>
    [Wrappable(true)]
    protected final SysDaQueryExpression getTmpOrderItemSearchCriteriaFieldsWhereClause()
    {
        SysDaQueryExpression getSearchCriteriaWhereClause = new SysDaAndExpression(
            new SysDaOrExpression(
                new SysDaEqualsExpression(new SysDaFieldExpression(inventDim, fieldStr(InventDim, InventSiteId)), new SysDaFieldExpression(tmpOrderItem, fieldStr(RetailTempOrderItem, InventSiteId))),
                new SysDaEqualsExpression(new SysDaValueExpression(''), new SysDaFieldExpression(inventDim, fieldStr(InventDim, InventSiteId)))),
            new SysDaOrExpression(
                new SysDaEqualsExpression(new SysDaFieldExpression(inventDim, fieldStr(InventDim, InventLocationId)), new SysDaFieldExpression(tmpOrderItem, fieldStr(RetailTempOrderItem, InventLocationId))),
                new SysDaEqualsExpression(new SysDaValueExpression(''), new SysDaFieldExpression(inventDim, fieldStr(InventDim, InventLocationId)))));

        return getSearchCriteriaWhereClause;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpOrderItemTableWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>RetailTempOrderItem</c> where clause expression for item code = Table.
    /// </summary>
    /// <remarks>
    /// The where clause here is equivalent to
    ///   where PriceDiscTable.ItemRelation = RetailTempOrderItem.itemId and PriceDiscTable.ItemCode = 0
    /// </remarks>
    [Wrappable(true)]
    protected final SysDaQueryExpression getTmpOrderItemTableWhereClause()
    {
        return new SysDaAndExpression(
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ItemRelation)), new SysDaFieldExpression(tmpOrderItem, fieldStr(RetailTempOrderItem, itemId))),
            new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ItemCode)), new SysDaValueExpression(PriceDiscProductCodeType::Table)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTmpOrderItemAllWhereClause</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets <c>RetailTempOrderItem</c> where clause expression for item code = All.
    /// </summary>
    /// <remarks>
    /// The where clause here is equivalent to
    ///   where PriceDiscTable.ItemCode = 2
    /// </remarks>
    [Wrappable(true)]
    protected final SysDaQueryExpression getTmpOrderItemAllWhereClause()
    {
        return new SysDaEqualsExpression(new SysDaFieldExpression(tradeAgreement, fieldStr(PriceDiscTable, ItemCode)), new SysDaValueExpression(PriceDiscProductCodeType::All));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>