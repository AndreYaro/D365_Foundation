<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResAvailabilityViewContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource availability view context data contract.
/// </summary>
[DataContractAttribute]
public class ResAvailabilityViewContext implements IAvailabilityViewContext
{
    private str company;
    private ActivityRecId activity;
    private AVTimeframeType timescale;
    private ResourceRecId resource;
    private ResourceCategoryRecId resourceCategory;
    private ResReservationType resReservationType;
    private utcdatetime start, end;
    private str startStr, endStr;
    private str searchString;
    private int matchCount;
    private int left, top;
    private boolean showBookingButtons, showReleaseButtons;
    private boolean showScheduleDescription;
    private boolean showRemainingCapacity;
    private boolean showControlSingleResourceHeight;
    private boolean showFilterSettings;
    private boolean showSearhButtons;
    private boolean roleCriteriaRequired;
    private int capacityAggregation;
    private str legalEntities;
    private str departments;
    private str resourceCategories;
    private ProjActivityRoleRecency resourceCategoryRecency;
    private PSARSEntityType activityType;
    private str description;
    private ResRequestRecId request;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the activity identifier of the project, quotation or task.
    /// </summary>
    /// <param name = "_activity">Activity identifier.</param>
    /// <returns>Int64 value of the activity identifier.</returns>
    [DataMemberAttribute("activity")]
    public int64 activity(int64 _activity = activity)
    {
        activity = _activity;
        return activity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the scheduling activity type.
    /// </summary>
    /// <param name = "_activityType">Scheduling activity type.</param>
    /// <returns>Scheduling activity type.</returns>
    [DataMemberAttribute("activityType")]
    public PSARSEntityType activityType(PSARSEntityType _activityType = activityType)
    {
        activityType = _activityType;
        return activityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>timescale</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the time scale to be viewed on availability view control.
    /// </summary>
    /// <param name = "_timescale">Time scale.</param>
    /// <returns>Time scale.</returns>
    [DataMemberAttribute("timescale")]
    public int timescale(int _timescale = timescale)
    {
        timescale = _timescale;
        return timescale;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource.
    /// </summary>
    /// <param name = "_resource">Resource rec Id.</param>
    /// <returns>Resource rec Id.</returns>
    [DataMemberAttribute("resource")]
    public int64 resource(int64 _resource = resource)
    {
        resource = _resource;
        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the start date/time value.
    /// </summary>
    /// <param name = "_start">Start date/time value.</param>
    /// <returns>Start date/time value.</returns>
    public utcdatetime startDateTime(utcdatetime _start = AVUtil::getDateTime(startStr))
    {
        if (!prmisDefault(_start) && this.timescale())
        {
            start = AVTimeframe::getTimeframe(_start, this.timescale()).start();
        }
        else
        {
            start = _start;
        }

        startStr = AVUtil::getDateTimeStr(start);

        return start;
    }

]]></Source>
			</Method>
			<Method>
				<Name>startStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the start/date time string value.
    /// </summary>
    /// <param name = "_startStr">Start date/time string value.</param>
    /// <returns>Start date/time string value.</returns>
    [DataMemberAttribute("start")]
    protected str startStr(str _startStr = startStr)
    {
        startStr = _startStr;
        return startStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the end date/time value.
    /// </summary>
    /// <param name = "_end">End date/time value.</param>
    /// <returns>End date/time value.</returns>
    public utcdatetime endDateTime(utcdatetime _end = AVUtil::getDateTime(endStr))
    {
        if (!prmisDefault(_end) && this.timescale())
        {
            end = AVTimeframe::getTimeframe(_end, this.timescale()).end();
        }
        else
        {
            end = _end;
        }
        endStr = AVUtil::getDateTimeStr(end);

        return end;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the end date/time string value.
    /// </summary>
    /// <param name = "_endStr">Start date/time string value.</param>
    /// <returns>End date/time string value.</returns>
    [DataMemberAttribute("end")]
    protected str endStr(str _endStr = endStr)
    {
        endStr = _endStr;
        return endStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>searchString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets of sets search string.
    /// </summary>
    /// <param name = "_searchString">User search string input.</param>
    /// <returns>Search string.</returns>
    [DataMemberAttribute("searchString")]
    public str searchString(str _searchString = searchString)
    {
        searchString = _searchString;
        return searchString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showScheduleDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets of sets show scheduling description option.
    /// </summary>
    /// <param name = "_showScheduleDescription">Scheduling description option.</param>
    /// <returns>Scheduling description option.</returns>
    [DataMemberAttribute("showSchedDesc")]
    public boolean showScheduleDescription(boolean _showScheduleDescription = showScheduleDescription)
    {
        showScheduleDescription = _showScheduleDescription;
        return showScheduleDescription;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showRemainingCapacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets show scheduling caption description option.
    /// </summary>
    /// <param name = "_showRemainingCapacity">Show remaining capacity option.</param>
    /// <returns>Show remaining capacity option.</returns>
    [DataMemberAttribute("showSchedCap")]
    public boolean showRemainingCapacity(boolean _showRemainingCapacity = showRemainingCapacity)
    {
        showRemainingCapacity = _showRemainingCapacity;
        return showRemainingCapacity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>capacityAggregation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets capacity aggregation value.
    /// </summary>
    /// <param name = "_capacityAggregation">Capacity aggregation value.</param>
    /// <returns>Capacity aggregation value.</returns>
    [DataMemberAttribute("aggregation")]
    public int capacityAggregation(int _capacityAggregation = capacityAggregation)
    {
        capacityAggregation = _capacityAggregation;
        return capacityAggregation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showBookingButtons</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets show booking buttons option.
    /// </summary>
    /// <param name = "_showBookingButtons">show booking buttons option.</param>
    /// <returns>show booking buttons option.</returns>
    public boolean showBookingButtons(boolean _showBookingButtons = showBookingButtons)
    {
        showBookingButtons = _showBookingButtons;
        return showBookingButtons;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legalEntities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Legal entity filter setting.
    /// </summary>
    /// <param name = "_legalEntities">List of legal entities.</param>
    /// <returns>String legal entity filter setting.</returns>
    [DataMemberAttribute("legalEntities")]
    public str legalEntities(str _legalEntities = legalEntities)
    {
        legalEntities = _legalEntities;
        return legalEntities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>departments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Department filter setting.
    /// </summary>
    /// <param name = "_departments">List of departments.</param>
    /// <returns>String department filter setting.</returns>
    [DataMemberAttribute("departments")]
    public str departments(str _departments = departments)
    {
        departments = _departments;
        return departments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategories</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource category filter setting.
    /// </summary>
    /// <param name = "_resourceCategories">List of resource categories.</param>
    /// <returns>String resource category filter setting.</returns>
    [DataMemberAttribute("resourceCategories")]
    public str resourceCategories(str _resourceCategories = resourceCategories)
    {
        resourceCategories = _resourceCategories;
        return resourceCategories;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategoriesRecency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource category timeframe filter setting.
    /// </summary>
    /// <param name = "_resourceCategoryRecency">Resource category timeframe.</param>
    /// <returns>Enum value from <c>ProjActivityRoleRecency</c>.</returns>
    [DataMemberAttribute("resourceCategoriesTimefame")]
    public int resourceCategoriesRecency(int _resourceCategoryRecency = resourceCategoryRecency)
    {
        resourceCategoryRecency = _resourceCategoryRecency;
        return resourceCategoryRecency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Description string used in resource assignments form.
    /// </summary>
    /// <param name = "_description">Typically a combination of project id and project name.</param>
    /// <returns>Displayable description.</returns>
    [DataMemberAttribute("description")]
    public str description(str _description = description)
    {
        description = _description;
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshParent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refresh caller UI.
    /// </summary>
    public void refreshParent()
    {
        this.updateCaller();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCaller</Name>
				<Source><![CDATA[
    delegate void updateCaller()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>resReservationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource reservation type used to default on schedules.
    /// </summary>
    /// <param name = "_resReservationType">Reservation Type for defaulting on schedules.</param>
    /// <returns>Type <c>ResReservationType</c> used for defaulting on schedules.</returns>
    public ResReservationType resReservationType(ResReservationType _resReservationType =  resReservationType)
    {
        resReservationType = _resReservationType;
        return resReservationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource category used to default on schedules.
    /// </summary>
    /// <param name = "_resourceCategory">Single resource category for defaulting on schedules.</param>
    /// <returns>RecId of the <c>ResourceCategoryView</c> used for defauling on schedules.</returns>
    public ResourceCategoryRecId resourceCategory(ResourceCategoryRecId _resourceCategory = resourceCategory)
    {
        resourceCategory = _resourceCategory;
        return resourceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>request</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets resource request record ID.
    /// </summary>
    /// <param name = "_request">Resource request record ID.</param>
    /// <returns>Record ID of the <c>ResRequest</c>.</returns>
    public ResRequestRecId request(ResRequestRecId _request = request)
    {
        request = _request;
        return request;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Show the resource availability view form.
    /// </summary>
    /// <returns>Whether resource availability view form is launched.</returns>
    public boolean showForm()
    {
        Args formArgs = new Args();
        formArgs.caller(this);

        new MenuFunction(menuitemdisplaystr(ResAvailabilityView),
            MenuItemType::Display).run(formArgs);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showControlSingleResourceHeightParam</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specify whether it will display only one resource.
    /// </summary>
    /// <param name = "_singleResource">Specify whether it will display only one resource.</param>
    /// <returns>Whether it will display only one resource.</returns>
    public boolean showControlSingleResourceHeightParam(boolean _singleResource = showControlSingleResourceHeight)
    {
        showControlSingleResourceHeight = _singleResource;
        return showControlSingleResourceHeight;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showFilterSettingsParam</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specify whether it will display the filter settings.
    /// </summary>
    /// <param name = "_filterSettings">Specify whether it will display the filter settings.</param>
    /// <returns>Whether it will display the filter settings.</returns>
    public boolean showFilterSettingsParam(boolean _filterSettings = showFilterSettings)
    {
        showFilterSettings = _filterSettings;
        return showFilterSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showSearchButtonsParam</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specify whether it will display the search buttons.
    /// </summary>
    /// <param name = "_searhButtons">Specify whether it will display the search buttons.</param>
    /// <returns>Whether it will display the search buttons.</returns>
    public boolean showSearchButtonsParam(boolean _searhButtons = showSearhButtons)
    {
        showSearhButtons = _searhButtons;
        return showSearhButtons;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new instance of <c>ResAvailabilityViewContext</c> object.
    /// </summary>
    protected void new()
    {
        #ProjAvailabilityViewConstants
        #TimeConstants

        Timezone tz = DateTimeUtil::getUserPreferredTimeZone();
        date today = DateTimeUtil::getSystemDate(tz);
        utcdatetime todayDateTime = DateTimeUtil::newDateTime(today, 0);
        utcdatetime endDateTime = DateTimeUtil::newDateTime(
            today + #DefaultDateRangeInDays, #LastSecondOfTheDay);
        timescale = ResUtil::getRecommendedTimeframeType(todayDateTime, endDateTime);
        this.startDateTime(todayDateTime);
        this.endDateTime(endDateTime);

        resReservationType = ResReservationType::Booking;
        capacityAggregation = ResCapacityAggregation::Hour;
        roleCriteriaRequired = false;
        showControlSingleResourceHeight = false;
        showFilterSettings = true;;
        showSearhButtons = true;;
        resourceCategory = ResourceCategoryFacade::defaultResourceCategory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor to create a new instance of <c>ResAvailabilityViewContext</c> object.
    /// </summary>
    /// <returns>A new instance of <c>ResAvailabilityViewContext</c> object.</returns>
    public static ResAvailabilityViewContext construct()
    {
        ResAvailabilityViewContext context = new ResAvailabilityViewContext();
        return context;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>