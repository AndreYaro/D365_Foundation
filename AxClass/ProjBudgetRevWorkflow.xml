<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetRevWorkflow</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjBudgetRevWorkflow
{
    RecId                           recId;
    ProjRevisionId                  projRevisionId;
    WorkflowComment                 wfComment;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialogOk</Name>
				<Source><![CDATA[
    private boolean dialogOk(Args _args)
    {
        WorkflowSubmitDialog    workflowSubmitDialog;
        boolean                 dialogOk;

        // Launch workflow comments dialog
        workflowSubmitDialog = WorkflowSubmitDialog::construct(_args.caller().getActiveWorkflowConfiguration());
        workflowSubmitDialog.run();

        if (workflowSubmitDialog.parmIsClosedOK())
        {
            wfComment = workflowSubmitDialog.parmWorkflowComment();
            dialogOk = true;
        }

        return dialogOk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjRevisionId</Name>
				<Source><![CDATA[
    public ProjRevisionId parmProjRevisionId(ProjRevisionId _projRevisionId = projRevisionId)
    {
        projRevisionId = _projRevisionId;
        return projRevisionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRecId</Name>
				<Source><![CDATA[
    public RecId parmRecId(RecId _recId = recId)
    {
        recId = _recId;
        return recId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>submit</Name>
				<Source><![CDATA[
    private void submit(Args _args)
    {
        ProjBudgetRevision projBudgetRevision;

        if (_args.dataset() == tableNum(ProjBudgetRevision))
        {
            // Query to pick up latest buffer from server
            projBudgetRevision =  ProjBudgetRevision::find(_args.record().RecId, true);

            // Check the state
            if (projBudgetRevision.RevisionWorkflowStatus == ProjBudgetRevisionWFStatus::Created)
            {
                // Verify if total project budget value exceeds contract value
                if (ProjBudgetRevWorkflow::canSubmit(projRevisionId))
                {
                    if (this.dialogOk(_args))
                    {
                        ttsbegin;
                        projBudgetRevision.RevisionWorkflowStatus = ProjBudgetRevisionWFStatus::Submitted;
                        projBudgetRevision.doUpdate();
                        ttscommit;

                        Workflow::activateFromWorkflowType(workFlowTypeStr(ProjBudgetRevision), recId, wfComment, NoYes::No);
                    }
                }
                else
                {
                    throw error("@SYS326799");
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSubmit</Name>
				<Source><![CDATA[
public static boolean canSubmit(ProjRevisionId _projRevisionId)
    {
        ProjBudgetRevision  projBudgetRevision;
        ProjBudget          projBudget;

        select firstonly projBudgetRevision
        where projBudgetRevision.RevisionId == _projRevisionId;

        select firstOnly RootProjId, RecId from projBudget
            where projBudget.RecId == projBudgetRevision.ProjBudget;

        return ProjBudgetManager::checkProfitablityForFixedPrice(projBudget.RootProjId) && projBudgetRevision.canSubmitToWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjBudgetRevWorkflow construct()
    {
        return new ProjBudgetRevWorkflow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        ProjBudgetRevWorkflow   projBudgetRevWF = ProjBudgetRevWorkflow::construct();
        ProjBudgetRevision      projBudgetRevision;

        projBudgetRevWF.parmRecId(_args.record().RecId);

        if (_args.record().TableId == tablenum(ProjBudgetRevision))
        {
            projBudgetRevision = _args.record();
            projBudgetRevWF.parmProjRevisionId(projBudgetRevision.RevisionId);

            projBudgetRevWF.submit(_args);

            ProjBudgetRevWorkflow::refreshCaller(_args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCaller</Name>
				<Source><![CDATA[
    public static void refreshCaller(Args _args)
    {
        FormRun                 callerForm;
        FormDataSource          projBudgetRevisionDS;

        if (_args.caller())
        {
            if (SysDictClass::isEqualOrSuperclass(classidget(_args.caller()), classnum(FormRun)))
            {
                callerForm = _args.caller();

                callerForm.updateWorkflowControls();

                projBudgetRevisionDS = FormDataUtil::getFormDataSource(_args.record());
                if (projBudgetRevisionDS)
                {
                    projBudgetRevisionDS.executeQuery();
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>