<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferMultiShipCancel</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferMultiShipCancel extends InventTransferMulti
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    public FormName formName()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initParmBuffer</Name>
				<Source><![CDATA[
    void initParmBuffer(ParmBuffer _inventTransferParmTable)
    {
        InventTransferParmTable   inventTransferParmTable = _inventTransferParmTable;
        super(inventTransferParmTable);
        inventTransferParmTable.UpdateType = InventTransferUpdateType::Shipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runUpdate</Name>
				<Source><![CDATA[
    public InventTransferPrintDataProvider runUpdate(InventTransferParmTable _inventTransferParmTable)
    {
        InventTransferUpdShip inventTransferUpdShip = this.constructInventTransferUpdShip(_inventTransferParmTable);
        this.updateShipment(inventTransferUpdShip);

        InventTransferJour inventTransferJour = inventTransferUpdShip.parmInventTransferJour();
        InventTransferPrintDataProviderShip dataProvider = InventTransferPrintDataProviderShip::construct();
        dataProvider.parmInventTransferJour(inventTransferJour);

        return dataProvider;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructInventTransferUpdShip</Name>
				<Source><![CDATA[
    protected InventTransferUpdShip constructInventTransferUpdShip(InventTransferParmTable _inventTransferParmTable)
    {
        return InventTransferUpdShip::newParmBuffer(_inventTransferParmTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateShipment</Name>
				<Source><![CDATA[
    protected void updateShipment(InventTransferUpdShip _inventTransferUpdShip)
    {
        _inventTransferUpdShip.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventTransferMultiShipCancel construct()
    {
        InventTransferMultiShipCancel InventTransferMultiShipCancel = new InventTransferMultiShipCancel();

        return InventTransferMultiShipCancel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (Box::yesNo("@SCM:TransferOrderCancellationDialog", DialogButton::No) == DialogButton::Yes)
        {
            InventTransferMultiShipCancel InventTransferMultiShipCancel = InventTransferMultiShipCancel::construct();
            ttsbegin;
            RunBaseMultiParm::initFromForm(InventTransferMultiShipCancel, _args);
            InventTransferMultiShipCancel.runOperation();
            ttscommit;
            InventTransferMultiShipCancel.runReports();
            InventTransferMultiShipCancel.refreshTransferOrderForm(_args);
        }       
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshTransferOrderForm</Name>
				<Source><![CDATA[
    private void refreshTransferOrderForm(Args _args)
    {           
        FormDataSource transferJournalDS = FormDataUtil::getFormDataSource(_args.record());
        transferJournalDS.research(true);
        FormRun transferJourForm = _args.caller() as FormRun;
        FormRun transferOrderForm = transferJourForm.args().caller() as FormRun;
        if (transferOrderForm)
        {
            FormDataSource transferTableDS = transferOrderForm.dataSource();
            if (transferTableDS.table() == tableNum(InventTransferTable))
            {
                transferTableDS.research(true);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>