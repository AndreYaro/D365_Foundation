<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DMFEntityWriter_Foundation_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(DMFEntityWriter))]
final class DMFEntityWriter_Foundation_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>scheduleEntityTasks</Name>
				<Source><![CDATA[
    public void scheduleEntityTasks(DMFExecutionId _executionId, DMFEntityName _entityName, BatchHeader _batchHeader, DMFImportTaskScheduler _parentSchedulerTask, DMFImportTaskScheduler _completionSchedulerTask)
    {
        next scheduleEntityTasks(_executionId, _entityName, _batchHeader, _parentSchedulerTask, _completionSchedulerTask);

        DMFDefinitionGroupExecution _definitionGroupExecution;
        select firstonly _definitionGroupExecution where _definitionGroupExecution.Entity == _entityName && _definitionGroupExecution.ExecutionId == _executionId;

        DMFEntityWriter entityWriter = new DMFEntityWriter();
        entityWriter.parmExecutionId(_executionId);
        entityWriter.parmDMFExecution(DMFExecution::find(_executionId));
        entityWriter.parmDMFDefinitionGroupExecution(_definitionGroupExecution);
        entityWriter.parmCalledFromScheduler(true);
        entityWriter.batchInfo().parmCaption(strFmt("@DMF:ImportToTargetCaption", _entityName, _executionId));

        _batchHeader.addRuntimeTask(entityWriter, _parentSchedulerTask.getCurrentTaskId());
        _batchHeader.addDependency(_completionSchedulerTask, entityWriter, BatchDependencyStatus::FinishedOrError);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>