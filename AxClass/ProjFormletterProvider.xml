<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjFormletterProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjFormletterProvider extends FormletterProvider
{
    ProjInvoiceJour         projInvoiceJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cashDiscountLedgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ledger dimension default account that is used to post cash discounts.
    /// </summary>
    /// <returns>
    /// The ledger dimension default account that is used to post cash discount.
    /// </returns>
    public LedgerDimensionDefaultAccount cashDiscountLedgerDimension()
    {
        return CashDisc::find(projInvoiceJour.CashDiscCode).PaidLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailSummary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the posting mode that will be used in ledger.
    /// </summary>
    /// <returns>
    /// The posting mode that will be used in ledger.
    /// </returns>
    public DetailSummary detailSummary()
    {
        ;
        return ProjParameters::find().LineTotalInvoice == ProjLineTotal::Line ? DetailSummary::Detail : DetailSummary::Summary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdParmLine_OrigOrderId</Name>
				<Source><![CDATA[
        public fieldId fieldIdParmLine_OrigOrderId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldIdParmTable_OrderId</Name>
				<Source><![CDATA[
        public fieldId fieldIdParmTable_OrderId()
    {
        return fieldnum(ProjInvoiceParmTable, ProposalId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransactionTextEndDisc</Name>
				<Source><![CDATA[
        public LedgerTransTxt ledgerTransactionTextEndDisc()
    {
        return LedgerTransTxt::SalesEndDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransactionTextRoundOff</Name>
				<Source><![CDATA[
        public LedgerTransTxt ledgerTransactionTextRoundOff()
    {
        return LedgerTransTxt::CustRoundOff;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerTransType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a ledger transaction type.
    /// </summary>
    /// <returns>
    /// A ledger transaction type.
    /// </returns>
    public LedgerTransType ledgerTransType()
    {
        ;
        return LedgerTransType::Project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalTable</Name>
				<Source><![CDATA[
        public Common parmJournalTable(Common _journalTable = projInvoiceJour)
    {
        ;
        projInvoiceJour = _journalTable;

        return projInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingModule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the posting module.
    /// </summary>
    /// <returns>
    /// The posting module.
    /// </returns>
    public SysModule postingModule()
    {
        ;
        return SysModule::Project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeCashDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger posting type for a cash discount.
    /// </summary>
    /// <returns>
    /// The ledger posting type for a cash discount.
    /// </returns>
    public LedgerPostingType postingTypeCashDiscount()
    {
        ;
        // ProjPost does the posting. This is not used?
        return LedgerPostingType::CustCashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeEndDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ledger posting type for end discount.
    /// </summary>
    /// <returns>
    /// The ledger posting type for end discount.
    /// </returns>
    public LedgerPostingType postingTypeEndDiscount()
    {
        return LedgerPostingType::CustInvoiceDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger posting type for line amount.
    /// </summary>
    /// <returns>
    /// The ledger posting type for a line amount.
    /// </returns>
    public LedgerPostingType postingTypeLineAmount()
    {
        ;
        // ProjPost does the posting. This is not used
        return LedgerPostingType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeLineDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ledger posting type for a line discount.
    /// </summary>
    /// <returns>
    /// The ledger posting type for a line discount.
    /// </returns>
    public LedgerPostingType postingTypeLineDiscount()
    {
        ;
        // ProjPost does the posting. This is not used
        return LedgerPostingType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeRoundOff</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the ledger posting type for round off.
    /// </summary>
    /// <returns>
    /// The ledger posting type for round off.
    /// </returns>
    public LedgerPostingType postingTypeRoundOff()
    {
        return LedgerPostingType::SalesRoundOff;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static ProjFormletterProvider construct()
    {
        return new ProjFormletterProvider();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>