<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResPerformanceEnhancementFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;

/// <summary>
/// The <c>ResPerformanceEnhancementFeature</c> class defines the Project resource scheduling performance enhancement feature.
/// </summary>
[ExportAttribute(identifierstr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
[FeatureMetadataConfigurationKey(configurationKeyStr(Project))]
public final class ResPerformanceEnhancementFeature implements IFeatureMetadata
{
    private static ResPerformanceEnhancementFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    private static void TypeNew()
    {
        instance = new ResPerformanceEnhancementFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>ResPerformanceEnhancementFeature</c> instance.</returns>
    [Hookable(false)]
    public static ResPerformanceEnhancementFeature instance()
    {
        return ResPerformanceEnhancementFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Res:ResourcePerformanceEnhancementFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::ProjectManagementAndAccounting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Res:ResourcePerformanceEnhancementSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://aka.ms/ProjResourceScheduling";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>featureManagementState_onUpdating</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update resource performance data upgrade completion flag to not updated when feature is disabled.
    /// </summary>
    /// <param name = "_sender">The <c>FeatureManagementState</c> record to be written.</param>
    /// <param name = "_args">The event arguments.</param>
    [DataEventHandler(tableStr(FeatureManagementState), DataEventType::Updating)]
    public static void featureManagementState_onUpdating(Common _sender, DataEventArgs _args)
    {
        FeatureManagementState featureManagementState = _sender;

        if (featureManagementState.Name == Dynamics.AX.Application.FeatureStateProvider::featureName(ResPerformanceEnhancementFeature::instance())
            && featureManagementState.IsEnabled == NoYes::No
            && featureManagementState.orig().IsEnabled == NoYes::Yes)
        {
            ResProjectResourceEventHandler::updatePerfEnhancementStatusField(ProjDataUpgradeStatus::NotUpgraded);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>