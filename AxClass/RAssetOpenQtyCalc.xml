<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetOpenQtyCalc</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetOpenQtyCalc
{
    TmpRAssetOpenQty assetOpenQty;
    Common           buffer;

    RAssetEmployee   employeeId;
    RefRecId         quotaTypesRecId;
    ItemId           itemId;
    InventQty        issueQty;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
        public TmpRAssetOpenQty calc()
    {
        RAssetInventIssueQuotas assetInventIssueQuotas;
        ItemGroupId             itemGroupId;

        delete_from assetOpenQty;

        itemGroupId             = InventTable::find(itemId).itemGroupId();
        assetInventIssueQuotas  = RAssetInventIssueQuotas::findQuotas(employeeId, quotaTypesRecId, itemGroupId, itemId);

        ttsbegin;
        assetOpenQty.Employee        = employeeId;
        assetOpenQty.QuotaTypesRecId = quotaTypesRecId;
        assetOpenQty.ItemId          = itemId;
        assetOpenQty.Quota           = assetInventIssueQuotas.Quota;
        assetOpenQty.UsagePeriod     = assetInventIssueQuotas.UsagePeriod;
        assetOpenQty.IssueQty        = issueQty;
        assetOpenQty.RestQty         = assetOpenQty.Quota - assetOpenQty.IssueQty;
        assetOpenQty.insert();
        ttscommit;

        return assetOpenQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
        public void initFromBuffer(Common _buffer)
    {
        ;

        switch (_buffer.TableId)
        {
            case tablenum(RAssetInventIssueTrans):
                this.initFromRAssetInventIssueTrans(_buffer);
                break;

            default:
                throw error(strfmt("@SYS118115", funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromRAssetInventIssueTrans</Name>
				<Source><![CDATA[
        public void initFromRAssetInventIssueTrans(RAssetInventIssueTrans _rAssetInventIssueTrans)
    {
        this.parmItemId(_rAssetInventIssueTrans.ItemId);
        this.parmQuotaTypesRecId(_rAssetInventIssueTrans.QuotaTypesRecId);
        this.parmEmployeeId(_rAssetInventIssueTrans.EmployeeTable_RU);
        this.parmIssueQty(RAssetTable::clothAndRiggingQty(_rAssetInventIssueTrans.ItemId,
                                                          _rAssetInventIssueTrans.EmployeeTable_RU,
                                                          _rAssetInventIssueTrans.QuotaTypesRecId));
        this.parmBuffer(_rAssetInventIssueTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
        public Common parmBuffer(Common _common = buffer)
    {
        ;

        buffer = _common;

        return buffer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmployeeId</Name>
				<Source><![CDATA[
        public RAssetEmployee parmEmployeeId(RAssetEmployee _employeeId = employeeId)
    {
        employeeId = _employeeId;

        return employeeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIssueQty</Name>
				<Source><![CDATA[
        public InventQty parmIssueQty(InventQty _qty = issueQty)
    {
        ;

        issueQty = _qty;

        return issueQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
        public ItemId parmItemId(ItemId _itemId = itemId)
    {
        ;

        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotaTypesRecId</Name>
				<Source><![CDATA[
        public RAssetInventIssueQuotaTypesRecId parmQuotaTypesRecId(RefRecId _quotaTypesRecId = quotaTypesRecId)
    {
        quotaTypesRecId = _quotaTypesRecId;

        return quotaTypesRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static RAssetOpenQtyCalc construct()
    {
        return new RAssetOpenQtyCalc();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>