<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorListCheck_ConsignmentReplenishmentOrderHeader</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(ConsignmentReplenishmentOrderHeader))]
/// <summary>
/// The <c>PdsApprovedVendorListCheck_ConsignmentReplenishmentOrderHeader</c> class handles the approved vendor list check for consignment replenishment orders.
/// </summary>
class PdsApprovedVendorListCheck_ConsignmentReplenishmentOrderHeader extends PdsApprovedVendorListCheck
{
    ConsignmentReplenishmentOrderHeader consignmentReplenishmentOrderHeader;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the vendor is approved.
    /// </summary>
    /// <returns>A value in the <c>PdsVendorCheckResult</c> enum.</returns>
    public PdsVendorCheckResult check()
    {
        PdsVendorCheckResult                ret = PdsVendorCheckResult::OK;
        ConsignmentReplenishmentOrderLine   consignmentReplenishmentOrderLine;

        while select consignmentReplenishmentOrderLine
            where consignmentReplenishmentOrderLine.ReplenishmentOrderNumber == consignmentReplenishmentOrderHeader.ReplenishmentOrderNumber
        {
            switch (consignmentReplenishmentOrderLine.approvedVendorList().check())
            {
                case PdsVendorCheckResult::Warning:
                    if (ret < PdsVendorCheckResult::Warning)
                    {
                        ret = PdsVendorCheckResult::Warning;
                    }
                    break;

                case PdsVendorCheckResult::NotAllowed:
                    return PdsVendorCheckResult::NotAllowed;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    public Common parmBuffer(Common _common = null)
    {
        if (!prmisDefault(_common) && _common.TableId == tableNum(ConsignmentReplenishmentOrderHeader))
        {
            consignmentReplenishmentOrderHeader  = _common;
            vendAccount = consignmentReplenishmentOrderHeader.OrderVendorAccountNumber;
            activeDate  = consignmentReplenishmentOrderHeader.RequestedDeliveryDate;
        }

        return consignmentReplenishmentOrderHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCheck</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if the items used on the consignment replenishment order lines are approved for the vendor specified on the consignment replenishment order.
    /// </summary>
    /// <returns>
    /// true if the items are approved for the vendor; otherwise, false.
    /// </returns>
    public boolean validateCheck()
    {
        boolean                             ret = true;
        PdsApprovedVendorListCheck          lineCheck;
        ConsignmentReplenishmentOrderLine   consignmentReplenishmentOrderLine;

        if (consignmentReplenishmentOrderHeader.RecId)
        {
            while select consignmentReplenishmentOrderLine
                where consignmentReplenishmentOrderLine.ReplenishmentOrderNumber == consignmentReplenishmentOrderHeader.ReplenishmentOrderNumber
                join inventTable
                    where inventTable.ItemId             == consignmentReplenishmentOrderLine.ItemId &&
                          inventTable.PdsVendorCheckItem != PdsVendorCheckItem::NoCheck
            {
                lineCheck = consignmentReplenishmentOrderLine.approvedVendorList();
                lineCheck.parmActiveDate(activeDate);
                lineCheck.parmVendAccount(vendAccount);

                ret = lineCheck.validateCheck() && ret;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PdsApprovedVendorListCheck_ConsignmentReplenishmentOrderHeader construct()
    {
        return new PdsApprovedVendorListCheck_ConsignmentReplenishmentOrderHeader();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>