<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqDemPlanInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Demand forecasting instrumentation activities.
/// </summary>
internal final class ReqDemPlanInstrumentationActivities
{
    private ReqDemPlanInstrumentationLogger logger;

    public const str LogType = 'LogType';
    public const str LogTypeTask = 'ReqDemPlanTask';

    // Task parameters

    public const str TaskIsExecutingInBatch = 'IsExecutingInBatch';
    public const str TaskBatchJobId = 'BatchJobId';
    public const str TaskBatchTaskId = 'BatchTaskId';
    public const str TaskCollectionId = 'TaskCollectionId';
    public const str TaskId = 'TaskId';
    public const str TaskCode = 'TaskCode';
    public const str TaskStartTimeUtc = 'StartTimeUtc';
    public const str TaskEndTimeUtc = 'EndTimeUtc';
    public const str TaskDurationSeconds = 'DurationSeconds';
    public const str TaskCompanyRecId = 'CompanyRecId';
    public const str TaskRank = 'Rank';
    public const str TaskStatus = 'Status';
    public const str TaskProcessedRecordsCount = 'ProcessedRecordsCount';
    public const str TaskBundleId = 'BundleId';
    public const str ProcessedBundlesCount = 'ProcessedBundlesCount';
    public const str ProcessedAllRecordsCount = 'ProcessedAllRecordsCount';
    public const str BundleDurationSeconds = 'BundleDurationSeconds';
    public const str BundlesDurationSeconds = 'BundlesDurationSeconds';
    
    public const str TaskStatusStarted = 'Started';
    public const str TaskStatusCompleted = 'Completed';
    public const str TaskStatusFailed = 'Failed';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(ReqDemPlanInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateStatisticalBaselineForecast</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext generateStatisticalBaselineForecast()
    {
        SysInstrumentationActivity activity = logger.activity('GenerateStatisticalBaselineForecast');               
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>authorizeForecast</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext authorizeForecast()
    {
        SysInstrumentationActivity activity = logger.activity('AuthorizeForecast');
        return logger.activityContext(activity);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>