<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashReceiptsUsageReportControllerLV</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This is the controller class for cash receipt usage report.
/// </summary>
public class CashReceiptsUsageReportControllerLV extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes the contract with report date, year and quarter.
    /// </summary>
    public void initContract()
    {
        const int MonthsInQuarter = 3;
        const int LastQuarter = 4;

        CashReceiptsUsageReportContractLV contract = this.getDataContractObject() as CashReceiptsUsageReportContractLV;

        // Initialize the year and quarter based on system date
        TransDate transDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        int yearOfReport    = year(transDate);
        int month           = mthOfYr(transDate);
        int tempQuarter	    = real2int(month / MonthsInQuarter);
        int quarter         = month mod MonthsInQuarter == 0 ? tempQuarter : tempQuarter + 1;

        contract.parmReportDate(transDate);
        contract.parmReportYear(yearOfReport);
        contract.parmQuarterOfYear(quarter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// This main method launches the report and/or the generation of XML file logic in GER.
    /// </summary>
    /// <param name="_args">
    /// The args object for the report.
    /// </param>
    public static void main(Args _args)
    {
        CashReceiptsUsageReportControllerLV controller = CashReceiptsUsageReportControllerLV::construct(_args);
        controller.initContract();
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method initializes the controller.
    /// </summary>
    /// <param name = "_args">
    /// The args object for the construct.
    /// </param>
    /// <returns>
    /// The controller object.
    /// </returns>
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller = new CashReceiptsUsageReportControllerLV(classstr(CashReceiptsUsageReportService_LV),
                                                    methodstr(CashReceiptsUsageReportService_LV, run),
                                                    SysOperationExecutionMode::Synchronous);
        controller.parmArgs(_args);
        return controller;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>