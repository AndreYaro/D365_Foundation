<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class creates single payment request from single payment request source of different type.
/// </summary>
public abstract class CFMPaymentRequestSource
{
    Common sourceRecord;
    CFMDistributionPercentTmp distributionPercentTmpTable;
    CFMPaymentRequestTable paymentRequestTable;
    private boolean isInBatch;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructFromSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates instance of <c>CFMPaymentRequestSource</c> based on source record.
    /// </summary>
    /// <param name="_sourceRecord">
    /// Source record.
    /// </param>
    /// <returns>
    /// Instance of <c>CFMPaymentRequestSource</c>.
    /// </returns>
    public static CFMPaymentRequestSource constructFromSource(Common _sourceRecord = null)
    {
        TableName sourceTableName = _sourceRecord ? tableId2name(_sourceRecord.TableId) : "";

        CFMPaymentRequestSourceAttribute extensionAttribute = new CFMPaymentRequestSourceAttribute(sourceTableName);
        CFMPaymentRequestSource paymentRequestSource = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(CFMPaymentRequestSource), extensionAttribute);

        if (!paymentRequestSource)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        paymentRequestSource.parmPaymentRequestSourceRecord(_sourceRecord);

        return paymentRequestSource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearPaymentRequestSource</Name>
				<Source><![CDATA[
    protected void clearPaymentRequestSource()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDataAreaId</Name>
				<Source><![CDATA[
    protected abstract SelectableDataArea getDataAreaId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns created payment request based on the source record.
    /// </summary>
    /// <returns>
    /// Instance of <c>CFMPaymentRequestTable</c>.
    /// </returns>
    public CFMPaymentRequestTable getPaymentRequest()
    {
        if (paymentRequestTable.RecId == 0)
        {
            changeCompany(this.getDataAreaId())
            {
                this.initPaymentRequest();
                this.clearPaymentRequestSource();

                CFMParameters cfmParameters = CFMParameters::find();
                if (!this.parmIsInBatch() || !cfmParameters || !cfmParameters.ManualSubmitPaymentRequestWorkflow)
                {
                    CFMPaymentRequestWorkflowManager::submitWorkflow(paymentRequestTable, strFmt("@CashFlowManagement:PaymentRequestSubmitToWorkflowAutomatic", paymentRequestTable.PaymentRequestId));
                }
            }
        }

        return paymentRequestTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPaymentRequest</Name>
				<Source><![CDATA[
    protected abstract void initPaymentRequest()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentDistribution</Name>
				<Source><![CDATA[
    public CFMDistributionPercentTmp parmPaymentDistribution(CFMDistributionPercentTmp _distributionPercentTmpTable = distributionPercentTmpTable)
    {
        distributionPercentTmpTable = _distributionPercentTmpTable;

        return distributionPercentTmpTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentRequestSourceRecord</Name>
				<Source><![CDATA[
    public Common parmPaymentRequestSourceRecord(Common _sourceRecord = sourceRecord)
    {
        sourceRecord = _sourceRecord;

        return sourceRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsInBatch</Name>
				<Source><![CDATA[
    internal boolean parmIsInBatch(boolean _isInBatch = isInBatch)
    {
        isInBatch = _isInBatch;

        return isInBatch;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>