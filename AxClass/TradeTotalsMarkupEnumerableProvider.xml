<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TradeTotalsMarkupEnumerableProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TradeTotalsMarkupEnumerableProvider</c> class implements the
/// <c>TradeTotalsIMarkupEnumerableProvider</c> interface and returns a <c>TradeCommonIEnumerable</c>
/// object to iterate <c>MarkupTrans</c> records for a specified parent record.
/// </summary>
/// <remarks>
/// The <c>TradeTotalsMarkupEnumerableProvider</c> class caches the <c>MarkupTrans</c> records when the
/// records are not retrieved for update.
/// </remarks>
class TradeTotalsMarkupEnumerableProvider implements TradeTotalsIMarkupEnumerableProvider
{
    Map                     markupEnumerableMap;
    Map                     markupEnumerableForUpdateMap;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createMarkupEnumerable</Name>
				<Source><![CDATA[
    protected TradeCommonIEnumerable createMarkupEnumerable(
        MarkupTransRefTableId   _sourceTableId,
        MarkupTransRefRecId     _sourceRecId,
        boolean                 _forupdate)
    {
        TradeCommonIEnumerable              markupEnumerable;
        TradeTotalsBuildNoFetchMarkupTrans  tradeTotalsBuildNoFetchMarkupTrans;
        boolean                             markupEnumerableForUpdate;
        container                           sourceKey = [_sourceTableId, _sourceRecId];
        MarkupTrans                         noFetchMarkupTrans;

        if (!markupEnumerableMap)
        {
            markupEnumerableMap = new Map(Types::Container, Types::Class);
        }

        if (!markupEnumerableForUpdateMap)
        {
            markupEnumerableForUpdateMap = new Map(Types::Container, Types::Enum);
        }

        if (markupEnumerableForUpdateMap.exists(sourceKey))
        {
            markupEnumerableForUpdate = markupEnumerableForUpdateMap.lookup(sourceKey);
        }

        if (_forupdate || markupEnumerableForUpdate || !markupEnumerableMap.exists(sourceKey))
        {
            tradeTotalsBuildNoFetchMarkupTrans = this.createTradeTotalsBuildNoFetchMarkup(_sourceTableId, _sourceRecId);

            noFetchMarkupTrans = tradeTotalsBuildNoFetchMarkupTrans.buildMarkupTransNoFetchSelect();
            noFetchMarkupTrans.selectForUpdate(_forupdate);

            markupEnumerable = TradeCommonEnumerableNoFetchSelect::newFromNoFetchStatement(noFetchMarkupTrans);

            if (!_forupdate)
            {
                markupEnumerable = TradeCommonEnumerableCache::newFromTradeCommonIEnumerable(markupEnumerable);
            }

            markupEnumerableMap.insert(sourceKey, markupEnumerable);
            markupEnumerableForUpdateMap.insert(sourceKey, _forupdate);
        }
        else
        {
            markupEnumerable = markupEnumerableMap.lookup(sourceKey);
        }
        return markupEnumerable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTradeTotalsBuildNoFetchMarkup</Name>
				<Source><![CDATA[
    protected TradeTotalsBuildNoFetchMarkupTrans createTradeTotalsBuildNoFetchMarkup(
        MarkupTransRefTableId   _sourceTableId,
        MarkupTransRefRecId     _sourceRecId)
    {
        return TradeTotalsBuildNoFetchMarkupTrans::newFromSource(_sourceTableId, _sourceRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupEnumerable</Name>
				<Source><![CDATA[
    public TradeCommonIEnumerable markupEnumerable(
        MarkupTransRefTableId   _sourceTableId,
        MarkupTransRefRecId     _sourceRecId,
        boolean                 _forupdate = false)
    {
        return this.createMarkupEnumerable(_sourceTableId, _sourceRecId, _forupdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    protected static TradeTotalsMarkupEnumerableProvider construct()
    {
        return new TradeTotalsMarkupEnumerableProvider();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>TradeTotalsMarkupEnumerableProvider</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>TradeTotalsMarkupEnumerableProvider</c> class.
    /// </returns>
    static public TradeTotalsMarkupEnumerableProvider newProvider()
    {
        TradeTotalsMarkupEnumerableProvider tradeTotalsMarkupEnumerableProvider;

        tradeTotalsMarkupEnumerableProvider = TradeTotalsMarkupEnumerableProvider::construct();

        return tradeTotalsMarkupEnumerableProvider;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>