<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPaymentEInvoiceTransMap_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustPaymentEInvoiceTransMap_MX</c> class is class that works with payments
/// lines for the Project and Sales modules.
/// </summary>
class CustPaymentEInvoiceTransMap_MX extends EInvoiceTransBaseMap_MX
{
    private CustTrans custTrans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amount</Name>
				<Source><![CDATA[
    public LineAmount amount()
    {
        return this.isPrintInMST() ?
               custTrans.AmountMST:
               custTrans.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountCur</Name>
				<Source><![CDATA[
    public LineAmount amountCur()
    {
        return custTrans.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmount</Name>
				<Source><![CDATA[
    public AmountCur discountAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountAmountMST</Name>
				<Source><![CDATA[
    public AmountMST discountAmountMST()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLine</Name>
				<Source><![CDATA[
    protected void initLine(Common _originalJournalLine) 
    {
        custTrans.data(_originalJournalLine);

        super(_originalJournalLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    public InventTransId inventTransId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode currencyCode()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    public ItemId itemId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemName</Name>
				<Source><![CDATA[
    public ItemFreeTxt itemName()
    {
        return custTrans.Txt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markupTransList</Name>
				<Source><![CDATA[
    public List markupTransList()
    {
        List ret = new List(Types::Record);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    public Qty qty()
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceRecId</Name>
				<Source><![CDATA[
    public RefRecId sourceRecId()
    {
        return custTrans.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceTableId</Name>
				<Source><![CDATA[
    public RefTableId sourceTableId()
    {
        return custTrans.TableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unit</Name>
				<Source><![CDATA[
    public UnitOfMeasureSymbol unit()
    {
        const str defaultUnitId = 'un';

        return defaultUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPriceMST</Name>
				<Source><![CDATA[
    public SalesPrice unitPriceMST()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    public SalesPrice unitPrice()
    {
        return this.isPrintInMST() ?
            custTrans.AmountMST:
            custTrans.AmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CustPaymentEInvoiceTransMap_MX construct()
    {
        return new CustPaymentEInvoiceTransMap_MX();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>