<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjStatusType</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjStatusType
{
    ProjTable   projTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activeInTree</Name>
				<Source><![CDATA[
    public boolean activeInTree()
    {
        return projTable.type().activeInTree();
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeInTreeRevenue</Name>
				<Source><![CDATA[
    public boolean activeInTreeRevenue()
    {
        return projTable.type().activeInTreeRevenue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCreated</Name>
				<Source><![CDATA[
    public boolean checkCreated(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkCreated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEstimated</Name>
				<Source><![CDATA[
    public boolean checkEstimated(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))  ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus))) &&
                projTable.type().checkEstimated();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkReportedFinished</Name>
				<Source><![CDATA[
    public boolean checkReportedFinished(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus)) ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))&&
                projTable.type().checkReportedFinished();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRule</Name>
				<Source><![CDATA[
    public boolean checkRule(ProjStatusRule _projStatusTypeRule)
    {
        return ProjStatusTypeRule::exist(projTable.Status, projTable.Type, _projStatusTypeRule);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkScheduled</Name>
				<Source><![CDATA[
    public boolean checkScheduled(ProjStatus   _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkScheduled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkStartUp</Name>
				<Source><![CDATA[
    public boolean checkStartUp(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkStartUp();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUser1</Name>
				<Source><![CDATA[
    public boolean checkUser1(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkUser1();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUser2</Name>
				<Source><![CDATA[
    public boolean checkUser2(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkUser2();
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUser3</Name>
				<Source><![CDATA[
    public boolean checkUser3(ProjStatus _newStatus)
    {
        return ((ProjStatusTypeRule::checkStatusPrev(projTable.Type,this.status(),_newStatus))    ||
                (ProjStatusTypeRule::checkStatusNext(projTable.Type,this.status(),_newStatus)))   &&
                projTable.type().checkUser3();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlActivity</Name>
				<Source><![CDATA[
    public boolean ctrlActivity()
    {
        return  projTable.type().ctrlActivity();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlBankDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the bank document control can be enabled.
    /// </summary>
    /// <returns>
    /// true if the bank document type control can be enabled; otherwise, false.
    /// </returns>
    public boolean ctrlBankDocumentType()
    {
        boolean         ret                 = false;
        boolean         enableLGFeature     = BankLGFeatureChecker::checkBankLGEnabled();
        boolean         enableBankDocument  = enableLGFeature;
        ProjTableType   projTableType;

        if (enableBankDocument)
        {
            // Checks if the bank document type can be changed or not.
            if (!projTable.isBankDocumentCreated())
            {
                projTableType = projTable.type();

                // Checks if there is any bank document type is legal or not.
                if (projTableType)
                {
                    // Checks if the bank document type can be set to None or not.
                    if (!ret
                        && projTable.BankDocumentType != BankLGDocumentType::None)
                    {
                        ret = projTableType.ctrlBankDocumentType(BankLGDocumentType::None);
                    }

                    // Checks if the bank document type can be set to Letter of Guarantee or not.
                    if (!ret
                        && enableLGFeature
                        && projTable.BankDocumentType != BankLGDocumentType::LetterOfGuarantee)
                    {
                        ret = projTableType.ctrlBankDocumentType(BankLGDocumentType::LetterOfGuarantee);
                    }
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlBankLGRequestForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whehter the Letter of Guarantee button can be enabled.
    /// </summary>
    /// <returns>
    /// true if the Letter of Guarantee button can be enabled; otherwise, false.
    /// </returns>
    public boolean ctrlBankLGRequestForm()
    {
        boolean ret = false;

        if (BankLGFeatureChecker::checkBankLGEnabled())
        {
            ret = projTable.isMarkedForBankLG();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlCategoryPosting</Name>
				<Source><![CDATA[
    public boolean ctrlCategoryPosting()
    {
        return  projTable.type().ctrlCategoryPosting();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlControlCreate</Name>
				<Source><![CDATA[
    public boolean ctrlControlCreate()
    {
        return this.checkRule(ProjStatusRule::CreateEstimate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlControlGroup</Name>
				<Source><![CDATA[
    public boolean ctrlControlGroup()
    {
        return  projTable.type().ctrlControlGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlControlSystem</Name>
				<Source><![CDATA[
    public boolean ctrlControlSystem()
    {
        return projTable.type().ctrlControlSystem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlCustAccount</Name>
				<Source><![CDATA[
    public boolean ctrlCustAccount()
    {
        return  projTable.type().ctrlCustAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlExternal</Name>
				<Source><![CDATA[
    public boolean ctrlExternal()
    {
        return this.ctrlSalesOrderTable()   ||
               this.ctrlPurchOrderTable()   ||
               this.ctrlPurchReqTable()     ||
               this.ctrlPurchRFQCaseTable() ||
               this.ctrlProjItemReq()       ||
               this.ctrlPurchAgreement()    ||
               this.ctrlSalesAgreement()    ||
               this.ctrlProdOrder()         ||
               projTable.type().ctrlExternal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecast</Name>
				<Source><![CDATA[
    public boolean ctrlForecast()
    {
        return projTable.type().ctrlForecast();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastCost</Name>
				<Source><![CDATA[
    public boolean ctrlForecastCost()
    {
        return projTable.type().ctrlForecastCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastHour</Name>
				<Source><![CDATA[
    public boolean ctrlForecastHour()
    {
        return projTable.type().ctrlForecastHour();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastItem</Name>
				<Source><![CDATA[
    public boolean ctrlForecastItem()
    {
        return projTable.type().ctrlForecastItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastOnAcc</Name>
				<Source><![CDATA[
    public boolean ctrlForecastOnAcc()
    {
        return projTable.type().ctrlForecastOnAcc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastRevenue</Name>
				<Source><![CDATA[
    public boolean ctrlForecastRevenue()
    {
        return projTable.type().ctrlForecastRevenue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlForecastTransferFromQuotation</Name>
				<Source><![CDATA[
    public boolean ctrlForecastTransferFromQuotation()
    {
        return projTable.type().ctrlForecastTransferFromQuotation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlFunction</Name>
				<Source><![CDATA[
    public boolean ctrlFunction()
    {
        return  projTable.type().ctrlFunction();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlInquiry</Name>
				<Source><![CDATA[
    public boolean ctrlInquiry()
    {
        return  projTable.type().ctrlInquiry();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlInvoice</Name>
				<Source><![CDATA[
    public boolean ctrlInvoice()
    {
        return projTable.type().ctrlInvoice();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlInvoices</Name>
				<Source><![CDATA[
    public boolean ctrlInvoices()
    {
        return projTable.type().ctrlInvoices();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlOnAcc</Name>
				<Source><![CDATA[
    public boolean ctrlOnAcc()
    {
        return projTable.type().ctrlOnAcc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPosting</Name>
				<Source><![CDATA[
    public boolean ctrlPosting()
    {
        return  projTable.type().ctrlPosting();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProdOrder</Name>
				<Source><![CDATA[
    public boolean ctrlProdOrder()
    {
        return projTable.type().ctrlProdOrder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjForecastBudgettransfer</Name>
				<Source><![CDATA[
    public boolean ctrlProjForecastBudgettransfer()
    {
        return projTable.type().ctrlProjForecastBudgettransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjGroup</Name>
				<Source><![CDATA[
    public boolean ctrlProjGroup()
    {
        return  projTable.type().ctrlProjGroup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjItemReq</Name>
				<Source><![CDATA[
    public boolean ctrlProjItemReq()
    {
        boolean             retValue = true;

        if (retValue)
        {
            retValue = projTable.type().ctrlProjItemReq();
        }

        return retValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjPeriodicPostingCost</Name>
				<Source><![CDATA[
    public boolean ctrlProjPeriodicPostingCost()
    {
        return  projTable.type().ctrlProjPeriodicPostingCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjPeriodicPostingSales</Name>
				<Source><![CDATA[
    public boolean ctrlProjPeriodicPostingSales()
    {
        return  projTable.type().ctrlProjPeriodicPostingSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjSalesPriceCost</Name>
				<Source><![CDATA[
    public boolean ctrlProjSalesPriceCost()
    {
        return  projTable.type().ctrlProjSalesPriceCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjSalesPriceRevenue</Name>
				<Source><![CDATA[
    public boolean ctrlProjSalesPriceRevenue()
    {
        return  projTable.type().ctrlProjSalesPriceRevenue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProjTransRevenueSubscription</Name>
				<Source><![CDATA[
    public boolean ctrlProjTransRevenueSubscription()
    {
        return  projTable.type().ctrlProjTransRevenueSubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlProposal</Name>
				<Source><![CDATA[
    public boolean ctrlProposal()
    {
        return projTable.type().ctrlProposal();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPSADoInvoiceCost</Name>
				<Source><![CDATA[
    public boolean ctrlPSADoInvoiceCost()
    {
        return  projTable.type().ctrlPSADoInvoiceCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPSAPreBill</Name>
				<Source><![CDATA[
    public boolean ctrlPSAPreBill()
    {
        return  false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPurchAgreement</Name>
				<Source><![CDATA[
    public boolean ctrlPurchAgreement()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPurchOrderTable</Name>
				<Source><![CDATA[
    public boolean ctrlPurchOrderTable()
    {
        return projTable.type().ctrlPurchOrderTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPurchReqTable</Name>
				<Source><![CDATA[
    public boolean ctrlPurchReqTable()
    {
        return projTable.type().ctrlPurchReqTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlPurchRFQCaseTable</Name>
				<Source><![CDATA[
    public boolean ctrlPurchRFQCaseTable()
    {
        return projTable.type().ctrlPurchRFQCaseTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSalesAgreement</Name>
				<Source><![CDATA[
    public boolean ctrlSalesAgreement()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSalesOrderTable</Name>
				<Source><![CDATA[
    public boolean ctrlSalesOrderTable()
    {
        ProjFundingSource   projFundingSource;
        boolean             retValue = true;
        
		if (projTable.ProjInvoiceProjId)
        {
            if (!projTable.isAllowSalesOrdersForMultipleFundingSourcesParamEnabled())
            {
                if (ProjFundingSource::numberOfFundingSources(projTable.ProjInvoiceProjId) != 1)
                {
                    retValue = false;
                }

                if (retValue)
                {
                    // Sales Orders are only valid for funding sources of type Customer and Grant
                    select firstonly RecId from projFundingSource
                        where projFundingSource.ContractId == projTable.ProjInvoiceProjId &&
                            (projFundingSource.FundingType == ProjFundingType::Customer || projFundingSource.FundingType == ProjFundingType::Grant);
                    if (!projFundingSource)
                    {
                        retValue = false;
                    }
                }
            }

            if (!ProjInvoiceTable::hasExternalFundingSources(projTable.ProjInvoiceProjId))
            {
                retValue = false;
            }
        }

        if (retValue)
        {
            retValue = projTable.type().ctrlSalesOrderTable();
        }

        return retValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSalesQuotationProjTable</Name>
				<Source><![CDATA[
    public boolean ctrlSalesQuotationProjTable()
    {
        return projTable.type().ctrlSalesQuotationProjTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlService</Name>
				<Source><![CDATA[
    public boolean ctrlService()
    {
        return projTable.type().ctrlService();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlServiceAgreement</Name>
				<Source><![CDATA[
    public boolean ctrlServiceAgreement()
    {
        return projTable.type().ctrlServiceAgreement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSetup</Name>
				<Source><![CDATA[
    public boolean ctrlSetup()
    {
        return  projTable.type().ctrlSetup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMAAccrueSubscription</Name>
				<Source><![CDATA[
    public boolean ctrlSMAAccrueSubscription()
    {
        return  projTable.type().ctrlSMAAccrueSubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMACreateSubscription</Name>
				<Source><![CDATA[
    public boolean ctrlSMACreateSubscription()
    {
        return  projTable.type().ctrlSMACreateSubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMAIndexSubscription</Name>
				<Source><![CDATA[
    public boolean ctrlSMAIndexSubscription()
    {
        return  projTable.type().ctrlSMAIndexSubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMASalesPriceSubscription</Name>
				<Source><![CDATA[
    public boolean ctrlSMASalesPriceSubscription()
    {
        return  projTable.type().ctrlSMASalesPriceSubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMAServiceOrderTransfer</Name>
				<Source><![CDATA[
    public boolean ctrlSMAServiceOrderTransfer()
    {
        return  projTable.type().ctrlSMAServiceOrderTransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSMASubscription</Name>
				<Source><![CDATA[
    public boolean ctrlSMASubscription()
    {
        return  projTable.type().ctrlSMASubscription();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlStages</Name>
				<Source><![CDATA[
    public boolean ctrlStages()
    {
        return  projTable.type().ctrlStages();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlSubscriptions</Name>
				<Source><![CDATA[
    public boolean ctrlSubscriptions()
    {
        return  projTable.type().ctrlSubscriptions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTrans</Name>
				<Source><![CDATA[
    public boolean ctrlTrans()
    {
        return  projTable.type().ctrlTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransCost</Name>
				<Source><![CDATA[
    public boolean ctrlTransCost()
    {
        return  projTable.type().ctrlTransCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransProjectRevenueTrans</Name>
				<Source><![CDATA[
    public boolean ctrlTransProjectRevenueTrans()
    {
        return  projTable.type().ctrlTransProjectRevenueTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransProjTransItem</Name>
				<Source><![CDATA[
    public boolean ctrlTransProjTransItem()
    {
        return  projTable.type().ctrlTransProjTransItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransProjTransOnAccView</Name>
				<Source><![CDATA[
    public boolean ctrlTransProjTransOnAccView()
    {
        return  projTable.type().ctrlTransProjTransOnAccView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransPurchLine</Name>
				<Source><![CDATA[
    public boolean ctrlTransPurchLine()
    {
        return projTable.type().ctrlTransPurchLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlTransSalesLine</Name>
				<Source><![CDATA[
    public boolean ctrlTransSalesLine()
    {
        return projTable.type().ctrlTransSalesLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ctrlWizard</Name>
				<Source><![CDATA[
    public boolean ctrlWizard()
    {
        return  projTable.type().ctrlWizard();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        projTable.type().delete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromParent</Name>
				<Source><![CDATA[
    public void initFromParent(ProjId _projId)
    {
        projTable.type().initFromParent(_projId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        projTable.type().insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalCheckStatus</Name>
				<Source><![CDATA[
    public boolean journalCheckStatus()
    {
        boolean ret;

        ret = projTable.type().journalCheck();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateJournal))
            {
                ret = checkFailed(strFmt("@Proj:ProjStageCheck", projTable.ProjId , projTable.Stage()));
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalCheckStatusCost</Name>
				<Source><![CDATA[
    public boolean journalCheckStatusCost()
    {
        boolean ret;

        ret = projTable.type().journalCheckCost();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateJournal))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalCheckStatusRevenue</Name>
				<Source><![CDATA[
    public boolean journalCheckStatusRevenue()
    {
        boolean ret;

        ret = projTable.type().journalCheckRevenue();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateJournal))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(ProjTable _projTable)
    {
        projTable   = _projTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runCreated</Name>
				<Source><![CDATA[
    public void runCreated()
    {
        if (this.checkCreated(ProjStatus::Created))
        {
            projTable.type().runCreated();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runEstimated</Name>
				<Source><![CDATA[
    public void runEstimated()
    {
        if (this.checkEstimated(ProjStatus::Estimated))
        {
            projTable.type().runEstimated();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runReportedFinished</Name>
				<Source><![CDATA[
    public void runReportedFinished()
    {
        if (this.checkReportedFinished(ProjStatus::Completed))
        {
            projTable.type().runReportedFinished();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runScheduled</Name>
				<Source><![CDATA[
    public void runScheduled()
    {
        if (this.checkScheduled(ProjStatus::Scheduled))
        {
            projTable.type().runScheduled();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runStartUp</Name>
				<Source><![CDATA[
    public void runStartUp()
    {
        if (this.checkStartUp(ProjStatus::InProcess))
        {
            projTable.type().runStartUp();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runUser1</Name>
				<Source><![CDATA[
    public void runUser1()
    {
        if (this.checkUser1(ProjStatus::User1))
        {
            projTable.type().runUser1();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runUser2</Name>
				<Source><![CDATA[
    public void runUser2()
    {
        if (this.checkUser2(ProjStatus::User2))
        {
            projTable.type().runUser2();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runUser3</Name>
				<Source><![CDATA[
    public void runUser3()
    {
        if (this.checkUser3(ProjStatus::User3))
        {
            projTable.type().runUser3();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>status</Name>
				<Source><![CDATA[
    protected ProjStatus status()
    {
        return ProjStatus::Created;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        projTable.type().update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        return projTable.type().validateDelete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return projTable.type().validateWrite();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetCost</Name>
				<Source><![CDATA[
    public boolean validateWriteBudgetCost()
    {
        boolean ret;

        ret = projTable.type().validateWriteBudgetCost();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateForecast))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetEmpl</Name>
				<Source><![CDATA[
    public boolean validateWriteBudgetEmpl()
    {
        boolean ret;

        ret = projTable.type().validateWriteBudgetEmpl();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateForecast))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetItem</Name>
				<Source><![CDATA[
    public boolean validateWriteBudgetItem()
    {
        boolean ret;

        ret = projTable.type().validateWriteBudgetItem();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateForecast))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetOnAccount</Name>
				<Source><![CDATA[
    public boolean validateWriteBudgetOnAccount()
    {
        boolean ret;

        ret = projTable.type().validateWriteBudgetOnAccount();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateForecast))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteBudgetRevenue</Name>
				<Source><![CDATA[
    public boolean validateWriteBudgetRevenue()
    {
        boolean ret;

        ret = projTable.type().validateWriteBudgetRevenue();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateForecast))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteCreateJournal</Name>
				<Source><![CDATA[
    public boolean validateWriteCreateJournal()
    {
        boolean ret;

        ret = projTable.type().validateWriteCreateJournal();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateJournal))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteItemRequirement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Verifies whether creation of item requirement is enabled for the project status
    /// </summary>
    /// <returns>
    /// A boolean value that specifies whether creation of item requirement is enabled for the project status
    /// </returns>
    public boolean validateWriteItemRequirement()
    {
        boolean ret;

        ret = projTable.type().validateWriteSalesLine();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteProdTable</Name>
				<Source><![CDATA[
    public boolean validateWriteProdTable()
    {
        boolean ret;

        ret = projTable.type().validateWriteProdTable();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWritePurchReqTable</Name>
				<Source><![CDATA[
    public boolean validateWritePurchReqTable()
    {
        boolean ret;

        ret = projTable.type().validateWritePurchReqTable();

        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWritePurchTable</Name>
				<Source><![CDATA[
    public boolean validateWritePurchTable()
    {
        boolean ret;

        ret = projTable.type().validateWritePurchTable();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteSalesLine</Name>
				<Source><![CDATA[
    public boolean validateWriteSalesLine()
    {
        boolean ret;

        ret = projTable.type().validateWriteSalesLine();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteSalesTable</Name>
				<Source><![CDATA[
    public boolean validateWriteSalesTable()
    {
        boolean ret;

        ret = projTable.type().validateWriteSalesTable();
        if (ret)
        {
            if (!this.checkRule(ProjStatusRule::CreateItemTask))
            {
                ret = checkFailed(strFmt("@SYS53010", projTable.Stage()));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjStatusType construct(ProjTable _projTable)
    {
        ProjStatusType  resProjStatusType = null;

        switch (_projTable.Status)
        {
            case ProjStatus::Created:
                resProjStatusType = new ProjStatusType_Created(_projTable);
                break;

            case ProjStatus::Estimated:
                resProjStatusType = new ProjStatusType_Estimated(_projTable);
                break;

            case ProjStatus::Scheduled:
                resProjStatusType = new ProjStatusType_Scheduled(_projTable);
                break;

            case ProjStatus::InProcess:
                resProjStatusType = new ProjStatusType_StartedUp(_projTable);
                break;

            case ProjStatus::User1:
                resProjStatusType = new ProjStatusType_User1(_projTable);
                break;

            case ProjStatus::User2:
                resProjStatusType = new ProjStatusType_User2(_projTable);
                break;

            case ProjStatus::User3:
                resProjStatusType = new ProjStatusType_User3(_projTable);
                break;

            case ProjStatus::Completed:
                resProjStatusType = new ProjStatusType_ReportedFinished(_projTable);
                break;

            default:
                var eventHandlerResult = new EventHandlerResult();
                ProjStatusType::projStatusTypeCreating(_projTable, eventHandlerResult);

                if (eventHandlerResult.hasResult())
                {
                    resProjStatusType = eventHandlerResult.result();
                }
                else
                {
                    throw error("@SYS58047");
                }
        }

        return resProjStatusType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projStatusTypeCreating</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for getting the new <c>ProjStatusType</c> instance.
    /// </summary>
    /// <param name = "_projTable">
    /// A <c>ProjTable</c> record.
    /// </param>
    /// <param name = "_result">
    /// An <c>EventHandlerResult</c> instance, where subscribers can provide the new <c>ProjStatusType</c> instance.
    /// </param>
    static delegate void projStatusTypeCreating(ProjTable _projTable, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>