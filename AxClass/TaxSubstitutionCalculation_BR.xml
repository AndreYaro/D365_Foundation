<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSubstitutionCalculation_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles calculation of tax substitution base amount and tax amount
/// </summary>
class TaxSubstitutionCalculation_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTaxSubstitutionBase</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the base amount for tax substitution.
    /// </summary>
    /// <param name = "_tmpTax">The <c>TmpTax</c> record calculated.</param>
    /// <param name = "_taxDate">Calculation date.</param>
    /// <param name = "_taxBaseAmountForTaxOnTax">The tax base amount for tax on tax.</param>
    /// <param name = "_taxBaseAmountForTaxOnTaxCur">The tax base amount for tax on tax in transaction currency.</param>
    /// <param name = "_icmsAmountToSubtract">The ICMS tax amount in transaction currency to substract.</param>
    /// <param name = "_icmsAmountToSubtractMST">The ICMS tax amount to substract.</param>
    /// <param name = "_isTaxSubstitutionMarkupConfaz">The tax substitution is markup confaz 52 2017.</param>
    /// <returns>Calculated base amount for tax substitution.</returns>
    public static container calcTaxSubstitutionBase(
        TmpTax _tmpTax,
        TransDate _taxDate,
        TaxBase _taxBaseAmountForTaxOnTax,
        TaxBase _taxBaseAmountForTaxOnTaxCur,
        TaxAmount _icmsAmountToSubtract = 0,
        TaxAmount _icmsAmountToSubtractMST = 0,
        TaxSubstitutionEnum_BR _isTaxSubstitutionMarkupConfaz = false)
    {
        Debug::assert(_tmpTax.TaxCalculationOrder == TaxCalculationOrder::PercentageOfGrossAmountTaxOnTax
            || _tmpTax.TaxCalculationOrder == TaxCalculationOrder::PercentageOfGrossAmount);

        AmountCur taxBaseAmountForTaxOnTax = _taxBaseAmountForTaxOnTax;
        AmountCur taxBaseAmountForTaxOnTaxCur = _taxBaseAmountForTaxOnTaxCur;
        AmountCur taxSubstitutionAmountAddedMST_BR;
        AmountCur sourceTaxSubstitutionAmountAddedCur_BR;

        TaxData taxData = TaxData::find(_tmpTax.TaxCode, _taxDate, _taxBaseAmountForTaxOnTax);
        Factor factor = 1 - (TaxData::find(_tmpTax.TaxCode, _tmpTax.CalculationDate, 0).TaxValue / 100);

        switch (TaxTable::find(_tmpTax.TaxCode).TaxSubstitutionBaseRedCalcMode_BR)
        {
            // This is the calculation mode used in SYS layer
            case TaxSubstitutionBaseRedCalculationMode_BR::OwnOperationIpiAndMarkup :
                taxBaseAmountForTaxOnTax += _tmpTax.TaxBaseAmountMSTRaw;
                taxBaseAmountForTaxOnTaxCur += _tmpTax.SourceTaxBaseAmountCurRaw;

                taxSubstitutionAmountAddedMST_BR = taxBaseAmountForTaxOnTax;
                sourceTaxSubstitutionAmountAddedCur_BR = taxBaseAmountForTaxOnTaxCur;

                taxBaseAmountForTaxOnTax    += taxBaseAmountForTaxOnTax * (taxData.TaxSubstitutionMarkupValue /100);
                taxBaseAmountForTaxOnTaxCur += taxBaseAmountForTaxOnTaxCur * (taxData.TaxSubstitutionMarkupValue /100);
                
                if (_isTaxSubstitutionMarkupConfaz)
                {
                    taxBaseAmountForTaxOnTax = (taxBaseAmountForTaxOnTax - _icmsAmountToSubtractMST) / factor;
                    taxBaseAmountForTaxOnTaxCur = (taxBaseAmountForTaxOnTaxCur - _icmsAmountToSubtract) / factor;
                }

                taxBaseAmountForTaxOnTax = taxBaseAmountForTaxOnTax * (1 - (taxData.TaxReductionPct_BR / 100));
                taxBaseAmountForTaxOnTaxCur = taxBaseAmountForTaxOnTaxCur * (1 - (taxData.TaxReductionPct_BR / 100));

                break;

            case TaxSubstitutionBaseRedCalculationMode_BR::OwnOperationOnly :
                taxBaseAmountForTaxOnTax += _tmpTax.TaxBaseAmountMSTRaw * (1 - (taxData.TaxReductionPct_BR / 100));
                taxBaseAmountForTaxOnTaxCur +=  _tmpTax.SourceTaxBaseAmountCurRaw * (1 - (taxData.TaxReductionPct_BR / 100));

                taxSubstitutionAmountAddedMST_BR = taxBaseAmountForTaxOnTax;
                sourceTaxSubstitutionAmountAddedCur_BR = taxBaseAmountForTaxOnTaxCur;

                taxBaseAmountForTaxOnTax    += taxBaseAmountForTaxOnTax * (taxData.TaxSubstitutionMarkupValue /100);
                taxBaseAmountForTaxOnTaxCur += taxBaseAmountForTaxOnTaxCur * (taxData.TaxSubstitutionMarkupValue /100);

                if (_isTaxSubstitutionMarkupConfaz)
                {
                    taxBaseAmountForTaxOnTax = (taxBaseAmountForTaxOnTax - _icmsAmountToSubtractMST) / factor;
                    taxBaseAmountForTaxOnTaxCur = (taxBaseAmountForTaxOnTaxCur - _icmsAmountToSubtract) / factor;
                }

                break;
        }

        return [taxBaseAmountForTaxOnTax, taxBaseAmountForTaxOnTaxCur, taxSubstitutionAmountAddedMST_BR, sourceTaxSubstitutionAmountAddedCur_BR];
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustCalculatedTaxSubstitutionAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adjusts tax substitution amounts calculated.
    /// </summary>
    /// <param name = "_tmpTax">The <c>TmpTax</c> record calculated.</param>
    /// <param name = "_taxDate">Calculation date.</param>
    /// <param name = "_taxBaseAmountForTaxOnTax">The tax base amount for tax on tax.</param>
    /// <param name = "_icmsAmountToSubtract">ICMS amount to subtract.</param>
    /// <param name = "_icmsAmountToSubtractMST">ICMS amount in company currency to subtract.</param>
    /// <param name = "_isICMSDiffAndUseTaxEnabled">Tax type is ICMS-Diff and tax direction is Use tax.</param>
    public static void adjustCalculatedTaxSubstitutionAmounts(
        TmpTax _tmpTax,
        TransDate _taxDate,
        TaxBase _taxBaseAmountForTaxOnTax,
        TaxAmount _icmsAmountToSubtract,
        TaxAmount _icmsAmountToSubtractMST,
        boolean _isICMSDiffAndUseTaxEnabled = false)
    {
        Debug::assert(_tmpTax.TaxCalculationOrder == TaxCalculationOrder::PercentageOfGrossAmountTaxOnTax
                || _tmpTax.TaxCalculationOrder == TaxCalculationOrder::PercentageOfGrossAmount);

        TaxTable taxTable = TaxTable::find(_tmpTax.TaxCode);
        
        TaxSubstitution_BR taxSubstitution = taxTable.TaxSubstitution_BR;
        if ((taxSubstitution == TaxSubstitutionEnum_BR::Markup || taxSubstitution == TaxSubstitutionEnum_BR::MarkupConfaz_52_2017)
            || _isICMSDiffAndUseTaxEnabled)
        {
            taxSubstitution = TaxSubstitutionEnum_BR::Markup;
        }

        TaxAmount icmsAmountToSubtract = _icmsAmountToSubtract;
        TaxAmount icmsAmountToSubtractMST = _icmsAmountToSubtractMST;

        switch (taxSubstitution)
        {
            case TaxSubstitutionEnum_BR::Markup :
                // We need to have the same sign to subtract correctly
                if (sign(icmsAmountToSubtractMST) != sign(_tmpTax.TaxAmountMST)
                                        && sign(icmsAmountToSubtract) != sign(_tmpTax.SourceTaxAmountCurReal))
                {
                    icmsAmountToSubtractMST = icmsAmountToSubtractMST * -1;
                    icmsAmountToSubtract = icmsAmountToSubtract * -1;
                }

                _tmpTax.TaxAmountMST        -= icmsAmountToSubtractMST;
                _tmpTax.TaxAmountCur        -= icmsAmountToSubtractMST; // assuming tax currency = company currency

                if (_tmpTax.TaxInCostPrice)
                {
                    _tmpTax.TaxInCostPriceMST   -= icmsAmountToSubtractMST;
                    _tmpTax.TaxInCostPriceCur   -= icmsAmountToSubtractMST; // assuming tax currency = company currency
                    _tmpTax.TaxInCostPrice      -= icmsAmountToSubtract;
                }

                _tmpTax.SourceTaxAmountCurReal -= icmsAmountToSubtract;
                _tmpTax.SourceTaxAmountCur -= icmsAmountToSubtract;
                break;
        
            case TaxSubstitutionEnum_BR::SimplifiedEstimate :
                TaxData taxData = TaxData::find(taxTable.TaxCode, _taxDate, _taxBaseAmountForTaxOnTax);
            
                if (taxData.TaxValue)
                {
                    _tmpTax.TaxSubstitutionAmountAddedMST_BR =
                                            taxTable.roundedOffTax((_tmpTax.TaxAmountMST + icmsAmountToSubtractMST) / (taxData.TaxValue / 100)) - _tmpTax.TaxBaseAmountMST;
                
                    _tmpTax.SourceTaxSubstitutionAmountAddedCur_BR =
                                            taxTable.roundedOffTax((_tmpTax.SourceTaxAmountCur + icmsAmountToSubtract) / (taxData.TaxValue / 100)) - _tmpTax.SourceTaxBaseAmountCur;
                
                    _tmpTax.TaxBaseAmountCur += _tmpTax.TaxSubstitutionAmountAddedMST_BR; // assuming tax currency = company currency
                    _tmpTax.TaxBaseAmountMST += _tmpTax.TaxSubstitutionAmountAddedMST_BR;
                
                    _tmpTax.SourceTaxBaseAmountCur += _tmpTax.SourceTaxSubstitutionAmountAddedCur_BR;
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>