<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateAppVersionManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute, SysSetupTableAttribute(tablestr(SysSetupLog))]
class ReleaseUpdateAppVersionManager implements SysSetup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>CurrentVersion</Name>
				<Source><![CDATA[
    private sysReleasedVersion CurrentVersion()
    {
        return sysReleasedVersion::v81;
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    
    public void loadData()
    {
        this.CleanUpSysSetupLog();

        if(this.ReleaseUpdateVersionsExist() && !this.CurrentVersionExistsInReleaseUpdateVersions())
        {
            this.InsertCurrentVersionIntoReleaseUpdateVersions();
        }
        
        this.InsertCurrentVersionIntoSysSetupLog();        
    }

]]></Source>
			</Method>
			<Method>
				<Name>CleanUpSysSetupLog</Name>
				<Source><![CDATA[
    private void CleanUpSysSetupLog()
    {
        SysSetupLog sysSetupLog;
        sysReleasedVersion  fromVersion;

        delete_from sysSetupLog
            where sysSetupLog.Name == classStr(ReleaseUpdateDB) + staticmethodstr(ReleaseUpdateDB, getFromVersion)
            && SysSetupLog.Description != int2Str(enum2int(this.CurrentVersion()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>InsertCurrentVersionIntoSysSetupLog</Name>
				<Source><![CDATA[
    private void InsertCurrentVersionIntoSysSetupLog()
    {
        SysSetupLog sysSetupLog;
        sysReleasedVersion  fromVersion;

        select firstonly Description from sysSetupLog
            where sysSetupLog.Name == classStr(ReleaseUpdateDB) + staticmethodstr(ReleaseUpdateDB, getFromVersion)
            && SysSetupLog.Description == int2Str(enum2int(this.CurrentVersion()));

        if(!SysSetupLog)
        {
            SysSetupLog::save(classStr(ReleaseUpdateDB) + staticmethodstr(ReleaseUpdateDB, getFromVersion), int2Str(enum2int(this.CurrentVersion())));
            SysSetupLog::save(classStr(ReleaseUpdateAppVersionManager), int2Str(enum2int(this.CurrentVersion())));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>InsertCurrentVersionIntoReleaseUpdateVersions</Name>
				<Source><![CDATA[
    private void InsertCurrentVersionIntoReleaseUpdateVersions()
    {
        int currentVersion = enum2int(this.CurrentVersion());

        str sqlStmt = strFmt("INSERT INTO RELEASEUPDATEVERSIONS (APPLICATIONVERSION) VALUES (%1)", currentVersion);

        this.ExecuteSQLUpdate(sqlStmt);
    }

]]></Source>
			</Method>
			<Method>
				<Name>CurrentVersionExistsInReleaseUpdateVersions</Name>
				<Source><![CDATA[
    private boolean CurrentVersionExistsInReleaseUpdateVersions()
    {
        boolean result = false;
        int currentVersion = enum2int(this.CurrentVersion());

        str sqlStmt = strFmt("SELECT * FROM RELEASEUPDATEVERSIONS WHERE APPLICATIONVERSION = %1", currentVersion);

        ResultSet resultSet = this.ExecuteSQLQuery(sqlStmt);

        result = ResultSet.next();

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ReleaseUpdateVersionsExist</Name>
				<Source><![CDATA[
    private boolean ReleaseUpdateVersionsExist()
    {
        boolean result = false;

        ResultSet resultSet = this.ExecuteSQLQuery("SELECT * FROM SYS.TABLES WHERE NAME = 'RELEASEUPDATEVERSIONS'");

        result = ResultSet.next();

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ExecuteSQLQuery</Name>
				<Source><![CDATA[
    private ResultSet ExecuteSQLQuery(str sqlStatement)
    {
        UserConnection  sessionConnection = new UserConnection();
        Statement       statement = sessionConnection.createStatement();
        ResultSet       result;

        new SqlStatementExecutePermission(sqlStatement).assert();
        result = statement.executeQuery(sqlStatement);
        
        CodeAccessPermission::revertAssert();

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ExecuteSQLUpdate</Name>
				<Source><![CDATA[
    private int ExecuteSQLUpdate(str sqlStatement)
    {
        UserConnection  sessionConnection = new UserConnection();
        Statement       statement = sessionConnection.createStatement();
        int       result;

        new SqlStatementExecutePermission(sqlStatement).assert();
        result = statement.executeUpdate(sqlStatement);
        
        CodeAccessPermission::revertAssert();

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>