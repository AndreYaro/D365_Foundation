<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTableVendExternalDocumentHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class handles document attachment for records that are used for CRUD operations on the vendor portal.
/// </summary>
public static class VendTableVendExternalDocumentHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DocuRef_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows only External type attachments on the <c>DocuAttachment</c> form if calling from <c>VendTableVendExternal</c> form.
    /// </summary>
    /// <param name = "_sender">An instance of the FormDataSource.</param>
    /// <param name = "_e">Args passed in by the event. </param>
    [FormDataSourceEventHandler(formDataSourceStr(DocuAttachment, DocuRef), FormDataSourceEventType::QueryExecuting)]
    public static void DocuRef_OnQueryExecuting(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        var callerForm = _sender.formRun().args().callerName();
        if (callerForm == formStr(VendTableVendExternal))
        {
            QueryBuildDataSource qB = _sender.queryBuildDataSource();
            qB.clearRange(fieldnum(DocuRef, Restriction));
            QueryBuildRange criteriaRestriction = qB.addRange(fieldnum(DocuRef, Restriction));
            criteriaRestriction.status(RangeStatus::Locked);
            criteriaRestriction.value(queryValue(enum2Value(DocuRestriction::External)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuAttachment_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables and hides the Restriction field control on the <c>DocuAttachment</c> form if calling from <c>VendTableVendExternal</c> form.
    /// </summary>
    /// <param name = "_sender">An instance of the <c>DocuAttachment</c> form. </param>
    /// <param name = "_e">Args passed in by the event. </param>
    [FormEventHandler(formStr(DocuAttachment), FormEventType::Initialized)]
    public static void DocuAttachment_OnInitialized(xFormRun _sender, FormEventArgs _e)
    {
        if (_sender.args().callerName() == formStr(VendTableVendExternal))
        {
            FormComboBoxControl restrictionComboxControl = _sender.design().controlName(formControlStr(DocuAttachment, DocuRef_RestrictionCopy1));
            restrictionComboxControl.visible(false);
            restrictionComboxControl.enabled(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>DocuRefOnInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the restriction for the attachment to external when it is attached to records that are used for CRUD operations on the vendor side,
    /// and set the company on the attachment to the current company.
    /// </summary>
    [SubscribesTo(classstr(DocuRefExtension), delegatestr(DocuRefExtension, OnInsert))]
    public static void DocuRefOnInsert(DocuRef _docuRef, RecId _interCompanyFromRecId)
    {
        switch (_docuRef.RefTableId)
        {
            case tableNum(VendBankAccount):
            case tableNum(VendCertification):
            {
                changecompany(_docuRef.RefCompanyId)
                {
                    _docuRef.Restriction = DocuRestriction::External;
                    _docuRef.ActualCompanyId = curext();
                }
                break;
            }
            default:
            break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>