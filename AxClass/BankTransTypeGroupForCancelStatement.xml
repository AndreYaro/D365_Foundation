<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankTransTypeGroupForCancelStatement</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Group the cancelled statement transactions amount according to BankTransTypeGroupDetails.
/// </summary>
internal final class BankTransTypeGroupForCancelStatement
{
    private BankAccountStatement bankAccountStatement;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromStatement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>BankTransTypeGroupForCancelStatement</c> class.
    /// </summary>
    /// <param name = "_bankAccountStatement">The bank account statement.</param>
    /// <returns>The <c>BankTransTypeGroupForCancelStatement</c> class instance.</returns>
    internal static BankTransTypeGroupForCancelStatement newFromStatement(BankAccountStatement _bankAccountStatement)
    {
        BankTransTypeGroupForCancelStatement bankTransTypeGroupForCancelStatement = new BankTransTypeGroupForCancelStatement();

        bankTransTypeGroupForCancelStatement.bankAccountStatement = _bankAccountStatement;
        return bankTransTypeGroupForCancelStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBankGroupSums</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create groups for the cancelled statement transactions amount.
    /// </summary>
    /// <returns>The <c>TmpBankTransTypeSum</c> table.</returns>
    internal TmpBankTransTypeSum createBankGroupSums()
    {
        BankAccountStatementTransactionsHistory bankAccountStatementTransactionsHistory;
        BankTransTypeGroupDetails bankTransGroupDetails;
        TmpBankTransTypeSum tmpBankTransTypeSum;

        while select sum(AmountCur), sum(AmountCorrect), count(RecId) from bankAccountStatementTransactionsHistory
            where bankAccountStatementTransactionsHistory.StatementRecId == bankAccountStatement.RecId
            outer join bankTransGroupDetails
            group by BankTransactionTypeGroup
                where bankTransGroupDetails.BankTransactionType == bankAccountStatementTransactionsHistory.BankTransType
        {
            this.insertBankTransTypeSum(bankAccountStatementTransactionsHistory, bankTransGroupDetails.BankTransactionTypeGroup, tmpBankTransTypeSum);
        }

        return tmpBankTransTypeSum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertBankTransTypeSum</Name>
				<Source><![CDATA[
    private void insertBankTransTypeSum(
        BankAccountStatementTransactionsHistory _bankAccountStatementTransactionsHistory,
        BankTransactionTypeGroup _bankTransactionTypeGroup,
        TmpBankTransTypeSum _tmpBankTransTypeSum)
    {
        _tmpBankTransTypeSum.clear();
        _tmpBankTransTypeSum.AccountId = bankAccountStatement.AccountId;
        _tmpBankTransTypeSum.AccountStatementDate = bankAccountStatement.AccountStatementDate;
        _tmpBankTransTypeSum.BankTransactionTypeGroup = _bankTransactionTypeGroup;
        _tmpBankTransTypeSum.ClearedAmountCur = _bankAccountStatementTransactionsHistory.AmountCur + _bankAccountStatementTransactionsHistory.AmountCorrect;
        _tmpBankTransTypeSum.Lines = any2int(_bankAccountStatementTransactionsHistory.RecId);
        _tmpBankTransTypeSum.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>