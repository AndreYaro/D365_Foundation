<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkBlockingReasonExecutingWave</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWorkBlockingReasonExecutingWave</c> class encapsulates the rules for the blocking reason for work that is related to a wave that is still processing.
/// </summary>
[WHSWorkBlockingReasonTypeAttribute(WHSWorkBlockingReasonType::ExecutingWave)]
internal final class WHSWorkBlockingReasonExecutingWave extends WHSWorkBlockingReason
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCancelBlockedWork</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean canCancelBlockedWork()
    {
        return this.isCancelDemandWork()
            || checkFailed(strFmt("@WarehouseExecutionWorkload:WHSCancellationOfWorkBlockedByExecutingWave_ErrorMessage", workTable.WorkId, WHSWorkBlockingReasonType::ExecutingWave));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCancelDemandWork</Name>
				<Source><![CDATA[
    private boolean isCancelDemandWork()
    {
        return WHSDeleteExactReplenLinkOnCancelWorkContext::instance() != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canUnBlockReason</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    public WHSWorkUnBlockingValidationResult canUnBlockReason()
    {
        if (this.isBlockedByExecutingWave())
        {
            return WHSWorkUnBlockingValidationResult::newFailureWithMessage(strFmt("@WAX:WHSWorkBlockingExecutingWaveReason_ErrorMessage", workTable.WorkId, workTable.WaveId, WHSWaveStatus::Executing));
        }

        return WHSWorkUnBlockingValidationResult::newSuccess();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBlockedByExecutingWave</Name>
				<Source><![CDATA[
    private boolean isBlockedByExecutingWave()
    {
        if (!workTable.WaveId)
        {
            return false;
        }

        return WHSWaveTable::find(workTable.WaveId).WaveStatus == WHSWaveStatus::Executing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>detailedBlockingMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected internal str detailedBlockingMessage()
    {
        return this.canUnBlockReason().errorMessage();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected internal WHSWorkBlockingReasonDescription description()
    {
        return "@WAX:WHSWorkBlockingReasonExecutingWave_Description";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>