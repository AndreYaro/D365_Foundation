<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesLineWFTypeSubmitManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailSalesLineWFTypeSubmitManager</c> menu item action event handler.
/// </summary>
public class RetailSalesLineWFTypeSubmitManager 
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WorkflowSubmitDialog workflowSubmitDialog;
        WorkflowComment workflowComment;
        WorkflowCorrelationId workflowCorrelationId;
        WorkflowTypeName workflowTypeName = workflowTypeStr(RetailSalesLineWFType);
        MCRSalesLine mcrSalesLine;
        SalesLine salesLine;
        SalesLine salesLineTemp;

        if (_args.record() && _args.caller())
        {
            workflowSubmitDialog = WorkflowSubmitDialog::construct(_args.caller().getActiveWorkflowConfiguration());
            workflowSubmitDialog.run();

            if (workflowSubmitDialog.parmIsClosedOK())
            {
                // Get comments from the submit to workflow dialog.
                workflowComment = workflowSubmitDialog.parmWorkflowComment();

                try
                {
                    salesLineTemp = _args.record();
                    if (salesLineTemp)
                    {
						// submit all not submitted lines
                        while select salesLine
                            where salesLine.SalesId == salesLineTemp.SalesId
                        {                       
                            mcrSalesLine = salesLine.mcrSalesLine();
                            if (mcrSalesLine && mcrSalesLine.RetailPriceOverrideWorkflowState == RetailPriceOverrideWorkflowState::NotSubmitted)
                            {                 
                                ttsbegin;
                                // Activate the workflow
                                workflowCorrelationId = Workflow::activateFromWorkflowType(workflowTypeName, salesLine.RecId, workflowComment, NoYes::No);

                                mcrSalesLine.selectForUpdate(true);
                                mcrSalesLine.RetailPriceOverrideWorkflowState = RetailPriceOverrideWorkflowState::Submitted;
                                mcrSalesLine.update();      
                                ttscommit;        
                            }
                           
                        }

                        _args.caller().updateWorkflowControls();
                        _args.caller().doRefresh();
                    }
                }
                catch (Exception::Error)
                {
                    error('Error on retail sales line workflow submit.');
                }
    
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>