<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalizerProjectExtensionProcessInvoicesContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Establishes the current context of invoices processing.
/// </summary>
internal class SubledgerJournalizerProjectExtensionProcessInvoicesContext implements System.IDisposable
{
    private static SubledgerJournalizerProjectExtensionProcessInvoicesContext instance;
    private SourceDocument sourceDocument;
    private CustInvoiceTable custInvoiceTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    { }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    public static SubledgerJournalizerProjectExtensionProcessInvoicesContext instance()
    {
        if (!instance)
        {
            instance = new SubledgerJournalizerProjectExtensionProcessInvoicesContext();
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current instance.
    /// </summary>
    /// <returns>The current instance.</returns>
    public static SubledgerJournalizerProjectExtensionProcessInvoicesContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the source document reference.
    /// </summary>
    /// <param name = "_sourceDocument">Source document.</param>
    /// <returns>Current source document.</returns>
    public SourceDocument parmSourceDocument(SourceDocument _sourceDocument = sourceDocument)
    {
        sourceDocument = _sourceDocument;
        return sourceDocument;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReasonRefRecID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns reason reference for the current source document if applicable.
    /// </summary>
    /// <returns>
    /// <c>ReasonRefRecID</c> value.
    /// </returns>
    public ReasonRefRecID getReasonRefRecID()
    {
        ReasonRefRecID ret;
        CustInvoiceSourceDoc custInvoiceSD = sourceDocument as CustInvoiceSourceDoc;
        if (custInvoiceSD)
        {
            if (!custInvoiceTable)
            {
                custInvoiceTable = custInvoiceTable::findRecId(custInvoiceSD.parmCustInvoiceTableRecId());
            }
            ret = custInvoiceTable.CorrectionReasonCode;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>