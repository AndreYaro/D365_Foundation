<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModuleBOM</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModuleBOM extends NumberSeqApplicationModule
{
    /// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    /*
    Detailed description of how to setup references for number sequences can
    be found i method loadModule() on the 'father' class: NumberSeqApplicationModule.
    */

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        /* Setup BOM id */

        datatype.parmDatatypeId(extendedtypenum(BOMId));
        datatype.parmReferenceHelp(literalstr("@SYS53854"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup Config id */

        datatype.parmDatatypeId(extendedtypenum(EcoResItemConfigurationName));
        datatype.parmReferenceHelp(literalstr("@SYS53852"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardHighest(999999);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup BOM calculation id */

        datatype.parmDatatypeId(extendedtypenum(PriceCalcId));
        datatype.parmReferenceHelp(literalstr("@SYS53855"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedtypenum(PmfFormulaId));
        datatype.parmReferenceHelp(literalstr("@PRO177"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardIsManual(NoYes::Yes);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(4);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        this.createBOMProductComponentMatchIdNumberSequence();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createBOMProductComponentMatchIdNumberSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>NumberSequenceReference</c> for Product-component match ID number sequence.
    /// </summary>
    internal void createBOMProductComponentMatchIdNumberSequence()
    {
        if (BOMParameters::find().EnableTrackedComponents)
        {
            NumberSeqDatatype datatype = NumberSeqDatatype::construct();

            /* Setup Product component match ID */
            datatype.parmDatatypeId(extendedtypenum(ProdAsBuiltBOMMatchId));
            datatype.parmReferenceHelp(literalstr("@SCM:TrackedComponentsMatchId"));
            datatype.parmWizardIsContinuous(false);
            datatype.parmWizardfetchAheadQty(10);
            datatype.parmWizardIsManual(NoYes::No);
            datatype.parmWizardIsChangeDownAllowed(NoYes::No);
            datatype.parmWizardIsChangeUpAllowed(NoYes::No);
            datatype.parmSortField(5);
            datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
            this.create(datatype);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::BOM;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    /// <param name="numberSeqModuleNamesMap">A map of number sequences</param>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleBOM), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>