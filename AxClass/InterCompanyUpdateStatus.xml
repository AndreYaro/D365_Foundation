<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanyUpdateStatus</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InterCompanyUpdateStatus extends InterCompanyUpdate
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>purchStatus2SalesStatus</Name>
				<Source><![CDATA[
    public SalesStatus purchStatus2SalesStatus(PurchStatus _purchStatus)
    {
        switch (_purchStatus)
        {
            case PurchStatus::None: 
                return SalesStatus::None;
            case PurchStatus::Backorder:
                return SalesStatus::Backorder;
            case PurchStatus::Received:
                return SalesStatus::Delivered;
            case PurchStatus::Invoiced:
                return SalesStatus::Invoiced;
            case PurchStatus::Canceled:
                return SalesStatus::Canceled;
        }
        return SalesStatus::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesStatus2PurchStatus</Name>
				<Source><![CDATA[
    public PurchStatus salesStatus2PurchStatus(SalesStatus _salesStatus)
    {
        switch (_salesStatus)
        {
            case SalesStatus::None:
                return PurchStatus::None;
            case SalesStatus::Backorder:
                return PurchStatus::Backorder;
            case SalesStatus::Delivered:
                return PurchStatus::Received;
            case SalesStatus::Invoiced:
                return PurchStatus::Invoiced;
            case SalesStatus::Canceled:
                return PurchStatus::Canceled;
        }
        return PurchStatus::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static InterCompanyUpdate construct(Common _common)
    {
        switch (_common.TableId)
        {
            case tablenum(PurchLine):
                return new InterCompanyUpdateStatus_PurchLine();
            case tablenum(SalesLine):
                return new InterCompanyUpdateStatus_SalesLine();
            default: 
                throw error(strfmt("@SYS19306", funcname()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>synchronize</Name>
				<Source><![CDATA[
    static void synchronize(Common                 _common,
                            InterCompanySkipUpdate _skipUpdate = InterCompanySkipUpdate::No)

    {
        InterCompanyUpdateStatus  interCompanyUpdateStatus = InterCompanyUpdateStatus::construct(_common);
        interCompanyUpdateStatus.parmBuffer(_common);
        interCompanyUpdateStatus.parmSkipUpdate(_skipUpdate);
        interCompanyUpdateStatus.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>