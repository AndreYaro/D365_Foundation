<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithTaxPaymentUtils</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// /// <summary>
/// The util for with tax payment.
/// </summary>
[SysObsolete('This class is obsolete. Use TaxGSTEPZCodeHelper instead.', true, 17\12\2020)]
internal class TaxWithTaxPaymentUtils
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultWithTaxPayment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the value of the with tax payment field default yes when EPZ code is not none.
    /// </summary>
    /// <param name = "_parameters">The parameters object.</param>
    /// <returns>
    /// Return yes if EPZ code is not none,otherwise return no.
    /// </returns>
    public static NoYes getDefaultWithTaxPayment(TaxWithTaxPaymentUtilsParameters _parameters)
    {
        boolean ret;

        TaxGSTEPZCode_IN taxGSTEPZCode_IN = _parameters.logisticsLocationExt.TaxGSTEPZCode_IN;

        if (taxGSTEPZCode_IN == TaxGSTEPZCode_IN::BTP
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::EHTP
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::EOU
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::SEZ
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::STP)
        {
            ret = NoYes::Yes;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWithTaxPaymentEditable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the the with tax payment field allowedit and visiable is yes when EPZ code is not none.
    /// Set the the with tax payment field allowedit and visiable is yes when EPZ code is none and export order.
    /// </summary>
    /// <param name = "_parameters">The parameters object.</param>
    /// <returns>
    /// Return yes when EPZ code is not none and EPZ code is none and export order, otherwise return no.
    /// </returns>
    public static boolean isWithTaxPaymentEditable(TaxWithTaxPaymentUtilsParameters _parameters)
    {
        boolean ret;
        NoYesId customsExportOrder_IN;

        TaxGSTEPZCode_IN taxGSTEPZCode_IN = _parameters.logisticsLocationExt.TaxGSTEPZCode_IN;

        if (_parameters.salesTable)
        {
            customsExportOrder_IN = _parameters.salesTable.CustomsExportOrder_IN;
        }
        else if (_parameters.custInvoiceTable && _parameters.custInvoiceTable.OrderAccount)
        {
            customsExportOrder_IN = TaxInformationCustTable_IN::findByCustTable(_parameters.custInvoiceTable.OrderAccount).IsForeign;
        }

        if (taxGSTEPZCode_IN == TaxGSTEPZCode_IN::BTP
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::EHTP
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::EOU
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::SEZ
            || taxGSTEPZCode_IN == TaxGSTEPZCode_IN::STP
            || (taxGSTEPZCode_IN == TaxGSTEPZCode_IN::None
                && customsExportOrder_IN == NoYes::Yes))
        {
            ret = true;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>