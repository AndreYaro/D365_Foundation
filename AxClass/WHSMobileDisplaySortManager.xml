<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileDisplaySortManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileDisplaySortManager</c> class controls the sorting of the work list.
/// </summary>
public class WHSMobileDisplaySortManager
{
    private const str SortField = 'SortField';
    private const str SortOrder = 'SortOrder';

    FieldName   currentSortField;
    SortOrder   currentSortOrder;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>consumePassthrough</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the class parameters based on the values of the pass.
    /// </summary>
    /// <param name = "_pass">The current <c>WHSRFPassthrough</c> object</param>
    public void consumePassthrough(WHSRFPassthrough _pass)
    {
        if (_pass.exists(SortField))
        {
            this.parmCurrentSortField(_pass.lookup(SortField));
        }
        if (_pass.exists(SortOrder))
        {
            this.parmCurrentSortOrder(_pass.lookup(SortOrder));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentSortField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current selectedsorting field name.
    /// </summary>
    /// <param name = "_currentSortField">The sorting field name to set</param>
    /// <returns>The selected sorting field name</returns>
    public str parmCurrentSortField(FieldName _currentSortField = currentSortField)
    {
        currentSortField = _currentSortField;
        return currentSortField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrentSortOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current selected sorting order.
    /// </summary>
    /// <param name = "_currentSortOrder">The sorting order to set</param>
    /// <returns>The selected sorting forder</returns>
    public SortOrder parmCurrentSortOrder(SortOrder _currentSortOrder = currentSortOrder)
    {
        currentSortOrder = _currentSortOrder;
        return currentSortOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processSort</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the selected sorting order to the opposite than the one selected before
    /// if the sorting field the class is handling is the one currently clicked; otherwise
    /// initializes the sorting field of the class to the currently clicked and defaults
    /// the sorting order to descending.
    /// </summary>
    /// <param name = "_buttonClicked">The field name of the clicked control</param>
    private void processSort(str _buttonClicked)
    {
        if (this.parmCurrentSortField() == _buttonClicked)
        {
            if (this.parmCurrentSortOrder() == SortOrder::Ascending)
            {
                this.parmCurrentSortOrder(SortOrder::Descending);
            }
            else
            {
                this.parmCurrentSortOrder(SortOrder::Ascending);
            }
        }
        else
        {
            this.parmCurrentSortField(_buttonClicked);
            this.parmCurrentSortOrder(SortOrder::Descending);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processSortAndUpdatePassThrough</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the values of the pass object related to the sorting and
    /// updates it accordingly.
    /// </summary>
    /// <param name = "_pass">The current <c>WHSRFPassthrough</c> object</param>
    /// <param name = "_buttonClicked">The field name of the clicked control</param>
    public void processSortAndUpdatePassThrough(WHSRFPassthrough _pass, str _buttonClicked)
    {
        this.consumePassthrough(_pass);
        this.processSort(_buttonClicked);
        this.updatePassthrough(_pass);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePassthrough</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sorting field name and sorting order key values of the pass object.
    /// </summary>
    /// <param name = "_pass">The current <c>WHSRFPassthrough</c> object</param>
    public void updatePassthrough(WHSRFPassthrough _pass)
    {
        _pass.insert(SortField, this.parmCurrentSortField());
        _pass.insert(SortOrder, this.parmCurrentSortOrder());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSMobileDisplaySortManager construct()
    {
        WHSMobileDisplaySortManager sortManager = new WHSMobileDisplaySortManager();

        return sortManager;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
