<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResReqLineApprovalEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The ResReqLineApprovalEventHandler workflow outcome event handler.
/// </summary>
public final class ResReqLineApprovalEventHandler implements WorkflowElementCanceledEventHandler,
	WorkflowElemChangeRequestedEventHandler,
	WorkflowElementCompletedEventHandler,
	WorkflowElementReturnedEventHandler,
	WorkflowElementStartedEventHandler,
	WorkflowElementDeniedEventHandler,
	WorkflowWorkItemsCreatedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item canceled started event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void started(WorkflowElementEventArgs _workflowElementEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item canceled denied event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void canceled(WorkflowElementEventArgs _workflowElementEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item completed denied event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void completed(WorkflowElementEventArgs _workflowElementEventArgs)
	{
        if (_workflowElementEventArgs && _workflowElementEventArgs.parmWorkflowContext())
        {
            ResRequestHelper::promoteByResRequestLine(
                _workflowElementEventArgs.parmWorkflowContext().parmRecId(), ResApprovalStatus::Approved);
        }
	}

]]></Source>
			</Method>
			<Method>
				<Name>denied</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item denied event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void denied(WorkflowElementEventArgs _workflowElementEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>changeRequested</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item change requested event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void changeRequested(WorkflowElementEventArgs _workflowElementEventArgs)
	{
	}

]]></Source>
			</Method>
			<Method>
				<Name>returned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item returned event handler.
    /// </summary>
    /// <param name = "_workflowElementEventArgs">Workflow element event arguments.</param>
    public void returned(WorkflowElementEventArgs _workflowElementEventArgs)
	{
        if (_workflowElementEventArgs && _workflowElementEventArgs.parmWorkflowContext())
        {
            ResRequestHelper::promoteByResRequestLine(
                _workflowElementEventArgs.parmWorkflowContext().parmRecId(), ResApprovalStatus::Returned);
        }
	}

]]></Source>
			</Method>
			<Method>
				<Name>created</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resource request line approval workflow item created event handler.
    /// </summary>
    /// <param name = "_workflowWorkItemsEventArgs">Workflow work items event arguments.</param>
    public void created(WorkflowWorkItemsEventArgs _workflowWorkItemsEventArgs)
	{
        // Complete a canceled state ResRequestLine record workflow.
        if (_workflowWorkItemsEventArgs && _workflowWorkItemsEventArgs.parmWorkflowElementEventArgs().parmWorkflowContext())
        {
            ResRequestLine requestLine = ResRequestLine::find(
                _workflowWorkItemsEventArgs.parmWorkflowElementEventArgs().parmWorkflowContext().parmRecId());

            ResRequestHelper::completeCanceledWorkflowWorkItem(requestLine);
        }
	}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>