<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineFactory_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxModelDocLineFactory_IN_Extenstion</c> handles the Indian extensions for the <c>TaxModelDocLineFactory</c> class.
/// </summary>
[ExtensionOf(classStr(TaxModelDocLineFactory))]
final class TaxModelDocLineFactory_IN_Extension
{
    #ISOCountryRegionCodes
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateDocLineInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates document line instance.
    /// </summary>
    /// <param name="_documentLine">
    /// The document line.
    /// </param>
    /// <param name="_taxModelDocumentLineAttribute">
    /// The tax model document line attribute.
    /// </param>
    /// <returns>
    /// The instance of the <c>TaxModelTaxable</c> class.
    /// </returns>
    protected TaxModelTaxable generateDocLineInstance(
        SalesPurchJournalLine _documentLine,
        TaxModelDocumentLineAttribute _taxModelDocumentLineAttribute)
    {
        TaxModelTaxable ret;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            switch (_documentLine.SourceTableId)
            {
                case tableNum(PurchLine) :
                    ret = new TaxModelDocLinePurchLineImpl_IN();
                    break;
                case tableNum(VendInvoiceTrans) :
                    ret = new TaxModelDocLineVendInvoiceTransImpl_IN();
                    break;
                case tableNum(CustPackingSlipTrans) :
                    ret = new TaxModelDocLineCustPackingSlipTransImpl_IN();
                    break;
                case tableNum(CustInvoiceLine) :
                case tableNum(CustInvoiceLineTemplate) :
                    ret = new TaxModelDocLineCustInvoiceImpl_IN();
                    break;
                case tableNum(CustInvoiceTrans) :
                    ret = new TaxModelDocLineCustInvoiceTransImpl_IN();
                    break;
                case tableNum(InventJournalTrans) :
                    ret = new TaxModelDocLineInventJournalImpl_IN();
                    break;
                case tableNum(InventQualityOrderTable) :
                    ret = new TaxModelDocLineQualityOrderImpl_IN();
                    break;
                case tableNum(InventTransferLine) :
                    ret = new TaxModelDocLineInventTransImpl_IN();
                    break;
                case tableNum(InventTransferParmLine) :
                    ret = new TaxModelDocLineInventParmImpl_IN();
                    break;
                case tableNum(InventTransferJourLine) :
                    ret = new TaxModelDocLineInventTransJournalImpl_IN();
                    break;
                case tableNum(LedgerJournalTrans) :
                    ret = new TaxModelDocLineJournalImpl_IN();
                    break;
                case tableNum(LedgerJournalTrans_Project) :
                    ret = new TaxModelDocLineJournalProjImpl_IN();
                    break;
                case tableNum(ProdJournalBOM) :
                    ret = new TaxModelDocLineProdJournalBOMImpl_IN();
                    break;
                case tableNum(PurchParmLine) :
                case tableNum(CustomsVendBOETrans_IN):
                    ret = new TaxModelDocLinePurchParmLineImpl_IN();
                    break;
                case tableNum(PurchReqLine) :
                    ret = new TaxModelDocLinePurchReqImpl_IN();
                    break;
                case tableNum(SalesLine) :
                    ret = new TaxModelDocLineSalesLineImpl_IN();
                    break;
                case tableNum(SalesParmLine) :
                case tableNum(CustomsShippingBillTrans_IN):
                    ret = new TaxModelDocLineSalesParmLineImpl_IN();
                    break;
                case tableNum(SalesQuotationLine) :
                    ret = new TaxModelDocLineSalesQuotationImpl_IN();
                    break;
                case tableNum(SalesQuotationParmLine) :
                    ret = new TaxModelDocLineSalesQuotationParmImpl_IN();
                    break;
                case tableNum(VendInvoiceInfoLine) :
                    ret = new TaxModelDocLineVendInvoiceImpl_IN();
                    break;
                case tableNum(PurchRFQLine) :
                    ret = new TaxModelDocLinePurchRFQImpl_IN();
                    break;
                case tableNum(PurchRFQReplyLine) :
                    ret = new TaxModelDocLinePurchRFQReplyImpl_IN();
                    break;
                case tableNum(VendRFQTrans) :
                    ret = new TaxModelDocLineVendRFQTransImpl_IN();
                    break;
                case tableNum(VendPackingSlipTrans) :
                    ret = new TaxModelDocLineVendPackingSlipImpl_IN();
                    break;
                case tableNum(ProjItemTransSale) :
                case tableNum(ProjItemTrans) :
                case tableNum(ProjProposalItem) :
                    ProjProposalItem projProposalItem;
                    if (_documentLine.SourceTableId == tableNum(ProjProposalItem))
                    {
                        projProposalItem = _documentLine;
                    }

                    if (projProposalItem.ItemType == ProjItemtype::SalesOrder)
                    {
                        ret = new TaxModelDocLineProjSalesLineImpl_IN();
                    }
                    else
                    {
                        ret = new TaxModelDocLineProjItemTransImpl_IN();
                    }
                    break;
                case tableNum(TSTimesheetLine) :
                    ret = new TaxModelDocLineTimesheetLineImpl_IN();
                    break;
                case tableNum(ProjCostTransSale) :
                case tableNum(ProjCostTrans) :
                case tableNum(ProjProposalCost) :
                    ret = new TaxModelDocLineProjCostTransImpl_IN();
                    break;
                case tableNum(ProjOnAccTransSale) :
                case tableNum(ProjOnAccTrans) :
                case tableNum(ProjProposalOnAcc) :
                    ret = new TaxModelDocLineProjOnAccTransImpl_IN();
                    break;
                case tableNum(ProjRevenueTransSale) :
                case tableNum(ProjRevenueTrans) :
                case tableNum(ProjProposalRevenue) :
                    ret = new TaxModelDocLineProjRevenueTransImpl_IN();
                    break;
                case tableNum(ProjEmplTransSale) :
                case tableNum(ProjEmplTrans) :
                case tableNum(ProjProposalEmpl) :
                    ret = new TaxModelDocLineProjEmplTransImpl_IN();
                    break;
                case tableNum(ProjTable) :
                case tableNum(ProjInvoiceTable) :
                case tableNum(ProjJournalTrans) :
                case tableNum(TmpProjAdjustment) :
                case tableNum(TmpProjAdjustmentCreate) :
                    ret = new TaxModelDocLineProjTableImpl_IN();
                    break;
                case tableNum(ProdTable) :
                case tableNum(BOMParmReportFinish) :
                    ret = new TaxModelDocLineProdTableImpl_IN();
                    break;
                case tableNum(SMAServiceOrderLine) :
                    ret = new TaxModelDocLineServiceOrderImpl_IN();
                    break;
                case tableNum(MarkupTrans) :
                    ret = new TaxModelDocLineMarkupTransImpl_IN();
                    break;
                case tableNum(TaxEngineTaxJournalLine):
                    ret = new TaxModelDocLineTaxJournalImpl_IN();
                    break;
                case tableNum(AgreementLine):
                    ret = new TaxModelDocLineAgreementImpl_IN();
                    break;
                case tableNum(PSAContractLineItems) :
                    ret = new TaxModelDocLinePSAContractLineItemsImpl_IN();
                    break;
                case tableNum(ProjAdvancedJournalLine):
                    ret = new TaxModelDocLineProjAdvancedJournalImpl_IN();
                    break;
                case tableNum(ProjAdvancedJournalLineTaxExtensionIN):
                    ret = new TaxModelDocLineProjAdvancedJournalTaxExtImpl_IN();
                    break;
                default:
                    break;
            }
        }
        else
        {
            ret = next generateDocLineInstance(_documentLine, _taxModelDocumentLineAttribute);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtendedCountryRegionCodes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get extended country region codes.
    /// </summary>
    /// <returns>
    /// Container.
    /// </returns>
    protected container getExtendedCountryRegionCodes()
    {
        container ret = next getExtendedCountryRegionCodes();

        ret += [#isoIN];

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxModelDocLineBaseClassStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get TaxModel document line base class name string
    /// </summary>
    /// <returns>
    /// Class name string
    /// </returns>
    protected str getTaxModelDocLineBaseClassStr()
    {
        str ret;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            ret = classStr(TaxModelDocLineBaseImpl_IN);
        }
        else 
        {
            ret = next getTaxModelDocLineBaseClassStr();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>