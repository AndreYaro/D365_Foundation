<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ConsignmentDraftReplenishmentOrderJournalLineVendDocumentLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>ConsignmentDraftReplenishmentOrderJournalLineVendDocumentLine</c> class contains <c>ConsignMentDraftReplenishmentOrderJournalLine</c>
/// table specific functionality and mapped fields related to the <c>VendDocumentLineMap</c> table map.
/// </summary>
[ExportMetadata(classStr(VendDocumentLineInterface), tableStr(ConsignMentDraftReplenishmentOrderJournalLine)), ExportAttribute('Dynamics.AX.Application.VendDocumentLineInterface')]
class ConsignmentDraftReplenishmentOrderJournalLineVendDocumentLine extends VendDocumentLineInterface
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmConsignmentDraftReplenishmentOrderJournalLine</Name>
				<Source><![CDATA[
    protected ConsignMentDraftReplenishmentOrderJournalLine parmConsignmentDraftReplenishmentOrderJournalLine()
    {
        return vendDocumentLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId, Common _sourceDocumentLineImplementation = null)
    {
        ConsignmentDraftReplenishmentOrderJournalLine consignmentDraftReplenishmentOrderJournalLine = this.parmConsignmentDraftReplenishmentOrderJournalLine();
        ConsignmentReplenishmentOrderLine consignmentReplenishmentOrderLine = _sourceDocumentLineImplementation as ConsignmentReplenishmentOrderLine;
        consignmentDraftReplenishmentOrderJournalLine.defaultField(_fieldId, consignmentReplenishmentOrderLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>header</Name>
				<Source><![CDATA[
    public VendDocumentTableMap header(boolean _forUpdate = false)
    {
        ConsignmentDraftReplenishmentOrderJournalLine consignmentDraftReplenishmentOrderJournalLine = this.parmConsignmentDraftReplenishmentOrderJournalLine();
        return consignmentDraftReplenishmentOrderJournalLine.consignmentDraftReplenishmentOrderJournalHeader(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchParmUpdate</Name>
				<Source><![CDATA[
    public PurchParmUpdate purchParmUpdate(boolean _forUpdate = false)
    {
        ConsignmentDraftReplenishmentOrderJournalLine consignmentDraftReplenishmentOrderJournalLine = this.parmConsignmentDraftReplenishmentOrderJournalLine();
        return consignmentDraftReplenishmentOrderJournalLine.purchParmUpdate(_forUpdate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConsignmentInventReceiveNow</Name>
				<Source><![CDATA[
    protected void setConsignmentInventReceiveNow()
    {
        ConsignmentReplenishmentOrderLine consignmentReplenishmentOrderLine = ConsignmentReplenishmentOrderLine::find(vendDocumentLineMap.PurchLineRecId);
        vendDocumentLineMap.InventNow = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(consignmentReplenishmentOrderLine.ItemId,
                                                                                                              consignmentReplenishmentOrderLine.InventDimId,
                                                                                                              vendDocumentLineMap.ReceiveNow,
                                                                                                              consignmentReplenishmentOrderLine.ReplenishmentUnitId,
                                                                                                              consignmentReplenishmentOrderLine.inventTable().inventUnitId(),
                                                                                                              NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConsignmentQty</Name>
				<Source><![CDATA[
    protected void setConsignmentQty(DocumentStatus _documentStatus)
    {
        ConsignmentReplenishmentQuantityBase consignmentReplenishmentQuantityBase = ConsignmentReplenishmentQuantityBase::construct(_documentStatus);

        ConsignmentReplenishmentOrderLine consignmentReplenishmentOrderLine = ConsignmentReplenishmentOrderLine::find(vendDocumentLineMap.PurchLineRecId);
        consignmentReplenishmentOrderLine.ReceiveReplenishmentQuantityNow = vendDocumentLineMap.ReceiveNow;

        boolean recieveChangedNow = false;

        if (vendDocumentLineMap.orig().RecId && vendDocumentLineMap.orig().ReceiveNow != vendDocumentLineMap.ReceiveNow)
        {
            recieveChangedNow = true;
        }

        if (vendDocumentLineMap.InventNow && !recieveChangedNow)
        {
            consignmentReplenishmentOrderLine.ReceiveInventoryQuantityNow = vendDocumentLineMap.InventNow;
        }
        else
        {
            consignmentReplenishmentOrderLine.ReceiveInventoryQuantityNow = consignmentReplenishmentOrderLine.calculateReplenishmentInventoryQuantity(consignmentReplenishmentOrderLine.ReceiveReplenishmentQuantityNow);
        }

        ConsignmentReplenishmentQuantity remainBefore;
        ConsignmentReplenishmentInventoryQuantity remainBeforeInvent;
        [vendDocumentLineMap.ReceiveNow, remainBefore, vendDocumentLineMap.RemainAfter] =
            consignmentReplenishmentQuantityBase.replenishmentQuantities(consignmentReplenishmentOrderLine, PurchUpdate::All, consignmentReplenishmentOrderLine.ReceiveReplenishmentQuantityNow);
        
        [vendDocumentLineMap.InventNow, remainBeforeInvent, vendDocumentLineMap.RemainAfterInvent] =
            consignmentReplenishmentQuantityBase.inventoryQuantities(consignmentReplenishmentOrderLine, PurchUpdate::All, consignmentReplenishmentOrderLine.ReceiveInventoryQuantityNow);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConsignmentRemainAfterInvent</Name>
				<Source><![CDATA[
    protected void setConsignmentRemainAfterInvent()
    {
        ConsignmentReplenishmentOrderLine consignmentReplenishmentOrderLine = ConsignmentReplenishmentOrderLine::find(vendDocumentLineMap.PurchLineRecId);

        vendDocumentLineMap.RemainAfterInvent = EcoResProductUnitConverter::convertGivenUnitSymbolsForReleasedProduct(vendDocumentLineMap.ItemId,
                                                                                                                      vendDocumentLineMap.InventDimId,
                                                                                                                      vendDocumentLineMap.RemainAfter,
                                                                                                                      consignmentReplenishmentOrderLine.ReplenishmentUnitId,
                                                                                                                      consignmentReplenishmentOrderLine.inventTable().inventUnitId(),
                                                                                                                      NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventReceiveNow</Name>
				<Source><![CDATA[
    public void setInventReceiveNow(boolean setInventNow = true)
    {
        this.setConsignmentInventReceiveNow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    public void setQty(DocumentStatus _documentStatus,
        boolean _creditRemaining,
        boolean _setInventNow = true,
        boolean _setInventQtys = true)
    {
        this.setConsignmentQty(_documentStatus);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainAfterInvent</Name>
				<Source><![CDATA[
    public void setRemainAfterInvent()
    {
        this.setConsignmentRemainAfterInvent();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>