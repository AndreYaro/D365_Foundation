<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetTableInterval</Name>
	<SourceCode>
		<Declaration><![CDATA[
class rAssetTableInterval
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEndDate</Name>
				<Source><![CDATA[
        public RAssetTransDate getEndDate(RAssetTransDate _assetTransDate)
    {
        return endmth(mkDate(dayOfMth(_assetTransDate), ((mthOfYr(_assetTransDate) div this.periodMultiplier())+
            (mthOfYr(_assetTransDate) mod this.periodMultiplier() ? 1 : 0)) * this.periodMultiplier(), year(_assetTransDate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStartDate</Name>
				<Source><![CDATA[
        public RAssetTransDate getStartDate(RAssetTransDate _assetTransDate)
    {
        return mkDate(1,
                      ((mthOfYr(_assetTransDate) - 1) div this.periodMultiplier()) * this.periodMultiplier() + 1,
                      year(_assetTransDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>interval</Name>
				<Source><![CDATA[
        public RAssetLifeTime interval(RAssetTransDate  _depStart,
                                   RAssetTransDate  _runDate)
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodMultiplier</Name>
				<Source><![CDATA[
        public int periodMultiplier()
    {
        throw error(Error::missingOverload(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static RAssetTableInterval construct(RAssetStandards   _assetStandards,
                                                TransDate         _transDate,
                                                RAssetDeprProfile _rAssetDeprProfile = null)
    {
        if (! _rAssetDeprProfile)
            _rAssetDeprProfile = _assetStandards.deprProfile(_transDate - 1);

        if (_assetStandards.Say &&
            _assetStandards.AssetStandardId == RAssetParameters::find().StandardIdDefault ||
            _rAssetDeprProfile.Monthly)
        {
            return new RAssetTableInterval_Month();
        }
        switch (_rAssetDeprProfile.DeprInterval)
        {
            case RAssetDeprInterval::Monthly    : return new RAssetTableInterval_Month();
            case RAssetDeprInterval::Quarterly  : return new RAssetTableInterval_Quart();
            case RAssetDeprInterval::HalfYearly : return new RAssetTableInterval_Half();
            case RAssetDeprInterval::Yearly     : return new RAssetTableInterval_Year();
        }
        throw error("@GLS106494");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>