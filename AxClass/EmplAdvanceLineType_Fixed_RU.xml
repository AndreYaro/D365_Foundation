<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplAdvanceLineType_Fixed_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class EmplAdvanceLineType_Fixed_RU extends EmplAdvanceLineType_RU
{
    boolean deleting;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public boolean delete(FormDataSource _lineDs)
    {
        EmplAdvLine_RU  sourceAdvLine, docAdvLine;
        boolean         found = false;

        super(_lineDs);

        if (deleting)
            return false;

        deleting = true;

        for (sourceAdvLine = _lineDs.getFirst(true) ?
                                _lineDs.getFirst(true) :
                                _lineDs.cursor();
             sourceAdvLine;
             sourceAdvLine = _lineDs.getNext())
        {
            while select docAdvLine
                where docAdvLine.EmplTransRecId == sourceAdvLine.EmplTransRecId &&
                      docAdvLine.RecId          != sourceAdvLine.RecId
            {
                found = true;
               _lineDs.markRecord(docAdvLine, true);
            }
        }
        if (found)
        {
            if (Box::yesNo("@GLS104529", DialogButton::Yes,
                           "@SYS24848", "@GLS104152") != DialogButton::Yes)
                throw Exception::Error;
            _lineDs.refreshEx();
            _lineDs.deleteMarked();
        }
        deleting = false;

        return found;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editableFields</Name>
				<Source><![CDATA[
    protected container editableFields()
    {
        return [ fieldnum(EmplAdvLine_RU, DocumentName),
                 /*fieldNum(EmplAdvLine_RU, Taxed),*/
                 fieldnum(EmplAdvLine_RU, Description)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRate</Name>
				<Source><![CDATA[
    public boolean exchRate(EmplAdvTable_RU _emplAdvTable, EmplAdvLine_RU _emplAdvLine)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exchRateSecond</Name>
				<Source><![CDATA[
    public boolean exchRateSecond(EmplAdvTable_RU _emplAdvTable, EmplAdvLine_RU _emplAdvLine)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromEmplTransSource</Name>
				<Source><![CDATA[
    public void initFromEmplTransSource(EmplTransSource_RU  _transSource,
                                        RefRecId            _emplRecId = _transSource.emplTrans().RecId)
    {
        advLine.AmountCur                        = _transSource.sourceAmountCur();
        advLine.AmountCurApproved                = advLine.AmountCur;
        advLine.AmountMst                        = _transSource.sourceAmountMST();
        advLine.TaxAmount                        = _transSource.sourceTaxAmountCur();
        advLine.TaxAmountMST                     = _transSource.sourceTaxAmountMST();
        advLine.TaxIncluded                      = NoYes::Yes;
        advLine.CurrencyCode                     = _transSource.sourceCurrencyCode();
        advLine.DocumentDate                     = _transSource.sourceTransDate();
        advLine.DocumentNum                      = _transSource.sourceNum();
        advLine.DocumentName                     = _transSource.sourceName();
        advLine.LedgerDimension                  = LedgerDefaultAccountHelper::getDefaultAccountFromLedgerDimension(_transSource.ledgerDimension());
        advLine.Description                      = _transSource.description();
        advLine.DefaultDimension                 = LedgerDimensionFacade::getDefaultDimensionFromLedgerDimension(_transSource.ledgerDimension());
        advLine.LineType                         = EmplAdvanceLineType_RU::sourceType2LineType(_transSource.sourceType());
        advLine.EmplTransRecId                   = _emplRecId;
        advLine.PurchBookVATProcessParameters_RU = PurchBookVATProcessParameters_RU::defaultParms().RecId;
        advLine.TaxGroup                         = _transSource.sourceTaxGroup();
        advLine.TaxItemGroup                     = _transSource.sourceTaxItemGroup();

        if (advLine.TaxGroup && advLine.TaxItemGroup)
        {
            advLine.TaxIncluded      = true;
        }
        advLine.AmountCurExclTax = advLine.AmountCur - advLine.TaxAmount;
        advLine.AmountMstExclTax = advLine.AmountMst - advLine.TaxAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(EmplAdvLine_RU _advLine)
    {
        super(_advLine);
        deleting = false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showCurrencyGroup</Name>
				<Source><![CDATA[
    public boolean showCurrencyGroup()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>triangulation</Name>
				<Source><![CDATA[
    public boolean triangulation(EmplAdvTable_RU _emplAdvTable, EmplAdvLine_RU _emplAdvLine)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromEmplTransSource</Name>
				<Source><![CDATA[
    public static void createFromEmplTransSource(EmplTransSource_RU    _transSource,
                                                 EmplAdvanceId_RU      _advanceId)
    {
        EmplAdvanceLineType_Fixed_RU    advLineType = new EmplAdvanceLineType_Fixed_RU(null);
        EmplTrans_RU                    emplTrans   = _transSource.emplTrans();
        TmpFrmVirtual                   frmVirtual;
        ;
        frmVirtual.setTmpData(_transSource.tmpFrmVirtual());
        select frmVirtual;

        if (! emplTrans.selectForUpdate())
        {
            emplTrans = EmplTrans_RU::findRecId(emplTrans.RecId, true);
        }

        if (emplTrans.AmountCur != _transSource.emplAmountCur())
            throw error("@GLS104679");

        while select frmVirtual
        {
            advLineType = new EmplAdvanceLineType_Fixed_RU(null);
            advLineType.parmAdvanceId(_advanceId);
            advLineType.initFromEmplTransSource(_transSource.source(frmVirtual.RecordNo),
                                                emplTrans.RecId);
            advLineType.create();

            emplTrans.AdvanceId = _advanceId;
            emplTrans.update();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>