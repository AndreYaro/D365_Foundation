<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25RegType_DebtDebitReservationDetail</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RTax25RegType_DebtDebitReservationDetail extends RTax25RegType
{
    FieldNum_RU revLimitFieldId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>badDebtModel</Name>
				<Source><![CDATA[
    public RefRecId badDebtModel()
    {
        return CustParameters::rTax25DebtModelTax(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public NotesLine description()
    {
        return "@RTax25BadDebtReserve:BadDebtReserveDetail";
    }

]]></Source>
			</Method>
			<Method>
				<Name>detachedTableId</Name>
				<Source><![CDATA[
    public TableId detachedTableId()
    {
        return tablenum(RTax25RegisterTrans_DebtDebitResDetail);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(boolean _useDetachedTable = true)
    {
        const int DebtPosition = 4;
        const int RevLimitInitPos = 5;
        RTax25DebtPeriodType periodType;
        int                  i;
        container            c;

        periodType = RTax25DebtPeriodType::newModelParameters(RTax25DebtType::Debit, this.badDebtModel());
        periodType.prepareLabelsExt(RTax25BadDebtType::None, NoYes::Yes);

        detachedTableId = this.detachedTableId();
        this.initFromDetachedTable();

        for (i = 1; i <= conLen(fieldId); i++)
        {
            if (i < DebtPosition || (i >= DebtPosition && periodType.isFieldValid(i - DebtPosition + 1)))
            {
                c += conPeek(fieldId, i);
            }
        }

        fieldId = c;

        fieldType        = [extendedtypenum(DocumentNum),
                            extendedtypenum(DocumentDate),
                            extendedtypenum(DueDate),
                            extendedtypenum(AmountMST),
                            extendedtypenum(AmountMST),
                            extendedtypenum(AmountMST),
                            extendedtypenum(AmountMST),
                            extendedtypenum(AmountMST),
                            extendedtypenum(AmountMST)];

        for (i = DebtPosition; i < DebtPosition + periodType.rowCount(); i++)
        {
            fieldType = conins(fieldType, i, extendedtypenum(AmountMST));
        }

        fieldLabel       = ["@GLS103916",
                            "@SYS14475",
                            "@GLS103918",
                            "@GLS103839",
                            "@RTax25BadDebtReserve:ReserveLimit",
                            "@GLS103836",
                            "@SYS56506",
                            "@GLS103578",
                            "@SYS2835"];

        fieldDescription = ["@GLS103935",
                            "@GLS103936",
                            "@GLS103918",
                            "@GLS104340",
                            "@RTax25BadDebtReserve:SellReserveLimit",
                            "@GLS103843",
                            "@GLS103844",
                            "@GLS103842",
                            "@GLS103841"];

        fieldLabel = periodType.insLabels(fieldLabel, DebtPosition, "@GLS104318");
        fieldDescription = periodType.insDescriptions(fieldDescription, DebtPosition, "@GLS104313");

        revLimitFieldId = RevLimitInitPos + periodType.rowCount();

        this.initRegType();

        headerFields = [0,0,0];

        for (i = 1; i <= periodType.rowCount(); i++)
        {
            headerFields += 1;
        }

        headerFields += [1,1,1,1,1,1];

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initRegType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes register type and child registers.
    /// </summary>
    protected void initRegType()
    {
        childRegisters   = [RTax25RegisterType::DebtDebitInventory];

        registerType     = RTax25RegisterType::DebtDebitReservationDetail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isARStdType</Name>
				<Source><![CDATA[
    public boolean isARStdType()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>revLimitFieldId</Name>
				<Source><![CDATA[
    public FieldNum_RU revLimitFieldId()
    {
        return revLimitFieldId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>