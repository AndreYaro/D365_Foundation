<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustPaymReconciliationPrintDP_DK_BS</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustPaymReconciliationPrintDP_DK_BS</c> class is the report data provider class for the
///    <c>CustPaymReconciliationPrint_DK_BS</c> SQL Server Reporting Services report
/// </summary>
/// <remarks>
///    This is the report data provider class for the <c>CustPaymReconciliationPrint_DK_BS</c> SSRS Report.
/// </remarks>
[
    SRSReportParameterAttribute(classStr(SrsTmpTblMarshallerContract))
]
class CustPaymReconciliationPrintDP_DK_BS extends SRSReportDataProviderBase
{
    RecId    tmpTableDataRecId;
    CustPaymReconciliationPrint_DK_BSTmp custPaymReconTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustPaymReconTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Fetches the data from the temporary <c>TmpCustVendOutPaymBatch</c> table.
    /// </summary>
    /// <returns>
    ///    The data in the <c>TmpCustVendOutPaymBatch</c> table.
    /// </returns>
    [SRSReportDataSetAttribute('CustPaymReconTmp'), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CustPaymReconciliationPrint_DK_BSTmp getCustPaymReconTmp()
    {
        select * from custPaymReconTmp;
        return custPaymReconTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the SSRS report business logic.
    /// </summary>
    /// <remarks>
    ///    Provides the ability to write the report business logic.This method will be called by SSRS at
    ///    runtime.The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        SRSReportRunPermission r;
        SrsTmpTblMarshallerContract contract = this.parmDataContract() as SrsTmpTblMarshallerContract;

        r = new SRSReportRunPermission();
        r.assert();

        tmpTableDataRecId = contract.parmTmpTableDataRecId();
        custPaymReconTmp = SRSTmpTblMarshaller::getTmpTbl(tmpTableDataRecId);
        //SRSTmpTblMarshaller::deleteTmpTblData(tmpTableDataRecId);
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
