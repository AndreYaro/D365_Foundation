<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetTransactionLine_PackingSlip</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjBudgetTransactionLine_PackingSlip extends ProjBudgetTransactionLine
{
    ProjTrans               projTrans;
    CustPackingSlipTrans    custPackingSlipTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>activityNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>ProjActivityNumber</c> value for a <c>ProjTrans</c> object.
    /// </summary>
    /// <returns>
    /// A <c>ProjActivityNumber</c> value.
    /// </returns>
    public ProjActivityNumber activityNumber()
    {
        return projTrans.activityNumber();
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the category ID for a <c>ProjTrans</c> object.
    /// </summary>
    /// <returns>
    /// The category ID.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public ProjCategoryId categoryId()
    {
        return projTrans.categoryId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cost amount.
    /// </summary>
    /// <returns>
    /// The cost amount.
    /// </returns>
    /// <remarks>
    /// The amount must be of the <c>AmountCurr</c> data type.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public CostAmount costAmount()
    {
        //flight named ProjBudgetTransactionLinePackingSlipCostAmountFlight is removed from code as part of 10.0.36 major release;
        return costAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the currency code of the cost amount.
    /// </summary>
    /// <returns>
    /// The currency code of the cost amount.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public CurrencyCode costAmountCurrencyCode()
    {
        return projTrans.currencyIdCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the project Line Property ID of the transaction.
    /// </summary>
    /// <returns>
    ///    The project Line Property ID of the transaction.
    /// </returns>
    public ProjLinePropertyId linePropertyId()
    {
        return projTrans.linePropertyId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(CustPackingSlipTrans    _custPackingSlipTrans)
    {
        super();
        custPackingSlipTrans = _custPackingSlipTrans;
        projTrans = ProjTrans::newCustPackingSlipTrans(custPackingSlipTrans);
        this.parmQty(projTrans.qty());
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the project ID.
    /// </summary>
    /// <returns>
    /// The project ID.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public ProjId projId()
    {
        return projTrans.projId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the sales amount.
    /// </summary>
    /// <returns>
    /// The sales amount.
    /// </returns>
    /// <remarks>
    /// The amount must be of the <c>AmountCurr</c> data type.
    /// </remarks>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public SalesAmount salesAmount()
    {
        return salesAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmountCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the currency code of the sales amount.
    /// </summary>
    /// <returns>
    /// The currency code of the sales amount.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public CurrencyCode salesAmountCurrencyCode()
    {
        return projTrans.currencyIdSales();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction date.
    /// </summary>
    /// <returns>
    /// The transaction date.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public TransDate transDate()
    {
        return projTrans.transDate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction ID.
    /// </summary>
    /// <returns>
    /// The transaction ID.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public ProjTransIdBase transId()
    {
        return projTransIdBase;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transaction type.
    /// </summary>
    /// <returns>
    /// The transaction type.
    /// </returns>
    /// <exception cref="M:Exception::Error">
    /// The method is not overridden.
    /// </exception>
    public ProjTransType transType()
    {
        return projTrans.transType();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>