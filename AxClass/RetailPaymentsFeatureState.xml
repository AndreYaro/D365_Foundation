<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPaymentsFeatureState</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailPaymentsFeatureState</c> class helps to identify the state of the Retail payments features.
/// </summary>
public class RetailPaymentsFeatureState
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isRetailAllowVoidingofStaleAuthorizationsFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether Retail allow voiding of stale authorizations feature is enabled.
    /// </summary>
    /// <returns>True if Retail allow voiding of stale authorizations feature is enabled; otherwise, false.</returns>
    public static boolean isRetailAllowVoidingofStaleAuthorizationsFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(RetailAllowVoidingofStaleAuthorizationsFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetailCommercePaymentsFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether Retail commerce payments feature is enabled.
    /// </summary>
    /// <returns>True if Retail commerce payments feature is enabled; otherwise, false.</returns>
    public static boolean isRetailCommercePaymentsFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(RetailCommercePaymentsFeature::instance());
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetailIncrementalCaptureFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether Retail incremental capture feature is enabled.
    /// </summary>
    /// <returns>True if Retail incremental capture feature is enabled; otherwise, false.</returns>
    public static boolean isRetailIncrementalCaptureFeatureEnabled()
    {
        return FeatureStateProvider::isFeatureEnabled(RetailIncrementalCaptureFeature::instance());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>