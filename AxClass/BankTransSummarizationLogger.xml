<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankTransSummarizationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BankTransSummarizationLogger
{
    private const str Start = 'Bank transaction summarization started.';
    private const str Succeed = 'Bank transaction summarization succeeded.';
    private const str Finish = 'Bank transaction summarization finished.';
    private const str Failed = 'Bank transaction summarization failed.';
    private const str Skipped = 'Bank transaction summarization skipped.';
    private const str SameVoucher = 'Bank transaction summarization skipped due to same voucher found in the journal.';

    private const str JournalCount = 'JournalCount';
    private const str SummarizationCriteria = 'SummarizationCriteria';
    private const str OriginalGroupCount = 'OriginalGroupCount';
    private const str FilteredGroupCount = 'FilteredGroupCount';
    private const str FilteredLineCountMagnitude = 'FilteredLineCountMagnitude';
    private const str SourceFieldID = 'SourceFieldID';

    private SysInstrumentationLogger logger;
    private SysInstrumentationActivityContext activityContext;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    internal void new()
    {
        logger = SysInstrumentationLoggerFactory::CreateLogger(BankInstrumentationConstants::SourceBankTransactionSummarization);
        SysInstrumentationActivity activity = SysInstrumentationActivity::construct(BankInstrumentationConstants::SummarizeBankTransaction, BankInstrumentationConstants::BankNamespace);
        activityContext = logger.activityContextWithCustomProperties(activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>finishActivity</Name>
				<Source><![CDATA[
    internal void finishActivity()
    {
        activityContext.dispose();
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInformation</Name>
				<Source><![CDATA[
    internal void logInformation(str _information)
    {
        logger.logInformation(_information);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logException</Name>
				<Source><![CDATA[
    internal void logException(System.Exception _exception)
    {
        logger.logException(_exception, Failed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationStart</Name>
				<Source><![CDATA[
    internal void logSummarizationStart()
    {
        this.logInformation(Start);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationSucceed</Name>
				<Source><![CDATA[
    internal void logSummarizationSucceed()
    {
        this.logInformation(Succeed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationSkipped</Name>
				<Source><![CDATA[
    internal void logSummarizationSkipped()
    {
        this.logInformation(Skipped);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationSameVoucher</Name>
				<Source><![CDATA[
    internal void logSummarizationSameVoucher()
    {
        this.logInformation(SameVoucher);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationFinish</Name>
				<Source><![CDATA[
    internal void logSummarizationFinish()
    {
        this.logInformation(Finish);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logJournalCount</Name>
				<Source><![CDATA[
    internal void logJournalCount(int _count)
    {
        activityContext.addCustomProperty(JournalCount, int2Str(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationCriteria</Name>
				<Source><![CDATA[
    internal void logSummarizationCriteria(BankTransSummarizationCriteria _criteria)
    {
        activityContext.addCustomProperty(SummarizationCriteria, enum2Str(_criteria));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logOriginalGroupCount</Name>
				<Source><![CDATA[
    internal void logOriginalGroupCount(int _count)
    {
        activityContext.addCustomProperty(OriginalGroupCount, int2Str(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logFilteredGroupCount</Name>
				<Source><![CDATA[
    internal void logFilteredGroupCount(int _count)
    {
        activityContext.addCustomProperty(FilteredGroupCount, int2Str(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logOriginalLineCountMagnitude</Name>
				<Source><![CDATA[
    internal void logOriginalLineCountMagnitude(int _count)
    {
        activityContext.addCustomProperty(BankInstrumentationConstants::LineCountMagnitude, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logFilteredLineCountMagnitude</Name>
				<Source><![CDATA[
    internal void logFilteredLineCountMagnitude(int64 _count)
    {
        activityContext.addCustomProperty(FilteredLineCountMagnitude, ApplicationCommonInstrumentationMagnitude::log10Magnitude(_count));
    }

]]></Source>
			</Method>
			<Method>
				<Name>logSummarizationIdSourceField</Name>
				<Source><![CDATA[
    internal void logSummarizationIdSourceField(FieldId _fieldID)
    {
        activityContext.addCustomProperty(SourceFieldID, int2Str(_fieldID));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>