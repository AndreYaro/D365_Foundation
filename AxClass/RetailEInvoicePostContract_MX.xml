<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEInvoicePostContract_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailEInvoicePostContract_MX</c> class handles the posting of the Retail EInvoice for CFDI.
/// </summary>
[
    DataContract,
    SysOperationContractProcessing(classstr(RetailEInvoicePostUIBuilder_MX)),
    SysOperationAlwaysInitialize,
    SysOperationGroup(identifierStr(Statements), '@RET3201', '1'),
    SysOperationGroup(identifierStr(Aggregation), "@SYS131465", '2')
]
public class RetailEInvoicePostContract_MX implements SysOperationInitializable, SysPackable
{
    RetailPostedStatementId statementId;
    InvoiceDateTime_MX invoiceDateTime;
    str packedQuery;

    private NoYes isAggregateStatements;
    private RetailEInvoicePeriod_MX aggregationPeriod;
    private PeriodStart aggregationPeriodStart;
    private PeriodEnd aggregationPeriodEnd;

    #define.CurrentVersion(2)
    #localmacro.CurrentList
        statementId,
        invoiceDateTime,
        isAggregateStatements,
        aggregationPeriod,
        aggregationPeriodStart,
        aggregationPeriodEnd,
        packedQuery
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes statementId and invoiceDataTime fields with default values.
    /// </summary>
    public void initialize()
    {
        statementId = '';
        if (!isAggregateStatements)
        {
            invoiceDateTime = utcDateTimeNull();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = SysOperationHelper::getVersion(_packedClass);
        boolean ret = false;

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatementId</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationDisplayOrder('1'),
        SysOperationGroupMember(identifierStr(Statements))
    ]
    public RetailPostedStatementId parmStatementId(RetailPostedStatementId _statementId = statementId)
    {
        statementId = _statementId;
        return statementId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceDateTime</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationDisplayOrder('2'),
        SysOperationGroupMember(identifierStr(Statements))
    ]
    public InvoiceDateTime_MX parmInvoiceDateTime(InvoiceDateTime_MX _invoiceDateTime = invoiceDateTime)
    {
        invoiceDateTime = _invoiceDateTime;
        return invoiceDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsAggregateStatements</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationDisplayOrder('1'),
        SysOperationLabel(literalstr("@SYS131465")),
        SysOperationHelpText(literalStr("@RetailEInvoiceCFDI:AggregateStatements")),
        SysOperationGroupMember(identifierStr(Aggregation))
    ]
    internal NoYes parmIsAggregateStatements(NoYes _isAggregateStatements = isAggregateStatements)
    {
        isAggregateStatements = _isAggregateStatements;
        return isAggregateStatements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAggregationPeriod</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationDisplayOrder('2'),
        SysOperationGroupMember(identifierStr(Aggregation))
    ]
    internal RetailEInvoicePeriod_MX parmAggregationPeriod(RetailEInvoicePeriod_MX _aggregationPeriod = aggregationPeriod)
    {
        aggregationPeriod = _aggregationPeriod;
        return aggregationPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAggregationPeriodStart</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationDisplayOrder('3'),
        SysOperationGroupMember(identifierStr(Aggregation))
    ]
    internal PeriodStart parmAggregationPeriodStart(PeriodStart _aggregationPeriodStart = aggregationPeriodStart)
    {
        aggregationPeriodStart = _aggregationPeriodStart;
        return aggregationPeriodStart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAggregationPeriodEnd</Name>
				<Source><![CDATA[
    [
        DataMember,
        SysOperationLabel("@SYS184059"),
        SysOperationDisplayOrder('4'),
        SysOperationGroupMember(identifierStr(Aggregation))
    ]
    internal PeriodEnd parmAggregationPeriodEnd(PeriodEnd _aggregationPeriodEnd = aggregationPeriodEnd)
    {
        aggregationPeriodEnd = _aggregationPeriodEnd;
        return aggregationPeriodEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        AifQueryType('_packedQuery', queryStr(RetailEInvoiceQuery))
    ]
    public str parmQuery(str _packedQuery = packedQuery)
    {
        packedQuery = _packedQuery;
        return packedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the invoice query.
    /// </summary>
    /// <returns>
    /// Invoice query.
    /// </returns>
    public Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(packedQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the invoice query.
    /// </summary>
    /// <param name = "_query">
    /// Query variable to be set.
    /// </param>
    public void setQuery(Query _query)
    {
        packedQuery = SysOperationHelper::base64Encode(_query.pack());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>