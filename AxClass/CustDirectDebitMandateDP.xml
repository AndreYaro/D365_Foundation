<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDirectDebitMandateDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustDirectDebitMandateDP</c> class is the data provider class for the <c>CustDirectDebitMandate</c> report.
/// </summary>
[
    SRSReportParameterAttribute(classstr(CustDirectDebitMandateContract))
]
public class CustDirectDebitMandateDP extends SRSReportDataProviderBase
{
    CustDirectDebitMandateTmp custDirectDebitMandateTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCustDirectDebitMandateTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the <c>CustDirectDebitMandateTmp</c> table buffer.
    /// </summary>
    /// <returns>
    ///     The <c>CustDirectDebitMandateTmp</c> table buffer.
    /// </returns>
    [SRSReportDataSetAttribute(tableStr(CustDirectDebitMandateTmp))]
    public CustDirectDebitMandateTmp getCustDirectDebitMandateTmp()
    {
        select * from custDirectDebitMandateTmp;
        return custDirectDebitMandateTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    public void processReport()
    {
        CustMandateId mandateReference;

        CustBankAccount custBankAccount;
        CustDirectDebitMandate custDirectDebitMandate;
        CustTable custTable;
        LogisticsPostalAddress logisticsPostalAddress;
        BankAccountTable bankAccountTable;

        CustDirectDebitMandateContract dataContract;

        dataContract = this.parmDataContract();
        mandateReference = dataContract.parmMandateReference();

        ttsBegin;
        custDirectDebitMandateTmp.clear();

        unchecked (Uncheck::TableSecurityPermission)
        {
            select firstOnly MandatePaymentType, MandateReference, MandateScheme, SignatureDate, SignatureLocation
                from custDirectDebitMandate
                        where custDirectDebitMandate.MandateReference == mandateReference
                outer join BankIBAN, SWIFTNo from custBankAccount
                        where custBankAccount.AccountID == custDirectDebitMandate.BankAccount &&
                                custBankAccount.CustAccount == custDirectDebitMandate.CustAccount
                outer join Party from custTable
                        where custTable.AccountNum == custDirectDebitMandate.CustAccount
                outer join Address from logisticsPostalAddress
                        where logisticsPostalAddress.RecId == custDirectDebitMandate.CustomerAddress
                outer join Location, AccountId, DebitDirectId from bankAccountTable
                        where bankAccountTable.AccountID == custDirectDebitMandate.CreditorBankAccount;
        }

        CompanyInfo companyInfo = CompanyInfo::find();

        custDirectDebitMandateTmp.CreditorDebitDirectId = BankAccountTable::find(companyInfo.Bank).DebitDirectId;
        custDirectDebitMandateTmp.CreditorAddress = companyInfo.postalAddress().Address;
        custDirectDebitMandateTmp.CreditorAccountId = companyInfo.Name();

        custDirectDebitMandateTmp.MandatePaymentType = custDirectDebitMandate.MandatePaymentType;
        custDirectDebitMandateTmp.MandateReference = custDirectDebitMandate.MandateReference;
        custDirectDebitMandateTmp.MandateScheme = custDirectDebitMandate.MandateScheme;
        custDirectDebitMandateTmp.SignatureDate = custDirectDebitMandate.SignatureDate;
        custDirectDebitMandateTmp.SignatureLocation = custDirectDebitMandate.SignatureLocation;

        custDirectDebitMandateTmp.BankIBAN = hasFieldAccess(tableNum(CustBankAccount), fieldNum(CustBankAccount, BankIBAN)) ?
            custBankAccount.BankIBAN : "@AccountsReceivable:FiveAsterisk";

        custDirectDebitMandateTmp.SWIFTNo = custBankAccount.SWIFTNo;

        custDirectDebitMandateTmp.CustName = custTable.name();

        custDirectDebitMandateTmp.CustAddress = logisticsPostalAddress.Address;

        custDirectDebitMandateTmp.insert();
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>