<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask</c> provides the tools necessary for tracking performance when wave post task configuration is enabled by default.
/// </summary>
internal class WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask extends WHSInstrumentationPerformanceTask
{
    private const static str ActionEnableOrgWideAllocateWaveParallelByDefault           = 'enableOrgWideAllocateWaveParallelByDefault';
    private const static str ActionEnableOrgWideScheduleWorkCreationParallelByDefault   = 'enableOrgWideScheduleWorkCreationParallelByDefault';
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(str _action)
    {
        super('WavePostMethodTaskConfiguration', _action);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newEnableOrgWideAllocateWaveParallelization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize a new instance when enabling the AllocateWave to be run in parallel org wide.
    /// </summary>
    [Hookable(false)]
    internal static WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask newEnableOrgWideAllocateWaveParallelization()
    {
        return new WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask(ActionEnableOrgWideAllocateWaveParallelByDefault);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newEnableScheduleWorkCreationParallelization</Name>
				<Source><![CDATA[
    // <summary>
    /// Initialize a new instance when enabling the ScheduleWorkCreation method to be run in parallel org wide.
    /// </summary>
    [Hookable(false)]
    internal static WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask newEnableScheduleWorkCreationParallelization()
    {
        return new WHSInstrumentationWavePostMethodTaskConfigurationEnabledByDefaultPerformanceTask(ActionEnableOrgWideScheduleWorkCreationParallelByDefault);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>