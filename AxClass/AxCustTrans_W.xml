<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCustTrans_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// AxBC-class for handling records in <c>CustTrans_W</c> satellite table.
/// </summary>
class AxCustTrans_W extends AxInternalBase
{
    CustTrans_W CustTrans_W;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of AxBC class which represents original values of all buffers in dataset.
    /// </summary>
    /// <returns>
    /// Instance of <c>AxInternalBase</c> class or NULL.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
        public Common currentRecord(Common _CustTrans_W = CustTrans_W)
    {
        if (!prmisdefault(_CustTrans_W))
        {
            super(_CustTrans_W);
            CustTrans_W = _CustTrans_W;
        }
        else
        {
            super();
        }

        return CustTrans_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custTrans_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Reinitialize instance of class with new values from <c>CustTrans_W</c> buffer.
    /// </summary>
    /// <param name="_custTrans_W">
    /// Buffer of <c>CustTrans_W</c> type.
    /// </param>
    /// <returns>
    /// Returns buffer with new values.
    /// </returns>
    public CustTrans_W custTrans_W(CustTrans_W _custTrans_W = custTrans_W)
    {
        if (!prmisdefault(_custTrans_W))
        {
            this.setCurrentRecordFromExternal(_custTrans_W);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
        protected Common emptyRecord()
    {
        CustTrans_W localCustTrans_W;
        ;
        return localCustTrans_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAdvancePayment_IN</Name>
				<Source><![CDATA[
        public NoYesId parmAdvancePayment_IN(NoYesId _advancePayment_IN = NoYes::No)
    {
        if (!prmisdefault(_advancePayment_IN))
        {
            this.setField(fieldNum(CustTrans_W, AdvancePayment_IN), _advancePayment_IN);
        }

        return custTrans_W.AdvancePayment_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCorrectReporting_RU</Name>
				<Source><![CDATA[
        public Correct parmCorrectReporting_RU(Correct _correctReporting_RU = NoYes::No)
    {
        if (!prmisdefault(_correctReporting_RU))
        {
            this.setField(fieldNum(CustTrans_W, CorrectReporting_RU), _correctReporting_RU);
        }

        return custTrans_W.CorrectReporting_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustConsInvoice_JP</Name>
				<Source><![CDATA[
        public CustVendConsRefRecId_JP parmCustConsInvoice_JP(CustVendConsRefRecId_JP _custConsInvoice_JP = 0)
    {
        if (!prmisdefault(_custConsInvoice_JP))
        {
            this.setField(fieldNum(CustTrans_W, CustConsInvoice_JP), _custConsInvoice_JP);
        }

        return custTrans_W.CustConsInvoice_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustTrans</Name>
				<Source><![CDATA[
        public RefRecId parmCustTrans(RefRecId _custTrans = 0)
    {
        if (!prmisdefault(_custTrans))
        {
            this.setField(fieldNum(CustTrans_W, CustTrans), _custTrans);
        }

        return custTrans_W.CustTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimensionReporting_RU</Name>
				<Source><![CDATA[
        public DimensionDefault parmDefaultDimensionReporting_RU(DimensionDefault _defaultDimensionReporting_RU = 0)
    {
        if (!prmisdefault(_defaultDimensionReporting_RU))
        {
            this.setField(fieldNum(CustTrans_W, DefaultDimensionReporting_RU), _defaultDimensionReporting_RU);
        }

        return custTrans_W.DefaultDimensionReporting_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoicePostingType_RU</Name>
				<Source><![CDATA[
        public SalesInvoicePostingType_RU parmInvoicePostingType_RU(SalesInvoicePostingType_RU _invoicePostingType_RU = SalesInvoicePostingType_RU::Standard)
    {
        if (!prmisdefault(_invoicePostingType_RU))
        {
            this.setField(fieldNum(CustTrans_W, InvoicePostingType_RU), _invoicePostingType_RU);
        }

        return custTrans_W.InvoicePostingType_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrepaymentFactureId_W</Name>
				<Source><![CDATA[
        public PrepaymentFactureId_W parmPrepaymentFactureId_W(PrepaymentFactureId_W _prepaymentFactureId_W = '')
    {
        if (!prmisdefault(_prepaymentFactureId_W))
        {
            this.setField(fieldNum(CustTrans_W, PrepaymentFactureId_W), _prepaymentFactureId_W);
        }

        return custTrans_W.PrepaymentFactureId_W;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRefVoucher_IN</Name>
				<Source><![CDATA[
        public Voucher parmRefVoucher_IN(Voucher _refVoucher_IN = '')
    {
        if (!prmisdefault(_refVoucher_IN))
        {
            this.setField(fieldNum(CustTrans_W, RefVoucher_IN), _refVoucher_IN);
        }

        return custTrans_W.RefVoucher_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRTax25Amortisation_RU</Name>
				<Source><![CDATA[
        public AmountMST parmRTax25Amortisation_RU(AmountMST _rTax25Amortisation_RU = 0)
    {
        if (!prmisdefault(_rTax25Amortisation_RU))
        {
            this.setField(fieldNum(CustTrans_W, RTax25Amortisation_RU), _rTax25Amortisation_RU);
        }

        return custTrans_W.RTax25Amortisation_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWithholdAmountOrigin_IN</Name>
				<Source><![CDATA[
        public AmountCur parmTaxWithholdAmountOrigin_IN(AmountCur _taxWithholdAmountOrigin_IN = 0)
    {
        if (!prmisdefault(_taxWithholdAmountOrigin_IN))
        {
            this.setField(fieldNum(CustTrans_W, TaxWithholdAmountOrigin_IN), _taxWithholdAmountOrigin_IN);
        }

        return custTrans_W.TaxWithholdAmountOrigin_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTCSAmount_IN</Name>
				<Source><![CDATA[
        public AmountCur parmTCSAmount_IN(AmountCur _tCSAmount_IN = 0)
    {
        if (!prmisdefault(_tCSAmount_IN))
        {
            this.setField(fieldNum(CustTrans_W, TCSAmount_IN), _tCSAmount_IN);
        }

        return custTrans_W.TCSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTDSAmount_IN</Name>
				<Source><![CDATA[
        public AmountCur parmTDSAmount_IN(AmountCur _tDSAmount_IN = 0)
    {
        if (!prmisdefault(_tDSAmount_IN))
        {
            this.setField(fieldNum(CustTrans_W, TDSAmount_IN), _tDSAmount_IN);
        }

        return custTrans_W.TDSAmount_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
        protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        static AxCustTrans_W construct()
    {
        return new AxCustTrans_W();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustTrans_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create instance of class based on <c>CustTrans_W</c> buffer.
    /// </summary>
    /// <param name="_custTrans_W">
    /// Buffer of <c>CustTrans_W</c> type.
    /// </param>
    /// <returns>
    /// Instance of class.
    /// </returns>
    public static AxCustTrans_W newCustTrans_W(CustTrans_W _custTrans_W)
    {
        AxCustTrans_W AxCustTrans_W = AxCustTrans_W::construct();
        ;
        AxCustTrans_W.CustTrans_W(_custTrans_W);

        return AxCustTrans_W;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>