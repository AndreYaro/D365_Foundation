<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTable_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchTable_ApplicationSuite_Extension</c> class is used for extension of the <c>PurchTable</c> table functionality.
/// </summary>
#ISOCountryRegionCodes
[ExtensionOf(tableStr(PurchTable))]
internal final class PurchTable_ApplicationSuite_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializePurchLineOnUpdatePurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the purchase line when updating the purchase table record.
    /// </summary>
    /// <param name = "_purchLine">The purchase line.</param>
    /// <param name = "_vendTable">The <c>VendTable</c> record to check for matching policy.</param>
    protected void initializePurchLineOnUpdatePurchTable(PurchLine _purchLine, VendTable _vendTable)
    {
        next initializePurchLineOnUpdatePurchTable(_purchLine, _vendTable);

        if (this.TradeEndCustomerAccount
            || !PurchTableUpdateExternalInfoFlight::instance().isEnabled())
        {
            _purchLine.updateExternalItemDescriptionIntercompany(this.TradeEndCustomerAccount);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustUpdatePurchLinesOnUpdatePurchTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the purchase lines must be updated.
    /// </summary>
    /// <param name = "_purchTableOrig">The original header corresponding to the purchase lines.</param>
    /// <returns>true if the purchase lines must be updated; false, otherwise.</returns>
    protected boolean mustUpdatePurchLinesOnUpdatePurchTable(PurchTable _purchTableOrig)
    {
        boolean ret = next mustUpdatePurchLinesOnUpdatePurchTable(_purchTableOrig);

        return ret || _purchTableOrig.TradeEndCustomerAccount != this.TradeEndCustomerAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustTransferItemNameForIntercompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the purchase lines item id and item name must be transferred to intercompany sales order lines.
    /// </summary>
    public boolean mustTransferItemNameForIntercompany()
    {
        return (this.interCompanyEndpointActionPolicy().getOrCreateInterCompanyPolicyTransfer(InterCompanyFieldTransferType::External).TradeTransferItemName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipChangeManagementProcessing</Name>
				<Source><![CDATA[
    protected boolean skipChangeManagementProcessing()
    {
        boolean ret = next skipChangeManagementProcessing();

        return ret 
                || ChronologicalNumberBypassChangeManagementValidationContext::current()
                || PurchLineGTDUpdateBypassChangeManagementValidationContext::current()
                || (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN])
                    && this.purchTable_W().CustomsImportOrder_IN);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>