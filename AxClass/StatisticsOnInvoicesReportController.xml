<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>StatisticsOnInvoicesReportController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// A controller class for Statistics on invoices report.
/// </summary>
public class StatisticsOnInvoicesReportController extends ERFormatMappingRunBaseController implements BatchRetryable
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    public static void main(Args _args)
    {
        StatisticsOnInvoicesReportController controller;

        controller = new StatisticsOnInvoicesReportController(
            classStr(StatisticsOnInvoicesReportController),
            methodStr(StatisticsOnInvoicesReportController, runER),
            SysOperationExecutionMode::Synchronous);

        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultCaption</Name>
        <Source><![CDATA[
    /// <summary>
    /// Gets caption of the dialog.
    /// </summary>
    /// <returns>Caption of the dialog</returns>
    protected ClassDescription defaultCaption()
    {
        ClassDescription batchDescription;

        batchDescription = "@StatisticsOnInvoicesReport:PaymentPacticiesReport";

        return batchDescription;
    }

]]></Source>
      </Method>
      <Method>
        <Name>runER</Name>
        <Source><![CDATA[
    public void runER(StatisticsOnInvoicesReportContract _contract)
    {
        ERObjectsFactory::createFormatMappingRunWithBatchSupportByFormatMappingId(_contract.parmFormatMapping(),
			"@StatisticsOnInvoicesReport:PaymentPacticiesReport", true, false, false, this.isInBatch())
            .withFileDestination(this.isInBatch() ? null : ERObjectsFactory::createFileDestinationBrowser())
            .withParameter(new ERModelDefinitionDatabaseContext()).run();
    }

]]></Source>
      </Method>
      <Method>
        <Name>canGoBatch</Name>
        <Source><![CDATA[
    /// <summary>
    /// Makes the operation batchable or not.
    /// </summary>
    /// <returns>Returns true if batchable; false otherwise.</returns>
    /// <remarks>This class doesn't need to be batchable, as the ER job is already batchable.</remarks>
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>