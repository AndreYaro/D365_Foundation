<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsDimensionSelectionController</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class PdsDimensionSelectionController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupDimensionHierarchy</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a lookup for the selection of dimension hierarchy with dimension values editible on the current legal entity.
    /// </summary>
    /// <param name="_formReferenceControl">
    ///     The reference control that will store the lookup value.
    /// </param>
    /// <returns>
    ///     The fetched record.
    /// </returns>
    public static Common lookupDimensionHierarchy(FormReferenceControl _formReferenceControl)
    {
        SysReferenceTableLookup sysReferenceTableLookup;
        Query                   query = PdsDimensionSelectionController::queryDimensionHierarchy();

        sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tablenum(DimensionHierarchy), _formReferenceControl);
        sysReferenceTableLookup.parmQuery(query);
        sysReferenceTableLookup.addLookupfield(fieldnum(DimensionHierarchy, Name));

        sysReferenceTableLookup.addLookupfield(fieldnum(DimensionHierarchy, Description));

        return sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryDimensionHierarchy</Name>
				<Source><![CDATA[
    private static Query queryDimensionHierarchy()
    {
        Query                   query;
        QueryBuildDataSource    qbdsDimensionHierarchy;
        QueryBuildDataSource    qbdsDimensionHierarchyLevel;
        QueryBuildDataSource    qbdsDimensionAttribute;
        QueryBuildDataSource    qbdsDimensionAttributeSetItem;
        DimensionEnumeration    dimensionSetId = DimensionCache::getDimensionAttributeSetForLedger();

        // This query must be kept in sync with the one used on the DimensionDefaultingControllerBase.setupEditAreaControls() method
        query = new Query();

        // fetch an hierarchy
        qbdsDimensionHierarchy      = query.addDataSource(tableNum(DimensionHierarchy));
        qbdsDimensionHierarchy.addRange(fieldnum(DimensionHierarchy, StructureType)).value(queryValue(DimensionHierarchyType::Focus));
        qbdsDimensionHierarchy.addRange(fieldnum(DimensionHierarchy, DeletedVersion)).value(queryValue(0));
        // connected to attributes
        qbdsDimensionHierarchyLevel = qbdsDimensionHierarchy.addDataSource(tableNum(DimensionHierarchyLevel));
        qbdsDimensionHierarchyLevel.addLink(fieldnum(DimensionHierarchy, RecId), fieldnum(DimensionHierarchyLevel, DimensionHierarchy));
        qbdsDimensionHierarchyLevel.joinMode(JoinMode::ExistsJoin);
        // exist join to attributes
        qbdsDimensionAttribute   = qbdsDimensionHierarchyLevel.addDataSource(tableNum(DimensionAttribute));
        qbdsDimensionAttribute.addLink(fieldnum(DimensionHierarchyLevel, DimensionAttribute), fieldnum(DimensionAttribute, RecId));
        qbdsDimensionAttribute.joinMode(JoinMode::ExistsJoin);
        qbdsDimensionAttribute.addRange(fieldnum(DimensionAttribute, Type)).value(SysQuery::valueNot(DimensionAttributeType::MainAccount));
        // and those attributes belong to the default finantial set
        qbdsDimensionAttributeSetItem   = qbdsDimensionAttribute.addDataSource(tableNum(DimensionAttributeSetItem));
        qbdsDimensionAttributeSetItem.addLink(fieldnum(DimensionAttribute, RecId), fieldnum(DimensionAttributeSetItem, DimensionAttribute));
        qbdsDimensionAttributeSetItem.joinMode(JoinMode::ExistsJoin);
        qbdsDimensionAttributeSetItem.addRange(fieldnum(DimensionAttributeSetItem, DimensionAttributeSet)).value(queryValue(dimensionSetId));
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDimensionHierarchyLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Validates that the record selected is a valid legder dimension hierarchy for the current legal entity.
    /// </summary>
    /// <param name="_record">
    ///     The record to validate.
    /// </param>
    /// <returns>
    ///     true if the record is valid.
    /// </returns>
    public static boolean validateDimensionHierarchyLegalEntity(common _record)
    {
        Query       query = PdsDimensionSelectionController::queryDimensionHierarchy();
        QueryRun    queryRun;

        query.dataSourceTable(tableNum(DimensionHierarchy)).addRange(fieldNum(DimensionHierarchy, recId)).value(queryValue(_record.RecId));
        queryRun = new QueryRun(query);
        queryRun.interactive(false);
        return queryRun.next();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>