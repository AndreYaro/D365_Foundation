<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJournalTransferCommandExtList</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SubledgerJournalTransferCommandExtList</c> class is a subledger journal transfer command extension collection.
/// </summary>
public final class SubledgerJournalTransferCommandExtList
{
    List transferCommandExtensions;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addEnd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an instance of the <c>SubledgerJournalTransferCommandExt</c> class to the end of the list.
    /// </summary>
    /// <param name="_subledgerJournalTransferCommandExtension">
    /// The instance of the <c>SubledgerJournalTransferCommandExtension</c> class to add to the end of the list.
    /// </param>
    /// <returns>
    /// An instance of the <c>SubledgerJournalTransferCommandExtension</c> class.
    /// </returns>
    public SubledgerJournalTransferCommandExtension addEnd(SubledgerJournalTransferCommandExtension _subledgerJournalTransferCommandExtension)
    {
        return transferCommandExtensions.addEnd(_SubledgerJournalTransferCommandExtension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds an instance of the <c>SubledgerJournalTransferCommandExt</c> class to the start of the list.
    /// </summary>
    /// <param name="_subledgerJournalTransferCommandExtension">
    /// The instance of the <c>SubledgerJournalTransferCommandExtension</c> class to add to the start of the list.
    /// </param>
    /// <returns>
    /// An instance of the <c>SubledgerJournalTransferCommandExtension</c> class.
    /// </returns>
    public SubledgerJournalTransferCommandExtension addStart(SubledgerJournalTransferCommandExtension _subledgerJournalTransferCommandExtension)
    {
        return transferCommandExtensions.addStart(_subledgerJournalTransferCommandExtension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>elements</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of elements in the <c>SubledgerJournalTransferCommandExtList</c> class.
    /// </summary>
    /// <returns>
    /// The number of elements in the <c>SubledgerJournalTransferCommandExtList</c> class.
    /// </returns>
    public int elements()
    {
        int elementCount;

        elementCount = transferCommandExtensions.elements();

        return elementCount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>empty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the <c>SubledgerJournalTransferCommandExtList</c> class is empty.
    /// </summary>
    /// <returns>
    /// true if the list is empty; otherwise, false.
    /// </returns>
    public boolean empty()
    {
        boolean isEmpty;

        isEmpty = transferCommandExtensions.empty();

        return isEmpty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an enumerator for the <c>SubledgerJournalTransferCommandExtList</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>SubledgerJournalTransCmdListEnumerator</c> class.
    /// </returns>
    public SubledgerJournalTransCmdListEnumerator getEnumerator()
    {
        SubledgerJournalTransCmdListEnumerator listEnumerator;

        listEnumerator = SubledgerJournalTransCmdListEnumerator::construct(transferCommandExtensions.getEnumerator());

        return listEnumerator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        private void new()
    {
        transferCommandExtensions = new List(Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a string that represents the current object.
    /// </summary>
    /// <returns>
    /// A string that represents the current object.
    /// </returns>
    public str toString()
    {
        str value;

        value = transferCommandExtensions.toString();

        return value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>xml</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an XML document representation of the collection.
    /// </summary>
    /// <param name="_indent">
    /// The specified indentation; optional.
    /// </param>
    /// <returns>
    /// The XML document representation of the collection.
    /// </returns>
    public str xml(int _indent = 0)
    {
        str xml;

        xml = transferCommandExtensions.xml(_indent);

        return xml;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>SubledgerJournalTransferCommandExtList</c> class
    /// </summary>
    /// <returns>
    /// A new instance of the <c>SubledgerJournalTransferCommandExtList</c> class.
    /// </returns>
    static protected SubledgerJournalTransferCommandExtList construct()
    {
        return new SubledgerJournalTransferCommandExtList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSubledgerJournalTransferCommand</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>SubledgerJournalTransferCommandExtList</c> class using a subledger journalizer.
    /// </summary>
    /// <param name="_subledgerJournalTransferCommand">
    /// The subledger journal transfer command for which to use.
    /// </param>
    /// <param name="_subledgerJournalTransferRequest">
    /// The subledger journal transfer request for which to use.
    /// </param>
    /// <returns>
    /// An instance of the <c>SubledgerJournalTransferCommandExtList</c> class.
    /// </returns>
    public static SubledgerJournalTransferCommandExtList newFromSubledgerJournalTransferCommand(
        SubledgerJournalTransferCommand _subledgerJournalTransferCommand,
        SubledgerJournalTransferRequest _subledgerJournalTransferRequest)
    {
        SubledgerJournalTransferCommandExtension    subledgerJournalTransferCommandExtension;
        SubledgerJournalTransferCommandExtList      subledgerJournalTransferCommandExtList;
        List                                        transferCommandExtensions;
        ListEnumerator                              transferCommandExtensionsEnumerator;
        int                                         enumId;
        SourceDocumentTypeEnumValue                 sourceDocumentTypeEnumValue;
        SourceDocumentExtensionKey                  extensionKey;
        AccountingEventRecId                        accountingEventId;
        AccountingEvent                             accountingEvent;
        SourceDocumentHeader                        sourceDocumentHeader;

        Debug::assert(_subledgerJournalTransferRequest != null);

        accountingEventId = _subledgerJournalTransferRequest.parmAccountingEventId();
        if (accountingEventId)
        {
            accountingEvent = AccountingEvent::find(accountingEventId);
            sourceDocumentHeader = SourceDocumentHeader::find(accountingEvent.SourceDocumentHeader);
        }
        else if (_subledgerJournalTransferRequest.parmSourceDocumentRelationType())
        {
            select firstonly sourceDocumentHeader
                where sourceDocumentHeader.SourceRelationType == _subledgerJournalTransferRequest.parmSourceDocumentRelationType();
        }

        enumId = enumName2Id(sourceDocumentHeader.TypeEnumName);
        sourceDocumentTypeEnumValue = sourceDocumentHeader.TypeEnumValue;
        extensionKey = [enumId, sourceDocumentTypeEnumValue];

        transferCommandExtensions = SourceDocumentExtensionFactory::newObjectList(classNum(SubledgerJournalTransferCommandExtension), extensionKey, false);

        if (transferCommandExtensions && transferCommandExtensions.elements() != 0)
        {
            subledgerJournalTransferCommandExtList = SubledgerJournalTransferCommandExtList::construct();
            transferCommandExtensionsEnumerator = transferCommandExtensions.getEnumerator();

            while (transferCommandExtensionsEnumerator.moveNext())
            {
                subledgerJournalTransferCommandExtension = transferCommandExtensionsEnumerator.current();
                subledgerJournalTransferCommandExtension.parmCommand(_subledgerJournalTransferCommand);
                subledgerJournalTransferCommandExtList.addEnd(subledgerJournalTransferCommandExtension);
            }
        }
        return subledgerJournalTransferCommandExtList;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>