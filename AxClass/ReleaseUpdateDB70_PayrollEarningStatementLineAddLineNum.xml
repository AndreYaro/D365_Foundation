<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_PayrollEarningStatementLineAddLineNum</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Upgrade script for PayrollEarningStatementLine schema changes.
/// </summary>
class ReleaseUpdateDB70_PayrollEarningStatementLineAddLineNum extends ReleaseUpdateDB
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the module name of an upgrade class.
    /// </summary>
    /// <returns>
    ///    The module name.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented by sub classes.The module name is displayed on the cockpit form for
    ///    every script.
    /// </remarks>
    public ReleaseUpdateModule moduleName()
    {
        return "@Payroll:Payroll";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    ///<summary>
    ///The script runs in any system having version CTP8.
    ///</summary>
    ///<returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::R1Update3;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncPayrollEarningStatementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Disables the unique index for the <c>PayrollEarningStatementLine</c> table.
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute(classStr(ReleaseUpdateDB70_PayrollEarningStatementLineAddLineNum)),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::StartScript),
        UpgradeScriptConfigKeyAttribute(configurationKeyStr(PayrollAdministration)),
        UpgradeScriptTableAttribute('PayrollEarningStatementLine', false, false, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncPayrollEarningStatementLine()
    {
        ReleaseUpdateDBSyncManager syncManager = ReleaseUpdateDBSyncManager::Construct();

        DictTable earningStatementLine = new DictTable(tableNum(PayrollEarningStatementLine));
        DictIndex lineNumIndex = new DictIndex(tableNum(PayrollEarningStatementLine), indexNum(PayrollEarningStatementLine, LineNumIdx));

        syncManager.IgnoreIndexSynchronization(earningStatementLine, lineNumIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpdatePayrollEarningStatementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the values of the <c>LineNum</c> field in the <c>PayrollEarningStatementLine</c> table.
    /// </summary>
    [
    UpgradeScriptDescriptionAttribute(classStr(ReleaseUpdateDB70_PayrollEarningStatementLineAddLineNum)),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(PayrollAdministration)),
    UpgradeScriptTableAttribute(tableStr(PayrollEarningStatementLine), false, true, true, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpdatePayrollEarningStatementLine()
    {
        SysDictTable earningStatementLineTable = new SysDictTable(tableNum(PayrollEarningStatementLine));

        str earningStatementLineTableName = earningStatementLineTable.name(DbBackend::Sql);
        str earningStatementFieldName = earningStatementLineTable.fieldName(fieldNum(PayrollEarningStatementLine, EarningStatement), DbBackend::Sql);
        str lineNumFieldName = earningStatementLineTable.fieldName(fieldNum(PayrollEarningStatementLine, LineNum), DbBackend::Sql);
        str updateLineNumSql = @"UPDATE [dbo].[%1]
                                SET [%2] = EARNINGLINETEMP.[ROWNUMBER]
                             FROM [dbo].[%1]
                             INNER JOIN
                                (SELECT RECID, ROW_NUMBER() OVER(PARTITION BY [%3]
                                    ORDER BY [%3]) AS ROWNUMBER
                                FROM [dbo].[%1] )
                             AS EARNINGLINETEMP
                                on [dbo].[%1].[RECID] = EARNINGLINETEMP.[RECID]";        

        str sqlStatement = strFmt(updateLineNumSql, earningStatementLineTableName, lineNumFieldName, earningStatementFieldName);

        this.executeSqlStatement(sqlStatement);     
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeSqlStatement</Name>
				<Source><![CDATA[
    private void executeSqlStatement(str _sqlStatement)
    {
        Connection sessionConn = new Connection();

        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(_sqlStatement).assert();
        statement.executeUpdate(_sqlStatement);

        CodeAccessPermission::revertAssert();

        statement.close();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>