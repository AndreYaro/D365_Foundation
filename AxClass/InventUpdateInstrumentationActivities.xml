<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventUpdateInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for inventory updates.
/// </summary>
internal final class InventUpdateInstrumentationActivities
{
    private const str UpdateInstrumentationActivityName = 'InventUpdate';
    private const str OnhandInstrumentationActivityName = 'InventUpdateOnhand';

    private InventInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(InventInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    public static InventUpdateInstrumentationActivities newFromLogger(InventInstrumentationLogger _logger)
    {
        return new InventUpdateInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext update(
        ClassName           _inventUpdateClassName,
        ClassName           _movementClassName,
        RecId               _companyRecId,
        RecId               _warehouseRecId,
        RecId               _itemRecId,
        InventTransOriginId _inventTransOriginId)
    {
        SysInstrumentationActivity activity = logger.activity(UpdateInstrumentationActivityName);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        var properties = logger.properties();

        activityContext.addCustomProperty(properties.InventUpdateClassName, _inventUpdateClassName);
        activityContext.addCustomProperty(properties.InventUpdateMovementClass, _movementClassName);
        this.addCustomProperty(activityContext, properties.propertyByTableRecordId(tableNum(CompanyInfo), _companyRecId));
        this.addCustomProperty(activityContext, properties.propertyByTableRecordId(tableNum(InventLocation), _warehouseRecId));
        this.addCustomProperty(activityContext, properties.propertyByTableRecordId(tableNum(InventTable), _itemRecId));
        activityContext.addCustomProperty(properties.InventTransOriginStart, int642Str(_inventTransOriginId));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addCustomProperty</Name>
				<Source><![CDATA[
    private InventUpdateInstrumentationActivities addCustomProperty(SysInstrumentationActivityContext _activityContext, SysInstrumentationLoggerAppSuiteProperty _property)
    {
        _activityContext.addCustomProperty(_property.name, _property.value);
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onhand</Name>
				<Source><![CDATA[
    public SysInstrumentationActivityContext onhand(
        str _context)
    {
        SysInstrumentationActivity activity = logger.activity(OnhandInstrumentationActivityName);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);

        activityContext.addCustomProperty(logger.properties().InventUpdateOnhandContext, _context);

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>