<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipmentOrderLineInventTransLinkTypeProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipmentOrderLineInventTransLinkTypeProvider</c> class allows to check if the shipment/load lines were created with the inventory transactions picking route ID.
/// </summary>
internal final class WHSShipmentOrderLineInventTransLinkTypeProvider
{
    protected InventTransType transType;
    protected WHSLoadLine loadLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLoadLine</Name>
				<Source><![CDATA[
    internal static WHSShipmentOrderLineInventTransLinkTypeProvider newFromLoadLine(WHSLoadLine _loadLine)
    {
        WHSShipmentOrderLineInventTransLinkTypeProvider provider = new WHSShipmentOrderLineInventTransLinkTypeProvider();
        provider.loadLine = _loadLine.data();
        provider.transType = _loadLine.InventTransType;

        return provider;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustUseInventTransPickId</Name>
				<Source><![CDATA[
    internal boolean mustUseInventTransPickId()
    {
        return this.isInventTransPickIdAllocationEnabledForTransType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTransPickIdAllocationEnabledForTransType</Name>
				<Source><![CDATA[
    [Wrappable(true)]
    internal boolean isInventTransPickIdAllocationEnabledForTransType()
    {
        switch (transType)
        {
            case InventTransType::Sales:
                return WHSShipmentTable::find(loadLine.ShipmentId).OrderLineInventTransLinkType == WHSShipmentOrderLineInventTransLinkType::PickingRoute;
            default:
                return false;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>