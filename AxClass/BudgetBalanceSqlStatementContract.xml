<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetBalanceSqlStatementContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetBalanceSqlStatementContract</c> class provides the balance processing contract for direct sql operations.
/// </summary>
internal final class BudgetBalanceSqlStatementContract extends BudgetBalanceContractBase
{
    private DimensionHierarchyId dimensionHierarchyRecId;
    private GeneralLedgerBalanceConfiguration configuration;
    private utcdatetime processAsOfDateTime;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newForGeneralLedgerProcessContract</Name>
				<Source><![CDATA[
    internal static BudgetBalanceSqlStatementContract newForGeneralLedgerProcessContract(
        GeneralLedgerBalanceProcessContract _processContract)
    {
        BudgetBalanceSqlStatementContract contract = new BudgetBalanceSqlStatementContract();

        contract.parmLedgerRecId(_processContract.parmLedgerRecId());
        contract.parmToDate(_processContract.parmToDate());
        contract.parmFromDate(_processContract.parmFromDate());
        contract.parmIsUpdate(_processContract.parmIsUpdate());
        contract.parmProcessAsOfDateTime(_processContract.parmProcessAsOfDateTime());

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForProcessContract</Name>
				<Source><![CDATA[
    internal static BudgetBalanceSqlStatementContract newForProcessContract(
        BudgetBalanceProcessContract _processContract)
    {
        BudgetBalanceSqlStatementContract contract = new BudgetBalanceSqlStatementContract();

        contract.parmLedgerRecId(_processContract.parmLedgerRecId());
        contract.parmToDate(_processContract.parmToDate());
        contract.parmFromDate(_processContract.parmFromDate());
        contract.parmIsUpdate(_processContract.parmIsUpdate());
        contract.parmProcessAsOfDateTime(_processContract.parmProcessAsOfDateTime());

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBalanceContract</Name>
				<Source><![CDATA[
    internal static BudgetBalanceSqlStatementContract newFromBalanceContract(
        BudgetBalanceContract _balanceContract)
    {
        BudgetBalanceSqlStatementContract sqlStatmentContract = new BudgetBalanceSqlStatementContract();

        sqlStatmentContract.parmLedgerRecId(_balanceContract.parmLedgerRecId());
        sqlStatmentContract.parmToDate(_balanceContract.parmToDate());
        sqlStatmentContract.parmFromDate(_balanceContract.parmFromDate());
        sqlStatmentContract.parmIsUpdate(_balanceContract.parmIsUpdate());
        sqlStatmentContract.parmDimensionHierarchyRecId(_balanceContract.parmDimensionHierarchyRecId());

        return sqlStatmentContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static BudgetBalanceSqlStatementContract construct()
    {
        return new BudgetBalanceSqlStatementContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        this.configuration = GeneralLedgerBalanceConfiguration::findOrCreate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionHierarchyRecId</Name>
				<Source><![CDATA[
    internal DimensionHierarchyId parmDimensionHierarchyRecId(DimensionHierarchyId _dimensionHierarchyRecId = dimensionHierarchyRecId)
    {
        dimensionHierarchyRecId = _dimensionHierarchyRecId;
        return dimensionHierarchyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProcessAsOfDateTime</Name>
				<Source><![CDATA[
    internal utcdatetime parmProcessAsOfDateTime(utcdatetime _processAsOfDateTime = processAsOfDateTime)
    {
        processAsOfDateTime = _processAsOfDateTime;
        return processAsOfDateTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfiguration</Name>
				<Source><![CDATA[
    internal GeneralLedgerBalanceConfiguration parmConfiguration()
    {
        return configuration;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>