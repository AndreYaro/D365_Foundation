<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxVatRegisterContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxVatRegisterContract</c> class is the data contract class for the <c>TaxVatRegister</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute(identifierStr(GroupFrom), literalStr("@SYS4083"), '1'),
    SysOperationGroupAttribute(identifierStr(GroupTo), literalStr("@SYS8828"), '2'),
    SysOperationGroupAttribute(identifierStr(GroupParameters), literalStr("@SYS7764"), '3')
]
public class TaxVatRegisterContract implements SysOperationValidatable
{
    TransDate fromDate;
    TransDate toDate;
    PlVatCode fromTaxCode;
    PlVatCode toTaxCode;
    NoYes sumOnly;
    NoYes discrepancyReport;
    boolean printEmptyPaymentCode;
    ShowServiceInVatRegister showServiceInVatRegister;
    TaxDirection taxDirection;
    NoYes showDetails;

    // Hidden parameters
    Description sysVersion;
    DirPartyName userName;
    boolean showFooter;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDiscrepancyReport</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(DiscrepancyReport)),
        SysOperationLabelAttribute(literalStr("@GLS110972")),
        SysOperationHelpTextAttribute(literalStr("@GLS110973")),
        SysOperationGroupMemberAttribute(identifierStr(GroupParameters)),
        SysOperationDisplayOrderAttribute('3')
    ]
    public boolean parmDiscrepancyReport(boolean _discrepancyReport = discrepancyReport)
    {
        discrepancyReport = _discrepancyReport;
        return discrepancyReport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromDate)),
        SysOperationLabelAttribute(literalStr("@GLS109772")),
        SysOperationGroupMemberAttribute(identifierStr(GroupFrom)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromTaxCode</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromTaxCode)),
        SysOperationLabelAttribute(literalStr("@GLS109165")),
        SysOperationGroupMemberAttribute(identifierStr(GroupFrom)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public PlVatCode parmFromTaxCode(PlVatCode _fromTaxCode = fromTaxCode)
    {
        fromTaxCode = _fromTaxCode;
        return fromTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintEmptyPaymentCode</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(PrintEmptyPaymentCode))]
    public boolean parmPrintEmptyPaymentCode(boolean _printEmptyPaymentCode = printEmptyPaymentCode)
    {
        printEmptyPaymentCode = _printEmptyPaymentCode;
        return printEmptyPaymentCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowDetails</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ShowDetails)),
        SysOperationLabelAttribute(literalStr("@SYS60132")),
        SysOperationHelpTextAttribute(literalStr("@SYS85305")),
        SysOperationGroupMemberAttribute(identifierStr(GroupParameters)),
        SysOperationDisplayOrderAttribute('4')
    ]
    public boolean parmShowDetails(boolean _showDetails = showDetails)
    {
        showDetails = _showDetails;
        return showDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowFooter</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(ShowFooter))]
    public boolean parmShowFooter(boolean _showFooter = showFooter)
    {
        showFooter = _showFooter;
        return showFooter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowServiceInVatRegister</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ShowServiceInVatRegister)),
        SysOperationLabelAttribute(literalStr("@GLS115897")),
        SysOperationGroupMemberAttribute(identifierStr(GroupParameters)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ShowServiceInVatRegister parmShowServiceInVatRegister(ShowServiceInVatRegister _showServiceInVatRegister = showServiceInVatRegister)
    {
        showServiceInVatRegister = _showServiceInVatRegister;
        return showServiceInVatRegister;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumOnly</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(SumOnly)),
        SysOperationLabelAttribute(literalStr("@GLS223463")),
        SysOperationHelpTextAttribute(literalStr("@SYS325096")),
        SysOperationGroupMemberAttribute(identifierStr(GroupParameters)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public boolean parmSumOnly(boolean _sumOnly = sumOnly)
    {
        sumOnly = _sumOnly;
        return sumOnly;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSysVersion</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(SysVersion))]
    public Description parmSysVersion(Description _sysVersion = sysVersion)
    {
        sysVersion = _sysVersion;
        return sysVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxDirection</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(TaxDirection))]
    public TaxDirection parmTaxDirection(TaxDirection _taxDirection = taxDirection)
    {
        taxDirection = _taxDirection;
        return taxDirection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToDate)),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationGroupMemberAttribute(identifierStr(GroupTo)),
        SysOperationDisplayOrderAttribute('1')
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToTaxCode</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToTaxCode)),
        SysOperationLabelAttribute(literalStr("@GLS109165")),
        SysOperationGroupMemberAttribute(identifierStr(GroupTo)),
        SysOperationDisplayOrderAttribute('2')
    ]
    public PlVatCode parmToTaxCode(PlVatCode _toTaxCode = toTaxCode)
    {
        toTaxCode = _toTaxCode;
        return toTaxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserName</Name>
				<Source><![CDATA[
    [DataMemberAttribute(identifierStr(UserName))]
    public DirPartyName parmUserName(DirPartyName _userName = userName)
    {
        userName = _userName;
        return userName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the values on date range are valid.
    /// </summary>
    /// <returns>
    /// true if the date range is valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (fromDate && toDate && fromDate > toDate)
        {
            isValid = checkFailed(strfmt("@SYS55013", date2StrUsr(fromDate, DateFlags::FormatAll), date2StrUsr(toDate, DateFlags::FormatAll)));
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>