<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventValueTransModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class <c>InventValueTransModel</c> populates the table <c>InventValueTransModelTable</c> with cost entries.
/// </summary>
/// <remarks>
/// The cost entries are populated for a period, <c>ItemId</c> and <c>InventDim</c> buffer.
/// It is not validated that the <c>InventDim</c> buffer only has financial inventory dimensions set.
/// </remarks>
public class InventValueTransModel
{
    ItemId                          itemId;
    InventDim                       inventDim;
    InventDimParm                   inventDimParm;
    FromDate                        fromDate;
    ToDate                          toDate;
    InventValueTransModelTable      inventValueTransModelTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
    public InventDim parmInventDim(InventDim _inventDim = inventDim)
    {
        if (!prmisDefault(_inventDim))
        {
            inventDim = _inventDim;
            inventDimParm.initFromInventDim(inventDim);
        }

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    public FromDate parmToDate(toDate _toDate = toDate)
    {
        toDate = _toDate;

        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventValueTransModelTable</Name>
				<Source><![CDATA[
    public InventValueTransModelTable parmInventValueTransModelTable(InventValueTransModelTable _inventValueTransModelTable = inventValueTransModelTable)
    {
        inventValueTransModelTable = _inventValueTransModelTable;

        return inventValueTransModelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters.
    /// </summary>
    protected void validate()
    {
        if (!itemId)
        {
            throw error("@SYS25157");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>eliminateTransfers</Name>
				<Source><![CDATA[
    /// <summary>
    /// Eliminates transfers in the <c>InventValueTransModelTable</c>.
    /// </summary>
    protected void eliminateTransfers()
    {
        inventValueTransModelTable  nonContributingEntries;

        insert_recordset nonContributingEntries
                (Qty, Amount, TransDate, Voucher, ReferenceCategory, Reference)
            select sum(Qty), sum(Amount), TransDate, Voucher, ReferenceCategory, Reference
            from inventValueTransModelTable
                group by TransDate, Voucher, ReferenceCategory, Reference;

        delete_from nonContributingEntries
                where nonContributingEntries.Qty                != 0
                   || nonContributingEntries.Amount             != 0;

        delete_from inventValueTransModelTable
                exists join nonContributingEntries
                where nonContributingEntries.TransDate          == inventValueTransModelTable.TransDate
                   && nonContributingEntries.Voucher            == inventValueTransModelTable.Voucher
                   && nonContributingEntries.ReferenceCategory  == inventValueTransModelTable.ReferenceCategory
                   && nonContributingEntries.Reference          == inventValueTransModelTable.Reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the <c>InventValueTransModelTable</c>.
    /// </summary>
    protected void populate()
    {
        InventValueTransView        inventValueTransView;
        InventDim                   selectInventDim;

        ttsbegin;

        insert_recordset inventValueTransModelTable
            (Qty, Amount, TransDate, InventTransOrigin, UpdateInventTransPostingType, Voucher, ReferenceCategory, Reference, MarkingRefInventTransOrigin, ReturnInventTransOrigin)
        select sum(Qty), sum(Amount), TransDate, InventTransOrigin, UpdateInventTransPostingType, Voucher, ReferenceCategory, Reference, MarkingRefInventTransOrigin, ReturnInventTransOrigin
        from inventValueTransView
            group by TransDate, InventTransOrigin, UpdateInventTransPostingType, Voucher, ReferenceCategory, Reference, MarkingRefInventTransOrigin, ReturnInventTransOrigin
            order by TransDate, InventTransOrigin, UpdateInventTransPostingType, Voucher
        where inventValueTransView.ItemId == itemId
           && inventValueTransView.TransDate >= fromDate
           && inventValueTransView.TransDate <= toDate
        #inventDimExistsJoinNoField(inventValueTransView.inventDimId, selectInventDim, inventDim, inventDimParm);

        delete_from inventValueTransModelTable
            where inventValueTransModelTable.Qty    == 0
               && inventValueTransModelTable.Amount == 0;

        this.eliminateTransfers();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the <c>InventValueTransModelTable</c>.
    /// </summary>
    private void delete()
    {
        delete_from inventValueTransModelTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>InventValueTransModelTable</c>.
    /// </summary>
    public void update()
    {
        this.validate();
        this.delete();
        if (fromDate <= toDate)
        {
            this.populate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventValueTransModel construct()
    {
        return new InventValueTransModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>