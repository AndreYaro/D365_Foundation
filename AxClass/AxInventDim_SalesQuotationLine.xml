<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventDim_SalesQuotationLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxInventDim_SalesQuotationLine extends AxInventDim
{
    AxSalesQuotationLine axSalesQuotationLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axSalesQuotationLine</Name>
				<Source><![CDATA[
    public AxSalesQuotationLine axSalesQuotationLine(AxSalesQuotationLine _axSalesQuotationLine = axSalesQuotationLine)
    {
        axSalesQuotationLine = _axSalesQuotationLine;
        return axSalesQuotationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCheckInTests</Name>
				<Source><![CDATA[
    public List getCheckInTests()
    {
        List ret;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
protected int inputStatus(InternalExternal _inputStatus = axSalesQuotationLine.callInputStatus())
    {
        if (axSalesQuotationLine)
        {
            return axSalesQuotationLine.callInputStatus(_inputStatus);
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modify</Name>
				<Source><![CDATA[
    public void modify()
    {
        axSalesQuotationLine.modify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts or updates the current record for the class.
    /// </summary>
    /// <remarks>
    ///    Execute this method on the AxBC class after new values are assigned to fields.The actual work to
    ///    save and update a record is performed in the <c>doSave</c> method, which is called by this method.
    /// </remarks>
    public void save()
    {
        axSalesQuotationLine.updateFromInventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfigId</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets the <c>ConfigId</c> parameter.
    /// </summary>
    public void setConfigId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, ConfigId)))
        {
            return;
        }

        super();

        axSalesQuotationLine.setInventTableRecordFields();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet())
        {
            this.parmConfigId(axSalesQuotationLine.inventTableRecord().StandardConfigId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventColorId</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets the <c>InventColorId</c> parameter.
    /// </summary>
    public void setInventColorId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventColorId)))
        {
            return;
        }

        axSalesQuotationLine.setInventTableRecordFields();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet())
        {
            this.parmInventColorId(axSalesQuotationLine.inventTableRecord().StandardInventColorId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventLocationId</c> parameter.
    /// </summary>
    public void setInventLocationId()
    {
        InventDim   inventDimLocal;

        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventLocationId)))
        {
            return;
        }

        axSalesQuotationLine.setInventTableRecordFields();
        axSalesQuotationLine.setAxSalesQuotationTableFields();

        this.setInventSiteId();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet()  ||
            axSalesQuotationLine.isAxSalesQuotationTableFieldsSet()       ||
            axSalesQuotationLine.axSalesQuotationTable().isFieldModified(fieldnum(SalesQuotationTable, InventLocationId)))
        {
            inventDimLocal = InventDim::find(InventDim::inventDimIdBlank());
            if (this.parmInventSiteId())
            {
                inventDimLocal.InventSiteId = this.parmInventSiteId();
                inventDimLocal              = InventDim::findOrCreate(inventDimLocal);
            }

            this.parmInventLocationId(axSalesQuotationLine.inventTableRecord().salesInventLocationId(axSalesQuotationLine.axSalesQuotationTable().parmInventLocationId(),inventDimLocal.InventDimId));
        }

        if (!this.parmInventLocationId() && EcoResDimensionGroupSetup::isWarehouseDimensionMandatoryForItem(axSalesQuotationLine.parmItemId()))
        {
            this.parmInventLocationId(InventFallbackWarehouse::transportWarehouse(this.parmInventSiteId()));
            if (!this.parmInventLocationId())
            {
                this.parmInventLocationId(InventParameters::find().FallbackInventLocationId);
                this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSiteId</c> parameter.
    /// </summary>
    public void setInventSiteId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSiteId)))
        {
            return;
        }

        if (this.isFieldSet(fieldnum(InventDim,InventLocationId)))
        {
            this.parmInventSiteId(axSalesQuotationLine.inventTableRecord().salesInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId, this.parmInventDimId()));
        }

        if (!this.isFieldSet(fieldnum(InventDim,InventSiteId)))
        {
            axSalesQuotationLine.setInventTableRecordFields();
            axSalesQuotationLine.setAxSalesQuotationTableFields();

            if (axSalesQuotationLine.isInventTableRecordFieldsSet()  ||
                axSalesQuotationLine.isAxSalesQuotationTableFieldsSet()       ||
                axSalesQuotationLine.axSalesQuotationTable().isFieldModified(fieldnum(SalesQuotationTable, InventSiteId)))
            {
                this.parmInventSiteId(axSalesQuotationLine.inventTableRecord().salesInventSiteId(axSalesQuotationLine.axSalesQuotationTable().parmInventSiteId(), axSalesQuotationLine.parmInventDimId()));
            }
        }

        if (!this.parmInventSiteId())
        {
            this.parmInventSiteId(InventParameters::find().fallbackSiteId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSizeId</c> parameter.
    /// </summary>
    public void setInventSizeId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSizeId)))
        {
            return;
        }

        super();

        axSalesQuotationLine.setInventTableRecordFields();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet())
        {
            this.parmInventSizeId(axSalesQuotationLine.inventTableRecord().StandardInventSizeId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventStyleId</c> field.
    /// </summary>
    public void setInventStyleId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventStyleId)))
        {
            return;
        }

        axSalesQuotationLine.setInventTableRecordFields();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet())
        {
            this.parmInventStyleId(axSalesQuotationLine.inventTableRecord().StandardInventStyleId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventVersionId</c> field.
    /// </summary>
    public void setInventVersionId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventVersionId)))
        {
            return;
        }

        axSalesQuotationLine.setInventTableRecordFields();

        if (axSalesQuotationLine.isInventTableRecordFieldsSet())
        {
            this.parmInventVersionId(axSalesQuotationLine.inventTableRecord().StandardInventVersionId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAxSalesQuotationLine</Name>
				<Source><![CDATA[
    public static AxInventDim_SalesQuotationLine newAxSalesQuotationLine(AxSalesQuotationLine _axSalesQuotationLine)
    {
        AxInventDim_SalesQuotationLine   axInventDim_SalesQuotationLine;

        axInventDim_SalesQuotationLine = new AxInventDim_SalesQuotationLine();
        axInventDim_SalesQuotationLine.axSalesQuotationLine(_axSalesQuotationLine);
        return axInventDim_SalesQuotationLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>