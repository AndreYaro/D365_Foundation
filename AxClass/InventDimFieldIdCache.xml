<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimFieldIdCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventDimFieldIdCache</c> class implements a caching of Field IDs per a cache key.
/// </summary>
final internal class InventDimFieldIdCache
{
    private readonly container cacheKey;
    private readonly SysGlobalObjectCache sysGlobalObjectCache;
    public static const FieldId NotCached = -1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cacheScope</Name>
				<Source><![CDATA[
    private GlobalObjectCacheScope cacheScope()
    {
        return classStr(InventDimFieldIdCache);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    /// Clears the entire cache.
    /// </summary>
    public void clearCache()
    {
        sysGlobalObjectCache.clear(this.cacheScope());
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a <c>InventDimFieldIdCache</c> class.
    /// </summary>
    /// <param name = "_cacheKey">The cache key string value.</param>
    public void new(str _cacheKey)
    {
        cacheKey = [_cacheKey];
        sysGlobalObjectCache = classFactory.globalObjectCache();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCached</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the field is cached.
    /// </summary>
    /// <returns>true if the field is cached.</returns>
    public boolean isCached()
    {
        return sysGlobalObjectCache.find(this.cacheScope(), cacheKey) != conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a field ID in the cache.
    /// </summary>
    /// <param name = "_fieldId">The field ID to insert in the cache.</param>
    public void insert(FieldId _fieldId)
    {
        sysGlobalObjectCache.insert(this.cacheScope(), cacheKey, [_fieldId]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Looks up a field ID in the cache.
    /// </summary>
    /// <returns>The field ID if cached; otherwise, a field Id with constanct value -1 is returned.</returns>
    public FieldId lookup()
    {        
        container result = sysGlobalObjectCache.find(this.cacheScope(), cacheKey);
        if (result == conNull())
        {
            return InventDimFieldIdCache::NotCached;
        }

        return conPeek(result, 1);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>