<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnReceivingSkipPrintForScrapFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>WHSReturnReceivingSkipPrintForScrapFlight</c> flight is enabled,
/// the license plate label creation and printing will not be called if the return receiving was done with a disposition code that doesn't create putaway work.
/// </summary>
internal final class WHSReturnReceivingSkipPrintForScrapFlight extends Flight
{
    private static WHSReturnReceivingSkipPrintForScrapFlight singleton = new WHSReturnReceivingSkipPrintForScrapFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
        [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    internal static WHSReturnReceivingSkipPrintForScrapFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>