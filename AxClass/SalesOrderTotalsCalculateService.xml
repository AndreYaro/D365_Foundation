<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderTotalsCalculateService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesOrderTotalsCalculateService</c> class represents main execution logic for 'Calculate sales order totals for Sales' batch job.
/// </summary>
internal final class SalesOrderTotalsCalculateService extends SalesTotalsCalculateServiceBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculate</Name>
				<Source><![CDATA[
    internal void calculate(SalesOrderTotalsCalculateContract _contract)
    {
        setPrefix("@SCM:SalesOrderTotalsCalculateMenuItem");

        this.calculateInternal(_contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryTableId</Name>
				<Source><![CDATA[
    protected TableId queryTableId()
    {
        return tableNum(SalesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    protected Query initializeQuery(Query _query, utcdatetime _cutOffDateTime)
    {
        return this.addRangesToQuery(_query, _cutOffDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangesToQuery</Name>
				<Source><![CDATA[
    private Query addRangesToQuery(Query _query, utcdatetime _cutOffDateTime)
    {
        Query query = _query;

        QueryBuildDataSource qdbsSalesTable = query.dataSourceTable(tableNum(SalesTable));

        if (!qdbsSalesTable)
        {
            throw error(strFmt("@SCM:SalesCalculateTotalsQueryDataSourceValidation", tableId2PName(tableNum(SalesTable))));
        }

        QueryBuildDataSource qbdsSalesOrderLastChangeDate = qdbsSalesTable.addDataSource(tableNum(SalesOrderLastChangeDateV2));
        qbdsSalesOrderLastChangeDate.addSelectionField(fieldNum(SalesOrderLastChangeDateV2, SalesId));
        qbdsSalesOrderLastChangeDate.addLink(fieldNum(SalesTable, SalesId), fieldNum(SalesOrderLastChangeDateV2, SalesId));
        qbdsSalesOrderLastChangeDate.joinMode(JoinMode::InnerJoin);

        SalesOrderTotalsCalculate::addDateRangesToChangeTrackingDataSource(qbdsSalesOrderLastChangeDate, _cutOffDateTime);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotals</Name>
				<Source><![CDATA[
    protected void calculateTotals(Common _salesRecord, utcdatetime _updateDateTime)
    {
        TradeCDSMessageQueue::calculateTotalsForSalesOrder(_salesRecord, _updateDateTime);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>