<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WmsbolItemProviderWMSOrderTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WMSBOLItemProviderWMSOrderTrans</c> class provides data that is used to generate records
/// that are related to the bills of lading for <c>WMSOrderTrans</c> records.The created bill of lading
/// will not be related to a specific order and reference type.
/// </summary>
/// <remarks>
/// The created bill of lading will not be related to a specific order and reference type.
/// </remarks>
class WmsbolItemProviderWMSOrderTrans extends WMSBOLItemProvider
{
    WMSOrderTrans           wmsOrderTrans;
    WMSShipment             wmsShipment;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBillOfLadingOrderReferenceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a blank reference ID for a bill of lading order.
    /// </summary>
    /// <returns>
    /// A blank reference ID.
    /// </returns>
    public InventTransRefId getBillOfLadingOrderReferenceId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBillOfLadingReferenceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a blank reference ID for the bill of lading.
    /// </summary>
    /// <returns>
    /// A blank reference ID.
    /// </returns>
    public InventTransRefId getBillOfLadingReferenceId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the customer account that is used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The customer account that is used for the bill of lading.
    /// </returns>
    public CustAccount getCustAccount()
    {
        return wmsOrderTrans.Customer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDeliveryPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the delivery postal address ID that is used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The delivery postal address ID that is used for the bill of lading.
    /// </returns>
    public LogisticsPostalAddressRecId getDeliveryPostalAddress()
    {
        return wmsOrderTrans.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHandlingQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the handling quantity that is used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The handling quantity that is used for the bill of lading.
    /// </returns>
    public InventQty getHandlingQuantity()
    {
        return wmsOrderTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an <c>InventLocationID</c> value for the bill of lading.
    /// </summary>
    /// <returns>
    /// The <c>InventLocationID</c> value for the bill of lading
    /// </returns>
    public InventLocationId getInventLocationId()
    {
        return wmsShipment.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an <c>ItemId</c> value for the bill of lading order.
    /// </summary>
    /// <returns>
    /// The <c>ItemId</c> value for the bill of lading order.
    /// </returns>
    protected ItemId getItemID()
    {
        return wmsOrderTrans.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantity that is used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The quantity that is used for the bill of lading.
    /// </returns>
    public InventQty getQuantity()
    {
        return wmsOrderTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getShipmentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a <c>WMSShipmentId</c> value for the bill of lading.
    /// </summary>
    /// <returns>
    /// The <c>WMSShipmentId</c> value for the bill of lading.
    /// </returns>
    public WMSShipmentId getShipmentId()
    {
        return wmsOrderTrans.ShipmentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWMSReferenceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>WMSReference::None</c> enumeration value of the order.
    /// </summary>
    /// <returns>
    /// The <c>WMSReference::None</c> enumeration value of the order.
    /// </returns>
    public WMSReferenceType getWMSReferenceType()
    {
        return WMSReferenceType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWMSOrderTrans</Name>
				<Source><![CDATA[
        public WMSOrderTrans parmWMSOrderTrans(WMSOrderTrans _wmsOrderTrans = wmsOrderTrans)
    {
        wmsOrderTrans = _wmsOrderTrans;

        return wmsOrderTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWMSShipment</Name>
				<Source><![CDATA[
        public WMSShipment parmWMSShipment(WMSShipment _wmsShipment = wmsShipment)
    {
        wmsShipment = _wmsShipment;

        return wmsShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsGetCWHandlingQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the handling catch weight quantity used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The handling catch weight quantity used for the bill of lading.
    /// </returns>
    public PdsCWInventQty pdsGetCWHandlingQuantity()
    {
        return wmsOrderTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsGetCWQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the catch weight quantity used for the bill of lading.
    /// </summary>
    /// <returns>
    /// The catch weight quantity used for the bill of lading.
    /// </returns>
    public PdsCWInventQty pdsGetCWQuantity()
    {
        return wmsOrderTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        private static WMSBOLItemProviderWMSOrderTrans construct()
    {
        return new WMSBOLItemProviderWMSOrderTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromWMSOrderTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>WMSBillOfLadingItemProvider</c> class.
    /// </summary>
    /// <param name="_wmsOrderTrans">
    /// A <c>WMSOrderTrans</c> record that is used for constructing the instance.
    /// </param>
    /// <param name="_wmsShipment">
    /// A <c>WMSShipment</c> record that is used for constructing the instance.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WMSBillOfLadingItemProvider</c> class.
    /// </returns>
    /// <remarks>
    /// This method is used as a factory method for constructing <c>WMSBOLItemProviderWMSOrderTrans</c>
    /// objects.
    /// </remarks>
    public static WMSBOLItemProviderWMSOrderTrans constructFromWMSOrderTrans(
        WMSOrderTrans   _wmsOrderTrans,
        WMSShipment     _wmsShipment)
    {
        WMSReferenceType wmsReferenceType;

        wmsReferenceType = WMSBOLItemProviderWMSOrderTrans::inventTransType2WMSReferenceType(_wmsOrderTrans.InventTransType);

        if (WMSBOLItemProviderWMSOrderTrans::isWMSReferenceTypeForOrderRef(wmsReferenceType))
        {
            return WMSBOLItemProviderWMSOrderTransOrderRef::newFromParameters(_wmsOrderTrans,_wmsShipment,wmsReferenceType);
        }

        return WMSBOLItemProviderWMSOrderTrans::newFromParameters(_wmsOrderTrans,_wmsShipment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransType2WMSReferenceType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>WMSReferenceType</c> enumeration value that corresponds to the <c>InventTransType</c>
    /// enumeration value.
    /// </summary>
    /// <param name="_inventTransType">
    /// An <c>InventTransType</c> enumeration value.
    /// </param>
    /// <returns>
    /// The <c>WMSReferenceType</c> enumeration value.
    /// </returns>
    public static WMSReferenceType inventTransType2WMSReferenceType(InventTransType _inventTransType)
    {
        switch (_inventTransType)
        {
            case InventTransType::Sales :
                return WMSReferenceType::Sales;

            case InventTransType::TransferOrderShip :
                return WMSReferenceType::TransferOrderShipment;

            case InventTransType::ProdLine :
                return WMSReferenceType::ProductionLine;

            case InventTransType::KanbanJobPickingList :
            case InventTransType::KanbanJobTransferIssue :
                return WMSReferenceType::Kanban;

            default: //fall through
        }

        return WMSReferenceType::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWMSReferenceTypeForOrderRef</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if a <c>WMSReferenceType</c> enumeration type will create a bill of lading with the
    /// reference type.
    /// </summary>
    /// <param name="_wmsReferenceType">
    /// A <c>WMSReferenceType</c> enumeration value
    /// </param>
    /// <returns>
    /// true if the <c>WMSReferenceType</c> enumeration value will create a bill of lading with the
    /// reference type; otherwise, false.
    /// </returns>
    public static boolean isWMSReferenceTypeForOrderRef(WMSReferenceType _wmsReferenceType)
    {
        switch (_wmsReferenceType)
        {
            case WMSReferenceType::Sales                    : //fall through
            case WMSReferenceType::TransferOrderShipment    : //fall through
            case WMSReferenceType::ProductionLine           : //fall through
            case WMSReferenceType::Kanban                   :
                return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>WMSBillOfLadingItemProvider</c> class.
    /// </summary>
    /// <param name="_wmsOrderTrans">
    /// A <c>WMSOrderTrans</c> record that is used for constructing the instance.
    /// </param>
    /// <param name="_wmsShipment">
    /// A <c>WMSShipment</c> record that is used for constructing the instance.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WMSBillOfLadingItemProvider</c> class.
    /// </returns>
    public static WMSBOLItemProviderWMSOrderTrans newFromParameters(
        WMSOrderTrans   _wmsOrderTrans,
        WMSShipment     _wmsShipment)
    {
        WMSBOLItemProviderWMSOrderTrans wmsbolItemProviderWMSOrderTrans;

        wmsbolItemProviderWMSOrderTrans = WMSBOLItemProviderWMSOrderTrans::construct();
        wmsbolItemProviderWMSOrderTrans.parmWMSOrderTrans(_wmsOrderTrans);
        wmsbolItemProviderWMSOrderTrans.parmWMSShipment(_wmsShipment);

        return wmsbolItemProviderWMSOrderTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>