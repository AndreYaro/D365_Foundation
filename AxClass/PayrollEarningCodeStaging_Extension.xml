<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollEarningCodeStaging_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollEarningCodeStaging_Extension</c> is an extension of the <c>PayrollEarningCodeStaging</c> table
/// and contains methods and event subscribers for the entity.
/// </summary>
[ExtensionOf(tableStr(PayrollEarningCodeStaging))]
public final class PayrollEarningCodeStaging_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>resolveImportSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolve import ordering such that dependent records insert after parent records.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The execution context for import.</param>
    /// <remarks>
    /// Field tuples are [CashDiscountCode, NextCashDiscountCode].
    /// </remarks>
    public static void resolveImportSequence(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        DMFImportExportSequencer sequencer = new DMFImportExportSequencer();

        sequencer.addDependencyRelationship(
            tableNum(PayrollEarningCodeStaging),
            [fieldNum(PayrollEarningCodeStaging, EarningCode)],
            [fieldNum(PayrollEarningCodeStaging, GrossUpEarningCodeId)],
            _dmfDefinitionGroupExecution.DefinitionGroup,
            _dmfDefinitionGroupExecution.ExecutionId);

        sequencer.addDependencyRelationship(
            tableNum(PayrollEarningCodeStaging),
            [fieldNum(PayrollEarningCodeStaging, EarningCode)],
            [fieldNum(PayrollEarningCodeStaging, RetroactiveEarningCodeId)],
            _dmfDefinitionGroupExecution.DefinitionGroup,
            _dmfDefinitionGroupExecution.ExecutionId);

        DMFImportExportSequenceTmp importSequenceTmp = sequencer.sequence();

        PayrollEarningCodeStaging stagingTable;

        update_recordset stagingTable
            setting ImportSequence = importSequenceTmp.ImportSequence
            join importSequenceTmp
                where importSequenceTmp.RefRecId == stagingTable.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>