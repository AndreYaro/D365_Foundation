<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEodPostLedgerJournalContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>RetailEodPostLedgerJournalContext</c> class helps in transferring context when posting a ledger journal.
/// </summary>
internal final class RetailEodPostLedgerJournalContext implements System.IDisposable
{
    private static RetailEodPostLedgerJournalContext instance;

    private RetailStoreId storeId;
    private RetailTransactionId transactionId;
    private RetailTerminalId terminalId;    
    private RefRecId channel;
    private JournalId journalId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    public static RetailEodPostLedgerJournalContext construct()
    {
        return new RetailEodPostLedgerJournalContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    public static RetailEodPostLedgerJournalContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStore</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the context for store id.
    /// </summary>
    /// <param name = "_storeId">The store id.</param>
    /// <returns>The context for store id.</returns>
    internal RetailStoreId parmStore(RetailStoreId _storeId = storeId)
    {
        if (!prmIsDefault(_storeId))
        {
            storeId = _storeId;
        }

        return storeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the context for retail transaction id.
    /// </summary>
    /// <param name = "_transactionId">The retail transaction id.</param>
    /// <returns>The context for retail transaction id.</returns>
    internal RetailTransactionId parmTransactionId(RetailTransactionId _transactionId = transactionId)
    {
        if (!prmIsDefault(_transactionId))
        {
            transactionId = _transactionId;
        }

        return transactionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTerminal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the context for terminal id.
    /// </summary>
    /// <param name = "_terminalId">The terminal id.</param>
    /// <returns>The context for terminal id.</returns>
    internal RetailTerminalId parmTerminal(RetailTerminalId _terminalId = terminalId)
    {
        if (!prmIsDefault(_terminalId))
        {
            terminalId = _terminalId;
        }

        return terminalId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmChannel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the context for channel.
    /// </summary>
    /// <param name = "_channel">The channel record id.</param>
    /// <returns>The context for channel.</returns>
    internal RefRecId parmChannel(RefRecId _channel = channel)
    {
        if (!prmIsDefault(_channel))
        {
            channel = _channel;
        }

        return channel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the context for the journal id of the ledger journal.
    /// </summary>
    /// <param name = "_journalId">The journal Id.</param>
    /// <returns>The journal id.</returns>
    internal LedgerJournalId parmJournalId(LedgerJournalId _journalId = journalId)
    {
        if (!prmIsDefault(_journalId))
        {
            journalId = _journalId;
        }

        return journalId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>