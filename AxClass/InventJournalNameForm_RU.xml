<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalNameForm_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalNameForm_RU
{
    FormListControl     availableItemsCtrl;
    FormListControl     selectedItemsCtrl;
    InventJournalName   inventJournalName;
    FormRun             formRun;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addAll</Name>
				<Source><![CDATA[
    public void addAll()
    {
        int                          idx = availableItemsCtrl.getNextItem(FormListNext::All);
        InventJournalReportParms_RU  inventReportParms;

        if ( ! inventJournalName)
            return;

        ttsbegin;

        while (idx != -1)
        {
            FormListItem formListItem = availableItemsCtrl.getItem(idx);

            inventReportParms.ReportType = formListItem.data();
            inventReportParms.InventJournalNameId = inventJournalName.JournalNameId;
            inventReportParms.insert();

            idx = availableItemsCtrl.getNextItem(FormListNext::All, idx);
        }

        ttscommit;
        this.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>addSelected</Name>
				<Source><![CDATA[
    public void addSelected()
    {
        int                          idx = availableItemsCtrl.getNextItem(FormListNext::Selected);
        InventJournalReportParms_RU  inventReportParms;

        if ( ! inventJournalName)
            return;

        ttsbegin;

        while (idx != -1)
        {
            FormListItem formListItem = availableItemsCtrl.getItem(idx);
            InventJournalReportType_RU reportType = formListItem.data();

            delete_from inventReportParms
                where inventReportParms.InventJournalNameId == inventJournalName.JournalNameId &&
                      inventReportParms.ReportType          == reportType;

            inventReportParms.ReportType = reportType;
            inventReportParms.InventJournalNameId = inventJournalName.JournalNameId;
            inventReportParms.insert();
            idx = availableItemsCtrl.getNextItem(FormListNext::Selected, idx);
        }

        ttscommit;
        this.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initReportTypesTable</Name>
				<Source><![CDATA[
    public void initReportTypesTable()
    {
        InventJournalReportTypes_RU::initTable();
        this.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventJournalName</Name>
				<Source><![CDATA[
    public void inventJournalName(InventJournalName _inventJournalName)
    {
        inventJournalName = _inventJournalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormRun         _formRun,
                    FormListControl _availableItemsCtrl,
                    FormListControl _selectedItemsCtrl)
    {
        availableItemsCtrl = _availableItemsCtrl;
        selectedItemsCtrl  = _selectedItemsCtrl;
        formRun            = _formRun;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeAll</Name>
				<Source><![CDATA[
    public void removeAll()
    {
        int                          idx = selectedItemsCtrl.getNextItem(FormListNext::All);
        InventJournalReportParms_RU  inventReportParms;

        if ( ! inventJournalName)
            return;

        ttsbegin;

        if (idx != -1)
        {
            delete_from inventReportParms
                where inventReportParms.InventJournalNameId == inventJournalName.JournalNameId;
        }

        ttscommit;
        this.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeSelected</Name>
				<Source><![CDATA[
    public void removeSelected()
    {
        int                          idx = selectedItemsCtrl.getNextItem(FormListNext::Selected);
        InventJournalReportParms_RU  inventReportParms;

        if ( ! inventJournalName)
            return;

        ttsbegin;

        while (idx != -1)
        {
            FormListItem formListItem = selectedItemsCtrl.getItem(idx);

            delete_from inventReportParms
                where inventReportParms.InventJournalNameId == inventJournalName.JournalNameId &&
                      inventReportParms.ReportType          == formListItem.data();

           idx = selectedItemsCtrl.getNextItem(FormListNext::Selected, idx);
        }

        ttscommit;
        this.updateControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
    public void updateControls()
    {
        InventJournalReportTypes_RU  reportTypesTable;
        InventJournalReportParms_RU  inventReportParms;

        selectedItemsCtrl.deleteAll();
        availableItemsCtrl.deleteAll();

        if ( ! inventJournalName)
            return;

        while select ReportType, Description from reportTypesTable
            where reportTypesTable.JournalType == inventJournalName.JournalType
        {
            select firstonly RecId from inventReportParms
                where inventReportParms.ReportType            == reportTypesTable.ReportType &&
                      inventReportParms.InventJournalNameId   == inventJournalName.JournalNameId;

            if (inventReportParms.RecId)
            {
                selectedItemsCtrl.addItem(new FormListItem(reportTypesTable.Description, 0, inventReportParms.ReportType));
            }
            else
            {
                availableItemsCtrl.addItem(new FormListItem(reportTypesTable.Description, 0, reportTypesTable.ReportType));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
