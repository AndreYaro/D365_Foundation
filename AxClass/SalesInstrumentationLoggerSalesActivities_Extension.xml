<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInstrumentationLoggerSalesActivities_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesInstrumentationLoggerSalesActivities_Extension</c> class adds instrumentation activities to the sales area instrumentation logging.
/// </summary>
[ExtensionOf(classStr(SalesInstrumentationLogger))]
internal final class SalesInstrumentationLoggerSalesActivities_Extension
{
    private SalesInteractionInstrumentationActivities salesOrderInteractionActivities;
    private SalesOrderInstrumentationActivities salesOrderActivities;
    private SalesTotalsInstrumentationActivities salesTotalsActivities;
    private SalesFormLetterInstrumentationActivities salesFormLetterActivities;
    private SalesOrderLineCreationInstrumentationActivities salesOrderLineCreationActivities;
    private SalesCopyingInstrumentationActivities saleCopyingActivities;
    private SalesPackingSlipInstrumentationActivities SalesPackingSlipActivities;
    private SalesTableFormInstrumentationActivities salesTableFormInstrumentationActivities;
    private SalesLineItemSelectionInstrumentationActivities salesLineItemSelectionInstrumentationActivities;
    private SalesLineUpdateInstrumentationActivities salesLineUpdateInstrumentationActivities;
    private SalesTradeAgreementJournalLineInstrumentationActivities salesTradeAgreementJournalLineInstrumentationActivities;
    private SalesParmCleanupInstrumentationActivities salesParmCleanupActivities;
    private SalesQuotationInstrumentationActivities salesQuotationActivities;
    private SalesCDSSalesOrderDefaultingInstrumentationActivities salesCDSSalesOrderDefaultingActivities;
    private SalesCalcAvailableDlvDatesInstrumentationActivities salesCalcAvailableDlvDatesInstrumentationActivities;
    private SalesATPCalculationInstrumentationActivities salesATPCalculationInstrumentationActivities;
    private SalesOrderTypeInstrumentationActivities salesOrderTypeInstrumentationActivities;

    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>salesTotalsActivities</Name>
				<Source><![CDATA[
    internal SalesTotalsInstrumentationActivities salesTotalsActivities()
    {
        if (!salesTotalsActivities)
        {
            salesTotalsActivities = SalesTotalsInstrumentationActivities::newFromLogger(this);
        }

        return salesTotalsActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderActivities</Name>
				<Source><![CDATA[
    internal SalesOrderInstrumentationActivities salesOrderActivities()
    {
        if (!salesOrderActivities)
        {
            salesOrderActivities = SalesOrderInstrumentationActivities::newFromLogger(this);
        }

        return salesOrderActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesCopyingActivities</Name>
				<Source><![CDATA[
    internal SalesCopyingInstrumentationActivities salesCopyingActivities()
    {
        if (!saleCopyingActivities)
        {
            saleCopyingActivities = SalesCopyingInstrumentationActivities::newFromLogger(this);
        }

        return saleCopyingActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderInteractionActivities</Name>
				<Source><![CDATA[
    internal SalesInteractionInstrumentationActivities salesOrderInteractionActivities()
    {
        if (!salesOrderInteractionActivities)
        {
            salesOrderInteractionActivities = SalesInteractionInstrumentationActivities::newFromLogger(this);
        }

        return salesOrderInteractionActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesFormLetterActivities</Name>
				<Source><![CDATA[
    internal SalesFormLetterInstrumentationActivities salesFormLetterActivities()
    {
        if (!salesFormLetterActivities)
        {
            salesFormLetterActivities = SalesFormLetterInstrumentationActivities::newFromLogger(this);
        }

        return salesFormLetterActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderLineCreationActivities</Name>
				<Source><![CDATA[
    internal SalesOrderLineCreationInstrumentationActivities salesOrderLineCreationActivities()
    {
        if (!salesOrderLineCreationActivities)
        {
            salesOrderLineCreationActivities = SalesOrderLineCreationInstrumentationActivities::newFromLogger(this);
        }

        return salesOrderLineCreationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>SalesPackingSlipActivities</Name>
				<Source><![CDATA[
    internal SalesPackingSlipInstrumentationActivities SalesPackingSlipActivities()
    {
        if (!SalesPackingSlipActivities)
        {
            SalesPackingSlipActivities = SalesPackingSlipInstrumentationActivities::newFromLogger(this);
        }

        return SalesPackingSlipActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTableFormActivities</Name>
				<Source><![CDATA[
    internal SalesTableFormInstrumentationActivities salesTableFormActivities()
    {
        if (!salesTableFormInstrumentationActivities)
        {
            salesTableFormInstrumentationActivities = SalesTableFormInstrumentationActivities::newFromLogger(this);
        }

        return salesTableFormInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesLineItemSelectionActivities</Name>
				<Source><![CDATA[
    internal SalesLineItemSelectionInstrumentationActivities salesLineItemSelectionActivities()
    {
        if (!salesLineItemSelectionInstrumentationActivities)
        {
            salesLineItemSelectionInstrumentationActivities = SalesLineItemSelectionInstrumentationActivities::newFromLogger(this);
        }

        return salesLineItemSelectionInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesLineUpdateActivities</Name>
				<Source><![CDATA[
    internal SalesLineUpdateInstrumentationActivities salesLineUpdateActivities()
    {
        if (!salesLineUpdateInstrumentationActivities)
        {
            salesLineUpdateInstrumentationActivities = SalesLineUpdateInstrumentationActivities::newFromLogger(this);
        }

        return salesLineUpdateInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTradeAgreementJournalLineActivities</Name>
				<Source><![CDATA[
    internal SalesTradeAgreementJournalLineInstrumentationActivities salesTradeAgreementJournalLineActivities()
    {
        if (!salesTradeAgreementJournalLineInstrumentationActivities)
        {
            salesTradeAgreementJournalLineInstrumentationActivities = SalesTradeAgreementJournalLineInstrumentationActivities::newFromLogger(this);
        }

        return salesTradeAgreementJournalLineInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesParmCleanupActivities</Name>
				<Source><![CDATA[
    internal SalesParmCleanupInstrumentationActivities salesParmCleanupActivities()
    {
        if (!salesParmCleanupActivities)
        {
            salesParmCleanupActivities = SalesParmCleanupInstrumentationActivities::newFromLogger(this);
        }

        return salesParmCleanupActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuotationActivities</Name>
				<Source><![CDATA[
    internal SalesQuotationInstrumentationActivities salesQuotationActivities()
    {
        if (!salesQuotationActivities)
        {
            salesQuotationActivities = SalesQuotationInstrumentationActivities::newFromLogger(this);
        }

        return salesQuotationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesCDSSalesOrderDefaultingActivities</Name>
				<Source><![CDATA[
    internal SalesCDSSalesOrderDefaultingInstrumentationActivities salesCDSSalesOrderDefaultingActivities()
    {
        if (!salesCDSSalesOrderDefaultingActivities)
        {
            salesCDSSalesOrderDefaultingActivities = SalesCDSSalesOrderDefaultingInstrumentationActivities::newFromLogger(this);
        }

        return salesCDSSalesOrderDefaultingActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesCalcAvailableDlvDatesActivities</Name>
				<Source><![CDATA[
    internal SalesCalcAvailableDlvDatesInstrumentationActivities salesCalcAvailableDlvDatesActivities()
    {
        if (!salesCalcAvailableDlvDatesInstrumentationActivities)
        {
            salesCalcAvailableDlvDatesInstrumentationActivities = SalesCalcAvailableDlvDatesInstrumentationActivities::newFromLogger(this);
        }

        return salesCalcAvailableDlvDatesInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPCalculationActivities</Name>
				<Source><![CDATA[
    internal SalesATPCalculationInstrumentationActivities salesATPCalculationActivities()
    {
        if (!salesATPCalculationInstrumentationActivities)
        {
            salesATPCalculationInstrumentationActivities = SalesATPCalculationInstrumentationActivities::newFromLogger(this);
        }

        return salesATPCalculationInstrumentationActivities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderTypeActivities</Name>
				<Source><![CDATA[
    internal SalesOrderTypeInstrumentationActivities salesOrderTypeActivities()
    {
        if (!salesOrderTypeInstrumentationActivities)
        {
            salesOrderTypeInstrumentationActivities = SalesOrderTypeInstrumentationActivities::newFromLogger(this);
        }

        return salesOrderTypeInstrumentationActivities;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>