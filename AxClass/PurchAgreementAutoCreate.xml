<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchAgreementAutoCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchAgreementAutoCreate
{
    VendTable                       vendTable;

    AgreementHeaderDefault          agreementHeaderDefault;
    PurchAgreementHeader            purchAgreementHeader;
    PurchAgreementHeaderDefault     purchAgreementHeaderDefault;

    AgreementLine                   agreementLine;
    AgreementLineQuantityCommitment agreementLineQuantity;
    AgreementLineVolumeCommitment   agreementLineVolume;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementId</Name>
				<Source><![CDATA[
    PurchAgreementId agreementId()
    {
        return purchAgreementHeader.PurchNumberSequence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    void create()
    {
        #OCCRetryCount

        try
        {
            setprefix("@SYS28446");

            ttsbegin;

            this.setVend();

            setprefix(#PreFixField(vendTable, AccountNum));

            this.setPurchAgreementHeader();

            this.createPurchAgreementHeader();

            this.createAgreementLine();

            if (agreementLineQuantity.isItemBased())
            {
                setprefix(#PreFixField(agreementLineQuantity, ItemId));
            }
            else if (agreementLineVolume.isCategoryBased())
            {
                setprefix(#PreFixField(agreementLineVolume, Category));
            }

            this.endUpdate();

            ttscommit;

            if (this.showInfo())
            {
                info(strfmt("@SYS300146", purchAgreementHeader.PurchNumberSequence),
                    '',
                    SysInfoAction_TableField::newBuffer(purchAgreementHeader));
            }
        }

        catch (Exception::Deadlock)
        {
            retry;
        }

        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAgreementLine</Name>
				<Source><![CDATA[
    void createAgreementLine()
    {
        if (agreementLineQuantity.isItemBased())
        {
            agreementLineQuantity.insert();
        }
        else if (agreementLineVolume.isCategoryBased())
        {
            agreementLineVolume.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchAgreementHeader</Name>
				<Source><![CDATA[
    void createPurchAgreementHeader()
    {
        purchAgreementHeader.insert();

        agreementHeaderDefault.AgreementHeader = purchAgreementHeader.RecId;
        agreementHeaderDefault.insert();

        purchAgreementHeaderDefault.PurchaseAgreementHeader = purchAgreementHeader.RecId;
        purchAgreementHeaderDefault.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
    void endUpdate()
    {
        if (agreementLineQuantity.isItemBased())
        {
            if (!agreementLineQuantity.RecId)
            {
                throw Exception::Error;
            }
        }
        else if (agreementLineVolume.isCategoryBased())
        {
            if (!agreementLineVolume.RecId)
            {
                throw Exception::Error;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(Common    _initFromBuffer     = null,
             Object    _callBackClass      = null)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    ProjId projId()
    {
        return agreementHeaderDefault.Project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchAgreementHeader</Name>
				<Source><![CDATA[
    void setPurchAgreementHeader()
    {
        PurchAgreementId    tmpAgreementId;
        NumberSeq           num;

        if (!vendTable.RecId)
        {
            throw error("@SYS23020");
        }

        purchAgreementHeader.clear();
        purchAgreementHeader.initValue();
        purchAgreementHeader.VendAccount = vendTable.AccountNum;
        purchAgreementHeader.initFromVendTable();

        num = NumberSeq::newGetNum(PurchParameters::numRefPurchAgreementId());
        tmpAgreementId = num.num();

        if (!tmpAgreementId
            || PurchAgreementHeader::findAgreementId(tmpAgreementId).RecId)
        {
            num.abort();
            checkFailed("@SYS19304");
            checkFailed(strfmt("@SYS24176", tmpAgreementId));
            throw error("@SYS23020");
        }

        purchAgreementHeader.PurchNumberSequence = tmpAgreementId;
        purchAgreementHeader.DocumentTitle = tmpAgreementId;
        num.used();

        agreementHeaderDefault.clear();
        agreementHeaderDefault.initValue();

        purchAgreementHeaderDefault.clear();
        purchAgreementHeaderDefault.initValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVend</Name>
				<Source><![CDATA[
    void setVend()
    {
        throw error(Error::missingOverload(funcname()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInfo</Name>
				<Source><![CDATA[
    boolean showInfo()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static PurchAgreementAutoCreate construct(Common buffer = null, Object object = null)
    {
        PurchAgreementAutoCreate purchAgreementAutoCreate = PurchAgreementAutoCreate::constructNoThrow(buffer, object);

        if (!purchAgreementAutoCreate)
        {
            throw error(strfmt("@SYS23419",tableid2name(buffer.TableId)));
        }

        return purchAgreementAutoCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructNoThrow</Name>
				<Source><![CDATA[
    private static PurchAgreementAutoCreate constructNoThrow(Common _buffer = null, Object _object = null)
    {
        PurchAgreementAutoCreateFactoryAttribute attribute = new PurchAgreementAutoCreateFactoryAttribute(tableId2Name(_buffer.TableId));
        SysExtensionGenericInstantiation instantiation = new SysExtensionGenericInstantiation(_buffer, _object);
        PurchAgreementAutoCreate instanceOfPurchAgreementAutoCreate = SysExtensionAppClassFactory::getClassFromSysAttributeWithInstantiationStrategy(classStr(PurchAgreementAutoCreate), attribute, instantiation) as PurchAgreementAutoCreate;
        
        if (classIdGet(instanceOfPurchAgreementAutoCreate) == classNum(PurchAgreementAutoCreate))
        {
            return null;
        }

        return instanceOfPurchAgreementAutoCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>