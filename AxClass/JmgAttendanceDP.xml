<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgAttendanceDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JmgAttendaceDP</c> class supports the <c>JmgAttendance</c> report.
/// </summary>
[
       SRSReportParameterAttribute(classstr(JmgAttendanceContract))
]
public class JmgAttendanceDP extends SRSReportDataProviderBase
{
    JmgTmpAttendance  jmgTmpAttendance;

    #define.calcGroupIdAll('All')
    #define.present("@SYS39749")
    #define.plannedAbsence("@SYS39748")
    #define.notAccountedFor("@SYS118018")
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getJmgTmpAttendance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the data from the <c>JmgTmpAttendance</c> temporary data.
    /// </summary>
    /// <returns>
    /// The data from the <c>JmgTmpAttendance</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute('JmgTmpAttendance')
    ]
    public JmgTmpAttendance getJmgTmpAttendance()
    {
        select jmgTmpAttendance;
        return jmgTmpAttendance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertJmgTmpAttendance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a record into the <c>JmgTmpAttendance</c> temporary buffer.
    /// </summary>
    /// <param name="_absenceSums">
    /// The calculated absence sums to insert into the <c>JmgTmpAttendance</c> record.
    /// </param>
    /// <param name="_employeeStatus">
    /// The current clock in status of the worker.
    /// </param>
    /// <param name="_employeeStatusEnum">
    /// Enum value representing current clock in status of the worker.
    /// </param>
    private void insertJmgTmpAttendance(Map _absenceSums, JmgLabel _employeeStatus
    , JmgAttendanceReportType _employeeStatusEnum
    )
    {
        jmgTmpAttendance.NumberOfEmployees  = _absenceSums.lookup(_employeeStatus);
        jmgTmpAttendance.EmployeeStatus     = _employeeStatus;
        jmgTmpAttendance.EmployeeStatusNum  = enum2int(_employeeStatusEnum);
        jmgTmpAttendance.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the required data for the <c>JmgAttendanceReport</c> temporary table.
    /// </summary>
    public void processReport()
    {
        Map                     absenceSums;
        JmgGroupCalcId          jmgGroupCalcId;

        JmgEmplSignedInForm     jmgEmplSignedInForm = new JmgEmplSignedInForm();
        JmgAttendanceContract   contract            = this.parmDataContract() as JmgAttendanceContract;

        if (contract)
        {
            jmgGroupCalcId = contract.parmCalcGroupId();
        }

        if (jmgGroupCalcId && jmgGroupCalcId != #calcGroupIdAll)
        {
            absenceSums = jmgEmplSignedInForm.getAbsenceSums(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()), jmgGroupCalcId);
        }
        else
        {
            absenceSums = jmgEmplSignedInForm.getAbsenceSums(DateTimeUtil::getToday(DateTimeUtil::getUserPreferredTimeZone()));
        }

        this.insertJmgTmpAttendance(absenceSums, #present
        , JmgAttendanceReportType::Present
        );
        this.insertJmgTmpAttendance(absenceSums, #plannedAbsence
        , JmgAttendanceReportType::Absent
        );
        this.insertJmgTmpAttendance(absenceSums, #notAccountedFor
        , JmgAttendanceReportType::NotAccounted
        );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
