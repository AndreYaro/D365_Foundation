<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWavePendingAllocationProcessorInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for wave pending allocation processor instrumentation logging.
/// </summary>
internal final class WHSWavePendingAllocationProcessorInstrumentationActivities
{
    private const str ActivityNamePrefix = 'WHSWavePendingAllocationProcessor.';

    private WHSInstrumentationLogger logger;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static WHSWavePendingAllocationProcessorInstrumentationActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSWavePendingAllocationProcessorInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>wavePendingAllocationProcessorAllocatePendingAllocation</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext wavePendingAllocationProcessorAllocatePendingAllocation()
    {
        return logger.activityContext(logger.activity(ActivityNamePrefix + 'allocatePendingAllocation'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>wavePendingAllocationProcessorNotAllocated</Name>
				<Source><![CDATA[
    internal void wavePendingAllocationProcessorNotAllocated(SysInstrumentationActivityContext _activityContext, RecId _pendingAllocationRecId)
    {
        _activityContext.addCustomProperty('Wave pending allocation processor did not allocate the record:', any2Str(_pendingAllocationRecId));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>