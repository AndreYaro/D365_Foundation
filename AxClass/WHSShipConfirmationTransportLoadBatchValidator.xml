<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConfirmationTransportLoadBatchValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSShipConfirmationTransportLoadBatchValidator</c> class is used to check that a transport load does not contain any batches with disposition codes set to block shipping.
/// </summary>
[SysTableNameFactory(tableStr(WHSTransportLoad))]
public class WHSShipConfirmationTransportLoadBatchValidator extends WHSShipConfirmationBatchValidator
{
    protected WHSTransportLoad transportLoad;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of <c>WHSTransportLoad</c> table.
    /// </summary>
    /// <param name = "_common">
    /// <c>Common</c> buffer used for this instance of the <c>WHSTransportLoad</c> table.
    /// </param>
    public void initFromBuffer(Common _common)
    {
        transportLoad = _common as WHSTransportLoad;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyBatchDispositionCodeBlockingShipping</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks that the transport load does not contain any batches with disposition codes set to block shipping.
    /// </summary>
    /// <returns>
    /// true if no batch exists that should block shipping; otherwise, false
    /// </returns>
    public boolean isAnyBatchDispositionCodeBlockingShipping()
    {
        // Batch above location items will have batch specified on the work line.
        boolean ret = this.isAnyBatchDispositionCodeBlockingShippingForBatchAboveLocationItems();

        if (ret)
        {
            // Batch below location items will have batch on the dim tracking records.
            ret = this.isAnyBatchDispositionCodeBlockingShippingForBatchBelowLocationItems();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyBatchDispositionCodeBlockingShippingForBatchAboveLocationItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks that the transport load does not contain any batches above location items with disposition codes set to block shipping.
    /// </summary>
    /// <returns>
    /// true if no batch exists that should block shipping; otherwise, false
    /// </returns>
    private boolean isAnyBatchDispositionCodeBlockingShippingForBatchAboveLocationItems()
    {
        WHSLoadLine                 loadLine;
        WHSWorkLine                 workLine;
        InventDim                   inventDim;
        InventBatch                 inventBatch;
        PdsDispositionMaster        dispoMaster;
        WHSWorkTable                workTable;
        WHSTransportLoadLoadedWork  transportLoadLoadedWork;

        select firstonly RecId from transportLoadLoadedWork
            where transportLoadLoadedWork.TransportLoad == transportLoad.RecId
            exists join workTable
                where workTable.WorkId == transportLoadLoadedWork.WorkId
                exists join workLine
                    where workLine.WorkId       == workTable.WorkId
                        && workLine.WorkStatus  != WHSWorkStatus::Cancelled
                    exists join loadLine
                        where loadLine.RecId == workLine.LoadLineRefRecId
                        exists join inventDim
                            where inventDim.InventDimId == workLine.InventDimId
                            exists join inventBatch
                                where inventBatch.InventBatchId == inventDim.InventBatchId
                                    && inventBatch.ItemId       == workLine.ItemId
                                exists join dispoMaster
                                    where dispoMaster.DispositionCode       == inventBatch.PdsDispositionCode
                                        && dispoMaster.Status               == PdsStatus::Unavailable
                                        && ((dispoMaster.PdsSalesBlockShip  == NoYes::Yes
                                        &&   loadLine.InventTransType       == InventTransType::Sales)
                                        || (dispoMaster.PdsTransBlockShip   == NoYes::Yes
                                        &&  loadLine.InventTransType        == InventTransType::TransferOrderShip));

        return transportLoadLoadedWork.RecId == 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyBatchDispositionCodeBlockingShippingForBatchBelowLocationItems</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks that the transport load does not contain any batches below location items with disposition codes set to block shipping.
    /// </summary>
    /// <returns>
    /// true if no batch exists that should block shipping; otherwise, false
    /// </returns>
    private boolean isAnyBatchDispositionCodeBlockingShippingForBatchBelowLocationItems()
    {
        WHSLoadLine                 loadLine;
        WHSWorkLine                 workLine;
        InventDim                   inventDim;
        InventBatch                 inventBatch;
        PdsDispositionMaster        dispoMaster;
        WHSWorkTable                workTable;
        WHSTransportLoadLoadedWork  transportLoadLoadedWork;
        WHSDimTracking              dimTracking;

        select firstonly RecId from transportLoadLoadedWork
            where transportLoadLoadedWork.TransportLoad == transportLoad.RecId
            exists join workTable
                where workTable.WorkId == transportLoadLoadedWork.WorkId
                exists join workLine
                    where workLine.WorkId       == workTable.WorkId
                        && workLine.WorkStatus  != WHSWorkStatus::Cancelled
                    exists join loadLine
                        where loadLine.RecId == workLine.LoadLineRefRecId
                        exists join dimTracking
                            where dimTracking.WorkId    == workLine.WorkId
                                && dimTracking.LineNum  == workLine.LineNum
                            exists join inventDim
                                where inventDim.InventDimId == dimTracking.InventDimId
                                exists join inventBatch
                                    where inventBatch.InventBatchId == inventDim.InventBatchId
                                        && inventBatch.ItemId       == workLine.ItemId
                                    exists join dispoMaster
                                        where dispoMaster.DispositionCode       == inventBatch.PdsDispositionCode
                                            && dispoMaster.Status               == PdsStatus::Unavailable
                                            && ((dispoMaster.PdsSalesBlockShip  == NoYes::Yes
                                            &&   loadLine.InventTransType       == InventTransType::Sales)
                                            || (dispoMaster.PdsTransBlockShip   == NoYes::Yes
                                            &&  loadLine.InventTransType        == InventTransType::TransferOrderShip));

        return transportLoadLoadedWork.RecId == 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>