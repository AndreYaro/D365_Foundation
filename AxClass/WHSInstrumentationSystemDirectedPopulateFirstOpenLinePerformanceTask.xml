<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
using XppRuntimeEventSource = Microsoft.Dynamics.ApplicationPlatform.XppServices.Instrumentation.XppRuntimeEventSource;

internal final class WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask extends WHSInstrumentationPerformanceTask
{
    private Counter mainLoopIterationCount;
    private NumberOfRecords workLinesFound;
    private NumberOfRecords workHeadersAlreadyEvaluated;
    private NumberOfRecords workHeadersAdded;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(str _action)
    {
        super('systemDirectedWorkQuery', _action);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    public static WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask newFromParameters(boolean _mustDirectlyUpdateWorkUser)
    {
        var task = new WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask('populateFirstOpenWorkLine');
        task.setMustDirectlyUpdateWorkUser(_mustDirectlyUpdateWorkUser);

        return task;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMustDirectlyUpdateWorkUser</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask setMustDirectlyUpdateWorkUser(boolean _mustDirectlyUpdateWorkUser)
    {
        return this.setParameter('mustDirectlyUpdateWorkUser', any2Str(_mustDirectlyUpdateWorkUser));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQueryContainsWorkTableDataSource</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask setQueryContainsWorkTableDataSource(boolean _queryContainsWorkTableDataSource)
    {
        return this.setParameter('queryContainsWorkTableDataSource', any2Str(_queryContainsWorkTableDataSource));
    }

]]></Source>
			</Method>
			<Method>
				<Name>increaseMainLoopIterationCount</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask increaseMainLoopIterationCount()
    {
        ++mainLoopIterationCount;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>increaseWorkLinesFound</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask increaseWorkLinesFound()
    {
        ++workLinesFound;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>increaseWorkHeadersAlreadyEvaluated</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask increaseWorkHeadersAlreadyEvaluated()
    {
        ++workHeadersAlreadyEvaluated;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>increaseWorkHeadersAdded</Name>
				<Source><![CDATA[
    public WHSInstrumentationSystemDirectedPopulateFirstOpenLinePerformanceTask increaseWorkHeadersAdded()
    {
        ++workHeadersAdded;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endTaskInternal</Name>
				<Source><![CDATA[
    protected void endTaskInternal()
    {
        this.setParameter('mainLoopIterationCount', int2Str(mainLoopIterationCount));
        this.setParameter('workHeadersAdded', int2Str(workHeadersAdded));
        this.setParameter('workHeadersAlreadyEvaluated', int2Str(workHeadersAlreadyEvaluated));
        this.setParameter('workLinesFound', int2Str(workLinesFound));        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>