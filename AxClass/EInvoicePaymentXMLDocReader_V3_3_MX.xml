<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoicePaymentXMLDocReader_V3_3_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoicePaymentXMLDocReader_V3_3_MX</c> class handles reading XML payment documents in version CFDI 3.2.
/// </summary>
class EInvoicePaymentXMLDocReader_V3_3_MX extends EInvoiceXMLDocReader_MX
{
    System.Text.StringBuilder stringBuilder;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>appendAllCFDIRelacionados</Name>
				<Source><![CDATA[
    protected void appendAllCFDIRelacionados()
    {
        XmlNode parentNode;
        XmlNode childNode;
        XmlNodeList nodeList;

        parentNode = this.getXpathNode(@'/cfdi:Comprobante/cfdi:CfdiRelacionados');

        if (parentNode != null)
        {
            this.appendChainElementByNode(parentNode, '@TipoRelacion');
            nodeList = parentNode.selectNodes(@'cfdi:CfdiRelacionado', nsmgr);
            for (childNode = nodeList.nextNode(); childNode != null; childNode = nodeList.nextNode())
            {
                this.appendChainElementByNode(childNode, '@UUID');
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendAllConceptos</Name>
				<Source><![CDATA[
    protected void appendAllConceptos()
    {
        XmlNode conceptosNode;
        XmlNode conceptoNode;
        XmlNode trasladoNode;
        XmlNode retencionNode;
        XmlNodeList nodeList;
        XmlNodeList nestedNodeList;

        conceptosNode = this.getXpathNode(@'/cfdi:Comprobante/cfdi:Conceptos');

        if (conceptosNode != null)
        {
            nodeList = conceptosNode.selectNodes(@'cfdi:Concepto', nsmgr);
            for (conceptoNode = nodeList.nextNode(); conceptoNode != null; conceptoNode = nodeList.nextNode())
            {
                this.appendChainElementByNode(conceptoNode, '@ClaveProdServ');
                this.appendChainElementByNode(conceptoNode, '@NoIdentificacion');
                this.appendChainElementByNode(conceptoNode, '@Cantidad');
                this.appendChainElementByNode(conceptoNode, '@ClaveUnidad');
                this.appendChainElementByNode(conceptoNode, '@Unidad');
                this.appendChainElementByNode(conceptoNode, '@Descripcion');
                this.appendChainElementByNode(conceptoNode, '@ValorUnitario');
                this.appendChainElementByNode(conceptoNode, '@Importe');
                this.appendChainElementByNode(conceptoNode, '@Descuento');

                nestedNodeList = conceptoNode.selectNodes('./cfdi:Impuestos/cfdi:Traslados/cfdi:Traslado', nsmgr);
                for (trasladoNode = nestedNodeList.nextNode(); trasladoNode != null; trasladoNode = nestedNodeList.nextNode())
                {
                    this.appendChainElementByNode(trasladoNode, '@Base');
                    this.appendChainElementByNode(trasladoNode, '@Impuesto');
                    this.appendChainElementByNode(trasladoNode, '@TipoFactor');
                    this.appendChainElementByNode(trasladoNode, '@TasaOCuota');
                    this.appendChainElementByNode(trasladoNode, '@Importe');
                }

                nestedNodeList = conceptoNode.selectNodes('./cfdi:Impuestos/cfdi:Retenciones/cfdi:Retencion', nsmgr);
                for (retencionNode = nestedNodeList.nextNode(); retencionNode != null; retencionNode = nestedNodeList.nextNode())
                {
                    this.appendChainElementByNode(retencionNode, '@Base');
                    this.appendChainElementByNode(retencionNode, '@Impuesto');
                    this.appendChainElementByNode(retencionNode, '@TipoFactor');
                    this.appendChainElementByNode(retencionNode, '@TasaOCuota');
                    this.appendChainElementByNode(retencionNode, '@Importe');
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendAllDoctoRelacionado</Name>
				<Source><![CDATA[
    protected void appendAllDoctoRelacionado(XmlNode _relacionadoNode)
    {
        XmlNode childNode;
        XmlNodeList nodeList;

        nodeList = _relacionadoNode.selectNodes(strFmt(@'%1:DoctoRelacionado', this.getPagoPrefix()), nsmgr);
        for (childNode = nodeList.nextNode(); childNode != null; childNode = nodeList.nextNode())
        {
            this.appendChainElementByNode(childNode, '@IdDocumento');
            this.appendChainElementByNode(childNode, '@Serie');
            this.appendChainElementByNode(childNode, '@Folio');
            this.appendChainElementByNode(childNode, '@MonedaDR');
            this.appendChainElementByNode(childNode, '@TipoCambioDR');
            this.appendChainElementByNode(childNode, '@MetodoDePagoDR');
            this.appendChainElementByNode(childNode, '@NumParcialidad');
            this.appendChainElementByNode(childNode, '@ImpSaldoAnt');
            this.appendChainElementByNode(childNode, '@ImpPagado');
            this.appendChainElementByNode(childNode, '@ImpSaldoInsoluto');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendAllPagos</Name>
				<Source><![CDATA[
    protected void appendAllPagos()
    {
        XmlNode parentNode;
        XmlNode childNode;
        XmlNodeList nodeList;

        parentNode = this.getXpathNode(strFmt(@'/cfdi:Comprobante/cfdi:Complemento/%1:Pagos', this.getPagoPrefix()));

        if (parentNode != null)
        {
            nodeList = parentNode.selectNodes(strFmt(@'%1:Pago', this.getPagoPrefix()), nsmgr);
            for (childNode = nodeList.nextNode(); childNode != null; childNode = nodeList.nextNode())
            {
                this.appendChainElementByNode(childNode, '@FechaPago');
                this.appendChainElementByNode(childNode, '@FormaDePagoP');
                this.appendChainElementByNode(childNode, '@MonedaP');
                this.appendChainElementByNode(childNode, '@TipoCambioP');
                this.appendChainElementByNode(childNode, '@Monto');
                this.appendChainElementByNode(childNode, '@NumOperacion');
                this.appendChainElementByNode(childNode, '@RfcEmisorCtaOrd');
                this.appendChainElementByNode(childNode, '@NomBancoOrdExt');
                this.appendChainElementByNode(childNode, '@CtaOrdenante');
                this.appendChainElementByNode(childNode, '@RfcEmisorCtaBen');
                this.appendChainElementByNode(childNode, '@CtaBeneficiario');
                this.appendChainElementByNode(childNode, '@TipoCadPago');
                this.appendChainElementByNode(childNode, '@CertPago');
                this.appendChainElementByNode(childNode, '@CadPago');
                this.appendChainElementByNode(childNode, '@SelloPago');
                this.appendAllDoctoRelacionado(childNode);
                this.appendImpuestosP(childNode);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendChainElement</Name>
				<Source><![CDATA[
    protected void appendChainElement(str _xPath)
    {
        str element = this.getXpathValue(_xPath);
        if (element && element != #delimiter)
        {
            stringBuilder.Append(element);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendChainElementByNode</Name>
				<Source><![CDATA[
    protected void appendChainElementByNode(XmlNode _node, str _xPath)
    {
        str value = this.getXpathValueBasedOnNode(_node, _xPath);

        stringBuilder.Append(value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendImpuestos</Name>
				<Source><![CDATA[
    protected void appendImpuestos()
    {
        XmlNode parentNode;
        XmlNode childNode;
        XmlNodeList nodeList;

        parentNode = this.getXpathNode(@'/cfdi:Comprobante/cfdi:Impuestos');

        if (parentNode != null)
        {
            nodeList = parentNode.selectNodes(@'cfdi:Retenciones/cfdi:Retencion', nsmgr);
            for (childNode = nodeList.nextNode(); childNode != null; childNode = nodeList.nextNode())
            {
                this.appendChainElementByNode(childNode, '@Impuesto');
                this.appendChainElementByNode(childNode, '@Importe');
            }

            this.appendChainElementByNode(parentNode, '@TotalImpuestosRetenidos');

            nodeList = parentNode.selectNodes(@'cfdi:Traslados/cfdi:Traslado', nsmgr);
            for (childNode = nodeList.nextNode(); childNode != null; childNode = nodeList.nextNode())
            {
                this.appendChainElementByNode(childNode, '@Impuesto');
                this.appendChainElementByNode(childNode, '@TipoFactor');
                this.appendChainElementByNode(childNode, '@TasaOCuota');
                this.appendChainElementByNode(childNode, '@Importe');
            }

            this.appendChainElementByNode(parentNode, '@TotalImpuestosTrasladados');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNameSpace</Name>
				<Source><![CDATA[
    protected str getNameSpace()
    {
        return 'http://www.sat.gob.mx/cfd/3';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginalChain</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the "Cadena Original" that is a sequence of fields used to authenticate the XML
    /// </summary>
    /// <returns>
    /// The "Cadena Original" that is a sequence of fields used to authenticate the XML.
    /// </returns>
    public str getOriginalChain()
    {
        str originalChain;

        stringBuilder = new System.Text.StringBuilder();
        stringBuilder.Append(#delimiter);
        nsmgr.addNamespace('cfdi','http://www.sat.gob.mx/cfd/3');
        nsmgr.addNamespace('pago10','http://www.sat.gob.mx/Pagos');
        this.appendChainElement(@'/cfdi:Comprobante/@Version');
        this.appendChainElement(@'/cfdi:Comprobante/@Serie');
        this.appendChainElement(@'/cfdi:Comprobante/@Folio');
        this.appendChainElement(@'/cfdi:Comprobante/@Fecha');
        this.appendChainElement(@'/cfdi:Comprobante/@FormaPago');
        this.appendChainElement(@'/cfdi:Comprobante/@NoCertificado');
        this.appendChainElement(@'/cfdi:Comprobante/@CondicionesDePago');
        this.appendChainElement(@'/cfdi:Comprobante/@SubTotal');
        this.appendChainElement(@'/cfdi:Comprobante/@Descuento');
        this.appendChainElement(@'/cfdi:Comprobante/@Moneda');
        this.appendChainElement(@'/cfdi:Comprobante/@TipoCambio');
        this.appendChainElement(@'/cfdi:Comprobante/@Total');
        this.appendChainElement(@'/cfdi:Comprobante/@TipoDeComprobante');
        this.appendChainElement(@'/cfdi:Comprobante/@MetodoPago');
        this.appendChainElement(@'/cfdi:Comprobante/@LugarExpedicion');
        this.appendChainElement(@'/cfdi:Comprobante/@Confirmacion');

        this.appendAllCFDIRelacionados();

        // Emisor
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Emisor/@Rfc');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Emisor/@Nombre');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Emisor/@RegimenFiscal');

        // Receptor
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Receptor/@Rfc');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Receptor/@Nombre');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Receptor/@ResidenciaFiscal');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Receptor/@NumRegIdTrib');
        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Receptor/@UsoCFDI');

        this.appendAllConceptos();

        this.appendChainElement(@'/cfdi:Comprobante/cfdi:Complemento/pago10:Pagos/@Version');
        this.appendAllPagos();

        this.appendImpuestos();

        stringBuilder.Append(#delimiter + #delimiter);
        originalChain = this.removeDuplicatedSpaces(stringBuilder.ToString());

        return this.getFormattedOriginalChain(originalChain);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPagoPrefix</Name>
				<Source><![CDATA[
    protected str getPagoPrefix()
    {
        return 'pago10';
    }

]]></Source>
			</Method>
			<Method>
				<Name>appendImpuestosP</Name>
				<Source><![CDATA[
    protected void appendImpuestosP(XmlNode _parentNode)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>