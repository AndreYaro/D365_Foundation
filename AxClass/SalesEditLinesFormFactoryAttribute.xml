<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesEditLinesFormFactoryAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesEditLinesFormFactoryAttribute</c> class is a factory attribute enabling instantiation of <c>SalesEditLinesForm</c> classes through the <c>SysExtension</c> framework.
/// </summary>
class SalesEditLinesFormFactoryAttribute extends SysAttribute implements SysExtensionIAttribute
{
    DocumentStatus documentStatus;
    boolean lineOriented;
    VersioningUpdateType updateType;
    int numberOfDefaultParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(
        DocumentStatus _documentStatus, 
        boolean _lineOriented = false,
        VersioningUpdateType _updateType = VersioningUpdateType::Initial)
    {
        documentStatus = _documentStatus;
        lineOriented = _lineOriented;
        updateType = _updateType;

        if (prmIsDefault(_lineOriented))
        {
            numberOfDefaultParameters++;
        }

        if (prmIsDefault(_updateType))
        {
            numberOfDefaultParameters++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>
    /// A string representing the cache key.
    /// </returns>
    public str parmCacheKey()
    {
        return classStr(SalesEditLinesFormFactoryAttribute)+';'+
            int2Str(numberOfDefaultParameters)+';'+
            int2str(enum2int(documentStatus))+';'+
            int2str(enum2int(lineOriented))+';'+
            int2str(enum2int(updateType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>
    /// true, if the same instance should be used; otherwise, false.
    /// </returns>
    /// <remarks>
    /// When returning false, the SysExtension framework will create a new class instance for every invocation.
    /// If the class is immutable, consider returning true to save memory and gain performance.
    /// </remarks>
    public boolean useSingleton()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>