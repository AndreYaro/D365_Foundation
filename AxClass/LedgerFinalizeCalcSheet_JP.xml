<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerFinalizeCalcSheet_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    Updates the current record to version 2 in the <c>ledgerConsumptionTaxReportTrans_JP</c> table.
/// </summary>
public class LedgerFinalizeCalcSheet_JP
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static LedgerFinalizeCalcSheet_JP construct()
    {
        return new LedgerFinalizeCalcSheet_JP();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TaxReportIParameters_JP parameters = TaxReportIParameters_JP::getParametersFromArgs(_args);

        if (parameters)
        {
            LedgerFinalizeCalcSheet_JP::finalizeByParameters(parameters);
        }
        else
        {
            LedgerFinalizeCalcSheet_JP::runOnServer();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runOnServer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update the current record to version 2 in the <c>ledgerConsumptionTaxReportTrans_JP</c> table.
    /// </summary>
    static public void runOnServer()
    {
        #COSNumbers
        LedgerConsumptionTaxCalcTrans_JP    ledgerConsumptionTaxCalcTrans_JP;
        TaxReportByCode_JP                  taxReportByCode_JP;

        while select forupdate PeriodOfTaxationFrom, PeriodOfTaxationTo, SettlementPeriod, CalcMethod, TypeOfDeclaration, TaxValue
            from ledgerConsumptionTaxCalcTrans_JP
            exists join PeriodOfTaxationFrom, PeriodOfTaxationTo, SettlementPeriod, CalcMethod, TypeOfDeclaration
                from taxReportByCode_JP
                    where ledgerConsumptionTaxCalcTrans_JP.PeriodOfTaxationFrom == taxReportByCode_JP.PeriodOfTaxationFrom
                        && ledgerConsumptionTaxCalcTrans_JP.PeriodOfTaxationTo  == taxReportByCode_JP.PeriodOfTaxationTo
                        && ledgerConsumptionTaxCalcTrans_JP.SettlementPeriod    == taxReportByCode_JP.SettlementPeriod
                        && ledgerConsumptionTaxCalcTrans_JP.TypeOfDeclaration   == taxReportByCode_JP.TypeOfDeclaration
                        && ledgerConsumptionTaxCalcTrans_JP.TaxValue            == taxReportByCode_JP.TaxValue
        {
            ttsbegin;
            ledgerConsumptionTaxCalcTrans_JP.reread();
            ledgerConsumptionTaxCalcTrans_JP.Version = TaxRepVersion::Latest;
            ledgerConsumptionTaxCalcTrans_JP.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>finalizeByParameters</Name>
				<Source><![CDATA[
    internal static void finalizeByParameters(TaxReportIParameters_JP _parameters)
    {
        LedgerConsumptionTaxCalcTrans_JP ledgerConsumptionTaxCalcTrans;

        update_recordset ledgerConsumptionTaxCalcTrans
            setting Version = TaxRepVersion::Latest
            where ledgerConsumptionTaxCalcTrans.Version != TaxRepVersion::Latest
                && ledgerConsumptionTaxCalcTrans.PeriodOfTaxationFrom == _parameters.parmFromDate()
                && ledgerConsumptionTaxCalcTrans.PeriodOfTaxationTo == _parameters.parmToDate()
                && ledgerConsumptionTaxCalcTrans.SettlementPeriod == _parameters.parmTaxPeriod()
                && ledgerConsumptionTaxCalcTrans.TypeOfDeclaration == _parameters.parmTypeOfDeclaration();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>