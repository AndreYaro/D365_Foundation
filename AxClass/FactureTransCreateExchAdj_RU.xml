<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureTransCreateExchAdj_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FactureTransCreateExchAdj_RU extends FactureTransCreateAmountDiff_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>factureLineType</Name>
				<Source><![CDATA[
        public FactureLineType_RU factureLineType()
    {
        return FactureLineType_RU::ExchAdj;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTrans</Name>
				<Source><![CDATA[
        protected void initTrans()
    {
        CustVendTrans custVendTrans;

        super();

        if (factureJour.Module == FactureModule_RU::Cust)
        {
            custVendTrans =  CustTrans::find(factureJour.CustVendTransRecId);
        }
        else
        {
            custVendTrans =  VendTrans::find(factureJour.CustVendTransRecId);
        }
        factureTrans.LineAmount      = 0;
        factureTrans.TaxAmount       = 0;
        factureTrans.Excise          = 0;
        factureTrans.FactureLineType = this.factureLineType();
        factureTrans.ItemName        = enum2str(this.factureLineType()) + (custVendTrans.Invoice ? "@GLS102908" + "@SYS34952" + "@SYS14204" + "@GLS102908" + custVendTrans.Invoice + "@SYS34953" : "@GLS102908");

        if (factureJour.AmountAdjustment)
        {
            factureTrans.InvoiceTransTableId = taxTrans.SourceTableId;
            factureTrans.InvoiceTransRecId   = taxTrans.SourceRecId;

            factureTrans.ExcludeFromBook = factureJour.Module == FactureModule_RU::Vend;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>