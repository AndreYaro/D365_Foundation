<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTemplateApplyWHSInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductTemplateApplyWHSInventTable</c> class handles the validation and updating of an
/// <c>WHSInventTable</c> buffer when a product template is applied.
/// </summary>
public class EcoResProductTemplateApplyWHSInventTable extends EcoResProductTemplateApplyBuffer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustWriteBuffer</Name>
				<Source><![CDATA[
        protected boolean mustWriteBuffer()
    {
        WHSInventTable whsInventTable = buffer as WHSInventTable;
        InventTable inventTable = InventTable::find(whsInventTable.ItemId);
        return inventTable.whsItemIsWHSControlled();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeBuffer</Name>
				<Source><![CDATA[
        public void writeBuffer()
    {
        WHSInventTable newValues = buffer;

        if (this.mustWriteBuffer())
        {
            //The record has already been created when assigning the storage dimension group,
            //we never have to insert it here.
            WHSInventTable existingRecord = WHSInventTable::find(newValues.ItemId, true);
            buf2Buf(newValues, existingRecord);
            existingRecord.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static EcoResProductTemplateApplyWHSInventTable construct()
    {
        return new EcoResProductTemplateApplyWHSInventTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
