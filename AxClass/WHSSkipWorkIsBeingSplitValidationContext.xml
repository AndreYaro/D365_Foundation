<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSSkipWorkIsBeingSplitValidationContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is used to transfer context to the <c>update</c> method on
///  the <c>WHSWorkLine</c> class to determine whether validation for work being split should be performed.
/// </summary>
internal final class WHSSkipWorkIsBeingSplitValidationContext implements System.IDisposable
{
    private static WHSSkipWorkIsBeingSplitValidationContext instance;

    private boolean skipWorkIsBeingSplitValidation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (instance)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        instance = this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSSkipWorkIsBeingSplitValidationContext construct()
    {
        return new WHSSkipWorkIsBeingSplitValidationContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSkipWorkBeingSplitValidation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class which marks that the validation for work being split is being skipped.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    internal static WHSSkipWorkIsBeingSplitValidationContext newSkipWorkBeingSplitValidation()
    {
        WHSSkipWorkIsBeingSplitValidationContext context = WHSSkipWorkIsBeingSplitValidationContext::construct();
        context.skipWorkIsBeingSplitValidation = true;

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    [Hookable(false)]
    internal static WHSSkipWorkIsBeingSplitValidationContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipWorkIsBeingSplitValidation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the information whether the validation for work being split should be skipped.
    /// </summary>
    /// <returns>
    /// True, if the validation for work being split should be skipped; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal boolean parmSkipWorkIsBeingSplitValidation()
    {
        return instance.skipWorkIsBeingSplitValidation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>