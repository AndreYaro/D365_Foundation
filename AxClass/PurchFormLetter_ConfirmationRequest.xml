<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFormLetter_ConfirmationRequest</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// CLass used for purchase order confirmation request
/// </summary>
/// <remarks>
/// The class shares most of the logic with the purchase confirmation and thus inherits from the <c>PurchFormLetter_PurchOrder</c> class.
/// The class enables differentiation of logic between confrimation and confirmation request.
/// </remarks>
class       PurchFormLetter_ConfirmationRequest
extends     PurchFormLetter_PurchOrder implements BatchRetryable
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkSumBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate if purchase summary update is allowed.
    /// </summary>
    /// <returns>
    /// true, telling purchase summary update is allowed.
    /// </returns>
    protected boolean checkSumBy()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to construct a new contract that is used in the unpack method.
    /// </summary>
    /// <returns>
    /// An instance of <c>PurchFormLetterContract</c> class
    /// </returns>
    /// <remarks>
    /// It enables passing a specific contract object relevant for the class
    /// e.g. PurchFormLetterPurchOrderContract for the PurchFormLetter_PurchOrder object and
    /// PurchFormLetterConfirmRequestContract for the PurchFormLetter_ConfirmationRequest object
    /// </remarks>
    protected PurchFormLetterContract constructContract()
    {
        return PurchFormLetterConfirmRequestContract::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method returning document status that represents the confirmation request
    /// </summary>
    /// <returns>
    /// <c>DocumentStatus</c> enumeration representing the confirmation request
    /// </returns>
    public DocumentStatus documentStatus()
    {
        return DocumentStatus::ConfirmationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableUpdateNowField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to enable or disable the posting field in the <c>PurchEditLines</c> form for confirmation request posting
    /// </summary>
    /// <param name="_enableUpdateNow">
    /// Parameter to enable or disable the field.
    /// </param>
    /// <returns>
    /// false
    /// </returns>
    /// <remarks>
    /// The posting field should be disabled for confirmation request posting.
    /// </remarks>
    public boolean enableUpdateNowField(boolean _enableUpdateNow = enableUpdateNow)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(IdentifierName _className = classStr(FormletterService), IdentifierName _methodName= methodStr(FormletterService, postPurchaseOrderConfirmationRequest), SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        super(_className, _methodName, _executionMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Identifies the print management document type.
    /// </summary>
    /// <returns>
    /// The print management document type for purchase order confirmation request.
    /// </returns>
    protected PrintMgmtDocumentType printMgmtDocumentType()
    {
        return PrintMgmtDocumentType::PurchaseOrderConfirmationRequest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS4004809";
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        MenuItemNameAction callerMenuItem = this.parmCallerMenuItem();

        if (callerMenuItem == menuItemActionStr(PurchFormLetter_PurchOrder_BindingConfRequest))
        {
            return "@SCM:PurchaseOrderBindingConfirmationRequest";
        }
        return PurchFormLetter_ConfirmationRequest::description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void  main(Args  _args)
    {
        PurchFormLetter::main(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newConfirmationRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// A constructor of the <c>PurchFormLetter_ConfirmationRequest</c> class
    /// </summary>
    /// <param name="_className">
    /// Class name of the service operation <c>FormletterService</c> class
    /// </param>
    /// <param name="_methodName">
    /// Method name of the service posting type <c>postPurchaseOrderConfirmationRequest</c> method
    /// </param>
    /// <param name="_executionMode">
    /// Execution mode of the service operation
    /// </param>
    /// <returns>
    /// An instance of <c>PurchFormLetter_ConfirmationRequest</c> class
    /// </returns>
    public static PurchFormLetter_ConfirmationRequest newConfirmationRequest(
        IdentifierName _className  = classStr(FormletterService),
        IdentifierName _methodName = methodStr(FormletterService, postPurchaseOrderConfirmationRequest),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        PurchFormLetter_ConfirmationRequest formLetter = new PurchFormLetter_ConfirmationRequest (_className, _methodName, _executionMode);
        formLetter.init();
        return formLetter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>