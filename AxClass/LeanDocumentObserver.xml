<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanDocumentObserver</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LeanDocumentObserver</c> class provides default handling of the pre-processing and
///    post-processing events for subcontracting documents.
/// </summary>
public abstract class LeanDocumentObserver
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>equal</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the two objects are equal.
    /// </summary>
    /// <param name="otherObject">
    ///    The other object.
    /// </param>
    /// <returns>
    ///    true if the two objects hold the same state; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean equal(Object otherObject)
    {
        LeanDocumentObserver otherObserver = otherObject as LeanDocumentObserver;

        return  otherObject == this
                || otherObserver != null ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSubcontractingDocumentPostProcess</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles the post-processing of subcontracting documents.
    /// </summary>
    /// <param name="_sender">
    ///    The sender of the event.
    /// </param>
    /// <param name="_processingData">
    ///    The object that holds all data that is needed for the processing of the subcontracting document.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void onSubcontractingDocumentPostProcess(
                    Object _sender,
                    LeanDocumentProcessingData _processingData)
    {
        this.processHeader(false, _processingData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onSubcontractingDocumentPreProcess</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles the pre-processing of subcontracting documents.
    /// </summary>
    /// <param name="_sender">
    ///    The sender of the event.
    /// </param>
    /// <param name="_processingData">
    ///    The object that holds all data that is needed for the processing of the subcontracting document.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void onSubcontractingDocumentPreProcess(
                    Object _sender,
                    LeanDocumentProcessingData _processingData)
    {
        this.processHeader(true, _processingData);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postProcessLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows derived classes to implement processing of a separate data line object.
    /// </summary>
    /// <param name="_lineKey">
    /// The key of the data line.
    /// </param>
    /// <param name="_line">
    /// The data line object.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void postProcessLine(anytype _lineKey, LeanDocumentProcessingDataLine _line)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>preProcessLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows derived classes to implement processing of a separate data line object.
    /// </summary>
    /// <param name="_lineKey">
    /// The key of the data line.
    /// </param>
    /// <param name="_line">
    /// The data line object.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void preProcessLine(anytype _lineKey, LeanDocumentProcessingDataLine _line)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>processHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes a header data object.
    /// </summary>
    /// <param name="_preProcessing">
    ///    A Boolean value that indicates whether post-processing or pre-processing is performed.
    /// </param>
    /// <param name="_processingData">
    ///    The data object that holds the header data.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void processHeader(boolean _preProcessing, LeanDocumentProcessingData _processingData)
    {
        Debug::assert(_processingData != null);

        if (!_processingData)
        {
            return;
        }

        MapEnumerator mapEnumerator = _processingData.parmDocumentLines().getEnumerator();

        while (mapEnumerator.moveNext())
        {
            anytype KeyValue = mapEnumerator.currentKey();
            LeanDocumentProcessingDataLine dataLine = mapEnumerator.currentValue();

            if (_preProcessing)
            {
                this.preProcessLine(KeyValue, dataLine);
            }
            else
            {
                this.postProcessLine(KeyValue, dataLine);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
