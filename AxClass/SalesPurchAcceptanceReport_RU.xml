<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchAcceptanceReport_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
public abstract class SalesPurchAcceptanceReport_RU implements ERIReportPostProcessingSupported
{
    CompanyInfo companyInfo;
    CustVendInvoiceJour custVendInvoiceJour;
    AgreementHeader agreementHeader;
    AgreementHeaderExt_RU agreementHeaderExt;

    SalesPurchReportCounteragentData_RU consignorData;
    SalesPurchReportCounteragentData_RU consigneeData;

    private const str City = 'City';
    private const str Consignee = 'Consignee';
    private const str ConsigneeBankAddress = 'ConsigneeBankAddress';
    private const str ConsigneeName = 'ConsigneeName';
    private const str Consignor = 'Consignor';
    private const str ConsignorBankAddress = 'ConsignorBankAddress';
    private const str ConsignorName = 'ConsignorName';
    private const str RContractDate = 'RContractDate';
    private const str RContractNum = 'RContractNum';
    private const str RContractDate2 = 'RContractDate2';
    private const str RContractNum2 = 'RContractNum2';
    private const str TransDate = 'TransDate';
    private const str ConsigneeAttorneyId = 'ConsigneeAttornId';
    private const str ConsigneeAttorneyDate = 'ConsigneeAttornDate';
    private const str fmt = '\%1';

    private const str TemplateName = resourceStr(SalesPurchAcceptanceReport_RU);
    private const str TemplatePath = 'AcceptanceReport';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillDocument</Name>
				<Source><![CDATA[
    protected void fillDocument()
    {
        this.initContragentData();

        using (System.IO.Stream templateStream = Microsoft.Dynamics.Ax.Xpp.MetadataSupport::GetResourceContentStream(TemplateName))
        {
            using (WordDocument_RU wordDocument = new WordDocument_RU(templateStream))
            {
                wordDocument.insertValue(TransDate, strfmt(Fmt, custVendInvoiceJour.InvoiceDate));
                wordDocument.insertValue(RContractNum, agreementHeader.DocumentTitle);
                wordDocument.insertValue(RContractDate, strfmt(Fmt, agreementHeaderExt.AgreementDate));
                wordDocument.insertValue(RContractNum2, agreementHeader.DocumentTitle);
                wordDocument.insertValue(RContractDate2, strfmt(Fmt, agreementHeaderExt.AgreementDate));

                wordDocument.insertValue(Consignor, consignorData.parmName());
                wordDocument.insertValue(ConsignorName, consignorData.parmName());
                wordDocument.insertValue(ConsignorBankAddress, consignorData.fullInvoiceInfo());
                wordDocument.insertValue(Consignee, consigneeData.parmName());
                wordDocument.insertValue(ConsigneeName, consigneeData.parmName());
                wordDocument.insertValue(ConsigneeBankAddress, consigneeData.fullInvoiceInfo());

                if (custVendInvoiceJour.CustVendInvoiceJour::getAttorneyIssuedName_RU())
                {
                    wordDocument.insertValue(ConsigneeName, custVendInvoiceJour.CustVendInvoiceJour::getAttorneyIssuedName_RU());
                    wordDocument.insertValue(ConsigneeAttorneyId, custVendInvoiceJour.CustVendInvoiceJour::getAttorneyId_RU());
                    wordDocument.insertValue(ConsigneeAttorneyDate, strfmt(Fmt, custVendInvoiceJour.CustVendInvoiceJour::getAttorneyDate_RU()));
                }

                wordDocument.insertValue(City, this.getTown());

                if (AccountingDocumentsERPostProcessingToggle::isEnabled())
                {
                    ERBinaryContentService binaryContentService = new ERBinaryContentService();
                    binaryContentService.parmERFormatMappingId(DocuParameters::find().AccountingDocumentsERFormatMapping);
                    binaryContentService.initBinaryDataFromStream(wordDocument.saveToStream());
                    binaryContentService.processReportInER(this as ERIReportPostProcessingSupported);
                }
                else
                {
                    wordDocument.sendFileToBrowser(this.fileName());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTown</Name>
				<Source><![CDATA[
    protected Name getTown()
    {
        return LogisticsAddressCity::find_RU(companyInfo.postalAddress().CityRecId).Description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initContragentData</Name>
				<Source><![CDATA[
    protected void initContragentData()
    {
        agreementHeaderExt = AgreementHeaderExt_RU::findByDefaultDimension(custVendInvoiceJour.DefaultDimension);
        agreementHeader = AgreementHeader::find(agreementHeaderExt.AgreementHeader);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        companyInfo = CompanyInfo::find();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceJour</Name>
				<Source><![CDATA[
    public CustVendInvoiceJour parmInvoiceJour(CustVendInvoiceJour _custVendInvoiceJour = custVendInvoiceJour)
    {
        custVendInvoiceJour = _custVendInvoiceJour;
        return custVendInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        try
        {
            this.fillDocument();
        }
        catch(Exception::Error)
        {
            error("@GLS107031");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fileName</Name>
				<Source><![CDATA[
    protected str fileName()
    {
        return TemplatePath;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report file.
    /// </summary>
    /// <returns>
    /// The name of the report file.
    /// </returns>
    public str getReportFileName()
    {
        return TemplatePath + '_' + agreementHeader.DocumentTitle + '_' + strRem(strfmt(Fmt, custVendInvoiceJour.InvoiceDate), '/');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the name of the report.
    /// </summary>
    /// <returns>
    /// The name of the report.
    /// </returns>
    public str getReportName()
    {
        return 'AcceptanceReport';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>