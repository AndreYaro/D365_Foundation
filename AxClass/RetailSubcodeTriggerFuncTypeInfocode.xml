<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSubcodeTriggerFuncTypeInfocode</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class is used to handle <c>RetailTriggerFunction::Infocode</c> trigger function type.
/// </summary>
[RetailSubcodeTriggerFuncAttribute(RetailTriggerFunction::Infocode)]
public class RetailSubcodeTriggerFuncTypeInfocode extends RetailSubcodeTriggerFuncType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkTriggerCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// checks that the trigger code is valid.
    /// </summary>
    /// <returns>
    /// true if the infocode exist; otherwise, false.
    /// </returns>
	private boolean checkTriggerCode()
    {
        boolean ret = true;

        RetailInfocodeId infocodeid = this.parmRetailInformationSubcodeTable().triggerCode;

        if (!RetailInfocode::exist(infocodeid))
        {
            ret = checkFailed(strFmt("@REX4161301",infocodeid, fieldStr(RetailInformationSubcodeTable, TriggerCode), tableStr(RetailInfocode)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefTriggerCode</Name>
				<Source><![CDATA[
	public void jumpRefTriggerCode()
    {
        RetailInfocode::jumpRef(this.parmRetailInformationSubcodeTable().triggerCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTriggerCode</Name>
				<Source><![CDATA[
	public void lookupTriggerCode(FormStringControl _stringControl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(RetailInfocode),_stringControl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(RetailInfocode));

        sysTableLookup.addLookupfield(fieldNum(RetailInfocode, InfocodeId));
        sysTableLookup.addLookupMethod(tableMethodStr(RetailInfocode, description));
        sysTableLookup.addLookupMethod(tableMethodStr(RetailInfocode, infocodeType));
        sysTableLookup.addSelectionField(fieldNum(RetailInfocode, InfocodeId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTriggerCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate trigger code.
    /// </summary>
    /// <returns>
    /// True if trigger code is valid; otherwise, false.
    /// </returns>
	public boolean validateTriggerCode()
    {
        boolean ret = super();

        ret = ret && this.checkTriggerCode();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether record can be written.
    /// </summary>
    /// <returns>
    /// True if the record can be written; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If the trigger code is invalid the record cannot be written.
    /// </remarks>
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.checkTriggerCode();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>