<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBCIAPReportController_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Controller class for the CIAP report.
/// </summary>
class FBCIAPReportController_BR extends SrsReportRunController implements BatchRetryable
{
    FBBookingPeriod_BR              bookingPeriod;
    FBCIAPReportDataContract_BR     contract;
    FBTaxAssessment_BR              taxAssessment;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10020, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        if (this.parmShowDialog())
        {
            return;
        }

        contract = this.parmReportContract().parmRdpContract() as FBCIAPReportDataContract_BR;

        taxAssessment = this.parmArgs().record();
        bookingPeriod = taxAssessment.bookingPeriod();

        this.setContractParms();
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        if (!this.parmShowDialog())
        {
            return;
        }

        contract = this.parmReportContract().parmRdpContract() as FBCIAPReportDataContract_BR;

        select taxAssessment
            where taxAssessment.FromDate    == contract.parmFromDate()
                && taxAssessment.ToDate         == contract.parmToDate()
                && taxAssessment.TaxType        == TaxType_bR::ICMS
            join bookingPeriod
                where bookingPeriod.RecId == taxAssessment.FBBookingPeriod_BR
                    && bookingPeriod.FiscalEstablishmentId == contract.parmFiscalEstablishmentId()
                    && bookingPeriod.FiscalEstablishmentDataArea == contract.parmFiscalEstablishmentDataArea();

        this.setContractParms();
    }

]]></Source>
			</Method>
			<Method>
				<Name>startReportOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts the CIAP report report operation.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the report.
    /// </param>
    protected void startReportOperation(Args _args)
    {
        this.parmReportName(ssrsReportStr(FBCIAPReport_BR,Report));
        this.parmArgs(_args);
        this.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContractParms</Name>
				<Source><![CDATA[
    private void setContractParms()
    {
        contract.parmFiscalEstablishmentId(bookingPeriod.FiscalEstablishmentId);
        contract.parmFiscalEstablishmentDataArea(bookingPeriod.FiscalEstablishmentDataArea);
        contract.parmFromDate(bookingPeriod.periodFrom());
        contract.parmToDate(bookingPeriod.periodTo());
        contract.parmFBTaxAssessmentRecId(taxAssessment.RecId);
        contract.parmFiscalEstablishmentName(bookingPeriod.fiscalEstablishmentName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container packedState)
    {
        boolean ret;

        ret = super(packedState);

        this.parmShowDialog(!args.record());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        FBCIAPReportController_BR    controller = new FBCIAPReportController_BR();
        controller.parmShowDialog(!args.record());
        controller.startReportOperation(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>