<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocumentStateInProcessAdvLE</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SourceDocumentStateInProcessAdvLedEntry</c> class is an in-process source document state for
/// a AdvancedLedgerEntryLine.
/// </summary>
[SourceDocumentClassExtensionAttribute(tableStr(AdvancedLedgerEntryHeader))]
public class SourceDocumentStateInProcessAdvLE extends SourceDocumentStateInProcess
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSourceDocumentLineQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates query to obtain SourceDocumentLine and associated AdvancedLedgerEntryLine table records
    /// </summary>
    /// <returns>
    /// The initialized query
    /// </returns>
    protected Query getSourceDocumentLineQuery(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId)
    {
        QueryBuildDataSource    retrieveSDLQbds;
        QueryBuildDataSource    advLedgerLineQbds;
        QueryBuildDataSource    advLedgerHeaderQbds;
        Query                   query;

        query = super(_sourceDocumentHeaderRecId);

        retrieveSDLQbds = query.dataSourceNo(query.dataSourceCount());
        advLedgerLineQbds = retrieveSDLQbds.addDataSource(tableNum(AdvancedLedgerEntryLine));
        advLedgerLineQbds.joinMode(JoinMode::OuterJoin);
        advLedgerLineQbds.addLink(fieldNum(SourceDocumentLine, RecId),fieldNum(AdvancedLedgerEntryLine, SourceDocumentLine));

        advLedgerHeaderQbds = advLedgerLineQbds.addDataSource(tableNum(AdvancedLedgerEntryHeader));
        advLedgerHeaderQbds.joinMode(JoinMode::OuterJoin);
        advLedgerHeaderQbds.addLink(fieldNum(AdvancedLedgerEntryLine, AdvancedLedgerEntryHeader), fieldNum(AdvancedLedgerEntryHeader, RecId));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAdditionalInformationMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates map holding the AdvancedLedgerEntryHeader record associated with the specific SourceDocumentLine
    /// </summary>
    /// <param name="_queryRun">
    /// The queryRun object holding the SourceDocumentLineImplementationRecords.
    /// </param>
    /// <returns>
    /// The initialized map.
    /// </returns>
    protected Map initAdditionalInformationMap(QueryRun _queryRun)
    {
        List tableList = new List(Types::Integer);
        tableList.addEnd(tableNum(AdvancedLedgerEntryHeader));

        Map additionalInformation = this.fillMap(_queryRun, tableList);

        return additionalInformation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSDLImplementation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the AdvancedLedgerEntryLine record associated with the SourceDocumentLine instance.
    /// </summary>
    /// <param name="_queryRun">
    /// The queryRun object holding the AdvancedLedgerEntryLine records.
    /// </param>
    /// <returns>
    /// The AdvancedLedgerEntryLine record
    /// </returns>
    protected SourceDocumentLineImplementation initSDLImplementation(QueryRun _queryRun)
    {
        AdvancedLedgerEntryLine advLedgerEntryLine = _queryRun.get(tableNum(AdvancedLedgerEntryLine));

        return advLedgerEntryLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceDocumentLineQueryUsingSysDa</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is the getSourceDocumentLineQuery() implementation using the SysDa framework
    /// </summary>
    /// <param name = "_sourceDocumentHeaderRecId">Source document header record</param>
    /// <returns>The initialized query.</returns>
    protected SysDaQueryObject getSourceDocumentLineQueryUsingSysDa(SourceDocumentHeaderRecId _sourceDocumentHeaderRecId)
    {
        SysDaQueryObject    ret = super(_sourceDocumentHeaderRecId);

        SourceDocumentLine  sourceDocumentLine = ret.table();

        AdvancedLedgerEntryLine     advancedLedgerEntryLine;
        SysDaQueryObject    sysDaQueryLineObject = new SysDaQueryObject(advancedLedgerEntryLine);

        ret.joinClause(SysDaJoinKind::OuterJoin, sysDaQueryLineObject);
        sysDaQueryLineObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(advancedLedgerEntryLine, fieldStr(AdvancedLedgerEntryLine, SourceDocumentLine)),
                new SysDaFieldExpression(sourceDocumentLine, fieldStr(SourceDocumentLine, RecId))));

        AdvancedLedgerEntryHeader    advancedLedgerEntryHeader;
        SysDaQueryObject    sysDaQueryTableObject = new SysDaQueryObject(advancedLedgerEntryHeader);

        sysDaQueryLineObject.joinClause(SysDaJoinKind::OuterJoin, sysDaQueryTableObject);
        sysDaQueryTableObject.whereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(advancedLedgerEntryHeader, fieldStr(AdvancedLedgerEntryHeader, RecId)),
                new SysDaFieldExpression(advancedLedgerEntryLine, fieldStr(AdvancedLedgerEntryLine, AdvancedLedgerEntryHeader))));

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAdditionalInformationMapUsingSysDa</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is the implementation of initAdditionalInformationMap() using the SysDa framework
    /// </summary>
    /// <param name = "_sdso">SysDaSearchObject instead of QueryRun</param>
    /// <returns>
    /// The initialized map.
    /// </returns>
    protected Map initAdditionalInformationMapUsingSysDa(SysDaSearchObject _sdso)
    {
        List tableList = new List(Types::Integer);
        tableList.addEnd(tableNum(AdvancedLedgerEntryHeader));

        Map additionalInformation = this.fillMapUsingSysDa(_sdso, tableList);

        return additionalInformation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSDLImplementationUsingSysDa</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is the implementation of initSDLImplementation(), using the SysDa framework.
    /// </summary>
    /// <param name = "_sdso">
    /// The SysDa Search object containing the query to search in.
    /// </param>
    /// <returns>
    /// The CustInvoiceLine record as <c>SourceDocumentLineImplementation</c>.
    /// </returns>
    protected SourceDocumentLineImplementation initSDLImplementationUsingSysDa(SysDaSearchObject _sdso)
    {
        AdvancedLedgerEntryLine advancedLedgerEntryLine = this.sysDaGetRecordByTableId(_sdso.query(), tableNum(AdvancedLedgerEntryLine));

        return advancedLedgerEntryLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>