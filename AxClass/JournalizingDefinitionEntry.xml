<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingDefinitionEntry</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>JournalizingDefinitionEntry</c> class acts as a template for the entries generated by the
///    journalizing definition engine.
/// </summary>
/// <remarks>
///    This class will be used as a template for the generated entries.The journalizing definition engine
///    returns the generated entries in the form of a container list that contains objects of the
///    <c>JournalizingEngineGeneratedEntries</c> type.
/// </remarks>
class JournalizingDefinitionEntry
{
    LedgerDimensionDefaultAccount       ledgerDimension;
    JournalizingDefinitionDebitCredit   journalizingDefinitionDebitCredit;
    LedgerPostingType                   ledgerPostingType;
    AmountCur                           transactionAmountCur;
    Money                               reportingAmount;
    Money                               accountingAmount;
    JournalizingDefinitionCode          journalizingDefinitionCode;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            return [ledgerDimension, journalizingDefinitionDebitCredit, ledgerPostingType, transactionAmountCur, accountingAmount, reportingAmount, journalizingDefinitionCode];
        }
        else
        {
            return [ledgerDimension, journalizingDefinitionDebitCredit, ledgerPostingType, journalizingDefinitionCode];
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingAmount</Name>
				<Source><![CDATA[
    public Money parmAccountingAmount(Money _accountingAmount = accountingAmount)
    {
        accountingAmount = _accountingAmount;

        return accountingAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalizingDefinitionDebitCredit</Name>
				<Source><![CDATA[
    public JournalizingDefinitionDebitCredit parmJournalizingDefinitionDebitCredit(JournalizingDefinitionDebitCredit _journalizingDefinitionDebitCredit = journalizingDefinitionDebitCredit)
    {
        journalizingDefinitionDebitCredit = _journalizingDefinitionDebitCredit;

        return journalizingDefinitionDebitCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount parmLedgerDimension(LedgerDimensionDefaultAccount _ledgerDimension = ledgerDimension)
    {
        ledgerDimension = _ledgerDimension;

        return ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmLedgerPostingType(LedgerPostingType _ledgerPostingType = ledgerPostingType)
    {
        ledgerPostingType = _ledgerPostingType;

        return ledgerPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingAmount</Name>
				<Source><![CDATA[
    public Money parmReportingAmount(Money _reportingAmount = reportingAmount)
    {
        reportingAmount = _reportingAmount;

        return reportingAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionAmount</Name>
				<Source><![CDATA[
    public AmountCur parmTransactionAmount(AmountCur _transactionAmountCur = transactionAmountCur)
    {
        transactionAmountCur = _transactionAmountCur;

        return transactionAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalizingDefinitionCode</Name>
				<Source><![CDATA[
    public JournalizingDefinitionCode parmJournalizingDefinitionCode(JournalizingDefinitionCode _journalizingDefinitionCode = journalizingDefinitionCode)
    {
        journalizingDefinitionCode = _journalizingDefinitionCode;

        return journalizingDefinitionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        boolean ret;

        if (isConfigurationkeyEnabled(configurationKeyNum(PublicSector)))
        {
            [ledgerDimension, journalizingDefinitionDebitCredit, ledgerPostingType, transactionAmountCur, accountingAmount, reportingAmount, journalizingDefinitionCode] = _packedClass;
        }
        else
        {
            [ledgerDimension, journalizingDefinitionDebitCredit, ledgerPostingType, journalizingDefinitionCode] = _packedClass;
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public static JournalizingDefinitionEntry create( container _container )
    {
        JournalizingDefinitionEntry instance = new JournalizingDefinitionEntry();

        instance.unpack( _container );
        return instance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>