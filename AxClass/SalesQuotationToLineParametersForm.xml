<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationToLineParametersForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesQuotationToLineParametersForm</c> class is the class for handling the header to line
/// feature for sales quotations.
/// </summary>
class SalesQuotationToLineParametersForm extends SalesPurchTableToLineParametersForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fieldEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether to enable the field for the specified field ID on the parameters form.
    /// </summary>
    /// <param name="_fieldId">
    /// The field to check for enabling.
    /// </param>
    /// <returns>
    /// true if the field should be enabled; otherwise, false.
    /// </returns>
    public boolean fieldEnabled(FieldId _fieldId)
    {
        return SalesQuotationToLineParameters::fieldEnabled(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>headerToLineFieldIdList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the fields that are supported by the table-to-line functionality of the module.
    /// </summary>
    /// <returns>
    /// A container that contains fields that are supported by the table to line functionality of the
    /// module.
    /// </returns>
    /// <remarks>
    /// Typically, this will be determined by checking the document table to line field parameters table.
    /// </remarks>
    public container headerToLineFieldIdList()
    {
        return SalesQuotationToLineParameters::header2LineFieldIdList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFieldObject</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance based on a field ID.
    /// </summary>
    /// <param name="_fieldId">
    /// The field ID to create the instance from.
    /// </param>
    /// <returns>
    /// An instance based on the field ID.
    /// </returns>
    protected SalesPurchTableToLineField newFieldObject(FieldId _fieldId)
    {
        return SalesQuotationToLineField::newFieldId(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>SalesQuotationToLineParametersForm</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>SalesQuotationToLineParametersForm</c> class.
    /// </returns>
    static SalesQuotationToLineParametersForm construct()
    {
        SalesQuotationToLineParametersForm salesQuotationToLineParametersForm = new SalesQuotationToLineParametersForm();

        //Call getLast to prevent it from being called during prompt, thus rewriting the field list with saved values
        salesQuotationToLineParametersForm.getLast();
        salesQuotationToLineParametersForm.initTableToLineParameterFields();

        return salesQuotationToLineParametersForm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@GLS180174";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    static void main(Args _args)
    {
        SalesQuotationToLineParameters::initiate();

        SalesQuotationToLineParametersForm salesQuotationToLineParametersForm = SalesQuotationToLineParametersForm::construct();

        if (salesQuotationToLineParametersForm.prompt())
        {
            salesQuotationToLineParametersForm.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
