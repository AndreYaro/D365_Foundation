<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogApprovalSubmitManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

/// <summary>
/// The <c>RetailCatalogApprovalSubmitManager</c> class is used to submit the catalog for approval to <c>CatalogManager</c>.
/// </summary>
public class RetailCatalogApprovalSubmitManager
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args args)
    {
        // Variable declaration.
        Catalog catalog = args.record();
        WorkflowCorrelationId workflowCorrelationId;
        // Hardcoded type name
        WorkflowTypeName workflowTypeName = workFlowTypeStr(RetailCatalogApprovalTemplate);
        // Initial note is the information that users enter when they
        // submit the document for workflow.
        WorkflowComment actionComment = "";
        WorkflowSubmitDialog workflowSubmitDialog;
        WorkflowWorkItemActionDialog resubmitDialog;
        CatalogManager catalogManager = CatalogManager::construct(catalog.RecId);
        str menuItemName = args.menuItemName();

        if (!CatalogStateTransitionValidator::canTransition(catalog, CatalogState::Submitted))
        {
            warning("@RET490258");
            return;
        }

        if (menuItemName == menuitemactionstr(RetailCatalogApprovalSubmit))
        {
            // Opens the submit to workflow dialog.
            workflowSubmitDialog = WorkflowSubmitDialog::construct(args.caller().getActiveWorkflowConfiguration());
            workflowSubmitDialog.run();

            if (workflowSubmitDialog.parmIsClosedOK())
            {
                actionComment = workflowSubmitDialog.parmWorkflowComment();

                try
                {
                    ttsbegin;
                    workflowCorrelationId = Workflow::activateFromWorkflowType(workflowTypeName, catalog.RecId, actionComment, NoYes::No);
                    catalogManager.submitForApproval();
                    ttscommit;
                }
                catch(Exception::Error)
                {
                    warning("@RET261239");

                    eventSource.EventWriteProductsRetailCatalogApprovalSubmitManager(classStr(RetailCatalogApprovalSubmitManager), funcName(), 'submit', catalog.RecId);
                }
            }
        }
        else if (menuItemName == menuitemactionstr(RetailCatalogApprovalResubmit))
        {
            resubmitDialog = WorkflowWorkItemActionDialog::construct(
                args.caller().getActiveWorkflowWorkItem(),
                WorkflowWorkItemActionType::Resubmit,
                new MenuFunction(menuitemactionstr(RetailCatalogApprovalResubmit), MenuItemType::Action));
            resubmitDialog.run();

            if (resubmitDialog.parmIsClosedOK())
            {
                actionComment = resubmitDialog.parmWorkflowComment();
                try
                {
                    WorkflowWorkItemActionManager::dispatchWorkItemAction(
                        args.caller().getActiveWorkflowWorkItem(),
                        actionComment,
                        resubmitDialog.parmTargetUser(),
                        WorkflowWorkItemActionType::Resubmit,
                        menuItemName);
                    catalogManager.resubmitForApproval();
                }
                catch(exception::Error)
                {
                    warning("@RET261239");
                    eventSource.EventWriteProductsRetailCatalogApprovalSubmitManager(classStr(RetailCatalogApprovalSubmitManager), funcName(), 'resubmit', catalog.RecId);
                }
            }
        }

        if (FormDataUtil::getFormDataSource(catalog))
        {
            FormDataUtil::getFormDataSource(catalog).research(true);
            FormDataUtil::getFormDataSource(catalog).refresh();
        }

        args.caller().updateWorkFlowControls();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>