<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>whsAppointmentsFactBox</Name>
	<SourceCode>
		<Declaration><![CDATA[/// <summary>
/// The <c>whsAppointmentsFactBox</c> class is used to contain business logic of the <c>whsAppointmentsFactBox</c> form.
/// </summary>
public class whsAppointmentsFactBox
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildRange</Name>
				<Source><![CDATA[	/// <summary>
	/// Builds range string by concatenating ids of appointments created for load or shipment
	/// </summary>
	/// <param name="_loadArgs">
	/// A load record, leave it empty if range is created for shipment appointments.
	/// </param>
	/// <param name="_shipArgs">
	/// A shipment record.
	/// </param>
	/// <returns>
	/// The range string.
	/// </returns>
        str buildRange(WHSLoadTable _loadArgs, WHSShipmentTable _shipArgs)
    {
        WHSLoadLine     loadLine;
        SalesId         prevSalesId;
        TMSAppointment  appointment;
        str             range;

        range = '';

        if (_loadArgs)
        {
            while select LoadId, OrderNum from loadLine
                where loadLine.LoadId           == _loadArgs.LoadId
                   && loadLine.InventTransType  == InventTransType::Sales
                   && loadLine.TransportRequest == NoYes::No
                join ApptRefNum, ApptRefType, ApptId from appointment
                where appointment.ApptRefNum     == loadLine.OrderNum
                   && appointment.ApptRefType    == TMSApptRefType::Sales
            {
                if (prevSalesId == loadLine.OrderNum)
                {
                    continue;
                }

                if (range)
                {
                    range += ',' + appointment.ApptId;
                }
                else
                {
                    range = appointment.ApptId;
                }

                prevSalesId = loadLine.OrderNum;
            }

            while select ApptId from appointment
                where appointment.ApptRefNum     == _loadArgs.LoadId
                   && appointment.ApptRefType    == TMSApptRefType::Load
            {
                if (range)
                {
                    range += ',' + appointment.ApptId;
                }
                else
                {
                    range = appointment.ApptId;
                }
            }
        }
        else if (_shipArgs)
        {
            while select ShipmentId, OrderNum from loadLine
                where loadLine.ShipmentId       == _shipArgs.ShipmentId     &&
                      loadLine.InventTransType  == InventTransType::Sales   &&
                      loadLine.TransportRequest == NoYes::No
                join ApptRefNum, ApptRefType, ApptId from appointment
                where appointment.ApptRefNum     == loadLine.OrderNum &&
                      appointment.ApptRefType    == TMSApptRefType::Sales
            {
                if (prevSalesId == loadLine.OrderNum)
                {
                    continue;
                }

                if (range)
                {
                    range += ',' + appointment.ApptId;
                }
                else
                {
                    range = appointment.ApptId;
                }

                prevSalesId = loadLine.OrderNum;
            }

            while select ApptId from appointment
                where appointment.ApptRefNum    == _shipArgs.LoadId &&
                      appointment.ApptRefType   == TMSApptRefType::Load
            {
                if (range)
                {
                    range += ',' + appointment.ApptId;
                }
                else
                {
                    range = appointment.ApptId;
                }
            }
        }

        return range;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>