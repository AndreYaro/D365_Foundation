<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailOrgHierarchyTreeLookup</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>RetailOrgHierarchyTreeLookup</c> is used to show organization hierarchical lookup.
/// </summary>
class RetailOrgHierarchyTreeLookup
{
    RecId selectedNodeId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>selectedNodeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the selectedNodeId;
    /// </summary>
    /// <param name = "_selectedNodeId">OMHierarchyRelationship RecId of the selected node.</param>
    /// <returns>The OMHierarchyRelationship RecId of the selected node.</returns>
    public RecId selectedNodeId(RecId _selectedNodeId = selectedNodeId)
    {
        selectedNodeId = _selectedNodeId;
        return selectedNodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instanceLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows organization hierarchical lookup.
    /// </summary>
    /// <param name = "_callingControl">The calling control object.</param>
    /// <param name="_selectedOrgHierarchyNodeRecId">The selected org hirarchy node rec id.</param>
    /// <param name = "hierarchyPurposeFilter">The hierarchy purpose.</param>
    /// <param name = "disableHierarchTypeSelection">The option to disable the hierarchy type dropdown in the filter control.</param>
    /// <remarks>
    /// -Use this method if there is no way to implement the callback method in IRetailOrgHierarchyFilter - for example when this is used in ssrs forms.
    ///  In such cases the selected node recid will be stored in seletedNodeRecId field of this class.
    /// -If hierarchyPurposeFilter is not specified all hierarchy types will be included.
    /// </remarks>
    public void instanceLookup(FormStringControl _callingControl,
                              RecId _selectedOrgHierarchyNodeRecId = 0,
                              HierarchyPurpose hierarchyPurposeFilter = HierarchyPurpose::NotSet,
                              boolean disableHierarchTypeSelection = false)
    {
        Args _args = new Args();
        FormRun hierarchyLookup;

        _args.name(formStr(RetailOrgHierarchyTreeLookup));
        _args.caller(_callingControl);
        _args.callerFormControl(_callingControl.parentControl());
        _args.lookupValue(int642str(_selectedOrgHierarchyNodeRecId));

        _args.parmEnum(enum2int(hierarchyPurposeFilter));

        _args.parmObject(this); // passing the instance of this class so that the filter control can set 'selectedNodeId' to the  nodeId selected by the user.

        hierarchyLookUp = classfactory.formRunClass(_args);
        hierarchyLookUp.init();

        if (disableHierarchTypeSelection)
        {
            hierarchyLookUp.hideHierarchyTypeSelection();
        }

        if (_callingControl)
        {
            _callingControl.performFormLookup(hierarchyLookUp);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Shows organization hierarchical lookup.
    /// </summary>
    /// <param name = "_callingControl">The calling control object.</param>
    /// <param name="_selectedOrgHierarchyNodeRecId">The selected org hirarchy node rec id.</param>
    /// <param name = "hierarchyPurposeFilter">The hierarchy purpose.</param>
    /// <param name = "disableHierarchTypeSelection">The option to disable the hierarchy type dropdown in the filter control.</param>
    /// <remarks>Use this if the calling form retrieves the selectedNodeId by implementing a callback method in IRetailOrgHierarchyFilter interface.</remarks>
    public static void lookup(FormStringControl _callingControl,
                              RecId _selectedOrgHierarchyNodeRecId = 0,
                              HierarchyPurpose hierarchyPurposeFilter = HierarchyPurpose::NotSet,
                              boolean disableHierarchTypeSelection = false)
    {
        Args _args = new Args();
        FormRun hierarchyLookup;

        _args.name(formStr(RetailOrgHierarchyTreeLookup));
        _args.caller(_callingControl);
        _args.callerFormControl(_callingControl.parentControl());
        _args.lookupValue(int642str(_selectedOrgHierarchyNodeRecId));

        _args.parmEnum(enum2int(hierarchyPurposeFilter));

        hierarchyLookUp = classfactory.formRunClass(_args);
        hierarchyLookUp.init();

        if (disableHierarchTypeSelection)
        {
            hierarchyLookUp.hideHierarchyTypeSelection();
        }

        if (_callingControl)
        {
            _callingControl.performFormLookup(hierarchyLookUp);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>