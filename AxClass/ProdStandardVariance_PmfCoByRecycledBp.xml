<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdStandardVariance_PmfCoByRecycledBp</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ProdStandardVariance_PmfCoByRecycledBp</c> class is responsible for calculating
/// variance for a recycled byproduct.
/// </summary>
class ProdStandardVariance_PmfCoByRecycledBp extends ProdStandardVariance_PmfCoBy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadEstimate</Name>
				<Source><![CDATA[
    protected void loadEstimate()
    {
        InventDim                       inventDimProd;

        // Rollup only on the item dimensions
        InventDim inventDimPrice = inventItemPrice.inventDim();
        inventDimProd.data(inventDimPrice);
        inventDimProd.clearNotProductDim(InventDimGroupSetup::newItemId(inventItemPrice.ItemId));
        inventDimProd = InventDim::findOrCreate(inventDimProd);

        select firstonly forupdate tmpProdStandardVariance
            where  tmpProdStandardVariance.CostGroupId       == inventItemPrice.costGroupId()
                && tmpProdStandardVariance.CalcType          == ItemCalcType::Item
                && tmpProdStandardVariance.Resource          == inventItemPrice.ItemId
                && tmpProdStandardVariance.InventDimId       == inventItemPrice.InventDimId
                && tmpProdStandardVariance.InventCostLevel   == InventCostLevel::Single
                && tmpProdStandardVariance.Split             == NoYes::No;

        if (!tmpProdStandardVariance)
        {
            tmpProdStandardVariance.CostGroupId     = inventItemPrice.costGroupId();
            tmpProdStandardVariance.CalcType        = ItemCalcType::Item;
            tmpProdStandardVariance.Resource        = inventItemPrice.ItemId;
            tmpProdStandardVariance.InventCostLevel = InventCostLevel::Single;
            tmpProdStandardVariance.Split           = NoYes::No;
            tmpProdStandardVariance.InventDimId     = inventItemPrice.InventDimId;
            tmpProdStandardVariance.insert();
        }

        this.addTransEstimate(1, 0, 0, inventItemPrice.pcsPrice());

        tmpProdStandardVariance.update();
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProdStandardVariance_PmfCoByRecycledBp construct()
    {
        return new ProdStandardVariance_PmfCoByRecycledBp();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
