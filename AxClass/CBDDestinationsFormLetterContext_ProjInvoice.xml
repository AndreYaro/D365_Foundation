<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CBDDestinationsFormLetterContext_ProjInvoice</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CBDDestinationsFormLetterContext_ProjInvoice</c> class is an abstraction
/// for Project invoice documents to support
/// runtime Electronic reporting destinations.
/// </summary>
internal abstract class CBDDestinationsFormLetterContext_ProjInvoice
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryTableBuffer</Name>
				<Source><![CDATA[
    public Common getQueryTableBuffer(Common _reference, Object _formLetter)
    {
        ProjInvoiceParmTable projInvoiceParmTable = _reference as ProjInvoiceParmTable;

        if (!projInvoiceParmTable)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ProjFormLetter projFormLetter = _formLetter as ProjFormLetter;

        if (!projFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ProjInvoiceJour projInvoiceJour;

        projInvoiceJour.setTmp();
        projInvoiceJour.initValue();
        projInvoiceJour.InvoiceDate = projFormLetter.transDate();
        projInvoiceJour.initFromProjProposal(projInvoiceParmTable.projProposalJour_CZ());
        projInvoiceJour.IsProforma = NoYes::Yes;
        projInvoiceJour.doInsert();

        return projInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountReferences</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferences(Object _formLetter)
    {
        ProjFormLetter projFormLetter = _formLetter as ProjFormLetter;

        if (!projFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ProjInvoiceParmTable projInvoiceParmTable;

        select count(RecId) from projInvoiceParmTable
            where projInvoiceParmTable.ParmId == projFormLetter.parmId();

        return projInvoiceParmTable.RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceBuffer</Name>
				<Source><![CDATA[
    public Common getReferenceBuffer(Object _formLetter)
    {
        ProjFormLetter projFormLetter = _formLetter as ProjFormLetter;

        if (!projFormLetter)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        ProjInvoiceParmTable projInvoiceParmTable;

        select projInvoiceParmTable
            where projInvoiceParmTable.ParmId == projFormLetter.parmId();

        return projInvoiceParmTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtRefTableBuffer</Name>
				<Source><![CDATA[
    public Common getPrintMgmtRefTableBuffer(Common _reference)
    {
        ProjInvoiceParmTable projInvoiceParmTable = _reference as ProjInvoiceParmTable;

        if (!projInvoiceParmTable)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return projInvoiceParmTable.projProposalJour_CZ();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintContext</Name>
				<Source><![CDATA[
    public PrintMgmtPrintContext getPrintContext(Common _printMgmtReferencedTable, Common _queryTableBuffer)
    {
        FormLetterReport formLetterReport = FormLetterReport::construct(this.getPrintMgmtDocumentType());

        return formLetterReport.getDefaultPrintMgmtContext(_queryTableBuffer, _printMgmtReferencedTable.data());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtDocumentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets print management document type.
    /// </summary>
    /// <returns>The print management document type.</returns>
    abstract protected PrintMgmtDocumentType getPrintMgmtDocumentType()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>