<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdVendStmtCISExport</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

/// <summary>
/// The <c>TaxWithholdVendStmtCISExport</c> class is responsible for exports file for CIS Monthly Return.
/// </summary>
class TaxWithholdVendStmtCISExport
{
    private ERIFileDestination fileDestination;
    private Filename filename;
    private TransDate fromDate;
    private TransDate toDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFileDestination</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ERIFileDestination parmFileDestination(ERIFileDestination _fileDestination = fileDestination)
    {
        fileDestination = _fileDestination;
        return fileDestination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFilename</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Filename parmFilename(Filename _filename = filename)
    {
        filename = _filename;
        return filename;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();

        fileDestination = ERObjectsFactory::createFileDestinationBrowser();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates all the necessary conditions.
    /// </summary>
    /// <returns>
    /// true if validation is successful; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean validate()
    {
        return fromDate && toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromTaxWithholdVendStmtCISContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from the <c>TaxWithholdVendStmtCISContract</c> class.
    /// </summary>
    /// <param name = "_taxWithholdVendStmtCISContract">The <c>TaxWithholdVendStmtCISContract</c> class.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void initFromTaxWithholdVendStmtCISContract(TaxWithholdVendStmtCISContract _taxWithholdVendStmtCISContract)
    {
        this.parmFilename(_taxWithholdVendStmtCISContract.parmFilename());
        this.parmFromDate(_taxWithholdVendStmtCISContract.parmFromDate());
        this.parmToDate(_taxWithholdVendStmtCISContract.parmToDate());
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void run()
    {
        TaxWithholdVendStmtCISTmp taxWithholdVendStmtCISTmp;
        TaxWithholdTrans taxWithholdTrans;

        if (this.validate())
        {
            while select taxWithholdTrans
            group by taxWithholdTrans.vendAccount
            where taxWithholdTrans.TransDate >= fromDate
                && taxWithholdTrans.TransDate <= toDate
                && taxWithholdTrans.vendAccount
            {
                taxWithholdVendStmtCISTmp.data(TaxWithholdVendStmtCISTmp::makeRecord(taxWithholdTrans.vendAccount, fromDate, toDate));
                taxWithholdVendStmtCISTmp.insert();
            }

            this.runER(taxWithholdVendStmtCISTmp);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runER</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs export via ER solution.
    /// </summary>
    /// <param name = "_taxWithholdVendStmtCISTmp">The <c>TaxWithholdVendStmtCISTmp</c> table record.</param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void runER(TaxWithholdVendStmtCISTmp _taxWithholdVendStmtCISTmp)
    {
        ERObjectsFactory::createFormatMappingRunByFormatMappingId(LedgerParameters::find().ERFormatMappingCIS_GB, filename)
            .withFileDestination(fileDestination)
            .withParameter(new ERModelDefinitionDatabaseContext()
                .addTemporaryTable(_taxWithholdVendStmtCISTmp)).run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>