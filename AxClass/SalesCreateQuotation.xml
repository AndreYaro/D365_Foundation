<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCreateQuotation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesCreateQuotation</c> class creates a sales quotation order.
/// </summary>
class SalesCreateQuotation
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a sales quotation order that is based on the number of the customer or the account number
    /// of the prospect.
    /// </summary>
    /// <param name="_quotationType">
    /// The sales quotation type.
    /// </param>
    /// <param name="_callerRecord">
    /// A table record that is used to initialize a sales quotation order.
    /// </param>
    /// <param name="_initFromCustTable">
    ///   A <c>boolean</c> value identifies if the sales order should be initailized from the CustTable record. Default value is true; Optional.
    /// </param>
    /// <returns>
    /// A new sales quotation order record.
    /// </returns>
    public SalesQuotationTable create(QuotationType _quotationType, Common _callerRecord, boolean _initFromCustTable = true)
    {
        SalesQuotationTableForm salesQuotationTableForm = SalesQuotationTableForm::construct(_quotationType, _callerRecord);

        salesQuotationTableForm.parmInitFromCustTable(_initFromCustTable);
        // Open the sales create quotation form which will enable the user to make additional selections and initialize the values for the quotation properly.
        salesQuotationTableForm.create();
        SalesQuotationTable salesQuotationTable = salesQuotationTableForm.parmSalesQuotationTable();

        return salesQuotationTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static SalesCreateQuotation construct()
    {
        return new SalesCreateQuotation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a sales quotation order that is based on the customer number or the account number of the
    /// prospect.
    /// </summary>
    /// <param name="_quotationType">
    /// The sales quotation type.
    /// </param>
    /// <param name="_callerRecord">
    /// A table record that is used to initialize a sales quotation order.
    /// </param>
    /// <returns>
    /// A new sales quotation order record.
    /// </returns>
    static public SalesQuotationTable createNewOrder(
        QuotationType   _quotationType,
        Common          _callerRecord)
    {
        SalesCreateQuotation salesCreateQuotation = SalesCreateQuotation::construct();
        return salesCreateQuotation.create(_quotationType, _callerRecord);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        SalesQuotationTable     salesQuotationTable;
        SalesCreateQuotation    salesCreateQuotation = new SalesCreateQuotation();
        RetailSalesQuotationAffiliation retailSalesQuotationAffiliation;
        RetailCustAffiliation retailCustAffiliation;

        if (!_args || !_args.record())
        {
            throw error(strFmt("@SYS29104", classStr(SalesCreateQuotation)));
        }

        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContext(_args))
        {
            if (SalesParameters::find().PromptTransfer &&
                Box::yesNo("@SYS418", DialogButton::Yes) != DialogButton::Yes)
            {
                salesQuotationTable = salesCreateQuotation.create(_args.parmEnum(), _args.record(), false);
            }
            else
            {
                salesQuotationTable = salesCreateQuotation.create(_args.parmEnum(), _args.record(), true);
            }
        }

        if (salesQuotationTable.RecId == 0)
        {
            // Prospects: Do not throw error for no record created. User cancelled create dialog.
            if (_args.record().TableId != tableNum(smmBusRelTable))
            {
                throw error("@SYS335701");
            }
        }
        else
        {
            // Create RetailSalesQuotationAffiliation.
            QuotationIdBase quotationId = salesQuotationTable.QuotationId;

            select RetailAffiliationId from retailCustAffiliation
                    where retailCustAffiliation.CustAccountNum == salesQuotationTable.CustAccount;

            if (RetailParameters::isRetailEnabledAndInUse() && quotationId && retailCustAffiliation.RetailAffiliationId)
            {
                if (RetailSalesQuotationAffiliation::findByQuotationId(quotationId))
                {
                    delete_from retailSalesQuotationAffiliation
                    where retailSalesQuotationAffiliation.QuotationId == quotationId;
                }

                insert_recordset retailSalesQuotationAffiliation (quotationId, Affiliation)
                select quotationId, RetailAffiliationId from retailCustAffiliation
                    where retailCustAffiliation.CustAccountNum == salesQuotationTable.CustAccount;
            }

            SalesCreateQuotationForm::construct(_args.parmEnum()).invokeCreateQuotation(_args, salesQuotationTable);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>