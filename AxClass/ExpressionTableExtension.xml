<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExpressionTableExtension</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ExpressionTableExtension implements ExpressionTableExtensible
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registerExtension</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(ExpressionTableExtensibilityHelper), delegatestr(ExpressionTableExtensibilityHelper, registerExtensionDelegate))]
    static void registerExtension(ExpressionTableExtensibilityHelper _helper)
    {
        ExpressionTableExtension extension = new ExpressionTableExtension();
        _helper.registerExtension(extension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Ledger_accountingCurrencyDelegate</Name>
				<Source><![CDATA[
    CurrencyCode Ledger_accountingCurrencyDelegate(LegalEntity _legalEntityRecId)
    {
        return Ledger::accountingCurrency(_legalEntityRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExpressionReferenceEntity</Name>
				<Source><![CDATA[
    container getExpressionReferenceEntity(guid expressionId)
    {
        TrvPolicyRule trvPolicyRule;
        SysPolicy sysPolicy;
        smmProcessStage smmProcessStage;
        str referenceName;
        ExpressionReferenceType referenceType;

        container c;

        //If expression is referenced by a workflow then get the workflow name, otherwise get the name
        //of the record referencing it eg: Expense Policy 123
        select crosscompany Name, RecId from sysPolicy join trvPolicyRule
            where trvPolicyRule.ExpressionTableRecId == ExpressionTable::find(expressionId).RecId
            && trvPolicyRule.Policy == sysPolicy.RecId;

        if (sysPolicy.RecId > 0)
        {
                referenceName = sysPolicy.Name;
                referenceType = ExpressionReferenceType::Other;
                return [referenceName, referenceType];
        }

        select crosscompany RecId from smmProcessStage where smmProcessStage.ExpressionId == expressionId;
        if (smmProcessStage.RecId > 0)
        {
            referenceName = smmProcessStage.caption();
            referenceType = ExpressionReferenceType::Other;
            return [referenceName, referenceType];
        }

        return c;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>