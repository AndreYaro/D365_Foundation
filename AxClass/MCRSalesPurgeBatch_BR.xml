<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRSalesPurgeBatch_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
class MCRSalesPurgeBatch_BR
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>processSalesLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the sales line for brazilian localization.
    /// </summary>
    /// <param name="_salesId">
    /// The ID of the sales line record for which this method processes.
    /// </param>
    /// <returns>
    /// true if processing should continue; otherwise, false.
    /// </returns>
    public boolean processSalesLine(SalesIdBase   _salesId)
    {
        SalesLine               salesLine;
        SalesLine_BR            salesLine_BR, salesLineOld;
        MCRHistSalesLine_BR     mcrHistSalesLine;
        boolean                 okToContinue;

        okToContinue = true;

        ttsbegin;

        while select salesLine
            where salesLine.SalesId == _salesId
        {
            salesLine_BR = salesLine.salesLine_BR();
            salesLine_BR.selectForUpdate(true);

            // copy the salesLine data
            mcrHistSalesLine.createFromSalesLine(salesLine);

            // now that archive of salesLine and child tables is complete, delete the salesLine
            salesLine_BR.doDelete();

            // check and see if delete was succesful
            select firstonly RecId from  salesLineOld
                where salesLineOld.SalesLine == salesLine_BR.SalesLine;

            if (salesLineOld)
            {
                okToContinue = false;
                break;
            }
        }

        if (okToContinue)
        {
            ttscommit;
        }
        else
        {
            ttsAbort;
        }

        return okToContinue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the sales table for brazilian localization.
    /// </summary>
    /// <param name="_salesTable">
    /// The ID of the sales table record for which this method processes.
    /// </param>
    /// <returns>
    /// true if processing should continue; otherwise, false.
    /// </returns>
    public boolean processSalesTable(SalesTable   _salesTable)
    {
        MCRHistSalesTable_BR    mcrHistSalesTable_BR;
        SalesTable_BR           salesTable_BR;
        boolean                 okToContinue;

        ttsbegin;

        salesTable_BR = _salesTable.salesTable_BR();
        salesTable_BR.selectForUpdate(true);

        // copy the salesTable data
        mcrHistSalesTable_BR.createFromSalesTable(_salesTable);

        // copy the salesLine data
        okToContinue = this.processSalesLine(_salesTable.SalesId);

        if (okToContinue && salesTable_BR.validateDelete())
        {
            salesTable_BR.delete();
        }
        else
        {
            okToContinue = checkFailed("@SYS104318");
        }

        ttscommit;

        return okToContinue;
    }
]]></Source>
			</Method>
			<Method>
				<Name>ProcessSalesTable_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the sales table for brazilian localization.
    /// </summary>
    /// <param name="_salesTable">
    /// The ID of the sales table record for which this method processes.
    /// </param>
    /// <returns>
    /// true if processing should continue; otherwise, false.
    /// </returns>
    public static boolean ProcessSalesTable_BR(SalesTable   _salesTable)
    {
        MCRSalesPurgeBatch_BR purgeBath = new MCRSalesPurgeBatch_BR();

        return purgeBath.processSalesTable(_salesTable);
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>