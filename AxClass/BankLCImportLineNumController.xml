<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCImportLineNumController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCImportLineNumController</c> class is a controller helper class for the <c>LineNum</c>
///    field of the <c>BankLCImportLine</c> table.
/// </summary>
class BankLCImportLineNumController extends BankLCLineNumController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createReferenceTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates the reference table lookup.
    /// </summary>
    /// <param name="_control">
    ///    The form control to use to perform the lookup.
    /// </param>
    /// <returns>
    ///    The created <c>SysReferenceTableLookup</c> class.
    /// </returns>
    protected SysReferenceTableLookup createReferenceTableLookup(FormReferenceControl _control)
    {
        SysReferenceTableLookup sysReferenceTableLookup;

        sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tablenum(BankLCImportLine), _control);
        sysReferenceTableLookup.addLookupfield(fieldnum(BankLCImportLine, LineNum));
        sysReferenceTableLookup.addLookupfield(fieldnum(BankLCImportLine, ShipmentAmountCur));
        sysReferenceTableLookup.addLookupfield(fieldnum(BankLCImportLine, ActualMaturityDateTime));
        sysReferenceTableLookup.addLookupfield(fieldnum(BankLCImportLine, ImportShipmentStatus));

        return sysReferenceTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSysTableLookup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a table lookup.
    /// </summary>
    /// <param name="_control">
    ///    The form control to perform the lookup.
    /// </param>
    /// <returns>
    ///    The created <c>SysTableLookup</c> class.
    /// </returns>
    protected SysTableLookup createSysTableLookup(FormIntControl _control)
    {
        SysTableLookup sysTableLookup;

        sysTableLookup = SysTableLookup::newParameters(tablenum(BankLCImportLine), _control);
        sysTableLookup.addLookupfield(fieldnum(BankLCImportLine, LineNum), true);
        sysTableLookup.addLookupfield(fieldnum(BankLCImportLine, ShipmentAmountCur));
        sysTableLookup.addLookupfield(fieldnum(BankLCImportLine, ActualMaturityDateTime));
        sysTableLookup.addLookupfield(fieldnum(BankLCImportLine, ImportShipmentStatus));

        return sysTableLookup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>filterRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Filters the returned record based on the status.
    /// </summary>
    /// <param name="_bankLCImportLine">
    ///    The record to filter.
    /// </param>
    /// <returns>
    ///    The returned record if it is acceptable; Otherwise, an empty record.
    /// </returns>
    protected BankLCImportLine filterRecord(BankLCImportLine _bankLCImportLine)
    {
        BankLCImportLine ret;

        ret = _bankLCImportLine;

        if (ret.RecId != 0
            && (isAllowOpened
                || isAllowUpdatedPackingSlip))
        {
            switch (ret.ImportShipmentStatus)
            {
                case BankLCImportShipmentStatusType::Open :
                    if (!isAllowOpened)
                    {
                        ret = null;
                    }
                    break;
                case BankLCImportShipmentStatusType::PackingSlipUpdated :
                    if (!isAllowUpdatedPackingSlip)
                    {
                        ret = null;
                    }
                    break;
                default :
                    ret = null;
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getJumpRefForms</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the reference jumper form.
    /// </summary>
    /// <returns>
    ///    The arguments of the created form.
    /// </returns>
    protected Args getJumpRefForms()
    {
        Args            args;

        args = new Args(formstr(BankLCImport));

        args.menuItemName(menuItemDisplayStr(BankLCImport));

        if (bankLCRecId != 0)
        {
            args.caller(this);
            args.record(BankLCImport::find(bankLCRecId).getPurchTable());
        }

        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the lookup query.
    /// </summary>
    /// <returns>
    ///    The lookup query.
    /// </returns>
    protected Query getQuery()
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        query = new Query();
        queryBuildDataSource = SysQuery::findOrCreateDataSource(query, tablenum(BankLCImportLine));

        queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(BankLCImportLine, BankLC));
        queryBuildRange.value(queryValue(bankLCRecId));

        if (isAllowOpened)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(BankLCImportLine, ImportShipmentStatus));
            queryBuildRange.value(queryValue(BankLCImportShipmentStatusType::Open));
        }

        if (isAllowUpdatedPackingSlip)
        {
            queryBuildRange = queryBuildDataSource.addRange(fieldnum(BankLCImportLine, ImportShipmentStatus));
            queryBuildRange.value(queryValue(BankLCImportShipmentStatusType::PackingSlipUpdated));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Resolves the reference.
    /// </summary>
    /// <param name="_formReferenceControl">
    ///    The form control to use to request the resolve reference.
    /// </param>
    /// <returns>
    ///    The selected record.
    /// </returns>
    public common resolveReference(FormReferenceGroupControl _formReferenceControl)
    {
        BankLCImportLine bankLCImportLine;

        bankLCImportLine = BankLCImportLine::find(super(_formReferenceControl).RecId);

        return this.filterRecord(bankLCImportLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>BankLCImportLineNumController</c> class.
    /// </summary>
    /// <returns>
    ///    The new instance of the <c>BankLCImportLineNumController</c> class.
    /// </returns>
    public static BankLCImportLineNumController construct()
    {
        BankLCImportLineNumController bankLCImportLineNumController;

        bankLCImportLineNumController = new BankLCImportLineNumController();
        return bankLCImportLineNumController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>