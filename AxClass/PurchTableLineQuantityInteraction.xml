<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableLineQuantityInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchTableLineQuantityInteraction</c> class is an interaction class for the <c>PurchTableLineQuantity</c> details form.
/// </summary>
public class PurchTableLineQuantityInteraction extends PageInteraction
{
    PurchLine                   purchLine;
    PurchTable                  purchTable;
    InventDim                   inventDim;

    PurchTableForm              purchTableForm;
    PurchTableInteractionHelper purchTableInteractionHelper;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableLineActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level menu items.
    /// </summary>
    public void enableLineActions()
    {
        purchTableInteractionHelper.initLineActions(purchLine);

        this.enableLineFunctionActions();
        this.enableLineInquiryActions();
        this.enableLineInterCompanyActions();
        this.enableLineInventoryActions();
        this.enableLineRenumberingActions();
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineFunctionActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level function menu items.
    /// </summary>
    protected void enableLineFunctionActions()
    {
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, buttonDeliverySchedule), purchTableInteractionHelper.parmDeliveryScheduleEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, PurchUpdateRemain), purchTableInteractionHelper.parmDeliverRemainderEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, LineFinalize), purchTableInteractionHelper.parmButtonLineFinalizeEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineInquiryActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level inquiry menu items.
    /// </summary>
    protected void enableLineInquiryActions()
    {
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, ReqTransNet), purchTableInteractionHelper.parmreqTransNetEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, ReqTransExplosion), purchTableInteractionHelper.parmreqTransExplosionEnabled());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineInterCompanyActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level intercompany menu items.
    /// </summary>
    protected void enableLineInterCompanyActions()
    {
        boolean interCompanyEnabled = purchTableInteractionHelper.parmlineInterCompanyEnabled();

        this.page().actionPaneControlEnabled(formControlStr(PurchTable, ButtonInterCompanyInventTrans), interCompanyEnabled);
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, InventOnhandInterCompany), interCompanyEnabled);
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, ButtonInterCompanyInventOnHandReserve), interCompanyEnabled);
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineInventoryActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level inventory menu items.
    /// </summary>
    protected void enableLineInventoryActions()
    {
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, buttonLineTransact), purchTableInteractionHelper.parmbuttonTransactionsEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, buttonLineOnHand), purchTableInteractionHelper.parmbuttonOnHandEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, buttonLineLot), purchTableInteractionHelper.parmbuttonLotEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, InventDimTracking), purchTableInteractionHelper.parmbuttonTraceEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, InventMarking), purchTableInteractionHelper.parmbuttonMarkingEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, InventReserve), purchTableInteractionHelper.parmbuttonReservationEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, Register), purchTableInteractionHelper.parmbuttonRegistrationEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, InventTransPick), purchTableInteractionHelper.parmbuttonPickEnabled());
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, buttonLineConsignmentTransaction), purchTableInteractionHelper.parmEnableLineConsignmentTransactionButton());
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableLineRenumberingActions</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables or disables the line level renumber menu items.
    /// </summary>
    protected void enableLineRenumberingActions()
    {
        this.page().actionPaneControlEnabled(formControlStr(PurchTable, RenumberLineNumber), purchTableForm.canRenumberLineNumbers());
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes based on the active records for the form.
    /// </summary>
    private void init()
    {
        purchLine  = this.page().activeRecord('PurchLine');
        purchTable = this.page().activeRecord('PurchTable');
        inventDim  = this.page().activeRecord('InventDim');

        if (this.page().pageArgs().enumTypeParameter() == enumNum(PurchTableFormId))
        {
            purchTableForm = PurchTableForm::construct(this.page().pageArgs().enumerationParameter(), purchTable);
            purchTableInteractionHelper = PurchTableInteractionHelper::construct(this.page().pageArgs().enumerationParameter(), purchTable);
        }
        else
        {
            purchTableForm = PurchTableForm::construct(PurchTableFormId::None, purchTable);
            purchTableInteractionHelper = PurchTableInteractionHelper::construct(PurchTableFormId::None, purchTable);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchLine_DS_selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables the line action menu item buttons when the active purchase order line has been updated.
    /// </summary>
    [FormDataSourceInteractionAttribute('PurchLine', 'selectionChanged')]
    public void purchLine_DS_selectionChanged()
    {
        this.init();

        this.enableLineActions();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>