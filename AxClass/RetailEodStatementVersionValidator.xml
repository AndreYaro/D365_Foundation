<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailEodStatementVersionValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Commerce.Headquarters.Instrumentation;

/// <summary>
/// The <c>RetailEodStatementVersionValidator</c> class is used to validate the version of the statement against the version which is currently active.
/// </summary>
public static class RetailEodStatementVersionValidator
{
    private static CommerceHQEventSource eventSource = CommerceHQEventSource::Log;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the statement version matches the version of the operation that will be executed.
    /// </summary>
    /// <param name = "_statementTable">The statement table record.</param>
    /// <param name = "_expectedVersion">The expected version.</param>
    public static void validateVersion(RetailStatementTable _statementTable, RetailEodCodeVersion _expectedVersion)
    {
        if (_statementTable)
        {
            DictConfigurationKey eodLegacyKey = new DictConfigurationKey(configurationkeynum(RetailEodBackwardCompatibility));
            DictConfigurationKey eodKey = new DictConfigurationKey(configurationkeynum(RetailEOD));

            if (_expectedVersion == RetailEodCodeVersion::V2 && _statementTable.EodCodeVersion != RetailEodCodeVersion::V2)
            {

                eventSource.EventWriteStatementsValidateVersionConfigurationKeys(_statementTable.statementId, eodLegacyKey.label(), eodKey.label());
                throw error(strFmt("@Retail:RetailStatementCalculateAndPostInDifferentVersions", _statementTable.statementId, eodLegacyKey.label(), eodKey.label()));
            }

            if (_expectedVersion == RetailEodCodeVersion::V1 && _statementTable.EodCodeVersion != RetailEodCodeVersion::V1)
            {
                eventSource.EventWriteStatementsValidateVersionConfigurationKeys(_statementTable.statementId, eodKey.label(), eodLegacyKey.label());
                throw error(strFmt("@Retail:RetailStatementCalculateAndPostInDifferentVersions", _statementTable.statementId, eodKey.label(), eodLegacyKey.label()));
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>