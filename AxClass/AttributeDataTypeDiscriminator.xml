<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AttributeDataTypeDiscriminator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     This class holds all the static parm methods to check for various attribute data types.
///     It also consists of methods to directly return the attribute data types.
/// </summary>
public static class AttributeDataTypeDiscriminator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkAttributeDataTypeReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if attribute data type value is of Reference.
    /// </summary>
    /// <param name = "_attributeType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is Reference; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeReference(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::Reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeDecimal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if attribute data type value is of Decimal.
    /// </summary>
    /// <param name = "_attributeType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is Decimal; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeDecimal(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::Decimal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if attribute data type value is of Currency.
    /// </summary>
    /// <param name = "_attributeType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is Currency; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeCurrency(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::Currency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeInteger</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if attribute data type value is of Integer.
    /// </summary>
    /// <param name = "_attributeType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is Integer; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeInteger(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::Integer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeTrueFalse</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if <c>AttributeDataType</c> enum value is TrueFalse.
    /// </summary>
    /// <param name = "_attributeDataType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is TrueFalse; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeTrueFalse(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::TrueFalse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeText</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if <c>AttributeDataType</c> value is Text type.
    /// </summary>
    /// <param name = "_dataType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> value is Text type; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeText(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::Text;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkAttributeDataTypeDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Checks if <c>AttributeDataType</c> enum value is DateTime.
    /// </summary>
    /// <param name = "_dataType">
    ///     An attribute data type.
    /// </param>
    /// <returns>
    ///     true if <c>AttributeDataType</c> enum value is DateTime; Otherwise, false.
    /// </returns>
    public static boolean checkAttributeDataTypeDateTime(AttributeDataType _attributeType)
    {
        return _attributeType == AttributeDataType::DateTime;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>