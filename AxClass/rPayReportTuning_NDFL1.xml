<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayReportTuning_NDFL1</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rPayReportTuning_NDFL1 extends RPayReportTuning
{
    #define.num_of_children(1)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
        public void lookup(FormStringControl _lookupCtrl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query = new Query();
        ;
        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        if (rPayReportTuningTable.ParameterCode == #num_of_children)
        {
            query.addDataSource(tableNum(RPayRateTable));
            sysTableLookup = SysTableLookup::newParameters(tableNum(RPayRateTable),_lookupCtrl);
            sysTableLookup.addLookupfield(fieldNum(RPayRateTable,PayRate));
            sysTableLookup.addLookupfield(fieldNum(RPayRateTable,Name));
        }

        if (rPayReportTuningTable.ParameterCode > #num_of_children)
        {
            query.addDataSource(tableNum(RPayTaxDeductionTable));
            sysTableLookup = SysTableLookup::newParameters(tableNum(RPayTaxDeductionTable),_lookupCtrl);
            query.dataSourceNo(1).addRange(fieldNum(RPayTaxDeductionTable,RpayTaxDeductionType)).value(queryValue(RpayTaxDeductionType::Standard));
            sysTableLookup.addLookupfield(fieldNum(RPayTaxDeductionTable,RpayTaxDeductionCode));
            sysTableLookup.addLookupfield(fieldNum(RPayTaxDeductionTable,Name));
        }

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(RPayReportName _reportName, FormRun _formRun)
    {
        parameterName = [literalStr("@RUP583"),
                         literalStr("@RUP1946"),
                         literalStr("@RUP1947"),
                         literalStr("@RUP582"),
                         literalStr("@RUP1948"),
                         literalStr("@RUP1949")];

        super(_reportName,_formRun);
    }

]]></Source>
			</Method>
			<Method>
				<Name>openReportTemplate</Name>
				<Source><![CDATA[
        public void openReportTemplate()
    {
        ComExcelDocument_RU doc = new ComExcelDocument_RU();

        doc.open(TemplateProvider_RU::getFor(new RPayNDFL1Report()).get(resourceStr(RPayNDFL1Report)), true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>printReport</Name>
				<Source><![CDATA[
        public void printReport()
    {
        new MenuFunction(menuitemactionstr(RPayNDFL1Report), MenuItemType::Action).run(new Args());
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
        public boolean validateWrite()
    {
        ;
        rPayReportTuningTable = rPayReportTuningTableDs.cursor();

        if (rPayReportTuningTable.ParameterCode == #num_of_children        &&
            ! (RPayRateTable::find(rPayReportTuningTable.Parameter).RecId) &&
            rPayReportTuningTable.Parameter != '')
        {
            return checkFailed(strFmt("@GLS106038",
                               rPayReportTuningTable.Parameter,
                               fieldPName(RPayRateTable,PayRate),
                               tablePName(RPayRateTable)));
        }

        if (rPayReportTuningTable.ParameterCode > #num_of_children &&
            !(select firstonly rPayTaxDeductionTable
                  where rPayTaxDeductionTable.RpayTaxDeductionCode == str2int(rPayReportTuningTable.Parameter) &&
                        rPayTaxDeductionTable.RpayTaxDeductionType == RpayTaxDeductionType::Standard).RecId    &&
                        rPayReportTuningTable.Parameter != '')
        {
            return checkFailed(strFmt("@GLS106038",
                               rPayReportTuningTable.Parameter,
                               fieldPName(RPayTaxDeductionTable,RpayTaxDeductionCode),
                               tablePName(RPayTaxDeductionTable)));
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>