<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SourceDocAccPolicyCommitFundsExpProd</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SourceDocAccPolicyCommitFundsExpProd</c> class describes the financial accounting policy for
/// recognizing the commitments of budget funds for expensed products for a purchase requisition source document.
/// </summary>
[
    SourceDocumentEnumClassExtAttribute(enumStr(BusinessEvent_ProductRequisition),
                                        BusinessEvent_ProductRequisition::CommitBudgetFundsForExpensedProducts,
                                        enumStr(SourceDocument_ProductRequisition))
]
public class SourceDocAccPolicyCommitFundsExpProd extends SourceDocumentAccountingPolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>determineIsAccountingRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsAccountingRequired()
    {
        boolean             isRequired;
        PurchReqLine        purchReqLine;
        SourceDocumentLine  sourceDocumentLine;
        int                 counter;

        while select BuyingLegalEntity from purchReqLine
                group by purchReqLine.BuyingLegalEntity
            exists join sourceDocumentLine
                where sourceDocumentLine.SourceDocumentHeader == sourceDocumentHeader.RecId
        {
            counter++;

            if (counter > 1)
            {
                break;
            }
        }

        if (counter == 1)
        {
            // We can just check one legal entity ledger parameters to see whether pre-encubmrance is enabled because
            // all purchase requisition lines for the current source document have the same buying legal entity.
            select firstonly BuyingLegalEntity from purchReqLine
                exists join sourceDocumentLine
                    where sourceDocumentLine.SourceDocumentHeader == sourceDocumentHeader.RecId;

            changeCompany(CompanyInfo::findRecId(purchReqLine.BuyingLegalEntity).DataArea)
            {
                isRequired = LedgerParameters::find().IsPreEncumbranceProcessEnabled == NoYes::Yes;

                if (isRequired)
                {
                    sourceDocumentAccountingRequirement = SourceDocumentAccountingRequirement::RecognitionRequired;
                }
                else
                {
                    sourceDocumentAccountingRequirement = SourceDocumentAccountingRequirement::RecognitionNotRequired;
                }
            }
        }
        else
        {
            isRequired = true;
            sourceDocumentAccountingRequirement = SourceDocumentAccountingRequirement::DetermineRecognitionByLine;
        }

        return isRequired;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>