<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductSmmAssociationLinkHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Product handler for class <c>smmAssociationLink</c>.
/// </summary>
class EcoResProductSmmAssociationLinkHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>SmmAssociationLink_Post_createCaseAssociationWithRelations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the post event for <c>smmAssociationLink.createCaseAssociationWithRelations()</c>
    /// </summary>
    /// <param name="args">
    /// The event args.
    /// </param>
    [PostHandlerFor(classStr(SmmAssociationLink), staticMethodStr(SmmAssociationLink, createCaseAssociationWithRelations))]
    public static void SmmAssociationLink_Post_createCaseAssociationWithRelations(XppPrePostArgs args)
    {
        Common externalRecord = args.getArg('_externalRecord');
        RefRecId caseRecId = args.getArg('_caseRecId');

        CaseAssociation caseAssociation;
        if (externalRecord && caseRecId)
        {
            caseAssociation = caseAssociation::find(externalRecord, caseRecId);
        }

        // for entity type Item creates also the association to related product
        if (caseAssociation
            && CaseAssociation::getTypeForRecord(externalRecord) == CaseEntityType::Item
            && caseDetail::findRec(caseRecId).caseCategory().CategoryType  == CaseCategoryType::EngineeringChange)
        {
            EcoResProduct ecoResProduct = EcoResProduct::find(InventTable::findRecId(caseAssociation.RefRecId).Product);
            if (!caseAssociation::find(ecoResProduct, caseRecId).RecId)
            {
                smmAssociationLink::createCaseAssociation(NoYes::No, ecoResProduct, caseRecId);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>