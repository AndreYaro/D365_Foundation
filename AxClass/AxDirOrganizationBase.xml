<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>AxDirOrganizationBase</Name>
  <SourceCode>
    <Declaration><![CDATA[
class AxDirOrganizationBase extends AxDirPartyTable
{
    DirOrganizationBase dirOrganizationBase;
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>axOrig</Name>
        <Source><![CDATA[
        public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
      </Method>
      <Method>
        <Name>currentRecord</Name>
        <Source><![CDATA[
        public Common currentRecord(Common _dirOrganizationBase = dirOrganizationBase)
    {
        if (!prmisdefault(_dirOrganizationBase))
        {
            super(_dirOrganizationBase);
            dirOrganizationBase = _dirOrganizationBase;
        }
        else
        {
            super();
        }

        return dirOrganizationBase;
    }

]]></Source>
      </Method>
      <Method>
        <Name>dirOrganizationBase</Name>
        <Source><![CDATA[
        public DirOrganizationBase dirOrganizationBase(DirOrganizationBase _dirOrganizationBase = dirOrganizationBase)
    {
        if (!prmisdefault(_dirOrganizationBase))
        {
            this.setCurrentRecordFromExternal(_dirOrganizationBase);
        }

        return this.currentRecord();
    }

]]></Source>
      </Method>
      <Method>
        <Name>emptyRecord</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Returns an empty record from the table to which this AxBC class relates.
    /// </summary>
    /// <returns>
    ///    An empty record from the table to which this AxBC class relates.
    /// </returns>
    /// <remarks>
    ///    The table to which this AxBC class relates has the same name as the class without the first two
    ///    letters, a and x.
    /// </remarks>
    protected Common emptyRecord()
    {
        DirOrganizationBase localDirOrganizationBase;
        return localDirOrganizationBase;
    }
]]></Source>
      </Method>
      <Method>
        <Name>parmDunsNumberRecId</Name>
        <Source><![CDATA[
        public LogisticsDunsNumberRecId parmDunsNumberRecId(LogisticsDunsNumberRecId _dunsNumberRecId = 0)
    {
        if (!prmisDefault(_dunsNumberRecId))
        {
            this.setField(fieldNum(DirOrganizationBase, DunsNumberRecId), _dunsNumberRecId);
        }

        return dirOrganizationBase.DunsNumberRecId;
    }

]]></Source>
      </Method>
      <Method>
        <Name>parmPhoneticName</Name>
        <Source><![CDATA[
        public DirPartyName parmPhoneticName(DirPartyName _phoneticName = '')
    {
        if (!prmisdefault(_phoneticName))
        {
            this.setField(fieldnum(DirOrganizationBase, PhoneticName), _phoneticName);
        }

        return dirOrganizationBase.PhoneticName;
    }

]]></Source>
      </Method>
      <Method>
        <Name>setTableFields</Name>
        <Source><![CDATA[
    /// <summary>
    /// Sets the <c>TableFields</c> parameter.
    /// </summary>
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
      </Method>
      <Method>
        <Name>construct</Name>
        <Source><![CDATA[
        static AxDirOrganizationBase construct()
    {
        return new AxDirOrganizationBase();
    }

]]></Source>
      </Method>
      <Method>
        <Name>newDirOrganizationBase</Name>
        <Source><![CDATA[
        public static AxDirOrganizationBase newDirOrganizationBase(DirOrganizationBase _dirOrganizationBase)
    {
        AxDirOrganizationBase axDirOrganizationBase = AxDirOrganizationBase::construct();
        axDirOrganizationBase.dirOrganizationBase(_dirOrganizationBase);

        return axDirOrganizationBase;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>