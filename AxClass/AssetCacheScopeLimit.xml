<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetCacheScopeLimit</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AssetCacheScopeLimit</c> class implements logic for asset cache scope of the asset cache limit.
/// </summary>
[AssetCacheScope(AssetCacheScope::AssetCacheLimit)]
internal class AssetCacheScopeLimit extends AssetCacheScopeBase
{
    private const str AssetCacheLimitKey = 'LimitKey';
    private const int IndexOfAssetCacheLimitKey = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCacheByAssetBook</Name>
				<Source><![CDATA[
    internal anytype getCacheByAssetBook(AssetId _assetId, AssetBookId _bookId)
    {
        return conPeek(this.getCache(), IndexOfAssetCacheLimitKey);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCache</Name>
				<Source><![CDATA[
    internal container getCache(str _key = AssetCacheLimitKey)
    {
        container ret = AssetCache::getValue(AssetCacheScope::AssetCacheLimit, _key);

        if (ret == conNull() || !conPeek(ret, IndexOfAssetCacheLimitKey))
        {
            ret = [this.getMaxNumberOfAvailableThreads() + ExtraCacheSlots];
            AssetCache::insertValue(AssetCacheScope::AssetCacheLimit, _key, ret);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeValue</Name>
				<Source><![CDATA[
    internal void removeValue(str _key)
    {
        AssetCache::insertValue(AssetCacheScope::AssetCacheLimit, AssetCacheLimitKey, conNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxNumberOfAvailableThreads</Name>
				<Source><![CDATA[
    private int getMaxNumberOfAvailableThreads()
    {
        SysServerConfig     sysServerConfig;
        BatchServerConfig   batchServerConfig;

        select sum(MaxBatchSessions) from batchServerConfig
            exists join sysServerConfig
                where batchServerConfig.ServerId == sysServerConfig.ServerId
                    && sysServerConfig.EnableBatch == NoYes::Yes;

        return batchServerConfig.MaxBatchSessions;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>