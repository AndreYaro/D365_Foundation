<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureDelete_CustPrepayment_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class FactureDelete_CustPrepayment_RU extends FactureDelete_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
        protected void check()
    {
        super();

        select firstonly bookTable
            where bookTable.ClosingDate
        join bookTrans
            where bookTrans.SalesPurchBookTable_RU == bookTable.RecId &&
                  bookTrans.FactureId              == jour.FactureId  &&
                  bookTrans.TransType              == SalesPurchBookTransType_RU::Prepayment;

        if (bookTable)
        {
            this.addError(this.errorClosedBook(bookTable.BookId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteBookTrans</Name>
				<Source><![CDATA[
        protected void deleteBookTrans()
    {
        delete_from bookTrans
            where bookTrans.FactureId == jour.FactureId &&
                  bookTrans.TransType == SalesPurchBookTransType_RU::Prepayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorClosedBook</Name>
				<Source><![CDATA[
        protected str errorClosedBook(SalesPurchBookId_RU _bookId)
    {
        return strFmt("@GLS112043", _bookId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceJour</Name>
				<Source><![CDATA[
        protected CustVendInvoiceJour getInvoiceJour(CustVendInvoiceTrans _trans)
    {
        container dummy()
        {
            return [ _trans ];
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceTrans</Name>
				<Source><![CDATA[
        protected CustVendInvoiceTrans getInvoiceTrans(FactureTrans_RU _trans)
    {
        container dummy()
        {
            return [ _trans ];
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jourTableId</Name>
				<Source><![CDATA[
        protected tableId jourTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(FactureJour_RU _jour)
    {
        super(_jour);

        bookTable = new DictTable(tableNum(SalesBookTable_RU)).makeRecord();
        bookTrans = new DictTable(tableNum(SalesBookTrans_RU)).makeRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transTableId</Name>
				<Source><![CDATA[
        protected tableId transTableId()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExtra</Name>
				<Source><![CDATA[
        protected void updateExtra(FactureTrans_RU _trans)
    {
        CustTrans   custTrans;
        CustTrans_W custTrans_W;

        super(_trans);

        update_recordset custTrans_W
                setting PrepaymentFactureId_W = ''
                where custTrans_W.PrepaymentFactureId_W   == jour.FactureId
            exists join custTrans
                where custTrans.RecId                   == custTrans_W.CustTrans     &&
                      custTrans.Voucher                 == jour.Voucher              &&
                      custTrans.TransDate               == jour.FactureDate_External;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateMarkup</Name>
				<Source><![CDATA[
        protected void updateMarkup(FactureTrans_RU _trans)
    {
        container dummy()
        {
            return [ _trans.RecId ];
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSourceOrder</Name>
				<Source><![CDATA[
        protected void updateSourceOrder(CustVendInvoiceJour _jour)
    {
        super(_jour);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>