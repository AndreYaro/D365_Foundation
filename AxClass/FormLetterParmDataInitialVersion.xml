<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterParmDataInitialVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>FormLetterParmDataInitalVersion</c> class is a parameter data creation versioning strategy
///    for the initial journal version.
/// </summary>
class FormLetterParmDataInitialVersion
extends FormLetterParmDataVersioning
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLineQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the quantities from the source line that will be used for the parameter line generation.
    /// </summary>
    /// <param name="_sourceLine">
    /// The source line for which to retrieve the quantities.
    /// </param>
    /// <returns>
    /// A container that contains the new document unit of measure quantity, the new inventory unit
    /// quantity, the previous document unit quantity, and the previous inventory unit quantity.
    /// </returns>
    public container getLineQuantities(Common _sourceLine)
    {
        return [naReal(), naReal(), 0, 0];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the data selection query depending on whether it is an initial version or a correction.
    /// </summary>
    public void initQuery()
    {
        formLetterParmData.updateQueryBuild();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWGetLineQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves catch weight quantities from the source line to the used for the parameter line
    /// generation.
    /// </summary>
    /// <param name="_sourceLine">
    /// The source line for which to retrieve the quantities.
    /// </param>
    /// <returns>
    ///  A container with 2 elements:
    ///  <list type="number">
    ///   <item>
    ///   <description>The new catch weight unit quantity</description>
    ///   </item>
    ///   <item>
    ///   <description>The previous catch weight unit quantity,</description>
    ///   </item>
    ///  </list>
    /// </returns>
    public container pdsCWGetLineQuantities(Common _sourceLine)
    {
        return [naReal(), 0];
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldCreateParmLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether a parameter line should be created.
    /// </summary>
    /// <param name="_parmLine">
    /// The parameter line to be checked.
    /// </param>
    /// <returns>
    /// true if the line should be created; otherwise, false.
    /// </returns>
    public boolean shouldCreateParmLine(FormletterParmLine _parmLine)
    {
        PurchFormletterParmData purchFormletterParmData;

        VendInvoiceInfoLine locParmLine;
        boolean             chk = _parmLine.Qty != 0;

        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            // The method PSASetRetainage() only exists for VendInvoiceInfoLine mapping
            if (_parmLine.TableId == tableNum(VendInvoiceInfoLine))
            {
                locParmLine = _parmLine;
                // As this is a vendorInvoiceInfoLine, cast PurchFormLetterParmData should be safe.
                purchFormletterParmData = this.parmFormLetterParmData() as PurchFormletterParmData;

                if (purchFormletterParmData != null)
                {
                    _parmLine.psaSetRetainage(locParmLine.LineAmount, purchFormletterParmData.parmDocumentStatus(), _parmLine.purchLine());
                }
            }
        }

        if (isConfigurationkeyEnabled(configurationKeyNum(Project))
            && _parmLine.TableId == tableNum(VendInvoiceInfoLine))
        {
            locParmLine = _parmLine;
            chk = locParmLine.psaRetainageBalance ? true : chk;
        }

        return chk;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static FormLetterParmDataInitialVersion construct()
    {
        return new FormLetterParmDataInitialVersion();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>