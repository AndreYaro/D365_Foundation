<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCommerceValidatorRulesAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCommerceValidatorRulesAttribute
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate entity type list.
    /// </summary>
    /// <returns>The map containing all entity types and their descriptions.</returns>
    public static Map getEntityType()
    {
        Map entityList = new Map(Types::String,Types::Container);

        entityList.insert("@Retail:RetailCommerceValidatorAttributeEntityTypeId", [RetailCommerceValidatorEntityFunction::Functional, tableNum(EcoResAttribute), classStr(RetailCommerceValidatorRulesAttribute)]);

        return entityList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRulesList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate rule list.
    /// </summary>
    /// <returns>The map containing all rules and rule related properties.</returns>
    public static Map getRulesList()
    {
        Map rulesList = new Map(Types::String,Types::Container);

        // Validates attribute display order inside an attribute group.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribRu001", [
            "@Retail:RetailCommerceValidatorAttributeEntityTypeId",
            0,
            RetailCommerceValidatorResultStatus::Passed,
            "@Retail:RetailCommerceValidatorAttribRu001Description",
            'validateAttributeDisplayorder',
            formStr(EcoResAttributeGroup),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        // Validates attribute translation.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribRu002", [
            "@Retail:RetailCommerceValidatorAttributeEntityTypeId",
            0, RetailCommerceValidatorResultStatus::Error,
            "@Retail:RetailCommerceValidatorAttribRu002Description",
            'validateAttributeTranslation',
            formStr(EcoResAttribute),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        // Validates attribute enumeration value translation.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribRu003", [
            "@Retail:RetailCommerceValidatorAttributeEntityTypeId",
            0,
            RetailCommerceValidatorResultStatus::Error,
            "@Retail:RetailCommerceValidatorAttribRu003Description",
            'validateAttributeEnumerationTranslation',
            formStr(EcoResAttributeType),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        // Validates attribute value translation when the attribute value is overridden in "Channel categories and product attribtues" form per channel.
        rulesList.insert("@Retail:RetailCommerceValidatorAttribRu004", [
            "@Retail:RetailCommerceValidatorAttributeEntityTypeId",
            0,
            RetailCommerceValidatorResultStatus::Error,
            "@Retail:RetailCommerceValidatorAttribRu004Description",
            'validateAttributeValueTranslation',
            formStr(RetailInternalOrganization),
            NoYes::Yes, // EntityPartitionRequired
            NoYes::No // AutomatedRunApplicable
        ]);

        return rulesList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get number of entities of the Entity type for a given validation
    /// </summary>
    /// <param name = "_validationId">The validation Id.</param>
    /// <returns>The number of entities in scope for the validation.</returns>
    public static int64 getEntityCount(RetailCommerceValidatorId _validationId)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttribute ecoResAttribute;
        int64 counter;
            
        while select recid from ecoResAttribute
            join Attribute from ecoResCategoryAttributeGroupAttrView
            group by Attribute
                where ecoResAttribute.RecId == ecoResCategoryAttributeGroupAttrView.Attribute
                join retailCommerceValidatorWorkChannelCategoryHierarchies
                    where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId
                        && retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validationId
        {
            counter++;
        }

        return counter;

    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeDisplayorder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> Attrib-Ru-001: Attribute display order inside attribute group is missing.
    /// Validates Attribute order inside attribute group.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of a count of errors.</returns>
    internal static container validateAttributeDisplayorder(RetailCommerceValidatorTests _validatorTest)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttributeGroupAttribute   ecoResAttributeGroupAttribute;
        EcoResAttribute  ecoResAttribute;
        int resultsCounter = 0;

        while select CategoryHierarchyRecId from retailCommerceValidatorWorkChannelCategoryHierarchies
            where retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validatorTest.ValidationId &&
                  retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId >= _validatorTest.RangeStartRecId &&
                  retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId <= _validatorTest.RangeEndRecId
         join AttributeGroup,Attribute from ecoResCategoryAttributeGroupAttrView
            group by Attribute, AttributeGroup
            where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId &&
                !ecoResCategoryAttributeGroupAttrView.AttributeDisplayOrder
         exists join ecoResAttributeGroupAttribute
            where ecoResAttributeGroupAttribute.AttributeGroup == ecoResCategoryAttributeGroupAttrView.AttributeGroup &&
                ecoResAttributeGroupAttribute.Attribute == ecoResCategoryAttributeGroupAttrView.Attribute
         exists join ecoResAttribute
            where ecoResAttribute.RecId == ecoResCategoryAttributeGroupAttrView.Attribute
        {
            // Find or create context of records
            RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextAttributeAttributeGroup(_validatorTest.ValidationId, ecoResCategoryAttributeGroupAttrView.Attribute, ecoResCategoryAttributeGroupAttrView.AttributeGroup);

            // Log the issue
            RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    "@Retail:RetailCommerceValidatorAttribRu001Description",
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorAttribRu001"
                    );

            // Increase the counter of issues
            resultsCounter++;
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> Attrib-Ru-002: Attribute translation for FriendlyName is missing.
    /// Validates Attribute translation.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of a count of errors.</returns>
    internal static container validateAttributeTranslation(RetailCommerceValidatorTests _validatorTest)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttribute  ecoResAttribute;
        EcoResAttributeTranslation  ecoResAttributeTranslation;
        RetailCommerceValidatorWorkChannelLanguages  retailCommerceValidatorWorkChannelLanguages;
        int resultsCounter = 0;

        while select LanguageId from retailCommerceValidatorWorkChannelLanguages
            where retailCommerceValidatorWorkChannelLanguages.ValidationId == _validatorTest.ValidationId
        {

            while select CategoryHierarchyRecId from retailCommerceValidatorWorkChannelCategoryHierarchies
                where retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validatorTest.ValidationId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId >= _validatorTest.RangeStartRecId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId <= _validatorTest.RangeEndRecId
             join Attribute from ecoResCategoryAttributeGroupAttrView
                group by Attribute
                where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId
             exists join ecoResAttribute
                where ecoResAttribute.RecId == ecoResCategoryAttributeGroupAttrView.Attribute
             notexists join ecoResAttributeTranslation
                where ecoResAttributeTranslation.Attribute == ecoResCategoryAttributeGroupAttrView.Attribute
                   && ecoResAttributeTranslation.FriendlyName != ''
                   && ecoResAttributeTranslation.Language == retailCommerceValidatorWorkChannelLanguages.LanguageId

            {
                // Set description: 'Attribute translation for Friendly Name is missing for language %1'
                str description = strFmt("@Retail:RetailCommerceValidatorAttribRu002DynamicDescription", retailCommerceValidatorWorkChannelLanguages.LanguageId);

                // Find or create context of records
                RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextAttribute(_validatorTest.ValidationId, ecoResCategoryAttributeGroupAttrView.Attribute);

                // Log the issue
                RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    description,
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorAttribRu002"
                    );

                // Increase the counter of issues
                resultsCounter++;
            }
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeEnumerationTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> Attrib-Ru-003: Attribute enumeration translation for Description and FriendlyName is missing.
    /// Validates Attribute enumeration translation.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of a count of errors.</returns>
    internal static container validateAttributeEnumerationTranslation(RetailCommerceValidatorTests _validatorTest)
    {
        RetailCommerceValidatorWorkChannelCategoryHierarchies  retailCommerceValidatorWorkChannelCategoryHierarchies;
        EcoResCategoryAttributeGroupAttrView  ecoResCategoryAttributeGroupAttrView;
        EcoResAttribute  ecoResAttribute;
        EcoResAttributetype  ecoResAttributetype;
        EcoResEnumerationAttributeTypeValue  ecoResEnumerationAttributeTypeValue;
        EcoResTextValue  ecoResTextValue;
        EcoResTextValueTranslation  ecoResTextValueTranslation;
        RetailCommerceValidatorWorkChannelLanguages  retailCommerceValidatorWorkChannelLanguages;
        int resultsCounter = 0;

        while select LanguageId from retailCommerceValidatorWorkChannelLanguages
            where retailCommerceValidatorWorkChannelLanguages.ValidationId == _validatorTest.ValidationId
        {

            while select CategoryHierarchyRecId from retailCommerceValidatorWorkChannelCategoryHierarchies
                where retailCommerceValidatorWorkChannelCategoryHierarchies.ValidationId == _validatorTest.ValidationId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId >= _validatorTest.RangeStartRecId &&
                      retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId <= _validatorTest.RangeEndRecId
             join Attribute from ecoResCategoryAttributeGroupAttrView
                where ecoResCategoryAttributeGroupAttrView.CategoryHierarchy == retailCommerceValidatorWorkChannelCategoryHierarchies.CategoryHierarchyRecId
             join AttributeType from ecoResAttribute
                where ecoResAttribute.RecId == ecoResCategoryAttributeGroupAttrView.Attribute
             join RecId from ecoResAttributetype
                where ecoResAttributetype.RecId == ecoResAttribute.AttributeType &&
                      ecoResAttributetype.DataType == AttributeDataType::Text &&
                      ecoResAttributetype.IsEnumeration
             join ecoResEnumerationAttributeTypeValue
                where ecoResEnumerationAttributeTypeValue.AttributeType == ecoResAttributetype.RecId
             join RecId from ecoResTextValue
                group by ecoResCategoryAttributeGroupAttrView.Attribute, ecoResAttributetype.RecId, ecoResTextValue.RecId
                where ecoResTextValue.RecId == ecoResEnumerationAttributeTypeValue.Value
                    && ecoResTextValue.TextValue != ''
             notexists join ecoResTextValueTranslation
                where ecoResTextValueTranslation.TextValueTable == ecoResTextValue.RecId
                   && ecoResTextValueTranslation.TextValue != ''
                   && ecoResTextValueTranslation.Language == retailCommerceValidatorWorkChannelLanguages.LanguageId
            {
                //Set description: 'Attribute enumeration translation for Description and FriendlyName is  missing for language %1'
                str description = strFmt("@Retail:RetailCommerceValidatorAttribRu003DynamicDescription", retailCommerceValidatorWorkChannelLanguages.LanguageId);
            
                // Find or create context of records
                RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextAttributeAttributeEnumerationValue(_validatorTest.ValidationId, ecoResCategoryAttributeGroupAttrView.Attribute, ecoResAttributetype.RecId, ecoResTextValue.RecId);

                // Log the issue
                RetailCommerceValidatorLog::addLog(
                    logContext,
                    "@Retail:ValidationRuleCounterMetricId",
                    description,
                    _validatorTest.TestId,
                    "@Retail:RetailCommerceValidatorAttribRu003"
                    );

                // Increase the counter of issues
                resultsCounter++;
            }
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeValueTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Rule --> Attrib-Ru-004: Attribute value translation for specified channel attribute override is missing.
    /// Validates Attribute value translation for specified channel attribute override.
    /// </summary>
    /// <param name = "_validatorTest"> The <c> RetailCommerceValidatorTests </c> table buffer.</param>
    /// <returns>A container consists of a count of errors.</returns>
    internal static container validateAttributeValueTranslation(RetailCommerceValidatorTests _validatorTest)
    {
        RetailInternalOrgProductAttributeValue  retailInternalOrgProductAttributeValue;
        RetailInternalOrganization  retailInternalOrganization;
        EcoResAttribute  ecoResAttribute;
        EcoResAttributetype  ecoResAttributetype;
        EcoResValue  ecoResValue;
        EcoResTextValueTranslation  ecoResTextValueTranslation;
        RetailCommerceValidatorWorkChannelLanguages  retailCommerceValidatorWorkChannelLanguages;
        RefRecId OMOperatingUnitId = RetailCommerceValidator::find(_validatorTest.ValidationId).OMOperatingUnitId;
        int resultsCounter = 0;

        while select LanguageId from retailCommerceValidatorWorkChannelLanguages
            where retailCommerceValidatorWorkChannelLanguages.ValidationId == _validatorTest.ValidationId
        {
            while select InternalOrganization from retailInternalOrganization
                where retailInternalOrganization.InternalOrganization == OMOperatingUnitId
             join Attribute,Value,Product from retailInternalOrgProductAttributeValue
                where retailInternalOrgProductAttributeValue.InternalOrganization == retailInternalOrganization.RecId
             exists join ecoResAttribute
                where ecoResAttribute.RecId == retailInternalOrgProductAttributeValue.Attribute
             exists join ecoResAttributetype
                where ecoResAttributetype.RecId == ecoResAttribute.AttributeType &&
                    ecoResAttributetype.DataType == AttributeDataType::Text &&
                    !ecoResAttributetype.IsEnumeration
             exists join ecoResValue
                where ecoResValue.RecId == retailInternalOrgProductAttributeValue.Value
             notexists join ecoResTextValueTranslation
                where ecoResTextValueTranslation.TextValueTable == retailInternalOrgProductAttributeValue.Value
                   && ecoResTextValueTranslation.TextValue != ''
                   && ecoResTextValueTranslation.Language == retailCommerceValidatorWorkChannelLanguages.LanguageId
            {
                if(!RetailCommerceValidatorRulesAttribute::isSkippableAttribute(retailInternalOrgProductAttributeValue.Value))
                {
                    // Set description: 'Attribute value translation for specified channel attribute override is missing for language %1'
                    str description = strFmt("@Retail:RetailCommerceValidatorAttribRu004DynamicDescription", retailCommerceValidatorWorkChannelLanguages.LanguageId);
            
                    // Find or create context of records
                    RetailCommerceValidatorLogContext logContext = RetailCommerceValidatorLogContext::findOrCreateContextChannelAttributeProduct(_validatorTest.ValidationId, OMOperatingUnitId, retailInternalOrgProductAttributeValue.Product, retailInternalOrgProductAttributeValue.Attribute);

                    // Log the issue
                    RetailCommerceValidatorLog::addLog(
                        logContext,
                        "@Retail:ValidationRuleCounterMetricId",
                        description,
                        _validatorTest.TestId,
                        "@Retail:RetailCommerceValidatorAttribRu004"
                        );

                    // Increase the counter of issues
                    resultsCounter++;
                }
            }
        }

        return [resultsCounter];
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSkippableAttribute</Name>
				<Source><![CDATA[
    internal static boolean isSkippableAttribute(EcoResValueRecId  _valueRecId)
    {
        EcoResTextValue  ecoResTextValue = EcoResTextValue::find(_valueRecId);

        boolean  skipAttribute;
        int  length = strlen(ecoResTextValue.TextValue);

        if (strscan(ecoResTextValue.TextValue, '<p>', 1, length) ||
            strscan(ecoResTextValue.TextValue, '<?xml', 1, length))
        {
            skipAttribute = true;
        }

        return skipAttribute;
           
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>