<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWorkDeferredPutProcessingServiceContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class is the contract class used for the <c>WHSWorkDeferredPutProcessingService</c> service.
/// </summary>
[DataContract]
public class WHSWorkDeferredPutProcessingServiceContract 
{
    private WHSWorkId            workId;
    private LineNum              workLineNumber;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmWorkId</Name>
				<Source><![CDATA[
    [DataMember]
    public WHSWorkId parmWorkId(WHSWorkId _workId = workId)
    {
        workId = _workId;
        return workId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLineNumber</Name>
				<Source><![CDATA[
    [DataMember]
    public LineNum parmWorkLineNumber(LineNum _workLineNumber = workLineNumber)
    {
        workLineNumber = _workLineNumber;
        return workLineNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromWorkDeferredPutProcessingTask</Name>
				<Source><![CDATA[
    private void initFromWorkDeferredPutProcessingTask(WHSWorkDeferredPutProcessingTask _workDeferredPutProcessingTask)
    {  
        this.parmWorkId(_workDeferredPutProcessingTask.WorkId);
        this.parmWorkLineNumber(_workDeferredPutProcessingTask.WorkLineNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {}

]]></Source>
			</Method>
			<Method>
				<Name>newFromTask</Name>
				<Source><![CDATA[
    /// <summary>
    /// creates a contract based on the <c>WHSWorkDeferredPutProcessingTask</c> task.
    /// </summary>
    /// <param name = "_workDeferredPutProcessingTask">The task that should be processed.</param>    
    /// <returns>A new contract.</returns>
    [Hookable(false)]
    internal static WHSWorkDeferredPutProcessingServiceContract newFromTask(WHSWorkDeferredPutProcessingTask _workDeferredPutProcessingTask)
    {
        WHSWorkDeferredPutProcessingServiceContract contract = new WhsWorkDeferredPutProcessingServiceContract();

        contract.initFromWorkDeferredPutProcessingTask(_workDeferredPutProcessingTask);

        return contract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>