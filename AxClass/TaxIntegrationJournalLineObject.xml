<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxIntegrationJournalLineObject</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxIntegrationJournalLineObject</c> class is an object class for journal lines.
/// </summary>
public class TaxIntegrationJournalLineObject extends TaxIntegrationLineObject
{
    private LedgerJournalTaxLine ledgerJournalTaxLine;
    private TaxIntegrationDirection direction;
    private boolean prepaid;

    private ExchRate accountingCurrencyFixedExchangeRate;
    private ExchRate reportingCurrencyFixedExchangeRate;

    private InvoiceId invoiceId;

    private TaxCode taxCode;
    private VatDueDate_W vatRegisterDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructOnDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationJournalLineObject</c>.
    /// </summary>
    /// <param name = "_tableId">The table id.</param>
    /// <param name = "_recId">The rec id.</param>
    /// <param name = "_parentDocument">The parent document.</param>
    /// <returns>The new <c>TaxIntegrationJournalLineObject</c>.</returns>
    public static TaxIntegrationJournalLineObject constructOnDocument(
        RefTableId _tableId,
        RefRecId _recId,
        TaxIntegrationDocumentObject _parentDocument)
    {
        var line = new TaxIntegrationJournalLineObject(_tableId, _recId);
        line.parentDocument = _parentDocument;
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructOnLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>TaxIntegrationJournalLineObject</c>.
    /// </summary>
    /// <param name = "_tableId">The table id.</param>
    /// <param name = "_recId">The rec id.</param>
    /// <param name = "_parentLine">The parent line.</param>
    /// <returns>The new <c>TaxIntegrationJournalLineObject</c>.</returns>
    public static TaxIntegrationJournalLineObject constructOnLine(
        RefTableId _tableId,
        RefRecId _recId,
        TaxIntegrationLineObject _parentLine)
    {
        var line = new TaxIntegrationJournalLineObject(_tableId, _recId);
        line.parentLine = _parentLine;
        return line;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLegacyTaxableLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the legacy taxable line for journal.
    /// </summary>
    /// <returns>The legacy taxable line.</returns>
    [SysObsolete("The method has been deprecated, use TaxIntegrationLineObject.getTaxableLine instead", false, 15\7\2023)]
    public final LedgerJournalTaxLine getLegacyTaxableLine()
    {
        return this.ledgerJournalTaxLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLegacyTaxableLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the legacy taxable document for journal.
    /// </summary>
    /// <param name = "_value">The legacy taxable document for journal.</param>
    [SysObsolete("The method has been deprecated, use TaxIntegrationLineObject.setTaxableLine instead.", false, 15\7\2023)]
    public final void setLegacyTaxableLine(LedgerJournalTaxLine _value)
    {
        this.ledgerJournalTaxLine = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrepaid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets whether it is prepaid.
    /// </summary>
    /// <returns>Whether it is prepaid.</returns>
    public final boolean isPrepaid()
    {
        return this.prepaid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrepaid</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets whether it is prepaid.
    /// </summary>
    /// <param name = "_value">Whether it is prepaid.</param>
    public final void setPrepaid(boolean _value)
    {
        this.prepaid = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the fixed exchange rate of the accounting currency.
    /// </summary>
    /// <returns>The fixed exchange rate of the accounting currency.</returns>
    public final ExchRate getAccountingCurrencyFixedExchangeRate()
    {
        if (this.getAncestorDocument().isJournal())
        {
            return this.accountingCurrencyFixedExchangeRate;
        }
        else
        {
            return this.getAncestorDocument().getAccountingCurrencyFixedExchangeRate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fixed exchange rate of the accounting currency.
    /// </summary>
    /// <param name = "_value">The fixed exchange rate of the accounting currency.</param>
    public final void setAccountingCurrencyFixedExchangeRate(ExchRate _value)
    {
        this.accountingCurrencyFixedExchangeRate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the fixed exchange rate of the reporting currency.
    /// </summary>
    /// <returns>The fixed exchange rate of the reporting currency.</returns>
    public final ExchRate getReportingCurrencyFixedExchangeRate()
    {
        if (this.getAncestorDocument().isJournal())
        {
            return this.ReportingCurrencyFixedExchangeRate;
        }
        else
        {
            return this.getAncestorDocument().getReportingCurrencyFixedExchangeRate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the fixed exchange rate of the reporting currency.
    /// </summary>
    /// <param name = "_value">The fixed exchange rate of the reporting currency.</param>
    public final void setReportingCurrencyFixedExchangeRate(ExchRate _value)
    {
        this.ReportingCurrencyFixedExchangeRate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the direction.
    /// </summary>
    /// <returns>The direction.</returns>
    /// <remarks>It is different from <c>TaxDirection</c>.</remarks>
    public final TaxIntegrationDirection getDirection()
    {
        return this.direction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the direction.
    /// </summary>
    /// <param name = "_value">The direction.</param>
    /// <remarks>It is different from <c>TaxDirection</c>.</remarks>
    public final void setDirection(TaxIntegrationDirection _value)
    {
        this.direction = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the invoice id.
    /// </summary>
    /// <returns>The invoice id.</returns>
    public final InvoiceId getInvoiceId()
    {
        return this.invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the invoice id.
    /// </summary>
    /// <param name = "_value">The invoice id.</param>
    public final void setInvoiceId(InvoiceId _value)
    {
        this.invoiceId = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax code assigned on line.
    /// </summary>
    /// <returns>The tax code assigned on line.</returns>
    public final TaxCode getTaxCode()
    {
        return this.taxCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets tax code assigned on line.
    /// </summary>
    /// <param name = "_value">The tax code assigned on line.</param>
    public final void setTaxCode(TaxCode _value)
    {
        this.taxCode = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineCalculationDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the calculation date and copies to line.
    /// </summary>
    protected internal final void determineCalculationDate()
    {
        // The date retrieved is the correct date. No need to determine again.
        return;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATRegisterDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the date of VAT register.
    /// </summary>
    /// <returns>The date of VAT register.</returns>
    public final VatDueDate_W getVATRegisterDate()
    {
        return this.vatRegisterDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVATRegisterDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the date of VAT register.
    /// </summary>
    /// <param name = "_value">The date of VAT register.</param>
    public final void setVATRegisterDate(VatDueDate_W _value)
    {
        this.vatRegisterDate = _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isVendorInvoiceJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if it is vendor invoice journal.
    /// </summary>
    /// <returns>true if it is vendor invoice journal; otherwise, false.</returns>
    internal boolean isVendorInvoiceJournal()
    {
        LedgerJournalTable ledgerJournalTable = this.getAncestorDocument().getLocalRecord() as LedgerJournalTable;
        return (ledgerJournalTable.journalType == LedgerJournalType::VendInvoiceRegister);
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSendToTaxService</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the line should be sent to tax service.
    /// </summary>
    /// <returns>True if the line should be sent to tax service; otherwise, false.</returns>
    public boolean shouldSendToTaxService()
    {
        if (this.getTaxCode())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>