<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqAutoCreate</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class PurchReqAutoCreate
{
    Common                      buffer;
    Object                      callBackObject;
    PurchReqTable               purchReqTable;
    PurchReqLine                purchReqLine;
    PurchReqTable               newPurchReqTable;
    PurchReqBusJustification    purchReqBusJustification;
    Set                         purchReqLineSet;
    boolean                     showInfo;
    PurchReqPreparerRefRecId    preparerRecId;
    boolean                     isCurrentWorkerPreparer;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public void create()
    {
        ttsbegin;
        this.init();
        this.setPurchReqTable();
        this.createPurchReqTable();

        this.setPurchReqBusJustification(NoYes::Yes);
        this.createPurchReqBusJustification();

        while (this.moveNextLine())
        {
            if (this.includeLine())
            {
                this.setPurchReqLine();
                this.createPurchReqLine();
                this.setMarkupTrans();
                this.setPurchReqBusJustification(NoYes::No);
                this.createPurchReqBusJustification();
            }
        }
        this.endUpdate();
        ttscommit;

        PurchReqWFStatusTransitionHelper::setPurchReqTable2Draft(purchReqTable.RecId);

        purchReqTable.reread();

        newPurchReqTable = purchReqTable;

        if (showInfo)
        {
            info (strfmt("@SYS112223", purchReqTable.PurchReqId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchReqBusJustification</Name>
				<Source><![CDATA[
    protected void createPurchReqBusJustification()
    {
        purchReqBusJustification.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchReqLine</Name>
				<Source><![CDATA[
    protected void createPurchReqLine()
    {
        purchReqLine.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPurchReqTable</Name>
				<Source><![CDATA[
    protected void createPurchReqTable()
    {
        purchReqTable.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
    protected void endUpdate()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>includeLine</Name>
				<Source><![CDATA[
    abstract protected boolean includeLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveNextLine</Name>
				<Source><![CDATA[
    abstract protected boolean moveNextLine()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPurchReqTable</Name>
				<Source><![CDATA[
    PurchReqTable newPurchReqTable()
    {
        return newPurchReqTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    abstract public Common parmBuffer(Common _buffer = buffer)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPreparer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>PurchReqPreparerRefRecId</c> based on the buffer of the subclass.
    /// </summary>
    /// <returns>An <c>PurchReqPreparerRefRecId</c> value.</returns>
    abstract public PurchReqPreparerRefRecId getPreparer()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallBackObject</Name>
				<Source><![CDATA[
    public Object parmCallBackObject(Object _callBackObject = callBackObject)
    {
        callBackObject = _callBackObject;
        return callBackObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCurrentWorkerPreparer</Name>
				<Source><![CDATA[
    public boolean parmIsCurrentWorkerPreparer(boolean _isCurrentWorkerPreparer = isCurrentWorkerPreparer)
    {
        isCurrentWorkerPreparer = _isCurrentWorkerPreparer;

        return isCurrentWorkerPreparer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreparer</Name>
				<Source><![CDATA[
    public PurchReqPreparerRefRecId parmPreparer(PurchReqPreparerRefRecId _preparerRecId = preparerRecId)
    {
        preparerRecId = _preparerRecId;

        return preparerRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchReqLineSet</Name>
				<Source><![CDATA[
    public Set parmPurchReqLineSet(Set _set)
    {
        purchReqLineSet = _set;

        return purchReqLineSet;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Decides the information need to be shown or not.
    /// </summary>
    /// <param name="_showInfo">
    ///     Indicates whether an infolog should be presented to user for successful PO creation.
    /// </param>
    /// <returns>
    /// A boolean value that indicates whether the information needs to be shown or not.
    /// </returns>
    public boolean parmShowInfo(boolean _showInfo = showInfo)
    {
        showInfo = _showInfo;

        return showInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTargetPurchReqId</Name>
				<Source><![CDATA[
    abstract public PurchReqId parmTargetPurchReqId(PurchReqId _purchReqId = '')
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchReqType</Name>
				<Source><![CDATA[
    abstract protected PurchReqType purchReqType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkupTrans</Name>
				<Source><![CDATA[
    protected void setMarkupTrans()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqBusJustification</Name>
				<Source><![CDATA[
    protected void setPurchReqBusJustification(NoYes isPurchReqTable)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqLine</Name>
				<Source><![CDATA[
    protected void setPurchReqLine()
    {
        purchReqLine.clear();
        purchReqLine.initValue();
        purchReqLine.initFromPurchReqTable(purchReqTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchReqTable</Name>
				<Source><![CDATA[
    protected void setPurchReqTable()
    {
        NumberSeq       num;
        PurchReqId      tmpReqId;

        purchReqTable.clear();
        purchReqTable.initValue();

        if (!isCurrentWorkerPreparer)
        {
            purchReqTable.Originator = preparerRecId;
        }

        tmpReqId = this.parmTargetPurchReqId();
        if (this.parmTargetPurchReqId() == '')
        {
            num = NumberSeq::newGetNum(PurchParameters::numRefPurchReqId());

            tmpReqId = num.num();
        }

        if (PurchReqTable::exist(tmpReqId))
        {
            num.abort();
            checkFailed("@SYS107926");
            checkFailed(strfmt("@SYS107927", tmpReqId));
            throw error("@SYS23020");
        }
        if (num)
        {
            num.used();
        }
        purchReqTable.PurchReqId = tmpReqId;

        purchReqTable.PurchReqType = this.purchReqType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInfo</Name>
				<Source><![CDATA[
    protected boolean showInfo()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a <c>PurchAutoCreate</c> instance based on the TableId of the buffer
    /// </summary>
    /// <param name = "_buffer">A buffer whose TableId determines The subclass of <c>PurchAutoCreate to return</c></param>
    /// <returns>An object of one of the subclasses of <c>PurchAutoCreate</c>.</returns>
    public static PurchReqAutoCreate construct(Common _buffer)
    {
        SysTableNameFactoryAttribute    attribute       = new SysTableNameFactoryAttribute(tableId2Name(_buffer.TableId));
        PurchReqAutoCreate              purchReqAutoCreate = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(PurchReqAutoCreate), attribute) as PurchReqAutoCreate;

        if (!purchReqAutoCreate)
        {
            throw error(strFmt("@SYS19306", funcName()));
        }

        return purchReqAutoCreate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAutoCreate</Name>
				<Source><![CDATA[
    static PurchReqAutoCreate newAutoCreate(Common _buffer, Object _callBackObject = null)
    {
        PurchReqAutoCreate  purchReqAutoCreate = PurchReqAutoCreate::construct(_buffer);
        
        purchReqAutoCreate.parmBuffer(_buffer);
        purchReqAutoCreate.parmCallBackObject(_callBackObject);
        purchReqAutoCreate.parmPreparer(purchReqAutoCreate.getPreparer());

        return purchReqAutoCreate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
