<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using IFeatureLifecycle = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureLifecycle;
using IFeatureMetadata = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata;
using FeatureLifecycleStage = Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.FeatureLifecycleStage;
using IFeatureRuntimeToggle =  Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureRuntimeToggle;

/// <summary>
/// Feature for extending document identification in the electronic document submission log.
/// </summary>
[ExportAttribute(identifierstr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature implements IFeatureLifecycle, IFeatureMetadata, IFeatureMetadataEnablementNotifiable, IFeatureRuntimeToggle, IFeaturePrerequisites
{
    private static BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature singleton;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Feature instance.
    /// </summary>
    /// <returns>Feature instance object.</returns>
    [Hookable(false)]
    public static BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature instance()
    {
        if (!singleton)
        {
            singleton = new BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature();
        }

        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LabelId label()
    {
        return literalStr("@BusinessDocumentSubmissionService:BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::AccountsReceivable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LabelId summary()
    {
        return literalStr("@BusinessDocumentSubmissionService:BusinessDocumentMoveEinvoiceXmlToAttachmentsFeatureDescription");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2239986';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean canEnable()
    {
        #ISOCountryRegionCodes
        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT, #isoES]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cannotEnableMessage</Name>
				<Source><![CDATA[
    public LabelId cannotEnableMessage()
    {
        return strFmt("@BusinessDocumentSubmissionService:BusinessDocumentMoveEinvoiceXmlToAttachmentFeatureCanEnableLabel", SysLabel::labelId2String2(BusinessDocumentMoveEinvoiceXmlToAttachmentsFeature::instance().label()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean isEnabled()
    {
        #ISOCountryRegionCodes
        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT, #isoES]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    void onEnabled()
    {
        var taskClassNumber = classNum(BusinessDocumentEInvoiceTransferXmlBatchJob_IT);

        var dictClass = new DictClass(taskClassNumber);
        Batch batchTask;
        select firstonly RecId from batchTask
            where batchTask.ClassNumber == taskClassNumber;
        if (dictClass != null && !batchTask.RecId && BatchJob::isSystemTask(dictClass))
        {
            var task = dictClass.makeObject();
            if (task != null)
            {
                dictClass.callObject(methodStr(ISysBatchTask, scheduleForBatchExecution), task);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    void onDisabled()
    {
        return;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>