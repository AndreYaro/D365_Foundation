<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineServiceOrderImpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The tax model class for <c>SMAServiceOrderLine</c>.
/// </summary>
[TaxModelDocumentLineAttribute(tableStr(SMAServiceOrderLine))]
public class TaxModelDocLineServiceOrderImpl extends TaxModelDocLineBaseImpl
    implements TaxModelTaxable
{
    SMAServiceOrderLine     smaServiceOrderLine;
    SMAServiceOrderTable    smaServiceOrderTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canModifyTaxInformation</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if the transaction tax information can be modified or not.
    /// </summary>
    /// <returns>
    /// True if the tax information of document line can be modified; otherwise, false.
    /// </returns>
    public NoYes canModifyTaxInformation()
    {
        smaServiceOrderLine = smaServiceOrderLine::findRecId(this.getDocumentLineMainTableRecId());
        return smaServiceOrderLine.ServiceOrderStatus != SMAServiceOrderStatus::Posted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustTable</c> based on the cust account on the transaction line.
    /// </summary>
    /// <returns>
    /// The <c>CustTable</c>
    /// </returns>
    public CustTable getCustTable()
    {
        CustTable custTable;

        custTable = CustTable::find(SMAServiceOrderTable::find(smaServiceOrderLine.ServiceOrderId).CustAccount);

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLogisticsPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax <c>LogisticsPostalAddress</c> of this transaction document line.
    /// </summary>
    /// <param name = "_type">The transaction tax information type.</param>
    /// <returns>
    /// The tax <c>LogisticsPostalAddress</c>
    /// </returns>
    /// This method is used to init TransTaxInformation.CompanyLocation, which should be defaulted from transaction line delivery address
    public LogisticsPostalAddress getTaxLogisticsPostalAddress(TransTaxInformationType_IN _type = TransTaxInformationType_IN::Normal)
    {
        if (this.isBasedOnReferenceTaxModelDocLine())
        {
            return this.getReferenceTaxModelDocLine().getTaxLogisticsPostalAddress(_type);
        }
        else
        {
            InventDim inventDim               = InventDim::find(this.getInventDimId());
            LogisticsLocationRecId logisticsLocationRecId  = TaxLogisticsLocationControllerHelper_IN::getDefaultLogisticsLocation(inventDim.InventLocationId, inventDim.InventSiteId);

            return LogisticsPostalAddress::findByLocation(logisticsLocationRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        smaServiceOrderLine = _documentLineMap;
        smaServiceOrderTable = SMAServiceOrderTable::find(smaServiceOrderLine.ServiceOrderId);
        super(_documentLineMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVendTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>VendTable</c> based on the vendor account on the transaction line.
    /// </summary>
    /// <returns>
    /// The <c>VendTable</c>
    /// </returns>
    public VendTable getVendTable()
    {
        VendTable vendTable;

        if (smaServiceOrderLine.OffsetAccountTypeExpense == LedgerJournalACType::Vend)
        {
            vendTable = VendTable::findByLedgerDimension(smaServiceOrderLine.LedgerDimension);
        }

        return vendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentInvoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction invoice date
    /// </summary>
    /// <returns>
    /// The transaction invoice date
    /// </returns>
    public InvoiceDate getDocumentInvoiceDate()
    {
        return DateTimeUtil::date(smaServiceOrderTable.CreatedDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction document date
    /// </summary>
    /// <returns>
    /// The transaction document date
    /// </returns>
    public DocumentDate getDocumentDate()
    {
        return DateTimeUtil::date(smaServiceOrderTable.CreatedDateTime);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>