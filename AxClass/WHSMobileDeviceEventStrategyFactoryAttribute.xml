<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileDeviceEventStrategyFactoryAttribute</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSMobileDeviceQueueEventStrategyFactoryAttribute</c> is an attribute used for instantiating <c>WHSMobileDeviceQueueEvent</c> classes.
/// </summary>
internal final class WHSMobileDeviceEventStrategyFactoryAttribute extends SysAttribute implements SysExtensionIAttribute
{
    private WHSMobileDeviceQueueEventType whsMobileDeviceQueueEventType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(WHSMobileDeviceQueueEventType _whsMobileDeviceQueueEventType)
    {
        whsMobileDeviceQueueEventType = _whsMobileDeviceQueueEventType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCacheKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the key used for storing cached data for this attribute.
    /// </summary>
    /// <returns>A string representing the cache key.</returns>
    [Hookable(false)]
    public final str parmCacheKey()
    {
        return classStr(WHSMobileDeviceEventStrategyFactoryAttribute)+';'+int2str(enum2int(whsMobileDeviceQueueEventType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSingleton</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the same instance should be returned by the extension framework for a given extension.
    /// </summary>
    /// <returns>true, as the strategy implementations are stateless, the instances are reused for performance.</returns>
    public boolean useSingleton()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>