<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCInstrumentationRuntimeActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class PCInstrumentationRuntimeActivities
{
    private PCInstrumentationLogger logger;

    private const str Prefix = 'Runtime.';

    private const str InitForm                      = 'Form.Init';
    private const str CloseOk                       = 'Form.CloseOk';
    private const str LoadArgsForm                  = 'Form.LoadArgs';
    private const str InterCompany                  = 'Form.InterCompany';
    private const str Error                         = 'Form.Error';
    private const str ControlStateChanged           = 'Form.ControlStateChanged';
    private const str RequestSolutionCallback       = 'Form.RequestSolutionCallback';
    private const str Features                      = 'Features';
    private const str RequestCurrentValuesCallback  = 'Form.RequestCurrentValuesCallback';

    // Custom properties
    private const str RuntimeMode = 'RuntimeMode';
    private const str InterCompanyValue = 'IsInterCompany';
    private const str ControlState = 'ControlState';
    private const str FeatureName = 'FeatureName';
    private const str IsFeatureEnabled = 'IsFeatureEnabled';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(PCInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static PCInstrumentationRuntimeActivities newFromLogger(PCInstrumentationLogger _logger)
    {
        return new PCInstrumentationRuntimeActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivity activity(str _activityName)
    {
        return logger.activity(Prefix + _activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForm</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext initForm()
    {
        return logger.activityContext(this.activity(InitForm));
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext closeOk()
    {
        return logger.activityContext(this.activity(CloseOk));
    }

]]></Source>
			</Method>
			<Method>
				<Name>requestSolutionCallback</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext requestSolutionCallback()
    {
        return logger.activityContext(this.activity(RequestSolutionCallback));
    }

]]></Source>
			</Method>
			<Method>
				<Name>requestCurrentValuesCallback</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext requestCurrentValuesCallback()
    {
        return logger.activityContext(this.activity(RequestCurrentValuesCallback));
    }

]]></Source>
			</Method>
			<Method>
				<Name>error</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext error()
    {
        return logger.activityContext(this.activity(Error));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadArgs</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext loadArgs(PCRuntimeMode _runtimeMode)
    {
        SysInstrumentationActivity activity = this.activity(LoadArgsForm);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);
        activityContext.addCustomProperty(RuntimeMode, enum2Symbol(enumNum(PCRuntimeMode), enum2int(_runtimeMode)));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>controlStateChanged</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext controlStateChanged(int _state)
    {
        SysInstrumentationActivity activity = this.activity(LoadArgsForm);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);
        activityContext.addCustomProperty(ControlState, int2Str(_state));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>interCompany</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext interCompany(boolean _isInterCompany)
    {
        SysInstrumentationActivity activity = this.activity(InterCompany);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);
        activityContext.addCustomProperty(InterCompanyValue, any2str(_isInterCompany));

        return activityContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>feature</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext feature(str _featureName, boolean _isEnabled)
    {
        SysInstrumentationActivity activity = this.activity(Features);
        SysInstrumentationActivityContext activityContext = logger.activityContext(activity);
        activityContext.addCustomProperty(FeatureName, _featureName);
        activityContext.addCustomProperty(IsFeatureEnabled, any2str(_isEnabled));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>