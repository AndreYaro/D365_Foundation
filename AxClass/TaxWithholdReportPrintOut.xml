<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdReportPrintOut</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxWithholdReportPrintOut</c> class prints a <c>TaxWithholdReport_BR</c>
/// </summary>
public class TaxWithholdReportPrintOut
{
    Args                        taxWithholdReport;
    TaxWithholdReportVoucher    taxWithholdReportVoucher;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        private void run()
    {
        TaxWithholdReportPrintOut::printout(taxWithholdReportVoucher.TaxWithholdPeriod, taxWithholdReport);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runMenuItem</Name>
				<Source><![CDATA[
        private void runMenuItem(Args _args)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setParameters</Name>
				<Source><![CDATA[
        private void setParameters(Args _args)
    {
        taxWithholdReport = _args;

        if (_args && _args.dataset() == tablenum(TaxWithholdReportVoucher))
        {
            taxWithholdReportVoucher = _args.record();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prints the <c>TaxWithholdReport_BR</c> report
    /// </summary>
    /// <param name="_args">
    /// The <c>Args</c> object
    /// </param>
    static void  main(Args  _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR00061, funcName());

        TaxWithholdReportPrintOut   taxWithholdReportPrintOut  = new TaxWithholdReportPrintOut();

        taxWithholdReportPrintOut.setParameters(_args);
        taxWithholdReportPrintOut.run();
    }

]]></Source>
			</Method>
			<Method>
				<Name>printout</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the <c>TaxWithHoldReporting</c> menu item to show <c>TaxWithholdReport_BR</c> report
    /// </summary>
    /// <param name="_taxPeriod">
    /// A <c>TaxPeriod</c> object
    /// </param>
    /// <param name="_args">
    /// The <c>Args</c> object
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static void printout(TaxPeriod _taxPeriod, Args _args)
    {
        TaxPeriodHead           taxPeriodHead;
        TaxAuthorityAddress     taxAuthorityAddress;

        taxPeriodHead = TaxPeriodHead::find(_taxPeriod);

        select firstonly TaxReportLayout from taxAuthorityAddress
            index hint TaxAuthorityIdx
            where taxAuthorityAddress.TaxAuthority == taxPeriodHead.TaxAuthority;

        switch (taxAuthorityAddress.TaxReportLayout)
        {
            case TaxReportLayout::Default:
                if (_args)
                {
                    new MenuFunction(menuitemoutputstr(TaxWithHoldReporting), MenuItemType::Output).run(_args);
                }
                break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>