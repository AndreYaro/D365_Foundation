<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PSAProjAndContractInvoiceController_ApplicationSuite_SA_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(PSAProjAndContractInvoiceController))]
internal final class PSAProjAndContractInvoiceController_ApplicationSuite_SA_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getReportTitle</Name>
				<Source><![CDATA[
    protected ReportTitle getReportTitle(
        MenuItemName _menuItemName,
        boolean _isProforma,
        PrintCopyOriginal _printCopyOriginal)
    {
        #ISOCountryRegionCodes
        ReportTitle ret = next getReportTitle(_menuItemName, _isProforma, _printCopyOriginal);

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoSA]))
        {
            PrintCopyOriginal printCopyOriginal = 
                (_printCopyOriginal == PrintCopyOriginal::Copy
                || _menuItemName == menuitemOutputStr(ProjInvoiceCopy)
                || _menuItemName == menuitemOutputStr(PSAProjInvoiceCopy)) 
                    ? PrintCopyOriginal::Copy
                    : _printCopyOriginal;
            boolean isCreditNote = invoiceJournal.InvoiceAmount < 0;
            boolean isDebitNote;

            if (!isCreditNote)
            {
                isDebitNote = CustVendCreditInvoicingJour::find(invoiceJournal.TableId, invoiceJournal.Recid).CustVendCorrectedInvoiceId != '';
            }

            ret = CustInvoiceJour::getDocumentTitle_SA(
                isCreditNote,
                isDebitNote,
                printCopyOriginal,
                _isProforma,
                false,
                invoiceJournal.LanguageId);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>