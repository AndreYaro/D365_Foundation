<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReleaseToWarehouseController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSReleaseToWarehouseController</c> class is a controller class for the <c>WHSReleaseToWarehouseService</c> service class.
/// </summary>
[SysOperationJournaledParameters(true)]
public final class WHSReleaseToWarehouseController extends SysOperationServiceController implements BatchRetryable,  SysErrorMessageHelpScopeIBatchProvider
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    private static ClassDescription description()
    {
        return "@SYP4860549";
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(IdentifierName _className = '', IdentifierName _methodName='', SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Asynchronous)
    {
        IdentifierName	parmClassName	= _className != '' ? _className : classStr(WHSReleaseToWarehouseService);
        IdentifierName	parmMethodName	= _methodName != '' ? _methodName : methodStr(WHSReleaseToWarehouseService, autoReleaseTransferOrders);

        super(parmClassName, parmMethodName, _executionMode);

        this.parmDialogCaption(WHSReleaseToWarehouseController::description());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller = new WHSReleaseToWarehouseController(
            classstr(WHSReleaseToWarehouseService),
            methodstr(WHSReleaseToWarehouseService, autoReleaseTransferOrders),
			SysOperationExecutionMode::Synchronous);

        controller.parmArgs(_args);
        controller.parmDialogCaption(WHSReleaseToWarehouseController::description());

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContextBatchServer(this))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static void main(Args _args)
    {
        WHSReleaseToWarehouseController controller = WHSReleaseToWarehouseController::construct(_args);
        
        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContextBatchController(controller))
        {
            controller.startOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorMessageHelpScopeFormName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the form name used for the error context using a <c>SysErrorMessageHelpScope</c> class.
    /// </summary>
    /// <returns>The form name used for the error context.</returns>
    [Hookable(false)]
    public FormName errorMessageHelpScopeFormName()
    {
        return strFmt('%1_%2', formStr(Dialog), classStr(WHSReleaseToWarehouseController));
    }

]]></Source>
			</Method>
			<Method>
				<Name>errorMessageHelpScopeActionName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the action name used for the error context using a <c>SysErrorMessageHelpScope</c> class.
    /// </summary>
    /// <returns>The action name used for the error context.</returns>
    [Hookable(false)]
    public str errorMessageHelpScopeActionName()
    {
        return menuItemActionStr(WHSTransferAutoRTW);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>