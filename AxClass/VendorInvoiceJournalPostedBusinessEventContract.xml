<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceJournalPostedBusinessEventContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract for the <c>VendorInvoiceJournalPostedBusinessEvent</c>, <c>VendorInvoiceApprovalJournalPostedBusinessEvent</c>,
///  and <c>VendorInvoiceRegisterPostedBusinessEvent</c> business events.
/// </summary>
[DataContract]
public final class VendorInvoiceJournalPostedBusinessEventContract extends BusinessEventsContract
{
    private VendInvoiceAccount invoiceAccount;
    private VendInvoiceId invoiceId;
    private PurchIdBase purchId;
    private TransDate invoiceDate;
    private DueDate invoiceDueDate;
    private AmountMST invoiceAmount;
    private LegalEntityDataAreaId legalEntity;
  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromVendInvoiceJour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>VendorInvoiceJournalPostedBusinessEventContract</c> from a <c>VendInvoiceJour</c> record.
    /// </summary>
    /// <param name = "_vendInvoiceJour">A <c>VendInvoiceJour</c> record.</param>
    /// <returns>A <c>VendorInvoiceJournalPostedBusinessEventContract</c>.</returns>
    public static VendorInvoiceJournalPostedBusinessEventContract newFromVendInvoiceJour(VendInvoiceJour _vendInvoiceJour)
    {
        var contract = new VendorInvoiceJournalPostedBusinessEventContract();
        contract.initialize(_vendInvoiceJour);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(VendInvoiceJour _vendInvoiceJour)
    {
        invoiceAccount = _vendInvoiceJour.InvoiceAccount;
        invoiceId = _vendInvoiceJour.InvoiceId;
        purchId = _vendInvoiceJour.PurchId; 
        invoiceDate = _vendInvoiceJour.InvoiceDate;
        invoiceDueDate = _vendInvoiceJour.DueDate;
        invoiceAmount = _vendInvoiceJour.InvoiceAmountMST;
        legalEntity = _vendInvoiceJour.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    [DataMember('InvoiceAccount'), BusinessEventsDataMember("@AccountsPayable:InvoiceAccount")]
    public VendInvoiceAccount parmInvoiceAccount(VendInvoiceAccount _invoiceAccount = invoiceAccount)
    {
        invoiceAccount = _invoiceAccount;

        return invoiceAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceId</Name>
				<Source><![CDATA[
    [DataMember('InvoiceId'), BusinessEventsDataMember("@AccountsPayable:InvoiceId")]
    public VendInvoiceId parmInvoiceId(VendInvoiceId _invoiceId = invoiceId)
    {
        invoiceId = _invoiceId;

        return invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchaseOrderId</Name>
				<Source><![CDATA[
    [DataMember('PurchaseOrderId'), BusinessEventsDataMember("@AccountsPayable:PurchaseOrderId")]
    public PurchIdBase parmPurchaseOrderId(PurchIdBase _purchId = purchId)
    {
        purchId = _purchId;

        return purchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceDate</Name>
				<Source><![CDATA[
    [DataMember('InvoiceDate'), BusinessEventsDataMember("@AccountsPayable:BusinessEventInvoiceDate")]
    public TransDate parmInvoiceDate(TransDate _invoiceDate = invoiceDate)
    {
        invoiceDate = _invoiceDate;

        return invoiceDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceDueDate</Name>
				<Source><![CDATA[
    [DataMember('InvoiceDueDate'), BusinessEventsDataMember("@AccountsPayable:InvoiceDueDate")]
    public DueDate parmInvoiceDueDate(DueDate _invoiceDueDate = invoiceDueDate)
    {
        invoiceDueDate = _invoiceDueDate;

        return invoiceDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAmount</Name>
				<Source><![CDATA[
    [DataMember('InvoiceAmountInAccountingCurrency'), BusinessEventsDataMember("@AccountsPayable:InvoiceAmountInAccountingCurrency")]
    public AmountMST parmInvoiceAmount(AmountMST _invoiceAmount = invoiceAmount)
    {
        invoiceAmount = _invoiceAmount;

        return invoiceAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntity</Name>
				<Source><![CDATA[
    [DataMember('LegalEntity'), BusinessEventsDataMember("@AccountsPayable:LegalEntity")]
    public LegalEntityDataAreaId parmLegalEntity(LegalEntityDataAreaId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;

        return legalEntity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>