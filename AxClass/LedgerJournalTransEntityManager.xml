<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransEntityManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerJournalTransEntityManager</c> class manages the <c>LedgerJournalTrans</c> entity.
/// </summary>
/// <remarks>
///    This class is typically used to manage the entity on the transaction forms for the purposes of
///    in-memory rollbacks and data event handling.
/// </remarks>
public class LedgerJournalTransEntityManager
{
    // -------------------------------------
    // Form Datasources
    // -------------------------------------
    FormDataSource ledgerJournalTrans_DS; // Stores a reference to the LedgerJournalTrans_DS on the form
    FormDataSource ledgerJournalTrans_Asset_DS; // Stores a reference to the LedgerJournalTrans_Asset_DS on the form
    FormDataSource ledgerJournalTrans_Project_DS; // Stores a reference to the LedgerJournalTrans_Project_DS on the form
    FormDataSource tax1099Detail_DS; // Stores a reference to the Tax1099Detail_DS on the form

    // <GEERU>
    FormDataSource ledgerJournalTrans_RAsset_DS;
    FormDataSource ledgerJournalTrans_RDeferrals_DS;
    FormDataSource ledgerJournalTrans_RCash_DS;
    // </GEERU>

    // -------------------------------------
    // Entity Management Objects
    // -------------------------------------
    LedgerJournalTransEntityInMemRollback ledgerJournalTransEntityInMemRollback; // Helps manage in-memory rollback.
    LedgerJournTransEntityFrmDatEventManager ledgerJournalTransEntityformDataEventManager; // Helps manage form data events.
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getFormDataEventManager</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an instance of the data event manager that can be used to help manage data events on forms
    ///    on which the entity exists.
    /// </summary>
    /// <returns>
    ///    The instance of the <c>LedgerJournTransEntityFrmDatEventManager</c> class that is owned by this
    ///    class.
    /// </returns>
    public LedgerJournTransEntityFrmDatEventManager getFormDataEventManager()
    {
        ;

        return ledgerJournalTransEntityformDataEventManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInMemoryRollbackManager</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns an instance of the in-memory rollback manager that can be used to perform rollbacks on the
    ///    <c>LedgerJournalTrans</c> entity after an aborted transaction.
    /// </summary>
    /// <returns>
    ///    The instance of the <c>LedgerJournalTransEntityInMemRollback</c> class that is owned by this class.
    /// </returns>
    public LedgerJournalTransEntityInMemRollback getInMemoryRollbackManager()
    {
        return ledgerJournalTransEntityInMemRollback;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>LedgerJournalTransEntityManager</c> class.
    /// </summary>
    /// <param name="_ledgerJournalTrans_DS">
    ///    A non-null <c>LedgerJournalTrans</c> data source of the form.
    /// </param>
    /// <param name="_ledgerJournalTrans_Asset_DS">
    ///    A non-null <c>LedgerJournalTrans_Asset</c> data source of the form.
    /// </param>
    /// <param name="_ledgerJournalTrans_Project_DS">
    ///    A non-null <c>LedgerJournalTrans_Project</c> data source of the form.
    /// </param>
    /// <param name="_tax1099Detail_DS">
    ///    A non-null <c>Tax1099Detail_DS</c> data source of the form.
    /// </param>
    /// <param name="_ledgerJournalTrans_RAsset_DS">
    /// A form's <c>LedgerJournalTrans_RAsset</c> datasource. This may be null.
    /// </param>
    /// <param name="_ledgerJournalTrans_RDeferrals_DS">
    /// A form's <c>LedgerJournalTrans_RDeferrals</c> datasource. This may be null;optional;
    /// </param>
    /// <param name="_ledgerJournalTrans_RCash_DS">
    /// A form's <c>LedgerJournalTrans_RCash</c> datasource. This may be null.
    /// </param>
    public static LedgerJournalTransEntityManager construct(
                    FormDataSource _ledgerJournalTrans_DS,
                    FormDataSource _ledgerJournalTrans_Asset_DS,
                    FormDataSource _ledgerJournalTrans_Project_DS
                    , FormDataSource _tax1099Detail_DS = null
                    , FormDataSource _ledgerJournalTrans_RAsset_DS = null,
                    FormDataSource _ledgerJournalTrans_RDeferrals_DS = null,
                    FormDataSource _ledgerJournalTrans_RCash_DS = null)
    {
        return new LedgerJournalTransEntityManager(
                    _ledgerJournalTrans_DS,
                    _ledgerJournalTrans_Asset_DS,
                    _ledgerJournalTrans_Project_DS
                    , _tax1099Detail_DS
                    // <GEERU>
                    , _ledgerJournalTrans_RAsset_DS,
                    _ledgerJournalTrans_RDeferrals_DS,
                    _ledgerJournalTrans_RCash_DS);
                    // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(FormDataSource _ledgerJournalTrans_DS,
                    FormDataSource _ledgerJournalTrans_Asset_DS,
                    FormDataSource _ledgerJournalTrans_Project_DS
                    , FormDataSource _tax1099Detail_DS = null
                    , FormDataSource _ledgerJournalTrans_RAsset_DS     = null,
                    FormDataSource _ledgerJournalTrans_RDeferrals_DS = null,
                    FormDataSource _ledgerJournalTrans_RCash_DS      = null)

    {
        Debug::assert(_ledgerJournalTrans_DS != null);    // A LedgerJournalTrans datasource is required.

        // Store references to the form datasources.
        ledgerJournalTrans_DS = _ledgerJournalTrans_DS;
        ledgerJournalTrans_Asset_DS = _ledgerJournalTrans_Asset_DS;
        ledgerJournalTrans_Project_DS = _ledgerJournalTrans_Project_DS;

        // Initialize entity management classes.
        ledgerJournalTransEntityInMemRollback = LedgerJournalTransEntityInMemRollback::construct(
            _ledgerJournalTrans_DS,
            _ledgerJournalTrans_Asset_DS,
            _ledgerJournalTrans_Project_DS
            , _tax1099Detail_DS
            //<GEERU>
            , _ledgerJournalTrans_RAsset_DS,
            _ledgerJournalTrans_RDeferrals_DS,
            _ledgerJournalTrans_RCash_DS
            //</GEERU>
            );

        ledgerJournalTransEntityformDataEventManager = LedgerJournTransEntityFrmDatEventManager::construct(
            _ledgerJournalTrans_DS,
            _ledgerJournalTrans_Asset_DS,
            _ledgerJournalTrans_Project_DS
            , _tax1099Detail_DS
            //<GEERU>
            , _ledgerJournalTrans_RAsset_DS,
            _ledgerJournalTrans_RDeferrals_DS,
            _ledgerJournalTrans_RCash_DS
            //</GEERU>
            );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>