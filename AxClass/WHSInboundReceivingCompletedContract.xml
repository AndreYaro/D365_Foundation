<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInboundReceivingCompletedContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
internal final class WHSInboundReceivingCompletedContract implements SysOperationInitializable
{
    protected str packedQuery;
    private Query query;
    private NoYes acceptQuantityExceptions;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newQuery</Name>
				<Source><![CDATA[
    private Query newQuery()
    {
        return new Query(queryStr(WHSInboundReceivingCompleted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAcceptQuantityExceptions</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@WAX:AcceptQuantityExceptions_Label")),
        SysOperationHelpTextAttribute(literalStr("@WAX:AcceptQuantityExceptions_HelpText"))
    ]
    public NoYes parmAcceptQuantityExceptions(NoYes _acceptQuantityExceptions = acceptQuantityExceptions)
    {
        acceptQuantityExceptions = _acceptQuantityExceptions;

        return acceptQuantityExceptions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLoadIdRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the load ID range on the query.
    /// </summary>
    /// <param name = "_loadIdRange">The selected load IDs that need to be queried.</param>
    internal void setLoadIdRange(WHSLoadIdRange _loadIdRange)
    {
        if (!query)
        {
            query = this.newQuery();
        }
        
        SysQuery::findOrCreateRange(query.dataSourceTable(tableNum(WHSLoadTable)), fieldNum(WHSLoadTable, LoadId)).value(_loadIdRange);
        this.parmQuery(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the contract.
    /// </summary>
    public void initialize()
    {
        this.parmQuery(this.newQuery());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    public Query parmQuery(Query _query = query)
    {
        if (prmisDefault(_query) &&	!query)
        {
            query = new Query(SysOperationHelper::base64Decode(packedQuery));
        }
        else
        {
            packedQuery = SysOperationHelper::base64Encode(_query.pack());
            query = _query;
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackedQuery</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute,
        AifQueryTypeAttribute('_packedQuery', queryStr(WHSInboundReceivingCompleted))
    ]
    public str parmPackedQuery(str _packedQuery = packedQuery)
    {
        packedQuery = _packedQuery;

        return packedQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>