<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendDebitCreditNoteController_MY</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendDebitCreditNoteController_MY</c> class is the controller class for the <c>VendDebitCreditNote_MY</c> report.
/// </summary>
public class VendDebitCreditNoteController_MY extends SrsReportRunController implements BatchRetryable
{
    #TaxGSTReports_MY
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the report contract before running the report.
    /// </summary>
    protected void preRunModifyContract()
    {
        SrsReportRdlDataContract    contract    = this.parmReportContract().parmRdlContract();
        TransDate                   fromDate    = contract.getParameter(#parameterFromDate).getValueTyped();
        TransDate                   toDate      = contract.getParameter(#parameterToDate).getValueTyped();
        Query                       query       = this.getFirstQuery();

        // Modify the query contract based on fromDate & toDate.
        SrsReportHelper::addFromAndToDateRangeToQuery(
            query,
            fromDate,
            toDate,
            tableNum(VendInvoiceTrans),
            fieldNum(VendInvoiceTrans, InvoiceDate));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceMY00012, funcName());

        VendDebitCreditNoteController_MY controller = new VendDebitCreditNoteController_MY();

        controller.parmReportName(ssrsReportStr(VendDebitCreditNote_MY, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>