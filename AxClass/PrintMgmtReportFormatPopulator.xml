<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PrintMgmtReportFormatPopulator</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PrintMgmtReportFormatPopulator
{
    #PrintMgmtSetup
    
    private int reports;
    private int added;

    LogisticsAddressCountryRegionISOCode isoCountryCode;
    LogisticsAddressCountryRegionId countryRegionId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds records to the <c>PrintMgmtReportFormat</c> table.
    /// </summary>
    /// <param name = "_deleteAll">
    /// If true, the table will be repopulated from scratch and  this this will break
    /// all existing formats as selected on a PrintMgmtSettings record
    /// </param>
    /// <param name = "_showConfirmation">
    /// Determines whether a confirmation of the added reports is added to the infolog.
    /// </param>
    /// <remarks>
    /// New report formats are manually added in this method by a developer.  The method is called before
    /// the <c>PrintMgmtSetupUIMain</c> form opens to ensure the list of available reports is updated.
    /// </remarks>
    public void populate(boolean _deleteAll = false, boolean _showConfirmation = false)
    {
        reports = 0;
        added = 0;

        isoCountryCode = SysCountryRegionCode::countryInfo();
        countryRegionId = SysCountryRegionCode::getCountryRegionIdByIsoCode(isoCountryCode);

        ttsbegin;

        if (_deleteAll)
        {
            this.deleteAll();
        }

        this.addDocuments();

        ttscommit;

        // Only report if something changed
        if (added > 0)
        {
            if (_showConfirmation)
            {
                info(strFmt("@SYS326915", reports, added));
            }

            bitTest(added, 0); // no nothing to avoid "empty block" best practices error
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>addDocuments</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds records to the <c>PrintMgmtReportFormat</c> table.
    /// </summary>
    protected void addDocuments()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteAll</Name>
				<Source><![CDATA[
    protected void deleteAll()
    {
        PrintMgmtReportFormat printMgmtReportFormat;

        delete_from printMgmtReportFormat;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addStandard</Name>
				<Source><![CDATA[
    protected void addStandard(PrintMgmtDocumentType _type, PrintMgmtReportFormatCountryRegionId _countryRegionId = #NoCountryRegionId)
    {
        PrintMgmtReportFormatName formatName = PrintMgmtDocType::construct(_type).getDefaultReportFormat();

        added += this.add(_type, formatName, formatName, _countryRegionId, true) ? 1 : 0;
        reports++;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addOther</Name>
				<Source><![CDATA[
    protected void addOther(
                PrintMgmtDocumentType _type,
                PrintMgmtReportFormatName _name,
                PrintMgmtReportFormatDescription _description,
                PrintMgmtReportFormatCountryRegionId _countryRegionId)
    {
        added += this.add(_type, _name, _description, _countryRegionId, false) ? 1 : 0;
        reports++;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addNonSSRS</Name>
				<Source><![CDATA[
    protected void addNonSSRS(
                PrintMgmtDocumentType _type,
                PrintMgmtReportFormatName _name,
                PrintMgmtReportFormatDescription _description,
                PrintMgmtReportFormatCountryRegionId _countryRegionId,
                boolean _system)
    {
        added += this.add(_type, _name, _description, _countryRegionId, _system, PrintMgmtSSRS::NonSSRS) ? 1 : 0;
        reports++;
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeDescription</Name>
				<Source><![CDATA[
    protected PrintMgmtReportFormatDescription changeDescription(PrintMgmtReportFormatDescription _description)
    {
        //To retrieve the report design name from the reportname.design format
        //To be used for new custom report designs added
        int descPosition;
        descPosition = strFind(_description,'.',1,strLen(_description));
        return subStr(_description,descPosition + 1, strLen(_description) - (descPosition - 1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>add</Name>
				<Source><![CDATA[
    private boolean add(
            PrintMgmtDocumentType                   _type,
            PrintMgmtReportFormatName               _name,
            PrintMgmtReportFormatDescription        _description,
            PrintMgmtReportFormatCountryRegionId    _countryRegionId,
            PrintMgmtReportFormatSystem             _system, 
            PrintMgmtSSRS                           _ssrs = PrintMgmtSSRS::SSRS
            )
    {
        PrintMgmtReportFormat printMgmtReportFormat;
        boolean isDuplicateFound;
        boolean isSystemFormatWithDifferentDescriptionFound;

        #PrintMgmtSetup

        isSystemFormatWithDifferentDescriptionFound = _system && (select firstOnly RecId from printMgmtReportFormat
            where printMgmtReportFormat.DocumentType == _type
                && printMgmtReportFormat.Description != _description
                && printMgmtReportFormat.System == true).RecId != 0;

        // If the format no longer matches up with the existing system formats, change them all to
        // non-system formats. This ensure existing links / setup will not be broken, but also provides
        // a way for the user to fix the formats.
        if (isSystemFormatWithDifferentDescriptionFound)
        {
            update_recordSet printMgmtReportFormat
                setting System = false
                where printMgmtReportFormat.DocumentType == _type
                    && printMgmtReportFormat.Description != _description
                    && printMgmtReportFormat.System == true;
        }

        isDuplicateFound = (select RecId from printMgmtReportFormat
            where printMgmtReportFormat.DocumentType == _type
                && printMgmtReportFormat.Description == _description
                && printMgmtReportFormat.CountryRegionId == _countryRegionId).RecId != 0;

        if (isDuplicateFound)
        {
            if (isSystemFormatWithDifferentDescriptionFound)
            {
                // We must ensure that the system report always matches the country context
                // of the company. If the the country context has been chagned multiple times
                // such that the report format already exists, we must change it back to system.
                update_recordSet printMgmtReportFormat
                    setting System = true
                    where printMgmtReportFormat.DocumentType == _type
                        && printMgmtReportFormat.Description == _description
                        && printMgmtReportFormat.CountryRegionId == _countryRegionId;
            }
            else
            {
                return false;
            }
        }
        else
        {
            // Add the new format
            printMgmtReportFormat.clear();
            printMgmtReportFormat.DocumentType = _type;
            printMgmtReportFormat.Name = _name;
            printMgmtReportFormat.Description = _description;
            printMgmtReportFormat.CountryRegionId = _countryRegionId;
            printMgmtReportFormat.System = _system;
            printMgmtReportFormat.ssrs = _ssrs;
            printMgmtReportFormat.insert();
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct a new instance of <c>PrintMgmtReportFormatPopulator</c>.
    /// </summary>
    /// <returns>a new instance of <c>PrintMgmtReportFormatPopulator</c>.</returns>
    public static PrintMgmtReportFormatPopulator construct()
    {
        return new PrintMgmtReportFormatPopulator();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>