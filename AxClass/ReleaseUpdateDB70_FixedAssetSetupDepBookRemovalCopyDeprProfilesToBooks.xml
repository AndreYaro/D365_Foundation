<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalCopyDeprProfilesToBooks</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReleaseUpdateDB70_FixedAssetSetupDepBookRemovalCopyDeprProfilesToBooks extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncUpgradeAssetBook</Name>
				<Source><![CDATA[
    /// <summary>
    /// Moves AssetBook.DepreciationExtProfile_JP data into a temporary table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeScriptTableAttribute(tableStr(AssetBook), false, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpgradeAssetBook()
    {
        // Drop the ASSETBOOKDEPEXTPROFILEJPTMP table if it exists.
        this.executeSqlStatement(this.getSQLDropAssetBookUpgradeTmp());

        // Create ASSETBOOKDEPEXTPROFILEJPTMP table.
        this.executeSqlStatement(this.getSQLCreateAssetBookUpdradeTmp());

        // Move AssetBook rows to temp table.
        this.executeSqlStatement(this.getSQLInsertAssetBookUpdradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncUpgradeAssetBook</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies the AssetBookTable depreciation profiles data into AssetBook table.
    /// Moves the AssetBook.DepreciationExtProfile_JP data from the temporary table into AssetBook.DepreciationExtProfile table.
    /// </summary>
    [UpgradeScriptDescriptionAttribute("@FixedAssets:FA_MessageDeveloper_AssetDepBookTableUpgrade"),
     UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
     UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
     UpgradeScriptTableAttribute(tableStr(AssetBookTable), false, true, false, false),
     UpgradeScriptTableAttribute(tableStr(AssetBook), false, true, true, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncUpgradeAssetBook()
    {
        // Update depreciation profiles data in AssetBook table from AssetBookTable
        this.executeSqlStatement(this.getSQLUpdateAssetBookFromAssetBookTable());

        // Move the data into the AssetBook from the ASSETBOOKDEPEXTPROFILEJPTMP table
        this.executeSqlStatement(this.getSQLUpdateAssetBookExtProfileFromTmpTable());

        // drop temporary upgrade table
        this.executeSqlStatement(this.getSQLDropAssetBookUpgradeTmp());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLDropAssetBookUpgradeTmp</Name>
				<Source><![CDATA[
    private str getSQLDropAssetBookUpgradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETBOOKDEPEXTPROFILEJPTMP', 'U') IS NOT NULL
                DROP TABLE ASSETBOOKDEPEXTPROFILEJPTMP";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLCreateAssetBookUpdradeTmp</Name>
				<Source><![CDATA[
    private str getSQLCreateAssetBookUpdradeTmp()
    {
        str sqlStatement = @"
            IF OBJECT_ID ( 'dbo.ASSETBOOKDEPEXTPROFILEJPTMP', 'U') IS NULL
                CREATE TABLE [dbo].[ASSETBOOKDEPEXTPROFILEJPTMP](
                    [ASSETID] [nvarchar](20) NOT NULL,
                    [BOOKID] [nvarchar](10) NOT NULL,
                    [DEPRECIATIONEXTPROFILE_JP] [nvarchar](10) NOT NULL,
                    [DATAAREAID] [nvarchar](4) NOT NULL,
                    [PARTITION] [bigint] NOT NULL,
                 CONSTRAINT [9A189F98-8B7C-4ABC-93B7-A614372D7E7C] PRIMARY KEY CLUSTERED
                (
                    [PARTITION] ASC,
                    [DATAAREAID] ASC,
                    [ASSETID] ASC,
                    [BOOKID] ASC
                )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
                ) ON [PRIMARY]";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLInsertAssetBookUpdradeTmp</Name>
				<Source><![CDATA[
    private str getSQLInsertAssetBookUpdradeTmp()
    {
        str sqlStatement = @"
                INSERT INTO [dbo].[ASSETBOOKDEPEXTPROFILEJPTMP]
                           ([ASSETID]
                           ,[BOOKID]
                           ,[DEPRECIATIONEXTPROFILE_JP]
                           ,[DATAAREAID]
                           ,[PARTITION])
                    SELECT [ASSETID]
                          ,[BOOKID]
                          ,[DEPRECIATIONEXTPROFILE_JP]
                          ,[DATAAREAID]
                          ,[PARTITION]
                    FROM [dbo].[ASSETBOOK]";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLUpdateAssetBookFromAssetBookTable</Name>
				<Source><![CDATA[
    private str getSQLUpdateAssetBookFromAssetBookTable()
    {
        str sqlStatement = @"
            UPDATE [dbo].[ASSETBOOK]
                SET [DEPRECIATIONPROFILE] = BOOKTABLE.DEPRECIATIONPROFILE,
                    [DEPRECIATIONALTPROFILE] = BOOKTABLE.DEPRECIATIONALTPROFILE,
                    [DEPRECIATIONEXTPROFILE] = BOOKTABLE.DEPRECIATIONEXTPROFILE,
                    [DEPRECIATIONACCELERATEDPROFILE_JP] = BOOKTABLE.DEPRECIATIONACCELERATEDPROFILE_JP
                FROM [dbo].[ASSETBOOK] AS BOOK
                    INNER JOIN [dbo].[ASSETBOOKTABLE] AS BOOKTABLE
                        ON (BOOKTABLE.BOOKID     = BOOK.BOOKID    AND
                            BOOKTABLE.PARTITION  = BOOK.PARTITION AND
                            BOOKTABLE.DATAAREAID = BOOK.DATAAREAID)";

        return sqlStatement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSQLUpdateAssetBookExtProfileFromTmpTable</Name>
				<Source><![CDATA[
    private str getSQLUpdateAssetBookExtProfileFromTmpTable()
    {
        str sqlStatement = @"
            UPDATE [dbo].[ASSETBOOK]
                SET [DEPRECIATIONEXTPROFILE] = BOOKTMP.DEPRECIATIONEXTPROFILE_JP
                FROM [dbo].[ASSETBOOK] AS BOOK
                    INNER JOIN [dbo].[ASSETBOOKDEPEXTPROFILEJPTMP] AS BOOKTMP
                        ON (BOOKTMP.ASSETID    = BOOK.ASSETID   AND
                            BOOKTMP.BOOKID     = BOOK.BOOKID    AND
                            BOOKTMP.PARTITION  = BOOK.PARTITION AND
                            BOOKTMP.DATAAREAID = BOOK.DATAAREAID)
                WHERE BOOKTMP.DEPRECIATIONEXTPROFILE_JP != ''";

        return sqlStatement;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>