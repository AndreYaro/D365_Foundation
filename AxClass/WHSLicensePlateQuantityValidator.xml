<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLicensePlateQuantityValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class for mapping the quantities to the related license plates and
/// for validating if the mapped quantities match with the total physical on hand quantity of these license plates
/// </summary>
public class WHSLicensePlateQuantityValidator
{
    Map licensePlateTotalQty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addQuantityOnLP</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds the passed quantity to the current total quantity of the passed license plate ID.
    /// </summary>
    /// <param name="_qty">
    /// Current quantity.
    /// </param>
    /// <param name="_licensePlateId">
    /// Current license plate ID.
    /// </param>
    public void addQuantityOnLP(WHSInventQty _qty, WHSLicensePlateId _licensePlateId)
    {
        real currentTotalQty;

        if (!licensePlateTotalQty)
        {
            licensePlateTotalQty = new Map(Types::String, Types::Real);
        }
        else if (licensePlateTotalQty.exists(_licensePlateId))
        {
            currentTotalQty = licensePlateTotalQty.lookup(_licensePlateId);
        }

        licensePlateTotalQty.insert(_licensePlateId, _qty + currentTotalQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>allAddedQuantitiesEqualTotalLPQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if all the added quantities of all the added license plates are equal with the total physical on hand quantity of these license plates.
    /// </summary>
    /// <returns>
    /// true if all the added quantites equal with the total physical on hand quantity of the related license plate; otherwise, false.
    /// </returns>
    /// <remarks>
    /// If no values have been added true is returned.
    /// </remarks>
    public boolean allAddedQuantitiesEqualTotalLPQuantities()
    {
        boolean         ret = true;

        if (licensePlateTotalQty)
        {
            MapEnumerator licensePlateTotalQtyEnumerator = licensePlateTotalQty.getEnumerator();

            while (ret && licensePlateTotalQtyEnumerator.moveNext())
            {
                ret = this.quantityEqualsTotalLPQuantity(licensePlateTotalQtyEnumerator.currentValue(), licensePlateTotalQtyEnumerator.currentKey());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantityEqualsTotalLPQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the passed quantity is equal with the total physical on hand quantity of the passed license plate.
    /// </summary>
    /// <param name="_qty">
    /// Current quantity.
    /// </param>
    /// <param name="_licensePlateID">
    /// Current license plate ID.
    /// </param>
    /// <returns>
    /// true if the total physical on hand quantity of the license plate equals with the passed quantity; otherwise, false.
    /// </returns>
    public boolean quantityEqualsTotalLPQuantity(WHSInventQty _qty, WHSLicensePlateId _licensePlateID)
    {
        return WHSLicensePlate::getTotalHandlingQtyOnLicensePlate(_licensePlateID) == _qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantityEqualsTotalParentLPQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the passed quantity is equal with the total physical on hand quantity on the children of the passed license plate.
    /// </summary>
    /// <param name="_qty">
    /// Current quantity.
    /// </param>
    /// <param name="_parentLicensePlateId">
    /// Current license plate ID.
    /// </param>
    /// <returns>
    /// true if the total physical on hand quantity on the children of the license plate equals with the passed quantity; otherwise, false.
    /// </returns>
    public boolean quantityEqualsTotalParentLPQuantity(WHSInventQty _qty, WHSLicensePlateId _parentLicensePlateId)
    {
        return WHSLicensePlate::getTotalHandlingQtyOnParentLicensePlate(_parentLicensePlateId) == _qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSLicensePlateQuantityValidator construct()
    {
        return new WHSLicensePlateQuantityValidator();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>