<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsApprovedVendorListCheck_ReqItemTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
[PdsApprovedVendorListCheckTableIdFactoryAttribute(tableStr(ReqItemTable))]
/// <summary>
/// Child Class of PdsApprovedVendorListCheck
/// </summary>
/// <remarks>
/// This child class is designed to accept and set the required inventTable
/// record based on the ReqItemTable information
/// </remarks>
class PdsApprovedVendorListCheck_ReqItemTable extends PdsApprovedVendorListCheck
{
    ReqItemTable                reqItemTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initiate new instance of subclass
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method sets the global record buffer and vendAccount if parameter record is of type ReqItemTable
    /// </summary>
    /// <param name="_common">
    /// Takes a ReqItemTable record
    /// </param>
    /// <returns>
    /// Returns global variable reqItemTable
    /// </returns>
    public Common parmBuffer(Common _common = null)
    {
        if (!prmisdefault(_common) && _common.TableId == tablenum(ReqItemTable))
        {
            reqItemTable = _common;

            super(InventTable::find(reqItemTable.ItemId));

            vendAccount = reqItemTable.VendId;
        }

        return reqItemTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct instance of subclass
    /// </summary>
    /// <returns>
    /// Returns instance of class
    /// </returns>
    public static PdsApprovedVendorListCheck_ReqItemTable construct()
    {
        return new PdsApprovedVendorListCheck_ReqItemTable();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>