<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsLocationProfileValidator</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>WHSLocationProfileValidator</c> class validates location profile setup and usage.
/// </summary>
public class WhsLocationProfileValidator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkMixedBatches</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the 'mixed batches' setting on a given location profile is valid.
    /// </summary>
    /// <param name="_whsLocationProfile">
    ///    The location profile.
    /// </param>
    /// <param name="_wmsLocation">
    ///    A warehouse location that limits the check; optional.
    /// </param>
    /// <param name="_whsLocProfileIdInventory">
    ///   The location profile ID used for the inventory check; optional.
    /// </param>
    /// <returns>
    ///    true if the location profile setting is valid; otherwise, false.
    /// </returns>
    public static boolean checkMixedBatches(
        WHSLocationProfile _whsLocationProfile,
        WMSLocation        _wmsLocation              = null,
        WHSLocProfileId    _whsLocProfileIdInventory = _whsLocationProfile.LocProfileId)
    {
        InventSum           inventSum;
        WMSLocation         wmsLocation;
        RefRecId            wmsLocationRecId;
        ItemId              itemId;
        InventBatchId       inventBatchId;
        boolean             result = true;

        if (!_whsLocationProfile.AllowMixedBatches)
        {
            if (InventUseDimOfInventSumToggle::instance().isEnabled())
            {
                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                            wmsLocation.InventLocationId,
                            wmsLocation.wmsLocationId,
                            inventSum.ItemId,
                            inventSum.InventBatchId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join ItemId, InventBatchId from inventSum
                    where inventSum.InventLocationId == wmsLocation.InventLocationId
                       && inventSum.wmsLocationId    == wmsLocation.wmsLocationId
                       && inventSum.InventBatchId    != ''
                       && inventSum.ClosedQty      == NoYes::No
                       && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (itemId != inventSum.ItemId
                            || inventBatchId != inventSum.InventBatchId)
                        {
                            result = checkFailed(strFmt("@WAX5696",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    itemId           = inventSum.ItemId;
                    inventBatchId    = inventSum.InventBatchId;
                }
            }
            else
            {
                InventDim           inventDim;

                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                            wmsLocation.InventLocationId,
                            wmsLocation.wmsLocationId,
                            inventSum.ItemId,
                            inventDim.InventBatchId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join InventBatchId from inventDim
                    where inventDim.InventLocationId == wmsLocation.InventLocationId
                       && inventDim.wmsLocationId    == wmsLocation.wmsLocationId
                       && inventDim.InventBatchId    != ''
                    join ItemId from inventSum
                        where inventSum.InventDimId    == inventDim.InventDimId
                           && inventSum.ClosedQty      == NoYes::No
                           && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (itemId != inventSum.ItemId
                            || inventBatchId != inventDim.InventBatchId)
                        {
                            result = checkFailed(strFmt("@WAX5696",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    itemId           = inventSum.ItemId;
                    inventBatchId    = inventDim.InventBatchId;
                }
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMixedItems</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the 'mixed status' setting on a given location profile is valid.
    /// </summary>
    /// <param name="_whsLocationProfile">
    ///    The location profile.
    /// </param>
    /// <param name="_wmsLocation">
    ///    A warehouse location that limits the check; optional.
    /// </param>
    /// <param name="_whsLocProfileIdInventory">
    ///   The location profile ID used for the inventory check; optional.
    /// </param>
    /// <returns>
    ///    true if the location profile setting is valid; otherwise, false.
    /// </returns>
    public static boolean checkMixedItems(
        WHSLocationProfile _whsLocationProfile,
        WMSLocation        _wmsLocation              = null,
        WHSLocProfileId    _whsLocProfileIdInventory = _whsLocationProfile.LocProfileId)
    {
        InventSum           inventSum;
        WMSLocation         wmsLocation;
        RefRecId            wmsLocationRecId;
        ItemId              itemId;
        boolean             result = true;

        if (!_whsLocationProfile.AllowMixedItems)
        {
            if (InventUseDimOfInventSumToggle::instance().isEnabled())
            {
                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                            wmsLocation.InventLocationId,
                            wmsLocation.wmsLocationId,
                            inventSum.ItemId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join ItemId from inventSum
                    where inventSum.InventLocationId == wmsLocation.InventLocationId
                       && inventSum.wmsLocationId    == wmsLocation.wmsLocationId
                       && inventSum.ClosedQty      == NoYes::No
                       && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (itemId != inventSum.ItemId)
                        {
                            result = checkFailed(strFmt("@WAX5697",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    itemId           = inventSum.ItemId;
                }
            }
            else
            {
                InventDim           inventDim;

                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                            wmsLocation.InventLocationId,
                            wmsLocation.wmsLocationId,
                            inventSum.ItemId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join TableId from inventDim
                    where inventDim.InventLocationId == wmsLocation.InventLocationId
                       && inventDim.wmsLocationId    == wmsLocation.wmsLocationId
                    join ItemId from inventSum
                        where inventSum.InventDimId    == inventDim.InventDimId
                           && inventSum.ClosedQty      == NoYes::No
                           && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (itemId != inventSum.ItemId)
                        {
                            result = checkFailed(strFmt("@WAX5697",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    itemId           = inventSum.ItemId;
                }
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMixedStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks if the 'mixed status' setting on a given location profile is valid.
    /// </summary>
    /// <param name="_whsLocationProfile">
    ///    The location profile.
    /// </param>
    /// <param name="_wmsLocation">
    ///    A warehouse location that limits the check; optional.
    /// </param>
    /// <param name="_whsLocProfileIdInventory">
    ///   The location profile ID used for the inventory check; optional.
    /// </param>
    /// <returns>
    ///    true if the location profile setting is valid; otherwise, false.
    /// </returns>
    public static boolean checkMixedStatus(
        WHSLocationProfile _whsLocationProfile,
        WMSLocation        _wmsLocation              = null,
        WHSLocProfileId    _whsLocProfileIdInventory = _whsLocationProfile.LocProfileId)
    {
        InventSum           inventSum;
        WMSLocation         wmsLocation;
        RefRecId            wmsLocationRecId;
        WHSInventStatusId   inventStatusId;
        WHSLocProfileId     whsLocProfileId = _whsLocationProfile.LocProfileId;
        boolean             result          = true;

        if (!_whsLocationProfile.AllowMixedStatus)
        {
            if (InventUseDimOfInventSumToggle::instance().isEnabled())
            {
                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                         wmsLocation.InventLocationId,
                         wmsLocation.wmsLocationId,
                         inventSum.InventStatusId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join InventStatusId from inventSum
                    where inventSum.InventLocationId == wmsLocation.InventLocationId
                       && inventSum.wmsLocationId    == wmsLocation.wmsLocationId
                       && inventSum.InventStatusId   != ''
                       && inventSum.ClosedQty      == NoYes::No
                       && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (inventStatusId != inventSum.InventStatusId)
                        {
                            result = checkFailed(strFmt("@WAX5698",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    inventStatusId   = inventSum.InventStatusId;
                }
            }
            else
            {
                InventDim           inventDim;

                while select RecId,InventLocationId,wmsLocationId from wmsLocation
                group by wmsLocation.RecId,
                         wmsLocation.InventLocationId,
                         wmsLocation.wmsLocationId,
                         inventDim.InventStatusId
                where wmsLocation.LocProfileId      == _whsLocProfileIdInventory
                   && (wmsLocation.InventLocationId == _wmsLocation.InventLocationId
                   ||  !_wmsLocation.InventLocationId)
                   && (wmsLocation.wmsLocationId    == _wmsLocation.wmsLocationId
                   ||  !_wmsLocation.wmsLocationId)
                join InventStatusId from inventDim
                    where inventDim.InventLocationId == wmsLocation.InventLocationId
                       && inventDim.wmsLocationId    == wmsLocation.wmsLocationId
                       && inventDim.InventStatusId   != ''
                    join TableId from inventSum
                        where inventSum.InventDimId    == inventDim.InventDimId
                           && inventSum.ClosedQty      == NoYes::No
                           && inventSum.PhysicalInvent != 0
                {
                    if (wmsLocationRecId
                        && wmsLocationRecId == wmsLocation.RecId)
                    {
                        if (inventStatusId != inventDim.InventStatusId)
                        {
                            result = checkFailed(strFmt("@WAX5698",_whsLocationProfile.LocProfileId,wmsLocation.wmsLocationId));
                            break;
                        }
                    }

                    wmsLocationRecId = wmsLocation.RecId;
                    inventStatusId   = inventDim.InventStatusId;
                }
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkMixedLocationProductDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the location product dimension mixing setup.
    /// </summary>
    /// <param name = "_whsLocationProfile">
    /// Location profile being checked.
    /// </param>
    /// <returns>
    /// True if location product dimension mixing setup is valid; otherwise, false.
    /// </returns>
    [Hookable(false)]
    internal static boolean checkMixedLocationProductDimensions(WHSLocationProfile _whsLocationProfile)
    {
        InventSum           inventSum;
        InventDim           inventDim;
        WMSLocation         wmsLocation;
        RefRecId            wmsLocationRecId;
        InventDimId         lastInventDimId;
        InventDimParm       inventDimParm;
        boolean             ret = true;

        if (_whsLocationProfile.EnableLocationProductDimensionSpecificMixing)
        {
            inventDimParm.initFromInventDimFixed(_whsLocationProfile.ProductDimFixed);

            while select inventDim
                join RecId from wmsLocation
                    where wmsLocation.inventLocationId == inventDim.InventLocationId
                    &&  wmsLocation.wMSLocationId == inventDim.wMSLocationId
                    &&  wmsLocation.LocProfileId  == _whsLocationProfile.LocProfileId
                exists join inventSum
                    where inventSum.InventDimId  == inventDim.inventDimId
                    &&    inventSum.ClosedQty    == NoYes::No
                    &&    inventSum.PhysicalInvent != 0
            {
                if (wmsLocationRecId
                    && wmsLocationRecId == wmsLocation.RecId)
                {
                    if (!inventDimParm.areUnsetProductDimensionsEqual(inventDim, InventDim::find(lastInventDimId)))
                    {
                        ret = checkFailed(strFmt("@WAX:Error_ItemsWithMixedVariantsExistsInLocation", _whsLocationProfile.LocProfileId));
                        break;
                    }
                }

                wmsLocationRecId = wmsLocation.RecId;
                lastInventDimId  = inventDim.inventDimId;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>