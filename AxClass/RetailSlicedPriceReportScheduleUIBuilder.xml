<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSlicedPriceReportScheduleUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailSlicedPriceReportScheduleUIBuilder</c> class builds UI for scheduling of the sliced price report.
/// </summary>
internal class RetailSlicedPriceReportScheduleUIBuilder extends SysOperationAutomaticUIBuilder
{
    private DialogField fieldStoreNumber;
    private DialogField fieldPriceCalculationStartDate;
    private DialogField fieldPriceCalculationEndDate;
    private DialogField fieldFileName;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    public void postBuild()
    {
        super();

        fieldStoreNumber = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(RetailSlicedPriceReportScheduleContract, parmStoreNumber));
        fieldPriceCalculationStartDate = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(RetailSlicedPriceReportScheduleContract, parmPriceCalculationStartDate));
        fieldPriceCalculationEndDate = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(RetailSlicedPriceReportScheduleContract, parmPriceCalculationEndDate));
        fieldFileName = this.bindInfo().getDialogField(
            this.dataContractObject(),
            methodStr(RetailSlicedPriceReportScheduleContract, parmFileName));

        fieldPriceCalculationStartDate.registerOverrideMethod(
            methodStr(FormDateControl, modified),
            methodStr(RetailSlicedPriceReportScheduleUIBuilder, dateModified),
            this);
        fieldPriceCalculationEndDate.registerOverrideMethod(
            methodStr(FormDateControl, modified),
            methodStr(RetailSlicedPriceReportScheduleUIBuilder, dateModified),
            this);
        fieldStoreNumber.registerOverrideMethod(
            methodStr(FormDateControl, modified),
            methodStr(RetailSlicedPriceReportScheduleUIBuilder, storeNumberModified),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>storeNumberModified</Name>
				<Source><![CDATA[
    public boolean storeNumberModified(FormStringControl _control)
    {
        boolean isModified = _control.modified();
        fieldFileName.value(RetailSlicedPriceReportScheduleUtils::getFileName(fieldStoreNumber.value()));
        return isModified;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enforce greater than or equal to relation on to date and from date.
    /// </summary>
    /// <param name="_control">
    /// The <c>FormDateControl</c> object that has changed.
    /// </param>
    /// <returns>
    /// true if the control value has been modified; otherwise false.
    /// </returns>
    public boolean dateModified(FormDateControl _control)
    {
        boolean isModified = _control.modified();
        date fromDate = fieldPriceCalculationStartDate.value();
        date toDate = fieldPriceCalculationEndDate.value();
        // Only check date value if date value is modified.
        // From date should not be greater than to date. The date range should not be greater than 7 days.
        boolean isDateValueInvalid = isModified && (fromDate > toDate || fromDate + 6 < toDate);
        if (isDateValueInvalid)
        {
            fieldPriceCalculationEndDate.value(fieldPriceCalculationStartDate.value() + 1);
        }

        return isModified;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>