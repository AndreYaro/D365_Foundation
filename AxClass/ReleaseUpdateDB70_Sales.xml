<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_Sales</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReleaseUpdateDB70_Sales extends ReleaseUpdateDB7X_Sales
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>moduleName</Name>
				<Source><![CDATA[
    public ReleaseUpdateModule moduleName()
    {
        return "@SYS37101";
    }

]]></Source>
			</Method>
			<Method>
				<Name>myVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// The script runs in any system having version older than CTP8.
    /// </summary>
    /// <returns>Script version.</returns>
    public sysReleasedVersion myVersion()
    {
        return sysReleasedVersion::CTP8; // For CTP8 hotfix scripts, version them as sysReleasedVersion::CTP8HF
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncUpdateRebateAgreementId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>PdsRebateAgreement</c> table to be unique in regards to RebateAgreementId
    /// </summary>
    [UpgradeScriptDescriptionAttribute(classStr(ReleaseUpdateDB70_Sales)),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate), // For CTP8, all scripts should be marked as PreSyncUpdate.
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript), // Shared script runs only once; Partition script runs in every Partition; Standard script runs in every Company.
    UpgradeScriptTableAttribute(tableStr(PdsRebateAgreement), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpdateRebateAgreementId()
    {
        DictField dictField = new DictField(tableNum(PdsRebateAgreement), FieldNum(PdsRebateAgreement, RebateAgreementId));

        str fieldName = dictField.name(DbBackend::Sql);
        str tableName = new DictTable(tableNum(PdsRebateAgreement)).name(DbBackend::Sql);
        int edtSize   = new DictType(extendedTypeNum(PdsRebateAgreementId)).stringLen();

        str sqlStatement = strFmt(@"IF NOT EXISTS (SELECT * FROM sys.columns where Name = N'%1' AND Object_ID = OBJECT_ID(N'%2'))
                            BEGIN
                                ALTER TABLE %2
                                ADD %1 nvarchar(%3) NOT NULL DEFAULT ''

                                INSERT INTO SQLDICTIONARY(TABLEID, FIELDID, ARRAY, NAME, SQLNAME, FIELDTYPE, STRSIZE, SHADOW, RIGHTJUSTIFY, NULLABLE, FLAGS)
                                    VALUES (%4, %5, %6, '%7', '%8', %9, %3, 0, 0, 0, 0);
                            END",
                            fieldName,
                            tableName,
                            edtSize,
                            tableNum(PdsRebateAgreement),
                            fieldNum(PdsRebateAgreement, RebateAgreementId),
                            dictField.arraySize(),
                            fieldStr(PdsRebateAgreement, RebateAgreementId),
                            fieldName,
                            enum2int(dictField.baseType()));

        Connection sessionConn = new Connection();
        Statement statement = sessionConn.createStatement();

        new SqlStatementExecutePermission(sqlStatement).assert();
        statement.executeUpdate(sqlStatement);

        this.resequencePsdRebateAgreementId(fieldName, tableName, false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>preSyncUpdateReverseChargeInCustInvoiceTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>CustInvoiceTrans</c> table to copy data from ReverseCharge to ReverseCharge_W.
    /// </summary>
    [UpgradeScriptDescription(classStr(ReleaseUpdateDB70_Sales)),
    UpgradeScriptStage(ReleaseUpdateScriptStage::PreSyncUpdate),
    UpgradeScriptType(ReleaseUpdateScriptType::SharedScript),
    UpgradeScriptTableAttribute(tableStr(CustInvoiceTrans), false, true, true, false), Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncUpdateReverseChargeInCustInvoiceTrans()
    {
        ReleaseUpdateDB70_ReverseChargeHelper::updateReverseChargeField(tableNum(CustInvoiceTrans), fieldNum(CustInvoiceTrans, ReverseCharge_W), ReleaseUpdateDB70_ReverseChargeHelper::fieldNameReverseCharge);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>