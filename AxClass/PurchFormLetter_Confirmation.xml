<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchFormLetter_Confirmation</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A class used for purchase order confirmation.
/// </summary>
/// <remarks>
/// The class enables differentiation of logic between confrimation and confirmation request.
/// </remarks>
[SysOperationJournaledParametersAttribute(true)]
class       PurchFormLetter_Confirmation
extends     PurchFormLetter_PurchOrder implements BatchRetryable
{
    private PurchInstrumentationLogger  instrumentationLogger;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(IdentifierName _className = classStr(FormletterService), IdentifierName _methodName = methodStr(FormletterService, postPurchaseOrderConfirmation), SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        super(_className, _methodName, _executionMode);
        instrumentationLogger = PurchInstrumentationLogger::createLogger(classStr(PurchFormLetter_Confirmation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    public ClassDescription caption()
    {
        return PurchFormLetter_Confirmation::description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS336241";
    }

]]></Source>
			</Method>
			<Method>
				<Name>newConfirmation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor of the <c>PurchFormLetter_Confirmation</c> class
    /// </summary>
    /// <param name="_className">
    /// Class name of the service operation <c>FormletterService</c> class
    /// </param>
    /// <param name="_methodName">
    /// Method name of the service posting type <c>postPurchaseOrderConfirmation</c> method
    /// </param>
    /// <param name="_executionMode">
    /// Execution mode of the service operation
    /// </param>
    /// <returns>
    /// An instance of <c>PurchFormLetter_Confirmation</c> class
    /// </returns>
    public static PurchFormLetter_Confirmation newConfirmation(
        IdentifierName _className  = classStr(FormletterService),
        IdentifierName _methodName = methodStr(FormletterService, postPurchaseOrderConfirmation),
        SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        PurchFormLetter_Confirmation formLetter = new PurchFormLetter_Confirmation(_className, _methodName, _executionMode);
        formLetter.init();
        return formLetter;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        using (var activityContext = instrumentationLogger.purchFormLetterInstrumentationActivities().purchPostConfirmationMultiOrders(this.parmBatchJobId(), this.lateSelection()))
        {
            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>