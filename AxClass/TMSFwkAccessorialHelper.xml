<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFwkAccessorialHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.Xml.Linq;
using Microsoft.Dynamics.Ax.Tms.Base.Data;

/// <summary>
/// The class <c>TMSFwkAccessorialHelper</c> provides helper functions related to working with Accessorials.
/// </summary>
public class TMSFwkAccessorialHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSFwkAccessorialHelper construct()
    {
        return new TMSFwkAccessorialHelper();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignAccessorials</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the accesorial charges.
    /// </summary>
    /// <param name = "tmsTransactionFacade">The transaction payload</param>
    /// <param name = "segment">The segment to assign the charges to.</param>
    /// <param name = "ratingDtos">The list of <c>RatingDto</c> objects.</param>
    public void assignAccessorials(TmsTransactionFacade tmsTransactionFacade, XElement segment, RatingDtoList ratingDtos)
    {
        // use factory to create engine
        var factory = TMSFwkAccessorialFactory::construct();
        TMSFwkIAccessorialEngine accessorialEngine = factory.createAccessorialEngine();
        accessorialEngine.assignAccessorials(tmsTransactionFacade, segment, ratingDtos);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>