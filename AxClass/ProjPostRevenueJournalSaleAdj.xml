<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPostRevenueJournalSaleAdj</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjPostRevenueJournalSaleAdj extends ProjPostRevenueJournal
{
    ProjRevenueTrans            projRevenueTransLocal;
    TmpProjAdjustmentCreateSale tmpProjAdjustmentCreateSale;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>adjustmentLedgerSalesAmount</Name>
				<Source><![CDATA[
        protected AmountCur adjustmentLedgerSalesAmount()
    {
        if (this.parmTransStatus() == ProjTransStatus::Adjusted)
        {
            return this.parmAdjustmentLedgerSalesAmount();
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkEnterSalesAccrued</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the accrued sales amount has been entered and is expected to be posted.
    /// </summary>
    /// <returns>
    /// true if the accrued sales amount is nonzero and the <c>parmEnterSalesAccrued</c> method returns
    /// true; otherwise, false.
    /// </returns>
    protected boolean checkEnterSalesAccrued()
    {
        boolean ret = false;

        if (this.parmTransStatus() == ProjTransStatus::Adjusted)
        {
            ret = (this.parmEnterSalesAccrued() && projTrans.transTurnover());
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkUpdateBudget</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether a budget update is required.
    /// </summary>
    /// <returns>
    ///    true if a budget update is required; otherwise, false.
    /// </returns>
    public boolean checkUpdateBudget()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.parmTransIdOrig())
            {
                ret = false;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(ProjRevenueTrans _projRevenueTrans, TmpProjAdjustmentCreateSale _tmpProjAdjustmentCreateSale)
    {
        ProjJournalTrans    projJournalTransLocal;

        projRevenueTransLocal = _projRevenueTrans;
        tmpProjAdjustmentCreateSale = _tmpProjAdjustmentCreateSale;

        super(projJournalTransLocal);

        projTrans = ProjTrans::newProjTransRevenueTransSaleAdj(_projRevenueTrans, _tmpProjAdjustmentCreateSale);
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTransCreate</Name>
				<Source><![CDATA[
        public void projTransCreate()
    {
        ProjRevenueTransSale projRevenueTransSale;

        //Create ProjRevenueTransSale record
        projRevenueTransSale.clear();
        projRevenueTransSale = ProjRevenueTransSale::initTransFromAdjCreateSale(tmpProjAdjustmentCreateSale);
        projRevenueTransSale.TransId = projRevenueTransLocal.TransId;
        if (this.parmAdjustment() && this.parmAdjustmentDate())
        {
            projRevenueTransSale.LedgerTransdate = this.parmAdjustmentDate();
        }
        else
        {
            projRevenueTransSale.LedgerTransdate = ledgerVoucher.lastTransDate();
        }

        if (this.parmTransStatus() == ProjTransStatus::Adjusted)
        {
            projRevenueTransSale.ledgerSalesPosted  = NoYes::No;
            projRevenueTransSale.ledgerSalesAmount = 0;
        }
        else
        {
            projRevenueTransSale.ledgerSalesPosted  = this.checkEnterSalesAccrued();
            if (this.checkEnterSalesAccrued())
            {
                projRevenueTransSale.ledgerSalesAmount = projTrans.transTurnoverMST();
            }
        }

        projRevenueTransSale.TransStatus = this.parmTransStatus();
        if (! projRevenueTransSale.TransStatus)
        {
            projRevenueTransSale.TransStatus = ProjTransStatus::Posted;
        }
        projRevenueTransSale.insert();

        if (this.parmsalesUseOrig())
        {
            this.parmTransIdSales(this.parmTransIdOrig());
        }
        else
        {
            this.parmTransIdSales(projRevenueTransSale.TransId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAmountMST</Name>
				<Source><![CDATA[
        protected AmountMST salesAmountMST()
    {
        AmountMST ret;

        if (this.parmTransStatus() == ProjTransStatus::Adjusted)
        {
            ret = this.parmSalesAmountMST();
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>