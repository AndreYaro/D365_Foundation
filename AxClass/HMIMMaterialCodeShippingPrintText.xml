<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMMaterialCodeShippingPrintText</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMIMMaterialCodeShippingPrintText extends HMIMShippingPrintTextBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateShippingPrintTxtLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates shipping print text translations.
    /// </summary>
    /// <param name = "_material">Material</param>
    internal void generateShippingPrintTxtLanguage(HMIMMaterial _material)
    {
        HMIMItemMaterialCodeTranslation materialCodeTranslation;

        HMIMItemMaterialCodeTranslation::createOrUpdateTranslation(_material.RecId, _material.MaterialDescription);

        ttsbegin;
        while select LanguageId, MaterialDescription from materialCodeTranslation
            where materialCodeTranslation.Material == _material.RecId
        {
            // If there is a record update it otherwise insert.
            HMIMItemMaterialCodeShipTxtTranslation shipTxtTranslation = HMIMItemMaterialCodeShipTxtTranslation::find( _material.RecId, materialCodeTranslation.LanguageId, true);
            
            HMIMMaterialShippingPrintTextSource materialShippingPrintText = HMIMMaterialShippingPrintTextSource::newFromMaterial(_material);

            if (shipTxtTranslation.RecId)
            {
                shipTxtTranslation.ShippingPrintText = this.generateShippingPrintTxt(materialShippingPrintText, materialCodeTranslation.MaterialDescription, materialCodeTranslation.LanguageId);
                shipTxtTranslation.update();
            }
            else
            {
                shipTxtTranslation.initValue();
                shipTxtTranslation.Material = _material.RecId;
                shipTxtTranslation.LanguageId = materialCodeTranslation.LanguageId;
                shipTxtTranslation.ShippingPrintText = this.generateShippingPrintTxt(materialShippingPrintText, materialCodeTranslation.MaterialDescription, materialCodeTranslation.LanguageId);
                shipTxtTranslation.insert();
            }
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateShippingPrintTxtLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates shipping print text translations for all items per regulation code
    /// </summary>
    /// <param name = "_regCode">Regulation Code</param>
    internal void updateShippingPrintTxtLanguage(HMIMRegCode _regCode)
    {
        HMIMMaterial                            material;
        HMIMMaterialTranslation                 materialTranslation;
        HMIMItemMaterialCodeShipTxtTranslation  shipTxtTranslation;
        boolean                                 showConfirmation;

        ttsbegin;

        while select material
            where material.RegCode == _regCode
        join materialTranslation
            where materialTranslation.Material == material.RecId
        {
            shipTxtTranslation = HMIMItemMaterialCodeShipTxtTranslation::find(material.RecId, materialTranslation.LanguageId, true);
            
            if (shipTxtTranslation.RecId)
            {
                HMIMMaterialShippingPrintTextSource materialShippingPrintText = HMIMMaterialShippingPrintTextSource::newFromMaterial(material);

                shipTxtTranslation.ShippingPrintText = this.generateShippingPrintTxt(materialShippingPrintText, materialTranslation.MaterialDescription, materialTranslation.LanguageId);
                shipTxtTranslation.update();
                showConfirmation = true;
            }
        }

        ttscommit;

        info(showConfirmation ? "@SCM:ItemsUpdated" : "@SCM:NoItemsUpdate");

    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static HMIMMaterialCodeShippingPrintText construct()
    {
        return new HMIMMaterialCodeShippingPrintText();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultPrintTxtByPrintFieldForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultPrintTxtByPrintFieldForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material, Description255 _materialDescription)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultIdentificationTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultIdentificationTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultTechnicalNameTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultTechnicalNameTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultClassTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultClassTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultDivisionTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultDivisionTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultLabelCodeTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultLabelCodeTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultPackGroupTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultPackGroupTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultTunnelCodeTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultTunnelCodeTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultTransportCategoryTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultTransportCategoryTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultStowageCodeTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultStowageCodeTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultPackDescriptionTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultPackDescriptionTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultAirPackingTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultAirPackingTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultAirPackingCargoOnlyTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultAirPackingCargoOnlyTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultAirPackingPassengerCargoTxtForMap</Name>
				<Source><![CDATA[
    [SysObsolete('Use the new extension points in HMIMShippingPrintTextBase and HMIMShippingPrintTextSource instead', true, 27\4\2022)]
    protected final Description255 getDefaultAirPackingPassengerCargoTxtForMap(HMIMRegPrintSetup _regPrintSetup, HMIMShippingPrintTextSource _material)
    {
        return '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>