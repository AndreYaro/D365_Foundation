<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileDeviceActivityLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>WHSMobileDeviceActivityLogger</c> class provides an ability to log mobile device activities.
/// </summary>
public class WHSMobileDeviceActivityLogger
{
    WHSUserId whsUserId;
    WHSWorkExecuteMode whsWorkExecuteMode;
    str logEntry;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>append</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Appends a new portion of data to the log entry.
    /// </summary>
    /// <param name="key">
    ///     The key of the logging action.
    /// </param>
    /// <param name="value">
    ///     The value to be logged.
    /// </param>
    /// <returns>
    ///     The current instance of the <c>WHSMobileDeviceActivityLogger</c> class.
    /// </returns>
    public WHSMobileDeviceActivityLogger append(str key, str value)
    {
        logEntry += key + '=' + value + ';';
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWHSUserId</Name>
				<Source><![CDATA[	/// <summary>
	/// Setter method for whsUserId.
	/// </summary>
	/// <param name="_whsUserId">
	/// The user id to be set.
	/// </param>
    protected void parmWHSUserId(WHSUserId _whsUserId)
    {
        whsUserId = _whsUserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWHSWorkExecuteMode</Name>
				<Source><![CDATA[	/// <summary>
	/// Setter method for whsWorkExecuteMode.
	/// </summary>
	/// <param name="_whsWorkExecuteMode">
	/// The work execute mode to be set.
	/// </param>
    protected void parmWHSWorkExecuteMode(WHSWorkExecuteMode _whsWorkExecuteMode)
    {
        whsWorkExecuteMode = _whsWorkExecuteMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Saves the log entry into a database.
    /// </summary>
    /// <returns>
    ///     The current instance of the <c>WHSMobileDeviceActivityLogger</c> class.
    /// </returns>
    public WHSMobileDeviceActivityLogger save()
    {
        WHSMobileDeviceActivityLog whsMobileDeviceActivityLog;

        if (logEntry != '')
        {
            ttsBegin;
            whsMobileDeviceActivityLog.UserId = whsUserId;
            whsMobileDeviceActivityLog.Timestamp = DateTimeUtil::utcNow();
            whsMobileDeviceActivityLog.WorkExecuteMode = whsWorkExecuteMode;
            whsMobileDeviceActivityLog.Log = logEntry;
            whsMobileDeviceActivityLog.insert();
            logEntry = '';
            ttsCommit;
        }

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSMobileDeviceActivityLogger construct()
    {
        return new WHSMobileDeviceActivityLogger();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newStandard</Name>
				<Source><![CDATA[
    /// <summary>
    ///     The public initializer for the <c>WHSMobileDeviceActivityLogger</c> class
    /// </summary>
    /// <param name="_whsUserId">
    ///     User ID.
    /// </param>
    /// <param name="_whsWorkExecuteMode">
    ///     Work execute mode.
    /// </param>
    /// <returns>
    ///     A new instance of the <c>WHSMobileDeviceActivityLogger</c> class
    /// </returns>
    public static WHSMobileDeviceActivityLogger newStandard(WHSUserId _whsUserId, WHSWorkExecuteMode _whsWorkExecuteMode)
    {
        WHSMobileDeviceActivityLogger whsMobileDeviceActivityLogger = WHSMobileDeviceActivityLogger::construct();
        whsMobileDeviceActivityLogger.parmWHSUserId(_whsUserId);
        whsMobileDeviceActivityLogger.parmWHSWorkExecuteMode(_whsWorkExecuteMode);
        return whsMobileDeviceActivityLogger;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>