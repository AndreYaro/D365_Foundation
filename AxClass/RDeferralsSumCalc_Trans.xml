<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RDeferralsSumCalc_Trans</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RDeferralsSumCalc_Trans extends RDeferralsSumCalc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    [Hookable]
    protected Query buildQuery()
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;

        query = new Query();

        queryBuildDataSource = query.addDataSource(tablenum(RDeferralsTrans));

        queryBuildDataSource.orderMode(OrderMode::GroupBy);

        queryBuildDataSource.addSelectionField(fieldnum(RDeferralsTrans, Amount), SelectionField::Sum);

        queryBuildDataSource.addSortField(fieldnum(RDeferralsTrans, TransType));
        queryBuildDataSource.addSortField(fieldnum(RDeferralsTrans, DeferralsBookId));
        queryBuildDataSource.addSortField(fieldnum(RDeferralsTrans, TransDate));

        queryBuildDataSource.addRange(fieldnum(RDeferralsTrans, DeferralsId)).value(rangeDeferralsId);
        queryBuildDataSource.addRange(fieldnum(RDeferralsTrans, DeferralsBookId)).value(rangeDeferralsBookId);

        if (dateTo)
        {
            queryBuildDataSource.addRange(fieldnum(RDeferralsTrans, TransDate)).value(queryRange(dateFrom, dateTo));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    public void calc()
    {
        QueryRun          queryRun;
        RDeferralsTrans   rDeferralsTrans;

        if (calculated || ! rangeDeferralsId)
            return;

        queryRun = new QueryRun(this.buildQuery());

        while (queryRun.next())
        {
            rDeferralsTrans = queryRun.get(tablenum(RDeferralsTrans));
            this.updateSum(rDeferralsTrans.Amount,
                           rDeferralsTrans.TransType);
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDeferralsPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new deferrals period.
    /// </summary>
    /// <param name = "_rangeDeferralsId">Deferral Id <c>Range</c>.</param>
    /// <param name = "_rangeDeferralsBookId">Deferral book Id <c>Range</c>.</param>
    /// <param name = "_dateTo">End date.</param>
    /// <param name = "_dateFrom">Start date.</param>
    /// <returns><c>RDeferralsSumCalc_Trans</c>.</returns>
    public static RDeferralsSumCalc_Trans newDeferralsPeriod(Range               _rangeDeferralsId,
                                                             Range               _rangeDeferralsBookId,
                                                             RDeferralsTransDate _dateTo   = dateNull(),
                                                             RDeferralsTransDate _dateFrom = dateNull())
    {
        RDeferralsSumCalc_Trans rDeferralsSumCalc_Trans = new RDeferralsSumCalc_Trans();

        rDeferralsSumCalc_Trans.parmRangeDeferralsId(_rangeDeferralsId);
        rDeferralsSumCalc_Trans.parmRangeDeferralsBookId(_rangeDeferralsBookId);
        rDeferralsSumCalc_Trans.parmDateFrom(_dateFrom);
        rDeferralsSumCalc_Trans.parmDateTo(_dateTo);

        return rDeferralsSumCalc_Trans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>