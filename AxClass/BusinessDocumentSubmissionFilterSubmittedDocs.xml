<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentSubmissionFilterSubmittedDocs</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BusinessDocumentSubmissionFilterSubmittedDocs</c> class implements the IBusinessDocumentSubmissionFilter interface
///    to filter invoices as per Resubmit flag if the invoice was submitted before.
/// </summary>
using System.ComponentModel.Composition;

[Export(identifierstr(Dynamics.AX.Application.IBusinessDocumentSubmissionFilter))]
internal class BusinessDocumentSubmissionFilterSubmittedDocs implements IBusinessDocumentSubmissionFilter
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>filterBusinessDocumentsBeforeSubmission</Name>
				<Source><![CDATA[
    public void filterBusinessDocumentsBeforeSubmission(QueryBuildDataSource _qbds, TableId _tableId, BusinessDocumentSubmissionContract _dataContract)
    {
        QueryBuildDataSource submissionsQbds = _qbds.addDataSource(tableNum(BusinessDocumentSubmission));
        submissionsQbds.joinMode((_dataContract != null && _dataContract.parmResubmit()) ? JoinMode::ExistsJoin : JoinMode::NoExistsJoin);
        submissionsQbds.addLink(fieldName2Id(_tableId, 'TableId'), fieldNum(BusinessDocumentSubmission, RefTableId));
        submissionsQbds.addLink(fieldName2Id(_tableId, 'RecId'), fieldNum(BusinessDocumentSubmission, RefRecId));

        if (_dataContract != null && _dataContract.parmResubmit())
        {
            findOrCreateRange_W(
                submissionsQbds,
                fieldNum(BusinessDocumentSubmission, State),
                queryValue(BusinessDocumentState::Failed)
            ).status(RangeStatus::Hidden);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>