<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetTableController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetTableController</c> class is the controller for the <c>AssetRecord</c> SSRS report.
/// </summary>
public class AssetTableController extends SrsReportRunController implements BatchRetryable
{
    private const str FeatureReference = 'PL-00041';

    #define.SysVersion('SysVersion')
    #define.UserName('UserName')
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        AssetTable assetTable;
        Query q;
        QueryBuildDataSource ds;
        QueryBuildRange range;
        SrsReportRdlDataContract contract;

        super();

        if (this.parmArgs() == null)
        {
            throw error(Error::missingRecord(tablePName(AssetTable)));
        }

        assetTable = this.parmArgs().record() as AssetTable;
        if (assetTable == null)
        {
            throw error(Error::missingRecord(tablePName(AssetTable)));
        }

        q = this.getFirstQuery();
        ds = q.dataSourceTable(tableNum(AssetTable));
        range = SysQuery::findOrCreateRange(ds, fieldNum(AssetTable, AssetId));
        range.status(RangeStatus::Open); // change to open so the value can be modified
        range.value(assetTable.AssetId);
        range.status(RangeStatus::Locked);

        contract = this.parmReportContract().parmRdlContract() as SrsReportRdlDataContract;
        contract.setValue(#SysVersion, SysReportRun::sysVersion());
        contract.setValue(#UserName, SysReportRun::userName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        AssetTableController controller;

        controller = new AssetTableController();
        controller.parmReportName(ssrsReportStr(AssetRecord, AssetTableReport));
        controller.parmDialogCaption("@GLS110182");
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>