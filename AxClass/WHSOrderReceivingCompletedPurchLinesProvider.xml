<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSOrderReceivingCompletedPurchLinesProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
[WHSOrderReceivingCompletedAttribute(tableStr(PurchTable))]
internal final class WHSOrderReceivingCompletedPurchLinesProvider extends WHSOrderReceivingCompletedReceiptLinesProvider
{
    private PurchId purchId;
    private QueryRun queryRun;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>nextResult</Name>
				<Source><![CDATA[
    internal boolean nextResult()
    {
        return queryRun.next();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentReceiptOrderLine</Name>
				<Source><![CDATA[
    internal WHSReceiptOrderLine currentReceiptOrderLine()
    {
        return queryRun.get(tableNum(PurchLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>receiptOrderLineChanged</Name>
				<Source><![CDATA[
    internal boolean receiptOrderLineChanged()
    {
        return queryRun.changed(tableNum(PurchLine));
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentInventTrans</Name>
				<Source><![CDATA[
    internal InventTrans currentInventTrans()
    {
        return queryRun.get(tableNum(InventTrans));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    internal void initFromBuffer(Common _sourceOrder)
    {
        if (!(_sourceOrder is PurchTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        PurchTable purchTable = _sourceOrder as PurchTable;
        purchId = purchTable.PurchId;

        this.initQueryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQueryRun</Name>
				<Source><![CDATA[
    private void initQueryRun()
    {
        Query q = new Query();
        QueryBuildDataSource inventTransDS = q.addDataSource(tableNum(InventTrans));
        inventTransDS.addRange(fieldNum(InventTrans, LoadId)).value(queryValue(''));
        inventTransDS.addRange(fieldNum(InventTrans, StatusReceipt)).value(queryValue(StatusReceipt::Registered));
        inventTransDS.addOrderByField(fieldNum(InventTrans, InventTransOrigin));
        inventTransDS.update(true);

        QueryBuildDataSource inventTransOriginDS = inventTransDS.addDataSource(tableNum(InventTransOrigin));
        inventTransOriginDS.joinMode(JoinMode::InnerJoin);
        inventTransOriginDS.addLink(fieldNum(InventTrans, InventTransOrigin), fieldNum(InventTransOrigin, RecId), inventTransDS.name());

        QueryBuildDataSource purchLineDS = inventTransOriginDS.addDataSource(tableNum(PurchLine));
        purchLineDS.joinMode(JoinMode::InnerJoin);
        purchLineDS.addLink(fieldNum(InventTransOrigin, InventTransId), fieldNum(PurchLine, InventTransId), inventTransOriginDS.name());
        purchLineDS.addRange(fieldNum(PurchLine, PurchId)).value(purchId);

        queryRun = new QueryRun(q);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>