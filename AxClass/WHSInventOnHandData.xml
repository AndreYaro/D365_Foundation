<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventOnHandData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventOnHandData</c> class exposes information about reservation quantities.
/// </summary>
class WHSInventOnHandData
{
    InventQty                       availPhysical;
    InventQty                       availOrdered;
    InventQty                       reservPhysical;
    InventQty                       reservOrdered;
    private WHSCWAvailPhysical      cwAvailPhysical;
    private WHSCWAvailOrdered       cwAvailOrdered;
    private WHSCWReservPhysical     cwReservPhysical;
    private WHSCWReservOrdered      cwReservOrdered;
    InventDim                       inventDim;
    ItemId                          itemid;
    private UnknownNoYes            isCWItem;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailOrdered</Name>
				<Source><![CDATA[
    public InventQty parmAvailOrdered(InventQty _availOrdered = availOrdered)
    {
        availOrdered = _availOrdered;

        return availOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailPhysical</Name>
				<Source><![CDATA[
    public InventQty parmAvailPhysical(InventQty _availPhysical = availPhysical)
    {
        availPhysical = _availPhysical;

        return availPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDim</Name>
				<Source><![CDATA[
    public InventDim parmInventDim(InventDim _inventDim = inventDim)
    {
        inventDim = _inventDim;

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemid</Name>
				<Source><![CDATA[
    public ItemId parmItemid(ItemId _itemid = itemid)
    {
        itemid = _itemid;

        return itemid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservOrdered</Name>
				<Source><![CDATA[
    public InventQty parmReservOrdered(InventQty _reservOrdered = reservOrdered)
    {
        reservOrdered = _reservOrdered;

        return reservOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservPhysical</Name>
				<Source><![CDATA[
    public InventQty parmReservPhysical(InventQty _reservPhysical = reservPhysical)
    {
        reservPhysical = _reservPhysical;

        return reservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWAvailPhysical</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public WHSCWAvailPhysical parmCWAvailPhysical(WHSCWAvailPhysical _cwAvailPhysical = cwAvailPhysical)
    {
        cwAvailPhysical = _cwAvailPhysical;

        return cwAvailPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWAvailOrdered</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public WHSCWAvailOrdered parmCWAvailOrdered(WHSCWAvailOrdered _cwAvailOrdered = cwAvailOrdered)
    {
        cwAvailOrdered = _cwAvailOrdered;

        return cwAvailOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWReservPhysical</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public WHSCWReservPhysical parmCWReservPhysical(WHSCWReservPhysical _cwReservPhysical = cwReservPhysical)
    {
        cwReservPhysical = _cwReservPhysical;

        return cwReservPhysical;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCWReservOrdered</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public WHSCWReservOrdered parmCWReservOrdered(WHSCWReservOrdered _cwReservOrdered = cwReservOrdered)
    {
        cwReservOrdered = _cwReservOrdered;

        return cwReservOrdered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailPhysicalHandlingQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public InventHandlingQty parmAvailPhysicalHandlingQty()
    {
        if (this.parmIsCWItem())
        {
            return this.parmCWAvailPhysical();
        }

        return this.parmAvailPhysical();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAvailOrderedHandlingQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public InventHandlingQty parmAvailOrderedHandlingQty()
    {
        if (this.parmIsCWItem())
        {
            return this.parmCWAvailOrdered();
        }

        return this.parmAvailOrdered();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservPhysicalHandlingQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public InventHandlingQty parmReservPhysicalHandlingQty()
    {
        if (this.parmIsCWItem())
        {
            return this.parmCWReservPhysical();
        }

        return this.parmReservPhysical();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservOrderedHandlingQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public InventHandlingQty parmReservOrderedHandlingQty()
    {
        if (this.parmIsCWItem())
        {
            return this.parmCWReservOrdered();
        }

        return this.parmReservOrdered();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCWItem</Name>
				<Source><![CDATA[
    final private boolean parmIsCWItem()
    {
        if (isCWItem == UnknownNoYes::Unknown)
        {
            isCWItem = PdsGlobal::pdsIsCWItem(itemId) ? UnknownNoYes::Yes : UnknownNoYes::No;
        }

        return isCWItem == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides a string representation of the element.
    /// </summary>
    /// <returns>
    /// The string representation of the element.
    /// </returns>
    public str toString()
    {
        str delimiter = '-#-';

        str toString = fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, ItemId));
        toString += ' = ' + itemid;
        toString += delimiter;
        toString += InventDim.preFix();
        toString += delimiter;
        toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, availPhysical)) +    ' = '+ strFmt('%1',availPhysical);
        toString += delimiter;
        toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, availOrdered)) +     ' = '+ strFmt('%1',availordered);
        toString += delimiter;
        toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, reservPhysical)) +   ' = '+ strFmt('%1',reservPhysical);
        toString += delimiter;
        toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, reservOrdered)) +    ' = '+ strFmt('%1',reservOrdered);

        if (this.parmIsCWItem())
        {
            toString += delimiter;
            toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, CWAvailPhysical)) +    ' = '+ strFmt('%1',cwAvailPhysical);
            toString += delimiter;
            toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, CWAvailOrdered)) +     ' = '+ strFmt('%1',cwAvailordered);
            toString += delimiter;
            toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, CWReservPhysical)) +   ' = '+ strFmt('%1',cwReservPhysical);
            toString += delimiter;
            toString += fieldId2name(tableNum(WHSInventReserve),fieldNum(WHSInventReserve, CWReservOrdered)) +    ' = '+ strFmt('%1',cwReservOrdered);
        }

        return toString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInventOnHandData construct()
    {
        return new WHSInventOnHandData();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>WHSInventOnHandData</c> class based on the parameters.
    /// </summary>
    /// <param name="_common">
    /// A record buffer.
    /// </param>
    /// <param name="_inventDim">
    /// an <c>InventDim</c> buffer.
    /// </param>
    /// <returns>
    /// An instance of the <c>WHSInventOnHandData</c> class.
    /// </returns>
    public static WHSInventOnHandData newFromCommon(
        Common          _common,
        InventDim       _inventDim)
    {
        switch (_common.TableId)
        {
            case tableNum(WHSInventReserve) :
                return WHSInventOnHandData::newFromWHSInventReserve(_common as WHSInventReserve, _inventDim);

            case tableNum(WHSInventReserveDeltaAggrReserveView) :
                return WHSInventOnHandData::newWHSInventReserveDeltaAggrReserveView(_common as WHSInventReserveDeltaAggrReserveView, _inventDim);

            default:
                throw error(error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWHSInventReserve</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>WHSInventOnHandData</c> class based on the parameters.
    /// </summary>
    /// <param name="_whsInventReserve">
    /// A <c>WHSInventReserve</c> buffer.
    /// </param>
    /// <param name="_inventDim">
    /// an <c>InventDim</c> buffer.
    /// </param>
    /// <returns>
    /// An instance of the <c>WHSInventOnHandData</c> class.
    /// </returns>
    public static WHSInventOnHandData newFromWHSInventReserve(
        WHSInventReserve    _whsInventReserve,
        InventDim           _inventDim)
    {
        WHSInventOnHandData whsInventOnHandData = WHSInventOnHandData::construct();
        whsInventOnHandData.parmItemid(_whsInventReserve.ItemId);
        whsInventOnHandData.parmAvailPhysical(_whsInventReserve.AvailPhysical);
        whsInventOnHandData.parmAvailOrdered(_whsInventReserve.AvailOrdered);
        whsInventOnHandData.parmReservOrdered(_whsInventReserve.ReservOrdered);
        whsInventOnHandData.parmReservPhysical(_whsInventReserve.ReservPhysical);
        whsInventOnHandData.parmCWAvailPhysical(_whsInventReserve.CWAvailPhysical);
        whsInventOnHandData.parmCWAvailOrdered(_whsInventReserve.CWAvailOrdered);
        whsInventOnHandData.parmCWReservPhysical(_whsInventReserve.CWReservPhysical);
        whsInventOnHandData.parmCWReservOrdered(_whsInventReserve.CWReservOrdered);
        whsInventOnHandData.parmInventDim(_inventDim);

        return  whsInventOnHandData;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWHSInventReserveDeltaAggrReserveView</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the <c>whsInventOnHandData</c> class based on the parameters.
    /// </summary>
    /// <param name="_inventReserveDeltaAggrReserveView">
    /// A <c>WHSInventReserveDeltaAggrReserveView</c> buffer.
    /// </param>
    /// <param name="_inventDim">
    /// an <c>InventDim</c> buffer.
    /// </param>
    /// <returns>
    /// An instance of the <c>whsInventOnHandData</c> class.
    /// </returns>
    public static WHSInventOnHandData newWHSInventReserveDeltaAggrReserveView(
        WHSInventReserveDeltaAggrReserveView    _inventReserveDeltaAggrReserveView,
        InventDim                               _inventDim)
    {
        WHSInventOnHandData whsInventOnHandData = WHSInventOnHandData::construct();
        whsInventOnHandData.parmItemid(_inventReserveDeltaAggrReserveView.ItemId);
        whsInventOnHandData.parmAvailPhysical(_inventReserveDeltaAggrReserveView.AvailPhysical);
        whsInventOnHandData.parmAvailOrdered(_inventReserveDeltaAggrReserveView.AvailOrdered);
        whsInventOnHandData.parmReservOrdered(_inventReserveDeltaAggrReserveView.reservOrdered);
        whsInventOnHandData.parmReservPhysical(_inventReserveDeltaAggrReserveView.reservPhysical);
        whsInventOnHandData.parmCWAvailPhysical(_inventReserveDeltaAggrReserveView.CWAvailPhysical);
        whsInventOnHandData.parmCWAvailOrdered(_inventReserveDeltaAggrReserveView.CWAvailOrdered);
        whsInventOnHandData.parmCWReservPhysical(_inventReserveDeltaAggrReserveView.CWReservPhysical);
        whsInventOnHandData.parmCWReservOrdered(_inventReserveDeltaAggrReserveView.CWReservOrdered);
        whsInventOnHandData.parmInventDim(_inventDim);

        return  whsInventOnHandData;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>