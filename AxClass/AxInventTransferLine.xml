<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventTransferLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxInventTransferLine</c> class accesses the <c>InventTransferLine</c> table, applies the
///    correct update sequence, and provides default values wherever possible.
/// </summary>
/// <remarks>
///    This internal AxBC class is derived from the <see cref="T:AxInternalBase" />.
/// </remarks>
class AxInventTransferLine extends AxApplicationBase
{
    str                 item;
    AxInventDim         axInventDim;
    InventTransferLine  inventTransferLine;
    int                 inventTransferTableIdx, axInventTableIdx;
    int                 inventTransferLineIdx;
    int                 inventTableIdx;
    LineNum             lineNum;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>AxInventDim</c> table
    /// </summary>
    /// <param name="_axInventDim">
    ///    The <paramref name="_axInventDim" /> buffer passed to this method; optional.
    /// </param>
    /// <returns>
    ///    The current record of <c>AxInventDim</c> table.
    /// </returns>
    public AxInventDim_InventTransferLine axInventDim(AxInventDim _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>InventTable</c> table
    /// </summary>
    /// <param name="_inventTable">
    ///    An <c>InventTable</c> buffer; optional.
    /// </param>
    /// <returns>
    ///    The current record of the <c>InventTable</c> table.
    /// </returns>
    public InventTable inventTable(InventTable _inventTable = null)
    {
        InventTable  inventTable;

        if (!inventTableIdx)
        {
            inventTableIdx = this.nextCacheIdx();
        }
        if (!prmisDefault(_inventTable))
        {
            this.tableCacheInsert(inventTableIdx, _inventTable);
            inventTable = _inventTable;
        }
        else
        {
            if (this.tableCacheExist(inventTableIdx))
            {
                inventTable = this.tableCacheLookup(inventTableIdx);
            }
            else
            {
                this.setInventTransferRecordFields();
                inventTable = InventTable::find(this.parmItemId());
                this.tableCacheInsert(inventTableIdx, inventTable);
            }
        }
        return inventTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the original record of the <c>InventTransferLine</c> table.
    /// </summary>
    /// <returns>
    ///    The original <c>InventTransferLine</c> object.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateRelatedRecords</Name>
				<Source><![CDATA[
    /// <summary>
    ///    This method has overridden from AxInternalbase class.
    /// </summary>
    protected void createOrUpdateRelatedRecords()
    {
        super();

        InventMovement::bufferSetRemainQty(this.currentRecord());
        InventMovement::bufferSetRemainQty(this.currentRecord(), InventMovSubType::TransferOrderTransitFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>InventTransferLine</c> table
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    An <c>InventTransferLine</c> buffer; optional.
    /// </param>
    /// <returns>
    ///    The current record of <c>InventTransferLine</c> table.
    /// </returns>
    public Common currentRecord(Common _inventTransferLine = inventTransferLine)
    {
        if (!prmisDefault(_inventTransferLine))
        {
            super(_inventTransferLine);
            inventTransferLine = _inventTransferLine as InventTransferLine;
        }
        else
        {
            super();
        }

        return inventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doSave</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Saves or updates a record.
    /// </summary>
    /// <remarks>
    ///    This method is overridden from the <c>AxInternalBase</c> class.
    /// </remarks>
    public void doSave()
    {
        ttsbegin;

        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.setShipdateFromReceiveDate();

        this.inputStatus(InternalExternal::Internal);

        if (defaulting)
        {
            this.setTableFields();

            this.setDimensionEntitySpecifiers();
        }

        this.createOrUpdateRelatedRecords();

        this.validateFields();

        this.validateWrite();

        this.write();

        this.resetInternalValues();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an empty record for the <c>InventTransferLine</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record of the <c>InventTransferLine</c> table
    /// </returns>
    /// <remarks>
    ///    In order to obtain a cleared record that is used when you initialize before inserting new records,
    ///    the abstract <c>emptyRecord</c> method on the <c>AxInternalBase</c> class must be implemented.
    /// </remarks>
    protected Common emptyRecord()
    {
        InventTransferLine localInventTransferLine;

        return localInventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls <c>super</c> and sets <c>lineNum</c> to 0.
    /// </summary>
    public void end()
    {
        super();
        lineNum = 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>TransferId</c> field as non mandatory.
    /// </summary>
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxInventTransferTable,parmTransferId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets a record from the <c>InventTransferLine</c> table.
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    The <c>InventTransferLine</c> to set; optional.
    /// </param>
    /// <returns>
    ///    The <c>InventTransferLine</c> record.
    /// </returns>
    public InventTransferLine inventTransferLine(InventTransferLine _inventTransferLine = inventTransferLine)
    {
        if (!prmisDefault(_inventTransferLine))
        {
            this.setCurrentRecordFromExternal(_inventTransferLine);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransferTableRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the record from the <c>InventTransferTable</c> table.
    /// </summary>
    /// <param name="_inventTransferTable">
    ///    The <c>InventTransferTable</c> record to set; optional.
    /// </param>
    /// <returns>
    ///    The record from the <c>InventTransferTable</c> table.
    /// </returns>
    public InventTransferTable inventTransferTableRecord(InventTransferTable _inventTransferTable = null)
    {
        InventTransferTable   inventTransferTable;

        if (! inventTransferTableIdx)
        {
            inventTransferTableIdx = this.nextCacheIdx();
        }

        if (! prmisDefault(_inventTransferTable))
        {
            this.tableCacheInsert(inventTransferTableIdx, inventTransferTable);
            inventTransferTable = _inventTransferTable;
        }
        else
        {
            if (this.tableCacheExist(inventTransferTableIdx))
            {
                inventTransferTable = this.tableCacheLookup(inventTransferTableIdx);
            }
            else
            {
                this.setInventTransferRecordFields();
                inventTransferTable = InventTransferTable::find(this.parmTransferId());
                this.tableCacheInsert(inventTransferTableIdx, inventTransferTable);
            }
        }

        return inventTransferTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventTransferRecordFieldsSet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the <c>ItemId</c> and <c>Transferid</c> fields are set.
    /// </summary>
    /// <returns>
    ///    true if the <c>ItemId</c> and <c>Transferid</c> fields are set; otherwise, false.
    /// </returns>
    public boolean isInventTransferRecordFieldsSet()
    {
        return (this.isFieldSet(fieldNum(InventTransferLine, ItemId)) ||
                this.isFieldSet(fieldNum(InventTransferLine, TransferId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesCalcDlvDatesDependentFieldsSet</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the <c>InventDimId</c> and <c>TransferId</c> fields are set.
    /// </summary>
    /// <param name="_checkShipDateFieldSet">
    ///    The <c>_checkShipDateFieldSet</c> to set; optional.
    /// </param>
    /// <param name="_checkReceiveDateFieldSet">
    ///    The <c>_checkReceiveDateFieldSet</c> to set; optional.
    /// </param>
    /// <param name="_checkDeliveryDateControlTypeFieldSet">
    ///    The <c>_checkDeliveryDateControlTypeFieldSet</c> to set; optional.
    /// </param>
    /// <returns>
    ///    true if the <c>InventDimId</c> and <c>TransferId</c> fields are set; otherwise, false.
    /// </returns>
    public boolean isSalesCalcDlvDatesDependentFieldsSet(boolean    _checkShipDateFieldSet                  = true,
                                                         boolean    _checkReceiveDateFieldSet               = true,
                                                         boolean    _checkDeliveryDateControlTypeFieldSet   = true)
    {
        boolean isShipDateFieldSet                  = true;
        boolean isReceiveDateFieldSet               = true;
        boolean isDeliveryDateControlTypeFieldSet   = true;

        if (_checkShipDateFieldSet)
        {
            isShipDateFieldSet = this.isFieldSet(fieldNum(InventTransferLine, ShipDate));
        }

        if (_checkReceiveDateFieldSet)
        {
            isReceiveDateFieldSet = this.isFieldSet(fieldNum(InventTransferLine, ReceiveDate));
        }

        if (_checkDeliveryDateControlTypeFieldSet)
        {
            isDeliveryDateControlTypeFieldSet = this.isFieldSet(fieldNum(InventTransferLine, DeliveryDateControlType));
        }

        return (this.isFieldSet(fieldNum(InventTransferLine, TransferId))   &&
                this.isFieldSet(fieldNum(InventTransferLine, InventDimId))  &&
                isShipDateFieldSet                                          &&
                isReceiveDateFieldSet                                       &&
                isDeliveryDateControlTypeFieldSet);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxInventTransferLine</c> class.
    /// </summary>
    public void new()
    {
        axInventDim = AxInventDim_InventTransferLine::newAxInventTransferLine(this);
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountValue</Name>
				<Source><![CDATA[
    public AmountMst parmAmountValue(AmountMst _amountValue = 0)
    {
        if (!prmisdefault(_amountValue))
        {
            this.setField(fieldnum(InventTransferLine, AmountValue), _amountValue);
        }

        return inventTransferLine.AmountValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPApplyDemandTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ATPApplyDemandTimeFence</c> field.
    /// </summary>
    /// <param name="_atpApplyDemandTimeFence">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ATPApplyDemandTimeFence</c> field.
    /// </returns>
    public SalesATPApplyDemandTimeFence parmATPApplyDemandTimeFence(SalesATPApplyDemandTimeFence _atpApplyDemandTimeFence = 0)
    {
        if (!prmisDefault(_atpApplyDemandTimeFence))
        {
            this.setField(fieldNum(InventTransferLine, atpApplyDemandTimeFence), _atpApplyDemandTimeFence);
        }

        return inventTransferLine.atpApplyDemandTimeFence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPApplySupplyTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ATPApplySupplyTimeFence</c> field.
    /// </summary>
    /// <param name="_atpApplySupplyTimeFence">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ATPApplySupplyTimeFence</c> field.
    /// </returns>
    public SalesATPApplySupplyTimeFence parmATPApplySupplyTimeFence(SalesATPApplySupplyTimeFence _atpApplySupplyTimeFence = 0)
    {
        if (!prmisDefault(_atpApplySupplyTimeFence))
        {
            this.setField(fieldNum(InventTransferLine, atpApplySupplyTimeFence), _atpApplySupplyTimeFence);
        }

        return inventTransferLine.atpApplySupplyTimeFence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPBackwardDemandTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ATPBackwardDemandTimeFence</c> field.
    /// </summary>
    /// <param name="_atpBackwardDemandTimeFence">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ATPBackwardDemandTimeFence</c> field.
    /// </returns>
    public SalesATPBackwardDemandTimeFence parmATPBackwardDemandTimeFence(SalesATPBackwardDemandTimeFence _atpBackwardDemandTimeFence = 0)
    {
        if (!prmisDefault(_atpBackwardDemandTimeFence))
        {
            this.setField(fieldNum(InventTransferLine, atpBackwardDemandTimeFence), _atpBackwardDemandTimeFence);
        }

        return inventTransferLine.atpBackwardDemandTimeFence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPBackwardSupplyTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ATPBackwardSupplyTimeFence</c> field.
    /// </summary>
    /// <param name="_atpBackwardSupplyTimeFence">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ATPBackwardSupplyTimeFence</c> field.
    /// </returns>
    public SalesATPBackwardSupplyTimeFence parmATPBackwardSupplyTimeFence(SalesATPBackwardSupplyTimeFence _atpBackwardSupplyTimeFence = 0)
    {
        if (!prmisDefault(_atpBackwardSupplyTimeFence))
        {
            this.setField(fieldNum(InventTransferLine, atpBackwardSupplyTimeFence), _atpBackwardSupplyTimeFence);
        }

        return inventTransferLine.atpBackwardSupplyTimeFence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPInclPlannedOrders</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>AtpInclPlannedOrders</c> field.
    /// </summary>
    /// <param name="_atpInclPlannedOrders">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AtpInclPlannedOrders</c> field.
    /// </returns>
    public SalesATPInclPlannedOrders parmATPInclPlannedOrders(SalesATPInclPlannedOrders _atpInclPlannedOrders = false)
    {
        if (!prmisDefault(_atpInclPlannedOrders))
        {
            this.setField(fieldNum(InventTransferLine, atpInclPlannedOrders), _atpInclPlannedOrders);
        }

        return inventTransferLine.atpInclPlannedOrders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmATPTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ATPTimeFence</c> field.
    /// </summary>
    /// <param name="_atpTimeFence">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ATPTimeFence</c> field.
    /// </returns>
    public SalesATPTimeFence parmATPTimeFence(SalesATPTimeFence _atpTimeFence = 0)
    {
        if (!prmisDefault(_atpTimeFence))
        {
            this.setField(fieldNum(InventTransferLine, atpTimeFence), _atpTimeFence);
        }

        return inventTransferLine.atpTimeFence;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoReservation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>AutoReservation</c> field.
    /// </summary>
    /// <param name="_autoReservation">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>AutoReservation</c> field.
    /// </returns>
    public InventTransferAutoReservation parmAutoReservation(InventTransferAutoReservation _autoReservation = NoYes::No)
    {
        if (!prmisDefault(_autoReservation))
        {
            this.setField(fieldNum(InventTransferLine, AutoReservation), _autoReservation);
        }

        return inventTransferLine.AutoReservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCombinedTransferOrderLineDelivery</Name>
				<Source><![CDATA[
    public InventTransferCombinedLineDeliveryRecID parmCombinedTransferOrderLineDelivery(InventTransferCombinedLineDeliveryRecID _combinedTransferOrderLineDelivery = 0)
    {
        if (!prmisdefault(_combinedTransferOrderLineDelivery))
        {
            this.setField(fieldNum(InventTransferLine, CombinedTransferOrderLineDelivery), _combinedTransferOrderLineDelivery);
        }

        return inventTransferLine.CombinedTransferOrderLineDelivery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateControlType</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>DeliveryDateControlType</c> field.
    /// </summary>
    /// <param name="_deliveryDateControlType">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DeliveryDateControlType</c> field.
    /// </returns>
    public SalesDeliveryDateControlType parmDeliveryDateControlType(SalesDeliveryDateControlType _deliveryDateControlType = SalesDeliveryDateControlType::None)
    {
        if (!prmisDefault(_deliveryDateControlType))
        {
            this.setField(fieldNum(InventTransferLine, DeliveryDateControlType), _deliveryDateControlType);
        }

        return inventTransferLine.DeliveryDateControlType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHHTHandheldUserId</Name>
				<Source><![CDATA[
    public RetailUserIdEx2 parmHHTHandheldUserId(RetailUserIdEx2 _hHTHandheldUserId = '')
    {
        if (!prmisdefault(_hHTHandheldUserId))
        {
            this.setField(fieldNum(InventTransferLine, HHTHandheldUserId), _hHTHandheldUserId);
        }

        return inventTransferLine.HHTHandheldUserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHHTTransDate</Name>
				<Source><![CDATA[
    public RetailDateEx2 parmHHTTransDate(RetailDateEx2 _hHTTransDate = dateNull())
    {
        if (!prmisdefault(_hHTTransDate))
        {
            this.setField(fieldNum(InventTransferLine, HHTTransDate), _hHTTransDate);
        }

        return inventTransferLine.HHTTransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHHTTransTime</Name>
				<Source><![CDATA[
    public RetailTimeEx2 parmHHTTransTime(RetailTimeEx2 _hHTTransTime = 0)
    {
        if (!prmisdefault(_hHTTransTime))
        {
            this.setField(fieldNum(InventTransferLine, HHTTransTime), _hHTTransTime);
        }

        return inventTransferLine.HHTTransTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    public IntrastatFulfillmentDate_HU parmIntrastatFulfillmentDate_HU(IntrastatFulfillmentDate_HU _value = dateNull())
    {
        if (!prmisdefault(_value))
        {
            this.setField(fieldnum(InventTransferLine, IntrastatFulfillmentDate_HU), _value);
        }

        return inventTransferLine.IntrastatFulfillmentDate_HU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatSpecMove_CZ</Name>
				<Source><![CDATA[
    public IntrastatSpecMove_CZ parmIntrastatSpecMove_CZ(IntrastatSpecMove_CZ _value = '')
    {
        if (!prmisdefault(_value))
        {
            this.setField(fieldnum(InventTransferLine, IntrastatSpecMove_CZ), _value);
        }

        return inventTransferLine.IntrastatSpecMove_CZ;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventDimId</c> field.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventDimId</c> field.
    /// </returns>
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisDefault(_inventDimId))
        {
            this.setField(fieldNum(InventTransferLine, InventDimId), _inventDimId);
        }

        return inventTransferLine.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimIdTo_RU</Name>
				<Source><![CDATA[
    public InventDimId parmInventDimIdTo_RU(InventDimId _inventDimId = '')
    {
        if (!prmisdefault(_inventDimId))
        {
            this.setField(fieldnum(InventTransferLine, InventDimIdTo_RU), _inventDimId);
        }

        return inventTransferLine.InventDimIdTo_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventTransId</c> field.
    /// </summary>
    /// <param name="_inventTransId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransId</c> field.
    /// </returns>
    public InventTransIdShipment parmInventTransId(InventTransIdShipment _inventTransId = '')
    {
        if (!prmisDefault(_inventTransId))
        {
            this.setField(fieldNum(InventTransferLine, InventTransId), _inventTransId);
        }

        return inventTransferLine.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransIdReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventTransIdReceive</c> field.
    /// </summary>
    /// <param name="_inventTransIdReceive">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransIdReceive</c> field.
    /// </returns>
    public InventTransIdReceive parmInventTransIdReceive(InventTransIdReceive _inventTransIdReceive = '')
    {
        if (!prmisDefault(_inventTransIdReceive))
        {
            this.setField(fieldNum(InventTransferLine, InventTransIdReceive), _inventTransIdReceive);
        }

        return inventTransferLine.InventTransIdReceive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransIdScrap</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventTransIdScrap</c> field.
    /// </summary>
    /// <param name="_inventTransIdScrap">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransIdScrap</c> field.
    /// </returns>
    public InventTransIdScrap parmInventTransIdScrap(InventTransIdScrap _inventTransIdScrap = '')
    {
        if (!prmisDefault(_inventTransIdScrap))
        {
            this.setField(fieldNum(InventTransferLine, InventTransIdScrap), _inventTransIdScrap);
        }

        return inventTransferLine.InventTransIdScrap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransIdTransitFrom</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventTransIdTransitFrom</c> field.
    /// </summary>
    /// <param name="_inventTransIdReceiveTransit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransIdTransitFrom</c> field.
    /// </returns>
    public InventTransIdReceiveTransit parmInventTransIdTransitFrom(InventTransIdReceiveTransit _inventTransIdReceiveTransit = '')
    {
        if (!prmisDefault(_inventTransIdReceiveTransit))
        {
            this.setField(fieldNum(InventTransferLine, InventTransIdTransitFrom), _inventTransIdReceiveTransit);
        }

        return inventTransferLine.InventTransIdTransitFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransIdTransitTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>InventTransIdTransitTo</c> field.
    /// </summary>
    /// <param name="_inventTransIdShipmentTransit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransIdTransitTo</c> field.
    /// </returns>
    public InventTransIdShipmentTransit parmInventTransIdTransitTo(InventTransIdShipmentTransit _inventTransIdShipmentTransit = '')
    {
        if (!prmisDefault(_inventTransIdShipmentTransit))
        {
            this.setField(fieldNum(InventTransferLine, InventTransIdTransitTo), _inventTransIdShipmentTransit);
        }

        return inventTransferLine.InventTransIdTransitTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ItemId</c> field.
    /// </summary>
    /// <param name="_itemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the ItemId field.
    /// </returns>
    public str parmItemId(str _itemId = '')
    {
        DictField   dictField;
        str         itemId;

        if (!prmisDefault(_itemId))
        {
            dictField = new DictField(tableNum(InventTransferLine), fieldNum(InventTransferLine,ItemId));
            this.validateInboundItemIdString(_itemId, dictField);
            if (this.valueMappingInbound())
            {
                itemId = conPeek(this.axPurchItemId('',_itemId,inventTransferLine.inventDim()), 1);
            }

            if (itemId)
            {
                this.setField(fieldNum(InventTransferLine, ItemId), itemId);
            }
            else
            {
                this.setField(fieldNum(InventTransferLine, ItemId), _itemId);
            }
        }

        if (this.valueMappingOutbound())
        {
            return conPeek(this.axPurchItemId('', inventTransferLine.ItemId, inventTransferLine.inventDim()),1);
        }
        return inventTransferLine.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount_RU</Name>
				<Source><![CDATA[
    public LineAmount parmLineAmount_RU(LineAmount _lineAmount = 0.0)
    {
        if (!prmisdefault(_lineAmount))
        {
            this.setField(fieldnum(InventTransferLine, LineAmount_RU), _lineAmount);
        }

        return inventTransferLine.LineAmount_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>LineNum</c> field.
    /// </summary>
    /// <param name="_lineNum">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineNum</c> field.
    /// </returns>
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisDefault(_lineNum))
        {
            this.setField(fieldNum(InventTransferLine, LineNum), _lineNum);
        }

        return inventTransferLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigCountryRegionId</Name>
				<Source><![CDATA[
    public ItemOrigCountryRegionId parmOrigCountryRegionId(ItemOrigCountryRegionId _origCountryRegionId = '')
    {
        if (!prmisdefault(_origCountryRegionId))
        {
            this.setField(fieldnum(InventTransferLine, OrigCountryRegionId), _origCountryRegionId);
        }

        return inventTransferLine.OrigCountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigCountyId</Name>
				<Source><![CDATA[
    public ItemOrigCountyId parmOrigCountyId(ItemOrigCountyId _origCountyId = '')
    {
        if (!prmisdefault(_origCountyId))
        {
            this.setField(fieldnum(InventTransferLine, OrigCountyId), _origCountyId);
        }

        return inventTransferLine.OrigCountyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigStateId</Name>
				<Source><![CDATA[
    public ItemOrigStateId parmOrigStateId(ItemOrigStateId _origStateId = '')
    {
        if (!prmisdefault(_origStateId))
        {
            this.setField(fieldnum(InventTransferLine, OrigStateId), _origStateId);
        }

        return inventTransferLine.OrigStateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverDeliveryPct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>OverDeliveryPct</c> field.
    /// </summary>
    /// <param name="_overDeliveryPct">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>OverDeliveryPct</c> field.
    /// </returns>
    public InventTransferOverDeliveryPct parmOverDeliveryPct(InventTransferOverDeliveryPct _overDeliveryPct = 0)
    {
        if (!prmisDefault(_overDeliveryPct))
        {
            this.setField(fieldNum(InventTransferLine, OverDeliveryPct), _overDeliveryPct);
        }

        return inventTransferLine.OverDeliveryPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackedExtensions</Name>
				<Source><![CDATA[
    public SysExtensionSerializerPackedContainer parmPackedExtensions(SysExtensionSerializerPackedContainer _packedExtensions = connull())
    {
        if (!prmisdefault(_packedExtensions))
        {
            this.setField(fieldNum(InventTransferLine, PackedExtensions), _packedExtensions);
        }

        return inventTransferLine.PackedExtensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyReceived field value.
    /// </summary>
    /// <param name="_pdsCWQtyReceived">CW received</param>
    /// <returns>CW received</returns>
    public PdsCWQtyReceived parmPdsCWQtyReceived(
        PdsCWQtyReceived _pdsCWQtyReceived = 0)
    {
        if (!prmisdefault(_pdsCWQtyReceived))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyReceived),
                _pdsCWQtyReceived);
        }

        return inventTransferLine.PdsCWQtyReceived;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyReceiveNow</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyReceiveNow field value.
    /// </summary>
    /// <param name="_pdsCWQtyReceiveNow">CW receive now</param>
    /// <returns>CW receive now</returns>
    public PdsCWQtyReceiveNow parmPdsCWQtyReceiveNow(
        PdsCWQtyReceiveNow _pdsCWQtyReceiveNow = 0)
    {
        if (!prmisdefault(_pdsCWQtyReceiveNow))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyReceiveNow),
                          _pdsCWQtyReceiveNow);
        }

        return inventTransferLine.PdsCWQtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyRemainReceive</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyRemainReceive field value.
    /// </summary>
    /// <param name="_pdsCWQtyRemainReceive">CW remain receive</param>
    /// <returns>CW remain receive</returns>
    public PdsCWQtyRemainReceive parmPdsCWQtyRemainReceive(
        PdsCWQtyRemainReceive _pdsCWQtyRemainReceive = 0)
    {
        if (!prmisdefault(_pdsCWQtyRemainReceive))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyRemainReceive),
                          _pdsCWQtyRemainReceive);
        }

        return inventTransferLine.PdsCWQtyRemainReceive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyRemainShip</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyRemainShip field value.
    /// </summary>
    /// <param name="_pdsCWQtyRemainShip">CW remaining ship</param>
    /// <returns>CW remain ship</returns>
    public PdsCWQtyRemainShip parmPdsCWQtyRemainShip(
        PdsCWQtyRemainShip _pdsCWQtyRemainShip = 0)
    {
        if (!prmisdefault(_pdsCWQtyRemainShip))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyRemainShip),
                _pdsCWQtyRemainShip);
        }

        return inventTransferLine.PdsCWQtyRemainShip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyScrappedfield value.
    /// </summary>
    /// <param name="_pdsCWQtyScrapped">CW scrapped</param>
    /// <returns>CW scrapped</returns>
    public PdsCWQtyScrapped parmPdsCWQtyScrapped(
        PdsCWQtyScrapped _pdsCWQtyScrapped = 0)
    {
        if (!prmisdefault(_pdsCWQtyScrapped))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyScrapped),
                _pdsCWQtyScrapped);
        }

        return inventTransferLine.PdsCWQtyScrapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyShipNow</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyShipNow field value.
    /// </summary>
    /// <param name="_pdsCWQtyShipNow">CW ship now</param>
    /// <returns>CW ship now</returns>
    public PdsCWQtyShipNow parmPdsCWQtyShipNow(
        PdsCWQtyShipNow _pdsCWQtyShipNow = 0)
    {
        if (!prmisdefault(_pdsCWQtyShipNow))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyShipNow),
                          _pdsCWQtyShipNow);
        }

        return inventTransferLine.PdsCWQtyShipNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyShipped</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyShipped field value.
    /// </summary>
    /// <param name="_pdsCWQtyShipped">CW shipped</param>
    /// <returns>CW shipped</returns>
    public PdsCWQtyShipped parmPdsCWQtyShipped(
        PdsCWQtyShipped _pdsCWQtyShipped = 0)
    {
        if (!prmisdefault(_pdsCWQtyShipped))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyShipped),
                          _pdsCWQtyShipped);
        }

        return inventTransferLine.PdsCWQtyShipped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQtyTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsCWQtyTransfer field value.
    /// </summary>
    /// <param name="_pdsCWQtyTransfer">CW transfer</param>
    /// <returns>CW transfer</returns>
    public PdsCWQtyTransfer parmPdsCWQtyTransfer(
        PdsCWQtyTransfer _pdsCWQtyTransfer = 0)
    {
        if (!prmisdefault(_pdsCWQtyTransfer))
        {
            this.setField(fieldnum(InventTransferLine, PdsCWQtyTransfer),
                          _pdsCWQtyTransfer);
        }

        return inventTransferLine.PdsCWQtyTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsOverrideFEFO</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the InventTransferLine
    /// PdsOverrideFEFO field value.
    /// </summary>
    /// <param name="_pdsOverrideFEFO">Override FEFO flag</param>
    /// <returns>Override FEFO flag</returns>
    public PdsOverrideFEFO parmPdsOverrideFEFO(
        PdsOverrideFEFO _pdsOverrideFEFO = NoYes::No)
    {
        if (!prmisdefault(_pdsOverrideFEFO))
        {
            this.setField(
                fieldnum(InventTransferLine, PdsOverrideFEFO),
                _pdsOverrideFEFO);
        }

        return inventTransferLine.PdsOverrideFEFO;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisdefault(_port))
        {
            this.setField(fieldnum(InventTransferLine, Port), _port);
        }

        return inventTransferLine.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrice_RU</Name>
				<Source><![CDATA[
    public PriceCur parmPrice_RU(PriceCur _price = 0.0)
    {
        if (!prmisdefault(_price))
        {
            this.setField(fieldnum(InventTransferLine, Price_RU), _price);
        }

        return inventTransferLine.Price_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit_RU</Name>
				<Source><![CDATA[
    public PriceUnit parmPriceUnit_RU(PriceUnit _priceUnit = 0.0)
    {
        if (!prmisdefault(_priceUnit))
        {
            this.setField(fieldnum(InventTransferLine, PriceUnit_RU), _priceUnit);
        }

        return inventTransferLine.PriceUnit_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyReceived</c> field.
    /// </summary>
    /// <param name="_qtyReceived">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyReceived</c> field.
    /// </returns>
    public InventTransferQtyReceived parmQtyReceived(InventTransferQtyReceived _qtyReceived = 0)
    {
        if (!prmisDefault(_qtyReceived))
        {
            this.setField(fieldNum(InventTransferLine, QtyReceived), _qtyReceived);
        }

        return inventTransferLine.QtyReceived;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyReceiveNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyReceiveNow</c> field.
    /// </summary>
    /// <param name="_qtyReceiveNow">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyReceiveNow</c> field.
    /// </returns>
    public InventTransferQtyReceived parmQtyReceiveNow(InventTransferQtyReceived _qtyReceiveNow = 0)
    {
        if (!prmisDefault(_qtyReceiveNow))
        {
            this.setField(fieldNum(InventTransferLine, QtyReceiveNow), _qtyReceiveNow);
        }

        return inventTransferLine.QtyReceiveNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyRemainReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyRemainReceive</c> field.
    /// </summary>
    /// <param name="_qtyRemainReceive">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyRemainReceive</c> field.
    /// </returns>
    public InventTransferQtyRemain parmQtyRemainReceive(InventTransferQtyRemain _qtyRemainReceive = 0)
    {
        if (!prmisDefault(_qtyRemainReceive))
        {
            this.setField(fieldNum(InventTransferLine, QtyRemainReceive), _qtyRemainReceive);
        }

        return inventTransferLine.QtyRemainReceive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyRemainShip</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyRemainShip</c> field.
    /// </summary>
    /// <param name="_qtyRemainShip">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyRemainShip</c> field.
    /// </returns>
    public InventTransferQtyRemain parmQtyRemainShip(InventTransferQtyRemain _qtyRemainShip = 0)
    {
        if (!prmisDefault(_qtyRemainShip))
        {
            this.setField(fieldNum(InventTransferLine, QtyRemainShip), _qtyRemainShip);
        }

        return inventTransferLine.QtyRemainShip;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyScrapped</c> field.
    /// </summary>
    /// <param name="_qtyScrapped">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyScrapped</c> field.
    /// </returns>
    public InventTransferQtyScrapped parmQtyScrapped(InventTransferQtyScrapped _qtyScrapped = 0)
    {
        if (!prmisDefault(_qtyScrapped))
        {
            this.setField(fieldNum(InventTransferLine, QtyScrapped), _qtyScrapped);
        }

        return inventTransferLine.QtyScrapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyShipNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyShipNow</c> field.
    /// </summary>
    /// <param name="_qtyShipNow">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyShipNow</c> field.
    /// </returns>
    public InventTransferQtyShipped parmQtyShipNow(InventTransferQtyShipped _qtyShipNow = 0)
    {
        if (!prmisDefault(_qtyShipNow))
        {
            this.setField(fieldNum(InventTransferLine, QtyShipNow), _qtyShipNow);
        }

        return inventTransferLine.QtyShipNow;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyShipped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyShipped</c> field.
    /// </summary>
    /// <param name="_qtyShipped">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyShipped</c> field.
    /// </returns>
    public InventTransferQtyShipped parmQtyShipped(InventTransferQtyShipped _qtyShipped = 0)
    {
        if (!prmisDefault(_qtyShipped))
        {
            this.setField(fieldNum(InventTransferLine, QtyShipped), _qtyShipped);
        }

        return inventTransferLine.QtyShipped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQtyTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>QtyTransfer</c> field.
    /// </summary>
    /// <param name="_qtyTransfer">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>QtyTransfer</c> field.
    /// </returns>
    public InventTransferQty parmQtyTransfer(InventTransferQty _qtyTransfer = 0)
    {
        if (!prmisDefault(_qtyTransfer))
        {
            this.setField(fieldNum(InventTransferLine, QtyTransfer), _qtyTransfer);
        }

        return inventTransferLine.QtyTransfer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ReceiveDate</c> field.
    /// </summary>
    /// <param name="_receiveDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ReceiveDate</c> field.
    /// </returns>
    public InventTransferReceiveDate parmReceiveDate(InventTransferReceiveDate _receiveDate = dateNull())
    {
        if (!prmisDefault(_receiveDate))
        {
            this.setField(fieldNum(InventTransferLine, ReceiveDate), _receiveDate);
        }

        return inventTransferLine.ReceiveDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRemainStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>RemainStatus</c> field.
    /// </summary>
    /// <param name="_remainStatus">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>RemainStatus</c> field.
    /// </returns>
    public InventTransferRemainStatus parmRemainStatus(InventTransferRemainStatus _remainStatus = InventTransferRemainStatus::None)
    {
        if (!prmisDefault(_remainStatus))
        {
            this.setField(fieldNum(InventTransferLine, RemainStatus), _remainStatus);
        }

        return inventTransferLine.RemainStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailAreaId</Name>
				<Source><![CDATA[
    Public RetailAreaId parmRetailAreaId(RetailAreaId _hHTAreaId = '')
    {
        if (!prmisdefault(_hHTAreaId))
        {
            this.setField(fieldnum(InventTransferLine, RetailAreaId), _hHTAreaId);
        }

        return inventTransferLine.RetailAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailInfocodeIdEx2</Name>
				<Source><![CDATA[
    public RetailInfocodeIdEx2 parmRetailInfocodeIdEx2(RetailInfocodeIdEx2 _retailInfocodeIdEx2 = '')
    {
        if (!prmisdefault(_retailInfocodeIdEx2))
        {
            this.setField(fieldNum(InventTransferLine, RetailInfocodeIdEx2), _retailInfocodeIdEx2);
        }

        return inventTransferLine.RetailInfocodeIdEx2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailInformationSubcodeIdEx2</Name>
				<Source><![CDATA[
    public RetailInformationSubcodeIdEx2 parmRetailInformationSubcodeIdEx2(RetailInformationSubcodeIdEx2 _retailInformationSubcodeIdEx2 = '')
    {
        if (!prmisdefault(_retailInformationSubcodeIdEx2))
        {
            this.setField(fieldNum(InventTransferLine, RetailInformationSubcodeIdEx2), _retailInformationSubcodeIdEx2);
        }

        return inventTransferLine.RetailInformationSubcodeIdEx2;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailReplenishRefRecId</Name>
				<Source><![CDATA[
    public RetailReplenishRefRecId parmRetailReplenishRefRecId(RetailReplenishRefRecId _retailReplenishRefRecId = 0)
    {
        if (!prmisdefault(_retailReplenishRefRecId))
        {
            this.setField(fieldNum(InventTransferLine, RetailReplenishRefRecId), _retailReplenishRefRecId);
        }

        return inventTransferLine.RetailReplenishRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailReplenishRefTableId</Name>
				<Source><![CDATA[
    public RetailReplenishRefTableId parmRetailReplenishRefTableId(RetailReplenishRefTableId _retailReplenishRefTableId = 0)
    {
        if (!prmisdefault(_retailReplenishRefTableId))
        {
            this.setField(fieldNum(InventTransferLine, RetailReplenishRefTableId), _retailReplenishRefTableId);
        }

        return inventTransferLine.RetailReplenishRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>ShipDate</c> field.
    /// </summary>
    /// <param name="_shipDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ShipDate</c> field.
    /// </returns>
    public InventTransferShipDate parmShipDate(InventTransferShipDate _shipDate = dateNull())
    {
        if (!prmisDefault(_shipDate))
        {
            this.setField(fieldNum(InventTransferLine, ShipDate), _shipDate);
        }

        return inventTransferLine.ShipDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatisticalValue</Name>
				<Source><![CDATA[
    public StatisticalValue parmStatisticalValue(StatisticalValue _statisticalValue = 0)
    {
        if (!prmisdefault(_statisticalValue))
        {
            this.setField(fieldnum(InventTransferLine, StatisticalValue), _statisticalValue);
        }

        return inventTransferLine.StatisticalValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisdefault(_statProcId))
        {
            this.setField(fieldnum(InventTransferLine, StatProcId), _statProcId);
        }

        return inventTransferLine.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisdefault(_transactionCode))
        {
            this.setField(fieldnum(InventTransferLine, TransactionCode), _transactionCode);
        }

        return inventTransferLine.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransferId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>TransferId</c> field.
    /// </summary>
    /// <param name="_transferId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TransferId</c> field.
    /// </returns>
    public InventTransferId parmTransferId(InventTransferId _transferId = '')
    {
        if (!prmisDefault(_transferId))
        {
            this.setField(fieldNum(InventTransferLine, TransferId), _transferId);
        }

        return inventTransferLine.TransferId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisdefault(_transport))
        {
            this.setField(fieldnum(InventTransferLine, Transport), _transport);
        }

        return inventTransferLine.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnderDeliveryPct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>UnderDeliveryPct</c> field.
    /// </summary>
    /// <param name="_underDeliveryPct">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>UnderDeliveryPct</c> field.
    /// </returns>
    public InventTransferUnderDeliveryPct parmUnderDeliveryPct(InventTransferUnderDeliveryPct _underDeliveryPct = 0)
    {
        if (!prmisDefault(_underDeliveryPct))
        {
            this.setField(fieldNum(InventTransferLine, UnderDeliveryPct), _underDeliveryPct);
        }

        return inventTransferLine.UnderDeliveryPct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the value of the <c>UnitId</c> field.
    /// </summary>
    /// <param name="_unitId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>UnitId</c> field.
    /// </returns>
    public str parmUnitId(str _unitId = '')
    {
        DictField   dictField;
        str         unitId;

        if (!prmisDefault(_unitId))
        {
            dictField = new DictField(tableNum(InventTransferLine), fieldNum(InventTransferLine,UnitId));

            if (this.valueMappingInbound())
            {
                this.validateInboundString(_unitId, dictField, this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                unitId = this.axUnitOfMeasureSymbol(_unitId);
            }
            else
            {
                this.validateInboundString(_unitId, dictField);
            }

            if (unitId)
            {
                this.setField(fieldNum(InventTransferLine, UnitId), unitId);
            }
            else
            {
                this.setField(fieldNum(InventTransferLine, UnitId), _unitId);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(inventTransferLine.UnitId);
        }
        return inventTransferLine.UnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPApplyDemandTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>ATPApplyDemandTimeFence</c> field.
    /// </summary>
    protected void setATPApplyDemandTimeFence()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpApplyDemandTimeFence)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPApplyDemandTimeFence(this.inventTransferTableRecord().atpApplyDemandTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPApplyDemandTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpApplyDemandTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPApplySupplyTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ATPApplySupplyTimeFence</c> field.
    /// </summary>
    protected void setATPApplySupplyTimeFence()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpApplySupplyTimeFence)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPApplySupplyTimeFence(this.inventTransferTableRecord().atpApplySupplyTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPApplySupplyTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpApplySupplyTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPBackwardDemandTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ATPBackwardDemandTimeFence</c> field.
    /// </summary>
    protected void setATPBackwardDemandTimeFence()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpBackwardDemandTimeFence)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPBackwardDemandTimeFence(this.inventTransferTableRecord().atpBackwardDemandTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPBackwardDemandTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpBackwardDemandTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPBackwardSupplyTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ATPBackwardSupplyTimeFence</c> field.
    /// </summary>
    protected void setATPBackwardSupplyTimeFence()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpBackwardSupplyTimeFence)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPBackwardSupplyTimeFence(this.inventTransferTableRecord().atpBackwardSupplyTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPBackwardSupplyTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpBackwardSupplyTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPInclPlannedOrders</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>atpInclPlannedOrders</c> field.
    /// </summary>
    protected void setATPInclPlannedOrders()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpInclPlannedOrders)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPInclPlannedOrders(this.inventTransferTableRecord().atpInclPlannedOrders);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPInclPlannedOrders(this.transferLine_SalesCalcAvailableDlvDates().atpInclPlannedOrders);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setATPTimeFence</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>atpTimeFence</c> field.
    /// </summary>
    protected void setATPTimeFence()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, atpTimeFence)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmATPTimeFence(this.inventTransferTableRecord().atpTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet())
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmATPTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAutoReservation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>AutoReservation</c> field.
    /// </summary>
    protected void setAutoReservation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, AutoReservation)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmAutoReservation(this.inventTransferTableRecord().AutoReservation);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDateControlType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>DeliveryDateControlType</c> field.
    /// </summary>
    protected void setDeliveryDateControlType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, DeliveryDateControlType)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmDeliveryDateControlType(       this.inventTransferTableRecord().DeliveryDateControlType);
            this.parmATPTimeFence(                  this.inventTransferTableRecord().atpTimeFence);
            this.parmATPInclPlannedOrders(          this.inventTransferTableRecord().atpInclPlannedOrders);
            this.parmATPApplyDemandTimeFence(       this.inventTransferTableRecord().atpApplyDemandTimeFence);
            this.parmATPApplySupplyTimeFence(       this.inventTransferTableRecord().atpApplySupplyTimeFence);
            this.parmATPBackwardDemandTimeFence(    this.inventTransferTableRecord().atpBackwardDemandTimeFence);
            this.parmATPBackwardSupplyTimeFence(    this.inventTransferTableRecord().atpBackwardSupplyTimeFence);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet(true, true, false))
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmDeliveryDateControlType(   this.transferLine_SalesCalcAvailableDlvDates().DeliveryDateControlType);
                this.parmATPTimeFence(              this.transferLine_SalesCalcAvailableDlvDates().atpTimeFence);
                this.parmATPInclPlannedOrders(      this.transferLine_SalesCalcAvailableDlvDates().atpInclPlannedOrders);
                this.parmATPApplyDemandTimeFence(   this.transferLine_SalesCalcAvailableDlvDates().atpApplyDemandTimeFence);
                this.parmATPApplySupplyTimeFence(   this.transferLine_SalesCalcAvailableDlvDates().atpApplySupplyTimeFence);
                this.parmATPBackwardDemandTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpBackwardDemandTimeFence);
                this.parmATPBackwardSupplyTimeFence(this.transferLine_SalesCalcAvailableDlvDates().atpBackwardSupplyTimeFence);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventDimId</c> field.
    /// </summary>
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldNum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimIdTo_RU</Name>
				<Source><![CDATA[
    protected void setInventDimIdTo_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, InventDimIdTo_RU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransferRecordFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ItemId </c>and <c>TransferId</c> fields.
    /// </summary>
    public void setInventTransferRecordFields()
    {
        this.setItemId();
        this.setTransferId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransId</c> field.
    /// </summary>
    protected void setInventTransId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransIdReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransIdReceive</c> field.
    /// </summary>
    protected void setInventTransIdReceive()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventTransIdReceive)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransIdScrap</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransIdScrap</c> field.
    /// </summary>
    protected void setInventTransIdScrap()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventTransIdScrap)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransIdTransitFrom</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransIdTransitFrom</c> field.
    /// </summary>
    protected void setInventTransIdTransitFrom()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventTransIdTransitFrom)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransIdTransitTo</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransIdTransitTo</c> field.
    /// </summary>
    protected void setInventTransIdTransitTo()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, InventTransIdTransitTo)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ItemId</c> field.
    /// </summary>
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, ItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount_RU</Name>
				<Source><![CDATA[
    protected void setLineAmount_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, LineAmount_RU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineNum</c> field.
    /// </summary>
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, LineNum)))
        {
            return;
        }

        this.setTransferId();

        if (this.isFieldSet(fieldNum(InventTransferLine, TransferId)))
        {
            if (!lineNum)
            {
                lineNum = InventTransferLine::lastLineNum(this.parmTransferId());
            }
            lineNum += 1;

            this.parmLineNum(lineNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOverDeliveryPct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>OverDeliveryPct</c> field.
    /// </summary>
    protected void setOverDeliveryPct()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, OverDeliveryPct)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyReceived</c> field.
    /// </summary>
    protected void setPdsCWQtyReceived()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyReceived)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyReceiveNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyReceiveNow</c> field.
    /// </summary>
    protected void setPdsCWQtyReceiveNow()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyReceiveNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyRemainReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyRemainReceive</c> field.
    /// </summary>
    protected void setPdsCWQtyRemainReceive()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyRemainReceive)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyRemainShip</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyRemainShip</c> field.
    /// </summary>
    protected void setPdsCWQtyRemainShip()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyRemainShip)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyScrapped</c> field.
    /// </summary>
    protected void setPdsCWQtyScrapped()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyScrapped)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyShipNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyShipNow</c> field.
    /// </summary>
    protected void setPdsCWQtyShipNow()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyShipNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyShipped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyShipped</c> field.
    /// </summary>
    protected void setPdsCWQtyShipped()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyShipped)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCWQtyTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCWQtyTransfer</c> field.
    /// </summary>
    protected void setPdsCWQtyTransfer()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsCWQtyTransfer)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsOverrideFEFO</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsOverrideFEFO</c> field.
    /// </summary>
    protected void setPdsOverrideFEFO()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PdsOverrideFEFO)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPrice_RU</Name>
				<Source><![CDATA[
    protected void setPrice_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, Price_RU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit_RU</Name>
				<Source><![CDATA[
    protected void setPriceUnit_RU()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventTransferLine, PriceUnit_RU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyReceived</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyReceived</c> field.
    /// </summary>
    protected void setQtyReceived()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyReceived)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyReceiveNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyReceiveNow</c> field.
    /// </summary>
    protected void setQtyReceiveNow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyReceiveNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyRemainReceive</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyRemainReceive</c> field.
    /// </summary>
    protected void setQtyRemainReceive()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyRemainReceive)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyRemainShip</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyRemainShip</c> field.
    /// </summary>
    protected void setQtyRemainShip()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyRemainShip)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyScrapped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyScrapped</c> field.
    /// </summary>
    protected void setQtyScrapped()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyScrapped)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyShipNow</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyShipNow</c> field.
    /// </summary>
    protected void setQtyShipNow()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyShipNow)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyShipped</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyShipped</c> field.
    /// </summary>
    protected void setQtyShipped()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyShipped)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQtyTransfer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>QtyTransfer</c> field.
    /// </summary>
    protected void setQtyTransfer()
    {
        InventDim inventDimTo;
        InventDimId inventDimId;

        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, QtyTransfer)))
        {
            return;
        }

        this.setInventTransferRecordFields();
        this.setUnitId();

        if (this.isFieldSet(fieldNum(InventTransferLine, UnitId)) &&
            this.isInventTransferRecordFieldsSet())
        {
            inventDimTo.InventSiteId = InventLocation::find(this.inventTransferTableRecord().InventLocationIdTo).InventSiteId;

            if (inventDimTo.InventSiteId)
            {
                inventDimId = InventDim::findOrCreate(inventDimTo).InventDimId;
            }
            else
            {
                inventDimId = InventDim::inventDimIdBlank();
            }

            this.parmQtyTransfer(decRound(this.inventTable().inventStandardQty(inventDimId), UnitOfMeasure::unitOfMeasureDecimalPrecision(
                UnitOfMeasure::unitOfMeasureIdBySymbol(this.parmUnitId()))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReceiveDate</c> field.
    /// </summary>
    protected void setReceiveDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, ReceiveDate)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmReceiveDate(this.inventTransferTableRecord().ReceiveDate);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet(true, false))
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmReceiveDate(this.transferLine_SalesCalcAvailableDlvDates().ReceiveDate);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRemainStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RemainStatus</c> field.
    /// </summary>
    protected void setRemainStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, RemainStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRetailAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>RetailAreaId</c> field.
    /// </summary>
    protected void setRetailAreaId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, RetailAreaId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesCalcDlvDatesDependentFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>TransferId</c>,<c>InventDimId</c>, <c>ShipDate</c>, <c>ReceiveDate</c>,
    ///    and <c>DeliveryDateControl</c> fields.
    /// </summary>
    protected void setSalesCalcDlvDatesDependentFields()
    {
        this.setTransferId();
        this.setInventDimId();
        this.setShipDate();
        this.setReceiveDate();
        this.setDeliveryDateControlType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ShipDate</c> field.
    /// </summary>
    protected void setShipDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, ShipDate)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isInventTransferRecordFieldsSet())
        {
            this.parmShipDate(this.inventTransferTableRecord().ShipDate);
        }

        this.setSalesCalcDlvDatesDependentFields();

        if (this.isSalesCalcDlvDatesDependentFieldsSet(false))
        {
            if (this.transferLine_SalesCalcAvailableDlvDates())
            {
                this.parmShipDate(this.transferLine_SalesCalcAvailableDlvDates().ShipDate);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipdateFromReceiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ShipDate</c> field.
    /// </summary>
    protected void setShipdateFromReceiveDate()
    {
        if (this.parmShipDate() > this.parmReceiveDate())
        {
            this.parmShipDate(this.parmReceiveDate());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies default values to fields in an <c>AxInventTransferLine</c> table row.
    /// </summary>
    protected void setTableFields()
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>

        super();

        useMapPolicy = false;

        this.setTransferId();
        this.setLineNum();
        this.setItemId();
        this.setInventDimId();
        this.setInventTransId();
        this.setInventTransIdReceive();
        this.setInventTransIdTransitTo();
        this.setInventTransIdTransitFrom();
        this.setInventTransIdScrap();
        this.setPdsCWQtyTransfer();
        this.setPdsCWQtyShipped();
        this.setPdsCWQtyReceived();
        this.setPdsCWQtyShipNow();
        this.setPdsCWQtyReceiveNow();
        this.setPdsCWQtyRemainShip();
        this.setPdsCWQtyRemainReceive();
        this.setPdsCWQtyScrapped();
        this.setPdsOverrideFEFO();
        this.setQtyTransfer();
        this.setQtyShipped();
        this.setQtyReceived();
        this.setQtyShipNow();
        this.setQtyReceiveNow();
        this.setQtyRemainShip();
        this.setQtyRemainReceive();
        this.setShipDate();
        this.setReceiveDate();
        this.setRemainStatus();
        this.setQtyScrapped();
        this.setAutoReservation();
        this.setUnitId();
        this.setDeliveryDateControlType();
        this.setATPTimeFence();
        this.setATPInclPlannedOrders();
        this.setOverDeliveryPct();
        this.setUnderDeliveryPct();
        this.setRetailAreaId();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransferId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TransferId</c> field.
    /// </summary>
    protected void setTransferId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, TransferId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnderDeliveryPct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>UnderDeliveryPct</c> field.
    /// </summary>
    protected void setUnderDeliveryPct()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, UnderDeliveryPct)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setUnitId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>UnitId</c> field.
    /// </summary>
    protected void setUnitId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventTransferLine, UnitId)))
        {
            return;
        }

        this.setInventTransferRecordFields();

        if (this.isFieldSet(fieldNum(InventTransferLine, ItemId)))
        {
            this.parmUnitId(InventTableModule::find(this.inventTable().ItemId,ModuleInventPurchSales::Invent).UnitId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferLine_SalesCalcAvailableDlvDates</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the table cache of the <c>InventTransferLine</c> table.
    /// </summary>
    /// <param name="_inventTransferLine">
    ///    The <c>InventTransferLine</c> to set; optional.
    /// </param>
    /// <returns>
    ///    The <c>InventTransferLine</c> table.
    /// </returns>
    public InventTransferLine transferLine_SalesCalcAvailableDlvDates(InventTransferLine _inventTransferLine = null)
    {
        InventTransferLine   localInventTransferLine;

        if (! inventTransferLineIdx)
        {
            inventTransferLineIdx = this.nextCacheIdx();
        }

        if (! prmisDefault(_inventTransferLine))
        {
            this.tableCacheInsert(inventTransferLineIdx, localInventTransferLine);
            localInventTransferLine = _inventTransferLine;
        }
        else
        {
            if (this.tableCacheExist(inventTransferLineIdx))
            {
                localInventTransferLine = this.tableCacheLookup(inventTransferLineIdx);
            }
            else
            {
                this.setSalesCalcDlvDatesDependentFields();
                buf2Buf(this.currentRecord(), localInventTransferLine);
                SalesCalcAvailableDlvDates::initDateFields(localInventTransferLine);
                this.tableCacheInsert(inventTransferLineIdx, localInventTransferLine);
            }
        }

        return localInventTransferLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>InventDimId</c> value of <c>InventTransferLine</c> from an <c>InventDim</c> object.
    /// </summary>
    public void updateFromInventDim()
    {
        ttsbegin;
        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateFields();

        this.validateWrite();

        this.write();

        inventTransferLine.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates the item.
    /// </summary>
    /// <remarks>
    ///    This method throws an error if the item is not transferred. This method is overridden from the
    ///    <c>AxInternalBase</c> class.
    /// </remarks>
    protected void validateWrite()
    {
        if (!InventItemType::newItemId(this.inventTable().itemId).canBeTransferred())
        {
            throw error(strFmt("@SYS88192", this.inventTable().itemType));
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueMapDependingFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the valuemapping for the <c>ItemId</c> field.
    /// </summary>
    protected void valueMapDependingFields()
    {
        if (this.valueMappingInbound())
        {
            if (inventTransferLine.ItemId && item)
            {
                this.parmItemId(conPeek(this.axPurchItemId(inventTransferLine.ItemId,item),1));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxInventTransferLine </c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>AxInventTransferLine</c> class.
    /// </returns>
    /// <remarks>
    ///    Use the following procedure to customize or extend the
    ///    <c>
    ///       AxInventTransferLine
    ///    </c>
    ///    class.
    ///    <list type="number">
    ///       <item>
    ///          <description>
    ///             Create a new class that derives from <c>AxInventTransferLine</c>.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Overlayer the <c>construct</c> method on <c>AxInventTransferLine</c> so that it returns an instance
    ///             of the derived class.
    ///          </description>
    ///       </item>
    ///       <item>
    ///          <description>
    ///             Override the methods from the <c>AxInventTransferLine</c> class that you want to customize or
    ///             extend in your derived class.
    ///          </description>
    ///       </item>
    ///    </list>
    ///     This procedure helps make sure that your customizations are maintained if the base version of the
    ///    <c>
    ///       AxInventTransferLine
    ///    </c>
    ///     class is changed, minimizing code conflicts during an upgrade. For more information, see <see cref="Best Practices for static construct Methods" />
    ///    .
    /// </remarks>
    public static AxInventTransferLine construct()
    {
        return new AxInventTransferLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAxInventTransferTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets vaues from inventory transfer table.
    /// </summary>
    /// <param name = "_axInventTransferTable">The invent transfer table instance.</param>
    public void initFromAxInventTransferTable(AxInventTransferTable _axInventTransferTable)
    {
        this.inventTransferTableRecord(_axInventTransferTable.currentRecord());
        this.parmTransferId(_axInventTransferTable.parmTransferId());
        this.parmInventTransIdTransitFrom(_axInventTransferTable.parmInventLocationIdFrom());
        this.parmInventTransIdTransitTo(_axInventTransferTable.parmInventLocationIdTo());
        InventTransferLine currentInventTransferLine = this.currentRecord();
        this.parmInventDimId(currentInventTransferLine.inventDimMergeWarehouse(_axInventTransferTable.parmInventLocationIdFrom(), _axInventTransferTable.currentRecord()).InventDimId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventTransferJourLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets values from inventory transfer journal line.
    /// </summary>
    /// <param name = "_inventTransferJourLine">The invent transfer journal cursor.</param>
    public void initFromInventTransferJourLine(InventTransferJourLine _inventTransferJourLine)
    {
        this.parmLineNum(_inventTransferJourLine.LineNum);
        this.parmItemId(_inventTransferJourLine.ItemId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>