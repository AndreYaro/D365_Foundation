<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CBDDestinationsFormLetterContext_PurchaseAgreement</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
/// <summary>
/// The <c>CBDDestinationsFormLetterContext_PurchaseAgreement</c> class is an implementation of the
/// <c>CBDDestinationsFormLetterContextInterface</c> interface to support
/// runtime Electronic reporting destinations for Purchase agreement confirmation document.
/// </summary>
[ExportMetadata(classStr(CBDDestinationsFormLetterContextInterface), PrintMgmtDocumentType::PurchAgreementConfirmation)]
[Export(identifierstr(Dynamics.AX.Application.CBDDestinationsFormLetterContextInterface))]
internal final class CBDDestinationsFormLetterContext_PurchaseAgreement
    implements CBDDestinationsFormLetterContextInterface
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQueryTableBuffer</Name>
				<Source><![CDATA[
    public Common getQueryTableBuffer(Common _reference, Object _formLetter)
    {
        //The table PurchAgreementHeaderHistory does not contain isProforma() method.
        //So it cannot be used be used to search print management settings before posting.
        Common common;
        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCountReferences</Name>
				<Source><![CDATA[
    public NumberOfRecords getCountReferences(Object _formLetter)
    {
        return 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReferenceBuffer</Name>
				<Source><![CDATA[
    public Common getReferenceBuffer(Object _formLetter)
    {
        AgreementProformaConfirm agreementConfirm = _formLetter as AgreementProformaConfirm;

        if (!agreementConfirm)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        PurchAgreementHeader purchAgreementHeader;
        select firstonly purchAgreementHeader
            where purchAgreementHeader.RecId == agreementConfirm.parmAgreementHeader().RecId;

        return purchAgreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintMgmtRefTableBuffer</Name>
				<Source><![CDATA[
    public Common getPrintMgmtRefTableBuffer(Common _reference)
    {
        return _reference;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPrintContext</Name>
				<Source><![CDATA[
    public PrintMgmtPrintContext getPrintContext(Common _printMgmtReferencedTable, Common _queryTableBuffer)
    {
        PrintMgmtPrintContext printContext = new PrintMgmtPrintContext();

        printContext.parmDefaultOriginalPrintJobSettings(new SRSPrintDestinationSettings());
        printContext.parmDefaultCopyPrintJobSettings(new SRSPrintDestinationSettings());

        printContext.parmQueryTableBuffer(_queryTableBuffer);
        printContext.setHierarchyContext(
            PrintMgmtHierarchyType::Purch,
            PrintMgmtNodeType::PurchAgreement,
            PrintMgmtDocumentType::PurchAgreementConfirmation,
            _printMgmtReferencedTable.data());
        return printContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>