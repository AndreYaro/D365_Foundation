<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResCalendarInfoCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Holds a collection of <c>ResCalendarInfo</c> objects that can be retrieved by corresponding calendar Id.
/// </summary>
class ResCalendarInfoCache implements ResICalendarInfoResolver
{
    Map calendarsMap;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCalendarInfoByCalendarId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves <c>ResCalendarInfo</c> object for specific calendar Id.
    /// </summary>
    /// <param name = "_calendarId">The Id of calendar to get details for.</param>
    /// <returns><c>ResCalendarInfo</c> object holding details of the calendar or null if no calendar exists for provided Id.</returns>
    public ResCalendarInfo getCalendarInfoByCalendarId(CalendarId _calendarId)
    {
        ResCalendarInfo calendar;

        if (calendarsMap.exists(_calendarId))
        {
            calendar = calendarsMap.lookup(_calendarId);
        }
        else
        {
            calendar = this.populateFromTable(_calendarId);
        }

        return calendar;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateFromTable</Name>
				<Source><![CDATA[
    private ResCalendarInfo populateFromTable(CalendarId _calendarId)
    {
        WorkCalendarTable calendarTable = WorkCalendarTable::find(_calendarId);
        ResCalendarInfo calendarObject;

        if (calendarTable)
        {
            calendarObject = ResCalendarInfoFactory::newFromWorkCalendarTable(calendarTable);
            calendarsMap.insert(_calendarId, calendarObject);
        }

        return calendarObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refresh</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resets all cached info.
    /// </summary>
    public void refresh()
    {
        calendarsMap = new Map(Types::String, Types::Class);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
        this.refresh();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>ResCalendarInfoCache</c> class.
    /// </summary>
    /// <returns>A new instance of the <c>ResCalendarInfoCache</c> class.</returns>
    public static ResCalendarInfoCache initializeNew()
    {
        var calendarHierarchyMap = new ResCalendarInfoCache();
        return calendarHierarchyMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>