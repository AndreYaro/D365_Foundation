<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRRoyaltyVendorInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRRoyaltyVendorInstrumentationActivities</c> class provides activities for royalty claim run instrumentation logging.
/// </summary>
internal final class MCRRoyaltyVendorInstrumentationActivities
{
    private const str RunActivityNamePrefix                         = 'Run.';
    private const str VendTablePaymentPrefix                        = 'VendTablePayment';

    private const str RunApproval                                   = 'Approval';
    private const str RunProcess                                    = 'Process';
    private const str CustomPropertyRoyaltyClaimsCountProperty      = 'RoyaltyClaimsCount';
    private const str CustomPropertyRoyaltyClaimVendAccountProperty = 'VendorAccount';
    private const str CustomPropertyRoyaltyManualPostProperty       = 'RoyaltyManualPost';
    private const str PaymentPostMain                               = 'PaymentPostMain';
    private const str CreateVendorInvoice                           = 'CreateVendorInvoice';
    private const str PostVendorInvoice                             = 'PostVendorInvoice';
    private const str PostAccrualReversal                           = 'PostAccrualReversal';
    private const str runPaymentApproved                            = 'RunPaymentApproved';
    private const str runPaymentCalculated                          = 'RunPaymentCalculated';
    private const str runProcessedCalculated                        = 'RunProcessedCalculated';

    private MCRRoyaltyInstrumentationLogger logger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(MCRRoyaltyInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal static MCRRoyaltyVendorInstrumentationActivities newFromLogger(MCRRoyaltyInstrumentationLogger _logger)
    {
        return new MCRRoyaltyVendorInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityPrefix, str _activityName)
    {
        return logger.activityContext(logger.activity(strFmt('%1.%2', _activityPrefix, _activityName)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>runApproval</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext runApproval(VendAccount _vendAccount)
    {
        SysInstrumentationActivityContext context = logger.activityContext(logger.activity(RunActivityNamePrefix + RunApproval));
        context.addCustomProperty(CustomPropertyRoyaltyClaimVendAccountProperty, int642Str(VendTable::find(_vendAccount).RecId));
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runProcess</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext runProcess(VendAccount _vendAccount, boolean _isManualPosting)
    {
        SysInstrumentationActivityContext context = logger.activityContext(logger.activity(RunActivityNamePrefix + RunProcess));
        context.addCustomProperty(CustomPropertyRoyaltyClaimVendAccountProperty, int642Str(VendTable::find(_vendAccount).RecId));
        context.addCustomProperty(CustomPropertyRoyaltyManualPostProperty, any2Str(_isManualPosting));
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentPostMain</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext paymentPostMain(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, PaymentPostMain);
        
        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createVendorInvoice</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext createVendorInvoice(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, CreateVendorInvoice);
        
        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postVendorInvoice</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext postVendorInvoice(VendInvoiceInfoTable _vendInvoiceInfoTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, PostVendorInvoice);

        context.addCustomProperty(tableStr(VendInvoiceInfoTable), int642Str(_vendInvoiceInfoTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postAccrualReversal</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext postAccrualReversal(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, PostAccrualReversal);

        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPaymentApproved</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext runPaymentApproved(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, RunPaymentApproved);

        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPaymentCalculated</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext runPaymentCalculated(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, RunPaymentCalculated);

        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runProcessedCalculated</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal SysInstrumentationActivityContext runProcessedCalculated(MCRRoyaltyVendTable _mcrRoyaltyVendTable)
    {
        SysInstrumentationActivityContext context = this.activityContext(VendTablePaymentPrefix, RunProcessedCalculated);

        context.addCustomProperty(tableStr(MCRRoyaltyVendTable), int642Str(_mcrRoyaltyVendTable.RecId));
        
        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processedRoyaltyClaimsCount</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void processedRoyaltyClaimsCount(SysInstrumentationActivityContext _activityContext, int _royaltyClaimCount)
    {
        _activityContext.addCustomProperty(CustomPropertyRoyaltyClaimsCountProperty, any2Str(_royaltyClaimCount));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>