<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTableCopilotSummaryResultContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustTableCopilotSummaryResultContract</c> class is the result contract for cust table copilot summary.
/// </summary>
internal final class CustTableCopilotSummaryResultContract
{
    private AccountNum custAccount;
    private str custTableSummaryResult;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSummaryResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs new instance of <c>CustTableCopilotSummaryResultContract</c>.
    /// </summary>
    /// <param name = "_custAccount">The customer account number.</param>
    /// <param name = "_custTableSummaryResult">The customer summary result.</param>
    /// <returns>The instance of <c>CustTableCopilotSummaryResultContract</c>.</returns>
    internal static CustTableCopilotSummaryResultContract newFromSummaryResult(AccountNum _custAccount, str _custTableSummaryResult)
    {
        CustTableCopilotSummaryResultContract contract = new CustTableCopilotSummaryResultContract();
        contract.custAccount = _custAccount;
        contract.custTableSummaryResult = _custTableSummaryResult;

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the customer account number.
    /// </summary>
    /// <returns>The customer account number.</returns>
    internal AccountNum getCustAccount()
    {
        return this.custAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTableSummaryResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the customer summary result string.
    /// </summary>
    /// <returns>The customer summary result string.</returns>
    internal str getCustTableSummaryResult()
    {
        return this.custTableSummaryResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the instance of <c>CustTableCopilotSummaryResultContract</c> into container.
    /// </summary>
    /// <param name = "_contract">The instance of <c>CustTableCopilotSummaryResultContract</c>.</param>
    /// <returns>The container packed from the instance of <c>CustTableCopilotSummaryResultContract</c>.</returns>
    internal static container pack(CustTableCopilotSummaryResultContract _contract)
    {
        if (_contract)
        {
            return [_contract.getCustAccount(), _contract.getCustTableSummaryResult()];
        }

        return conNull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unpacks the container to the instance of <c>CustTableCopilotSummaryResultContract</c>.
    /// </summary>
    /// <param name = "_custTableSummaryResultContainer">The customer summary result container.</param>
    /// <returns>The instance of <c>CustTableCopilotSummaryResultContract</c>.</returns>
    internal static CustTableCopilotSummaryResultContract unpack(container _custTableSummaryResultContainer)
    {
        if (_custTableSummaryResultContainer)
        {
            return CustTableCopilotSummaryResultContract::newFromSummaryResult(
                conPeek(_custTableSummaryResultContainer, 1),
                conPeek(_custTableSummaryResultContainer, 2));
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>