<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProject</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjProject implements IProjProject
{
    ProjTable           projTable;
    ProjProjectCost     projectCost;
    projProjectBudget   projectBudget;
    projProjectSchedule projectSchedule;
    IProjWBS            wbs;
    ProjId              id;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(ProjId _projId)
    {
        id = _projId;
        projTable = ProjTable::find(_projId);
        if (!projTable)
        {
            throw error(strFmt("@Proj:ProjectNotFound", _projId, curext()));
        }
        projectCost     = ProjProjectCost::construct(projTable);
        projectBudget   = ProjProjectBudget::construct(projTable);
        projectSchedule = ProjProjectSchedule::construct(projTable);
        this.constructWBS();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getId</Name>
				<Source><![CDATA[
    public ProjId getId()
    {
        return this.id;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjProject construct(ProjId _projId)
    {
        return new ProjProject(_projId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalBudget</Name>
				<Source><![CDATA[
    public Total calculateTotalBudget()
    {
        return projectBudget.calculateTotalBudget();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalActualCost</Name>
				<Source><![CDATA[
    public Amount calculateTotalActualCost()
    {
        return projectCost.calculateTotalActualCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalActualEffort</Name>
				<Source><![CDATA[
    public Hours calculateTotalActualEffort()
    {
        return projectSchedule.calculateTotalActualEffort();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalEffortAtComplete</Name>
				<Source><![CDATA[
    public Hours calculateTotalEffortAtComplete()
    {
        return projectSchedule.calculateTotalEffortAtComplete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalPlannedEffort</Name>
				<Source><![CDATA[
    public Hours calculateTotalPlannedEffort()
    {
        return projectSchedule.calculateTotalPlannedEffort();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateCompletionByToday</Name>
				<Source><![CDATA[
    public Hours calculateCompletionByToday()
    {
        return ProjectSchedule.calculateCompletionByToday();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalPlannedCost</Name>
				<Source><![CDATA[
    public NonNegativeTotal calculateTotalPlannedCost()
    {
        return projectCost.calculateTotalPlannedCost();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalCostAtComplete</Name>
				<Source><![CDATA[
    public NonNegativeTotal calculateTotalCostAtComplete()
    {
        return projectCost.calculateTotalCostAtComplete();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getScheduleProgressPercent</Name>
				<Source><![CDATA[
    public int getScheduleProgressPercent(Hours _effortEAC, Hours _effortActual)
    {
        return ProjectSchedule.getScheduleProgressPercent(_effortEAC, _effortActual);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWBS</Name>
				<Source><![CDATA[
    public IProjWBS getWBS()
    {
        return this.wbs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructWBS</Name>
				<Source><![CDATA[
    private void constructWBS() {
        HierarchyLinkTable hierarchyLinkTable;
        select HierarchyId from hierarchyLinkTable
            where hierarchyLinkTable.RefRecId == projTable.RecId
                  && hierarchyLinkTable.RefTableId == projTable.TableId;
        wbs = ProjWBS::construct(hierarchyLinkTable.HierarchyId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>