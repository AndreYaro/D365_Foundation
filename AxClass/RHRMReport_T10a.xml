<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RHRMReport_T10a</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RHRMReport_T10a extends RHRMReport implements BatchRetryable
{
    RHRMOrderTable          orderTable;
    RHRMOrderTrans          orderTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>animationBoxCaption</Name>
				<Source><![CDATA[
    public str animationBoxCaption()
    {
        return "@RUP2205";
    }

]]></Source>
			</Method>
			<Method>
				<Name>animationBoxText</Name>
				<Source><![CDATA[
    public str animationBoxText()
    {
        return "@RUP2206";
    }

]]></Source>
			</Method>
			<Method>
				<Name>initData</Name>
				<Source><![CDATA[
    void initData(Args _args)
    {
        super(_args);
        orderTrans = _args.record();
        orderTable = RHRMOrderTable::find(orderTrans.orderTableRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prompt</Name>
				<Source><![CDATA[
    public boolean prompt()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    #define.CI_Name("CI_Name")
    #define.CI_CodeOKPO_RU("CI_CodeOKPO_RU")
    #define.OT_OrderNum("OT_OrderNum")
    #define.OT_TransDate("OT_TransDate")
    #define.ET_Name("ET_Name")
    #define.ET_EmplId("ET_EmplId")
    #define.Organization("Organization")
    #define.Position("Position")
    #define.tripDestination("tripDestination")
    #define.organizationTrip("organizationTrip")
    #define.StartDate("StartDate")
    #define.EndDate("EndDate")
    #define.dayNumber("dayNumber")
    #define.AtCost("AtCost")
    #define.Object("Object")
    #define.LeadTitle("LeadTitle")
    #define.LeadName("LeadName")
    #define.OTR_title("OTR_title")
    #define.OTR_name("OTR_name")
    #define.LeadTitle2("LeadTitle2")
    #define.LeadName2("LeadName2")

    void run()
    {
        RpayHistory rpayHistoryLast;
        LogisticsPostalAddress logisticsPostalAddress;
        OfficialsTable_RU officialsTable_RU;
        RPayHRMOrganization rPayHRMOrganization;

        worddocument.insertFieldValue(#CI_Name,          CompanyInfo::find().Name);

        worddocument.insertFieldValue(#CI_CodeOKPO_RU,   CompanyInfoHelper::partyOKPOasOfDate_RU(CompanyInfo::find()));

        worddocument.insertFieldValue(#OT_OrderNum,      orderTrans.AttachDocNum);
        worddocument.insertFieldValue(#OT_TransDate,     this.dateInNumber(orderTrans.AttachDocDate));

        worddocument.insertFieldValue(#ET_Name,          orderTrans.emplName());
        worddocument.insertFieldValue(#ET_EmplId,        orderTrans.Emplid);

        rpayHistoryLast = RpayHistory::findLastSignOnMove(orderTrans.Emplid, orderTrans.StartDate, orderTrans.RecId);

        worddocument.insertFieldValue(#Organization,     rpayHistoryLast.organizationDescription());

        worddocument.insertFieldValue(#Position,         HcmTitle::find(rpayHistoryLast.HcmTitle).TitleId);

        logisticsPostalAddress = LogisticsPostalAddress::findByLocation(orderTable.TripLocation);
        wordDocument.insertFieldValue(#tripDestination,  this.delimiter(this.delimiter(LogisticsAddressCountryRegionTranslation::find(logisticsPostalAddress.CountryRegionId).LongName,
                                                                                           LogisticsAddressState::find(logisticsPostalAddress.CountryRegionId, logisticsPostalAddress.State).Name),
                                                                                           logisticsPostalAddress.City));

        worddocument.insertFieldValue(#organizationTrip, orderTable.TripOrganization);
        worddocument.insertFieldValue(#StartDate,        date2StrUsr(orderTrans.StartDate, DateFlags::None));
        worddocument.insertFieldValue(#EndDate,          date2StrUsr(orderTrans.EndDate, DateFlags::None));
        worddocument.insertFieldValue(#dayNumber,        int2str(orderTrans.EndDate - orderTrans.StartDate + 1));
        worddocument.insertFieldValue(#AtCost,           orderTrans.TripAtCost);
        worddocument.insertFieldValue(#Object,           orderTrans.TripObject);

        rPayHRMOrganization = RPayHRMOrganization::find(rpayHistoryLast.HRMOrganizationId);
        worddocument.insertFieldValue(#LeadTitle,        HcmTitle::find(RHRMEmplTable::find(rPayHRMOrganization.OrganizationLead).HcmTitle).TitleId);
        worddocument.insertFieldValue(#LeadName,         RHRMEmplTable::emplId2Name(rPayHRMOrganization.OrganizationLead));

        officialsTable_RU = OfficialsTable_RU::findDirector();
        worddocument.insertFieldValue(#OTR_title,        officialsTable_RU.Title);
        worddocument.insertFieldValue(#OTR_name,         officialsTable_RU.Name);

        worddocument.insertFieldValue(#LeadTitle2,       HcmTitle::find(RHRMEmplTable::find(rPayHRMOrganization.OrganizationLead).HcmTitle).TitleId);
        worddocument.insertFieldValue(#LeadName2,        RHRMEmplTable::emplId2Name(rPayHRMOrganization.OrganizationLead));

        worddocument.unlinkFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateName</Name>
				<Source><![CDATA[
    #define.templateName("personnel_T10a.dot")
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    str templateName()
    {
        return #templateName;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>