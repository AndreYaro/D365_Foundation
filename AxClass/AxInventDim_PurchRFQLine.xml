<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxInventDim_PurchRFQLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxInventDim_PurchRFQLine extends AxInventDim
{
    AxPurchRFQLine axPurchRFQLine;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axPurchRFQLine</Name>
				<Source><![CDATA[
    public AxPurchRFQLine axPurchRFQLine(AxPurchRFQLine _axPurchRFQLine = axPurchRFQLine)
    {
        axPurchRFQLine = _axPurchRFQLine;
        return axPurchRFQLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>inputStatus</Name>
				<Source><![CDATA[
    protected int inputStatus(InternalExternal _inputStatus = axPurchRFQLine.callInputStatus())
    {
        if (axPurchRFQLine)
        {
            return axPurchRFQLine.callInputStatus(_inputStatus);
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modify</Name>
				<Source><![CDATA[
    public void modify()
    {
        axPurchRFQLine.modify();
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts or updates the current record for the <c>AxInventDim_PurchRFQLine</c> class.
    /// </summary>
    public void save()
    {
        axPurchRFQLine.updateFromInventDim();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfigId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ConfigId</c> parameter.
    /// </summary>
    public void setConfigId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, ConfigId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet())
        {
            this.parmConfigId(axPurchRFQLine.inventTableRecord().StandardConfigId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventColorId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventColorId</c> parameter.
    /// </summary>
    public void setInventColorId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventColorId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet())
        {
            this.parmInventColorId(axPurchRFQLine.inventTableRecord().StandardInventColorId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventVersionId</c> parameter.
    /// </summary>
    public void setInventVersionId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventVersionId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet())
        {
            this.parmInventVersionId(axPurchRFQLine.inventTableRecord().StandardInventVersionId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventLocationId</c> parameter.
    /// </summary>
    public void setInventLocationId()
    {
        InventDim   inventDimLocal;

        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventLocationId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();
        axPurchRFQLine.setAxPurchRFQTableFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet()  ||
            axPurchRFQLine.isAxPurchRFQTableFieldsSet()       ||
            axPurchRFQLine.axPurchRFQTable().isFieldModified(fieldnum(PurchRFQTable, InventLocationId)))
        {
            inventDimLocal = InventDim::find(axPurchRFQLine.parmInventDimId());
            if (this.parmInventSiteId())
            {
                inventDimLocal.InventSiteId = this.parmInventSiteId();
                inventDimLocal              = InventDim::findOrCreate(inventDimLocal);
            }
            this.parmInventLocationId(axPurchRFQLine.inventTableRecord().purchInventLocationId(axPurchRFQLine.axPurchRFQTable().parmInventLocationId(),
                                                                                                   inventDimLocal.InventDimId,
                                                                                                   inventDimLocal.InventSiteId));
        }
        if (!this.parmInventLocationId() && EcoResDimensionGroupSetup::isWarehouseDimensionMandatoryForItem(axPurchRFQLine.parmItemId()))
        {
            this.parmInventLocationId(InventFallbackWarehouse::transportWarehouse(this.parmInventSiteId()));
            if (!this.parmInventLocationId())
            {
                this.parmInventLocationId(InventParameters::find().FallbackInventLocationId);
                this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSiteId</c> parameter.
    /// </summary>
    public void setInventSiteId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSiteId)))
        {
            return;
        }

        if (this.isFieldSet(fieldnum(InventDim,InventLocationId)))
        {
            this.parmInventSiteId(axPurchRFQLine.inventTableRecord().purchInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId, this.parmInventDimId()));
        }

        if (!this.isFieldSet(fieldnum(InventDim,InventSiteId)))
        {
            axPurchRFQLine.setInventTableRecordFields();
            axPurchRFQLine.setAxPurchRFQTableFields();

            if (axPurchRFQLine.isInventTableRecordFieldsSet()   ||
                axPurchRFQLine.isAxPurchRFQTableFieldsSet() ||
                axPurchRFQLine.axPurchRFQTable().isFieldModified(fieldnum(PurchRFQTable, InventSiteId)))
            {
                this.parmInventSiteId(axPurchRFQLine.inventTableRecord().purchInventSiteId(axPurchRFQLine.axPurchRFQTable().parmInventSiteId(), axPurchRFQLine.parmInventDimId()));
            }
        }

        if (!this.parmInventSiteId())
        {
            this.parmInventSiteId(InventParameters::find().fallbackSiteId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSizeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>InventSizeId</c> parameter.
    /// </summary>
    public void setInventSizeId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(InventDim, InventSizeId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet())
        {
            this.parmInventSizeId(axPurchRFQLine.inventTableRecord().StandardInventSizeId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventStyleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value of the <c>InventStyleId</c> field.
    /// </summary>
    public void setInventStyleId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(InventDim, InventStyleId)))
        {
            return;
        }

        super();

        axPurchRFQLine.setInventTableRecordFields();

        if (axPurchRFQLine.isInventTableRecordFieldsSet())
        {
            this.parmInventStyleId(axPurchRFQLine.inventTableRecord().StandardInventStyleId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>newAxPurchRFQLine</Name>
				<Source><![CDATA[
    public static AxInventDim_PurchRFQLine newAxPurchRFQLine(AxPurchRFQLine _axPurchRFQLine)
    {
        AxInventDim_PurchRFQLine   axInventDim_PurchRFQLine;

        axInventDim_PurchRFQLine = new AxInventDim_PurchRFQLine();
        axInventDim_PurchRFQLine.axPurchRFQLine(_axPurchRFQLine);
        return axInventDim_PurchRFQLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>