<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttControlVisualization_ArrangeJobsTopologicalOrderFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The flight ensures that Gantt arrange function performs scheduling in the following topological order: 
/// 1. chronological order: from datetime 
/// AND 
/// 2. logical order: production order -> operation's number -> job type -> operation's priority.
/// The logical order part is necessary e.g. in case of infinite scheduling when datetime is the same arranging jobs across multiple production/PPO orders
/// </summary>
internal final class GanttControlVisualization_ArrangeJobsTopologicalOrderFlight extends Flight
{
    static private GanttControlVisualization_ArrangeJobsTopologicalOrderFlight singleton = new GanttControlVisualization_ArrangeJobsTopologicalOrderFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static GanttControlVisualization_ArrangeJobsTopologicalOrderFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>