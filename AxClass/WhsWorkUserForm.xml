<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkUserForm</Name>
	<SourceCode>
		<Declaration><![CDATA[/// <summary>
/// The <c>WhsWorkUserForm</c> class contains the business logic of the <c>WhsWorkUser</c> form.
/// </summary>
class WhsWorkUserForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createWHSWorkerFromHCMWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the <c>WHSWorker</c> record from a <c>HcmWorker</c> record.
    /// </summary>
    /// <param name="_hcmWorker">
    /// The record to use when creating the <c>WHSWorker</c> record.
    /// </param>
    /// <returns>
    /// The new <c>WHSWorker</c> record.
    /// </returns>
    public WHSWorker createWHSWorkerFromHCMWorker(HcmWorker _hcmWorker)
    {
        WHSWorker worker = WHSWorker::findByWorker(_hcmWorker.RecId);

        if (worker.RecId == 0)
        {
            ttsbegin;
            worker.Worker = _hcmWorker.RecId;
            worker.insert();
            ttscommit;
        }

        return worker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resetPassword</Name>
				<Source><![CDATA[	/// <summary>
	/// Opens <c>ResetUserPassword</c> form for a work user.
	/// </summary>
	/// <param name="_whsWorkUser">
	/// The work user record.
	/// </param>
	/// <param name="_newRecord">
	/// Determines whether the work user is a new user.
	/// </param>
	/// <param name="_args">
	/// Args to be passed to form run.
	/// </param>
    void resetPassword(WHSWorkUser _whsWorkUser, boolean _newRecord)
    {
        WHSWorkUser whsWorkUser = _whsWorkUser;

        Args args = new Args();
        args.name(formStr(WHSResetUserPassword));
        args.parmEnum(_newRecord);
        args.record(whsWorkUser);

        FormRun setPassword = classfactory.formRunClass(args);
        setPassword.init();
        setPassword.run();

        if (!setPassword.closed())
        {
            setPassword.wait(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsWorkUser_write</Name>
				<Source><![CDATA[	/// <summary>
	/// Writes a <c>WHSWorkUser</c> record to database.
	/// </summary>
	/// <param name="_whsWorkUser">
	/// Work user record.
	/// </param>
	/// <param name="_newRecord">
	/// Determines whether the work user is a new record or not.
	/// </param>
    void whsWorkUser_write(WHSWorkUser _whsWorkUser, boolean _newRecord = false)
    {
        if (_whsWorkUser.UserId)
        {
            this.resetPassword(_whsWorkUser, _newRecord);

            if (_newRecord)
            {
                this.writeUserLocation(_whsWorkUser);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeUserLocation</Name>
				<Source><![CDATA[	/// <summary>
	/// Creates a user location for the work user.
	/// </summary>
	/// <param name="_whsWorkUser">
	/// The work user.
	/// </param>
    void writeUserLocation(WHSWorkUser _whsWorkUser)

    {
        WMSLocation location;

        if (_whsWorkUser.UserDefaultWarehouse)
        {
			location = WMSLocation::find(_whsWorkUser.UserId, _whsWorkUser.UserDefaultWarehouse, true);
		
			if (!location &&  WHSWorkUser::exist(_whsWorkUser.UserId))
			{
				location.InventLocationId = _whsWorkUser.UserDefaultWarehouse;
				location.wmsLocationId = _whsWorkUser.UserId;
				location.LocProfileId = WHSParameters::find().UserLocType;
				location.write();
			}
		}
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>