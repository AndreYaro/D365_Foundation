<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>OperationEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class OperationEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>unpackDataContractObject</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(SysOperationQueryDataContractInfo), delegatestr(SysOperationQueryDataContractInfo, unpackDataContractObjectDelegate))]
    static void unpackDataContractObject(Query _query, Query _newQuery)
    {
        OperationEventHandler::clearDimensionRangesFromQuery(_query);
        OperationEventHandler::enableDimensionRangesFromQuery(_query, _newQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearDimensionRangesFromQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Clears all ranges related to the dimension field in the input query.
    /// </summary>
    /// <param name="_query">
    ///    The input query.
    /// </param>
    private static void clearDimensionRangesFromQuery(Query _query)
    {
        List                    list;
        ListEnumerator          listEnum;
        DimensionProviderBase   providerClass;

        list = DimensionProvider::getAllDimensionProviders();
        listEnum = list.getEnumerator();
        while (listEnum.moveNext())
        {
            providerClass = listEnum.current();
            providerClass.clearDimensionRangesFromQuery(_query);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableDimensionRangesFromQuery</Name>
				<Source><![CDATA[
    private static void enableDimensionRangesFromQuery(Query _query, Query _newQuery)
    {
        List                    list;
        ListEnumerator          listEnum;
        DimensionProviderBase   providerClass;
        int idx;
        int dataSourceId;
        QueryBuildDataSource buildDataSource, newBuildDataSource;
        list = DimensionProvider::getAllDimensionProviders();

        for (idx = 1; idx <= _newQuery.dataSourceCount(); ++idx)
        {
            newBuildDataSource = _newQuery.dataSourceNo(idx);
            dataSourceId = newBuildDataSource.uniqueId();

            buildDataSource = _query.dataSourceUniqueId(dataSourceId);
            // enable all disabled data sources in the query, such that has ranges
            // in the newQuery
            if (buildDataSource && buildDataSource.enabled() == false && newBuildDataSource.enabled())
            {
                if (newBuildDataSource.rangeCount()>0)
                {
                    // enable only data sources related with dimension fields
                    listEnum = list.getEnumerator();
                    while (listEnum.moveNext())
                    {
                        providerClass = listEnum.current();
                        providerClass.enableDimensionRangeOnQuery(buildDataSource);
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>