<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>XMLWordDocumentTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The table controller.
/// </summary>
public class XMLWordDocumentTable
{
    public System.Collections.SortedList rows;
    private NetDFOXMLWordprocessingTableProxy table;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(NetDFOXMLWordprocessingTableProxy _table)
    {
        table = _table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Createst the table controller.
    /// </summary>
    /// <param name = "_table">The table proxy.</param>
    /// <returns>The table controller.</returns>
    public static XMLWordDocumentTable construct(NetDFOXMLWordprocessingTableProxy _table)
    {
        XMLWordDocumentTable wordDocumentTable = new XMLWordDocumentTable(_table);
        wordDocumentTable.initializeRows();

        return wordDocumentTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProxy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Table proxy.
    /// </summary>
    /// <returns>The Table proxy.</returns>
    public NetDFOXMLWordprocessingTableProxy getProxy()
    {
        return table;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeRows</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes table tows.
    /// </summary>
    protected void initializeRows()
    {
        rows = new System.Collections.SortedList();

        System.Collections.IEnumerable tableRowEnumerable = table.descendantsTableRow();
        if (tableRowEnumerable != null)
        {
            int idx = 0;
            System.Collections.IEnumerator tableRowEnumerator = tableRowEnumerable.GetEnumerator();
            while (tableRowEnumerator.MoveNext())
            {
                NetDFOXMLWordprocessingTableRowProxy row = ERCast::asAny(tableRowEnumerator.Current) as NetDFOXMLWordprocessingTableRowProxy;
                if (row != null)
                {
                    rows.Add(idx, XMLWordDocumentTableRow::construct(row));
                    idx++;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLatestRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the latest row.
    /// </summary>
    /// <returns>The latest row.</returns>
    public XMLWordDocumentTableRow getLatestRow()
    {
        XMLWordDocumentTableRow result = null;

        if (rows.Count > 0)
        {
            result = this.getRow(rows.Count - 1);
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the row.
    /// </summary>
    /// <param name = "_index">The row index.</param>
    /// <returns>The row.</returns>
    public XMLWordDocumentTableRow getRow(int _index)
    {
        XMLWordDocumentTableRow result = null;

        if (rows.ContainsKey(_index))
        {
            result = ERCast::asAny(rows.GetByIndex(_index)) as XMLWordDocumentTableRow;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateLatestRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Duplicates the latest row.
    /// </summary>
    /// <returns>The new row.</returns>
    public XMLWordDocumentTableRow duplicateLatestRow()
    {
        XMLWordDocumentTableRow result = null;

        XMLWordDocumentTableRow latestRow = this.getLatestRow();
        if (latestRow != null)
        {
            result = latestRow.clone();

            System.Object[] argumentProxy = new System.Object[1]();
            argumentProxy.SetValue(result.getProxy(), 0);

            table.appendArray(argumentProxy);
            
            this.initializeRows();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>duplicateRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Duplicates the row.
    /// </summary>
    /// <param name = "_index">The row index.</param>
    /// <returns>The new row.</returns>
    public XMLWordDocumentTableRow duplicateRow(int _index)
    {
        XMLWordDocumentTableRow result = null;
        
        XMLWordDocumentTableRow row = this.getRow(_index);

        if (row != null)
        {
            result = row.clone();

            if (_index == 0)
            {
                row.getProxy()
                    .insertBeforeSelfTableRow(result.getProxy());
            }
            else
            {
                row.getProxy()
                    .insertAfterSelfTableRow(result.getProxy());
            }

            this.initializeRows();
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the row.
    /// </summary>
    /// <param name = "_row">The row index.></param>
    /// <param name = "_index">The row.</param>
    public void insertRow(XMLWordDocumentTableRow _row, int _index)
    {
        if (rows.ContainsKey(_index)
            || _index == rows.Count)
        {
            
            XMLWordDocumentTableRow row = this.getRow(_index);
            
            if (row != null)
            {
                if (_index == 0)
                {
                    row.getProxy()
                        .insertBeforeSelfTableRow(_row.getProxy());
                }
                else
                {
                    row.getProxy()
                        .insertAfterSelfTableRow(_row.getProxy());
                }

                this.initializeRows();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deletes the row.
    /// </summary>
    /// <param name = "_index">The row index.</param>
    public void deleteRow(int _index)
    {
        if (rows.ContainsKey(_index))
        {
            XMLWordDocumentTableRow row = this.getRow(_index);
            if (row != null)
            {
                row.remove();

                this.initializeRows();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>rows</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the rows.
    /// </summary>
    /// <returns>The rows.</returns>
    public System.Collections.SortedList rows()
    {
        return rows;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertCellValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the cell value.
    /// </summary>
    /// <param name = "_row">The row index.</param>
    /// <param name = "_cell">The cell index.</param>
    /// <param name = "_value">The calue.</param>
    public void insertCellValue(int _row, int _cell, anytype _value)
    {
        XMLWordDocumentTableRow row = this.getRow(_row);
        if (row != null)
        {
            row.insertCellValue(_cell, _value);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>