<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccPolicyCommitFundsExpensedProd</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
SourceDocumentEnumExtensionAttribute(enumStr(BusinessEvent_ProductRequisition), BusinessEvent_ProductRequisition::CommitBudgetFundsForExpensedProducts)
]
class AccPolicyCommitFundsExpensedProd extends AccountingPolicy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>determineIsAccountingRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsAccountingRequired()
    {
        boolean             isRequired;

        if (sourceDocumentLineItem
            && sourceDocumentLineItem.parmSourceDocumentLine().SourceRelationType == tableNum(TaxDocCompLineSourceDocLine))
        {
            isRequired = false;
        }
        else if (!sourceDocumentAccountingPolicy || sourceDocumentAccountingPolicy.parmAccountingRequirement() == SourceDocumentAccountingRequirement::DetermineRecognitionByLine)
        {
            changecompany(sourceDocumentLineItem.parmLegalEntityDataAreaId())
            {
                isRequired = LedgerParameters::find().IsPreEncumbranceProcessEnabled;
            }
        }
        else
        {
            isRequired = sourceDocumentAccountingPolicy.parmIsAccountingRequired();
        }

        return isRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsDistributionRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsDistributionRequired()
    {
        boolean ret;

        if (sourceDocumentLineItem
            && sourceDocumentLineItem.parmSourceDocumentLine().SourceRelationType == tableNum(TaxDocCompLineSourceDocLine))
        {
            ret = false;
        }
        else
        {
            ret = super();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineIsFinalizationRequired</Name>
				<Source><![CDATA[
    protected boolean determineIsFinalizationRequired()
    {
        PurchReqLine    purchReqLine;
        PurchLine       purchLine;
        boolean         isRequired;

        if (sourceDocumentLineItem is PurchReqSourceDocLineItem )
        {
            purchReqLine = purchReqLine::findBySourceDocumentLine(sourceDocumentLineItem.parmSourceDocumentLine().RecId);

            if (purchReqLine)
            {
                purchLine = purchReqLine.purchLine();
            }
            // req line is not associated with purch line
            if (!purchLine)
            {
                isRequired = true;
            }
        }
        else if (sourceDocumentLineItem is ChargeSourceDocLineItem)
        {
            isRequired = true;
        }

        return isRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingRequired</Name>
				<Source><![CDATA[
    public boolean parmAccountingRequired()
    {
        boolean ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFinalizationRequired</Name>
				<Source><![CDATA[
    public boolean parmFinalizationRequired()
    {
        boolean ret;

        ret = super();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineSubledgerJournalRelievingMethod</Name>
				<Source><![CDATA[
    protected SubledgerJournalRelievingMethod determineSubledgerJournalRelievingMethod()
    {
        SourceDocumentLineRecId sourceDocumentLineRecId = sourceDocumentLineItem.parmSourceDocumentLine().RecId;
        SourceDocumentLineRecId topParentSourceDocumentLineRecId = SourceDocumentLine::findTopParentSourceDocumentLine(sourceDocumentLineRecId).RecId;

        if (isConfigurationkeyEnabled(configurationKeyNum(BudgetReservation_PSN))
            && PublicSectorUtils::isBudgetReservationEnabled()
            && PurchReqLine::findBySourceDocumentLine(topParentSourceDocumentLineRecId).BudgetReservationLine_PSN)
        {
            return SubledgerJournalRelievingMethod::Partial;
        }

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>