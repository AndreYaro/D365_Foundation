<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsEmailContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>CustCollectionsEmailContext</c> class provides context to the <c>CustCollectionsEmail</c>
///    class so that it can generate the appropriate e-mail.
/// </summary>
class CustCollectionsEmailContext
{
    CustTable custTable;
    CustTrans custTrans;
    CustCollectionsEmailType emailType;
    Email emailAddress;
    CustAgingDate agingDate;
    CustVendReportName agingPeriodDefinition;
    ContactPersonName contactPerson;
    DateTransactionDuedate agedBy;
    TransDate closedTransDateRangeStart;
    boolean includeSettledTransactions;
    container selectedCompanies;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new()
    {
        agedBy = DateTransactionDuedate::DueDate;
        closedTransDateRangeStart = dateNull();
        includeSettledTransactions = false;
        selectedCompanies = [curext()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgedBy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the transaction date that should be considered when aging the open transaction amounts.
    /// </summary>
    /// <param name="_agedBy">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The <c>AgedBy</c> value.
    /// </returns>
    /// <remarks>
    ///    Transactions are aged based on the number of days overdue from the transaction date, due date, or
    ///    document date. The default value upon construction is to age by the due date.
    /// </remarks>
    public DateTransactionDuedate parmAgedBy(DateTransactionDuedate _agedBy = agedBy)
    {
        agedBy = _agedBy;
        return agedBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingDate</Name>
				<Source><![CDATA[
        public CustAgingDate parmAgingDate(CustAgingDate _agingDate = agingDate)
    {
        agingDate = _agingDate;
        return agingDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgingPeriodDefinition</Name>
				<Source><![CDATA[
        public CustVendReportName parmAgingPeriodDefinition(CustVendReportName _agingPeriodDefinition = agingPeriodDefinition)
    {
        agingPeriodDefinition = _agingPeriodDefinition;
        return agingPeriodDefinition;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClosedTransDateRangeStart</Name>
				<Source><![CDATA[
        public TransDate parmClosedTransDateRangeStart(TransDate _closedTransDateRangeStart = closedTransDateRangeStart)
    {
        closedTransDateRangeStart = _closedTransDateRangeStart;
        return closedTransDateRangeStart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPerson</Name>
				<Source><![CDATA[
        public ContactPersonName parmContactPerson(ContactPersonName _contactPerson = contactPerson)
    {
        contactPerson = _contactPerson;
        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustTable</Name>
				<Source><![CDATA[
        public CustTable parmCustTable(CustTable _custTable = custTable)
    {
        custTable = _custTable;
        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustTrans</c> parameter.
    /// </summary>
    /// <param name="_custTrans">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustTrans</c> parameter.
    /// </returns>
    /// <remarks>
    ///    This must be set to a form data source that contains the selected records.
    /// </remarks>
    public CustTrans parmCustTrans(CustTrans _custTrans = custTrans)
    {
        custTrans = _custTrans;
        return custTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailAddress</Name>
				<Source><![CDATA[
        public Email parmEmailAddress(Email _emailAddress = emailAddress)
    {
        emailAddress = _emailAddress;
        return emailAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailType</Name>
				<Source><![CDATA[
        public CustCollectionsEmailType parmEmailType(CustCollectionsEmailType _emailType = emailType)
    {
        emailType = _emailType;
        return emailType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeSettledTransactions</Name>
				<Source><![CDATA[
        public boolean parmIncludeSettledTransactions(boolean _includeSettledTransactions = includeSettledTransactions)
    {
        includeSettledTransactions = _includeSettledTransactions;
        return includeSettledTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectedCompanies</Name>
				<Source><![CDATA[
        public container parmSelectedCompanies(container _selectedCompanies = selectedCompanies)
    {
        selectedCompanies = _selectedCompanies;
        return selectedCompanies;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>