<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanySyncPurchLineType_AppSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InterCompanySyncPurchLineType_AppSuite_Extension</c> class is used for extension of the <c>InterCompanySyncPurchLineType</c> class functionality.
/// </summary>
[ExtensionOf(classStr(InterCompanySyncPurchLineType))]
internal final class InterCompanySyncPurchLineType_AppSuite_Extension
{

    private TradeInterCompanyConv convDlvTerm;
    private TradeInterCompanyConv convDlvTermSyncBack;
    private TradeInterCompanyConv convDlvMode;
    private TradeInterCompanyConv convDlvModeSyncBack;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setSalesLineData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the intercompany order line record with data from the purchase order line.
    /// </summary>
    protected void setSalesLineData()
    {
        next setSalesLineData();

        if (create || purchLine.fieldChanged(fieldNum(PurchLine, StatTriangularDeal)))
        {
            if (IntrastatTriangularDealToggle::isEnabledInDataArea(curExt())
                && IntrastatTriangularDealToggle::isEnabledInDataArea(purchLine.DataAreaId))
            {
                axSalesLine.parmStatTriangularDeal(purchLine.StatTriangularDeal);
            }
        }

        
        this.setDeliveryTermsOnSalesLine();
        this.setDeliveryModeOnSalesLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryModeOnSalesLine</Name>
				<Source><![CDATA[
    private void setDeliveryModeOnSalesLine()
    {
        if (create)
        {
            if (purchLine.DlvMode)
            {
                axSalesLine.parmDlvMode(convDlvMode.axDlvModeId(toInterCompanyTradingValueMap));
            }
            else if (axSalesLine.parmDlvMode())
            {
                convDlvModeSyncBack = TradeInterCompanyConv::construct();
                convDlvModeSyncBack.axDlvModeId(toInterCompanyTradingValueMap, axSalesLine.parmDlvMode());

                changecompany(purchLine.company())
                {
                    setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                    if (InterCompanySyncPurchLineTypeDeliveryModeFlight::instance().isEnabled())
                    {
                        purchLine.DlvMode = convDlvModeSyncBack.axDlvModeId(fromInterCompanyTradingValueMap);
                    }
                    else
                    {
                        purchLine.DlvMode = convDlvTermSyncBack.axDlvModeId(fromInterCompanyTradingValueMap);
                    }
                }
            }
        }
        else if (purchLine.fieldChanged(fieldnum(PurchLine, DlvMode)))
        {
            axSalesLine.parmDlvMode(purchLine.DlvMode ? convDlvMode.axDlvModeId(toInterCompanyTradingValueMap) : '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryTermsOnSalesLine</Name>
				<Source><![CDATA[
    private void setDeliveryTermsOnSalesLine()
    {
        if (create)
        {
            if (purchLine.DlvTerm)
            {
                axSalesLine.parmDlvTerm(convDlvTerm.axDlvTermId(toInterCompanyTradingValueMap));
            }
            else if (axSalesLine.parmDlvTerm())
            {
                convDlvTermSyncBack = TradeInterCompanyConv::construct();
                convDlvTermSyncBack.axDlvTermId(toInterCompanyTradingValueMap, axSalesLine.parmDlvTerm());

                changecompany(purchLine.company())
                {
                    setprefix(strfmt("@SYS93821",TradeInterCompany::curCompanyName()));

                    purchLine.DlvTerm = convDlvTermSyncBack.axDlvTermId(fromInterCompanyTradingValueMap);
                }
            }
        }
        else if (purchLine.fieldChanged(fieldnum(PurchLine, DlvTerm)))
        {
            axSalesLine.parmDlvTerm(purchLine.DlvTerm ? convDlvTerm.axDlvTermId(toInterCompanyTradingValueMap) : '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareSynchronization</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the actions necessary to synchronize the purchase order line with the intercompany sales order line.
    /// </summary>
    protected void prepareSynchronization()
    {
        next prepareSynchronization();

        if (purchLine.DlvTerm)
        {
            convDlvTerm = TradeInterCompanyConv::construct();
            convDlvTerm.axDlvTermId(fromInterCompanyTradingValueMap, purchLine.DlvTerm);
        }

        if (purchLine.DlvMode)
        {
            convDlvMode = TradeInterCompanyConv::construct();
            convDlvMode.axDlvModeId(fromInterCompanyTradingValueMap, purchLine.DlvMode);
        }        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>