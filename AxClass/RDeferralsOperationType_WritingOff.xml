<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rDeferralsOperationType_WritingOff</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rDeferralsOperationType_WritingOff extends RDeferralsOperationType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canBePosted</Name>
				<Source><![CDATA[
        public boolean canBePosted()
    {
        if (ledgerJournalTrans_RDeferrals.ToFromRecId)
            return rDeferralsBook.Status != RDeferralsStatus::Retired;
        else
            return rDeferralsBook.Status == RDeferralsStatus::Open;
    }

]]></Source>
			</Method>
			<Method>
				<Name>check</Name>
				<Source><![CDATA[
        public boolean check()
    {
        boolean ret;

        ret = super();
        ret = ret && this.checkNetBookValue();
        if (! ledgerJournalTrans_RDeferrals.ToFromRecId)
            ret = ret && this.checkExistFactors();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkExistFactors</Name>
				<Source><![CDATA[
        public boolean checkExistFactors()
    {
        if (RDeferralsProfile::find(rDeferralsBook.DeferralsProfile).DeferralsMethod == RDeferralsMethod::LinearWithFactor &&
            ! RDeferralsWritingOffFactor::findCalculatedPeriod(transDate,
                                                               RDeferralsTable::find(rDeferralsBook.DeferralsId).rTax25ProfitTable,
                                                               rDeferralsBook.DeferralsGroupId).RecId)
            return checkFailed(strfmt("@GLS107207", transDate, rDeferralsBook.DeferralsId, rDeferralsBook.DeferralsBookId));

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkLastWriteDate</Name>
				<Source><![CDATA[
        public boolean checkLastWriteDate()
    {
        if (! ledgerJournalTrans_RDeferrals.ToFromRecId)
            return super();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkNetBookValue</Name>
				<Source><![CDATA[
        public boolean checkNetBookValue()
    {
        if (! ledgerJournalTrans_RDeferrals.ToFromRecId)
            return super();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkPostTrans</Name>
				<Source><![CDATA[
        public boolean checkPostTrans()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>rDeferralsTransType</Name>
				<Source><![CDATA[
        public RDeferralsTransType rDeferralsTransType()
    {
        return RDeferralsTransType::WritingOff;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>