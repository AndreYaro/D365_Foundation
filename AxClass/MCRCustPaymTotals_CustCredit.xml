<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustPaymTotals_CustCredit</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>MCRCustPaymTotals_CustCredit</c> class is used for payments
///     created from credits generated through
///     order management.
/// </summary>
class MCRCustPaymTotals_CustCredit extends MCRCustPaymTotals
{
    MCRCustCreditTable   mcrCustCreditTable;
    LedgerJournalTrans  ledgerJournalTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Always allow edit.
    /// </summary>
    /// <returns>
    /// true.
    /// </returns>
    public boolean allowEdit()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcInvoicePaymAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the credit amount for the related credit.
    /// </summary>
    /// <param name="custInvoiceJour">
    /// Not used in this instance of the class.
    /// </param>
    /// <returns>
    /// The credit amount for the related credit.
    /// </returns>
    public  AmountCur calcInvoicePaymAmount(CustInvoiceJour custInvoiceJour)
    {
        return this.getTotalPaymAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the currency the credit was created in.
    /// </summary>
    /// <returns>
    /// The currency the credit was created in.
    /// </returns>
    public  CurrencyCode getCurrency()
    {
        return mcrCustCreditTable.OrderCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the related ledger journal trans records dimension.
    /// </summary>
    /// <returns>
    /// The related ledger journal trans records dimension.
    /// </returns>
    public DimensionDefault getDimension()
    {
        return ledgerJournalTrans.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the customer credit records' customer account.
    /// </summary>
    /// <returns>
    /// The customer credit records' customer account.
    /// </returns>
    /// <remarks>
    /// All credits are created for the invoice
    ///     account of the sales order.
    /// </remarks>
    public CustAccount getInvoiceAccount()
    {
        return mcrCustCreditTable.CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the credit ID on the customer credit record.
    /// </summary>
    /// <returns>
    /// The credit ID on the customer credit record.
    /// </returns>
    public Num getOrderId()
    {
        return mcrCustCreditTable.CreditID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingProfile</Name>
				<Source><![CDATA[
        public PostingProfile getPostingProfile(boolean _recalc = false)
    {
        SalesTable salesTable = SalesTable::find(mcrCustCreditTable.OrigSalesID);

        if (salesTable && salesTable.PostingProfile)
        {
            return salesTable.PostingProfile;
        }
        else
        {
            return CustParameters::find().PostingProfile;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Returns zero because the total discount cannot apply to credits.
    /// </summary>
    /// <returns>
    /// The total discount amount.
    /// </returns>
    protected AmountCur getTotalDiscount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalInvoicedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the invoice amount for the credit.
    /// </summary>
    /// <returns>
    /// The invoice amount for the credit.
    /// </returns>
    public AmountCur getTotalInvoicedAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalSalesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the total credit amount.
    /// </summary>
    /// <returns>
    /// The total credit amount.
    /// </returns>
    public  AmountCur getTotalSalesAmount()
    {
        return mcrCustCreditTable.TotalCredit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates a new customer payment totals object.
    /// </summary>
    /// <param name="_refRecID">
    /// The reference record ID of the record to use to construct the customer payment totals object.
    /// </param>
    public void new(RecId _refRecID)
    {
        mcrCustCreditTable = MCRCustCreditTable::findByRecID(_refRecID, false);
        ledgerJournalTrans = LedgerJournalTrans::findRecId(_refRecID, false);

        super(tableNum(MCRCustCreditTable), mcrCustCreditTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleBillUpFrontContChildren</Name>
				<Source><![CDATA[
        public void settleBillUpFrontContChildren()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleInstallmentsOrder</Name>
				<Source><![CDATA[
        protected void settleInstallmentsOrder(boolean _instalAdjs = false)
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleOnAccountPayments</Name>
				<Source><![CDATA[
        public void settleOnAccountPayments()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransStatus</Name>
				<Source><![CDATA[
        public void setTransStatus()
    {
        // no code in super super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>