<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PaymSchedCalc_Amount</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Subclass of <c>PaymSchedCalc</c>.
/// </summary>
final class PaymSchedCalc_Amount extends PaymSchedCalc
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates transactions.
    /// </summary>
    /// <param name = "_custVendPaymentSchedLine">The customer vendor payment schedule line.</param>
    public void createTransaction(CustVendPaymentSchedLine _custVendPaymentSchedLine)
    {
        AmountCur lineDueAmountCalculatedProportionally;
        AmountCur lineDiscountAmountCalculatedProportionally;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIT])
            && splitPaymSumTax_IT)
        {
            this.adjustInvoiceAmountsSplitPaym_IT(AddRemove::Remove);
        }

        AmountCur remainAmountCur = invoiceAmount;
        this.setDueDate();
        CustVendPaymSched::deletePaymSchedLines(custVendPaymSched, custVendPaymSchedLine, skipVersionChangeCheck);

        CustVendPaymentSchedLine newCustVendPaymSchedLine = this.initNewCustVendPaymSchedLine(_custVendPaymentSchedLine);

        while (abs(remainAmountCur))
        {
            if (invoiceAmount > 0)
            {
                lineDueAmountCalculatedProportionally = min(max(custVendPaymSched.PaymAmountCur, custVendPaymSched.LowestAmount),
                                        remainAmountCur);
            }
            else
            {
                lineDueAmountCalculatedProportionally = -1 * min(max(abs(custVendPaymSched.PaymAmountCur), custVendPaymSched.LowestAmount),
                                        abs(remainAmountCur));
            }
            newCustVendPaymSchedLine.DueAmount = lineDueAmountCalculatedProportionally;
            remainAmountCur -= newCustVendPaymSchedLine.DueAmount;

            if (abs(remainAmountCur) < custVendPaymSched.LowestAmount)
            {
                newCustVendPaymSchedLine.DueAmount += remainAmountCur;
                remainAmountCur = 0;
            }

            lineDiscountAmountCalculatedProportionally = CurrencyExchangeHelper::amount(cashDiscAmount * (newCustVendPaymSchedLine.DueAmount / invoiceAmount), currencyCode);

            newCustVendPaymSchedLine.DiscAmount = lineDiscountAmountCalculatedProportionally;
            newCustVendPaymSchedLine.insert();

            newCustVendPaymSchedLine = _custVendPaymentSchedLine.data();
            newCustVendPaymSchedLine.DueDate = this.nextDueDate();

            if (isConfigurationkeyEnabled(configurationKeyNum(PaymCalendar)) && this.parmDueDateUpdatePolicy() != PaymentDueDateUpdatePolicy::NoUpdate)
            {
                newCustVendPaymSchedLine.DueDate = paymCalendarProcessor.adjustDateForCalendar(newCustVendPaymSchedLine.DueDate, this.parmDueDateUpdatePolicy(), paymCalendarResults);
            }

            newCustVendPaymSchedLine.DiscDate = this.nextDiscDate(newCustVendPaymSchedLine.DueDate);
        }

        if (MultipleTaxIdReportingHelper::isLegalEntityOrAddressInCountryRegion([#isoIT], MultipleTaxIdScope::VATDeclaration)
            && splitPaymSumTax_IT)
        {
            this.createTransactionSplitPaym_IT();
            this.adjustInvoiceAmountsSplitPaym_IT(AddRemove::Add);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initNewCustVendPaymSchedLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Initializes <c>CustVendPaymentSchedLine</c> map.
    /// </summary>
    /// <param name = "_custVendPaymentSchedLine">
    ///     The customer vendor payment schedule line.
    /// </param>
    /// <returns>
    ///     The initialized <c>CustVendPaymentSchedLine</c> object.
    /// </returns>
    protected CustVendPaymentSchedLine initNewCustVendPaymSchedLine(CustVendPaymentSchedLine _custVendPaymentSchedLine)
    {
        CustVendPaymentSchedLine newCustVendPaymSchedLine = _custVendPaymentSchedLine.data();
        newCustVendPaymSchedLine.DueDate = dueDate;
        newCustVendPaymSchedLine.DiscDate = this.nextDiscDate(newCustVendPaymSchedLine.DueDate);

        return newCustVendPaymSchedLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the amount.
    /// </summary>
    public void setAmount()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>