<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxInvoiceSerialNumberGeneratorContextProjInvoice_ID</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
/// <summary>
/// The <c>TaxInvoiceSerialNumberGeneratorContextProjInvoice_ID</c> class is an implementation of the
/// <c>TaxInvoiceSerialNumberGeneratorContextInterface_ID</c> interface to support
/// generate tax invoice serial number for a Project invoice.
/// </summary>
[ExportMetadata(classStr(TaxInvoiceSerialNumberGeneratorContextInterface_ID), tableStr(ProjInvoiceJour))]
[Export(identifierstr(Dynamics.AX.Application.TaxInvoiceSerialNumberGeneratorContextInterface_ID))]
internal class TaxInvoiceSerialNumberGeneratorContextProjInvoice_ID implements TaxInvoiceSerialNumberGeneratorContextInterface_ID,
    TaxInvoiceSerialNumberGeneratorContextEInvoiceInterface_ID
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getNumberSequenceGroup</Name>
				<Source><![CDATA[
    public NumberSequenceGroupId getNumberSequenceGroup(Common _common)
    {
        ProjInvoiceJour projInvoiceJour = _common as ProjInvoiceJour;
        return projInvoiceJour.NumberSequenceGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addRangeRefCreditInvoicingTable</Name>
				<Source><![CDATA[
    public void addRangeRefCreditInvoicingTable(Common _common, QueryBuildDataSource _qbds)
    {
        ProjInvoiceJour projInvoiceJour = _common as ProjInvoiceJour;
        str range;
        str qbdsName = _qbds.name();
        str rangeTemplate = strFmt('((%1.%2 == %3) && (%1.%4 == %5))',
            qbdsName,
            fieldStr(CustVendCreditInvoicingTable, RefTableId),
            '%1',
            fieldStr(CustVendCreditInvoicingTable, RefRecId),
            '%2');

        ProjInvoiceEmpl                 projInvoiceEmpl;
        ProjInvoiceEmplDetail           projInvoiceEmplDetail;

        while select TableId from projInvoiceEmpl
            where projInvoiceEmpl.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                && projInvoiceEmpl.InvoiceDate == projInvoiceJour.InvoiceDate
        join RefRecId from projInvoiceEmplDetail
            where projInvoiceEmplDetail.InvoiceRefRecId == projInvoiceEmpl.RecId
                && projInvoiceEmplDetail.RefRecId != 0
        {
            range += this.getRefRange(range, rangeTemplate, projInvoiceEmplDetail.TableId, projInvoiceEmplDetail.RefRecId);
        }

        ProjInvoiceCost                 projInvoiceCost;
        ProjInvoiceCostDetail           projInvoiceCostDetail;

        while select TableId from projInvoiceCost
            where projInvoiceCost.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                && projInvoiceCost.InvoiceDate == projInvoiceJour.InvoiceDate
        join RefRecId from projInvoiceCostDetail
            where projInvoiceCostDetail.InvoiceRefRecId == projInvoiceCost.RecId
                && projInvoiceCostDetail.RefRecId != 0
        {
            range += this.getRefRange(range, rangeTemplate, projInvoiceCostDetail.TableId, projInvoiceCostDetail.RefRecId);
        }

        ProjInvoiceItem                 projInvoiceItem;
        ProjInvoiceItemDetail           projInvoiceItemDetail;

        while select TableId from projInvoiceItem
            where projInvoiceItem.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                && projInvoiceItem.InvoiceDate == projInvoiceJour.InvoiceDate
        join RefRecId from projInvoiceItemDetail
            where projInvoiceItemDetail.InvoiceRefRecId == projInvoiceItem.RecId
                && projInvoiceItemDetail.RefRecId != 0
        {
            range += this.getRefRange(range, rangeTemplate, projInvoiceItemDetail.TableId, projInvoiceItemDetail.RefRecId);
        }

        ProjInvoiceRevenue                 projInvoiceRevenue;
        ProjInvoiceRevenueDetail           projInvoiceRevenueDetail;

        while select TableId from projInvoiceRevenue
            where projInvoiceRevenue.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                && projInvoiceRevenue.InvoiceDate == projInvoiceJour.InvoiceDate
        join RefRecId from projInvoiceRevenueDetail
            where projInvoiceRevenueDetail.InvoiceRefRecId == projInvoiceRevenue.RecId
                && projInvoiceRevenueDetail.RefRecId != 0
        {
            range += this.getRefRange(range, rangeTemplate, projInvoiceRevenueDetail.TableId, projInvoiceRevenueDetail.RefRecId);
        }

        ProjInvoiceOnAcc                 projInvoiceOnAcc;
        ProjInvoiceOnAccDetail           projInvoiceOnAccDetail;

        while select TableId from projInvoiceOnAcc
            where projInvoiceOnAcc.ProjInvoiceId == projInvoiceJour.ProjInvoiceId
                && projInvoiceOnAcc.InvoiceDate == projInvoiceJour.InvoiceDate
        join RefRecId from projInvoiceOnAccDetail
            where projInvoiceOnAccDetail.InvoiceRefRecId == projInvoiceOnAcc.RecId
                && projInvoiceOnAccDetail.RefRecId != 0
        {
            range += this.getRefRange(range, rangeTemplate, projInvoiceOnAccDetail.TableId, projInvoiceOnAccDetail.RefRecId);
        }

        if (range != '')
        {
            range = '(' + range + ')';
        }
        else
        {
            range = queryValue(0);
        }

        _qbds.addRange(fieldNum(CustVendCreditInvoicingTable, RefRecId)).value(range);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCorrectedTaxInvoiceSerialNumber</Name>
				<Source><![CDATA[
    public TaxInvoiceSerialNumber_ID getCorrectedTaxInvoiceSerialNumber(CustVendCorrectedInvoiceId _correctedInvoiceId, InvoiceDate _correctedInvoiceDate)
    {
        return ProjInvoiceJour::find(_correctedInvoiceId, _correctedInvoiceDate).TaxInvoiceSalesId_ID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRefRange</Name>
				<Source><![CDATA[
    private str getRefRange(str _range, str _template, RefTableId _tableId, RefRecId _recId)
    {
        return (_range != '' ? '||' : '') + strFmt(_template, _tableId, _recId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentCountryRegion</Name>
				<Source><![CDATA[
    [SysObsolete('This method should not to be used any more.', true, 24\09\2021)]
    public LogisticsAddressCountryRegionId getDocumentCountryRegion(Common _common)
    {
        ProjInvoiceJour projInvoiceJour = _common as ProjInvoiceJour;
        return CustTable::find(projInvoiceJour.InvoiceAccount).postalAddress().CountryRegionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eInvoice</Name>
				<Source><![CDATA[
    public NoYes eInvoice(Common _common)
    {
        ProjInvoiceJour projInvoiceJour = _common as ProjInvoiceJour;
        return CustTable::find(projInvoiceJour.InvoiceAccount).EInvoice;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>