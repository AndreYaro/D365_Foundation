<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>SMASubscriptionTableButtonStateProvi</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
///    The <c>SMASubscriptionTableButtonStateProvi</c> class provides the set of rules to manage behavior
///    of the buttons on subscription list page and task form.
/// </summary>
/// <remarks>
///    This class implements the <c>ButtonStateProvider</c> interface.
/// </remarks>
class SMASubscriptionTableButtonStateProvi implements ButtonStateProvider
{
    SMASubscriptionTable    subscriptionTable;
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>checkRuleExistRecord</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Validates that the buffer is not empty.
    /// </summary>
    /// <returns>
    ///    true if the buffer is not empty; otherwise, false.
    /// </returns>
    public boolean checkRuleExistRecord()
    {
        return subscriptionTable.RecId != 0;
    }
]]></Source>
      </Method>
      <Method>
        <Name>clearCache</Name>
        <Source><![CDATA[
    /// <summary>
    /// Clears the advanced caching.
    /// </summary>
    void clearCache()
    {
    }

]]></Source>
      </Method>
      <Method>
        <Name>determineButtonStates</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Implements advanced caching for specific rules.
    /// </summary>
    /// <param name="_ruleFunctionName">
    ///    A string that identifies the rule for which advanced caching is to be performed.
    /// </param>
    /// <remarks>
    ///    This method is called by the <c>FormButtonManager</c> on the rule class that implements the
    ///    <c>ButtonStateProvider</c> interface.
    /// </remarks>
    public void determineButtonStates(str _ruleFunctionName)
    {
    }

]]></Source>
      </Method>
      <Method>
        <Name>setDatasources</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Sets form data sources.
    /// </summary>
    /// <param name="datasources1">
    ///    The first form data source.
    /// </param>
    /// <param name="datasources2">
    ///    The second form data source; optional.
    /// </param>
    /// <param name="datasources3">
    ///    The third form data source; optional.
    /// </param>
    /// <param name="datasources4">
    ///    The fourth form data source; optional.
    /// </param>
    /// <param name="datasources5">
    ///    The fifth form data source; optional.
    /// </param>
    void setDatasources(Common datasources1, Common datasources2 = null, Common datasources3 = null, Common datasources4 = null, Common datasources5 = null)
    {
        subscriptionTable = datasources1;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>