<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationMenuItemManagerFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
/// <summary>
/// The <c>SalesQuotationMenuItemManagerFeature</c> class exposes whether the sales quotation table menu wrapper feature is enabled.
/// </summary>
[ExportAttribute(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
internal final class SalesQuotationMenuItemManagerFeature implements IFeatureMetadata, IFeatureLifecycle, IFeatureMetadataEnablementNotifiable
{
    private static SalesQuotationMenuItemManagerFeature singleton;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public LabelId label()
    {
        return literalStr("@SCM:SalesQuotationMenuItemManagerFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public int module()
    {
        return FeatureModuleV0::SalesAndMarketing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public LabelId summary()
    {
        return literalStr("@SCM:SalesQuotationMenuItemManagerSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public WebSiteURL learnMoreUrl()
    {
        return 'https://go.microsoft.com/fwlink/?linkid=2182301';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the feature is enabled.
    /// </summary>
    /// <returns>
    /// true if the feature is enabled; otherwise, false.
    /// </returns>
    [Hookable(false)]
    final public boolean isEnabled()
    {
        return Dynamics.AX.Application.FeatureStateProvider::IsFeatureEnabled(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves an instance of the <c>SalesQuotationMenuItemManagerFeature</c> class.
    /// </summary>
    /// <returns>
    /// The created instance.
    /// </returns>
    [Hookable(false)]
    public static SalesQuotationMenuItemManagerFeature instance()
    {
        if (!singleton)
        {
            singleton = new SalesQuotationMenuItemManagerFeature();
        }

        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onEnabled()
    {
        SalesParametersMenuItemManagerFeatureSetup::setSalesQuotationMenuItemManagerLifecycleFeature(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onDisabled()
    {
        SalesParametersMenuItemManagerFeatureSetup::setSalesQuotationMenuItemManagerLifecycleFeature(false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>