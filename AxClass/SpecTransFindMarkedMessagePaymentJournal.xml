<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SpecTransFindMarkedMessagePaymentJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>SpecTransFindMarkedMessagePaymentJournal</c> class provides a marked transaction error with details on the marking payment journal.
/// </summary>
/// <remarks>
/// Given many flavors of possible payment journal, the messaging returns the <c>LedgerJournalName</c> description for
/// the associated payment journal type if possible.
/// </remarks>
[Export(identifierStr(Dynamics.AX.Application.SpecTransIFindMarkedMessage)),
ExportMetadata(enumStr(SpecTransMarkedByType), enumLiteralStr(SpecTransMarkedByType, PaymentJournal))]
internal final class SpecTransFindMarkedMessagePaymentJournal implements SpecTransIFindMarkedMessage
{
    private DataAreaId specCompany;
    private RefRecId specRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void init(DataAreaId _specCompany, RefRecId _specRecId)
    {
        specCompany = _specCompany;
        specRecId = _specRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionMarkedErrorMessage</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str getTransactionMarkedErrorMessage()
    {
        LedgerJournalTrans ledgerJournalTrans = this.getPaymentLine(
            specCompany,
            specRecId);

        return strFmt("@CashManagement:TransactionMarkedByAnotherUserWithDocumentDetails",
            this.getPaymentJournalName(ledgerJournalTrans),
            ledgerJournalTrans.JournalNum,
            specCompany);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentLabel</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public str getDocumentLabel()
    {
        LedgerJournalTrans ledgerJournalTrans = this.getPaymentLine(
            specCompany,
            specRecId);

        return this.getPaymentJournalName(ledgerJournalTrans);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentLine</Name>
				<Source><![CDATA[
    private LedgerJournalTrans getPaymentLine(DataAreaId _specCompany, RefRecId _specRecId)
    {
        LedgerJournalTrans ledgerJournalTrans;

        changecompany(_specCompany)
        {
            ledgerJournalTrans = LedgerJournalTrans::findRecId(_specRecId, false);
        }

        return ledgerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentJournalName</Name>
				<Source><![CDATA[
    private JournalDescription getPaymentJournalName(LedgerJournalTrans _ledgerJournalTrans)
    {
        JournalDescription journalName = "@SYS112305";

        if (_ledgerJournalTrans)
        {
            changecompany(_ledgerJournalTrans.company())
            {
                LedgerJournalTable ledgerJournalTable = LedgerJournalTable::find(_ledgerJournalTrans.JournalNum);
                LedgerJournalName ledgerJournalName = LedgerJournalName::find(ledgerJournalTable.JournalName);

                if (ledgerJournalName.Name != '')
                {
                    journalName = ledgerJournalName.Name;
                }
            }
        }

        return journalName;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>