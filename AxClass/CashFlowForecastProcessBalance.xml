<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CashFlowForecastProcessBalance</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Processess the Cash flow forecast balance for future and actuals.
/// </summary>
internal static class CashFlowForecastProcessBalance
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    internal static void run(CashFlowForecastProcessBalanceContract _contract, ClassName _processBalanceStrategyDesignator)
    {
        if (CashflowInsightsActivation::isActive())
        {
            CashFlowIForecastProcessBalanceStrategy processBalanceStrategy = CashFlowForecastProcessBalance::createProcessBalanceStrategy(_processBalanceStrategyDesignator, _contract);

            ttsbegin;

            processBalanceStrategy.clearReferences();
            processBalanceStrategy.loadDimensionReferences();
            processBalanceStrategy.clearBalances();
            processBalanceStrategy.createBalances();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProcessBalanceStrategy</Name>
				<Source><![CDATA[
    private static CashFlowIForecastProcessBalanceStrategy createProcessBalanceStrategy(ClassName _processBalanceStrategyDesignator, CashFlowForecastProcessBalanceContract _contract)
    {
        SysPluginMetadataCollection meta = new SysPluginMetadataCollection();
        meta.SetManagedValue(classStr(CashFlowIForecastProcessBalanceStrategy), _processBalanceStrategyDesignator);

        CashFlowIForecastProcessBalanceStrategy processBalanceStrategy = SysPluginFactory::Instance(identifierStr(Dynamics.AX.Application), classStr(CashFlowIForecastProcessBalanceStrategy), meta);

        if (processBalanceStrategy == null)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        if (_contract.periodOpenDate == dateNull()
            || _contract.periodCloseDate == dateNull())
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        processBalanceStrategy.initializeFromProcessBalanceContract(_contract);

        return processBalanceStrategy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>