<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustReimbursementController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CustReimbursementController</c> class starts the <c>CustReimbursement</c> SSRS report.
/// </summary>
class CustReimbursementController extends SrsReportRunController implements BatchRetryable
{
    #define.BillingClassification('BillingClassification')
    #define.InclTransWithNoBillingClass('includeTransWithNoBillingClassification')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Allows the user to modify the contract before the report is run.
    /// </summary>
    /// <remarks>
    ///  The following are common scenarios for which to use this method:
    ///  <list type="bullet">
    ///   <item>
    ///   <description>Modifying the query.</description>
    ///   </item>
    ///   <item>
    ///   <description>Setting the contract values that are hidden from the user on the dialog.</description>
    ///   </item>
    ///   <item>
    ///    <description>
    ///    Subscribing to the <c>renderingComplete</c> event.
    ///    </description>
    ///   </item>
    ///  </list>
    /// </remarks>
    protected void preRunModifyContract()
    {
        boolean isPublicSectorScenario;
        List    listBillingClassification;

        listBillingClassification   = this.parmReportContract().parmRdlContract().getParameter(#BillingClassification).getValueTyped();
        isPublicSectorScenario      = CustBillingClassificationReportManager::isPublicSectorScenario(listBillingClassification);

        if (isPublicSectorScenario)
        {
            this.setRanges(this.getFirstQuery(), listBillingClassification,
                this.parmReportContract().parmRdlContract().getParameter(#InclTransWithNoBillingClass).getValueTyped());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the report query ranges.
    /// </summary>
    /// <param name="_query">
    /// The report _query object.
    /// </param>
    /// <param name="_billingClassification">
    /// List of billing classifications.
    /// </param>
    /// <param name="_inclTransWithNoBillingClass">
    /// Boolean variable used to include transactions without the billing classification.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setRanges(
        Query   _query,
        List    _billingClassification,
        NoYes   _inclTransWithNoBillingClass)
    {
        QueryBuildDataSource    qbdsCustTrans;

        qbdsCustTrans = _query.dataSourceTable(tableNum(CustTrans));

        CustBillingClassificationReportManager::setBillingClassificationRanges(qbdsCustTrans,
                                                                               _billingClassification,
                                                                               _inclTransWithNoBillingClass,
                                                                               fieldNum(CustTrans, CustBillingClassification));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        CustReimbursementController controller = new CustReimbursementController();

        controller.parmReportName(ssrsReportStr(CustReimbursement, Report));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>