<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSolutionScopeChangeEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxSolutionScopeChangeEventHandler</c> class contains event handlers for changing the tax solution scope.
/// </summary>
class TaxSolutionScopeChangeEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>TaxEngineServiceCacheUtils_Post_onTaxSolutionScopeChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post-event handler for the case that a tax solution scope header level information is changed.
    /// </summary>
    /// <param name="args">A <c>XppPrePostArgs</c> class instance.</param>
    [PostHandlerFor(classStr(TaxEngineServiceCacheUtils), staticMethodStr(TaxEngineServiceCacheUtils, onTaxSolutionScopeChanged))]
    public static void TaxEngineServiceCacheUtils_Post_onTaxSolutionScopeChanged(XppPrePostArgs args)
    {
        RefRecId taxSolutionScopeId = args.getArg(identifierStr(_taxSolutionScopeId));

        TaxSolutionScopeChangeHistory::log(taxSolutionScopeId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>TaxEngineServiceCacheUtils_Post_onTaxSolutionScopeSetupChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post-event handler for the case that a tax solution scope setup for a ledger is changed.
    /// </summary>
    /// <param name="args">A <c>XppPrePostArgs</c> class instance.</param>
    [PostHandlerFor(classStr(TaxEngineServiceCacheUtils), staticMethodStr(TaxEngineServiceCacheUtils, onTaxSolutionScopeSetupChanged))]
    public static void TaxEngineServiceCacheUtils_Post_onTaxSolutionScopeSetupChanged(XppPrePostArgs args)
    {
        RefRecId ledgerId = args.getArg(identifierStr(_ledgerId));
        RefRecId taxSolutionScopeId = args.getArg(identifierStr(_taxSolutionScopeId));

        ledgerId = ledgerId ? ledgerId : Ledger::current();
        taxSolutionScopeId = taxSolutionScopeId ? taxSolutionScopeId : TaxSolutionScopeSetup::findByLedger(ledgerId).TaxSolutionScope;

        TaxSolutionScopeChangeHistory::log(taxSolutionScopeId, ledgerId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>