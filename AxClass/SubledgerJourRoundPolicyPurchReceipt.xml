<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJourRoundPolicyPurchReceipt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Rounding Policy for purchase receipt posting.
/// </summary>
[SourceDocumentEnumLiteralExtension(enumStr(LedgerPostingType), enumLiteralStr(LedgerPostingType, PurchReceipt))]
public class SubledgerJourRoundPolicyPurchReceipt extends SubledgerJournalRoundingPolicy
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isItemMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if it is item type markup.
    /// </summary>
    /// <returns>
    /// True if it is item type markup; otherwise, false.
    /// </returns>
    private boolean isItemMarkup()
    {
        boolean isItemMarkup;

        if (sourceDocumentLineItem is SourceDocumentLineItemICharge)
        {
            SourceDocumentLineItemICharge chargeSourceDocumentLineItem = sourceDocumentLineItem as SourceDocumentLineItemICharge;

            MarkupTable markupTable = chargeSourceDocumentLineItem.parmMarkupTable();

            if (markupTable)
            {
                isItemMarkup = markupTable.CustType == MarkupType::Item;
            }
        }

        return isItemMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStockedProduct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if it is stocked product.
    /// </summary>
    /// <returns>
    /// True if it is stocked product; otherwise, false.
    /// </returns>
    private boolean isStockedProduct()
    {
        boolean isStocked;

        if (sourceDocumentLineItem is SourceDocumentLineItemIProduct)
        {
            SourceDocumentLineItemIProduct sourceDocumentLineItemIProduct = sourceDocumentLineItem as SourceDocumentLineItemIProduct;
            isStocked = sourceDocumentLineItemIProduct.parmStocked();
        }

        return isStocked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubledgerJournalRoundingLevel</Name>
				<Source><![CDATA[
    public SubledgerJournalRoundingLevel parmSubledgerJournalRoundingLevel()
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (this.isStockedProduct() || this.isItemMarkup())
            {
                return SubledgerJournalRoundingLevel::Distribution;
            }
        }

        return super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>