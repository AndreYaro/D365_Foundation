<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// When <c>TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight</c> is enabled, the system avoids set-based updates to the
/// TaxTrans_Reporting table during VendTrans insertion. Instead, all the necessary updates are performed row by row to prevent
/// blockings and deadlocks caused by incorrect index usage during set-based updates.
/// </summary>
/// /// <remarks>
/// The flight is controlled by entering the following in the flighting service (ECS):
/// "TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight" to enable. This is only necessary when isEnabledByDefault() returns false.
/// "TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight_KillSwitch" to disable. This overrules any enablement.
/// </remarks>
internal final class TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight extends Flight
{
    private static TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight singleton = new TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static TaxTransReportingAvoidSetBasedUpdateOnVendTransInsertFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>