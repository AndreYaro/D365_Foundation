<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSControlSortLicensePlateId</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSControlSortLicensePlateId</c> class is responsible for handling the sort license plate ID controls on the mobile device.
/// </summary>
#WHSRF
[WhsControlFactory(#SortLicensePlateId)]
public class WHSControlSortLicensePlateId extends WhsControl
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    public boolean process()
    {
        boolean lpExists = WHSLicensePlate::exist(this.parmData());

        if (WHSOutboundSortPosition::existsForAssignedLicensePlateId(this.parmData()))
        {
            return this.fail("@WAX:WHSOutboundSortPositionLicensePlateAlreadyActiveError");
        }
        else if (WHSOutboundSortTemplate::find(WHSRFMenuItemTable::find(pass.lookup(#MenuItem)).SortTemplateId).AutoPackSortPosition == NoYes::Yes
				&& WHSContainerTable::existForContainerId(this.parmData()))
        {
            return this.fail("@WAX:OutboundSortLicensePlateUsedContainerError");
        }
        else if (lpExists
				 && controlData.validateLicensePlateQty(this.parmData()))
        {
            fieldValues.insert(#SortLicensePlateId, this.parmData());

            return true;
        }
        else if (!lpExists)
        {
            WHSLicensePlate::createLicensePlate(this.parmData());
            fieldValues.insert(#SortLicensePlateId, this.parmData());

            return true;
        }
        
        return this.fail("@WAX2194");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>