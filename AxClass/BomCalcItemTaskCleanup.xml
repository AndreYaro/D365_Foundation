<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BomCalcItemTaskCleanup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BomCalcItemTaskCleanup extends RunBaseBatch implements BatchRetryable
{
    DialogRunbase       dialog;
    NoYes               cleanUpDummyField;

    #DEFINE.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        cleanUpDummyField
    #Endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SCM:BomCalcItemTaskCleanup";
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        #define.textWidth(60)
        #define.textHeight(10)

        dialog = super();

        DialogField dialogField = dialog.addFieldValue(extendedTypeStr(Notes), "@SCM:BomCalcItemTaskCleanup_Description");
        dialogField.showLabel(false);
        dialogField.border(1);
        dialogField.allowEdit(false);
        dialogField.displayHeight(#textHeight);
        dialogField.displayLength(#textWidth);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        BomCalcItemTaskCleanup bomCalcItemTaskCleanup = new BomCalcItemTaskCleanup();

        if (bomCalcItemTaskCleanup.prompt())
        {
            bomCalcItemTaskCleanup.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        if (BomCalcItemTaskCleanup::bomCalculationJobIsRunning())
        {
            throw error("@SCM:BomCalcJobIsRunning");
        }

        DictTable dictTable;
        dictTable = new DictTable(tablenum(BomCalcItemTask));

        SqlDataDictionary sqlTable;

        if (dictTable && dictTable.enabled())
        {
            str sqlTableName = dictTable.name(DbBackend::Sql);
            sqlTable = new SqlDataDictionary();

            if (sqlTable.tableExist(sqlTableName))
            {
                new SqlDataDictionaryPermission(methodstr(SqlDataDictionary, tableTruncate)).assert();
                sqlTable.tableTruncate(tablenum(BomCalcItemTask), false);
                CodeAccessPermission::revertAssert();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bomCalculationJobIsRunning</Name>
				<Source><![CDATA[
    public static boolean bomCalculationJobIsRunning(RecId _batchRecId = 0)
    {
        Batch    batch;
        BatchJob batchJob;

        select firstOnly crosscompany RecId from batchJob
            exists join batch
            where batch.BatchJobId   == batchJob.RecId
               && batch.status       == BatchStatus::Executing
               && (!_batchRecId      || batch.RecId != _batchRecId)
               && (batch.ClassNumber == classNum(BomCalcJob_All)
               ||  batch.ClassNumber == classNum(BomCalcJobRunCalculationTask)
               ||  batch.ClassNumber == classNum(BomCalcJobCleanUpTask));

        if (batchJob.RecId)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Integer version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = _packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>