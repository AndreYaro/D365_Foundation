<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>mcrCustPaymTotals_PaymJournal</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The class <c>MCRCustPaymTotals_PaymJournal</c> is responsible for managing a list of payments associated with a
///     payment journal.
/// </summary>
class mcrCustPaymTotals_PaymJournal extends MCRCustPaymTotals
{
    LedgerJournalTrans ledgerJournalTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
        public boolean allowEdit()
    {
        return !ledgerJournalTrans.ledgerJournalTable().Posted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcInvoicePaymAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the total payment amount.
    /// </summary>
    /// <param name="custInvoiceJour">
    /// Not used in this instance.
    /// </param>
    /// <returns>
    /// the total payment amount.
    /// </returns>
    protected AmountCur calcInvoicePaymAmount(CustInvoiceJour custInvoiceJour)
    {
        return this.getTotalPaymAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the currency code from the ledger journal transaction record.
    /// </summary>
    /// <returns>
    /// The currency code from the ledger journal transaction record.
    /// </returns>
    public CurrencyCode getCurrency()
    {
        return ledgerJournalTrans.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimension</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the dimension stored on the ledger journal transaction record.
    /// </summary>
    /// <returns>
    /// The dimension stored on the ledger journal transaction record.
    /// </returns>
    public DimensionDefault getDimension()
    {
        return ledgerJournalTrans.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceAccount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the account number on the ledger journal transaction record.
    /// </summary>
    /// <returns>
    /// The account number on the ledger journal transaction record.
    /// </returns>
    public CustAccount getInvoiceAccount()
    {
        return ledgerJournalTrans.parmAccount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderId</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the journal number as the order ID.
    /// </summary>
    /// <returns>
    /// The journal number as the order ID.
    /// </returns>
    public Num getOrderId()
    {
        return ledgerJournalTrans.JournalNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingProfile</Name>
				<Source><![CDATA[
        public PostingProfile getPostingProfile(boolean _recalc = false)
    {
        if (ledgerJournalTrans && ledgerJournalTrans.PostingProfile)
        {
            return ledgerJournalTrans.PostingProfile;
        }
        else
        {
            return CustParameters::find().PostingProfile;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the total discount associated with the journal.
    /// </summary>
    /// <returns>
    /// The total discount associated with the journal.
    /// </returns>
    protected AmountCur getTotalDiscount()
    {
        return mcrSalesOrderTotals.getRemainingDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalInvoicedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the amount on the ledger journal trans.
    /// </summary>
    /// <returns>
    /// The amount on the ledger journal trans.
    /// </returns>
    public AmountCur getTotalInvoicedAmount()
    {
        AmountCur ledgerAmount;
        // To authorize the amount cur credit will be the positive amount
        // from the payment journal and the debit is the refund.
        if (ledgerJournalTrans.AmountCurCredit)
        {
            ledgerAmount =  abs(ledgerJournalTrans.AmountCurCredit);
        }
        else if (ledgerJournalTrans.AmountCurDebit)
        {
            ledgerAmount =  -(ledgerJournalTrans.AmountCurDebit);
        }

        return ledgerAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalSalesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Returns the total sales amount, which is zero for this instance.
    /// </summary>
    /// <returns>
    /// The total sales amount, which is zero for this instance.
    /// </returns>
    public AmountCur getTotalSalesAmount()
    {
        return this.getTotalPaymAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Instantiates the <c>MCRCustPaymTotals</c> object using the passed in reference record ID.
    /// </summary>
    /// <param name="_refRecID">
    /// The reference record ID of the record the payment is associated with.
    /// </param>
    public void new(RecId _refRecID)
    {
        ledgerJournalTrans = LedgerJournalTrans::findRecId(_refRecID, false);

        super(tableNum(LedgerJournalTrans), ledgerJournalTrans.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleBillUpFrontContChildren</Name>
				<Source><![CDATA[
        public void settleBillUpFrontContChildren()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleInstallmentsOrder</Name>
				<Source><![CDATA[
        protected void settleInstallmentsOrder(boolean _instalAdjs = false)
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleOnAccountPayments</Name>
				<Source><![CDATA[
        public void settleOnAccountPayments()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransStatus</Name>
				<Source><![CDATA[
        public void setTransStatus()
    {
        // no code in super super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTotalPaymAmount</Name>
				<Source><![CDATA[
        public boolean validateTotalPaymAmount(boolean _showErrors = true)
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>