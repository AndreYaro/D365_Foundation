<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvLedgerJournalCheckPost</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TrvLedgerJournalCheckPost extends LedgerJournalCheckPost implements BatchRetryable
{
    private boolean isCashAdvancePosting;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createLedgerVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>LedgerVoucher</c> class instance, 
    /// where check for blocked for manual entry would be skipped if it's a cash advance posting.
    /// </summary>
    /// <param name = "_sysModule">
    /// A <c>SysModule</c> enumeration value.
    /// </param>
    /// <param name = "_numberSequenceId">
    /// A number sequence id.
    /// </param>
    /// <returns>
    /// A <c>LedgerVoucher</c> class instance.
    /// </returns>
    protected LedgerVoucher createLedgerVoucher(SysModule _sysModule, RefRecId _numberSequenceId)
    {
        LedgerVoucher ret;
    
        ret = super(_sysModule, _numberSequenceId);

        ret.parmSkipBlockedForManualEntryCheck(isCashAdvancePosting);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCashAdvancePosting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines if this instance is for cash advance posting.
    /// </summary>
    /// <param name = "_isCashAdvancePosting">True if this instance is for cash advance; otherwise false.</param>
    /// <returns>True if the instance is for cash advance posting; otherwise false.</returns>
    public boolean parmIsCashAdvancePosting(boolean _isCashAdvancePosting = isCashAdvancePosting)
    {
        isCashAdvancePosting = _isCashAdvancePosting;

        return isCashAdvancePosting;

    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor for the class.
    /// </summary>
    /// <param name = "_ledgerJournalTable">Table buffer for LedgerJournalTable.</param>
    /// <returns>Returns an instant of the class.</returns>
    public static TrvLedgerJournalCheckPost construct(LedgerJournalTable _ledgerJournalTable)
    {
        TrvLedgerJournalCheckPost ledgerJournalCheckPost = new TrvLedgerJournalCheckPost();
        ledgerJournalCheckPost.parmJournalNum(_ledgerJournalTable.JournalNum);
        ledgerJournalCheckPost.parmPost(NoYes::Yes);
        ledgerJournalCheckPost.parmTransferErrors(NoYes::No);
        ledgerJournalCheckPost.parmDetailSummaryPosting(_ledgerJournalTable.DetailSummaryPosting);
        ledgerJournalCheckPost.parmLedgerJournalTable(_ledgerJournalTable);
        return ledgerJournalCheckPost;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>