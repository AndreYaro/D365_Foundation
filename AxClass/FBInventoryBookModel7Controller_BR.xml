<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBInventoryBookModel7Controller_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FBInventoryBookModel7Controller_BR</c> class shows the FBInventoryBookModel7_BR SSRS report.
/// </summary>
///
class FBInventoryBookModel7Controller_BR extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
        protected void preRunModifyContract()
    {
        FBHeaderContract_BR     contract;
        FBBookingPeriod_BR      bookingPeriod;
        FiscalEstablishment_BR  fiscalEstablishment;

        contract = this.parmReportContract().parmRdpContract() as FBHeaderContract_BR;

        select firstOnly crossCompany FiscalEstablishmentId, DataAreaId, CNPJCPFNum_BR, IENum_BR, Name from fiscalEstablishment
            where fiscalEstablishment.FiscalEstablishmentId == contract.parmFiscalEstablishmentId()
                && fiscalEstablishment.dataAreaId == contract.parmFiscalEstablishmentDataArea();

        if (this.parmArgs().record())
        {
            contract.parmFBBookingPeriodRecId(this.parmArgs().record().RecId);
        }
        else
        {
            select firstOnly RecId from bookingPeriod
                where bookingPeriod.FiscalEstablishmentId == fiscalEstablishment.FiscalEstablishmentId
                    && bookingPeriod.FiscalEstablishmentDataArea == fiscalEstablishment.dataAreaId
                    && bookingPeriod.PeriodMonth == contract.parmMonthPeriod()
                    && bookingPeriod.PeriodYear == contract.parmYearPeriod();

            contract.parmFBBookingPeriodRecId(bookingPeriod.RecId);
        }

        contract.parmCnpj(fiscalEstablishment.CNPJCPFNum_BR);
        contract.parmIeNum(fiscalEstablishment.IENum_BR);
        contract.parmFiscalEstablishmentName(fiscalEstablishment.Name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>startReportOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Starts the Inventory Book Model 7 report operation.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the Inventory Book Model 7 report.
    /// </param>

    protected void startReportOperation(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10019, funcName());

        this.parmReportName(ssrsReportStr(FBInventoryBookModel7_BR, Report));
        this.parmArgs(_args);
        this.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        static void main(Args _args)
    {
        FBInventoryBookModel7Controller_BR controller = new FBInventoryBookModel7Controller_BR();
        controller.startReportOperation(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>