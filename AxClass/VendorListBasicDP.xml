<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorListBasicDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
[
    SRSReportQueryAttribute(queryStr(VendorListBasic))
]
public class VendorListBasicDP extends SrsReportDataProviderPreProcessTempDB
{
    VendTable               vendTable;
    VendorListBasicTmp      vendorListBasicTmp;
    LogisticsPostalAddress  logisticsPostalAddress;
    LogisticsLocationEntity logisticsLocationEntity;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVendorListBasicTmp</Name>
				<Source><![CDATA[
    [SRSReportDataSetAttribute(tableStr(VendorListBasicTmp))]
    public VendorListBasicTmp getVendorListBasicTmp()
    {
        select * from vendorListBasicTmp;
        return vendorListBasicTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTempTable</Name>
				<Source><![CDATA[
    private void insertIntoTempTable()
    {
        vendorListBasicTmp.VendAccount  = vendTable.AccountNum;
        vendorListBasicTmp.Name         = vendTable.name();
        vendorListBasicTmp.Phone        = vendTable.phone();
        vendorListBasicTmp.Email        = vendTable.email();
        vendorListBasicTmp.Telefax      = vendTable.telefax();
        vendorListBasicTmp.Telex        = vendTable.telex();
        vendorListBasicTmp.InvoiceAccountName   = vendTable.invoiceAccountName();
        vendorListBasicTmp.ItemBuyerGroupId     = vendTable.ItemBuyerGroupId;
        vendorListBasicTmp.Currency             = vendTable.currencyName();
        vendorListBasicTmp.CashDisc             = vendTable.cashDiscName();
        vendorListBasicTmp.PriceGroupName       = vendTable.priceDiscGroupName();
        vendorListBasicTmp.LineDiscName         = vendTable.lineDiscName();
        vendorListBasicTmp.MultiLineDiscName    = vendTable.multiLineDiscName();
        vendorListBasicTmp.EndDiscName          = vendTable.endDiscName();
        vendorListBasicTmp.TaxGroupName         = vendTable.taxGroupName();
        vendorListBasicTmp.DeliveryMode         = vendTable.dlvModeName();
        vendorListBasicTmp.AccountName          = vendTable.customerAccountName();

        logisticsPostalAddress       = DirParty::primaryPostalAddress(vendTable.Party);
        vendorListBasicTmp.Address   = logisticsPostalAddress.Address;
        vendorListBasicTmp.CountyName= LogisticsAddressCounty::find(logisticsPostalAddress.CountryRegionId,logisticsPostalAddress.State,logisticsPostalAddress.County).Name;
        vendorListBasicTmp.StateName = LogisticsAddressState::name(logisticsPostalAddress.CountryRegionId,logisticsPostalAddress.State);
        vendorListBasicTmp.CountryName = LogisticsAddressCountryRegion::name(logisticsPostalAddress.CountryRegionId);

        vendorListBasicTmp.PaymentTerm = PaymTerm::find(vendTable.PaymTermId).Description;
        vendorListBasicTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method should compute data and populate the data tables that will be returned to SSRS.
    /// Note that this is a framework class. Customizing this class may cause problems with future upgrades
    /// to the software.
    /// </remarks>
    public void processReport()
    {
        QueryRun queryRun = new QueryRun(this.parmQuery());

        ttsbegin;
        while (queryRun.next())
        {
            vendorListBasicTmp.clear();
            vendTable = queryRun.get( tableNum(VendTable));
            this.insertIntoTempTable();
        }
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>