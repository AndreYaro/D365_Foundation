<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayAddAverageEarnFromOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Base abstarct class for adding average earning for different documents.
/// </summary>
abstract public class rPayAddAverageEarnFromOrder
{
    RPayAEFormController    formController;
    RHRMOrderTable          rhrmOrderTable;
    RHRMOrderTrans          rhrmOrderTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>aeCodeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets average earning method type.
    /// </summary>
    /// <returns>
    /// The average earning method type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract protected RPayAverageEarnCodeType aeCodeType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>aeTypeId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets average earning type id.
    /// </summary>
    /// <returns>
    /// The average earning type id.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract protected str aeTypeId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAEDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates average earning document.
    /// </summary>
    /// <exception cref="Exception::Error">
    /// Line from the order for employee was not transferred.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void createAEDocument()
    {
        FormDataSource rPayAverageEarnEmplPeriodTable_ds;
        RPayAverageEarnEmplPeriodTable rPayAverageEarnEmplPeriodTable;

        try
        {
            rPayAverageEarnEmplPeriodTable_ds = formController.rPayAverageEarnEmplPeriodTableDS();
            rPayAverageEarnEmplPeriodTable    = rPayAverageEarnEmplPeriodTable_ds.cursor();

            rPayAverageEarnEmplPeriodTable_ds.create();

            this.initAEDocument(rPayAverageEarnEmplPeriodTable_ds, rPayAverageEarnEmplPeriodTable);

            if (rPayAverageEarnEmplPeriodTable_ds.validateWrite())
            {
                rPayAverageEarnEmplPeriodTable_ds.write();
            }
            else
            {
                throw error(strFmt("@GLS106595", rhrmOrderTable.OrderNum, rhrmOrderTrans.EmplId));
            }
        }
        catch (Exception::Error)
        {
            rPayAverageEarnEmplPeriodTable_ds.delete();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets form caption.
    /// </summary>
    /// <returns>
    /// A form caption.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract public str formCaption()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>formController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets form controller class.
    /// </summary>
    /// <returns>
    /// The <c>RPayAEFormController</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RPayAEFormController formController()
    {
        return formController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets form name.
    /// </summary>
    /// <returns>
    /// A form name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected str formName()
    {
        return formStr(RPayAddAverageEarnFromOrder);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class.
    /// </summary>
    /// <param name="_formController">
    /// A form controller class.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void init(RPayAEFormController _formController)
    {
        formController = _formController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initAEDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes average earning document.
    /// </summary>
    /// <param name="_rPayAverageEarnEmplPeriodTable_ds">
    /// A <c>RPayAverageEarnEmplPeriodTable</c> datasource.
    /// </param>
    /// <param name="_rPayAverageEarnEmplPeriodTable">
    /// A <c>RPayAverageEarnEmplPeriodTable</c> record.
    /// </param>
    /// <exception cref="Exception::Error">
    /// Line from the order for employee was not transferred due to validation error.
    /// </exception>
    /// <exception cref="Exception::Error">
    /// Line from the order for employee was not transferred due to validation error.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void initAEDocument(FormDataSource _rPayAverageEarnEmplPeriodTable_ds, RPayAverageEarnEmplPeriodTable _rPayAverageEarnEmplPeriodTable)
    {
        FormDataObject formDataObject;

        _rPayAverageEarnEmplPeriodTable.rPayAverageEarnCode = RPayAverageEarnTable::findAverageEarnCode(this.aeCodeType(), this.aeTypeId()).rPayAverageEarnCode;
        formDataObject = _rPayAverageEarnEmplPeriodTable_ds.object(fieldNum(RPayAverageEarnEmplPeriodTable, rPayAverageEarnCode));
        formDataObject.modified();
        if (! formDataObject.validate())
            throw error(strFmt("@GLS106595", rhrmOrderTable.OrderNum, rhrmOrderTrans.EmplId));

        _rPayAverageEarnEmplPeriodTable.EmplId    = rhrmOrderTrans.EmplId;
        formDataObject = _rPayAverageEarnEmplPeriodTable_ds.object(fieldNum(RPayAverageEarnEmplPeriodTable, EmplId));
        formDataObject.modified();

        _rPayAverageEarnEmplPeriodTable.StartDate = rhrmOrderTrans.StartDate;
        formDataObject = _rPayAverageEarnEmplPeriodTable_ds.object(fieldNum(RPayAverageEarnEmplPeriodTable, StartDate));
        if (! formDataObject.validate())
            throw error(strFmt("@GLS106595", rhrmOrderTable.OrderNum, rhrmOrderTrans.EmplId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>journalType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resolution journal type.
    /// </summary>
    /// <returns>
    /// The resolution journal type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract public RHRMJournalType journalType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>menuItemName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets menu item name.
    /// </summary>
    /// <returns>
    /// The menu item name.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract protected str menuItemName()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs the creation of average earning document.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void run()
    {
        Args            args = new Args();
        Object          ctrl_formRun;
        FormDataSource  rhrmOrderTable_ds;
        FormDataSource  rhrmOrderTrans_ds;

        args.name(this.formName());
        args.caller(this);
        ctrl_formRun = new MenuFunction(this.menuItemName(), MenuItemType::Display).create(args);
        ctrl_formRun.init();
        ctrl_formRun.run();
        ctrl_formRun.wait();

        if (ctrl_formRun.closedOk())
        {
            rhrmOrderTable_ds = ctrl_formRun.dataSource(tableStr(RHRMOrderTable));
            rhrmOrderTrans_ds = ctrl_formRun.dataSource(tableStr(RHRMOrderTrans));

            if (ctrl_formRun.closeOrders())
            {
                if (rhrmOrderTable_ds.anyMarked())
                {
                    for (rhrmOrderTable = rhrmOrderTable_ds.getFirst(true, false); rhrmOrderTable;
                         rhrmOrderTable = rhrmOrderTable_ds.getNext())
                    {
                        while select rhrmOrderTrans
                            where rhrmOrderTrans.OrderTableRecId == rhrmOrderTable.RecId
                        {
                            this.createAEDocument();
                        }
                    }
                }
                else
                {
                    rhrmOrderTable = rhrmOrderTable_ds.cursor();
                    if (rhrmOrderTable.RecId)
                    {
                        while select rhrmOrderTrans
                            where rhrmOrderTrans.OrderTableRecId == rhrmOrderTable.RecId
                        {
                            this.createAEDocument();
                        }
                    }
                }
            }
            else
            {
                if (rhrmOrderTrans_ds.anyMarked())
                {
                    for (rhrmOrderTrans = rhrmOrderTrans_ds.getFirst(true, false); rhrmOrderTrans;
                         rhrmOrderTrans = rhrmOrderTrans_ds.getNext())
                    {
                        this.createAEDocument();
                    }
                }
                else
                {
                    rhrmOrderTrans = rhrmOrderTrans_ds.cursor();
                    if (rhrmOrderTrans.RecId)
                    {
                        this.createAEDocument();
                    }
                }
            }

            formController.rPayAverageEarnEmplPeriodTableDS().research();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the class.
    /// </summary>
    /// <param name="_formController">
    /// A form controller class.
    /// </param>
    /// <returns>
    /// An instance of <c>RPayAddAverageEarnFromOrder</c> class.
    /// </returns>
    /// <exception cref="Exception::Error">
    /// Unhandled form controller class type.
    /// </exception>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public RPayAddAverageEarnFromOrder construct(RPayAEFormController _formController)
    {
        RPayAddAverageEarnFromOrder addFromOrder;

        switch (true)
        {
            case _formController is RPayAEFormController_BusinessTrip:
                addFromOrder = new RPayAddAverageEarnFromOrder_BT();
                break;

            case _formController is RPayAEFormController_Vacation:
                addFromOrder = new RPayAddAverageEarnFromOrder_Vacation();
                break;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }

        addFromOrder.init(_formController);

        return addFromOrder;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>