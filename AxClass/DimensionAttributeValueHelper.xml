<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionAttributeValueHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionAttributeValueHelper</c> class subscribes to delegates for events
/// involving the <c>DimensionAttributeValue</c> table.
/// </summary>
class DimensionAttributeValueHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateIsInfAdjClosed_MX</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that the Closed and Inflation Adjustment checkboxes are not marked together.
    /// </summary>
    /// <returns>
    /// true if the validation is successful; otherwise, false.
    /// </returns>
    private static boolean validateIsInfAdjClosed_MX(DimensionAttributeValue dimensionAttributeValue)
    {
        boolean ret = true;

        ret = InfAdjValidation_MX::isMainAccountClosed(dimensionAttributeValue.IsSuspended, MainAccount::find(dimensionAttributeValue.EntityInstance).InflationAdjustment_MX);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postModifiedField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>VendDefaultAccounts</c> table.
    /// </summary>
    /// <param name = "_dimensionAttributeValue">
    /// The <c>DimensionAttributeValue</c> record related to the field id.
    /// </param>
    /// <param name = "_fieldId">
    /// The field id that was modified.
    /// </param>
    [SubscribesTo(tablestr(DimensionAttributeValue), delegatestr(DimensionAttributeValue, postModifiedField))]
    public static void postModifiedField(DimensionAttributeValue _dimensionAttributeValue, FieldId _fieldId)
    {
        VendDefaultAccounts                        vendDefaultAccounts;
        MainAccount                                mainAccount;
        DimensionAttributeValueCombination         dimAttrValueCombo;

        switch (_fieldId)
        {
            case fieldNum(DimensionAttributeValue, IsSuspended) :
                if (_dimensionAttributeValue.IsSuspended)
                {
                    delete_from vendDefaultAccounts
                        where vendDefaultAccounts.LedgerJournalACType == LedgerJournalACType::Ledger
                            exists join mainAccount where
                                mainAccount.RecId== _dimensionAttributeValue.EntityInstance &&
                                mainAccount.LedgerChartOfAccounts == LedgerChartOfAccounts::current()
                                exists join dimAttrValueCombo where
                                   dimAttrValueCombo.RecId == vendDefaultAccounts.LedgerDimension &&
                                   dimAttrValueCombo.DisplayValue == mainAccount.MainAccountId;
                }
                break;

            case fieldNum(DimensionAttributeValue, IsBlockedForManualEntry) :
                if (_dimensionAttributeValue && MainAccount::isBlockedForManualEntryByDimensionAttributeValue(_dimensionAttributeValue.RecId, curExt()))
                {
                    delete_from vendDefaultAccounts
                        where vendDefaultAccounts.LedgerJournalACType == LedgerJournalACType::Ledger
                            exists join mainAccount where
                                mainAccount.RecId == _dimensionAttributeValue.EntityInstance &&
                                mainAccount.LedgerChartOfAccounts == LedgerChartOfAccounts::current()
                                exists join dimAttrValueCombo where
                                   dimAttrValueCombo.RecId == vendDefaultAccounts.LedgerDimension &&
                                   dimAttrValueCombo.DisplayValue == mainAccount.MainAccountId;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postValidateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the <c>DimensionAttributeValue</c> record is valid based on the field id.
    /// </summary>
    /// <param name = "_dimensionAttributeValue">
    /// The <c>DimensionAttributeValue</c> record related to the field id.
    /// </param>
    /// <param name = "_fieldId">
    /// The field id that is to be validated.
    /// </param>
    /// <param name = "_ret">
    /// The <c>EventHandlerResult</c> instance that will be used to return if the field is valid.
    /// </param>
    [SubscribesTo(tablestr(DimensionAttributeValue), delegatestr(DimensionAttributeValue, postValidateField))]
    public static void postValidateField(DimensionAttributeValue _dimensionAttributeValue, FieldId _fieldId, EventHandlerResult retRef)
    {
        #ISOCountryRegionCodes

        if (!retRef.hasResult() || retRef.result())
        {
            // Skip the check if any other subcriber has already voted no
            switch (_fieldId)
            {
                case (fieldNum(DimensionAttributeValue, IsSuspended)) :
                    if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
                    {
                        boolean ok = DimensionAttributeValueHelper::validateIsInfAdjClosed_MX(_dimensionAttributeValue);

                        retRef.result(ok);
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>