<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetDocumentProcessorImpairment_JP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Extends the <c>AssetDocumentProcessor_JP</c> for impairment transactions.
/// </summary>
[AssetDocumentTypeAttribute_JP(AssetDocumentType_JP::AssetImpairment)]
class AssetDocumentProcessorImpairment_JP extends AssetDocumentProcessor_JP
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        #ISOCountryRegionCodes
        super();
        GlobalizationInstrumentationHelper::featureRunByCountryRegionCodes([
            [#isoJP, GlobalizationConstants::FeatureReferenceJP00019] ],
            funcName()
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>createDocumentTrans</Name>
				<Source><![CDATA[
    protected AssetDocumentTrans_JP createDocumentTrans()
    {
        AssetImpairmentTestResultDocEntry_JP resultDocEntry;
        AssetImpairmentTestResultDocument_JP resultDoc;
        AssetDocumentEntry_JP                docEntry;
        AssetImpairmentTestResult_JP         testResult;
        AssetDocumentTrans_JP                assetDocumentTransLoc;

        assetDocumentTransLoc = super();

        ttsBegin;

        resultDocEntry = AssetImpairmentTestResultDocEntry_JP::findByAssetDocumentEntry(assetDocumentTransLoc.AssetDocumentEntry_JP, true);
        resultDocEntry.Status = AssetImpairmentTestResultEntryStatus_JP::Posted;
        resultDocEntry.update();

        select firstOnly forUpdate testResult
        exists join firstOnly docEntry
            where docEntry.RecId == assetDocumentTransLoc.AssetDocumentEntry_JP
        exists join firstOnly resultDoc
            where resultDoc.AssetDocumentTable_JP == docEntry.AssetDocumentTable_JP
                  && resultDoc.AssetImpairmentTestResult_JP == testResult.RecId;

        if (testResult && testResult.Status == AssetImpairmentTestResultStatus_JP::ReadyForProposal)
        {
            select firstOnly RecId from resultDocEntry
                where resultDocEntry.Status == AssetImpairmentTestResultEntryStatus_JP::NotPosted
            exists join resultDoc
                where resultDoc.RecId == resultDocEntry.ResultDocument
                      && resultDoc.AssetImpairmentTestResult_JP == testResult.RecId;

            if (!resultDocEntry)
            {
                testResult.Status = AssetImpairmentTestResultStatus_JP::Posted;
                testResult.update();
            }
        }

        ttsCommit;

        return assetDocumentTransLoc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>revertTrans</Name>
				<Source><![CDATA[
    public void revertTrans(
        AssetDocumentTrans_JP    _assetDocumentTrans,
        Common                   _assetTransOrig,
        Common                   _assetTransNew)
    {
        AssetDocument_JP                    document = AssetDocument_JP::construct(_assetDocumentTrans.AssetDocumentEntry_JP);
        AssetTrans                          assetTransNew, assetTransOrig;
        AssetDocumentTrans_JP               docTrans;
        AssetImpairmentTransactionBase_JP   impairmentTrans;

        ttsBegin;
        docTrans.initValue();
        docTrans.AssetDocumentEntry_JP = _assetDocumentTrans.AssetDocumentEntry_JP;
        docTrans.RefTableId = _assetTransNew.TableId;
        docTrans.RefRecId = _assetTransNew.RecId;
        docTrans.insert();
        ttsCommit;

        if (_assetTransOrig.TableId == tableNum(AssetTrans))
        {
            assetTransNew = _assetTransNew as AssetTrans;
            assetTransOrig = _assetTransOrig as AssetTrans;
            impairmentTrans = AssetImpairmentAssetTransaction_JP::construct(document, _assetDocumentTrans, assetTransOrig);

            ttsBegin;
            assetTransNew.AmountMST = impairmentTrans.reversalAmount();
            assetTransNew.AmountCur = CurrencyExchangeHelper::amount(assetTransNew.AmountMST, assetTransNew.CurrencyCode);
            assetTransNew.update();
            ttsCommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>