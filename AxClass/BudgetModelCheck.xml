<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetModelCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
class BudgetModelCheck
{
    BudgetModelId   modelId;
    BudgetModelId   subModelId;
    container       conTopOfHierarchy;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkDoubleUsage</Name>
				<Source><![CDATA[
    boolean checkDoubleUsage(BudgetModelId _ctrlModelId, BudgetModelId _modelId)
    {
        BudgetModel budgetModel;
        ;
        if (_ctrlModelId == _modelId)
        {
            return false;
        }

        while   select  subModelId
                from    budgetModel
                where   budgetModel.modelId == _modelId &&
                        budgetModel.type    == HeadingSub::SubModel
        {
            if (!this.checkDoubleUsage(_ctrlModelId, budgetModel.subModelId))
            {
                return false;
            }
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(BudgetModelId _modelId, BudgetModelId _subModelId)
    {
        ;
        modelId = _modelId;
        subModelId = _subModelId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    void run()
    {
        Counter         counter;
        BudgetModelId   topModelId;
        ;
        this.topOfHierarchy(modelId);
        for (counter = conlen(conTopOfHierarchy); counter; counter--)
        {
            topModelId = conpeek(conTopOfHierarchy, counter);
            if (!this.checkDoubleUsage(subModelId, topModelId))
            {
                throw error(strfmt("@SYS68969", topModelId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>topOfHierarchy</Name>
				<Source><![CDATA[
    void topOfHierarchy(BudgetModelId _budgetModelId)
    {
        BudgetModel budgetModel;
        boolean     top = true;
        ;
        while   select  modelId
                from    budgetModel
                where   budgetModel.subModelId == _budgetModelId &&
                        budgetModel.type       == HeadingSub::SubModel
        {
            if (budgetModel.modelId)
            {
                this.topOfHierarchy(budgetModel.modelId);
            }
            top = false;
        }

        if (top)
        {
            if (!confind(conTopOfHierarchy, _budgetModelId))
            {
                conTopOfHierarchy += _budgetModelId;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>