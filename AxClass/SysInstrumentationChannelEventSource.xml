<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysInstrumentationChannelEventSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Instrumentation channel which uses the Xpp runtime event source.
/// </summary>
internal class SysInstrumentationChannelEventSource extends SysInstrumentationChannel
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static SysInstrumentationChannelEventSource construct()
    {
        return new SysInstrumentationChannelEventSource();
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeStartEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Writes an event as a string to the channel.
    /// </summary>
    /// <param name = "_cotext">A context.</param>
    /// <param name = "_activity">An activity name.</param>
    /// <param name = "_activityId">An activity ID.</param>
    /// <param name = "_executionId">A unique execution ID.</param>
    /// <param name = "_additionalParameters">Additional parameters.</param>
    public void writeStartEvent(str _context, str _activity, str _activityId, str _executionId, SysInstrumentationAdditionalParameters _additionalParameters)
    {
        const str startEventType = 'Start';

        Microsoft.Dynamics.Application.Instrumentation.ApplicationEventSource::eventWriteSysInstrumentationSegmentMarker(_context, _activity, _activityId, _executionId, '', startEventType, _additionalParameters ? _additionalParameters.toString() : '', 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeStopEvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Write a stop event.
    /// </summary>
    /// <param name = "_cotext">A context.</param>
    /// <param name = "_activity">An activity name.</param>
    /// <param name = "_activityId">An activity ID.</param>
    /// <param name = "_executionId">A unique execution ID.</param>
    /// <param name = "_additionalParameters">Additional parameters.</param>
    /// <param name = "_status">The status of the execution success or failure.</param>
    /// <param name = "_durationInMilliseconds">Measure of the execution time in milliseconds.</param>
    public void writeStopEvent(str _context, str _activity, str _activityId, str _executionId, SysInstrumentationAdditionalParameters _additionalParameters, str _status, real _durationInMilliseconds)
    {
        const str stopEventType = 'Stop';

        Microsoft.Dynamics.Application.Instrumentation.ApplicationEventSource::eventWriteSysInstrumentationSegmentMarker(_context, _activity, _activityId, _executionId, _status, stopEventType, _additionalParameters ? _additionalParameters.toString() : '', _durationInMilliseconds);

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>