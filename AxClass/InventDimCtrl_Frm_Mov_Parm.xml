<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Frm_Mov_Parm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventDimCtrl_Frm_Mov_Parm</c> class is used by the <c>PurchEditLines</c> and
///    <c>SalesEditLines</c> forms to enable tracking dimension fields for packing slip corrections.
/// </summary>
public class InventDimCtrl_Frm_Mov_Parm extends InventDimCtrl_Frm_Mov
{
    boolean isCorrection;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustEnableField</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Enables editing of tracking dimension fields and storage dimension fields to make corrections.
    /// </summary>
    /// <param name="_dimensionFieldId">
    ///    The field ID to enable or disable.
    /// </param>
    /// <returns>
    ///    true if the field must be enabled; otherwise, false.
    /// </returns>
    protected NoYes mustEnableField(FieldId _dimensionFieldId)
    {
        NoYes                       ret = NoYes::No;

        if (!super(_dimensionFieldId))
        {
            return false;
        }

        if (isCorrection && !InventDim::isFieldIdProductDimension(_dimensionFieldId))
        {
            SalesPurchLine salesPurchLine = movement.buffer();
            ret = salesPurchLine.salesPurchLineInterface().inventDim().(_dimensionFieldId) == InventDim::emptyDimField(_dimensionFieldId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCorrection</Name>
				<Source><![CDATA[
        public boolean parmIsCorrection(boolean _isCorrection = isCorrection)
    {
        isCorrection = _isCorrection;

        return isCorrection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static InventDimCtrl_Frm_Mov_Parm construct()
    {
        return new InventDimCtrl_Frm_Mov_Parm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFormMovement</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates and initializes an instance of the <c>InventDimCtrl_Frm_Mov_Parm</c> class that will be
    ///    used in forms.
    /// </summary>
    /// <param name="_formRun">
    ///    The form where controls are maintained.
    /// </param>
    /// <param name="_movement">
    ///    An instance of the <c>InventMovement</c> class for which the class is used.
    /// </param>
    /// <param name="_isCorrection">
    ///    A Boolean value that indicates whether the form is opened for a correction.
    /// </param>
    /// <param name="_validInventDimDS">
    ///    A set of valid data sources for which the class is used.
    /// </param>
    /// <returns>
    ///    An instance of this class to be used in a form.
    /// </returns>
    public static InventDimCtrl_Frm_Mov_Parm newFromFormMovement(
        FormRun         _formRun,
        InventMovement  _movement,
        boolean         _isCorrection,
        Set             _validInventDimDS = null)
    {
        InventDimCtrl_Frm_Mov_Parm inventDimCtrl = InventDimCtrl_Frm_Mov_Parm::construct();
        InventDimAxFormAdapter adapter = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl.parmCallingElement(adapter);
        inventDimCtrl.parmMovement(_movement);
        inventDimCtrl.parmValidDataSources(_validInventDimDS);
        inventDimCtrl.parmIsCorrection(_isCorrection);

        inventDimCtrl.init();

        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
