<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineVATHelper_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The helper class to support the implementation of document line domain object supporting VAT.
/// </summary>
public class TaxModelDocLineVATHelper_IN extends TaxModelDocLineHelper_IN
{
    TaxModelVATable_IN taxModelVATable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getVATAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getVATAccountType(TaxOnItem _taxOnItem)
    {
        TaxAccountType_IN ret;

        switch (taxModelTaxable.getTaxDirection())
        {
            case TaxDirection::IncomingTax :
                if (this.getVATGoodsType() == VATGoodsType_IN::CapitalGoods)
                {
                    ret = TaxAccountType_IN::VATDeferredAccount;
                }
                else
                {
                    ret = TaxAccountType_IN::VATRecoverableAccount;
                }
                break;
            case TaxDirection::OutgoingTax :
                ret = TaxAccountType_IN::VATPayableAccount;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATGoodsType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the VAT goods type of the document line.
    /// </summary>
    /// <returns>
    /// The <c>VATGoodsType_IN</c> of the document line.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public VATGoodsType_IN getVATGoodsType()
    {
        if (taxModelTaxable.isBasedOnReferenceTaxModelDocLine())
        {
            return this.getVATReferenceTaxModelDocLine().getVATGoodsType();
        }
        else
        {
            return transTaxInformation.VATGoodsType;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATNonRecoverablePercent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the VAT Non-recoverable perecent.
    /// </summary>
    /// <returns>
    /// The <c>Percent</c> of the VAT Non-recoverable part.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Percent getVATNonRecoverablePercent()
    {
        if (taxModelTaxable.isBasedOnReferenceTaxModelDocLine())
        {
            return this.getVATReferenceTaxModelDocLine().getVATNonRecoverablePercent();
        }
        else
        {
            return transTaxInformation.VATNonRecoverablePercent;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATOffsetAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax offset account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getVATOffsetAccountType(TaxOnItem _taxOnItem)
    {
        return TaxAccountType_IN::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATReferenceTaxModelDocLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the VAT reference tax model document line.
    /// </summary>
    /// <returns>
    /// The instance of the <c>TaxModelVATable_IN</c> class.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected TaxModelVATable_IN getVATReferenceTaxModelDocLine()
    {
        return taxModelTaxable.getReferenceTaxModelDocLine() as TaxModelVATable_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the VAT Registration Number.
    /// </summary>
    /// <returns>
    /// The <c>TaxRegistrationNumber_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxRegistrationNumber_IN getVATRegistrationNumber()
    {
        TaxModelTaxable_IN taxModelTaxableIN = taxModelTaxable as TaxModelTaxable_IN;
        return taxModelTaxableIN.getTaxRegistrationNumber(TaxType_IN::VAT);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVATRegistrationRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> VAT Registration.
    /// </summary>
    /// <returns>
    /// The <c>RefRecId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getVATRegistrationRefRecId()
    {
        TaxModelTaxable_IN taxModelTaxableIN = taxModelTaxable as TaxModelTaxable_IN;
        return taxModelTaxableIN.getTaxRegistrationNumberRefRecId(TaxType_IN::VAT);
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsVATCompositionScheme</Name>
				<Source><![CDATA[
    /// <summary>
    /// To determine if the transaction is avaialbe for CompositionScheme.
    /// </summary>
    /// <returns>
    /// True if the document line is CompositionScheme applied; otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public NoYes IsVATCompositionScheme()
    {
        VendTable vendTable;
        boolean   ret;

        vendTable = taxModelTaxable.getVendTable();

        if (vendTable)
        {
            ret = vendTable.getTaxInformationVendTable_IN().CompositionScheme;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxModelVATable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the instance of <c>TaxModelVATable_IN</c>
    /// </summary>
    /// <param name="_taxModelVATable">
    /// The given instance of <c>TaxModelVATable_IN</c>
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setTaxModelVATable(TaxModelVATable_IN _taxModelVATable)
    {
        taxModelVATable = _taxModelVATable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipVAT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the VAT be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean shouldSkipVAT(TaxOnItem _taxOnItem)
    {
        boolean ret;

        if (taxModelTaxable.isBasedOnReferenceTaxModelDocLine())
        {
            ret = this.getVATReferenceTaxModelDocLine().shouldSkipVAT(_taxOnItem);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>