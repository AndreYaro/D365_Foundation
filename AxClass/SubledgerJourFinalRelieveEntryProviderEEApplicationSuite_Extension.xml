<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SubledgerJourFinalRelieveEntryProviderEEApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Find amounts and entries for final relieving for Eastern Europe.
/// </summary>
[ExtensionOf(classStr(SubledgerJourFinalRelieveEntryProvider))]
final class SubledgerJourFinalRelieveEntryProviderEEApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addUnmatchedRelievingEntries</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds unmatched relieving entries.
    /// </summary>
    /// <param name = "_subledgerJournalAccountEntriesToRelieve">Entries to relieve.</param>
    /// <param name = "_subledgerJournalAccountEntriesAlreadyRelieved">Entries already relieved.</param>
    /// <param name = "_entriesForFinalRelieving">Entries for final relieving.</param>
    /// <returns>Entries for final relieving.</returns>
    protected SubledgerJournalAccountEntryRelievingTmp addUnmatchedRelievingEntries(
        SubledgerJournalAccountEntryRelievingTmp _subledgerJournalAccountEntriesToRelieve,
        SubledgerJournalAccountEntryRelievingTmp _subledgerJournalAccountEntriesAlreadyRelieved,
        SubledgerJournalAccountEntryRelievingTmp _entriesForFinalRelieving)
    {
        _entriesForFinalRelieving = next addUnmatchedRelievingEntries(_subledgerJournalAccountEntriesToRelieve,
            _subledgerJournalAccountEntriesAlreadyRelieved,
            _entriesForFinalRelieving);

        if (LedgerParameters::isStornoEnabledEE())
        {
            this.removeStornoEntriesFromFinalRelieving(
                _subledgerJournalAccountEntriesAlreadyRelieved,
                _entriesForFinalRelieving);
        }

        return _entriesForFinalRelieving;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeStornoEntriesFromFinalRelieving</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes from entries to relieve those on which storno was made.
    /// </summary>
    /// <param name = "_subledgerJournalAccountEntriesAlreadyRelieved">Entries alredy relieved.</param>
    /// <param name = "_entriesForFinalRelieving">Entries for final relieving.</param>
    /// <remarks> 
    /// When storno for EE is enabled, entries for final relieving may contain the storno records
    /// because in <c>SubledgerJourFinalNetAmtEntryProviderAlreadyRelievedQueryEEAppSuite_Extension"</c>
    /// class ranges were changed to include either Side or isCorrection differences. Now we need to remove 
    /// the storno entries since they are already relieved.
    /// </remarks>
    private void removeStornoEntriesFromFinalRelieving(
        SubledgerJournalAccountEntryRelievingTmp _subledgerJournalAccountEntriesAlreadyRelieved,
        SubledgerJournalAccountEntryRelievingTmp _entriesForFinalRelieving)
    {
        delete_from _entriesForFinalRelieving
            exists join _subledgerJournalAccountEntriesAlreadyRelieved
                where _entriesForFinalRelieving.PostingType == _subledgerJournalAccountEntriesAlreadyRelieved.PostingType
                    && _entriesForFinalRelieving.LedgerDimension == _subledgerJournalAccountEntriesAlreadyRelieved.LedgerDimension
                    && _entriesForFinalRelieving.Side == _subledgerJournalAccountEntriesAlreadyRelieved.Side
                    && _entriesForFinalRelieving.IsCorrection == _subledgerJournalAccountEntriesAlreadyRelieved.IsCorrection
                    && _entriesForFinalRelieving.TransactionCurrency == _subledgerJournalAccountEntriesAlreadyRelieved.TransactionCurrency
                    && _entriesForFinalRelieving.AccountingCurrency == _subledgerJournalAccountEntriesAlreadyRelieved.AccountingCurrency
                    && _entriesForFinalRelieving.ReportingCurrency == _subledgerJournalAccountEntriesAlreadyRelieved.ReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>