<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DictEnumApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DictEnumApplicationSuite_Extension</c> class extends the <c>DictEnum</c> class.
/// </summary>
[ExtensionOf(classStr(DictEnum))]
final class DictEnumApplicationSuite_Extension
{
    public static anytype ConversionFailedValue = 255;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enumerationSet</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a <c>Set</c> of the values defined by the enumeration.
    /// </summary>
    /// <returns>A collection of the values.</returns>
    public Set enumerationSet()
    {
        int numberOfValues = this.values();
        Set values = new Set(Types::Enum);
        Set sysDeletedObjectsConfigurationKeyIds = DictConfigurationKey::getSysDeletedObjectsConfigurationKeyIds();

        for (int i = 0; i < numberOfValues; i++)
        {
            if (!sysDeletedObjectsConfigurationKeyIds.in(this.index2ConfigurationKey(i)))
            {
                values.add(this.index2Value(i));
            }
        }
        
        return values;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEnumerator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an enumerator of the elements defined by the enumeration.
    /// </summary>
    /// <returns>The enumerator.</returns>
    public Enumerator getEnumerator()
    {
        return this.enumerationSet().getEnumerator();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isValueEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Describes if the configuration key for a value is enabled on the system.
    /// </summary>
    /// <param name = "_value">The value.</param>
    /// <returns>true when enabled; otherwise, false.</returns>
    public boolean isValueEnabled(anytype _value)
    {
        Debug::assert(typeOf(_value) == Types::Enum || typeOf(_value) == Types::Integer);

        ConfigurationKeyId configurationKeyId = this.value2ConfigurationKey(enum2int(_value));

        if (configurationKeyId)
        {
            return isConfigurationkeyEnabled(configurationKeyId);
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>DictEnum</c> class.
    /// </summary>
    /// <param name = "_name">The name of the enum.</param>
    /// <returns>A new instance of the <c>DictEnum</c> class.</returns>
    static public DictEnum newFromName(EnumName _name)
    {
        return new DictEnum(enumName2Id(_name));    
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>