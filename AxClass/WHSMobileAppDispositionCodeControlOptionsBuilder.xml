<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSMobileAppDispositionCodeControlOptionsBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSMobileAppDispositionCodeControlOptionsBuilder
{
    private boolean addEmpty;
    private WHSWorkExecuteMode workExecuteMode;
    private WHSMixedLPReceivingMode mixedLPReceivingMode;
    private boolean validateMode;
    private WHSWorkTransType workTransType;
    private WHSDispositionCodeQueryBuilderBase dispositionCodeQueryBuilder;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static WHSMobileAppDispositionCodeControlOptionsBuilder construct()
    {
        return new WHSMobileAppDispositionCodeControlOptionsBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParams</Name>
				<Source><![CDATA[
    internal static WHSMobileAppDispositionCodeControlOptionsBuilder newFromParams(WHSWorkExecuteMode _workExecuteMode, WHSMixedLPReceivingMode _mixedLPReceivingMode, WHSWorkTransType _workTransType)
    {
        WHSMobileAppDispositionCodeControlOptionsBuilder builder = new WHSMobileAppDispositionCodeControlOptionsBuilder();
        builder.workExecuteMode = _workExecuteMode;
        builder.mixedLPReceivingMode = _mixedLPReceivingMode;
        builder.workTransType = _workTransType;
        builder.validateMode = true;

        return builder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddEmpty</Name>
				<Source><![CDATA[
    internal boolean parmAddEmpty(boolean _addEmpty = addEmpty)
    {
        addEmpty = _addEmpty;

        return addEmpty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDispositionCodeQueryBuilder</Name>
				<Source><![CDATA[
    internal void parmDispositionCodeQueryBuilder(WHSDispositionCodeQueryBuilderBase _dispositionCodeQueryBuilder)
    {
        dispositionCodeQueryBuilder = _dispositionCodeQueryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>availableDispositionCodes</Name>
				<Source><![CDATA[
    internal str availableDispositionCodes()
    {
        str elements;
        boolean first = true;
        WhsWorkExecuteDisplayController controller = WhsWorkExecuteDisplayController::construct();
        if (workTransType != WHSWorkTransType::None)
        {
            controller.parmReceivingWorkTransType(workTransType);
        }

        WHSDispositionTable dispositionTable;
        
        if (WHSUseDispositionCodeQueryBuilderFlight::instance().isEnabled())
        {
            var searchObject = new SysDaSearchObject(this.getDispositionCodeQueryObject(dispositionTable));
            var searchStatment = new SysDaSearchStatement();
            while (searchStatment.findNext(searchObject))
            {
                if (!validateMode
                || (controller.canShowDispositionCodeForMode(workExecuteMode, dispositionTable)
                    || controller.canShowDispositionCodeForMixedLPMode(workExecuteMode, dispositionTable, mixedLPReceivingMode)))
                {
                    if (first)
                    {
                        first = false;
                    }
                    else
                    {
                        elements += '||';
                    }

                    elements += dispositionTable.DispositionCode;
                }
            }
        }
        else 
        {
            while select dispositionTable
            {
                if (!validateMode
                || (controller.canShowDispositionCodeForMode(workExecuteMode, dispositionTable)
                    || controller.canShowDispositionCodeForMixedLPMode(workExecuteMode, dispositionTable, mixedLPReceivingMode)))
                {
                    if (first)
                    {
                        first = false;
                    }
                    else
                    {
                        elements += '||';
                    }

                    elements += dispositionTable.DispositionCode;
                }
            }
        }

        if (addEmpty
            && strLen(elements))
        {
            elements = '||' + elements;
        }

        return elements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDispositionCodeQueryObject</Name>
				<Source><![CDATA[
    internal SysDaQueryObject getDispositionCodeQueryObject(WHSDispositionTable _dispositionTable)
    {
        WHSDispositionCodeQueryBuilderBase builder = dispositionCodeQueryBuilder == null
            ? WHSDispositionCodeQueryBuilder::construct()
            : dispositionCodeQueryBuilder;

        return builder.buildDispositionsCodeOptionsQuery(_dispositionTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>