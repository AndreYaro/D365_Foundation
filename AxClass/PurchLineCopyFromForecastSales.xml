<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchLineCopyFromForecastSales</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchLineCopyFromForecastSales</c> class is responsible for copying from a <c>ForecastSales</c>.
/// </summary>
[PurchLineCopyFromSourceFactory(tableStr(ForecastSales))]
class PurchLineCopyFromForecastSales extends PurchLineCopyFromSource
{
    #ISOCountryRegionCodes
    ForecastSales sourceForecastSales;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canCopy</Name>
				<Source><![CDATA[
    public boolean canCopy()
    {
        if (!isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyFromSource</Name>
				<Source><![CDATA[
    protected void copyFromSource()
    {
        purchLine.PSAInitFromForecastSales(
            sourceForecastSales,
            copyPrecisely,
            !searchPrice, 
            copyQty,
            tmpFrmVirtualLine.qty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode retrieveCurrencyCode()
    {
        CurrencyCode currencyCode;

        if (purchLine.CurrencyCode != sourceForecastSales.Currency)
        {
            currencyCode = sourceForecastSales.Currency;
        }

        return currencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBasedOnSource</Name>
				<Source><![CDATA[
    protected void updateBasedOnSource()
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Project)))
        {
            sourceForecastSales.selectForUpdate();
            sourceForecastSales.PSARefPurchLine = purchLine.RecId;
            sourceForecastSales.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize(PurchLine _purchLine, PurchTable _purchTable, TmpFrmVirtual _tmpFrmVirtualLines, PurchCopying _purchCopying)
    {
        super(_purchLine, _purchTable, _tmpFrmVirtualLines, _purchCopying);

        sourceForecastSales = ForecastSales::findRecId(_tmpFrmVirtualLines.RecordNo);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSource</Name>
				<Source><![CDATA[
    public Common retrieveSource()
    {
        return sourceForecastSales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceQty</Name>
				<Source><![CDATA[
    public Qty retrieveSourceQty()
    {
        return sourceForecastSales.SalesQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceInventTransId</Name>
				<Source><![CDATA[
    public InventTransId retrieveSourceInventTransId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveSourceDocumentLineRecId</Name>
				<Source><![CDATA[
    public RefRecId retrieveSourceDocumentLineRecId()
    {
        return 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>