<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityReferenceTypePurchSales</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventQualityReferenceTypePurchSales</c> class is an abstract class that typifies common
///    properties of purchase and sales reference documents.
/// </summary>
abstract class InventQualityReferenceTypePurchSales extends InventQualityReferenceType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>iterateQualityAssociations</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Iterates all relevant combinations of certain quality association criteria and allows for a passed
    ///    actor to act on them.
    /// </summary>
    /// <param name="actionable">
    ///    An <c>InventQualityManagementActionable</c> reference to be called for action on each combination
    ///    of quality association criteria.
    /// </param>
    public void iterateQualityAssociations (InventQualityManagementActionable actionable)
    {
        InventTestItemQualityGroup  itemQualityGroup;

        actionable.actOnAssociations(
            TableGroupAll::Table,
            this.itemId(),
            TableGroupAll::Table,
            this.accountRelation(false),
            TableGroupAll::All,
            '');

        actionable.actOnAssociations(
            TableGroupAll::Table,
            this.itemId(),
            TableGroupAll::GroupId,
            this.accountRelation(true),
            TableGroupAll::All,
            '');

        actionable.actOnAssociations(
            TableGroupAll::Table,
            this.itemId(),
            TableGroupAll::All,
            '',
            TableGroupAll::All,
            '');

        actionable.actOnAssociations(
            TableGroupAll::All,
            '',
            TableGroupAll::Table,
            this.accountRelation(false),
            TableGroupAll::All,
            '');

        actionable.actOnAssociations(
            TableGroupAll::All,
            '',
            TableGroupAll::GroupId,
            this.accountRelation(true),
            TableGroupAll::All,
            '');

        while select QualityGroupId
            from itemQualityGroup
            where itemQualityGroup.ItemId == this.itemId()
        {
            actionable.actOnAssociations(
                TableGroupAll::GroupId,
                itemQualityGroup.QualityGroupId,
                TableGroupAll::Table,
                this.accountRelation(false),
                TableGroupAll::All,
                '');

            actionable.actOnAssociations(
                TableGroupAll::GroupId,
                itemQualityGroup.QualityGroupId,
                TableGroupAll::GroupId,
                this.accountRelation(true),
                TableGroupAll::All,
                '');

            actionable.actOnAssociations(
                TableGroupAll::GroupId,
                itemQualityGroup.QualityGroupId,
                TableGroupAll::All,
                '',
                TableGroupAll::All,
                '');
        }

        actionable.actOnAssociations(
            TableGroupAll::All,
            '',
            TableGroupAll::All,
            '',
            TableGroupAll::All,
            '');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>