<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollPEGeneratorPerEarningStmnt</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PayrollPEGeneratorPerEarningStmnt</c> class provides the functionality to generate premium earning lines per earning statement.
/// </summary>
public class PayrollPEGeneratorPerEarningStmnt extends PayrollPEGenerator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertPremiumEarningLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts a premium earning statement line in the <c>PayrollEarningStatementLine</c> table.
    /// </summary>
    /// <param name="_payrollEarningStatementLine">
    /// The record ID of the <c>PayrollEarningStatementLine</c> table record.
    /// </param>
    /// <remarks>
    /// The method would create a premium earning line after the validation otherwise throws exception.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// Validation fails for the premium earning line.
    /// </exception>
    protected void insertPremiumEarningLine(PayrollEarningStatementLine _payrollEarningStatementLine)
    {
        PayrollEarningStatementLine premiumEarningStatementLine;

        premiumEarningStatementLine.clear();
        premiumEarningStatementLine.GenerationSource   = PayrollGenerationSource::Premium;
        premiumEarningStatementLine.PremiumEarningCode = premiumEarningCode.RecId;
        premiumEarningStatementLine.PaymentStatus      = PayrollPaymentProcessingStatus::None;
        premiumEarningStatementLine.EarningStatement   = earningStatement.RecId;
        premiumEarningStatementLine.EarningCode        = premiumEarningCode.EarningCode;
        premiumEarningStatementLine.Quantity           = 1;

        // sets the fields in the earning statements line
        premiumEarningStatementLine.initFromPayrollEarningStatement(earningStatement);

        // computes the earning rate and quantity of the line based on the earning code, also sets default dimensions and accouting info
        premiumEarningStatementLine.modifiedField(fieldNum(PayrollEarningStatementLine, EarningCode));

        if (premiumEarningStatementLine.validateWrite())
        {
            if (premiumEarningStatementLine.AccountingCurrencyAmount != 0)
            {
                premiumEarningLineInsertList.add(premiumEarningStatementLine);

                isPremiumEarningLineInserted = true;
            }
        }
        else
        {
            throw Exception::Error;
        }

        canContinue = false;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>