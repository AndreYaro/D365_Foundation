<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressUpdater_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class LogisticsAddressUpdater_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates all addresses in choosen region
    /// </summary>
    /// <param name="_countryRegionId">Region for update</param>
    public static void updateAll(
    LogisticsAddressCountryRegionId _countryRegionId = LogisticsPostalAddress::findByLocation(
        CompanyInfo::findRecId(CompanyInfo::current()).PrimaryAddressLocation).CountryRegionId)
    {
        LogisticsPostalAddress  logisticsPostalAddress;
        LogisticsAddressUpdater_RU logisticsAddressUpdater_RU;

        ttsBegin;

        while select logisticsPostalAddress
        where logisticsPostalAddress.CountryRegionId == _countryRegionId
        {
            logisticsAddressUpdater_RU = new LogisticsAddressUpdater_RU();
            logisticsAddressUpdater_RU.updateAddress(logisticsPostalAddress);
        }

        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAddress</Name>
				<Source><![CDATA[
    protected void updateAddress( LogisticsPostalAddress  _logisticsPostalAddress)
    {
        LogisticsAddressHouseNumber_RU logisticsAddressHouseNumber_RU;
        LogisticsAddressStreet_RU logisticsAddressStreet_RU;
        LogisticsAddressDistrict logisticsAddressDistrict;

        LogisticsAddressNotFoundRecords_RU logisticsAddressNotFoundRecords_RU;

        _logisticsPostalAddress.selectForUpdate(true);
        _logisticsPostalAddress.validTimeStateUpdateMode(ValidTimeStateUpdate::Correction);

        if (_logisticsPostalAddress.HouseId_RU)
        {
            select firstOnly State, County, City, District, Street, RecId from logisticsAddressHouseNumber_RU
            where logisticsAddressHouseNumber_RU.RecId == _logisticsPostalAddress.HouseId_RU;

            _logisticsPostalAddress.State = logisticsAddressHouseNumber_RU.State;
            _logisticsPostalAddress.County = logisticsAddressHouseNumber_RU.County;
            _logisticsPostalAddress.CityRecId = logisticsAddressHouseNumber_RU.City;
            _logisticsPostalAddress.City = LogisticsAddressCity::getCityName(logisticsAddressHouseNumber_RU.City);
            _logisticsPostalAddress.District = logisticsAddressHouseNumber_RU.District;
            _logisticsPostalAddress.DistrictName = LogisticsAddressDistrict::getDistrictName(logisticsAddressHouseNumber_RU.District);
            _logisticsPostalAddress.StreetId_RU = logisticsAddressHouseNumber_RU.Street;
            _logisticsPostalAddress.Street = _logisticsPostalAddress.makeStreet_RU();
            _logisticsPostalAddress.update();

            _logisticsPostalAddress.HouseId_RU = logisticsAddressHouseNumber_RU.RecId;
            _logisticsPostalAddress.update();
        }
        else if (_logisticsPostalAddress.StreetId_RU)
        {
            select firstOnly logisticsAddressNotFoundRecords_RU
            where logisticsAddressNotFoundRecords_RU.RefRecId == _logisticsPostalAddress.StreetId_RU
               && logisticsAddressNotFoundRecords_RU.RefTableId == tableNum(LogisticsAddressStreet_RU);

            select firstOnly logisticsAddressStreet_RU
            where logisticsAddressStreet_RU.RecId == _logisticsPostalAddress.StreetId_RU;

            if (logisticsAddressNotFoundRecords_RU.RecId
            && logisticsAddressNotFoundRecords_RU.LogisticsAddressNotFoundReason_RU == LogisticsAddressNotFoundReason_RU::Moved)
            {
                this.updateByLogAddressObject(logisticsAddressNotFoundRecords_RU, _logisticsPostalAddress);
            }

            else
            {
                this.updateStreet(_logisticsPostalAddress, logisticsAddressStreet_RU);
            }
        }
        else if (_logisticsPostalAddress.District)
        {
            select firstOnly logisticsAddressNotFoundRecords_RU
            where logisticsAddressNotFoundRecords_RU.RefRecId == _logisticsPostalAddress.District
               && logisticsAddressNotFoundRecords_RU.RefTableId == tableNum(LogisticsAddressDistrict);

            select firstOnly logisticsAddressDistrict
            where logisticsAddressDistrict.RecId == _logisticsPostalAddress.District;

            if (logisticsAddressNotFoundRecords_RU.RecId
            && logisticsAddressNotFoundRecords_RU.LogisticsAddressNotFoundReason_RU == LogisticsAddressNotFoundReason_RU::Moved)
            {
                this.updateByLogAddressObject(logisticsAddressNotFoundRecords_RU, _logisticsPostalAddress);
            }

            else
            {
                this.updateDistrict(_logisticsPostalAddress, logisticsAddressDistrict);
            }
        }

        _logisticsPostalAddress.Address = _logisticsPostalAddress.formatAddress_RU(LogisticsPostalAddressMap::addressFormatId('RUS'));
        _logisticsPostalAddress.update();

    }

]]></Source>
			</Method>
			<Method>
				<Name>updateByLogAddressObject</Name>
				<Source><![CDATA[
    private void updateByLogAddressObject(LogisticsAddressNotFoundRecords_RU _logisticsAddressNotFoundRecords_RU,
    LogisticsPostalAddress _logisticsPostalAddress
    )
    {
        LogisticsAddressStreet_RU logisticsAddressStreet_RU;
        LogisticsAddressDistrict logisticsAddressDistrict;

        if (_logisticsAddressNotFoundRecords_RU.LogisticsAddressElementTo == LogisticsAddressElement::StreetName)
        {
            select firstOnly logisticsAddressStreet_RU
            where logisticsAddressStreet_RU.RecId == _logisticsAddressNotFoundRecords_RU.RefRecIdTo;

            this.updateStreet(_logisticsPostalAddress, logisticsAddressStreet_RU);
        }

        else
        {
            select firstOnly logisticsAddressDistrict
            where logisticsAddressDistrict.RecId == _logisticsAddressNotFoundRecords_RU.RefRecIdTo;

            this.updateDistrict(_logisticsPostalAddress, logisticsAddressDistrict);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDistrict</Name>
				<Source><![CDATA[
    private void updateDistrict(LogisticsPostalAddress _logisticsPostalAddress, LogisticsAddressDistrict _logisticsAddressDistrict)
    {
        _logisticsPostalAddress.State = _logisticsAddressDistrict.StateId_RU;
        _logisticsPostalAddress.County = _logisticsAddressDistrict.CountyId_RU;
        _logisticsPostalAddress.CityRecId = _logisticsAddressDistrict.City;
        _logisticsPostalAddress.City = LogisticsAddressCity::getCityName(_logisticsAddressDistrict.City);
        _logisticsPostalAddress.District = _logisticsAddressDistrict.RecId;
        _logisticsPostalAddress.DistrictName = _logisticsAddressDistrict.Description;
        _logisticsPostalAddress.Street = _logisticsPostalAddress.makeStreet_RU();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStreet</Name>
				<Source><![CDATA[
    private void updateStreet(LogisticsPostalAddress _logisticsPostalAddress, LogisticsAddressStreet_RU _logisticsAddressStreet_RU)
    {
        _logisticsPostalAddress.State = _logisticsAddressStreet_RU.State;
        _logisticsPostalAddress.County = _logisticsAddressStreet_RU.County;
        _logisticsPostalAddress.CityRecId = _logisticsAddressStreet_RU.City;
        _logisticsPostalAddress.City = LogisticsAddressCity::getCityName(_logisticsAddressStreet_RU.City);
        _logisticsPostalAddress.District = _logisticsAddressStreet_RU.District;
        _logisticsPostalAddress.DistrictName = LogisticsAddressDistrict::getDistrictName(_logisticsAddressStreet_RU.District);
        _logisticsPostalAddress.StreetId_RU = _logisticsAddressStreet_RU.RecId;
        _logisticsPostalAddress.Street = _logisticsPostalAddress.makeStreet_RU();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>