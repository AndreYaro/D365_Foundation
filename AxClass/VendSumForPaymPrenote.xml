<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendSumForPaymPrenote</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendSumPaymPrenote</c> class is extended from the <c>VendSumForPaym</c> class to generate
/// prenotes.
/// </summary>
public class VendSumForPaymPrenote extends VendSumForPaym
{
    List prenoteTrans;
    List journalList;
    Filename filename;
    StreamIo file;
    PrenoteExportFormats prenoteExportFormats;
    VendOutPaymPrenote_NACHA vendOutPaymPrenote_NACHA;
    private EffectiveDate effectiveEntryDate;

    #DEFINE.strPrenote('Prenote')

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getPrenoteJournalId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new number from prenotes number sequence for prenote identification.
    /// </summary>
    /// <returns>
    /// The new <c>LedgerJournalId</c> identifier.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    LedgerJournalId getPrenoteJournalId()
    {
        extendedTypeId id = extendedTypeNum(BankPrenoteNum);
        NumberSeq num;

        try
        {
            num = NumberSeq::newGetNum(NumberSeqReference::findReference(id), true);
            return num.num();
        }
        catch
        {
            infolog.clear(0);
            throw error("@SYS128969");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCustVendOutPaym</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>CustVendOutPaym</c> object if the <c>PaymMode</c> object is initialized.
    /// </summary>
    public void initCustVendOutPaym()
    {
        paymMode = #strPrenote;

        vendOutPaymPrenote_NACHA = VendOutPaymPrenote_NACHA::newCustVendSumForPaym(this, file);
        vendOutPaymPrenote_NACHA.parmJournalList(prenoteTrans);
        vendOutPaymPrenote_NACHA.setFileName(filename);
        vendOutPaymPrenote_NACHA.parmFileNACHAFormat(prenoteExportFormats);
        vendOutPaymPrenote_NACHA.parmBankAccountID(bankAccountID);
        vendOutPaymPrenote_NACHA.parmLedgerJournalId(ledgerJournalId);
        vendOutPaymPrenote_NACHA.parmEffectiveEntryDate(effectiveEntryDate);
        paymFormat = vendOutPaymPrenote_NACHA.interfaceName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFileName</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public Filename parmFileName(Filename _filename = filename)
    {
        filename = _filename;

        return filename;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEffectiveEntryDate</Name>
				<Source><![CDATA[
    internal EffectiveDate parmEffectiveEntryDate(EffectiveDate _effectiveDate = effectiveEntryDate)
    {
        effectiveEntryDate = _effectiveDate;

        return effectiveEntryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFile</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public StreamIo parmFile(StreamIo _file = file)
    {
        file = _file;

        return file;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmJournalList</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List parmJournalList(List _journalList = journalList)
    {
        journalList = _journalList;

        return journalList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrenoteExportFormats</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public PrenoteExportFormats parmPrenoteExportFormats(PrenoteExportFormats _prenoteExportFormats = prenoteExportFormats)
    {
        prenoteExportFormats = _prenoteExportFormats;

        return prenoteExportFormats;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrenoteTrans</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public List parmPrenoteTrans(List _prenoteTrans = prenoteTrans)
    {
        prenoteTrans = _prenoteTrans;

        return prenoteTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSelectOnPaymFormat</Name>
				<Source><![CDATA[
    public boolean parmSelectOnPaymFormat(boolean _selectOnPaymFormat = false)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymModeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an <c>VendPaymModeTable</c> table with a NACHA export framework.
    /// </summary>
    /// <returns>
    /// The newly created <c>VendPaymModeTable</c> table.
    /// </returns>
    public CustVendPaymModeTable paymModeTable()
    {
        VendPaymModeTable vendPaymModeTable;
        VendOutPaym_NACHA vendOutPaym_NACHA = new VendOutPaym_NACHA();

        vendPaymModeTable.actionClassName(true, vendOutPaym_NACHA.interfaceName());
        vendPaymModeTable.ClassId = classnum(VendOutPaymPrenote_NACHA);
        vendPaymModeTable.Name = #strPrenote;

        return vendPaymModeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes customer prenote file generation.
    /// </summary>
    public void run()
    {
        this.initCustVendOutPaym();

        if (! this.validate())
        {
            return;
        }

        if (!vendOutPaymPrenote_NACHA.validate())
        {
            throw error("@SYS18447");
        }

        vendOutPaymPrenote_NACHA.open();
        vendOutPaymPrenote_NACHA.generatePaymentLines();
        vendOutPaymPrenote_NACHA.close();
        file = vendOutPaymPrenote_NACHA.parmFile();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// overridden to bypass journal validation for prenote file generation.
    /// </summary>
    /// <param name="_calledFrom">
    /// Identifies the object from which this method is called. Default value is null.
    /// </param>
    /// <returns>
    /// true.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static CustVendSumForPaym construct(List _list,Filename _filename, PrenoteExportFormats _prenoteExportFormats, CompanyBankAccount _companyBankAccountId)
    {
        VendSumForPaymPrenote vendSumForPaymPrenote;

        vendSumForPaymPrenote = new VendSumForPaymPrenote();
        vendSumForPaymPrenote.parmPrenoteTrans(_list);
        vendSumForPaymPrenote.parmLedgerJournalId(vendSumForPaymPrenote.getPrenoteJournalId());
        vendSumForPaymPrenote.parmFileName(_filename);
        vendSumForPaymPrenote.parmBankAccountID(_companyBankAccountId);
        vendSumForPaymPrenote.parmPrenoteExportFormats(_prenoteExportFormats);

        return vendSumForPaymPrenote;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>