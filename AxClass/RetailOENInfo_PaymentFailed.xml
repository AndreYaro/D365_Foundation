<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailOENInfo_PaymentFailed</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Generate event notification for payment failed order.
/// </summary>
class RetailOENInfo_PaymentFailed extends RetailOENInfo
{
    CreditCardAuthTrans         creditCardTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>EventNotificationType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to return retail event notification type.
    /// </summary>
    /// <returns>
    /// Retail event notification type.
    /// </returns>
    public RetailEventNotificationType EventNotificationType()
    {
        return RetailEventNotificationType::PaymentFailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateDetailInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates detail information about transaction.
    /// </summary>
    /// <param name="messageTemplate">
    /// String which has the transaction information.
    /// </param>
    /// <returns>
    /// Detail information about transaction.
    /// </returns>
    protected str generateDetailInfo(str messageTemplate)
    {
        return super(messageTemplate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveSalesOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds sales order and sets value to <c>RetailOENInfo</c>.
    /// </summary>
    /// <param name="refRecId">
    /// Record id of <c>CreditCardAuthTrans</c>.
    /// </param>
    public void resolveSalesOrder(RefRecId refRecId)
    {
        SalesTable      so;

        so = SalesTable::findRecId(refRecId);

        creditCardTrans = CreditCardAuthTrans::findLatest(so.SalesId);
        this.parmSalesOrder(so);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>