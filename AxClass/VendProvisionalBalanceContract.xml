<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendProvisionalBalanceContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendProvisionalBalanceContract</c> class is the data contract class for the
/// <c>VendProvisionalBalance</c>Microsoft SQL Server Reporting Services report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(VendProvisionalBalanceUIBuilder), SysOperationDataContractProcessingMode::CreateUIBuilderForRootContractOnly),
    SysOperationGroupAttribute('Empty', "@ApplicationPlatform:SingleSpace", '1'),
    SysOperationGroupAttribute('GroupSort', "@SYS341193", '2'),
    SysOperationGroupAttribute('Printout', "@SYS12608", '3')
]
public class VendProvisionalBalanceContract implements SysOperationValidatable
{
    FromDate fromDate;
    FromDate reportPeriodStartDate;
    ToDate toDate;
    NoneBeginTransEnd noneBeginTransEnd;
    boolean includeDetails;
    VendMainAccount vendMainAccountGroupBy;
    LedgerCurrencySelection ledgerCurrencySelection;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    ///     The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter FromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalStr("@SYS5209")),
        SysOperationHelpTextAttribute(literalStr("@SYS67")),
        SysOperationGroupMemberAttribute('Empty'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupBy</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the data contract parameter <c>ReportPeriodStartDate</c>.
    /// </summary>
    /// <param name="_vendMainAccountGroupBy">
    ///     The new value of the data contract parameter group by; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter group by.
    /// </returns>
    [
        DataMemberAttribute('GroupBy'),
        SysOperationLabelAttribute(literalStr("@SYS341194")),
        SysOperationHelpTextAttribute(literalStr("@SYS341194")),
        SysOperationGroupMemberAttribute('GroupSort'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public VendMainAccount parmGroupBy(VendMainAccount _vendMainAccountGroupBy = vendMainAccountGroupBy)
    {
        vendMainAccountGroupBy = _vendMainAccountGroupBy;
        return vendMainAccountGroupBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>ledgerCurrencySelection</c> parameter.
    /// </summary>
    /// <param name="_ledgerCurrencySelection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>ledgerCurrencySelection</c> parameter.
    /// </returns>
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@AccountsReceivable:CurrencySelectionText")),
        SysOperationGroupMemberAttribute('Empty'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeDetails</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the data contract parameter NoneBeginTransEnd.
    /// </summary>
    /// <param name="_includeDetails">
    ///     The new value of the data contract parameter includeDetails; optional.
    /// </param>
    /// <returns>
    ///     The current value of datacontract parameter includeDetails.
    /// </returns>
    [
        DataMemberAttribute('IncludeDetails'),
        SysOperationLabelAttribute(literalStr("@SYS316360")),
        SysOperationHelpTextAttribute(literalStr("@SYS341195")),
        SysOperationGroupMemberAttribute('Printout'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public boolean parmIncludeDetails(boolean _includeDetails = includeDetails)
    {
        includeDetails = _includeDetails;
        return includeDetails;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNoneBeginTransEnd</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the data contract parameter NoneBeginTransEnd.
    /// </summary>
    /// <param name="_noneBeginTransEnd">
    ///     The new value of the data contract parameter NoneBeginTransEnd; optional.
    /// </param>
    /// <returns>
    ///     The current value of data contract parameter NoneBeginTransEnd.
    /// </returns>
    [
        DataMemberAttribute('NoneBeginTransEnd'),
        SysOperationLabelAttribute(literalStr("@SYS1046")),
        SysOperationHelpTextAttribute(literalStr("@SYS69638")),
        SysOperationGroupMemberAttribute('Printout'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public NoneBeginTransEnd parmNoneBeginTransEnd(NoneBeginTransEnd _noneBeginTransEnd = noneBeginTransEnd)
    {
        noneBeginTransEnd = _noneBeginTransEnd;
        return noneBeginTransEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportPeriodStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the data contract parameter ReportPeriodStartDate.
    /// </summary>
    /// <param name="_reportPeriodStartDate">
    ///     The new value of the data contract parameter ReportPeriodStartDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of data contract parameter ReportPeriodStartDate.
    /// </returns>
    [
        DataMemberAttribute('ReportPeriodStartDate'),
        SysOperationLabelAttribute(literalStr("@SYS77879")),
        SysOperationHelpTextAttribute(literalStr("@SYS67")),
        SysOperationGroupMemberAttribute('Empty'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public FromDate parmReportPeriodStartDate(FromDate _reportPeriodStartDate = reportPeriodStartDate)
    {
        reportPeriodStartDate = _reportPeriodStartDate;
        return reportPeriodStartDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the value of the data contract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    ///     The new value of the data contract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///     The current value of data contract parameter ToDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalStr("@SYS14656")),
        SysOperationHelpTextAttribute(literalStr("@SYS67")),
        SysOperationGroupMemberAttribute('Empty'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters.
    /// </summary>
    /// <returns>
    /// true if all parameters are correct; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        if (! this.parmFromDate())
        {
            return checkFailed(strFmt("@SYS26332", "@SYS24050"));
        }

        if (this.parmFromDate() > this.parmReportPeriodStartDate())
        {
            if (!this.parmReportPeriodStartDate())
            {
                return checkFailed(strFmt("@SYS26332", "@SYS77879"));
            }

            return checkFailed(strFmt("@SYS55013", date2StrUsr(this.parmFromDate(), DateFlags::FormatAll), date2StrUsr( this.parmReportPeriodStartDate(), DateFlags::FormatAll)));
        }

        if (this.parmFromDate() > this.parmToDate())
        {
            return checkFailed("@SYS16982");
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>