<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>ProjUtilReportController</Name>
  <SourceCode>
    <Declaration><![CDATA[
/// <summary>
/// The <c>ProjUtilReportController</c> class is the controller class for <c>ProjUtilReport</c> reports.
/// </summary>
class ProjUtilReportController extends SrsReportRunController implements BatchRetryable
{
    boolean                 isEfficiency;
    str                     projEfficiencyParam;
    ProjUtilCalcFilterType  filterType;
    ProjBillableEfficiency  enumParm;
    ProjUtilEmplContract    contract;

    #define.ReportNameProjUtilProject('ProjUtilProject.Report')
    #define.ReportNameProjUtilEmpl('ProjUtilEmpl.Report')
    #define.ReportNameProjUtilCategory('ProjUtilCategory.Report')
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>getReportName</Name>
        <Source><![CDATA[
        protected str getReportName(Args _args)
    {
        str reportNameStr;

        switch (_args.menuItemName())
        {
            case menuitemoutputstr(ProjBillUtilCategory):
                reportNameStr = #ReportNameProjUtilCategory;
                break;
            case menuitemoutputstr(ProjEfficiencyUtilCategory):
                reportNameStr = #ReportNameProjUtilCategory;
                break;
            case menuitemoutputstr(ProjBillUtilEmpl):
                reportNameStr = #ReportNameProjUtilEmpl;
                break;
            case menuitemoutputstr(ProjEfficiencyUtilEmpl):
                reportNameStr = #ReportNameProjUtilEmpl;
                break;
            case menuitemoutputstr(ProjBillUtilProject):
                reportNameStr = #ReportNameProjUtilProject;
                break;
            case menuitemoutputstr(ProjEfficiencyUtilProject):
                reportNameStr = #ReportNameProjUtilProject;
                break;
        }

        return reportNameStr;
    }

]]></Source>
      </Method>
      <Method>
        <Name>prePromptModifyContract</Name>
        <Source><![CDATA[
        protected void prePromptModifyContract()
    {
        contract = this.parmReportContract().parmRdpContract() as ProjUtilEmplContract;

        if (this.parmArgs().parmEnumType() == enumnum(ProjBillableEfficiency))
        {
            enumParm = this.parmArgs().parmEnum();

            if (enumParm == ProjBillableEfficiency::Efficiency)
            {
                isEfficiency = true ;
            }
            else
            {
                isEfficiency = false;
            }
        }

        contract.parmProjIsEfficiency(isEfficiency);
    }

]]></Source>
      </Method>
      <Method>
        <Name>main</Name>
        <Source><![CDATA[
    /// <summary>
    /// Displays the customized <c>Tax1099Report</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Args object.
    /// </param>
    public static void main(Args _args)
    {
        ProjUtilReportController controller = new ProjUtilReportController();

        controller.parmReportName(controller.getReportName(_args));
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
      </Method>
      <Method>
        <Name>isRetryable</Name>
        <Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>