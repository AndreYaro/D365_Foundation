<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanCostLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LeanCostLogger</c> class is responsible for capturing and persisting the infolog messages for a specific
/// production flow backflush costing.
/// </summary>
public class LeanCostLogger
{
    LeanProductionFlowCostingRefRecId   leanProductionFlowCostingRecId;

    int                                 startLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize()
    {
        startLine = infologLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static LeanCostLogger construct()
    {
        return new LeanCostLogger();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLeanProductionFlowCostingRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>LeanCostLogger</c> class for a specific production flow costing.
    /// </summary>
    /// <param name = "_leanProductionFlowCostingRecId">The record ID of the production flow costing.</param>
    /// <returns>A new instance of the <c>LeanCostLogger</c> class.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static LeanCostLogger newFromLeanProductionFlowCostingRecId(LeanProductionFlowCostingRefRecId _leanProductionFlowCostingRecId)
    {
        LeanCostLogger logger = LeanCostLogger::construct();
        logger.leanProductionFlowCostingRecId = _leanProductionFlowCostingRecId;
        logger.initialize();

        return logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistLog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Persists the infolog captured since the creation of the logger within the production flow costing record.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void persistLog()
    {
        int         currentLine = infologLine();
        container   conMessages;

        if (startLine != currentLine)
        {
            conMessages = infolog.copy(startLine + 1, currentLine);
        }

        ttsbegin;
        LeanProductionFlowCosting leanProductionFlowCosting = LeanProductionFlowCosting::find(leanProductionFlowCostingRecId, true);
        leanProductionFlowCosting.Infolog = leanProductionFlowCosting.Infolog + conMessages;
        leanProductionFlowCosting.update();
        ttscommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>