<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMCustRebateActionManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TAMCustRebateActionManager</c> class handles updating the
/// PdsRebateAgreement table when the workflow status changes.
/// </summary>
class TAMCustRebateActionManager extends TAMWorkflowActionManager
{
    PdsRebateAgreement              pdsRebateAgreement;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    protected void process(Args _args)
    {
        object                      pdsRebateAgreement_ds;

        workflowWorkItemTable = _args.caller().getActiveWorkflowWorkItem();
        menuitemActionName = _args.menuItemName();
        workflowWorkItemActionType = WorkflowWorkItemActionManager::findActionTypeForMenuItem(workflowWorkItemTable, menuitemActionName);

        this.showDialog();

        if (workflowWorkItemActionDialog.parmIsClosedOK())
        {
            pdsRebateAgreement = _args.record();

            switch (workflowWorkItemActionType)
            {
                case WorkflowWorkItemActionType::RecallLineItem:
                case WorkflowWorkItemActionType::CancelLineItem:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::NotSubmitted;
                    break;

                case WorkflowWorkItemActionType::Complete:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::Approved;
                    break;

                case WorkflowWorkItemActionType::Reassign:
                case WorkflowWorkItemActionType::Delegate:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::Submitted;
                    break;

                case WorkflowWorkItemActionType::Return:
                case WorkflowWorkItemActionType::Deny:
                case WorkflowWorkItemActionType::RequestChange:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::Rejected;
                    break;

                case WorkflowWorkItemActionType::Resubmit:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::Submitted;
                    break;

                default:
                    pdsRebateAgreement.TAMCustRebateApprovalStatus = TAMCustRebateApprovalStatus::NotSubmitted;
                    break;
            }

            this.updateWorkflowWorkItem();

            pdsRebateAgreement.update();

            pdsRebateAgreement_ds = FormDataUtil::getFormDataSource(pdsRebateAgreement);

            if (pdsRebateAgreement_ds)
            {
                pdsRebateAgreement_ds.research();
                pdsRebateAgreement_ds.refresh();
            }

            _args.caller().updateWorkFlowControls();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TAMCustRebateActionManager construct()
    {
        return new TAMCustRebateActionManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        TAMCustRebateActionManager  tamCustRebateActionManager;

        if (_args.record())
        {
            tamCustRebateActionManager = TAMCustRebateActionManager::construct();
            tamCustRebateActionManager.process(_args);
        }
        else
        {
            throw error("@MCR27548");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>