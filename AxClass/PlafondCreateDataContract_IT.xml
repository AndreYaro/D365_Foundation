<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PlafondCreateDataContract_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for plafond creating.
/// </summary>
[DataContract,
SysOperationGroup('InitialAmount', "@ExtendedItallianLocalization:InitialPlafondAmount", '1', FormArrangeMethod::HorizontalWrap),
SysOperationGroup('Limit', "@ExtendedItallianLocalization:PlafondLimit", '2', FormArrangeMethod::HorizontalFlushRight),
SysOperationGroup('Validity', "@SYS29148", '3', FormArrangeMethod::HorizontalFlushRight),
SysOperationContractProcessing(classstr(PlafondCreateUIBuilder_IT))]

public class PlafondCreateDataContract_IT implements SysOperationValidatable
{
    public Plafond_IT plafond;
    public FromDate fromDate;
    public ToDate toDate;
    public AmountMST initialAmount, limitAmount;
    public Percent limitPercent;
    public PlafondLimitType_IT limitType;
    public TaxPeriod taxPeriod;
    public Description description;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPlafond</Name>
				<Source><![CDATA[
    public Plafond_IT parmPlafond(Plafond_IT _plafond = plafond)
    {
        plafond = _plafond;
        return plafond;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInitialAmount</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('1'),
    SysOperationLabel("@ExtendedItallianLocalization:InitialPlafondAmount"),
    SysOperationGroupMember('InitialAmount')]
    public AmountMST parmInitialAmount(AmountMST _initialAmount = initialAmount)
    {
        initialAmount = _initialAmount;
        return initialAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('2'),
    SysOperationGroupMember('InitialAmount')]
    public Description parmDescription(Description _description = description)
    {
        description = _description;
        return description;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLimitType</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('3'),
    SysOperationGroupMember('Limit')]
    public PlafondLimitType_IT parmLimitType(PlafondLimitType_IT _limitType = limitType)
    {
        limitType = _limitType;
        return limitType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLimitAmount</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('4'),
    SysOperationLabel("@ExtendedItallianLocalization:PlafondWarningAmount"),
    SysOperationGroupMember('Limit')]
    public AmountMST parmLimitAmount(AmountMST _limitAmount = limitAmount)
    {
        limitAmount = _limitAmount;
        return limitAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLimitPercent</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('5'),
    SysOperationLabel("@ExtendedItallianLocalization:PlafondWarningPercent"),
    SysOperationGroupMember('Limit')]
    public Percent parmLimitPercent(Percent _limitPercent = limitPercent)
    {
        limitPercent = _limitPercent;
        return limitPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('6'),
    SysOperationGroupMember('Validity')]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('7'),
    SysOperationGroupMember('Validity')]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriod</Name>
				<Source><![CDATA[
    [DataMember,
    SysOperationControlVisibility(true),
    SysOperationDisplayOrder('8'),
    SysOperationGroupMember('Validity')]
    public TaxPeriod parmTaxPeriod(TaxPeriod _taxPeriod = taxPeriod)
    {
        taxPeriod = _taxPeriod;
        return taxPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate()
    {
        boolean ret;

        if (fromDate && toDate)
        {
            if (fromDate > toDate)
            {
                warning("@SYS16982");
                ret = false;
            }
            else
            {
                ret = true;
            }
        }
        else
        {
            warning("@SYS95151");
            ret = false;
        }

        if (ret)
        {
            if (initialAmount <= 0)
            {
                ret = false;

                if (initialAmount == 0)
                {
                    warning(strFmt("@SYS50104", "@ExtendedItallianLocalization:InitialPlafondAmount"));
                }
                else
                {
                    warning(strFmt("@SYS69681", "@ExtendedItallianLocalization:InitialPlafondAmount"));
                }
            }
        }

        if (ret)
        {
            switch (limitType)
            {
                case PlafondLimitType_IT::Amount:

                    if (limitAmount <= 0)
                    {
                        ret = false;

                        if (limitAmount == 0)
                        {
                            warning(strFmt("@SYS50104", "@ExtendedItallianLocalization:PlafondWarningAmount"));
                        }
                        else
                        {
                            warning(strFmt("@SYS69681", "@ExtendedItallianLocalization:PlafondWarningAmount"));
                        }
                    }
                    else
                    {
                        if (limitAmount > initialAmount)
                        {
                            warning(strFmt("@SYS71086", "@ExtendedItallianLocalization:PlafondWarningAmount", "@ExtendedItallianLocalization:InitialPlafondAmount"));
                            ret = false;
                        }
                    }
                    break;

                case PlafondLimitType_IT::Percentage:

                    if (limitPercent <= 0)
                    {
                        ret = false;

                        if (limitPercent == 0)
                        {
                            warning(strFmt("@SYS50104", "@ExtendedItallianLocalization:PlafondWarningPercent"));
                        }
                        else
                        {
                            warning(strFmt("@SYS69681", "@ExtendedItallianLocalization:PlafondWarningPercent"));
                        }
                    }
                    else
                    {
                        if (limitPercent > 100)
                        {
                            warning(strFmt("@SYS71086", "@ExtendedItallianLocalization:PlafondWarningPercent", "100"));
                            ret = false;
                        }
                    }
                    break;

                default:
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>