<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>NumberSeqModulePurchaseOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class NumberSeqModulePurchaseOrder extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeReference</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs the module-specific initialization of a <c>NumberSequenceReference</c> object.
    /// </summary>
    /// <param name="_reference">
    ///    The instance of the <c>NumberSequenceReference</c> to initialize.
    /// </param>
    /// <param name="_datatype">
    ///    The data type to be used by the <c>NumberSequenceReference</c> object.
    /// </param>
    /// <param name="_scope">
    ///    The scope to be used by the <c>NumberSequenceReference</c> object.
    /// </param>
    /// <remarks>
    ///    This method implements specific initialization of a <c>NumberSequenceReference</c> object for
    ///    fields that are too dynamic to be configured on the <c>NumberSequenceDatatype</c> object. The
    ///    default implementation does nothing, but can be overridden to set dynamic values for the
    ///    <c>AllowSameAs</c> property, based on the context specified by the <c>NumberSequenceDatatype</c>
    ///    and <c>NumberSequenceScope</c> objects.
    /// </remarks>
    public void initializeReference(NumberSequenceReference _reference, NumberSeqDatatype _datatype, NumberSeqScope _scope)
    {
        #ISOCountryRegionCodes

        super(_reference, _datatype, _scope);

        switch (_datatype.parmDatatypeId())
        {
            case extendedTypeNum(PurchInvoiceVoucher):
            case extendedTypeNum(PurchCreditNoteVoucher):
                if (MultipleTaxIdReportingHelper::isLegalEntityOrAddressInCountryRegion(
                    [#isoIT], MultipleTaxIdScope::VATDeclaration))
                {
                    _reference.AllowSameAs = true;
                }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        // Setup Purchaseorder numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchId));
        datatype.parmReferenceHelp(literalStr("@SYS53960"));
        datatype.parmReferenceLabel(literalStr("@SYS74448"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup posting numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchaseOrderId));
        datatype.parmReferenceHelp(literalStr("@SYS53959"));
        datatype.parmReferenceLabel(literalStr("@SYS319254"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(2);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(ReceiptsListId));
        datatype.parmReferenceHelp(literalStr("@SYS53958"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // NumberSequences moved to Vendor module:
        // PurchInternalPackingSlipId, PurchInternalInvoiceId, PurchInternalCreditNoteId, PurchPackingSlipVoucher
        // PurchInvoiceVoucher, PurchaseOrderVoucher, PurchCreditNoteVoucher, PurchMarkupVoucher

        // Setup RFQ numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchRFQCaseId));
        datatype.parmReferenceHelp(literalStr("@SYS103635"));
        datatype.parmReferenceLabel(literalStr("@SYS103842"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(4);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchRFQId));
        datatype.parmReferenceHelp(literalStr("@SYS103841"));
        datatype.parmReferenceLabel(literalStr("@SYS102691"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(5);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        datatype.parmDatatypeId(extendedTypeNum(PurchInternalRFQId));
        datatype.parmReferenceHelp(literalStr("@SYS103636"));
        datatype.parmReferenceLabel(literalStr("@SYS102984"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(6);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup Purchase Requisition Id numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchReqId));
        datatype.parmReferenceHelp(literalStr("@SYS109231"));
        datatype.parmReferenceLabel(literalStr("@SYS94925"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(7);

        this.create(datatype);

        // Setup Purchase Requisition Consolidation Opportunity numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchReqConsolidationOpportunityId));
        datatype.parmReferenceHelp(literalStr("@SYS131535"));
        datatype.parmReferenceLabel(literalStr("@SYS131536"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(8);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup Purchase Agreement Id numbers

        datatype.parmDatatypeId(extendedTypeNum(PurchAgreementId));
        datatype.parmReferenceHelp(literalStr("@SYS301385"));
        datatype.parmReferenceLabel(literalStr("@SYS183834"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(9);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup voucher for posting purchase requisitions
        datatype.parmDatatypeId(extendedTypeNum(PurchReqVoucher));
        datatype.parmReferenceHelp(literalStr("@SYS302772"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmWizardLowest(000000000);
        datatype.parmWizardHighest(999999999);
        datatype.parmSortField(10);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup Purchase Confirmation of receipt packingslip id

        datatype.parmDatatypeId(extendedTypeNum(PurchCORPackingSlipId));
        datatype.parmReferenceHelp(literalStr("@SYS301331"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(11);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        this.MCRLoadModules(datatype);

        // Calculation number
        datatype.parmDatatypeId(extendedTypeNum(PDSCalculationId));
        datatype.parmReferenceHelp(literalStr("@PSC188"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(999999);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup consignment replenishment order ID

        datatype.parmDatatypeId(extendedTypeNum(ConsignmentReplenishmentOrderNumber));
        datatype.parmReferenceHelp(literalStr("@Consignment:Help_ReplenishmentOrderNumberSequence"));
        datatype.parmReferenceLabel(literalStr("@Consignment:Label_ReplenishmentOrderNumberSequence"));
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(12);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        // Setup product receipt ID used when posting inventory ownership change journals

        datatype.parmDatatypeId(extendedTypeNum(InventJournalOwnershipChangeProductReceiptId));
        datatype.parmReferenceHelp(literalStr("@Consignment:Help_InventOwnershipChangeProductReceipt"));
        datatype.parmReferenceLabel(literalStr("@Consignment:Label_InventOwnershipChangeProductReceipt"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmIsGroupEnabled(NoYes::Yes);
        datatype.parmSortField(13);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrLoadModules</Name>
				<Source><![CDATA[
    private void mcrLoadModules(NumberSeqDatatype datatype)
    {
        datatype.parmDatatypeId(extendedTypeNum(MCRDirectDeliveryNum));
        datatype.parmReferenceHelp(literalStr("@MCR36720"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(20);

        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::Purch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModulePurchaseOrder), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>