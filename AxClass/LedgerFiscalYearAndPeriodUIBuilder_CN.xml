<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerFiscalYearAndPeriodUIBuilder_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerFiscalPeriodNameUIBuilder</c> class is for <c>LedgerFiscalPeriodNameContract</c> contract class.
/// </summary>
class LedgerFiscalYearAndPeriodUIBuilder_CN extends SrsReportDataContractExtendUIBuilder_CN
{
    DialogField     dialogFieldYear;
    DialogField     dialogFieldPeriod;

    FiscalCalendarPeriod    fiscalCalendarPeriod;
    FiscalCalendarYear      fiscalCalendarYear;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>modifyOverrideMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies dialog fields' modified and lookup methods
    /// </summary>
    protected void modifyOverrideMethod()
    {
        this.overrideDialogFieldMethod(dialogFieldYear, methodStr(FormStringControl, Modified), methodStr(LedgerFiscalYearAndPeriodUIBuilder_CN, yearNameModified));
        this.overrideDialogFieldMethod(dialogFieldYear, methodStr(FormStringControl, Validate), methodStr(LedgerFiscalYearAndPeriodUIBuilder_CN, validateYearName));
        this.overrideDialogFieldLookup(dialogFieldPeriod, methodStr(LedgerFiscalYearAndPeriodUIBuilder_CN, periodNameLookup));
        this.overrideDialogFieldMethod(dialogFieldPeriod, methodStr(FormStringControl, Modified), methodStr(LedgerFiscalYearAndPeriodUIBuilder_CN, periodNameModified));
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodNameLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds up lookup table.
    /// </summary>
    /// <param name="_formStringControl">
    /// Form string control of current dialog field.
    /// </param>
    /// <returns>
    /// A boolean value indicates whether lookup successfully.
    /// </returns>
    protected boolean periodNameLookup(FormStringControl _formStringControl)
    {
        SysTableLookup          sysTableLookup;
        Query                   lookupQuery;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;
        boolean                 isValid;

        isValid = true;

        if (dialogFieldYear.value())
        {
            sysTableLookup = SysTableLookup::newParameters(
                tableNum(FiscalCalendarPeriod),
                _formStringControl,
                true);
            lookupQuery = new Query();
            sysTableLookup.addLookupfield(fieldNum(FiscalCalendarPeriod, Name));
            sysTableLookup.addLookupfield(fieldNum(FiscalCalendarPeriod, StartDate));
            sysTableLookup.addLookupfield(fieldNum(FiscalCalendarPeriod, EndDate));

            queryBuildDataSource = lookupQuery.addDataSource(tableNum(FiscalCalendarPeriod));

            queryBuildRange     = queryBuildDataSource.addRange(fieldNum(FiscalCalendarPeriod, FiscalCalendarYear));
            fiscalCalendarYear  = FiscalCalendarYear::findByCalendarYearName(
                Ledger::fiscalCalendar(CompanyInfo::current()),
                dialogFieldYear.value());
            queryBuildRange.value(queryValue(fiscalCalendarYear.RecId));

            queryBuildRange = queryBuildDataSource.addRange(fieldNum(FiscalCalendarPeriod, Type));
            queryBuildRange.value(queryValue(FiscalPeriodType::Operating));

            sysTableLookup.parmQuery(lookupQuery);
            sysTableLookup.performFormLookup();
        }
        else
        {
            // Select a value for the Fiscal year first
            isValid = checkFailed(strFmt("@GLS221852", "@SYS54380"));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodNameModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the modified method for the dialogFieldPeriod
    /// </summary>
    /// <param name="_formStringControl">
    /// Form string control of current dialog field.
    /// </param>
    /// <returns>
    /// A boolean value indicates whether modified successfully.
    /// </returns>
    protected boolean periodNameModified(FormStringControl _formStringControl)
    {
        LedgerFiscalYearAndPeriodContract_CN contract;
        boolean isValid;

        contract    = this.dataContractObject() as LedgerFiscalYearAndPeriodContract_CN;
        isValid     = true;

        fiscalCalendarYear = FiscalCalendarYear::findByCalendarYearName(
            Ledger::fiscalCalendar(CompanyInfo::current()),
            dialogFieldYear.value());

        if (!fiscalCalendarYear)
        {
            // Select a value for the Fiscal year first
            isValid = checkFailed(strFmt("@GLS221852", "@SYS54380"));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Binds dialog fields with contract class.
    /// </summary>
    public void postBuild()
    {
        dialogFieldYear     = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerFiscalYearAndPeriodContract_CN, parmPeriodYearName));
        dialogFieldPeriod   = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(LedgerFiscalYearAndPeriodContract_CN, parmPeriodName));
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateYearName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the fiscal calendar year user chooses is valid.
    /// </summary>
    /// <param name="_formStringControl">
    /// The form string control of current dialog field.
    /// </param>
    /// <returns>
    /// True when user inputs for fiscal calendar year is valid, else, false.
    /// </returns>
    public boolean validateYearName(FormStringControl _formStringControl)
    {
        boolean existCheck = true;

        if (dialogFieldYear.value())
        {
            existCheck = FiscalCalendarYear::existByCalendarYearName(
                Ledger::fiscalCalendar(CompanyInfo::current()),
                _formStringControl.valueStr());
        }

        if (!existCheck)
        {
            return checkFailed(
                strFmt(
                    FiscalCalendarYear::txtNotExistByCalendarYear(),
                    FiscalCalendar::find(Ledger::fiscalCalendar(CompanyInfo::current())).CalendarId,
                    _formStringControl.valueStr()));
        }
        else
        {
            return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>yearNameModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Modifies the modified method for the dialogFieldYear
    /// </summary>
    /// <param name="_formStringControl">
    /// Form string control of current dialog field.
    /// </param>
    /// <returns>
    /// True
    /// </returns>
    protected boolean yearNameModified(FormStringControl _formStringControl)
    {
        if (_formStringControl.modified())
        {
            dialogFieldPeriod.value('');
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>