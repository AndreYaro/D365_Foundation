<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSSpaceUtilProcessorBacklog</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WMSSpaceUtilProcessorBacklog</c> class processes the master plan backlog transactions and
/// creates forecast data for the space utilization report, based on the backlog data.
/// </summary>
class WMSSpaceUtilProcessorBacklog extends WMSSpaceUtilProcessor
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>executeSupplySchedule</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes supply forecast to retrieve master plan data.
    /// </summary>
    /// <param name="_itemId">
    /// A <c>itemId</c> value.
    /// </param>
    /// <param name="_inventDim">
    /// An instance of the <c>InventDim</c> table.
    /// </param>
    /// <returns>
    /// An instance of the <c>ReqSupplyDemandScheduleModel</c> class.
    /// </returns>
    protected ReqSupplyDemandScheduleModel executeSupplySchedule(ItemId _itemId, InventDim _inventDim)
    {
        ReqSupplyDemandScheduleModel supplyDemandScheduleModel = this.initSupplySchedule(_itemId, _inventDim);

        supplyDemandScheduleModel.parmProcessOnlyBacklogPeriod(true);

        supplyDemandScheduleModel.calcPeriods();

        return supplyDemandScheduleModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePlanForecast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates load forecast based on input from the <c>ReqSupplyDemandScheduleModel</c> class.
    /// </summary>
    /// <param name="_reportServiceItemProvider">
    /// An instance of <c>WMSReportServiceItemProvider</c> class.
    /// </param>
    /// <param name="_inventSiteId">
    /// A <c>InventSiteId</c> value.
    /// </param>
    /// <param name="_inventLocationId">
    /// A <c>InventLocationId</c> value.
    /// </param>
    /// <param name="_wmsStoreZoneId">
    /// A <c>WMSStoreZoneId</c> value.
    /// </param>
    /// <param name="_reqSupplyDemandScheduleModel">
    /// An instance of <c>ReqSupplyDemandScheduleModel</c> class.
    /// </param>
    protected void updatePlanForecast(WMSReportServiceItemProvider _reportServiceItemProvider, InventSiteId _inventSiteId, InventLocationId _inventLocationId, WMSStoreZoneId _wmsStoreZoneId, ReqSupplyDemandScheduleModel _reqSupplyDemandScheduleModel)
    {
        #ReqSupplyDemandScheduleTypes

        TransDate   periodStartDate;
        TransDate   periodEndDate;
        str         periodDescription;
        Qty         supplyDemandDelta;

        [periodStartDate, periodEndDate, periodDescription] = conPeek(_reqSupplyDemandScheduleModel.calculatedPeriods(), 1);

        supplyDemandDelta = conPeek(conPeek(_reqSupplyDemandScheduleModel.calculatedQuantities(), #SupplyDemandDelta), 1);

        this.insertForecastForPeriod(supplyDemandDelta, WMSSpaceUtilDatePeriods::findNextPeriodStartDate(periodEndDate), true, _reportServiceItemProvider, _inventSiteId, _inventLocationId, _wmsStoreZoneId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
        public static WMSSpaceUtilProcessorBacklog construct()
    {
        return new WMSSpaceUtilProcessorBacklog();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>