<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdjustmentReportDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>InventAdjustmentReportDP</c> class is the Report Data Provider class for the
///    <c>InventAdjTransaction</c> and <c>InventAdjOnhand</c> reports.
/// </summary>
/// <remarks>
///    This class provides methods to fetch the data that is used by the <c>InventAdjTransaction</c> and
///    <c>InventAdjOnhand</c> reports.
/// </remarks>
[
    SRSReportQueryAttribute(queryStr(InventAdjustment)),
    SRSReportParameterAttribute(classStr(InventAdjustmentReportContract))
]
public class InventAdjustmentReportDP extends SRSReportDataProviderBase
{
    InventAdjustmentReportTmp inventAdjustmentReportTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getInventAdjustmentReportTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches the data from the <c>InventAdjustmentReportTmp</c> temporary table.
    /// </summary>
    /// <returns>
    /// The required report data.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(InventAdjustmentReportTmp))
    ]
    public InventAdjustmentReportTmp getInventAdjustmentReportTmp()
    {
        select inventAdjustmentReportTmp;
        return inventAdjustmentReportTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Gets the data from the <c>SRSTmpDataStore</c> table.
    /// </remarks>
    public void processReport()
    {
        InventAdjustmentReportContract contract =  this.parmDataContract() as InventAdjustmentReportContract;

        SRSReportRunPermission permission = new SRSReportRunPermission();
        permission.assert();

        //Temp Table Object that was returned from SRSDataCarrier
        inventAdjustmentReportTmp = SRSTmpTblMarshaller::getTmpTbl(contract.parmTmpTableDataRecId());
        CodeAccessPermission::revertAssert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
