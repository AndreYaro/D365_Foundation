<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailChannelProdAttrMetadataHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>RetailChannelProdAttrMetadataHandler</c> is used to work with Metadata values.
/// </summary>
abstract class RetailChannelProdAttrMetadataHandler
{
    RefRecId metadataId;
    boolean allowEdit;
    Object  callerObject;
    RetailInternalOrgRefRecId internalOrgId;
    TmpRetailProductAttributeMetadata tmpRetailProductAttributeMetadata;
    RetailAttributeMetadata retailAttributeMetadata;

    const int Version1 = 1;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets <c>allowEdit</c> of the metadata controls
    /// </summary>
    /// <param name="_value">
    /// The value to set
    /// </param>
    /// <param name="_version">
    /// The version number of the metadata
    /// </param>
    /// <returns>
    /// The value
    /// </returns>
    public boolean allowEdit(boolean _value = allowEdit, int _version = Version1)
    {
        if (!prmisdefault(_value))
        {
            allowEdit = _value;
        }

        return allowEdit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentMetadataVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current version number
    /// </summary>
    /// <returns>
    /// The current version number
    /// </returns>
    abstract public int currentMetadataVersion()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Generate a serialized string based on default metadata values
    /// </summary>
    /// <param name="_attributeRelationType">
    ///     Attribute relation type (standard product, channel, category)
    /// </param>
    /// <param name="_standardAttributeId">
    ///     Standard attribute Id
    /// </param>
    /// <param name="_channelProductAttributeId">
    ///     Provisioned channel product attribute Id
    /// </param>
    /// <param name="_version">
    ///     The version number of the metadata
    /// </param>
    /// <returns>
    ///     A serialized string
    /// </returns>
    abstract public str defaultMetadata(
        RetailProductAttributeRelationType _attributeRelationType,
        RetailStandardAttributeID _standardAttributeId = RetailStandardAttributeID::None,
        RetailChannelProductAttributeID _channelProductAttributeId = RetailChannelProductAttributeID::None,
        int _version = Version1)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>deserialize</Name>
				<Source><![CDATA[
/// <summary>
    /// Deserialize metadata
    /// </summary>
    /// <param name="_metadata">
    /// Metadata string
    /// </param>
    /// <param name="_version">
    /// The version number of the metadata
    /// </param>
    public void deserialize(str _metadata, int _version)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>draw</Name>
				<Source><![CDATA[
    /// <summary>
    /// Draw metadata controls in a group control
    /// </summary>
    /// <param name="_groupControl">
    /// Form group control to draw on
    /// </param>
    /// <param name="_version">
    /// The version number of the metadata
    /// </param>
    abstract public void draw(FormGroupControl _groupControl, int _version = Version1)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize()
    {
        RetailProdAttribIntOrgMetadataCollapsed prodAttribIntOrgMetadataCollapsed;

        if (internalOrgId && tmpRetailProductAttributeMetadata.Attribute)
        {
            select firstOnly prodAttribIntOrgMetadataCollapsed where prodAttribIntOrgMetadataCollapsed.InternalOrganization == internalOrgId
                && prodAttribIntOrgMetadataCollapsed.Attribute == tmpRetailProductAttributeMetadata.Attribute;

            if (prodAttribIntOrgMetadataCollapsed.RecId > 0)
            {
                // Deserialize metadata if found
                this.deserialize(prodAttribIntOrgMetadataCollapsed.Metadata, prodAttribIntOrgMetadataCollapsed.MetadataVersion);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialses the metadata.
    /// </summary>
    /// <param name="_metadataId">
    /// The value of <c>RefRecId</c> ; optional.
    /// </param>
    public void new(RefRecId _metadataId = 0)
    {
        metadataId = _metadataId;
        this.initialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCallerObject</Name>
				<Source><![CDATA[
    public Object parmCallerObject(Object _object)
    {
        callerObject = _object;
        return callerObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInternalOrg</Name>
				<Source><![CDATA[
    public RetailInternalOrgRefRecId parmInternalOrg(RetailInternalOrgRefRecId _value = 0)
    {
        if (!prmisdefault(_value))
        {
            internalOrgId = _value;
            this.initialize();
        }

        return internalOrgId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMetadataId</Name>
				<Source><![CDATA[
    public RefRecId parmMetadataId(RefRecId _value = 0)
    {
        if (!prmisdefault(_value))
        {
            metadataId = _value;
            this.initialize();
        }

        return metadataId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRetailAttributeMetadata</Name>
				<Source><![CDATA[
    public RetailAttributeMetadata parmRetailAttributeMetadata(RetailAttributeMetadata _attributeMetadata)
    {
        retailAttributeMetadata = _attributeMetadata;
        return retailAttributeMetadata;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTmpRetailProductAttributeMetadata</Name>
				<Source><![CDATA[
    public TmpRetailProductAttributeMetadata parmTmpRetailProductAttributeMetadata(TmpRetailProductAttributeMetadata _tmpRetailProductAttributeMetadata)
    {
        tmpRetailProductAttributeMetadata = _tmpRetailProductAttributeMetadata;
        return tmpRetailProductAttributeMetadata;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateMetadata</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populate product attribute metadata
    /// </summary>
    /// <param name="_channel">
    /// The channel to publish
    /// </param>
    abstract public void populateMetadata(RefRecId _channel)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
/// <summary>
    /// Save metadata
    /// </summary>
    public void save()
    {
        RetailProdAttributeInternalOrgMetadata internalOrgMetadata;
        RetailProdAttribIntOrgMetadataExploded parentMetadata;
        RetailAttributeChannelMetadata metadata;

        ttsBegin;

        if (internalOrgId && tmpRetailProductAttributeMetadata.Attribute)
        {
            // insert
            RetailProdAttributeInternalOrgMetadata::addUpdate(
                    internalOrgId,
                    tmpRetailProductAttributeMetadata.Attribute,
                    tmpRetailProductAttributeMetadata.IsRequired,
                    tmpRetailProductAttributeMetadata.AttributeRelationType,
                    tmpRetailProductAttributeMetadata.Metadata,
                    tmpRetailProductAttributeMetadata.MetadataVersion
                    );

            // update
            internalOrgMetadata = RetailProdAttributeInternalOrgMetadata::findByIds(internalOrgId, tmpRetailProductAttributeMetadata.Attribute, true);
            if (internalOrgMetadata)
            {
                internalOrgMetadata.Metadata = this.serialize(internalOrgMetadata.MetadataVersion);
                internalOrgMetadata.update();
            }

            // delete
            // if parent metadata == my metadata, remove my metadata
            if (RetailInternalOrganization::find(internalOrgid).InheritEnabled)
            {
                parentMetadata  = RetailProdAttribIntOrgMetadataExploded::getParentMetadata(internalOrgId, tmpRetailProductAttributeMetadata.Attribute);

                if ((parentMetadata.Metadata == internalOrgMetadata.Metadata)
                    && (parentMetadata.IsRequired == internalOrgMetadata.IsRequired)
                    && (parentMetadata.MetadataVersion == internalOrgMetadata.MetadataVersion))
                {
                    internalOrgMetadata.delete();
                }
            }
            // update temporary table.
            if (callerObject.name() == formStr(RetailChannelMapAttributes))
            {
                callerObject.updateTmpRetailProductAttributeMetadata(internalOrgId, tmpRetailProductAttributeMetadata.Attribute);
            }
        }
        else if (retailAttributeMetadata.Attribute)
        {
            metadata = this.serialize(retailAttributeMetadata.MetadataVersion);

            retailAttributeMetadata.Metadata = metadata;
            retailAttributeMetadata.update();

            if (callerObject.name() == formStr(EcoResAttribute))
            {
                callerObject.refreshRetailAttributeMetadata();
            }
        }
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>serialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate a serialized string based on metadata values
    /// </summary>
    /// <param name="_version">
    /// The version number of the metadata
    /// </param>
    /// <returns>
    /// Metadata string
    /// </returns>
    abstract protected str serialize(int _version)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>