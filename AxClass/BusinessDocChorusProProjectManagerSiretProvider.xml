<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocChorusProProjectManagerSiretProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides Siret for a project invoice proposal for Chorus Pro integration.
/// </summary>
internal final class BusinessDocChorusProProjectManagerSiretProvider extends BusinessDocChorusProProjectInvoiceSiretProviderBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructFromDataSource</Name>
				<Source><![CDATA[
    public static BusinessDocChorusProProjectManagerSiretProvider constructFromDataSource(
        FormDataSource _projProposalJourDataSource,
        BusinessDocumentIMessageLogger _messageLogger = new BusinessDocumentMessageLoggerToInfolog(true))
    {
        var ret = new BusinessDocChorusProProjectManagerSiretProvider(_messageLogger);
        ret.projProposalJourDataSource = _projProposalJourDataSource;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromTableRecord</Name>
				<Source><![CDATA[
    public static BusinessDocChorusProProjectManagerSiretProvider constructFromTableRecord(
        ProjProposalJour _projProposalJour,
        BusinessDocumentIMessageLogger _messageLogger = new BusinessDocumentMessageLoggerToInfolog(true))
    {
        var ret = new BusinessDocChorusProProjectManagerSiretProvider(_messageLogger);
        ret.projProposalJourTableRec = _projProposalJour;
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomerByFundingSource</Name>
				<Source><![CDATA[
    protected CustTable getCustomerByFundingSource(ProjFundingSource _fundingSource)
    {
        var ret = CustTable::find(_fundingSource.ProjectManager);
        if (ret.RecId == 0)
        {
            messageLogger.addError("@BusinessDocumentSubmissionService:ProjectManagerAccountNotSet");
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>