<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RCashReportJour_Update_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>RCashReportJour_Update_PL</c> class updates the cash report journal with cash transactions that have not yet been
///     reported for that period.
/// </summary>
public class RCashReportJour_Update_PL
{
    #ISOCountryRegionCodes
    RCashReportJour_PL cashReportJour;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmReportJour</Name>
				<Source><![CDATA[
    public RCashReportJour_PL parmReportJour(RCashReportJour_PL _cashReportJour = cashReportJour)
    {
        cashReportJour = _cashReportJour;
        return cashReportJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        RCashTrans cashTrans;

        RCashReportJour_Create_PL::setCashTransReportNum(cashReportJour, cashTrans);

        if (this.isDenominationFeatureEnabled ())
        {
            ttsBegin;
            cashReportJour.selectForUpdate(true);
            cashReportJour.ClosingBalance_HU = RCashReportJour_Create_PL::calcClosingBalance_HU(cashReportJour.AccountNum, cashTrans.CurrencyCode, cashReportJour.TransDate);
            cashReportJour.update();
            ttsCommit;
        }

        info("@GLS101448");
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RCashReportJour_Update_PL reportJourUpdate = new RCashReportJour_Update_PL();
        RCashReportJour_PL        reportJour;
        HuDenominationSummary     denominationSummary;

        if (_args && _args.record() && _args.dataset() == tablenum(RCashReportJour_PL))
        {
            reportJour = _args.record();
            reportJourUpdate.parmReportJour(reportJour);
        }
        else
        {
            throw error(strfmt("@GLS105568", "@GLS109938"));
        }

        if (reportJourUpdate.isDenominationFeatureEnabled ())
        {
            select firstOnly ReportNum from denominationSummary
                where denominationSummary.ReportNum == reportJour.ReportNum;
            if (denominationSummary.ReportNum)
            {
                throw error("@GLS223782");
            }
        }

        if (RCashReportJour_Create_PL::checkCashTransTobeReported(reportJour.AccountNum, reportJour.CurrencyCode, reportJour.TransDate))
        {
            reportJourUpdate.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDenominationFeatureEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the denomination is enabled or not.
    /// </summary>
    /// <returns>
    /// true if denomination is enabled; otherwise, false.
    /// </returns>
    protected boolean isDenominationFeatureEnabled ()
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion([#isoHU]);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>