<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rCashBookDispatcher</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RCashBookDispatcher</c> class to provide the menu item that will be used for Russia, Latvian and Lithuanian cash book reports.
/// </summary>
public class rCashBookDispatcher extends ReportDispatcher_W
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getMenuItemName</Name>
				<Source><![CDATA[
    protected menuItemName getMenuItemName()
    {
        return menuitemoutputstr(RCashBook_RU);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMenuItemType</Name>
				<Source><![CDATA[
    protected MenuItemType getMenuItemType()
    {
        return MenuItemType::Output;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public static RCashBookDispatcher construct()
    {
        RCashBookDispatcher                  dispatcher;
        LogisticsAddressCountryRegionISOCode isoCode = SysCountryRegionCode::countryInfo();

        switch (isoCode)
        {
            case #isoRU:
                dispatcher = new RCashBookDispatcher_RU();
                break;
            // <GEEU>
            case #isoLT:
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceLT00017, funcName());
                dispatcher = new CashBookDispatcher();
                break;

            case #isoLV:
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceLV00012, funcName());
                dispatcher = new CashBookDispatcher();
                break;
            // </GEEU>
            default:
                dispatcher = new RCashBookDispatcher();
                break;
        }

        return dispatcher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RCashBookDispatcher dispatcher = RCashBookDispatcher::construct();

        dispatcher.parmArgs(_args);
        dispatcher.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>