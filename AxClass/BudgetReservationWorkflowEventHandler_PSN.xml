<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetReservationWorkflowEventHandler_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetReservationWorkflowEventHandler_PSN</c> class is used to handle workflow-level events raised in the course of the
/// general budget reservation workflow.
/// </summary>
public class BudgetReservationWorkflowEventHandler_PSN implements
    WorkflowStartedEventHandler,
    WorkflowCanceledEventHandler,
    WorkflowCompletedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status fields of the budget reservation header when the workflow is recalled.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is recalled.
    /// </remarks>
    public void canceled(WorkflowEventArgs _workflowEventArgs)
    {
        BudgetReservation_PSN       budgetReservation;
        BudgetReservationHeader_PSN budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        if (budgetReservationHeader)
        {
            budgetReservation = BudgetReservation_PSN::newFromBudgetReservationHeader_PSN(budgetReservationHeader);
    
            budgetReservation.updateDocumentStatusFields(BudgetReservationDocumentAction_PSN::WorkflowRecall);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status fields of the budget reservation header when the workflow is completed.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is completed.
    /// </remarks>
    public void completed(WorkflowEventArgs _workflowEventArgs)
    {
        BudgetReservation_PSN       budgetReservation;
        BudgetReservationHeader_PSN budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        if (budgetReservationHeader)
        {
            budgetReservation = BudgetReservation_PSN::newFromBudgetReservationHeader_PSN(budgetReservationHeader);
    
            budgetReservation.updateDocumentStatusFields(BudgetReservationDocumentAction_PSN::WorkflowComplete);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the status fields of the budget reservation header when the workflow is started.
    /// </summary>
    /// <param name="_workflowEventArgs">
    /// An instance of the <c>WorkflowEventArgs</c> class.
    /// </param>
    /// <remarks>
    /// This method is called from the workflow framework when the workflow is started.
    /// </remarks>
    public void started(WorkflowEventArgs _workflowEventArgs)
    {
        BudgetReservation_PSN       budgetReservation;
        BudgetReservationHeader_PSN budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        budgetReservationHeader = BudgetReservationHeader_PSN::find(_workflowEventArgs.parmWorkflowContext().parmRecId());
    
        if (budgetReservationHeader)
        {
            budgetReservation = BudgetReservation_PSN::newFromBudgetReservationHeader_PSN(budgetReservationHeader);
    
            budgetReservation.updateDocumentStatusFields(BudgetReservationDocumentAction_PSN::WorkflowSubmit);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>