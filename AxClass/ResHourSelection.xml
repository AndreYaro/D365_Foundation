<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResHourSelection</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResHourSelection
{
    ActivityRecId activity;
    utcdatetime activityStart;
    utcdatetime activityEnd;
    real allocation;
    ProjResourceHoursDistributeType distributionType;
    boolean showActivitySelection;
    List reservationScheduleList;
    ResBookingType reserveProcessorType;
    ResCommitType commitType;
    AvailabilityView avControl;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAvControl</Name>
				<Source><![CDATA[
    public AvailabilityView parmAvControl(AvailabilityView _avControl = avControl)
    {
        avControl = _avControl;
        return avControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Activity</Name>
				<Source><![CDATA[
    public ActivityRecId Activity(ActivityRecId _activity = activity)
    {
        activity = _activity;
        return activity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivityStart</Name>
				<Source><![CDATA[
    public utcdatetime ActivityStart(utcdatetime _activityStart = activityStart)
    {
        activityStart = _activityStart;
        return activityStart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivityEnd</Name>
				<Source><![CDATA[
    public utcdatetime ActivityEnd(utcdatetime _activityEnd = activityEnd)
    {
        activityEnd = _activityEnd;
        return activityEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Allocation</Name>
				<Source><![CDATA[
    public real Allocation(real _allocation = allocation)
    {
        allocation = _allocation;
        return allocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReserveProcessorType</Name>
				<Source><![CDATA[
    public ResBookingType parmReserveProcessorType(ResBookingType _reserveProcessorType = reserveProcessorType)
    {
        reserveProcessorType = _reserveProcessorType;
        return reserveProcessorType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommitType</Name>
				<Source><![CDATA[
    public ResCommitType parmCommitType(ResCommitType _commitType = commitType)
    {
        commitType = _commitType;
        return commitType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservationScheduleList</Name>
				<Source><![CDATA[
    public List parmReservationScheduleList(
        List _reservationScheduleList = reservationScheduleList)
    {
        reservationScheduleList = _reservationScheduleList;
        return reservationScheduleList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ShowActivitySelection</Name>
				<Source><![CDATA[
    public boolean ShowActivitySelection(boolean _showActivitySelection = showActivitySelection)
    {
        showActivitySelection = _showActivitySelection;
        return showActivitySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Show <c>ProjResourceHoursBookingDialog</c> form if availability view control chart items list is not empty.
    /// </summary>
    /// <returns>true if form has been sucessfully launched; otherwise false.</returns>
    public boolean showForm()
    {
        boolean succeed = false;

        if (!this.parmAvControl().selections().getChartItems().empty())
        {
            Args formArgs = new Args();
            formArgs.caller(this);

            new MenuFunction(menuitemdisplaystr(ProjResourceHoursBookingDialog),
                MenuItemType::Display).run(formArgs);
            succeed = true;
        }

        return succeed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjActivitySelection_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ProjResourceCapacityBookingDialog form
    /// </summary>
    [FormEventHandler(formstr(ProjResourceHoursBookingDialog), FormEventType::Closing)]
    public static void ProjActivitySelection_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        if (formRun.closedOk())
        {
            ResHourSelection control = formRun.HourSelection();
            control.selectionsReadyV2(control.Activity(), control.Allocation(), control.parmReserveProcessorType(), control.parmReservationScheduleList());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionsReady</Name>
				<Source><![CDATA[
    [SysObsoleteAttribute('Please use selectionReadyV2() method as replacement.', true, 23\01\2018)]
    delegate void selectionsReady(ActivityRecId _activity, real _allocation, ProjResourceHoursDistributeType _distributionType)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionsReadyV2</Name>
				<Source><![CDATA[
    delegate void selectionsReadyV2(ActivityRecId _activity, real _allocation, ResBookingType _reserveProcessorType, List _reservationScheduleList)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        Timezone tz = DateTimeUtil::getUserPreferredTimeZone();
        activityStart = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(tz), 0);
        activityEnd = DateTimeUtil::maxValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ResHourSelection construct()
    {
        ResHourSelection selector = new ResHourSelection();
        return selector;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>