<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportContract_Base_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
/// <summary>
/// The base data contract class for the services that run the Standard Audit File reports.
/// </summary>
[
    DataContract,
    SysOperationGroup('Period', "@SYS40", '1'),
    SysOperationGroup('ExportAll', "@StandardAuditFile_SAFT_W:ExportAll", '2'),
    SysOperationGroup('Export', "@SYS26056", '3'),
    SysOperationGroup('ContactPerson', "@SYS325541", '4'),
    SysOperationGroup('TaxAuthority', "@SYS21937", '5'),
    SysOperationGroup('SubmittingPurpose', "@StandardAuditFile_SAFT_W:SubmittingPurpose", '6'),
    SysOperationGroup('Warehouse', "@SYS6437", '7'),
    SysOperationGroup('ReportingParameters', "@StandardAuditFile_SAFT_W:ReportingParameters", '8')
]
public class SAFTReportContract_Base_W extends ERFormatMappingRunBaseContract implements SysOperationValidatable
{
    private FromDate dateFrom;
    private ToDate dateTo;
    private RefRecId electronicMessageRecId;
    private ERIFileDestination erFileDestination;

    private NoYes
        exportAllCustomers,
        exportAllSuppliers,
        exportAllTaxTable,
        exportAllUOMTable,
        exportAllProducts,
        exportAllAnalysisTypeTable,
        exportAllGeneralLedgerAccounts,
        exportAllMovementTypeTable,
        exportAllPhysicalStock,
        exportAllAssets,
        exportGeneralLedgerEntries,
        exportSalesInvoices,
        exportPurchaseInvoices,
        exportPayments,
        exportMovementOfGoods,
        exportAssetTransactions,
        reportTaxInfoInSalesTaxCodeCurrency;

    private HcmPersonnelNumberId contactPersonId;
    private TaxAuthority taxAuthority;
    private SubmittingPurpose submittingPurpose;
    private SAFTSubmittingVersionVATSalesPurch_PL submittingVersion;
    private InventLocationId inventLocationId;
    protected Query query;
    private NoYes creditNote;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmTaxAuthority</Name>
				<Source><![CDATA[
    [
        DataMember('TaxAuthority'),
        SysOperationGroupMember('TaxAuthority'),
        SysOperationLabel(literalStr("@SYS82351")),
        SysOperationDisplayOrder('1')
    ]
    public TaxAuthority parmTaxAuthority(TaxAuthority _taxAuthority = taxAuthority)
    {
        taxAuthority = _taxAuthority;
        return taxAuthority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateFrom</Name>
				<Source><![CDATA[
    [
        DataMember('FromDate'),
        SysOperationGroupMember('Period'),
        SysOperationDisplayOrder('1')
    ]
    public FromDate parmDateFrom(FromDate _dateFrom = dateFrom)
    {
        dateFrom = _dateFrom;
        return dateFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTo</Name>
				<Source><![CDATA[
    [
        DataMember('ToDate'),
        SysOperationGroupMember('Period'),
        SysOperationDisplayOrder('2')
    ]
    public ToDate parmDateTo(ToDate _dateTo = dateTo)
    {
        dateTo = _dateTo; 
        return dateTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmittingPurpose</Name>
				<Source><![CDATA[
    [
        DataMember('Purpose'),
        SysOperationGroupMember('SubmittingPurpose'),
        SysOperationDisplayOrder('1')
    ]
    public SubmittingPurpose parmSubmittingPurpose(SubmittingPurpose _submittingPurpose = submittingPurpose)
    {
        submittingPurpose = _submittingPurpose;
        return submittingPurpose;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubmittingVersion</Name>
				<Source><![CDATA[
    [
        DataMember('SubmittingVersion'),
        SysOperationGroupMember('SubmittingPurpose'),
        SysOperationDisplayOrder('2')
    ]
    public SAFTSubmittingVersionVATSalesPurch_PL parmSubmittingVersion(SAFTSubmittingVersionVATSalesPurch_PL _submittingVersion = submittingVersion)
    {
        submittingVersion = _submittingVersion;
        return submittingVersion;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    [
        DataMember('Warehouse'),
        SysOperationGroupMember('Warehouse'),
        SysOperationDisplayOrder('1')
    ]
    public InventLocationId parmInventLocationId(InventLocationId _inventLocationId = inventLocationId)
    {
        inventLocationId = _inventLocationId;
        return inventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditNote</Name>
				<Source><![CDATA[
    [
        DataMember('CreditNote'),
        SysOperationGroupMember('CreditNote'),
        SysOperationLabel(literalStr("@SYS593")),
        SysOperationHelpText(literalStr("@StandardAuditFile_SAFT_W:CreditNoteAsCorrectionDescription")),
        SysOperationDisplayOrder('1')
    ]
    public NoYes parmCreditNote(NoYes _creditNote = creditNote)
    {
        creditNote = _creditNote;
        return creditNote;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPersonId</Name>
				<Source><![CDATA[
    [
        DataMember('ContactPerson'),
        SysOperationGroupMember('ContactPerson'),
        SysOperationDisplayOrder('1')
    ]
    public HcmPersonnelNumberId parmContactPersonId(HcmPersonnelNumberId _contactPersonId = contactPersonId)
    {
        contactPersonId = _contactPersonId;
        return contactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllGeneralLedgerAccounts</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllGeneralLedgerAccounts'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS8344")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('1')
    ]
    public NoYes parmExportAllGeneralLedgerAccounts(NoYes _exportAllGeneralLedgerAccounts = exportAllGeneralLedgerAccounts)
    {
        exportAllGeneralLedgerAccounts = _exportAllGeneralLedgerAccounts;
        return exportAllGeneralLedgerAccounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllCustomers</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllCustomers'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS19920")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('2')
    ]
    public NoYes parmExportAllCustomers(NoYes _exportAllCustomers = exportAllCustomers)
    {
        exportAllCustomers = _exportAllCustomers;
        return exportAllCustomers;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllSuppliers</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllSuppliers'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS9449")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('3')
    ]
    public NoYes parmExportAllSuppliers(NoYes _exportAllSuppliers = exportAllSuppliers)
    {
        exportAllSuppliers = _exportAllSuppliers;
        return exportAllSuppliers;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllTaxTable</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllTaxTable'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@GLS60790")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('4')
    ]
    public NoYes parmExportAllTaxTable(NoYes _exportAllTaxTable = exportAllTaxTable)
    {
        exportAllTaxTable = _exportAllTaxTable;
        return exportAllTaxTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllUOMTable</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllUOMTable'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS7867")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('5')
    ]
    public NoYes parmExportAllUOMTable(NoYes _exportAllUOMTable = exportAllUOMTable)
    {
        exportAllUOMTable = _exportAllUOMTable;
        return exportAllUOMTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllAnalysisTypeTable</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllAnalysisTypeTable'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS138491")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('6')
    ]
    public NoYes parmExportAllAnalysisTypeTable(NoYes _exportAllAnalysisTypeTable = exportAllAnalysisTypeTable)
    {
        exportAllAnalysisTypeTable = _exportAllAnalysisTypeTable;
        return exportAllAnalysisTypeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllMovementTypeTable</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllMovementTypeTable'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@StandardAuditFile_SAFT_W:MovementTypes")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('8')
    ]
    public NoYes parmExportAllMovementTypeTable(NoYes _exportAllMovementTypeTable = exportAllMovementTypeTable)
    {
        exportAllMovementTypeTable = _exportAllMovementTypeTable;
        return exportAllMovementTypeTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllProducts</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllProducts'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS103123")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('9')
    ]
    public NoYes parmExportAllProducts(NoYes _exportAllProducts = exportAllProducts)
    {
        exportAllProducts = _exportAllProducts;
        return exportAllProducts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllPhysicalStock</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllPhysicalStock'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@StandardAuditFile_SAFT_W:PhysicalStock")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('10')
    ]
    public NoYes parmExportAllPhysicalStock(NoYes _exportAllPhysicalStock = exportAllPhysicalStock)
    {
        exportAllPhysicalStock = _exportAllPhysicalStock;
        return exportAllPhysicalStock;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAllAssets</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAllAssets'),
        SysOperationGroupMember('ExportAll'),
        SysOperationLabel(literalStr("@SYS115803")),
        SysOperationHelpText(literalStr("@GLS113522")),
        SysOperationDisplayOrder('11')
    ]
    public NoYes parmExportAllAssets(NoYes _exportAllAssets = exportAllAssets)
    {
        exportAllAssets = _exportAllAssets;
        return exportAllAssets;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportGeneralLedgerEntries</Name>
				<Source><![CDATA[
    [
        DataMember('ExportGeneralLedgerEntries'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS136074")),
        SysOperationDisplayOrder('1')
    ]
    public NoYes parmExportGeneralLedgerEntries(NoYes _exportGeneralLedgerEntries = exportGeneralLedgerEntries)
    {
        exportGeneralLedgerEntries = _exportGeneralLedgerEntries;
        return exportGeneralLedgerEntries;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportSalesInvoices</Name>
				<Source><![CDATA[
    [
        DataMember('ExportSalesInvoicese'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS333910")),
        SysOperationDisplayOrder('2')
    ]
    public NoYes parmExportSalesInvoices(NoYes _exportSalesInvoices = exportSalesInvoices)
    {
        exportSalesInvoices = _exportSalesInvoices;
        return exportSalesInvoices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportPurchaseInvoices</Name>
				<Source><![CDATA[
    [
        DataMember('ExportPurchaseInvoices'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS108835")),
        SysOperationDisplayOrder('3')
    ]
    public NoYes parmExportPurchaseInvoices(NoYes _exportPurchaseInvoices = exportPurchaseInvoices)
    {
        exportPurchaseInvoices = _exportPurchaseInvoices;
        return exportPurchaseInvoices;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportPayments</Name>
				<Source><![CDATA[
    [
        DataMember('ExportPayments'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS58091")),
        SysOperationDisplayOrder('4')
    ]
    public NoYes parmExportPayments(NoYes _exportPayments = exportPayments)
    {
        exportPayments = _exportPayments;
        return exportPayments;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportMovementOfGoods</Name>
				<Source><![CDATA[
    [
        DataMember('ExportMovementOfGoods'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS3219")),
        SysOperationDisplayOrder('5')
    ]
    public NoYes parmExportMovementOfGoods(NoYes _exportMovementOfGoods = exportMovementOfGoods)
    {
        exportMovementOfGoods = _exportMovementOfGoods;
        return exportMovementOfGoods;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportAssetTransactions</Name>
				<Source><![CDATA[
    [
        DataMember('ExportAssetTransactions'),
        SysOperationGroupMember('Export'),
        SysOperationLabel(literalStr("@SYS67422")),
        SysOperationDisplayOrder('6')
    ]
    public NoYes parmExportAssetTransactions(NoYes _exportAssetTransactions = exportAssetTransactions)
    {
        exportAssetTransactions = _exportAssetTransactions;
        return exportAssetTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportTaxInfoInSalesTaxCodeCurrency</Name>
				<Source><![CDATA[
    [
        DataMember('ReportTaxInfoInSalesTaxCodeCurrency'),
        SysOperationGroupMember('ReportingParameters'),
        SysOperationLabel(literalStr("@StandardAuditFile_SAFT_W:ReportTaxInfoInSalesTaxCodeCurrency")),
        SysOperationHelpText(literalStr("@StandardAuditFile_SAFT_W:ReportTaxInfoInSalesTaxCodeCurrencyHelpText")),
        SysOperationDisplayOrder('1')
    ]
    public NoYes parmReportTaxInfoInSalesTaxCodeCurrency(NoYes _reportTaxInfoInSalesTaxCodeCurrency = reportTaxInfoInSalesTaxCodeCurrency)
    {
        reportTaxInfoInSalesTaxCodeCurrency = _reportTaxInfoInSalesTaxCodeCurrency;
        return reportTaxInfoInSalesTaxCodeCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets a query editable by the user.
    /// </summary>
    /// <param name = "_query">
    /// The query to be associated with the report.
    /// </param>
    /// <returns>
    /// The query assosiated with the report.
    /// </returns>
    [
        DataMember
    ]
    public Query parmQuery(Query _query = query)
    {
        query = _query;
        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmElectronicMessageRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the RecId of the electronic message for which the report was called.
    /// </summary>
    /// <param name = "_electronicMessageRecId">
    /// The RecId of the electronic message to be set.
    /// </param>
    /// <returns>
    /// The RecId of the electronic message for which the report was called.
    /// </returns>
    /// <remark>
    /// Serves as an indicator that report generation was called from the electronic messaging framework.
    /// </remark>
    public RefRecId parmElectronicMessageRecId(RefRecId _electronicMessageRecId = electronicMessageRecId)
    {
        electronicMessageRecId = _electronicMessageRecId;
        return electronicMessageRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmERFileDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the attachment file destination.
    /// </summary>
    /// <param name = "_erFileDestination">
    /// An instance of <c>ERIFileDestination</c> implementation that stores content as attachment of a record.</returns>
    /// </param>
    /// <returns>
    /// An instance of the <c>ERFileDestination</c> class.
    /// </returns>
    public ERIFileDestination parmERFileDestination(ERIFileDestination _erFileDestination = erFileDestination)
    {
        erFileDestination = _erFileDestination;
        return erFileDestination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an initial query. The method is called from the controller class.
    /// </summary>
    public void initQuery()
    {
        query = this.initDefaultQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a report-specific data sources and default ranges.
    /// </summary>
    /// <returns>
    /// The default query.
    /// </returns>
    protected Query initDefaultQuery()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the report parameters.
    /// </summary>
    /// <returns>
    /// True if no errors; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFileDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the file destination to be used while generating report via ER framework.
    /// </summary>
    /// <returns>The file destination to be used while generating report via ER framework.</returns>
    public ERIFileDestination getFileDestination()
    {
        return erFileDestination ? erFileDestination : super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>