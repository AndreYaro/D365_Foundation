<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerOpenTransactionsDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerOpenTransactionsDP</c> class retrieves records for the
/// <c>LedgerOpenTransactions</c> report.
/// </summary>
[SRSReportQueryAttribute(querystr(LedgerOpenTransactions))]
public class LedgerOpenTransactionsDP extends SRSReportDataProviderPreProcessTempDB
{
    LedgerOpenTransactionsTmp ledgerOpenTransactionsTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLedgerOpenTransactionsTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the data for the report from the temporary table.
    /// </summary>
    /// <returns>
    /// The <c>LedgerOpenTransactionsTmp</c> temporary table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tablestr(LedgerOpenTransactionsTmp))
    ]
    public LedgerOpenTransactionsTmp getLedgerOpenTransactionsTmp()
    {
        select ledgerOpenTransactionsTmp;
        return ledgerOpenTransactionsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the records based on the specified parameters.
    /// </summary>
    public void processReport()
    {
        AssetTable                          assetTable;
        BankAccountTable                    bankAccountTable;
        CustTable                           custTable;
        DimensionAttributeValueCombination  dimAttrValueCombo;
        DirPartyTable                       dirPartyTable;
        EmployeeTable_RU                    employeeTable_RU;
        HcmEmployment                       hcmEmployment;
        HcmWorker                           hcmWorker;
        LedgerJournalTable                  ledgerJournalTable;
        LedgerJournalTrans                  ledgerJournalTrans;
        MainAccount                         mainAccount;
        MainAccountTranslation              mainAccountTranslation;
        ProjTable                           projTable;
        RAssetTable                         rAssetTable;
        RCashTable                          rCashTable;
        RDeferralsTable                     rDeferralsTable;
        VendTable                           vendTable;

        boolean                             hasModifiedRanges;
        RecordInsertList                    recordInsertList;
        LanguageId                          currentLanguage;
        Query                               query;
        QueryRun                            queryRun;

        query =this.parmQuery();
        queryRun = new QueryRun(query);

        currentLanguage= DimensionCache::currentDimensionValueLanguageId();
        hasModifiedRanges = SysQuery::queryHasRangesOrFilters(query, true);

        if (hasModifiedRanges)
        {
            recordInsertList = new RecordInsertList(tableNum(LedgerOpenTransactionsTmp), true, true, true, false, false, ledgerOpenTransactionsTmp);

            while (queryRun.next())
            {
                ledgerOpenTransactionsTmp.clear();

                ledgerjournalTable = queryRun.get(tableNum(LedgerJournalTable)) as LedgerJournalTable;
                ledgerJournalTrans = queryRun.get(tableNum(ledgerJournalTrans)) as LedgerJournalTrans;

                ledgerOpenTransactionsTmp.JournalNum = ledgerJournalTable.JournalNum;
                ledgerOpenTransactionsTmp.JournalType = ledgerJournalTable.JournalType;
                ledgerOpenTransactionsTmp.Name = ledgerJournalTable.Name;
                ledgerOpenTransactionsTmp.Posted = ledgerJournalTable.Posted;
                ledgerOpenTransactionsTmp.CurrentOperationsTax = ledgerJournalTable.CurrentOperationsTax;
                ledgerOpenTransactionsTmp.CurrencyCode = ledgerJournalTrans.CurrencyCode;
                ledgerOpenTransactionsTmp.TransDate = ledgerJournalTrans.TransDate;
                ledgerOpenTransactionsTmp.Txt = ledgerJournalTrans.Txt;
                ledgerOpenTransactionsTmp.Voucher = ledgerJournalTrans.Voucher;
                ledgerOpenTransactionsTmp.OffsetTxt = ledgerJournalTrans.OffsetTxt;
                ledgerOpenTransactionsTmp.AmountCurCredit = ledgerJournalTrans.AmountCurCredit;
                ledgerOpenTransactionsTmp.AmountCurDebit = ledgerJournalTrans.AmountCurDebit;
                ledgerOpenTransactionsTmp.AccountType = ledgerJournalTrans.AccountType;
                ledgerOpenTransactionsTmp.OffsetAccountType = ledgerJournalTrans.OffsetAccountType;
                ledgerOpenTransactionsTmp.LedgerDimension = ledgerJournalTrans.LedgerDimension;
                ledgerOpenTransactionsTmp.OffsetLedgerDimension = ledgerJournalTrans.OffsetLedgerDimension;
                recordInsertList.add(ledgerOpenTransactionsTmp);
            }
            recordInsertList.insertDatabase();
        }
        else
        {
            insert_recordset ledgerOpenTransactionsTmp
            (
                JournalNum,
                JournalType,
                Name,
                Posted,
                CurrentOperationsTax,
                CurrencyCode,
                TransDate,
                Txt,
                Voucher,
                OffsetTxt,
                AmountCurCredit,
                AmountCurDebit,
                AccountType,
                OffsetAccountType,
                LedgerDimension,
                OffsetLedgerDimension
            )
            select
                JournalNum,
                journalType,
                Name,
                Posted,
                CurrentOperationsTax
            from ledgerJournalTable
            join
                CurrencyCode,
                TransDate,
                Txt,
                Voucher,
                OffsetTxt,
                AmountCurCredit,
                AmountCurDebit,
                AccountType,
                OffsetAccountType,
                LedgerDimension,
                OffsetLedgerDimension
            from ledgerJournalTrans
                where ledgerJournalTrans.JournalNum == ledgerJournalTable.JournalNum
                    && ledgerJournalTable.Posted == NoYes::No;
        }

        //main account
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = mainAccount.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Ledger
        join MainAccount, DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name, MainAccountId from mainAccount
            where mainAccount.RecId == dimAttrValueCombo.MainAccount;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = mainAccount.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
            where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Ledger
        join MainAccount, DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name, MainAccountId from mainAccount
            where mainAccount.RecId == dimAttrValueCombo.MainAccount;

        if (currentLanguage != '')
        {
            update_recordSet ledgerOpenTransactionsTmp
                setting AccountName = mainAccountTranslation.Name
            join dimAttrValueCombo
                where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
            join Name from mainAccountTranslation
                where dimAttrValueCombo.MainAccount == mainAccountTranslation.MainAccount
                    && mainAccountTranslation.LanguageId == currentLanguage;

            update_recordSet ledgerOpenTransactionsTmp
                setting OffsetAccountName = mainAccountTranslation.Name
            join dimAttrValueCombo
                where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
            join Name from mainAccountTranslation
                where dimAttrValueCombo.MainAccount == mainAccountTranslation.MainAccount
                    && mainAccountTranslation.LanguageId == currentLanguage;
        }

        //customer accounts.
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = dirPartyTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Cust
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Party from custTable
            where custTable.AccountNum == dimAttrValueCombo.DisplayValue
        join Name from dirPartyTable
            where dirPartyTable.RecId == custTable.Party;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = dirPartyTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Cust
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Party from custTable
            where custTable.AccountNum == dimAttrValueCombo.DisplayValue
        join Name from dirPartyTable
            where dirPartyTable.RecId == custTable.Party;

        //vendor accounts.
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = dirPartyTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Vend
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Party from vendTable
            where vendTable.AccountNum == dimAttrValueCombo.DisplayValue
        join Name from dirPartyTable
            where dirPartyTable.RecId == vendTable.Party;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = dirPartyTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Vend
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Party from vendTable
            where vendTable.AccountNum == dimAttrValueCombo.DisplayValue
        join Name from dirPartyTable
            where dirPartyTable.RecId == vendTable.Party;

        //bank accounts.
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = bankAccountTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Bank
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name from bankAccountTable
            where bankAccountTable.AccountID == dimAttrValueCombo.DisplayValue;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = bankAccountTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Bank
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name from bankAccountTable
            where bankAccountTable.AccountID == dimAttrValueCombo.DisplayValue;

        //project accounts.
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = projTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Project
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name from projTable
            where projTable.ProjId == dimAttrValueCombo.DisplayValue;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = projTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Project
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name from projTable
            where projTable.ProjId == dimAttrValueCombo.DisplayValue;

        //fixed asset accounts.
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = assetTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::FixedAssets
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name from assetTable
            where assetTable.AssetId == dimAttrValueCombo.DisplayValue;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = assetTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::FixedAssets
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name from assetTable
            where assetTable.AssetId == dimAttrValueCombo.DisplayValue;

        // <GEERU>
        //RU fixed asset accounts
        update_recordSet ledgerOpenTransactionsTmp setting
              AccountName = rAssetTable.Name,
              LedgerAccount = dimAttrValueCombo.DisplayValue
          where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::FixedAssets_RU
          join DisplayValue from dimAttrValueCombo
              where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
          join Name from rAssetTable
              where rAssetTable.AccountNum == dimAttrValueCombo.DisplayValue;
  
        update_recordSet ledgerOpenTransactionsTmp setting
              OffsetAccountName = rAssetTable.Name,
              OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
          where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::FixedAssets_RU
          join DisplayValue from dimAttrValueCombo
              where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
          join Name from rAssetTable
              where rAssetTable.AccountNum == dimAttrValueCombo.DisplayValue;
        
        //RU employee accounts
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = dirPartyTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::Employee_RU
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join HcmEmployment, EmployeeId from employeeTable_RU
            where employeeTable_RU.EmployeeId == dimAttrValueCombo.DisplayValue
        join Worker from hcmEmployment
            where employeeTable_RU.HcmEmployment == hcmEmployment.RecId
        join Person from hcmWorker
            where hcmEmployment.Worker == hcmWorker.RecId
        join Name from dirPartyTable
            where hcmWorker.Person == dirPartyTable.RecId;

        update_recordSet ledgerOpenTransactionsTmp setting
          OffsetAccountName = dirPartyTable.Name,
          OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::Employee_RU
        join DisplayValue from dimAttrValueCombo
        where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join HcmEmployment, EmployeeId from employeeTable_RU
            where employeeTable_RU.EmployeeId == dimAttrValueCombo.DisplayValue
        join Worker from hcmEmployment
            where hcmEmployment.RecId == employeeTable_RU.HcmEmployment
        join Person from hcmWorker
            where hcmEmployment.Worker == hcmWorker.RecId
        join Name from dirPartyTable
            where hcmWorker.Person == dirPartyTable.RecId;

        //RU deferral accounts
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = rDeferralsTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::RDeferrals
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name from rDeferralsTable
            where rDeferralsTable.DeferralsId == dimAttrValueCombo.DisplayValue;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = rDeferralsTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::RDeferrals
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name from rDeferralsTable
            where rDeferralsTable.DeferralsId == dimAttrValueCombo.DisplayValue;

        //RU cash accounts
        update_recordSet ledgerOpenTransactionsTmp setting
            AccountName = rCashTable.Name,
            LedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.AccountType == LedgerJournalACType::RCash
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.LedgerDimension
        join Name from rCashTable
            where rCashTable.AccountNum == dimAttrValueCombo.DisplayValue;

        update_recordSet ledgerOpenTransactionsTmp setting
            OffsetAccountName = rCashTable.Name,
            OffsetLedgerAccount = dimAttrValueCombo.DisplayValue
        where ledgerOpenTransactionsTmp.OffsetAccountType == LedgerJournalACType::RCash
        join DisplayValue from dimAttrValueCombo
            where dimAttrValueCombo.RecId == ledgerOpenTransactionsTmp.OffsetLedgerDimension
        join Name from rCashTable
            where rCashTable.AccountNum == dimAttrValueCombo.DisplayValue;
        // </GEERU>
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>