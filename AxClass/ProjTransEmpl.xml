<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTransEmpl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTransEmpl extends ProjTrans
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>categoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the category ID for a transaction.
    /// </summary>
    /// <returns>
    /// The category ID for the transaction.
    /// </returns>
    ProjCategoryId categoryId()
    {
        ProjCategoryId ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>costPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the cost price for a transaction.
    /// </summary>
    /// <returns>
    /// The cost price for this transaction.
    /// </returns>
    CostPrice costPrice()
    {
        CostPrice ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currencyIdSales</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the currency code for the sales amounts reported by a transaction.
    /// </summary>
    /// <returns>
    /// The currency code for the sales amounts that are reported by the transaction.
    /// </returns>
    ProjSalesCurrencyCode currencyIdSales()
    {
        CurrencyCode ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultdimension</Name>
				<Source><![CDATA[
    DimensionDefault defaultdimension()
    {
        DimensionDefault ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the transaction is invoiceable.
    /// </summary>
    /// <returns>
    /// true if the transaction is invoiceable; otherwise, false.
    /// </returns>
    public boolean invoiceable()
    {
        return ProjLineProperty::find(this.linePropertyId()).ToBeInvoiced;
    }

]]></Source>
			</Method>
			<Method>
				<Name>linePropertyId</Name>
				<Source><![CDATA[
    ProjLinePropertyId linePropertyId()
    {
        ProjLinePropertyId  ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projEmplItemId</Name>
				<Source><![CDATA[
    ProjEmplItemId projEmplItemId()
    {
        return this.itemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>projId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the ID of the project that is associated with this transaction.
    /// </summary>
    /// <returns>
    /// The ID of the project that is associated with this transaction.
    /// </returns>
    ProjId projId()
    {
        ProjId ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>psaIndirectAmount</Name>
				<Source><![CDATA[
    Amount psaIndirectAmount()
    {
        PSAIndirectComponentTrans   tIndirectTrans;
        ProjTransPosting            tProjTransPosting;
        Amount                      tAmount = 0;

        if (!this.invoiced())
        {
            select sum(Amount) from tIndirectTrans
                where tIndirectTrans.TransId == this.transId()
                &&    tIndirectTrans.IndirectComponentType == PSAIndirectComponentType::Revenue;

            tAmount = tIndirectTrans.Amount;
        }
        else
        {
            select sum(AmountMst) from tProjTransPosting
                where tProjTransPosting.TransId          == this.transId() &&
                      tProjTransPosting.PostingType      == LedgerPostingType::ProjTurnover &&
                      tProjTransPosting.ProjTransType    == ProjTransType::Hour;

            tAmount = -(CurrencyExchangeHelper::curAmount(tProjTransPosting.AmountMst, this.currencyIdSales(), this.transDate(), Currency::noYes2UnknownNoYes(this.triangulationSales()), this.exchRateSales(), this.exchRateSecondarySales())) - this.transTurnover();
        }

        return tAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the quantity for this transaction.
    /// </summary>
    /// <returns>
    /// The quantity for this transaction.
    /// </returns>
    Qty qty()
    {
        Qty ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sales price for this transaction.
    /// </summary>
    /// <returns>
    /// The sales price for this transaction.
    /// </returns>
    SalesPrice salesPrice()
    {
        SalesPrice ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the transaction date.
    /// </summary>
    /// <returns>
    /// The transaction date.
    /// </returns>
    TransDate transDate()
    {
        TransDate ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the transaction type.
    /// </summary>
    /// <returns>
    /// The transaction type.
    /// </returns>
    public ProjTransType transType()
    {
        return ProjTransType::Hour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>txt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the transaction text.
    /// </summary>
    /// <returns>
    /// The transaction text.
    /// </returns>
    TransTxt txt()
    {
        TransTxt ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucherInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the voucher number associated with this transaction.
    /// </summary>
    /// <returns>
    /// The voucher number that is associated with this transaction.
    /// </returns>
    Voucher voucherInvoice()
    {
        Voucher ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lendingLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the lending legal entity.
    /// </summary>
    DataAreaId lendingLegalEntity()
    {
        DataAreaId ret;

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>