<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SAFTReportContract_AccountingBooks_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The data contract class for the service that runs the SAF-T Accounting Books (PL) report.
/// </summary>
[
    DataContract,
    SysOperationGroup('Period', "@SYS40", '1'),
    SysOperationGroup('TaxAuthority', "@SYS21937", '2'),
    SysOperationGroup('Turnover', "@ApplicationSuite_Localization:TurnoverBalancesStatement", '3'),
    SysOperationGroup('ReportParts', "@StandardAuditFile_SAFT_W:SAFAccountingBooksReportParts", '4'),
    SysOperationGroup('Ledger transactions', "@SYS2910", '5'),
    SysOperationContractProcessing(classStr(SAFTReportUIBuilder_AccountingBooks_PL))
]
public class SAFTReportContract_AccountingBooks_PL extends SAFTReportContract_Base_W
{
    private LedgerPostingLayerMultiSelection postingLayers;
    private CurrentOperationsTax postingLayer;
    private NoYes zeroBalances, includeTotals, openingBalance, separateBalance, closingTransactions;
    private NoYes skipZOiSPart, skipDziennikPart, skipKontoZapisPart;
    private NoYes printMainAccountDimensions;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    [
        DataMember('PostingLayer'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@SYS10925")),
        SysOperationHelpText(literalstr("@SYS1487")),
        SysOperationDisplayOrder('1')
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayers</Name>
				<Source><![CDATA[
    [
        DataMember('PostingLayer'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@SYS10925")),
        SysOperationHelpText(literalstr("@SYS1487")),
        SysOperationDisplayOrder('2')
    ]
    public LedgerPostingLayerMultiSelection parmPostingLayers(LedgerPostingLayerMultiSelection _postingLayers = postingLayers)
    {
        postingLayers = _postingLayers;
        return postingLayers;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZeroBalances</Name>
				<Source><![CDATA[
    [
        DataMember('ZeroBalances'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@ApplicationSuite_Localization:TurnoverPrintZeroBalance")),
        SysOperationDisplayOrder('3')
    ]
    public NoYes parmZeroBalances(NoYes _zeroBalances = zeroBalances)
    {
        zeroBalances = _zeroBalances;
        return zeroBalances;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeTotals</Name>
				<Source><![CDATA[
    [
        DataMember('IncludeTotals'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@SYS4083196")),
        SysOperationDisplayOrder('4')
    ]
    public NoYes parmIncludeTotals(NoYes _includeTotals = includeTotals)
    {
        includeTotals = _includeTotals;
        return includeTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOpeningBalance</Name>
				<Source><![CDATA[
    [
        DataMember('OpeningBalance'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@ApplicationSuite_Localization:TurnoverPrintOpeningBalance")),
        SysOperationDisplayOrder('5')
    ]
    public NoYes parmOpeningBalance(NoYes _openingBalance = openingBalance)
    {
        openingBalance = _openingBalance;
        return openingBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSeparateBalance</Name>
				<Source><![CDATA[
    [
        DataMember('SeparateBalance'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@ApplicationSuite_Localization:TurnoverSeparateBalance")),
        SysOperationDisplayOrder('6')
    ]
    public NoYes parmSeparateBalance(NoYes _separateBalance = separateBalance)
    {
        separateBalance = _separateBalance;
        return separateBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClosingTransactions</Name>
				<Source><![CDATA[
    [
        DataMember('ClosingTransactions'),
        SysOperationGroupMember('TurnOver'),
        SysOperationLabel(literalstr("@SYS14844")),
        SysOperationDisplayOrder('7')
    ]
    public NoYes parmClosingTransactions(NoYes _closingTransactions = closingTransactions)
    {
        closingTransactions = _closingTransactions;
        return closingTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipZOiSPart</Name>
				<Source><![CDATA[
    [
        DataMember('SkipZOiSPart'),
        SysOperationGroupMember('ReportParts'),
        SysOperationLabel(literalstr("@StandardAuditFile_SAFT_W:SAFAccountingBooksSkipZOiSPart")),
        SysOperationDisplayOrder('8')
    ]
    public NoYes parmSkipZOiSPart(NoYes _skipZOiSPart = skipZOiSPart)
    {
        skipZOiSPart = _skipZOiSPart;
        return skipZOiSPart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipDziennikPart</Name>
				<Source><![CDATA[
    [
        DataMember('SkipDziennikPart'),
        SysOperationGroupMember('ReportParts'),
        SysOperationLabel(literalstr("@StandardAuditFile_SAFT_W:SAFAccountingBooksSkipDziennikPart")),
        SysOperationDisplayOrder('9')
    ]
    public NoYes parmSkipDziennikPart(NoYes _skipDziennikPart = skipDziennikPart)
    {
        skipDziennikPart = _skipDziennikPart;
        return skipDziennikPart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipKontoZapisPart</Name>
				<Source><![CDATA[
    [
        DataMember('SkipKontoZapisPart'),
        SysOperationGroupMember('ReportParts'),
        SysOperationLabel(literalstr("@StandardAuditFile_SAFT_W:SAFAccountingBooksSkipKontoZapisPart")),
        SysOperationDisplayOrder('10')
    ]
    public NoYes parmSkipKontoZapisPart(NoYes _skipKontoZapisPart = skipKontoZapisPart)
    {
        skipKontoZapisPart = _skipKontoZapisPart;
        return skipKontoZapisPart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintMainAccountDimensions</Name>
				<Source><![CDATA[
    [
        DataMember('PrintMainAccountDimensions'),
        SysOperationGroupMember("@SYS2910"),
        SysOperationLabel(literalstr("@MCR35002")),
        SysOperationDisplayOrder('11')
    ]
    public NoYes parmPrintMainAccountDimensions(NoYes _printMainAccountDimensions = printMainAccountDimensions)
    {
        printMainAccountDimensions = _printMainAccountDimensions;
        return printMainAccountDimensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDefaultQuery</Name>
				<Source><![CDATA[
    protected Query initDefaultQuery()
    {
        Query defaultQuery = new Query();

        return defaultQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the report parameters.
    /// </summary>
    /// <returns>
    /// True if no errors; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = super();

        if (postingLayers == '')
        {
            ret = checkFailed(strFmt("@BI:ParamterIsEmpty", "@SYS35537"));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>