<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTax1099UpdateMultipleVendorsContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendTax1099UpdateMultipleVendorsContract</c> class is the data contract class for updating 1099 box and transactions for multiple vendors.
/// </summary>
[DataContract]
[SysOperationContractProcessing(classStr(VendTax1099UpdateMultipleVendorsUIBuilder))]
internal final class VendTax1099UpdateMultipleVendorsContract extends SysOperationAttributedDataContractInfo
{
    private str encodedQuery;
    private boolean doUpdateVendorBox;
    private Tax1099Box newTax1099Box;
    private boolean doUpdateTransaction1099;
    private TransDate fromDate;
    private TransDate toDate;
    private Tax1099State stateFor1099;
    private boolean doSetAll1099;
    private boolean doRecalcAmounts;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDoUpdateVendorBox</Name>
				<Source><![CDATA[
    [DataMember]
    public boolean parmDoUpdateVendorBox(boolean _doUpdateVendorBox = doUpdateVendorBox)
    {
        doUpdateVendorBox = _doUpdateVendorBox;

        return doUpdateVendorBox;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNewTax1099Box</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(Tax1099Box))]
    public Tax1099Box parmNewTax1099Box(Tax1099Box _newTax1099Box = newTax1099Box)
    {
        newTax1099Box = _newTax1099Box;

        return newTax1099Box;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoUpdateTransaction1099</Name>
				<Source><![CDATA[
    [DataMember]
    public boolean parmDoUpdateTransaction1099(boolean _doUpdateTransaction1099 = doUpdateTransaction1099)
    {
        doUpdateTransaction1099 = _doUpdateTransaction1099;

        return doUpdateTransaction1099;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(TransDate))]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(TransDate))]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;

        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStateFor1099</Name>
				<Source><![CDATA[
    [DataMember(identifierStr(TransTax1099StateDate))]
    public Tax1099State parmStateFor1099(Tax1099State _stateFor1099 = stateFor1099)
    {
        stateFor1099 = _stateFor1099;

        return stateFor1099;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoSetAll1099</Name>
				<Source><![CDATA[
    [DataMember]
    public boolean parmDoSetAll1099(boolean _doSetAll1099 = doSetAll1099)
    {
        doSetAll1099 = _doSetAll1099;

        return doSetAll1099;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDoRecalcAmounts</Name>
				<Source><![CDATA[
    [DataMember]
    public boolean parmDoRecalcAmounts(boolean _doRecalcAmounts = doRecalcAmounts)
    {
        doRecalcAmounts = _doRecalcAmounts;

        return doRecalcAmounts;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    [DataMember, AifQueryType('_query', queryStr(VendTax1099UpdateMultipleVendors))]
    internal str parmQuery(str _query = encodedQuery)
    {
        encodedQuery = _query;

        return encodedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    internal Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(encodedQuery));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>