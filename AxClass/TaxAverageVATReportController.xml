<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxAverageVATReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxAverageVATController</c> class is the controller class for the
/// <c>TaxAverageVATReport</c> report.
/// </summary>
public class TaxAverageVATReportController extends SrsReportRunController implements BatchRetryable
{
    #define.ReportName('TaxAverageVAT.Design')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the controller
    /// </summary>
    /// <param name="_args">
    /// The args
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void init(args _args)
    {
        this.parmReportName(#ReportName);
        this.parmArgs(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    protected void prePromptModifyContract()
    {
        TaxAverageVATReportContract  taxAverageVATReportContract = this.parmReportContract().parmRdpContract();

        super();

        if (taxAverageVATReportContract.parmStartDate() == dateNull())
        {
            // Setup the default date
            taxAverageVATReportContract.parmStartDate(dateStartMth(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone())));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        TaxAverageVATReportContract  taxAverageVATReportContract = this.parmReportContract().parmRdpContract();

        taxAverageVATReportContract.parmTaxID(CompanyInfo::find().CoRegNum);
        taxAverageVATReportContract.parmCompanyAddress(CompanyInfo::find().postalAddress().Address);
        taxAverageVATReportContract.parmHeadOfficeName(TaxBranch::getHeadOffice().Name);
        taxAverageVATReportContract.parmStartDate(dateStartMth(taxAverageVATReportContract.parmStartDate()));
        taxAverageVATReportContract.parmEndDate(dateEndMth(taxAverageVATReportContract.parmStartDate()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        const str FeatureReference = 'TH-00003';
        GlobalizationInstrumentationHelper::featureRun(FeatureReference, funcName());

        TaxAverageVATReportController controller = new TaxAverageVATReportController();
        controller.init(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>