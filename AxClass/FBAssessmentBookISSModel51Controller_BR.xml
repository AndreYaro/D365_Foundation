<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBAssessmentBookISSModel51Controller_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>FBAssessmentBookISSModel51Controller_BR</c> class is the controller class for the ISS model 51 report.
/// </summary>
class FBAssessmentBookISSModel51Controller_BR extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10005, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
        protected void preRunModifyContract()
    {
        FBAssessmentBookISSContract_BR  contract;
        FiscalEstablishment_BR          fiscalEstablishment;
        FBTaxAssessment_BR              taxAssessment;
        FBBookingPeriod_BR              bookingPeriod;

        if (this.parmArgs().record())
        {
            taxAssessment   = this.parmArgs().record();
            contract        = this.parmReportContract().parmRdpContract() as FBAssessmentBookISSContract_BR;

            bookingPeriod = taxAssessment.bookingPeriod();

            fiscalEstablishment = bookingPeriod.fiscalEstablishment();

            contract.parmFiscalEstablishmentId      (fiscalEstablishment.FiscalEstablishmentId);
            contract.parmFiscalEstablishmentName    (fiscalEstablishment.Name);
            contract.parmFiscalEstablishmentAddress (FBUtil_BR::formatAddress(fiscalEstablishment.postalAddress()));
            contract.parmFiscalEstablishmentCNPJCPF (fiscalEstablishment.CNPJCPFNum_BR);
            contract.parmFiscalEstablishmentIE      (fiscalEstablishment.IENum_BR);
            contract.parmFiscalEstablishmentCCMNum  (fiscalEstablishment.CCMNum_BR);
            contract.parmFiscalEstablishmentDataArea(fiscalEstablishment.dataAreaId);
            contract.parmFBBookingPeriodRecId       (bookingPeriod.RecId);
            contract.parmPeriodMonth                (bookingPeriod.PeriodMonth);
            contract.parmPeriodYear                 (bookingPeriod.PeriodYear);
        }
        else
        {
            error("@SYS18626");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>startReportOperation</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Executes the operation associated with the controller.
    /// </summary>
    /// <param name="_args">
    ///     An instance of <c>Args</c> class containing the parameters to be used for running the operation.
    /// </param>
    protected void startReportOperation(Args _args)
    {
        this.parmReportName(ssrsReportStr(FBAssessmentBookISSModel51Report_BR, Report));
        this.parmArgs(_args);
        this.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        static void main(Args _args)
    {
        FBAssessmentBookISSModel51Controller_BR controller = new FBAssessmentBookISSModel51Controller_BR();
        controller.parmShowDialog(false);
        controller.startReportOperation(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>