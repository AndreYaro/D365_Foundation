<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventJournalData_BOMReq_Report_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventJournalData_BOMReq_Report_RU extends InventJournalData_BOMReq_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getToMainAccountAndDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines to main account and dimension value.
    /// </summary>
    /// <param name="_inventJournalTrans">
    /// <c>InventJournalTrans</c> record.
    /// </param>
    /// <param name="_analysisCode">
    /// Dimension Code, which was set in parameters as analysis code
    /// </param>
    /// <returns>
    /// container with To main account and dimension value.
    /// </returns>
    protected container getToMainAccountAndDim(InventJournalTrans _inventJournalTrans,
                                               RefRecId           _analysisCode)
    {
        InventTransPosting                  inventTransPosting;
        DimensionAttributeValueSetItemView  dimAttrValueSetItemView;

        select OffsetLedgerDimension from inventTransPosting
            where inventTransPosting.ItemId                 == _inventJournalTrans.ItemId        &&
                  inventTransPosting.InventTransPostingType == InventTransPostingType::Financial &&
                  inventTransPosting.InventTransOrigin      == InventTransOriginJournalTrans::findInventTransOriginId(
                                                                    _inventJournalTrans.DataAreaId,
                                                                    _inventJournalTrans.JournalId,
                                                                    _inventJournalTrans.LineNum)
            outer join DisplayValue from dimAttrValueSetItemView
                where dimAttrValueSetItemView.DimensionAttributeValueSet == inventTransPosting.DefaultDimension &&
                        dimAttrValueSetItemView.DimensionAttribute       == _analysisCode;

        return [LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(inventTransPosting.OffsetLedgerDimension), dimAttrValueSetItemView.DisplayValue];
    }

]]></Source>
			</Method>
			<Method>
				<Name>initInventTableSection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills lines section of xml document with data
    /// </summary>
    /// <param name="_inventJournalTrans">
    /// InventJournalTrans which will be printed
    /// </param>
    /// <param name="_analysisCode">
    /// Dimension Code, which was set in parameters as analysis code
    /// </param>
    /// <remarks>
    /// ItemName initialized from inventTable.ItemName and inventDimCombination.Name
    /// </remarks>
    protected void initInventTableSection(InventJournalTrans _inventJournalTrans,
                                          RefRecId           _analysisCode)
    {
        DimensionAttributeLevelValueView    dimAttrLevelValueView;

        XmlElement         xmlElement   = xmlDocument.createElement(#InventTableSection);
        InventTable        inventTable  = _inventJournalTrans.inventTable();
        InventTransPosting inventTransPosting;
        InventTrans         inventTrans;
        InventTransOrigin   inventTransOrigin;

        select sum(Qty), sum(CostAmountPosted) from inventTrans
            exists join inventTransOrigin
                where inventTransOrigin.RecId         ==  inventTrans.InventTransOrigin
                   && inventTransOrigin.InventTransId == _inventJournalTrans.InventTransId;

        select LedgerDimension from inventTransPosting
            where inventTransPosting.ItemId                 == _inventJournalTrans.ItemId        &&
                  inventTransPosting.InventTransPostingType == InventTransPostingType::Financial &&
                  inventTransPosting.InventTransOrigin      == InventTransOriginJournalTrans::findInventTransOriginId(
                                                                    _inventJournalTrans.DataAreaId,
                                                                    _inventJournalTrans.JournalId,
                                                                    _inventJournalTrans.LineNum)
            outer join DisplayValue from dimAttrLevelValueView
                where dimAttrLevelValueView.ValueCombinationRecId == inventTransPosting.LedgerDimension &&
                      dimAttrLevelValueView.DimensionAttribute    == _analysisCode;

        xmlElement.setAttribute(#FromLedgerAccount, LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(inventTransPosting.LedgerDimension));
        xmlElement.setAttribute(#FromAnalysisCode,  dimAttrLevelValueView.DisplayValue);
        xmlElement.setAttribute(#ItemName,          _inventJournalTrans.itemName());
        xmlElement.setAttribute(#ItemId,            inventTable.ItemId);
        xmlElement.setAttribute(#CodeOkei,          UnitOfMeasure_RU::codeOKEI_RU(UnitOfMeasure::findBySymbol(inventTable.bomUnitId)));
        xmlElement.setAttribute(#BOMUnitId,         inventTable.inventUnitId());
        xmlElement.setAttribute(#QtyNeed,           strFmt("@GLS106745", abs(_inventJournalTrans.Qty)));
        xmlElement.setAttribute(#Qty,               strFmt("@GLS106745", abs(_inventJournalTrans.Qty)));
        xmlElement.setAttribute(#Price,             strFmt("@GLS106745", inventTrans.Qty ?
                                                                         CurrencyExchangeHelper::price(inventTrans.CostAmountPosted / inventTrans.Qty) :
                                                                         0));
        xmlElement.setAttribute(#LineAmount,        strFmt("@GLS106745", abs(inventTrans.CostAmountPosted)));
        xmlElement.setAttribute(#InventoryNum,      strFmt("@GLS106745", _inventJournalTrans.RecId > 0 ?
                                                                        _inventJournalTrans.RecId :
                                                                        -_inventJournalTrans.RecId));

        xmlRootElement.appendChild(xmlElement);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
