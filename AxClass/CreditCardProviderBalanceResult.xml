<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardProviderBalanceResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CreditCardProviderBalanceResult</c> class stores result from a credit card balance operation.
/// </summary>
internal class CreditCardProviderBalanceResult extends CreditCardProviderResult
{
    CreditCardBalanceResult creditCardBalanceResult;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the object from an array of properties.
    /// </summary>
    /// <param name="_properties">
    /// An array of properties.
    /// </param>
    protected void init(Microsoft.Dynamics.Retail.PaymentSDK.Portable.PaymentProperty[] _properties)
    {
        str xml = CreditCardPaymentProperties::convertPropertyArrayToXML(_properties);
        str ns = Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.GenericNamespace::get_BalanceOnGiftCardResponse();
        CreditCardPaymentProperty property;

        super(_properties);

        property = properties.find(ns, Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.BalanceOnGiftCardProperties::get_Last4Digits());
        this.parmCreditCardNumber(property ? property.parmStringValue() : '');
        property = properties.find(ns, Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.BalanceOnGiftCardProperties::get_CardType());
        this.parmCreditCardTypeName(property ? property.parmStringValue() : '');
        property = properties.find(ns, Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.BalanceOnGiftCardProperties::get_ProviderTransactionId());
        this.parmAuthorization(property ? property.parmStringValue() : '');
        property = properties.find(ns, Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.BalanceOnGiftCardProperties::get_AvailableBalance());
        this.parmTransactionAmount(property ? property.parmDecimalValue() : 0.0);
        property = properties.find(ns, Microsoft.Dynamics.Retail.PaymentSDK.Portable.Constants.BalanceOnGiftCardProperties::get_BalanceOnGiftCardResult());
        this.parmBalanceResult(property ? CreditCardProviderBalanceResult::getBalanceResult(property.parmStringValue()) : CreditCardBalanceResult::None);
        this.parmAvsResult(CreditCardAddressVerificationResult::None);
        this.parmAvsDetail(CreditCardMSAVSDetailCode::None);
        this.parmCvcResult(CreditCardMSCVCResultCode::Unknown);
        this.parmResultOK(this.parmBalanceResult() == CreditCardBalanceResult::Success);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBalanceResult</Name>
				<Source><![CDATA[
    public CreditCardBalanceResult parmBalanceResult(CreditCardBalanceResult _value = creditCardBalanceResult)
    {
        creditCardBalanceResult = _value;
        return creditCardBalanceResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a result from a response object.
    /// </summary>
    /// <param name="_response">
    /// A response.
    /// </param>
    /// <returns>
    /// A result.
    /// </returns>
    public static CreditCardProviderBalanceResult constructFromResponse(Microsoft.Dynamics.Retail.PaymentSDK.Portable.Response _response)
    {
        CreditCardProviderBalanceResult result = new CreditCardProviderBalanceResult();
        result.init(_response.get_Properties());
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromXmlString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a result from a XML string.
    /// </summary>
    /// <param name="_xmlString">
    /// A XML string.
    /// </param>
    /// <returns>
    /// A result.
    /// </returns>
    public static CreditCardProviderBalanceResult constructFromXmlString(str _xmlString)
    {
        CreditCardProviderBalanceResult result = new CreditCardProviderBalanceResult();
        result.init(Microsoft.Dynamics.Retail.PaymentSDK.Portable.PaymentProperty::ConvertXMLToPropertyArray(_xmlString));
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBalanceResult</Name>
				<Source><![CDATA[
    private static CreditCardBalanceResult getBalanceResult(str _code)
    {
        CreditCardBalanceResult balanceResult = CreditCardBalanceResult::None;

        if (_code == CreditCardProviderBalanceResult::balanceOnGiftCardResultToString(Microsoft.Dynamics.Retail.PaymentSDK.Portable.BalanceOnGiftCardResult::Success))
        {
            balanceResult = CreditCardBalanceResult::Success;
        }
        else if (_code == CreditCardProviderBalanceResult::balanceOnGiftCardResultToString(Microsoft.Dynamics.Retail.PaymentSDK.Portable.BalanceOnGiftCardResult::Failure))
        {
            balanceResult = CreditCardBalanceResult::Failure;
        }
        else
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return balanceResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>balanceOnGiftCardResultToString</Name>
				<Source><![CDATA[
    private static str balanceOnGiftCardResultToString(Microsoft.Dynamics.Retail.PaymentSDK.Portable.BalanceOnGiftCardResult _value)
    {
        return System.Convert::ToString(_value);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>