<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FormLetterParmDataInstrumentationActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FormLetterParmDataInstrumentationActivities</c> class provides activity contexts to the form letter parm data instrumentation logging.
/// </summary>
internal final class FormLetterParmDataInstrumentationActivities
{
    private const str ReArrange = 'ReArrange';
    private const str ReArrangeInit = 'ReArrangeInit';
    private const str ReArrangeLines = 'ReArrangeLines';
    private const str ReArrangeEnd = 'ReArrangeEnd';
    private const str ReSelect = 'ReSelect';
    private const str ReSelectInit = 'ReSelectInit';
    private const str ReSelectLines = 'ReSelectLines';
    private const str ReSelectEnd = 'ReSelectEnd';
    private const str ReArrangeEndInvoice = 'ReArrangeEndInvoice';
    private const str DoReArrange = 'DoReArrange';
    private const str DoReSelect = 'DoReSelect';
    private const str UseSplitting = 'UseSplitting';
    private const str DoChooseLinesFromLine = 'DoChooseLinesFromLine';
    private const str CreateChooseLinesFromLine = 'CreateChooseLinesFromLine';
    private const str ChooseLineFromLine = 'ChooseLineFromLine';
    private const str DeleteParmTables = 'DeleteParmTables';

    private const str AppendProperty = 'Append';
    private const str MustDeleteParmTablesProperty = 'MustDeleteParmTables';

    private const str ActivityPreFix = 'FormLetter.';

    private FormLetterInstrumentationLogger logger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(FormLetterInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static FormLetterParmDataInstrumentationActivities newFromLogger(FormLetterInstrumentationLogger _logger)
    {
        return new FormLetterParmDataInstrumentationActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContext(_activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrangeEnd</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrangeEnd()
    {
        return logger.activityContext(ActivityPreFix + ReArrangeEnd);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrange</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrange()
    {
        return logger.activityContext(ActivityPreFix + ReArrange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrangeInit</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrangeInit()
    {
        return logger.activityContext(ActivityPreFix + ReArrangeInit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrangeLines</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrangeLines()
    {
        return logger.activityContext(ActivityPreFix + ReArrangeLines);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reArrangeEndInvoice</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reArrangeEndInvoice()
    {
        return logger.activityContext(ActivityPreFix + ReArrangeEndInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doReArrange</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext doReArrange()
    {
        return logger.activityContext(ActivityPreFix + DoReArrange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doReSelect</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext doReSelect()
    {
        return logger.activityContext(ActivityPreFix + DoReSelect);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSelect</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reSelect()
    {
        return logger.activityContext(ActivityPreFix + ReSelect);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSelectInit</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reSelectInit()
    {
        return logger.activityContext(ActivityPreFix + ReSelectInit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSelectLines</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reSelectLines()
    {
        return logger.activityContext(ActivityPreFix + ReSelectLines);
    }

]]></Source>
			</Method>
			<Method>
				<Name>reSelectEnd</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext reSelectEnd()
    {
        return logger.activityContext(ActivityPreFix + ReSelectEnd);
    }

]]></Source>
			</Method>
			<Method>
				<Name>useSplitting</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext useSplitting()
    {
        return logger.activityContext(ActivityPreFix + UseSplitting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>doChooseLinesFromLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext doChooseLinesFromLine()
    {
        return logger.activityContext(ActivityPreFix + DoChooseLinesFromLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createChooseLinesFromLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext createChooseLinesFromLine()
    {
        return logger.activityContext(ActivityPreFix + CreateChooseLinesFromLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>chooseLineFromLine</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext chooseLineFromLine()
    {
        return logger.activityContext(ActivityPreFix + ChooseLineFromLine);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteParmTables</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext deleteParmTables(NoYes _append, NoYes _mustDeleteParmTables)
    {
        SysInstrumentationActivityContext activityContext = logger.activityContext(ActivityPreFix + DeleteParmTables);
        activityContext
            .addCustomProperty(AppendProperty, enum2Str(_append))
            .addCustomProperty(MustDeleteParmTablesProperty, enum2Str(_mustDeleteParmTables));

        return activityContext;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>