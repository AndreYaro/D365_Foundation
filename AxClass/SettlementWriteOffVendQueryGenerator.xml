<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SettlementWriteOffVendQueryGenerator</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

/// <summary>
/// The <c>SettlementWriteOffVendQueryGenerator</c> generates the vendor query for settlement write off.
/// </summary>
[ExportAttribute(identifierStr(Dynamics.AX.Application.SettlementWriteOffQueryGenerator)),
    ExportMetadata(enumStr(ModuleCustVend), enumLiteralStr(ModuleCustVend, Vend))]
internal final class SettlementWriteOffVendQueryGenerator extends SettlementWriteOffQueryGenerator
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addCustVendTransOpenDatasource</Name>
				<Source><![CDATA[
    internal protected QueryBuildDataSource addCustVendTransOpenDatasource(QueryBuildDataSource _specTransDS)
    {
        QueryBuildDataSource vendTransOpenDS = _specTransDS.addDataSource(tableNum(VendTransOpen));
        vendTransOpenDS.addLink(fieldNum(SpecTrans, RefCompany), fieldNum(VendTransOpen, DataAreaId));
        vendTransOpenDS.addLink(fieldNum(SpecTrans, RefTableId), fieldNum(VendTransOpen, TableId));
        vendTransOpenDS.addLink(fieldNum(SpecTrans, RefRecId), fieldNum(VendTransOpen, RecId));

        return vendTransOpenDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createMatchSettleOrderClause</Name>
				<Source><![CDATA[
    internal protected void createMatchSettleOrderClause(Query _matchQuery)
    {
        QueryBuildDataSource vendTransOpenDS = _matchQuery.dataSourceTable(tableNum(VendTransOpen));

        vendTransOpenDS.addOrderByField(fieldNum(VendTransOpen, CashDiscDate));
        vendTransOpenDS.addOrderByField(fieldNum(VendTransOpen, DueDate));
        vendTransOpenDS.addOrderByField(fieldNum(VendTransOpen, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>restrictMatchQueryToCreditOrDebitBalances</Name>
				<Source><![CDATA[
    internal protected void restrictMatchQueryToCreditOrDebitBalances(Query _matchQuery)
    {
        str BalanceLessThanZeroRange = strFmt('((%1 < 0))', fieldStr(SpecTrans, Balance01));

        QueryBuildDataSource specTransDS = _matchQuery.dataSourceTable(tableNum(SpecTrans));
        specTransDS.addRange(fieldNum(SpecTrans, Balance01)).value(BalanceLessThanZeroRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>restrictSpecTransToPayments</Name>
				<Source><![CDATA[
    internal protected void restrictSpecTransToPayments(Query _query)
    {
        str SpecTransPaymentsRange = strFmt('((%1 > 0))', fieldStr(SpecTrans, Balance01));

        QueryBuildDataSource specTransDS = _query.dataSourceTable(tableNum(SpecTrans));
        specTransDS.addRange(fieldNum(SpecTrans, Balance01)).value(SpecTransPaymentsRange);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new ()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>