<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EInvoiceCFDICustPaymentController_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EInvoiceCFDICustPaymentController_MX</c> is controller class for <c>EInvoiceReport_MX</c> report.
/// </summary>
public class eInvoiceCFDICustPaymentController_MX extends EInvoiceCFDISalesController_MX implements BatchRetryable
{
    CustTrans custPayment;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEInvoiceJour</Name>
				<Source><![CDATA[
    protected EInvoiceJour_MX getEInvoiceJour()
    {
        return EInvoiceJour_MX::findByRef(tableNum(CustTrans), custPayment.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>runPrintMgmt</Name>
				<Source><![CDATA[
    protected void runPrintMgmt()
    {
        if (!journalList)
        {
            throw error("@SYS26348");
        }

        journalList.first(custPayment);

        do
        {
            if (!custPayment)
            {
                throw error("@SYS26348");
            }

            custInvoiceJour.initFromCustTrans(custPayment);
            custInvoiceJour.InvoiceId = custPayment.Voucher;

            // Determine where to start looking for Print Mgmt settings
            Common printMgmtReferencedTable;
            if (SalesParameters::find().DeleteHeading == NoYes::Yes)
            {
                // The original SalesTable record no longer exists, so skip that Print Mgmt level
                // and start with the customer instead.
                printMgmtReferencedTable = custInvoiceJour.custTable_InvoiceAccount();

                if (printMgmtReferencedTable == null)
                {
                    printMgmtReferencedTable = custInvoiceJour.custTable_OrderAccount();
                }
            }
            else
            {
                printMgmtReferencedTable = custInvoiceJour.salesTable();
            }

            formLetterReport.loadPrintSettings(custInvoiceJour, printMgmtReferencedTable, custInvoiceJour.LanguageId);
            this.outputReports();
        }
        while (journalList.next(custPayment));
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the <c>EInvoiceReport_MX</c> SRS Report.
    /// </summary>
    /// <param name="_args">
    /// Args object.
    /// </param>
    public client static void main(Args _args)
    {
        eInvoiceCFDICustPaymentController_MX controller = new EInvoiceCFDICustPaymentController_MX();

        controller.initialize(_args);

        controller.startOperation();
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>