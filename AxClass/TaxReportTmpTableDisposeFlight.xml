<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxReportTmpTableDisposeFlight</Name>
	<SourceCode>
		<Declaration><![CDATA[
///  <summary>
///  When <c>TaxReportTmpTableDisposeFlight</c> is enabled, tax related report will use userConnection to keep all temp table within the same context and then dispose them.
///  </summary>
/// <remarks>
/// Available from 10.0.41.
/// The flight is controlled by entering the following in the flighting service (ECS or similar):
/// "TaxReportTmpTableDisposeFlight_KillSwitch" to disable. This overrules any enablement.
/// </remarks>
[TaxFlighting(TaxFlightingGroup::IndirectTax)]
internal final class TaxReportTmpTableDisposeFlight extends Flight
{
    static private TaxReportTmpTableDisposeFlight singleton = new TaxReportTmpTableDisposeFlight();

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static TaxReportTmpTableDisposeFlight instance()
    {
        return singleton;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>