<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EinvoiceInMemoryDestinationFactory_IT</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
using Microsoft.Dynamics365.LocalizationFramework.Format.FileGeneration;

/// <summary>
/// Destination factory for using <c>EinvoiceInMemoryDestination_IT</c>.
/// </summary>
public class EinvoiceInMemoryDestinationFactory_IT implements ERIFileDestinationFactory, ERIFileDestinationFactoryPostProcessor
{
    private ERIFileDestinationFactory originDestinationFactory;
    private EInvoice_IT eInvoice;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createPrintMgmtDestination</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates file destination for print management.
    /// </summary>
    /// <param name = "_fileDestination">A default file destination.</param>
    /// <param name = "_identification">An identification strategy.</param>
    /// <param name = "_rootContext">A root context.</param>
    /// <param name = "_root">A root element.</param>
    /// <returns>A file destination.</returns>
    public ERIDataDrivenFileDestination createPrintMgmtDestination(
        ERIFileDestination _fileDestination,
        ERIObjectIdentificationStrategy _identification,
        ERTextFormatDataContext _rootContext,
        ERTextFormatIFileComponent _root)
    {
        ERIDataDrivenFileDestination dataDrivenDestination = originDestinationFactory.createPrintMgmtDestination(
            _fileDestination,
            _identification,
            _rootContext,
            _root);

        EinvoiceDestinationFactory_IT::tryDisableSkipSavingToSourceDestination(dataDrivenDestination);

        IFileDestinationHost fileDestinationHost = dataDrivenDestination as IFileDestinationHost;
        if (fileDestinationHost)
        {
            fileDestinationHost.FileDestination = EinvoiceInMemoryDestination_IT::construct(
                fileDestinationHost.get_FileDestination(),
                eInvoice);
        }

        return dataDrivenDestination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the italian Einvoice destination factory.
    /// </summary>
    /// <param name = "_originDestinationFactory">The original destination.</param>
    /// <param name = "_einvoiceIt">The <c>EInvoice_IT</c> record corresponding to the report, that's being created.</param>
    /// <returns>The italian Einvoice destination factory.</returns>
    public static EinvoiceInMemoryDestinationFactory_IT construct(ERIFileDestinationFactory _originDestinationFactory, EInvoice_IT _einvoiceIt)
    {
        EinvoiceInMemoryDestinationFactory_IT destinationFactory = new EinvoiceInMemoryDestinationFactory_IT(_originDestinationFactory, _einvoiceIt);

        ERIFileDestinationFactoryPostProcessorsHost factoryPostProcessing = ERCast::asObject(destinationFactory.originDestinationFactory) as ERIFileDestinationFactoryPostProcessorsHost;

        if (factoryPostProcessing)
        {
            factoryPostProcessing.addDestinationPostProcessor(destinationFactory);
        }
        return destinationFactory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processDestinationAfterCreation</Name>
				<Source><![CDATA[
    public ERIFileDestination processDestinationAfterCreation(ERIFileDestination _sourceDestination)
    {
        return EinvoiceInMemoryDestination_IT::construct(_sourceDestination, eInvoice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(ERIFileDestinationFactory _originDestinationFactory, EInvoice_IT _einvoiceIt)
    {
        originDestinationFactory = _originDestinationFactory;
        eInvoice = _einvoiceIt;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>