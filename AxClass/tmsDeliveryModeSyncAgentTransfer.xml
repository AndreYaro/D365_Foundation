<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmsDeliveryModeSyncAgentTransfer</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Synchronizes TMS specific delivery mode data from invent transfer order header.
/// </summary>
public class tmsDeliveryModeSyncAgentTransfer extends TMSDeliveryModeSyncAgent
{
    InventTransferTable inventTransferTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventTransferTable</Name>
				<Source><![CDATA[
    public InventTransferTable parmInventTransferTable(InventTransferTable _inventTransferTable = inventTransferTable)
    {
        inventTransferTable = _inventTransferTable;

        return inventTransferTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data.
    /// </summary>
    /// <param name="_tmsInventTransferTable">
    /// A table <c>TMSInventTransferTable</c> that should be synchronized.
    /// </param>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    private void syncData(
        TMSInventTransferTable  _tmsInventTransferTable,
        DlvModeId               _deliveryModeId
    )
    {
        _tmsInventTransferTable.setCarrierFieldsFromDlvMode(_deliveryModeId);

        _tmsInventTransferTable.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the invent transfer order header is inserted.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnInsert(DlvModeId _deliveryModeId)
    {
        TMSInventTransferTable  tmsInventTransferTable;
        Counter                 logCount = infologLine();

        try
        {
            ttsbegin;

            tmsInventTransferTable.initFromInventTransferId(inventTransferTable.TransferId);

            this.syncData(tmsInventTransferTable, _deliveryModeId);

            ttscommit;
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == tmsInventTransferTable.TableId)
            {
                infolog.clear(logCount);
                this.syncOnUpdate(_deliveryModeId);
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the invent transfer order header is updated.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnUpdate(DlvModeId _deliveryModeId)
    {
        TMSInventTransferTable tmsInventTransferTable;

        ttsbegin;

        tmsInventTransferTable = TMSInventTransferTable::find(inventTransferTable.TransferId, true);

        if (tmsInventTransferTable.RecId == 0)
        {
            this.syncOnInsert(_deliveryModeId);
        }
        else
        {
            this.syncData(tmsInventTransferTable, _deliveryModeId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSDeliveryModeSyncAgentTransfer construct()
    {
        return new TMSDeliveryModeSyncAgentTransfer();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of the <c>TMSDeliveryModeSyncAgentTransfer</c> class that is based on a table <c>InventTransferTable</c>
    /// </summary>
    /// <param name="_inventTransferTable">
    /// A table <c>InventTransferTable</c> that should be syncronized
    /// </param>
    /// <returns>
    /// A new instance of the <c>TMSDeliveryModeSyncAgentTransfer</c> class.
    /// </returns>
    public static TMSDeliveryModeSyncAgentTransfer newFromBuffer(InventTransferTable _inventTransferTable)
    {
        TMSDeliveryModeSyncAgentTransfer tmsDeliveryModeSyncAgentInventTransfer;

        tmsDeliveryModeSyncAgentInventTransfer = TMSDeliveryModeSyncAgentTransfer::construct();
        tmsDeliveryModeSyncAgentInventTransfer.parmInventTransferTable(_inventTransferTable);

        return tmsDeliveryModeSyncAgentInventTransfer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>