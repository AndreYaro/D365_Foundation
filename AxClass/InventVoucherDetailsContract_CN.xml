<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventVoucherDetailsContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>InventVoucherDetails_CN</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>InventVoucherDetails_CN</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(InventVOucherDetailsUIBuilder_CN), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
class InventVoucherDetailsContract_CN implements SysOperationValidatable, SrsReportRowCountable_CN
{
    ItemId                                  itemId;
    InventLocationId                        warehouse;

    LedgerFiscalPeriodNameContract_CN       periodContract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRowsCount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the rows count of the report primary query's result by data contract parameters.
    /// </summary>
    /// <param name="_query">
    /// Primary query
    /// </param>
    /// <returns>
    /// A <c>Container</c> with first element being rows count and second element being a message that may be shown.
    /// </returns>
    public container getRowsCount(Query _query)
    {
        Query               query;
        SRSMaxRow_CN        maxRows = SystemParameters::find().SRSMaxRow_CN;

        if (_query && _query.name() == queryStr(InventVoucherDetails_CN))
        {
            query = _query;
        }
        else
        {
            query = new Query(queryStr(InventVoucherDetails_CN));
        }

        query = InventVoucherDetailsDP_CN::initQueryByDataContract(query, this);
        int rowsCount = QueryRun::getQueryRowCount(query, maxRows + 1);

        //The output rows is over the allowed maximum rows of SSRS reports, please increase the value in the System parameters and run the report again.
        return [rowsCount, "@GLS220075"];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ItemId.
    /// </summary>
    /// <param name = "_itemId">
    /// The new value of the datacontract parameter ItemId, optional
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter ItemId.
    /// </returns>
    [
        DataMemberAttribute('ItemId'),
        SysOperationLabelAttribute(literalStr("@SYS12836")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;
        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPeriodContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the object instance to the nested data contract.
    /// </summary>
    /// <param name = "_periodContract">
    /// The new the nested data contract parameter _periodContract.
    /// </param>
    /// <returns>
    /// The current nested data contract.
    /// </returns>
    [
        DataMemberAttribute,
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerFiscalPeriodNameContract_CN parmPeriodContract(LedgerFiscalPeriodNameContract_CN _periodContract = periodContract)
    {
        periodContract = _periodContract;
        return periodContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWarehouse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter warehouse.
    /// </summary>
    /// <param name = "_warehouse">
    /// The new value of the datacontract parameter warehouse, optional
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter warehouse.
    /// </returns>
    [
        DataMemberAttribute('Warehouse'),
        SysOperationLabelAttribute(literalStr("@SYS6437")),
        SysOperationDisplayOrderAttribute('2')
    ]
    public InventLocationId parmWarehouse(InventLocationId _warehouse = warehouse)
    {
        warehouse = _warehouse;
        return warehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true when the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        return this.parmPeriodContract().validate();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
