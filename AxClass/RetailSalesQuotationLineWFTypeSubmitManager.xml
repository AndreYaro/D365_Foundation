<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSalesQuotationLineWFTypeSubmitManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailSalesQuotationLineWFTypeSubmitManager</c> menu item action event handler.
/// </summary>
public class RetailSalesQuotationLineWFTypeSubmitManager 
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        WorkflowSubmitDialog workflowSubmitDialog;
        WorkflowComment workflowComment;
        WorkflowCorrelationId workflowCorrelationId;
        WorkflowTypeName workflowTypeName = workflowTypeStr(RetailSalesQuotationLineWFType);
        MCRSalesQuotationLine mcrSalesQuotationLine;
        SalesQuotationLine salesQuotationLine;
        SalesQuotationLine salesQuotationLineTemp;

        if (_args.record() && _args.caller())
        {
            workflowSubmitDialog = WorkflowSubmitDialog::construct(_args.caller().getActiveWorkflowConfiguration());
            workflowSubmitDialog.run();

            if (workflowSubmitDialog.parmIsClosedOK())
            {
                // Get comments from the submit to workflow dialog.
                workflowComment = workflowSubmitDialog.parmWorkflowComment();

                try
                {
                    salesQuotationLineTemp = _args.record();
                    if (salesQuotationLineTemp)
                    {
                        // submit all not submitted lines
                        while select salesQuotationLine
                            where salesQuotationLine.QuotationId == salesQuotationLineTemp.QuotationId
                        {          
                            mcrSalesQuotationLine = salesQuotationLine.mcrSalesQuotationLine();
                            if (mcrSalesQuotationLine && mcrSalesQuotationLine.RetailPriceOverrideWorkflowState == RetailPriceOverrideWorkflowState::NotSubmitted)
                            {       
                                ttsbegin;
                                // Activate the workflow
                                workflowCorrelationId = Workflow::activateFromWorkflowType(workflowTypeName, salesQuotationLine.RecId, workflowComment, NoYes::No);
            
                                mcrSalesQuotationLine.selectForUpdate(true);
                                mcrSalesQuotationLine.RetailPriceOverrideWorkflowState = RetailPriceOverrideWorkflowState::Submitted;
                                mcrSalesQuotationLine.update();
                                ttscommit;        
                            }
                           
                        }

                        _args.caller().updateWorkflowControls();
                        _args.caller().doRefresh();
                    }
                }
                catch (Exception::Error)
                {
                    error('Error on retail sales quotation line workflow submit.');
                }
    
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>