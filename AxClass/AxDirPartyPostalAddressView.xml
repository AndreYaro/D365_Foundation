<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxDirPartyPostalAddressView</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxDirPartyPostalAddressView extends AxApplicationBase
{
    DirPartyPostalAddressView dirPartyPostalAddressView;
    str                         county;
    str                         state;
    DirPartyLocationRoleNames   roles;
    boolean                     rolesSet;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the current record in the <c>DirPartyPostalAddressView</c> table.
    /// </summary>
    /// <param name="_dirPartyPostalAddressView">
    /// The <c>DirPartyPostalAddressView</c> record to set; optional.
    /// </param>
    /// <returns>
    /// A <c>DirPartyPostalAddressView</c> record.
    /// </returns>
    public Common currentRecord(Common _dirPartyPostalAddressView = dirPartyPostalAddressView)
    {
        if (!prmisdefault(_dirPartyPostalAddressView))
        {
            super(_dirPartyPostalAddressView);
            dirPartyPostalAddressView = _dirPartyPostalAddressView;
        }
        else
        {
            super();
        }

        return dirPartyPostalAddressView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyPostalAddressView</Name>
				<Source><![CDATA[
    public DirPartyPostalAddressView dirPartyPostalAddressView(DirPartyPostalAddressView _dirPartyPostalAddressView = dirPartyPostalAddressView)
    {
        if (!prmisdefault(_dirPartyPostalAddressView))
        {
            this.setCurrentRecordFromExternal(_dirPartyPostalAddressView);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
/// <summary>
    /// Gets an empty <c>DirPartyPostalAddressView</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>DirPartyPostalAddressView</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        DirPartyPostalAddressView localDirPartyPostalAddressView;
        return localDirPartyPostalAddressView;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parm_RecId_LogisticsPostalAddress</Name>
				<Source><![CDATA[
    public RecId parm_RecId_LogisticsPostalAddress(RecId __RecId_LogisticsPostalAddress = 0)
    {
        if (!prmisdefault(__RecId_LogisticsPostalAddress))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, _RecId_LogisticsPostalAddress), __RecId_LogisticsPostalAddress);
        }

        return dirPartyPostalAddressView._RecId_LogisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parm_recVersion_LogisticsPostalAddress</Name>
				<Source><![CDATA[
    public RecVersion parm_recVersion_LogisticsPostalAddress(RecVersion __recVersion_LogisticsPostalAddress = 0)
    {
        if (!prmisdefault(__recVersion_LogisticsPostalAddress))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, _recVersion_LogisticsPostalAddress), __recVersion_LogisticsPostalAddress);
        }

        return dirPartyPostalAddressView._recVersion_LogisticsPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddress</Name>
				<Source><![CDATA[
    public LogisticsAddressing parmAddress(LogisticsAddressing _address = '')
    {
        if (!prmisdefault(_address))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Address), _address);
        }

        return dirPartyPostalAddressView.Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmApartment_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressApartment_RU parmApartment_RU(LogisticsAddressApartment_RU _apartment_RU = '')
    {
        if (!prmisdefault(_apartment_RU))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, Apartment_RU), _apartment_RU);
        }

        return dirPartyPostalAddressView.Apartment_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuilding_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressBuilding_RU parmBuilding_RU(LogisticsAddressBuilding_RU _building_RU = '')
    {
        if (!prmisdefault(_building_RU))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, Building_RU), _building_RU);
        }

        return dirPartyPostalAddressView.Building_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBuildingCompliment</Name>
				<Source><![CDATA[
    public LogisticsAddressBuildingCompliment parmBuildingCompliment(LogisticsAddressBuildingCompliment _buildingCompliment = '')
    {
        if (!prmisdefault(_buildingCompliment))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, BuildingCompliment), _buildingCompliment);
        }

        return dirPartyPostalAddressView.BuildingCompliment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCity</Name>
				<Source><![CDATA[
public LogisticsAddressCityName parmCity(LogisticsAddressCityName _city = '')
    {
        if (!prmisdefault(_city))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, City), _city);
        }

        return dirPartyPostalAddressView.City;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmCityRecId</Name>
				<Source><![CDATA[
    public LogisticsAddressCityRecId parmCityRecId(LogisticsAddressCityRecId _cityRecId = 0)
    {
        if (!prmisdefault(_cityRecId))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, CityRecId), _cityRecId);
        }

        return dirPartyPostalAddressView.CityRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountryCurrencyCode</Name>
				<Source><![CDATA[
public str parmCountryCurrencyCode(str _countryCurrencyCode = '')
    {
        DictField   dictField;
        if (!prmisdefault(_countryCurrencyCode))
        {
            dictField = new DictField(tablenum(DirPartyPostalAddressView),fieldnum(DirPartyPostalAddressView,CountryCurrencyCode));
            this.validateInboundCurrencyString(_countryCurrencyCode,dictField);

            if (this.valueMappingInbound())
            {
                _countryCurrencyCode = this.axCurrencyCode(_countryCurrencyCode);
            }

            this.setField(fieldnum(DirPartyPostalAddressView, CountryCurrencyCode), _countryCurrencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(dirPartyPostalAddressView.CountryCurrencyCode);
        }
        else
        {
            return dirPartyPostalAddressView.CountryCurrencyCode;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmCountryRegionId</Name>
				<Source><![CDATA[
public str parmCountryRegionId(str _countryRegionId = '')
    {
        DictField   dictField;
        if (!prmisdefault(_countryRegionId))
        {
            dictField = new DictField(tablenum(DirPartyPostalAddressView),fieldnum(DirPartyPostalAddressView,CountryRegionId));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_countryRegionId,dictField,this.mapPolicy().xMLMapCountryRegion());
                _countryRegionId = this.axLogisticsAddressCountryRegionId(_countryRegionId);
            }
            else
            {
                this.validateInboundString(_countryRegionId,dictField);
            }
            this.setField(fieldnum(DirPartyPostalAddressView, CountryRegionId), _countryRegionId);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressCountryRegionId(dirPartyPostalAddressView.CountryRegionId);
        }
        else
        {
            return dirPartyPostalAddressView.CountryRegionId;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmCounty</Name>
				<Source><![CDATA[
public str parmCounty(str _county = '')
    {
        DictField   dictField;
        if (!prmisdefault(_county))
        {
            dictField = new DictField(tablenum(DirPartyPostalAddressView),fieldnum(DirPartyPostalAddressView,County));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_county,dictField,this.mapPolicy().xMLMapCounty());
                county = _county;
            }
            else
            {
                this.validateInboundString(_county,dictField);
            }
            this.setField(fieldnum(DirPartyPostalAddressView, County), _county);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressCountyId(dirPartyPostalAddressView.County, dirPartyPostalAddressView.CountryRegionId, dirPartyPostalAddressView.State);
        }
        else
        {
            return dirPartyPostalAddressView.County;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmDistrict</Name>
				<Source><![CDATA[
    public LogisticsAddressDistrictRecId parmDistrict(LogisticsAddressDistrictRecId _district = 0)
    {
        if (!prmisdefault(_district))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, District), _district);
        }

        return dirPartyPostalAddressView.District;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistrictName</Name>
				<Source><![CDATA[
    public LogisticsAddressDistrictName parmDistrictName(LogisticsAddressDistrictName _districtName = '')
    {
        if (!prmisdefault(_districtName))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, DistrictName), _districtName);
        }

        return dirPartyPostalAddressView.DistrictName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFlatId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressFlatId_RU parmFlatId_RU(LogisticsAddressFlatId_RU _flat = 0)
    {
        if (!prmisdefault(_flat))
        {
            this.setField(fieldnum(dirPartyPostalAddressView, FlatId_RU), _flat);
        }

        return dirPartyPostalAddressView.FlatId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHouseId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressHouseId_RU parmHouseId_RU(LogisticsAddressHouseId_RU _house = 0)
    {
        if (!prmisdefault(_house))
        {
            this.setField(fieldnum(dirPartyPostalAddressView, HouseId_RU), _house);
        }

        return dirPartyPostalAddressView.HouseId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsLocationOwner</Name>
				<Source><![CDATA[
    public DirPartyIsLocationOwner parmIsLocationOwner(DirPartyIsLocationOwner _isLocationOwner = NoYes::No)
    {
        if (!prmisdefault(_isLocationOwner))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, IsLocationOwner), _isLocationOwner);
        }

        return dirPartyPostalAddressView.IsLocationOwner;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmISOcode</Name>
				<Source><![CDATA[
    public LogisticsAddressCountryRegionISOCode parmISOcode(LogisticsAddressCountryRegionISOCode _iSOcode = '')
    {
        if (!prmisdefault(_iSOcode))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, ISOcode), _iSOcode);
        }

        return dirPartyPostalAddressView.ISOcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrimary</Name>
				<Source><![CDATA[
    public LogisticsIsPrimaryAddress parmIsPrimary(LogisticsIsPrimaryAddress _isPrimary = NoYes::No)
    {
        if (!prmisdefault(_isPrimary))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, IsPrimary), _isPrimary);
        }

        return dirPartyPostalAddressView.IsPrimary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrimaryTaxRegistration</Name>
				<Source><![CDATA[
    public LogisticsIsPrimaryTaxRegistrationAddress parmIsPrimaryTaxRegistration(LogisticsIsPrimaryTaxRegistrationAddress _isPrimaryTaxRegistration = NoYes::No)
    {
        if (!prmisdefault(_isPrimaryTaxRegistration))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, IsPrimaryTaxRegistration), _isPrimaryTaxRegistration);
        }

        return dirPartyPostalAddressView.IsPrimaryTaxRegistration;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsPrivate</Name>
				<Source><![CDATA[
    public LogisticsIsPrivate parmIsPrivate(LogisticsIsPrivate _isPrivate = NoYes::No)
    {
        if (!prmisdefault(_isPrivate))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, IsPrivate), _isPrivate);
        }

        return dirPartyPostalAddressView.IsPrivate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLatitude</Name>
				<Source><![CDATA[
    public LogisticsAddressLatitude parmLatitude(LogisticsAddressLatitude _latitude = 0)
    {
        if (!prmisdefault(_latitude))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Latitude), _latitude);
        }

        return dirPartyPostalAddressView.Latitude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocation</Name>
				<Source><![CDATA[
    public recId parmLocation(recId _location = 0)
    {
        if (!prmisdefault(_location))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Location), _location);
        }

        return dirPartyPostalAddressView.Location;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLocationName</Name>
				<Source><![CDATA[
    public Description parmLocationName(Description _locationName = '')
    {
        if (!prmisdefault(_locationName))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, LocationName), _locationName);
        }

        return dirPartyPostalAddressView.LocationName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLongitude</Name>
				<Source><![CDATA[
    public LogisticsAddressLongitude parmLongitude(LogisticsAddressLongitude _longitude = 0)
    {
        if (!prmisdefault(_longitude))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Longitude), _longitude);
        }

        return dirPartyPostalAddressView.Longitude;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmParty</Name>
				<Source><![CDATA[
    public DirPartyRecId parmParty(DirPartyRecId _party = 0)
    {
        if (!prmisdefault(_party))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Party), _party);
        }

        return dirPartyPostalAddressView.Party;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPartyLocation</Name>
				<Source><![CDATA[
    public recId parmPartyLocation(recId _partyLocation = 0)
    {
        if (!prmisdefault(_partyLocation))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, PartyLocation), _partyLocation);
        }

        return dirPartyPostalAddressView.PartyLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostalAddress</Name>
				<Source><![CDATA[
    public RecId parmPostalAddress(RecId _postalAddress = 0)
    {
        if (!prmisDefault(_postalAddress))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, PostalAddress), _postalAddress);
        }

        return dirPartyPostalAddressView.PostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostBox</Name>
				<Source><![CDATA[
    public LogisticsAddressPostBox parmPostBox(LogisticsAddressPostBox _postBox = '')
    {
        if (!prmisdefault(_postBox))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, PostBox), _postBox);
        }

        return dirPartyPostalAddressView.PostBox;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrivateForParty</Name>
				<Source><![CDATA[
    public DirPartyPrivateLocationRecId parmPrivateForParty(DirPartyPrivateLocationRecId _privateForParty = 0)
    {
        if (!prmisdefault(_privateForParty))
        {
            this.setField(fieldNum(DirPartyPostalAddressView, PrivateForParty), _privateForParty);
        }

        return dirPartyPostalAddressView.PrivateForParty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRoles</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets or gets the semi colon separated list of location roles
    /// </summary>
    /// <param name="_roles">
    ///    A string of roles that are separated by a semi colon.
    /// </param>
    /// <returns>
    ///    A string of roles that are separated by a semi colon.
    /// </returns>
    public DirPartyLocationRoleNames parmRoles(DirPartyLocationRoleNames _roles = '')
    {
        DirPartyLocation    partyLocation;

        if (!prmisdefault(_roles))
        {
            // Set
            rolesSet = true;
            roles = _roles;
        }
        else if (!rolesSet)
        {
            rolesSet = true;
            // Get the roles for the DirPartyLocation
            partyLocation = DirPartyLocation::findRec(this.parmPartyLocation());
            roles = partyLocation.locationRoleNames();
        }

        return roles;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmState</Name>
				<Source><![CDATA[
public str parmState(str _state = '')
    {
        DictField   dictField;
        if (!prmisdefault(_state))
        {
            dictField = new DictField(tablenum(DirPartyPostalAddressView),fieldnum(DirPartyPostalAddressView,State));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_state,dictField,this.mapPolicy().xMLMapState());
                state = _state;
            }
            else
            {
                this.validateInboundString(_state,dictField);
            }
            this.setField(fieldnum(DirPartyPostalAddressView, State), _state);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressStateId(dirPartyPostalAddressView.State, dirPartyPostalAddressView.CountryRegionId);
        }
        else
        {
            return dirPartyPostalAddressView.State;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmStreet</Name>
				<Source><![CDATA[
    public LogisticsAddressStreet parmStreet(LogisticsAddressStreet _street = '')
    {
        if (!prmisdefault(_street))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, Street), _street);
        }

        return dirPartyPostalAddressView.Street;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreetId_RU</Name>
				<Source><![CDATA[
    public LogisticsAddressStreetID_RU parmStreetId_RU(LogisticsAddressStreetID_RU _street = 0)
    {
        if (!prmisdefault(_street))
        {
            this.setField(fieldnum(dirPartyPostalAddressView, StreetId_RU), _street);
        }

        return dirPartyPostalAddressView.StreetId_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStreetNumber</Name>
				<Source><![CDATA[
    public LogisticsAddressStreetNumber parmStreetNumber(LogisticsAddressStreetNumber _streetNumber = '')
    {
        if (!prmisdefault(_streetNumber))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, StreetNumber), _streetNumber);
        }

        return dirPartyPostalAddressView.StreetNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeZone</Name>
				<Source><![CDATA[
    public Timezone parmTimeZone(Timezone _timezone = Timezone::GMTMINUS1200INTERNATIONALDATELINEWEST)
    {
        if (!prmisdefault(_timezone))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, TimeZone), _timezone);
        }

        return dirPartyPostalAddressView.TimeZone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidFrom</Name>
				<Source><![CDATA[
    public EffectiveDateTime parmValidFrom(EffectiveDateTime _validFrom = utcDateTimeNull())
    {
        if (!prmisdefault(_validFrom))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, ValidFrom), _validFrom);
        }

        return dirPartyPostalAddressView.ValidFrom;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidTo</Name>
				<Source><![CDATA[
    public ExpirationDateTime parmValidTo(ExpirationDateTime _validTo = utcDateTimeNull())
    {
        if (!prmisdefault(_validTo))
        {
            this.setField(fieldnum(DirPartyPostalAddressView, ValidTo), _validTo);
        }

        return dirPartyPostalAddressView.ValidTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmZipCode</Name>
				<Source><![CDATA[
public str parmZipCode(str _zipCode = '')
    {
        DictField   dictField;
        if (!prmisdefault(_zipCode))
        {
            dictField = new DictField(tablenum(DirPartyPostalAddressView),fieldnum(DirPartyPostalAddressView,ZipCode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_zipCode,dictField,this.mapPolicy().xMLMapZipCode());
                _zipCode = this.axLogisticsAddressZipCodeId(_zipCode);
            }
            else
            {
                this.validateInboundString(_zipCode,dictField);
            }
            this.setField(fieldnum(DirPartyPostalAddressView, ZipCode), _zipCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axLogisticsAddressZipCodeId(dirPartyPostalAddressView.ZipCode);
        }
        else
        {
            return dirPartyPostalAddressView.ZipCode;
        }
    }
]]></Source>
			</Method>
			<Method>
				<Name>resetInternalValues</Name>
				<Source><![CDATA[
    public void resetInternalValues()
    {
        rolesSet = false;
        super();
    }
]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.currentRecord().defaultRow();
    }

]]></Source>
			</Method>
			<Method>
				<Name>valueMapDependingFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs incoming value mapping of fields that depend on another field, such as the item, state,
    ///    and county fields.
    /// </summary>
    /// <remarks>
    ///    This method is used in the save method. Therefore the incoming value mapping is performed before
    ///    the fields are defaulted.
    /// </remarks>
    protected void valueMapDependingFields()
    {
        if (this.valueMappingInbound())
        {
            if (state && dirPartyPostalAddressView.CountryRegionId)
            {
                this.parmState(this.axLogisticsAddressStateId(state,dirPartyPostalAddressView.CountryRegionId));

                if (county)
                {
                    this.parmCounty(this.axLogisticsAddressCountyId(county,
                                                                    dirPartyPostalAddressView.CountryRegionId,
                                                                    dirPartyPostalAddressView.State));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxDirPartyPostalAddressView construct()
    {
        return new AxDirPartyPostalAddressView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDirPartyPostalAddressView</Name>
				<Source><![CDATA[
public static AxDirPartyPostalAddressView newDirPartyPostalAddressView(DirPartyPostalAddressView _dirPartyPostalAddressView)
    {
        AxDirPartyPostalAddressView axDirPartyPostalAddressView = AxDirPartyPostalAddressView::construct();
        axDirPartyPostalAddressView.dirPartyPostalAddressView(_dirPartyPostalAddressView);

        return axDirPartyPostalAddressView;
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>