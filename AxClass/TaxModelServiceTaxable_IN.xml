<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelServiceTaxable_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The interface of the document line supporting the Service Tax.
/// </summary>
public interface TaxModelServiceTaxable_IN
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getServiceCodeRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> of <c>ServiceCodeTable_IN</c> of the transaction line.
    /// </summary>
    /// <returns>
    /// The service code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RecId getServiceCodeRefRecId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceCodeTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>ServiceCodeTable_IN</c> of the transaction line.
    /// </summary>
    /// <returns>
    /// The service code.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public ServiceCodeTable_IN getServiceCodeTable()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceGTACategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the service GTA category of the transaction line.
    /// </summary>
    /// <returns>
    /// The category.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public GTAServiceCategory_IN getServiceGTACategory()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceTaxAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    /// <remarks>
    /// The method returns the accounts type of the tax monentory amount.
    /// The tax monentory amount is decided based on below rule.
    ///
    /// Transaction Type,  Tax Direction, Line Amount, TaxOnDebit/Credit
    /// Invoice         ,  Incoming,    , Possitive,   Read on Debit
    /// Invoice         ,  Outgoing,    , Possitive,   Read on Credit
    /// Payment         ,  Incoming,    , Possitive,   Read on Credit
    /// Payment         ,  Outgoing,    , Possitive,   Read on Debit
    /// Invoice         ,  Incoming,    , Negative,    Read on Credit
    /// Invoice         ,  Outgoing,    , Negative,    Read on Debit
    /// Payment         ,  Incoming,    , Negative,    Read on Debit
    /// Payment         ,  Outgoing,    , Negative,    Read on Credit
    /// </remarks>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getServiceTaxAccountType(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceTaxOffsetAccountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets tax offset account type based on the given <c>TaxOnItem</c>
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// The tax account type.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxAccountType_IN getServiceTaxOffsetAccountType(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceTaxRegistrationNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Service Tax Registration Number.
    /// </summary>
    /// <returns>
    /// The <c>TaxRegistrationNumber_IN</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public TaxRegistrationNumber_IN getServiceTaxRegistrationNumber()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getServiceTaxRegistrationRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>RecId</c> Service Tax Registration.
    /// </summary>
    /// <returns>
    /// The <c>RefRecId</c>
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public RefRecId getServiceTaxRegistrationRefRecId()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isServiceGTA</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is GTA transaction?
    /// </summary>
    /// <returns>
    /// True, if the transaction is GTA;Otherwise, false;
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isServiceGTA()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isServicePOT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Is POT transaction?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The <c>TaxOnItem</c>
    /// </param>
    /// <returns>
    /// True, if the transaction is POT;Otherwise, false;
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isServicePOT(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isServiceTaxGTARealizedAtInvSettlement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines the tax of the GTA vendor is realizable at Invoice settlement time or not.
    /// </summary>
    /// <returns>
    /// True, if it is realizeable; Otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean isServiceTaxGTARealizedAtInvSettlement()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSkipServiceTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Should the Service Tax be skipped on this transaction line?
    /// </summary>
    /// <param name="_taxOnItem">
    /// The given <c>TaxOnItem</c> on the transaction line.
    /// </param>
    /// <returns>
    /// True, it should be skipped; Otherwise, false.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public boolean shouldSkipServiceTax(TaxOnItem _taxOnItem)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>