<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendOverdueCITPITJournalTableInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendOverdueCITPITJournalTableInteraction</c> class manages controls on <c>VendOverdueCITPITJournalTable_W</c> form
/// </summary>
class VendOverdueCITPITJournalTableInteraction extends PageInteraction
{
    VendOverdueCITPITJournalTable_W journalTable;
    VendOverdueCITPITTurnJournalLine_W turnJournalLine;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>enableHeaderActions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables or disables buttons on form action pane.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void enableHeaderActions()
    {
        OverdueJournalTable_W lastJournal = OverdueJournalTable_W::findLast(OverdueJournalType_W::VendCITPITJournal);

        this.page().actionPaneControlEnabled(formControlStr(VendOverdueCITPITJournalTable_W, VendOverdueCITPITReport_W),
            journalTable.RecId);
        this.page().actionPaneControlEnabled(formControlStr(VendOverdueCITPITJournalTable_W, VendOverdueCITPITJournalApproval_W),
            journalTable.RecId && !journalTable.Approved);
        this.page().actionPaneControlEnabled(formControlStr(VendOverdueCITPITJournalTable_W, VendOverdueCITPITJournalApprovalCancel_W),
            journalTable.Approved && journalTable.RecId == lastJournal.RecId);

        FormDataSource vendOverdueCITPITJournalTable_DS = FormDataUtil::getFormDataSource(journalTable);

        if (vendOverdueCITPITJournalTable_DS)
        {
            vendOverdueCITPITJournalTable_DS.allowCreate(lastJournal.Approved || !lastJournal.RecId);
            vendOverdueCITPITJournalTable_DS.allowDelete(!journalTable.Approved);
            vendOverdueCITPITJournalTable_DS.allowEdit(!journalTable.Approved);
        }

        FormDataSource vendOverdueCITPITTurnJournalLine_W_DS = FormDataUtil::getFormDataSource(turnJournalLine);

        if (vendOverdueCITPITTurnJournalLine_W_DS)
        {
            vendOverdueCITPITTurnJournalLine_W_DS.allowEdit(!journalTable.Approved);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes based on the active records for the form.
    /// </summary>
    private void init()
    {
        journalTable = this.page().activeRecord(formDataSourceStr(VendOverdueCITPITJournalTable_W, OverdueCITPITJournalTable));
        turnJournalLine = this.page().activeRecord(formDataSourceStr(VendOverdueCITPITJournalTable_W, VendOverdueCITPITTurnJournalLine_W));
    }

]]></Source>
			</Method>
			<Method>
				<Name>overdueCITPITJourTbl_DS_selectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables the header action menu item buttons when the active journal table has been updated.
    /// </summary>
    [FormDataSourceInteractionAttribute('OverdueCITPITJournalTable', 'selectionChanged')]
    public void overdueCITPITJourTbl_DS_selectionChanged()
    {
        this.init();

        this.enableHeaderActions();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>