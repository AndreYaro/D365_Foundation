<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>KmQuestionnaireSaveEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
class KmQuestionnaireSaveEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>KmQuestionnaireSave_copyResults2SimilarPurchReqLines</Name>
				<Source><![CDATA[
    /// <summary>
    /// The copyResults2SimilarPurchReqLines delegate event handler for the KmQuestionnaireSave class
    /// Copies answers to a questionnaire to similar purchase requisition lines.
    /// </summary>
    /// <param name="_kmVirtualNetworkAnswerTableIdThis">The ID of the <c>KMVirtualNetworkAnswerTable</c> record
    /// <param name = "_refCallingTableId"> The table ID of the record from where the questionnaire was started.</param>
    /// <param name = "_refCallingRecId"> The record ID of the record from where the questionnaire was started.</param>
    /// <param name = "_kmCollection">A <c>KMCollectionId</c> value.</param>
    [SubscribesTo(classStr(KmQuestionnaireSave), delegateStr(KmQuestionnaireSave, copyResults2SimilarPurchReqLines))]
    public static void KmQuestionnaireSave_copyResults2SimilarPurchReqLines(KMVirtualNetworkAnswerTableId _kmVirtualNetworkAnswerTableIdThis, TableId _refCallingTableId,  RecId _refCallingRecId, KMCollection _kmCollection)
    {
        PurchReqLine purchReqLine;
        PurchReqLine purchReqLineThis;

        PurchReqLineKMCollection purchReqLineKmCollectionThis;
        PurchReqLineKMCollection purchReqLineKmCollectionCheck;

        KMVirtualNetworkAnswerTable kmVirtualNetworkAnswerTableThis;
        KMVirtualNetworkAnswerTable kmVirtualNetworkAnswerTableInsert;
        KMVirtualNetworkAnswerTable kmVirtualNetworkAnswerTableCheck;

        PurchReqLineQuestionnaireResponse purchReqLineQuestionnaireResponseThis;
        PurchReqLineQuestionnaireResponse purchReqLineQuestionnaireResponseInsert;
        PurchReqLineQuestionnaireResponse purchReqLineQuestionnaireResponseDelete;

        KMVirtualNetworkAnswerLine kmVirtualNetworkAnswerLineThis;
        KMVirtualNetworkAnswerLine kmVirtualNetworkAnswerLineInsert;

        NumberSeq numberSeq;
        KMVirtualNetworkAnswerTableId kmVirtualNetworkAnswerTableIdInsert;

        if (_refCallingTableId != tableNum(PurchReqLine))
        {
            return;
        }

        select firstonly PurchReqTable, RecId from purchReqLineThis
            where purchReqLineThis.RecId == _refCallingRecId;

        select firstonly crosscompany RecId from purchReqLine
            where purchReqLine.RecId != purchReqLineThis.RecId
            && purchReqLine.PurchReqTable == purchReqLineThis.PurchReqTable

            join RecId from purchReqLineKmCollectionThis
            where purchReqLineKmCollectionThis.PurchReqLine == purchReqLine.RecId
            && purchReqLineKmCollectionThis.kmCollectionId == _kmCollection.KmCollectionId
            && purchReqLineKmCollectionThis.kmCollectionIdDataArea == _kmCollection.DataAreaId;

        if (purchReqLine)
        {
            if (Box::yesNo("@SYS305235", DialogButton::No, "@SYS31447"))
            {
                ttsbegin;

                while select RecId from purchReqLine
                    where purchReqLine.RecId != purchReqLineThis.RecId
                    && purchReqLine.PurchReqTable == purchReqLineThis.PurchReqTable
                {
                    numberSeq = NumberSeq::newGetNum(KMKnowledgeCollectorParameters::numRefCollectionAnswerId(), true, true);

                    if (!numberSeq)
                    {
                        throw error("@SYS31205");
                    }

                    select firstonly kmCollectionId, RecId from purchReqLineKmCollectionCheck
                        where purchReqLineKmCollectionCheck.PurchReqLine == purchReqLine.RecId
                        && purchReqLineKmCollectionCheck.kmCollectionId == _kmCollection.KmCollectionId
                        && purchReqLineKmCollectionCheck.kmCollectionIdDataArea == _kmCollection.DataAreaId;

                    if (purchReqLineKmCollectionCheck)
                    {
                        purchReqLineQuestionnaireResponseDelete.selectForUpdate(true);

                        while select purchReqLineQuestionnaireResponseDelete
                            where purchReqLineQuestionnaireResponseDelete.PurchReqLine == purchReqLine.RecId
                        {
                            select firstonly crosscompany kmVirtualNetworkAnswerTableCheck
                                where kmVirtualNetworkAnswerTableCheck.KmCollectionId == purchReqLineKmCollectionCheck.kmCollectionId
                                && kmVirtualNetworkAnswerTableCheck.KmVirtualNetworkAnswerTableId == purchReqLineQuestionnaireResponseDelete.kmVirtualNetworkAnswerTableId
                                && kmVirtualNetworkAnswerTableCheck.DataAreaId == purchReqLineQuestionnaireResponseDelete.kmVirtualNetworkAnswerTableIdDataArea;

                            if (kmVirtualNetworkAnswerTableCheck)
                            {
                                purchReqLineQuestionnaireResponseDelete.delete();
                            }
                        }

                        kmVirtualNetworkAnswerTableIdInsert = numberSeq.num();

                        select firstonly kmVirtualNetworkAnswerTableThis
                            where kmVirtualNetworkAnswerTableThis.KmVirtualNetworkAnswerTableId == _kmVirtualNetworkAnswerTableIdThis;

                        kmVirtualNetworkAnswerTableInsert.data(kmVirtualNetworkAnswerTableThis);
                        kmVirtualNetworkAnswerTableInsert.KmVirtualNetworkAnswerTableId = kmVirtualNetworkAnswerTableIdInsert;
                        kmVirtualNetworkAnswerTableInsert.insert();

                        while select kmVirtualNetworkAnswerLineThis
                            where kmVirtualNetworkAnswerLineThis.KmVirtualNetworkAnswerTableId == _kmVirtualNetworkAnswerTableIdThis
                        {
                            kmVirtualNetworkAnswerLineInsert.data(kmVirtualNetworkAnswerLineThis);
                            kmVirtualNetworkAnswerLineInsert.KmVirtualNetworkAnswerTableId = kmVirtualNetworkAnswerTableIdInsert;
                            kmVirtualNetworkAnswerLineInsert.insert();
                        }

                        select firstonly purchReqLineQuestionnaireResponseThis
                            where purchReqLineQuestionnaireResponseThis.kmVirtualNetworkAnswerTableId == _kmVirtualNetworkAnswerTableIdThis
                            && purchReqLineQuestionnaireResponseThis.kmVirtualNetworkAnswerTableIdDataArea == curext()
                            && purchReqLineQuestionnaireResponseThis.PurchReqLine == purchReqLineThis.RecId;

                        purchReqLineQuestionnaireResponseInsert.data(purchReqLineQuestionnaireResponseThis);
                        purchReqLineQuestionnaireResponseInsert.kmVirtualNetworkAnswerTableId = kmVirtualNetworkAnswerTableIdInsert;
                        purchReqLineQuestionnaireResponseInsert.PurchReqLine = purchReqLine.RecId;
                        purchReqLineQuestionnaireResponseInsert.insert();
                    }
                }

                ttscommit;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>