<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProcCategoryVendorsUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>VendRequestUIBuilder</c> class is the UI builder class for the <c>VendRequest</c> and
/// <c>VendRequestRejected</c>Microsoft SQL Server Reporting Services report.
/// </summary>

public class ProcCategoryVendorsUIBuilder extends SrsReportDataContractUIBuilder
{
    ProcCategoryVendorsContract         rdpContract;

    DialogField                         companyField;
    DialogField                         categoryField;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dialog box for the report.
    /// </summary>
    public void build()
    {
        rdpContract = this.dataContractObject() as ProcCategoryVendorsContract;

        companyField = this.addDialogField(methodStr(ProcCategoryVendorsContract, parmCompanyName), rdpContract);
        categoryField = this.addDialogField(methodStr(ProcCategoryVendorsContract, parmCategoryName), rdpContract);
        companyField.lookupButton(2);
        categoryField.lookupButton(2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the UI modified event for the category dialog box field.
    /// </summary>
    public void categoryLookup()
    {
        Query           query = new Query(querystr(ProcCategoryEcoResCategory));
        int             mutiSelectTableNum = tablenum(EcoResCategory);

        container selectedFields = [mutiSelectTableNum, fieldname2id(mutiSelectTableNum, fieldstr(EcoResCategory, Name))];

        SysLookupMultiSelectCtrl::constructWithQuery(this.dialog().dialogForm().formRun(), categoryField.control(), query, false, selectedFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>companyLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the UI modified event for the company dialog box field.
    /// </summary>
    public void companyLookup()
    {
        Query query              = new Query(querystr(ProcCategoryLegalEntity));
        int   mutiSelectTableNum = tablenum(ProcCategoryLegalEntityView);

        container selectedFields = [mutiSelectTableNum, fieldname2id(mutiSelectTableNum, fieldstr(ProcCategoryLegalEntityView, Name))];

        SysLookupMultiSelectCtrl::constructWithQuery(this.dialog().dialogForm().formRun(), companyField.control(), query, false, selectedFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Transfers data from the dialog box into the data contract object.
    /// </summary>
    public void getFromDialog()
    {
        super();
        
        List companyList  = this.getCompanyList(companyField.value());
        List categoryList = this.getCategoryList(categoryField.value());

        rdpContract.parmCompany(companyList);
        rdpContract.parmCategory(categoryList);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCompanyList</Name>
				<Source><![CDATA[
    internal List getCompanyList(str _companyValues)
    {
        List            companyList = new List(Types::Int64);
        ListEnumerator  companyListEnum = SRSReportHelper::ConvertStrToList(_companyValues).getEnumerator();

        while (companyListEnum.moveNext())
        {
            DirPartyTable companyEntityRecord;
            if (ProcCategoryGetLegalEntityFlight::instance().isEnabled())
            {
                companyEntityRecord = DirPartyTable::findByName(companyListEnum.current(), DirPartyType::LegalEntity);
            }
            else
            {
                companyEntityRecord = DirPartyTable::findByName(companyListEnum.current());
            }

            companyList.addEnd(companyEntityRecord.RecId);
        }

        return companyList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryList</Name>
				<Source><![CDATA[
    internal List getCategoryList(str _categoryValues)
    {
        List           categoryList = new List(Types::Int64);
        ListEnumerator categoryListEnum = SRSReportHelper::ConvertStrToList(_categoryValues).getEnumerator();

        EcoResCategory ecoResCategory;
        while (categoryListEnum.moveNext())
        {
            while select RecId from ecoResCategory
                where ecoResCategory.Name == categoryListEnum.current()
            {
                categoryList.addEnd(ecoResCategory.RecId);
            }
        }

        return categoryList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Registers the method override in order to capture dialog box events.
    /// </summary>
    public void postRun()
    {
        dialog.dialogForm().formRun().controlMethodOverload(false);
        this.categoryLookup();
        this.companyLookup();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>