<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgShopSupervisorWorkspaceFilterStructureStrategyWrkCtr</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorMyProdJobListQuery)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgProdJobSummaryQuery)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorMyScheduledOrders)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorMyScheduledOrdersV2)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorNotOnOpenWave)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorNotOnOpenWaveV2)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorUnprocessedWaves)),
 SysFilterExtension(SysQueryableTypeEnum::Query, SysFilterValueTypeEnum::String, queryStr(JmgShopSupervisorUnprocessedWork))]
public class JmgShopSupervisorWorkspaceFilterStructureStrategyWrkCtr extends SysFilterStructureStrategyQuery implements SysIFilterStructureStrategy
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>resolve</Name>
				<Source><![CDATA[
    protected boolean resolve(SysIFilterValueType _filterValueType)
    {
        const str resourceDSName = 'JmgShopSupervisorWorkspaceFilterDS';
        const str resourceGroupDSName = 'JmgShopSupervisorWorkspaceResGrpFilterDS';

        int tableId;
        int fieldId;
        str dataSourceName;

        if (_filterValueType.parmTypeIdentifier() == ExtendedTypenum(WrkCtrId))
        {
            dataSourceName = resourceDSName;
            if (query.name() == queryStr(JmgShopSupervisorMyScheduledOrders)
            ||  query.name() == queryStr(JmgShopSupervisorMyScheduledOrdersV2)
            ||  query.name() == queryStr(JmgShopSupervisorNotOnOpenWave)
            ||  query.name() == queryStr(JmgShopSupervisorNotOnOpenWaveV2)
            ||  query.name() == queryStr(JmgShopSupervisorUnprocessedWaves)
            ||  query.name() == queryStr(JmgShopSupervisorUnprocessedWork))
            {
                tableId = tableNum(WrkCtrResourceAndGroupView);
                fieldId = fieldNum(WrkCtrResourceAndGroupView, WrkCtrId);
            }
            else
            {
                tableId = tableNum(JmgProdJobListView);
                fieldId = fieldNum(JmgProdJobListView, WrkCtrId);
            }
        }
        else if (_filterValueType.parmTypeIdentifier() == ExtendedTypenum(WrkCtrGroupId))
        {
            dataSourceName = resourceGroupDSName;
            if (query.name() == queryStr(JmgShopSupervisorMyScheduledOrders)
            ||  query.name() == queryStr(JmgShopSupervisorMyScheduledOrdersV2)
            ||  query.name() == queryStr(JmgShopSupervisorNotOnOpenWave)
            ||  query.name() == queryStr(JmgShopSupervisorNotOnOpenWaveV2)
            ||  query.name() == queryStr(JmgShopSupervisorUnprocessedWaves)
            ||  query.name() == queryStr(JmgShopSupervisorUnprocessedWork))
            {
                tableId = tableNum(WrkCtrResourceAndGroupView);
                fieldId = fieldNum(WrkCtrResourceAndGroupView, WrkCtrIdGroup);
            }
            else
            {
                tableId = tableNum(JmgProdJobListView);
                fieldId = fieldNum(JmgProdJobListView, ResourceGroup);
            }
        }
        else
        {
            return true;
        }

        QueryBuildDataSource resourceDS = query.dataSourceName(dataSourceName);
        if (resourceDS == null)
        {
            QueryBuildDataSource jobDS = query.dataSourceTable(tableId);
            resourceDS = jobDS.addDataSource(tableNum(WrkCtrTable));
            resourceDS.name(dataSourceName);
            resourceDS.joinMode(JoinMode::ExistsJoin);
            resourceDS.addLink(fieldId, fieldNum(WrkCtrTable, WrkCtrId));
            resourceDS.fields().dynamic(false);
            resourceDS.fields().clearFieldList();
        }

        this.addLinkFromTableToFilter(resourceDS, fieldNum(WrkCtrTable, WrkCtrId));

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>