<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerProvisionsDP_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>LedgerProvisionsDP_SA</c> class is the Report Data Provider class that supports the
///    <c>LedgerProvisions_SA</c> report.
/// </summary>
/// <remarks>
///    This class provides the methods that are used by the <c>LedgerProvisions_SA</c> report.
/// </remarks>
[
    SRSReportParameterAttribute(classstr(LedgerZakatReportContract_SA))
]
public class LedgerProvisionsDP_SA extends SrsReportDataProviderPreProcessTempDB
{
    // source of report data
    GeneralJournalAccountEntryZakat_SA      generalJournalAccountEntryZakat;
    GeneralJournalAccountEntry              generalJournalAccountEntry;

    // temporary data store
    LedgerProvisionsTmp_SA                  ledgerProvisionsTmp;

    // Report parameters
    LedgerFiscalYearZakat_SA                fiscalYear;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLedgerProvisionsTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Queries the <c>LedgerProvisionsTmp_SA</c> table and returns the data table.
    /// </summary>
    /// <returns>
    ///    The required report data table.
    /// </returns>
    [SRSReportDataSetAttribute('LedgerProvisionsTmp')]
    public LedgerProvisionsTmp_SA getLedgerProvisionsTmp()
    {
        select * from ledgerProvisionsTmp;
        return ledgerProvisionsTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertLedgerProvisionsTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts data into the temporary table.
    /// </summary>
    public void insertLedgerProvisionsTmp()
    {
        MainAccountRecId mainAccountRecId;

        mainAccountRecId = generalJournalAccountEntry.MainAccount;

        // write the relevant field data to the temporary data store
        ledgerProvisionsTmp.AccountName         = MainAccount::find(mainAccountRecId).localizedName();
        ledgerProvisionsTmp.OpeningBal          = GeneralJournalAccountEntryZakat_SA::findOpeningBalance(generalJournalAccountEntry.RecId, fiscalYear, generalJournalAccountEntryZakat.ItemCode);
        ledgerProvisionsTmp.Additions           = GeneralJournalAccountEntryZakat_SA::getCrAmountFromAccountNum(LedgerItemTypeZakat_SA::ReservationsAndProvisions, fiscalYear, mainAccountRecId);
        ledgerProvisionsTmp.Deductions          = GeneralJournalAccountEntryZakat_SA::getDrAmountFromAccountNum(LedgerItemTypeZakat_SA::ReservationsAndProvisions, fiscalYear, mainAccountRecId);
        ledgerProvisionsTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic.
    /// </summary>
    /// <remarks>
    ///    This method is used to process the report business logic that is used by the
    ///    <c>LedgerProvisions_SA</c> report.
    /// </remarks>
    public void processReport()
    {
        LedgerItemCodeZakat_SA ledgerItemCode;

        // access the Report Data Contract information
        LedgerZakatReportContract_SA contract = this.parmDataContract() as LedgerZakatReportContract_SA;

        // retrieve the contract control parameters
        fiscalYear = contract.parmFiscalYear();

        while select generalJournalAccountEntryZakat
            group by ItemCode
                where generalJournalAccountEntryZakat.FiscalYr == fiscalYear
            join maxof(RecId), MainAccount from generalJournalAccountEntry
            group by MainAccount
                where generalJournalAccountEntry.RecId == generalJournalAccountEntryZakat.GeneralJournalAccountEntry
            join ItemCode, ItemType from ledgerItemCode
                where ledgerItemCode.ItemCode == generalJournalAccountEntryZakat.ItemCode &&
                      ledgerItemCode.ItemType == LedgerItemTypeZakat_SA::ReservationsAndProvisions
        {
            // insert a record into the temporary table buffer
            this.insertLedgerProvisionsTmp();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>