<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rPayJournalFormTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class rPayJournalFormTable extends JournalFormTable
{
    FormFunctionButtonControl    ctrlPaySumModule;
    FormFunctionButtonControl    ctrlPayReverse;
    FormFunctionButtonControl    ctrlShowReverse;
    FormFunctionButtonControl    ctrlUnPostJournal;
    FormFunctionButtonControl    ctrlRPayJournalFromOrder;
    QueryBuildRange              criteriaRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>datasourceExecuteQueryPre</Name>
				<Source><![CDATA[
        public void datasourceExecuteQueryPre()
    {
        RPayJournalTable payJournalTableLoc;
        RPayJournalTrans payJournalTrans;
        TransLink_RU     transLink;
        container        transCon;
        container        journalCon;
        int              i;

        super();

        if (formRun.args().dataset() == tableNum(RPayJournalTable))
        {
            payJournalTableLoc = formRun.args().record();

            while select payJournalTrans
                where payJournalTrans.JournalId == payJournalTableLoc.JournalId
            exists join transLink
                where transLink.RefTableId == payJournalTrans.TableId &&
                      transLink.RefPri     == payJournalTrans.RecId   &&
                      transLink.RefSec     == payJournalTrans.RecId
            {
                transCon = TransLink_RU::rpayGetReverseInCon(payJournalTrans, transCon);
            }

            for (i=1; i<=conLen(transCon); i++)
            {
                payJournalTableLoc = RPayJournalTable::find(RPayJournalTrans::findRecId(conPeek(transCon,i)).JournalId);
                journalCon = conPoke(journalCon, conLen(journalCon) + 1, payJournalTableLoc.RecId);
            }

            criteriaRecId.value(con2Str(journalCon));

            journalTable_ds.query().dataSourceTable(tableNum(RPayJournalTable)).clearDynalinks();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>datasourceInitPost</Name>
				<Source><![CDATA[
        void datasourceInitPost(JournalTableMap _journalTable)
    {
        super(_journalTable);

        criteriaRecId   = journalTable_ds.query().dataSourceNo(1).addRange(fieldNum(RPayJournalTable, RecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>enableButtonsActive</Name>
				<Source><![CDATA[
        public void enableButtonsActive(boolean _enableInfolog = true)
    {
        RPayJournalTrans payJournalTransLoc;
        TransLink_RU     transLink;
        boolean          allowReverse;

        boolean enabled = journalTableData.blockLevel() == JournalBlockLevel::None  && !formRunLines && journalTable.JournalNameId;
        RPayJournalTable rPayJournalTable = journalTableData.journalTable();

        super(_enableInfolog);

        ctrlPaySumModule.enabled((journalTable.Posted ? NoYes::Yes : NoYes::No));

        if (ctrlUnPostJournal)
        {
            ctrlUnPostJournal.enabled(enabled && journalTable.Posted);
        }

        if (ctrlRPayJournalFromOrder)
        {
            ctrlRPayJournalFromOrder.enabled(rPayJournalTable.rhrmOrderTable != 0);
        }

        select firstonly RecId from payJournalTransLoc
            where payJournalTransLoc.JournalId == journalTable.JournalId
        exists join transLink
            where transLink.RefPri == payJournalTransLoc.RecId &&
                  transLink.RefSec == payJournalTransLoc.RecId &&
                  transLink.RefTableId == payJournalTransLoc.TableId;

        allowReverse = (payJournalTransLoc.RecId == 0);

        if (ctrlPayReverse)
        {
            ctrlPayReverse.enabled(journalTable.Posted && allowReverse);
        }
        ctrlShowReverse.enabled(!allowReverse);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPayReverse</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormFunctionButtonControl parmCtrlPayReverse(FormFunctionButtonControl _ctrlPayReverse = ctrlPayReverse)
    {
        ctrlPayReverse =  _ctrlPayReverse;
        return  ctrlPayReverse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlPaySumModule</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormFunctionButtonControl parmCtrlPaySumModule(FormFunctionButtonControl _ctrlPaySumModule = ctrlPaySumModule)
    {
        ctrlPaySumModule = _ctrlPaySumModule;
        return  ctrlPaySumModule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmctrlRPayJournalFromOrder</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormFunctionButtonControl parmctrlRPayJournalFromOrder(FormFunctionButtonControl _ctrlRPayJournalFromOrder = ctrlRPayJournalFromOrder)
    {
        ctrlRPayJournalFromOrder = _ctrlRPayJournalFromOrder;
        return ctrlRPayJournalFromOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlShowReverse</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormFunctionButtonControl parmCtrlShowReverse(FormFunctionButtonControl _ctrlShowReverse = ctrlShowReverse)
    {
        ctrlShowReverse =  _ctrlShowReverse;
        return  ctrlShowReverse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCtrlUnPostJournal</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public FormFunctionButtonControl parmCtrlUnPostJournal(FormFunctionButtonControl _unPostJournal = ctrlUnPostJournal)
    {
        ctrlUnPostJournal = _unPostJournal;
        return ctrlUnPostJournal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>