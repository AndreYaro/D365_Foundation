<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchReqPurchaseOrderGenerationRuleCache</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PurchReqPurchaseOrderGenerationRuleCache</c> class provides a mechanism to ensure that the in-memory cache
/// is only enabled within <c>PurchReqConsolidationAddLine</c> for last used <c>PurchReqPurchaseOrderGenerationRule</c>
/// and its policy.
/// </summary>
internal final class PurchReqPurchaseOrderGenerationRuleCache implements System.IDisposable
{
    private static PurchReqPurchaseOrderGenerationRuleCache singleton = null;

    private RefRecId lastPolicyRuleId = 0;
    private PurchReqConsolidationRule lastPolicy;
    private RefRecId lastBuyingLegalEntity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void Dispose()
    {
        singleton = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PurchReqPurchaseOrderGenerationRuleCache construct()
    {
        if (singleton)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        singleton = new PurchReqPurchaseOrderGenerationRuleCache();

        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exists</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static boolean exists()
    {
        return singleton != null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByRule</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public PurchReqConsolidationRule findByRule(RefRecId _policyRuleId)
    {
        if (_policyRuleId == lastPolicyRuleId)
        {
            return lastPolicy;
        }

        lastPolicyRuleId = _policyRuleId;
        lastPolicy = PurchReqConsolidationRule::findByRule(lastPolicyRuleId);

        return lastPolicy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        // Hide the constructor
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static PurchReqPurchaseOrderGenerationRuleCache current()
    {
        return singleton;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPolicy</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void initPolicy(PurchReqPurchaseOrderGenerationRule _purchReqPurchaseOrderGenerationRule)
    {
        PurchReqLine purchReqLine = _purchReqPurchaseOrderGenerationRule.getPurchReqLine();

        if (purchReqLine
            && purchReqLine.BuyingLegalEntity == lastBuyingLegalEntity)
        {
            _purchReqPurchaseOrderGenerationRule.parmPolicyRuleId(lastPolicyRuleId);
            return;
        }

        _purchReqPurchaseOrderGenerationRule.initPolicy();
        lastBuyingLegalEntity = purchReqLine.BuyingLegalEntity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>