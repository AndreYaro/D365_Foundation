<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetReservationWorkflowCancel_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetReservationWorkflowCancel_PSN</c> class is used to cancel a general budget reservation workflow.
/// </summary>
/// <remarks>
/// This class inherits from the <c>WorkflowCancelManager</c> class and handles the update of the general budget reservation
/// record when the cancel button has been clicked. The general budget reservation is updated to a
/// pending cancellation status and this is presented to the user immediately. The default dialog box
/// and cancel functionality from the <c>WorkflowCancelManager</c> class is reused.
/// </remarks>
public class BudgetReservationWorkflowCancel_PSN extends WorkflowCancelManager
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the <c>WorkflowCancelDialog</c> class to surface a cancel dialog box and performs the
    /// cancellation logic for the selected workflow instance or instances.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the <c>WorkflowCancelManager</c> class.
    /// </param>
    /// <exception cref="Exception::Error">
    /// The specified arguments are null.
    /// </exception>    
    public void run(Args _args)
    {
        if (!_args)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }
    
        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the general budget reservation document and workflow statuses for the cancel action.
    /// </summary>
    /// <param name="_args">
    /// The arguments for the <c>BudgetReservationWorkflowCancel_PSN</c> class.
    /// </param>    
    public void updateDocument(Args _args)
    {
        BudgetReservationHeader_PSN budgetReservationHeader;
        budgetReservationHeader = _args.record() as BudgetReservationHeader_PSN;
    
        BudgetReservation_PSN       budgetReservation;
        budgetReservation = BudgetReservation_PSN::newFromBudgetReservationHeader_PSN(budgetReservationHeader);
    
        if (budgetReservationHeader)
        {
            budgetReservation.updateDocumentStatusFields(BudgetReservationDocumentAction_PSN::WorkflowRecall);
    
            if (FormDataUtil::getFormDataSource(budgetReservationHeader))
            {
                FormDataSource budgetReservationHeader_PSN_ds;

                // Update the data source when called from a client form.
                budgetReservationHeader_PSN_ds = FormDataUtil::getFormDataSource(budgetReservationHeader);
                budgetReservationHeader_PSN_ds.research(true);
            }
        }    
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>BudgetReservationWFCancelManager_PSN</c> class.
    /// </summary>
    /// <returns>
    /// An instance of the <c>BudgetReservationWFCancelManager_PSN</c> class.
    /// </returns>    
    public static BudgetReservationWorkflowCancel_PSN construct()
    {
        return new BudgetReservationWorkflowCancel_PSN();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the primary method to be invoked via the selection of a menu item.
    /// </summary>
    /// <param name="_args">
    /// Menu item arguments.
    /// </param>    
    public static void main(Args _args)
    {
        BudgetReservationWorkflowCancel_PSN   workflowCancelManager = BudgetReservationWorkflowCancel_PSN::construct();
    
        workflowCancelManager.run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>