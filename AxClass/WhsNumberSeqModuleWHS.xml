<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsNumberSeqModuleWHS</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsNumberSeqModuleWHS</c> is used to setup number sequences for WHS module.
/// </summary>
public class WhsNumberSeqModuleWHS extends NumberSeqApplicationModule
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadModule</Name>
				<Source><![CDATA[
    protected void loadModule()
    {
        NumberSeqDatatype  dataType = NumberSeqDatatype::construct();

        /* Setup Load Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSLoadId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX259"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Shipment Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSShipmentId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX274"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Work Trans Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWorkTransId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX285"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Work Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWorkId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX272"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Work Voucher Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSInventVoucherId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX646"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* License Plate Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSLicensePlateId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX66"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Label Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSLabelId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX917"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Work Creation Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWorkCreateId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX1183"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Work Grouping Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWorkGroupingId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX1224"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Wave Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWaveId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX1495"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Release To Warehouse Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSReleaseToWarehouseId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX1888"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Bill of Lading Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSBillOfLadingId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX415"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Container Trans Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSContainerTransId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX2860"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Temporary Tote Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSTmpToteId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX2491"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Wave Execution Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWaveExecutionID));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX3234"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Cluster Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSClusterId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX3584"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Container Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSContainerId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX1421"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Container Build Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSContainerBuildId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX3745"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(9999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Receipt Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSReceiptId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX5544"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(9999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Return label Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSReturnID));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:WHSReturnIDNumSeqId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(9999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* External inventory adjustment Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSExternalInventoryAdjustmentId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:WHSExternalInventoryAdjustmentIdNumSeqId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(9999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Cross dock Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSCrossDockId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:CrossDockIdentifier"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(9999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Catch Weight Tag Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSCatchWeightTagNumber));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSCatchWeight));
        dataType.parmReferenceHelp(literalStr("@WAX:CatchWeightTagNumberHelpText"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Wave label Id */
        dataType.parmDatatypeId(extendedTypeNum(WHSWaveLabelId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:WaveLabelNumSeqId"));
        dataType.parmWizardIsContinuous(true);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Multimodal Dangerous Goods Id */
        dataType.parmDatatypeId(extendedTypeNum(HMIMMultimodalDGId));
        dataType.parmConfigurationKeyId(configurationKeyNum(HMIMManagement));
        dataType.parmReferenceHelp(literalStr("@SCM:MultimodalDGNumSeqId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Carriage of Merchandise by Road Id */
        dataType.parmDatatypeId(extendedTypeNum(HMIMCarrOfMerchByRoadId));
        dataType.parmConfigurationKeyId(configurationKeyNum(HMIMManagement));
        dataType.parmReferenceHelp(literalStr("@SCM:CarrOfMerchByRoadNumSeqId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Shipper's Declaration AirWaybill Num */
        dataType.parmDatatypeId(extendedTypeNum(HMIMAirWaybillNum));
        dataType.parmConfigurationKeyId(configurationKeyNum(HMIMManagement));
        dataType.parmReferenceHelp(literalStr("@SCM:ShipperDeclarationNumSeqId"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(10);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Inventory Pick Number */
        dataType.parmDatatypeId(extendedTypeNum(WhsLoadLineInventoryPickId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:LoadLineInventoryPickHelp"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(50);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);

        /* Setup Inventory Receipt Number */
        dataType.parmDatatypeId(extendedTypeNum(WhsLoadLineInventoryReceiptId));
        dataType.parmConfigurationKeyId(configurationKeyNum(WHSandTMS));
        dataType.parmReferenceHelp(literalStr("@WAX:LoadLineInventoryReceiptHelp"));
        dataType.parmWizardIsContinuous(false);
        dataType.parmWizardIsManual(NoYes::No);
        datatype.parmWizardFetchAheadQty(50);
        dataType.parmWizardIsChangeDownAllowed(NoYes::No);
        dataType.parmWizardIsChangeUpAllowed(NoYes::No);
        dataType.parmWizardLowest(1);
        dataType.parmWizardHighest(999999999);
        dataType.parmSortField(1);
        dataType.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(dataType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberSeqModule</Name>
				<Source><![CDATA[
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::WHS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildModulesMapSubsciber</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(WhsNumberSeqModuleWHS), numberSeqModuleNamesMap);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>