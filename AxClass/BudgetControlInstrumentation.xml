<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlInstrumentation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.BudgetControl.Instrumentation;

/// <summary>
/// The <c>BudgetControlInstrumentation</c> class is responsible for creating telemetry events for budget control.
/// </summary>
internal class BudgetControlInstrumentation
{
    private static BudgetControlEventSource log = BudgetControlEventSource::Log;
    private guid correlationId;
    private SysInstrumentationLogger budgetControlInstrumentationLogger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>budgetControlInstrumentationLoggerWriteInfo</Name>
				<Source><![CDATA[
    internal void budgetControlInstrumentationLoggerWriteInfo(str _info)
    {
        budgetControlInstrumentationLogger.logInformation(_info);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeBudgetCheckProcessingStart</Name>
				<Source><![CDATA[
    internal void writeBudgetCheckProcessingStart(boolean _isConfirmation, int _budgetSourcesToRemove, int _budgetSourcesToReturnRemaining, int _budgetCheckRequestsToProcess)
    {
        log.BudgetCheckProcessingStart(_isConfirmation, _budgetSourcesToRemove, _budgetSourcesToReturnRemaining, _budgetCheckRequestsToProcess, correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeBudgetCheckProcessingStop</Name>
				<Source><![CDATA[
    internal void writeBudgetCheckProcessingStop(int64 _budgetCheckGroup)
    {
        log.BudgetCheckProcessingStop(_budgetCheckGroup, correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeBudgetCheckProcessingFailed</Name>
				<Source><![CDATA[
    internal void writeBudgetCheckProcessingFailed(int64 _budgetCheckGroup)
    {
        log.BudgetCheckProcessingFailed(_budgetCheckGroup, correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeStoredProcedureExecutionStart</Name>
				<Source><![CDATA[
    internal void writeStoredProcedureExecutionStart(int64 _budgetCheckGroup)
    {
        log.StoredProcedureExecutionStart(_budgetCheckGroup, correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeStoredProcedureExecutionStop</Name>
				<Source><![CDATA[
    internal void writeStoredProcedureExecutionStop()
    {
        log.StoredProcedureExecutionStop(correlationId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static BudgetControlInstrumentation construct()
    {
        BudgetControlInstrumentation budgetControlInstrumentation = new BudgetControlInstrumentation();
        budgetControlInstrumentation.correlationId = newGuid();
        BudgetControlInstrumentation.budgetControlInstrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(classStr(BudgetControlProcessor));
        
        return budgetControlInstrumentation;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>