<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionMerge</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>DimensionMerge</c> class merges two default dimensions into a single default dimension.
/// </summary>
// This is a framework class. Customizing this class may cause problems with future upgrades to the software.
abstract class DimensionMerge
{
    DimensionDefaultMap         dimensionDefaultMap;

    LegalEntityRecId            legalEntityRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>merge</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a dimension attribute value set that contains the combination of the provided input
    ///    parameters.
    /// </summary>
    /// <param name="_defaultDimension1">
    ///    The primary default dimension that is used to merge.
    /// </param>
    /// <param name="_defaultDimension2">
    ///    The secondary default dimension that is used to merge.
    /// </param>
    /// <returns>
    ///    A dimension attribute value set that contains the combination of the provided input parameters.
    /// </returns>
    abstract public DimensionDefault merge(
        DimensionDefault _defaultDimension1,
        DimensionDefault _defaultDimension2
        )
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionDefaultMap</Name>
				<Source><![CDATA[
    protected DimensionDefaultMap parmDimensionDefaultMap(DimensionDefaultMap _dimensionDefaultMap = dimensionDefaultMap)
    {
        dimensionDefaultMap = _dimensionDefaultMap;

        return dimensionDefaultMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLegalEntityRecId</Name>
				<Source><![CDATA[
    protected LegalEntityRecId parmLegalEntityRecId(LegalEntityRecId _legalEntityRecId = legalEntityRecId)
    {
        legalEntityRecId = _legalEntityRecId;

        return legalEntityRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCommon</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>DimensionMerge</c> instance from a common object.
    /// </summary>
    /// <param name = "_common">
    /// The common object containing the default map.
    /// </param>
    /// <param name = "_legalEntityRecId">
    /// The record ID of the legal entity associated with the dimensions.
    /// </param>
    /// <returns>
    /// A new <c>DimensionMerge</c> instance.
    /// </returns>
    public static DimensionMerge newFromCommon(
        Common              _common,
        LegalEntityRecId    _legalEntityRecId
        )
    {
        DimensionDefaultMap dimensionDefaultMap;

        if (!SysDictTable::isTableMapped(tableNum(DimensionDefaultMap), _common.TableId))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        dimensionDefaultMap = _common;

        return DimensionMerge::newFromTable(dimensionDefaultMap, _legalEntityRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c>DimensionMerge</c> instance from a dimension default map.
    /// </summary>
    /// <param name = "_dimensionDefaultMap">
    /// The dimension default map.
    /// </param>
    /// <param name = "_legalEntityRecId">
    /// The record ID of the legal entity associated with the dimensions.
    /// </param>
    /// <returns>
    /// A new <c>DimensionMerge</c> instance.
    /// </returns>
    public static DimensionMerge newFromTable(
        DimensionDefaultMap _dimensionDefaultMap,
        LegalEntityRecId    _legalEntityRecId
        )
    {
        DimensionMerge      dimensionMerge = null;

        if (!_legalEntityRecId)
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        dimensionMerge = DimensionMergeAll::newStandard();
        dimensionMerge.parmDimensionDefaultMap(_dimensionDefaultMap);
        dimensionMerge.parmLegalEntityRecId(_legalEntityRecId);

        return dimensionMerge;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>