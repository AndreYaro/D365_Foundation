<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdRouteJobForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>ProdRouteJobForm</c> class implements the rules for enabling and disabling the Material
///    Consumption button.
/// </summary>
/// <remarks>
///    This is the helper class for jobs table forms (list page and task page).
/// </remarks>
class ProdRouteJobForm implements ButtonStateProvider
{
    ProdRouteJob        prodRouteJob;
    FormDataSource      prodRouteJob_ds;
    Map                 prodRouteJobCache;

    Map                 prodBOMLookupCache;

    #define.materialComsumptionImage(7690)
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkButtonRule</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks a button rule.
    /// </summary>
    /// <param name="_ruleMethodName">
    ///    A string that specifies which rule method should be called to evaluate a certain rule.
    /// </param>
    /// <returns>
    ///    false always.
    /// </returns>
    /// <remarks>
    ///    This method must be implemented since <c>RouteTableForm</c> implements <c>ButtonStateProvider</c>.
    ///    This method always returns false because the <c>RouteTableForm</c> class does not require any
    ///    special handling of the rule evaluation methods.
    /// </remarks>
    public boolean checkButtonRule(str _ruleMethodName)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkIsMaterialConsumtion</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Implements the rule code for enabling and disabling the Materials button.
    /// </summary>
    /// <returns>
    ///    true if the material is consumed; otherwise, false.
    /// </returns>
    public boolean checkIsMaterialConsumtion()
    {
        return this.materialConsumption(prodRouteJob) == #materialComsumptionImage ? true: false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkRuleRecordExists</Name>
				<Source><![CDATA[
    public boolean checkRuleRecordExists()
    {
        return prodRouteJob ? true : false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearCache</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Performs special actions regarding clearing advanced cache for the <c>RouteTableForm</c> class.
    /// </summary>
    /// <remarks>
    ///    Because no advanced caching is implemented in the <c>RouteTableForm</c>, the method is empty.
    /// </remarks>
    public void clearCache()
    {
        prodRouteJob_ds.leaveRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>determineButtonStates</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Implements special actions needed by the <c>RouteTableForm</c> class regarding rule evaluation.
    /// </summary>
    /// <param name="_ruleFunctionName">
    ///    A string that specifies the method name for the rule being evaluated
    /// </param>
    /// <remarks>
    ///    Because no advanced caching is implemented in the <c>RouteTableForm</c>, the method is empty.
    /// </remarks>
    public void determineButtonStates(str _ruleFunctionName)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>materialConsumption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Computes whether material is consumed in a specified job.
    /// </summary>
    /// <param name="_prodRouteJob">
    ///    A <c>prodRouteJob</c> table buffer that specifies the job to test for material consumption.
    /// </param>
    /// <returns>
    ///    true if the material is consumed; otherwise, false.
    /// </returns>
    public ImageRes materialConsumption(ProdRouteJob _prodRouteJob)
    {
        boolean         ret = false;
        ProdBOM         prodBOMtmp;
        if (_prodRouteJob.JobType == RouteJobType::Process)
        {
            if (prodBOMLookupCache.exists(_prodRouteJob))
            {
                ret =  prodBOMLookupCache.lookup(_prodRouteJob) == NoYes::Yes ? true : false;
            }
            else
            {
                select firstonly prodBOMtmp
                    where   prodBOMtmp.ProdId == _prodRouteJob.ProdId &&
                            prodBOMtmp.OprNum == _prodRouteJob.OprNum;
                if (prodBOMtmp)
                {
                    prodBOMLookupCache.insert(_prodRouteJob, NoYes::Yes);
                    ret = true;
                }
                else
                {
                    prodBOMLookupCache.insert(_prodRouteJob, NoYes::No);
                    ret = false;
                }
            }
        }
        return ret ? #materialComsumptionImage : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        prodRouteJobCache = new Map(Types::Record, Types::Integer);
        prodBOMLookupCache = new Map(Types::Record, Types::Enum);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDatasources</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Passes the <c>ProdRouteJob</c> table buffer from the caller form.
    /// </summary>
    /// <param name="_datasource1">
    ///    Empty.
    /// </param>
    /// <param name="_datasource2">
    ///    Empty; optional.
    /// </param>
    /// <param name="_datasource3">
    ///    Empty; optional.
    /// </param>
    /// <param name="_datasource4">
    ///    Empty; optional.
    /// </param>
    /// <param name="_datasource5">
    ///    Empty; optional.
    /// </param>
    public void setDatasources(
        Common _datasource1,
        Common _datasource2 = null,
        Common _datasource3 = null,
        Common _datasource4 = null,
        Common _datasource5 = null)
    {
        prodRouteJob = _datasource1;
        prodRouteJob_ds = FormDataUtil::getFormDataSource(prodRouteJob);

        if (!prodRouteJob_ds)
        {
            checkFailed(strfmt("@SYS117974", classId2Name(classidget(this))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProdRouteJobForm construct()
    {
        ProdRouteJobForm prodRouteJobForm = new ProdRouteJobForm();
        return prodRouteJobForm;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
