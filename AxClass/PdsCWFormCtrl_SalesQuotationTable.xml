<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsCWFormCtrl_SalesQuotationTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Classes adds a new layer below the PdsCWFormCtrl to allow the independent call
/// to valiadtion of CW qtys
/// </summary>
/// <remarks>
/// This class extends the parent PdsCWFormCtrl class. The class will call the
/// standard catch weight validation
/// </remarks>
class PdsCWFormCtrl_SalesQuotationTable extends PdsCWFormCtrl_Std
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dataSourceActivePost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update form datasource after 'active' call for datasource
    /// </summary>
    /// <remarks>
    /// Method also calls the Form control button manager.
    /// </remarks>
    public void dataSourceActivePost()
    {
        super();

        this.refreshManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerCtrlRules</Name>
				<Source><![CDATA[
    protected void registerCtrlRules()
    {
        super();

        if (this.isPmfEnabled())
        {
            this.registerPmfEnabledCtrlRules();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>registerPmfEnabledCtrlRules</Name>
				<Source><![CDATA[
    protected void registerPmfEnabledCtrlRules()
    {
        this.registerCtrlRuleNoGroup(
                formRun.design().controlName(formControlStr(SalesQuotationTable,BOMPriceCalc)),
                methodstr(PmfFormCtrl, isPmfEnabled),
                ButtonRuleEffectType::Text,
                "@PRO920");
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();

        this.parmFieldIds(PdsCWValidation::fieldMapFromContainers(
                [[fieldnum(SalesQuotationLine,SalesQty),
                  fieldnum(SalesQuotationLine, PdsCWQty),
                  false,
                  fieldnum(SalesQuotationLine, SalesUnit)],
                 [fieldnum(SalesQuotationLine, SalesDeliverNow),
                  fieldnum(SalesQuotationLine, PdsCWDeliverNow),
                  false,
                  fieldnum(SalesQuotationLine, SalesUnit)],
                 [fieldnum(SalesQuotationLine, RemainSalesPhysical),
                  fieldnum(SalesQuotationLine, PdsCWRemainInventPhysical),
                  false,
                  fieldnum(SalesQuotationLine, SalesUnit)]
                  ]
                ));
        this.parmItemFieldId(fieldnum(SalesQuotationLine, ItemId));
        this.parmUnitMethodStr(tablemethodstr(SalesQuotationLine, pdsCWUnitId));

        formButtonManager = FormButtonManager::construct();
        formButtonManager.parmRuleImplementer(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDatasources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the datasources that are to be used in the rule computation process.
    /// </summary>
    /// <param name="_datasources1">
    /// A table buffer (Common) belonging to the 1st datasource instance.
    /// </param>
    /// <param name="_datasources2">
    /// A table buffer (Common) belonging to the 2nd datasource instance.
    /// </param>
    /// <param name="_datasources3">
    /// A table buffer (Common) belonging to the 3rd datasource instance.
    /// </param>
    /// <param name="_datasources4">
    /// A table buffer (Common) belonging to the 4th datasource instance.
    /// </param>
    /// <param name="_datasources5">
    /// A table buffer (Common) belonging to the 5th datasource instance.
    /// </param>
    /// <remarks>
    /// Up to 5 datasources can be passed. If the implementation requires more datasources additional custom methods should be implemented on the rule implementer class.
    /// The method is called by FormButtonManager on the rule class implementing the ButtonStateProvider interface.
    /// </remarks>
    public void setDatasources(
        Common _datasources1,
        Common _datasources2 = null,
        Common _datasources3 = null,
        Common _datasources4 = null,
        Common _datasources5 = null)
    {
        if (_datasources1.TableId != tablenum(SalesQuotationLine))
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        if (_datasources2.TableId != tablenum(SalesQuotationTable))
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        super(
            _datasources1,
            _datasources2,
            _datasources3,
            _datasources4,
            _datasources5);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    public void updateDesign()
    {
        // The enable/disable of the form fields is handled elsewhere
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of the PdsCWFormCtrl_SalesQuotationTable class.
    /// </summary>
    /// <returns>
    /// New instance of the PdsCWFormCtrl_SalesQuotationTable class.
    /// </returns>
    /// <remarks>
    /// <syntax>
    /// public static PdsCWFormCtrl_SalesQuotationTable construct()
    /// </syntax>
    /// </remarks>
    public static PdsCWFormCtrl_SalesQuotationTable construct()
    {
        return new PdsCWFormCtrl_SalesQuotationTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a new instance of thelass PdsCWFormCtrl_SalesQuotationTable
    /// using the FormRun parameter.
    /// </summary>
    /// <param name="_fr">
    /// FormRun object that the class controls.
    /// </param>
    /// <returns>
    /// New instance of PdsCWFormCtrl_SalesQuotationTable class.
    /// </returns>
    public static PdsCWFormCtrl_SalesQuotationTable newFromForm(
        FormRun _fr)
    {
        PdsCWFormCtrl_SalesQuotationTable   frmCtrl;

        frmCtrl = PdsCWFormCtrl_SalesQuotationTable::construct();
        frmCtrl.parmFormRun(_fr);

        return frmCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>