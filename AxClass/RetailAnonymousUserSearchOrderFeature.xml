<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailAnonymousUserSearchOrderFeature</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure;
using Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.Implementation;

/// <summary>
/// The <c>RetailAnonymousUserSearchOrderFeature</c> represents the feature management for Anonymous Users Order search capability.
/// </summary>
[Export(identifierStr(Microsoft.Dynamics.ApplicationPlatform.FeatureExposure.IFeatureMetadata))]
[Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
internal final class RetailAnonymousUserSearchOrderFeature implements IFeatureMetadata, IFeatureMetadataEnablementNotifiable, IFeatureConfirmationMetadata, IFeatureDependencies, IFeatureLifecycle
{
    private static RetailAnonymousUserSearchOrderFeature instance;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>TypeNew</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialization of the singleton object instance.
    /// </summary>
    private static void TypeNew()
    {
        instance = new RetailAnonymousUserSearchOrderFeature();
    }

]]></Source>
			</Method>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the singleton object instance.
    /// </summary>
    /// <returns>The <c>RetailAnonymousUserSearchOrderFeature</c> instance.</returns>
    [Hookable(false)]
    public static RetailAnonymousUserSearchOrderFeature instance()
    {
        return RetailAnonymousUserSearchOrderFeature::instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>label</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains feature label.
    /// </summary>
    /// <returns> The feature label.</returns>
    [Hookable(false)]
    public FeatureLabelId label()
    {
        return literalStr("@Retail:RetailAnonymousUserSearchOrderFeature");
    }

]]></Source>
			</Method>
			<Method>
				<Name>module</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains feature module.
    /// </summary>
    /// <returns>The feature module.</returns>
    [Hookable(false)]
    public int module()
    {
        return FeatureModuleV0::Retail;
    }

]]></Source>
			</Method>
			<Method>
				<Name>summary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains feature summary text.
    /// </summary>
    /// <returns>The feature summary text.</returns>
    [Hookable(false)]
    public FeatureLabelId summary()
    {
        return literalStr("@Retail:RetailAnonymousUserSearchOrderFeatureSummary");
    }

]]></Source>
			</Method>
			<Method>
				<Name>learnMoreUrl</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains feature documentation url.
    /// </summary>
    /// <returns>The feature documentation url.</returns>
    [Hookable(false)]
    public WebSiteURL learnMoreUrl()
    {
        return "https://go.microsoft.com/fwlink/?linkid=2161132";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEnabledByDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains whether feature is enabled by default.
    /// </summary>
    /// <returns>False.</returns>
    [Hookable(false)]
    public boolean isEnabledByDefault()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains whether feature can be disabled.
    /// </summary>
    /// <returns>True.</returns>
    [Hookable(false)]
    public boolean canDisable()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>FeatureStage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Obtains the state of the feature's code.
    /// </summary>
    /// <returns>Current state of the feature's code</returns>
    [Hookable(false)]
    public FeatureLifecycleStage FeatureStage()
    {
        return FeatureLifecycleStage::Released;
    }

]]></Source>
			</Method>
			<Method>
				<Name>onEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Trigger which executes when the feature becomes enabled.
    /// </summary>
    [Hookable(false)]
    public void onEnabled()
    {
       // Do nothing.
    }

]]></Source>
			</Method>
			<Method>
				<Name>onDisabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Trigger which executes when the feature becomes disabled.
    /// </summary>
    [Hookable(false)]
    public void onDisabled()
    {
        ttsbegin;
        RetailParameters parameters = RetailParameters::find(true);
        parameters.EnableAnonymousUserOrderSearch = false;
        parameters.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>confirmationMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the label ID of the message to be displayed for feature confirmation.
    /// </summary>
    /// <returns>The label ID of the message.</returns>
    [Hookable(false)]
    public LabelId confirmationMessage()
    {
        return "@Retail:RetailAnonymousUserSearchOrderFeatureEnableMessage";
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAnyFeature</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an array of the features, if any one is enabled, feature can be enabled.
    /// </summary>
    /// <returns>An array containing any pre-requisite features.</returns>
    [Hookable(false)]
    public IFeature[] dependsOnAnyFeature()
    {
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dependsOnAllFeatures</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates dependency on all the features in the list. Pre-requisites features cannot be disabled unless current feature is disabled.
    /// </summary>
    /// <returns>An array containing all the pre-requisite features.</returns>
    [Hookable(false)]
    public IFeature[] dependsOnAllFeatures()
    {
        var result = new IFeature[1]();
        result.SetValue(RetailOmniChannelGenerateOrderConfirmationIdFeature::instance(), 0);
        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>