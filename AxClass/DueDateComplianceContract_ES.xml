<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DueDateComplianceContract_ES</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The data contract class for the <c>DueDateCompliance_ES</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationGroupAttribute('CurrentPeriod', "@PromptPaymentLaw_ES:CurrentPeriod", '1'),
    SysOperationGroupAttribute('ComparativePeriod', "@PromptPaymentLaw_ES:ComparativePeriod", '2'),
    SysOperationGroupAttribute('Calculation', "@PromptPaymentLaw_ES:Calculation", '3')
]
public class DueDateComplianceContract_ES implements SysOperationValidatable
{
    FromDate    fromDateCurrent;
    ToDate      toDateCurrent;
    FromDate    fromDateComparative;
    ToDate      toDateComparative;
    DueDateComplianceCalculationMethod_ES calculationMethod;
    private const Str60 CurrentPeriodGroup = 'CurrentPeriod';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFromDateComparative</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromDateComparative)),
        SysOperationGroupMemberAttribute('ComparativePeriod'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationLabelAttribute(literalStr("@PromptPaymentLaw_ES:From_FieldLabel")),
        SysOperationHelpTextAttribute(literalStr("@PromptPaymentLaw_ES:From_FieldHelpTextComparative"))
    ]
    public TransDate parmFromDateComparative(TransDate _fromDateComparative = fromDateComparative)
    {
        fromDateComparative  = _fromDateComparative;
        return fromDateComparative;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDateCurrent</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(FromDateCurrent)),
        SysOperationGroupMemberAttribute('CurrentPeriod'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationLabelAttribute(literalStr("@PromptPaymentLaw_ES:From_FieldLabel")),
        SysOperationHelpTextAttribute(literalStr("@PromptPaymentLaw_ES:From_FieldHelpTextCurrent"))
    ]
    public TransDate parmFromDateCurrent(TransDate _fromDateCurrent = fromDateCurrent)
    {
        fromDateCurrent  = _fromDateCurrent;
        return fromDateCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDateComparative</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToDateComparative)),
        SysOperationGroupMemberAttribute('ComparativePeriod'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationLabelAttribute(literalStr("@PromptPaymentLaw_ES:To_FieldLabel")),
        SysOperationHelpTextAttribute(literalStr("@PromptPaymentLaw_ES:To_FieldHelpTextComparative"))
    ]
    public TransDate parmToDateComparative(TransDate _toDateComparative = toDateComparative)
    {
        toDateComparative  = _toDateComparative;
        return toDateComparative;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDateCurrent</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(ToDateCurrent)),
        SysOperationGroupMemberAttribute('CurrentPeriod'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationLabelAttribute(literalStr("@PromptPaymentLaw_ES:To_FieldLabel")),
        SysOperationHelpTextAttribute(literalStr("@PromptPaymentLaw_ES:To_FieldHelpTextComparative"))
    ]
    public TransDate parmToDateCurrent(TransDate _toDateCurrent = toDateCurrent)
    {
        toDateCurrent  = _toDateCurrent;
        return toDateCurrent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCalculationMethod</Name>
				<Source><![CDATA[
    [
        DataMemberAttribute(identifierStr(CalculationMethod)),
        SysOperationGroupMemberAttribute('Calculation'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationLabelAttribute(literalStr("@PromptPaymentLaw_ES:CalculationMethod_FieldLabel")),
        SysOperationHelpTextAttribute(literalStr("@PromptPaymentLaw_ES:CalculationMethod_FieldHelpText"))
    ]
    public DueDateComplianceCalculationMethod_ES parmCalculationMethod(DueDateComplianceCalculationMethod_ES _calculationMethod = calculationMethod)
    {
        calculationMethod  = _calculationMethod;
        return calculationMethod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the data contract values.
    /// </summary>
    /// <returns>
    /// true if all the contract values are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;

        if (!fromDateCurrent || !toDateCurrent)
        {
            isValid = checkFailed("@PromptPaymentLaw_ES:FromDateOrToDateForTheCurrentPeriodIsEmpty");
        }
        else if (fromDateCurrent > toDateCurrent)
        {
            isValid = checkFailed("@PromptPaymentLaw_ES:FromDateForTheCurrentPeriodIsLaterThanToDate");
        }

        if (fromDateComparative && !toDateComparative)
        {
            isValid = checkFailed("@PromptPaymentLaw_ES:ToDateForTheComparativePeriodIsNotSet");
        }
        else if (fromDateComparative > toDateComparative)
        {
            isValid = checkFailed("@PromptPaymentLaw_ES:FromDateForTheComparativePeriodIsLaterThanToDate");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>