<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerDetailedTransByDimContract_CN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>LedgerDetailedTransactionsbyDimension_CN</c> SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerDetailedTransbyDimUIBuilder_CN))
]
public class LedgerDetailedTransByDimContract_CN implements SysOperationInitializable,SysOperationValidatable
{
    Name                    dimensionAttributeName;
    DimensionValue          fromDimensionValue;
    DimensionValue          toDimensionValue;
    TransDate               toDate;
    TransDate               fromDate;
    CurrentOperationsTax    postingLayer;
    MainAccountNum          fromAccount;
    MainAccountNum          toAccount;

    #define.Empty('')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the default values for parameters.
    /// </summary>
    public void initialize()
    {
        this.parmFromDate(dateNull());
        this.parmToDate(dateNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionAttributeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter dimensionAttributeName.
    /// </summary>
    /// <param name="_dimensionAttributeName">
    /// The new value of the datacontract parameter dimensionAttributeName; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter dimensionAttributeName.
    /// </returns>
    [
        DataMemberAttribute('DimensionType'),
        SysOperationDisplayOrderAttribute('6'),
        SysOperationLabelAttribute(literalstr("@SYS24410"))
    ]
    public Name parmDimensionAttributeName(Name _dimensionAttributeName = dimensionAttributeName)
    {
        dimensionAttributeName = _dimensionAttributeName;
        return dimensionAttributeName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromAccount.
    /// </summary>
    /// <param name="_fromAccount">
    /// The new value of the datacontract parameter fromAccount; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromAccount.
    /// </returns>
    [
        DataMemberAttribute('FromAccount'),
        SysOperationDisplayOrderAttribute('3'),
        SysOperationLabelAttribute(literalstr("@SYS4081511"))
    ]
    public MainAccountNum parmFromAccount(MainAccountNum _fromAccount = fromAccount)
    {
        fromAccount = _fromAccount;
        return fromAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter fromDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromDate.
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationDisplayOrderAttribute('1'),
        SysOperationLabelAttribute(literalstr("@SYS24050"))
    ]
    public TransDate parmFromDate(TransDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter fromdimensionValue.
    /// </summary>
    /// <param name="_fromDimensionValue">
    /// The new value of the datacontract parameter fromdimensionValue; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter fromdimensionValue.
    /// </returns>
    [
        DataMemberAttribute('FromDimension'),
        SysOperationDisplayOrderAttribute('7'),
        SysOperationLabelAttribute(literalstr("@SYS105870"))
    ]
    public DimensionValue parmFromDimensionValue(DimensionValue _fromDimensionValue = fromDimensionValue)
    {
        fromDimensionValue = _fromDimensionValue;
        return fromDimensionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter postinglayer.
    /// </summary>
    /// <param name="_postingLayer">
    /// The new value of the datacontract parameter postinglayer; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter postinglayer.
    /// </returns>
    [
        DataMemberAttribute('PostingLayer'),
        SysOperationDisplayOrderAttribute('5'),
        SysOperationLabelAttribute(literalstr("@SYS334157"))
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toAccount.
    /// </summary>
    /// <param name="_toAccount">
    /// The new value of the datacontract parameter toAccount; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toAccount.
    /// </returns>
    [
        DataMemberAttribute('ToAccount'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationLabelAttribute(literalstr("@SYS4081512"))
    ]
    public MainAccountNum parmToAccount(MainAccountNum _toAccount = toAccount)
    {
        toAccount = _toAccount;
        return toAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter toDate; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDate.
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationDisplayOrderAttribute('2'),
        SysOperationLabelAttribute(literalstr("@SYS35904"))
    ]
    public TransDate parmToDate(TransDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter toDimensionValue.
    /// </summary>
    /// <param name="_toDimensionValue">
    /// The new value of the datacontract parameter toDimensionValue; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter toDimensionValue.
    /// </returns>
    [
        DataMemberAttribute('ToDimension'),
        SysOperationDisplayOrderAttribute('8'),
        SysOperationLabelAttribute(literalstr("@SYS103530"))
    ]
    public DimensionValue parmToDimensionValue(DimensionValue _toDimensionValue = toDimensionValue)
    {
        toDimensionValue = _toDimensionValue;
        return toDimensionValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the SSRS report parameters are valid.
    /// </summary>
    /// <returns>
    /// true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean ret = true;

        if (fromDate == dateNull())
        {
            // From date is required.
            ret = checkFailed("@SYS97591");
        }

        if (toDate == dateNull())
        {
            // To date is required.
            ret = checkFailed("@SYS97592");
        }

        if (fromDate > toDate)
        {
            // From date must be before To date
            ret = checkFailed("@SYS91020");
        }

        if (dimensionAttributeName == #Empty)
        {
            // DimensionType parameter cannot be empty
            ret = checkFailed("@GLS100535");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>