<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderArchiveAutomationCriteriaFormInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Holds the interaction on the form <c>SalesOrderArchiveAutomationCriteriaForm</c>.
/// </summary>
internal final class SalesOrderArchiveAutomationCriteriaFormInteraction
{
    private SalesOrderArchiveAutomationCriteriaFormContract formContract;
    private SalesOrderArchiveAutomationCriteriaIForm uIForm;
    private const str EmptyString = '';
    private SalesOrderArchiveTrans displayedArchiveRecord;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static SalesOrderArchiveAutomationCriteriaFormInteraction construct(
        SalesOrderArchiveAutomationCriteriaIForm _form,
        SalesOrderArchiveAutomationCriteriaFormContract _formContract)
    {
        SalesOrderArchiveAutomationCriteriaFormInteraction interaction = new SalesOrderArchiveAutomationCriteriaFormInteraction();
        interaction.formContract = _formContract;
        interaction.uIForm = _form;
        return interaction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createArchiveJobs</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal ArchiveServiceIProvideManagedJobCreationContracts createArchiveJobs(ArchiveServiceJobName _archiveJobName)
    {
        var proposedSalesOrderArchiveTrans = this.initSalesOrderArchiveTransFromContract(_archiveJobName);

        SalesOrderArchiveAutomationJobRequestCreator jobRequestCreator = new SalesOrderArchiveAutomationJobRequestCreator();
        var jobPostRequest = jobRequestCreator.createPostJobRequest(proposedSalesOrderArchiveTrans);
  
        var singleJobContract = ArchiveServiceManagedJobCreationContract::newForSourceLinkToBeCreatedAfterJobCreation(
            SalesOrderArchiveAutomationConstants::RegisteredTypeName,
            jobPostRequest,
            proposedSalesOrderArchiveTrans);

        return singleJobContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControls</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void setControls()
    {
        uIForm.salesOrderArchiveStartDateTimeControl().mandatory(true);
        uIForm.salesOrderArchiveEndDateTimeControl().mandatory(true);
        uIForm.salesOrderArchiveDataAreaIdControl().mandatory(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedSalesOrderArchiveStartDateTime</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void onModifiedSalesOrderArchiveStartDateTime()
    {
        formContract.parmStartDateTime(uIForm.salesOrderArchiveStartDateTimeControl().dateTimeValue());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.StartDateTime = formContract.parmStartDateTime();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedSalesOrderArchiveEndDateTime</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void onModifiedSalesOrderArchiveEndDateTime()
    {
        formContract.parmEndDateTime(uIForm.salesOrderArchiveEndDateTimeControl().dateTimeValue());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.EndDateTime = formContract.parmEndDateTime();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onModifiedSalesOrderArchiveDataAreaId</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void onModifiedSalesOrderArchiveDataAreaId()
    {
        formContract.parmSalesOrderDataAreaId(uIForm.salesOrderArchiveDataAreaIdControl().valueStr());
        if (displayedArchiveRecord)
        {
            displayedArchiveRecord.SalesOrderDataAreaId = formContract.parmSalesOrderDataAreaId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal boolean validate()
    {
        return formContract.validate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initSalesOrderArchiveTransFromContract</Name>
				<Source><![CDATA[
    private SalesOrderArchiveTrans initSalesOrderArchiveTransFromContract(ArchiveServiceJobName _jobName)
    {
        SalesOrderArchiveTrans salesOrderArchiveTrans;
        salesOrderArchiveTrans.Name = _jobName;
        salesOrderArchiveTrans.StartDateTime = formContract.parmStartDateTime();
        salesOrderArchiveTrans.EndDateTime = formContract.parmEndDateTime();
        salesOrderArchiveTrans.SalesOrderDataAreaId = formContract.parmSalesOrderDataAreaId();
        
        return salesOrderArchiveTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>