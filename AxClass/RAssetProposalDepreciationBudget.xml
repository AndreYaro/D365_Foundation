<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RAssetProposalDepreciationBudget</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RAssetProposalDepreciationBudget extends  RAssetproposalDepreciation implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createJournalLines</Name>
				<Source><![CDATA[
        public void createJournalLines(RAssetStandardId _assetStandardId,
                                   boolean          _runFromBatch = true,
                                   RAssetAmount     _assetAmount  = 0)
    {
        if (! RAssetBudgetTrans::findRange(rAssetStandards.AssetId,
                                           RAssetTransType::Acquisition,
                                           rAssetStandards.AssetStandardId,
                                           rAssetBudgetModelId))
            return;

        super(_assetStandardId, _runFromBatch, _assetAmount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
        public void run(QueryRun _queryRun = queryRun)
    {
        _queryRun.query().dataSourceName(tablestr(RAssetTable)).addRange(fieldnum(RAssetTable, Status)).value(queryValue(RAssetStatus::NoAcquisition));
        _queryRun.query().dataSourceName(tablestr(RAssetTable)).addRange(fieldnum(RAssetTable, Status)).value(queryValue(RAssetStatus::PurchInvoice));
        super(_queryRun);
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>