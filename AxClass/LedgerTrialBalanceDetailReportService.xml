<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTrialBalanceDetailReportService</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;
/// <summary>
/// The electronic reporting service class for the trial balance with transactional detail report.
/// </summary>
internal class LedgerTrialBalanceDetailReportService extends SysOperationServiceBase
{
    private const str ERModelDataSourceName = 'model';
    private const str DefaultExportedFileName = 'TrialBalanceDetail';
    private const str ERReportParameterName ='o_TrialParameter';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>generateReportViaERConfiguration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the report by general electronic reporting.
    /// </summary>
    /// <param name = "_contract">The trial balance with transactional detail report contract.</param>
    [Hookable(false)]
    public void generateReportViaERConfiguration(LedgerTrialBalanceDetailERContract _contract)
    {
        Query query = new Query(SysOperationHelper::base64Decode(_contract.parmQuery()));

        ERFormatMappingId formatMappingId = _contract.parmFormatMapping();

        LedgerTrialBalanceWithTransactionalDetailDP dataProvider = LedgerTrialBalanceWithTransactionalDetailDP::construct();
        LedgerTrialBalanceDetailTmp trialBalanceDetailTmp = dataProvider.getLedgerTrialBalanceTmp(_contract, query);

        if (trialBalanceDetailTmp)
        {
            try
            {
                ERIModelDefinitionParamsAction parameters = new ERModelDefinitionParamsUIActionComposite()
                    .add(new ERModelDefinitionDatabaseContext().addTemporaryTable(trialBalanceDetailTmp))
                    .add(new ERModelDefinitionObjectParameterAction(
                        ERModelDataSourceName,
                        ERReportParameterName,
                        _contract,
                        true));

                str defaultFileName = DefaultExportedFileName;

                if (LedgerTrialBalanceDetailFileNameFlight::instance().isEnabled())
                {
                    defaultFileName = '';
                }

                ERObjectsFactory::createFormatMappingRunByFormatMappingId(formatMappingId, defaultFileName)
                    .withParameter(parameters)
                    .withFileDestination(_contract.getFileDestination())
                    .run();
            }
            catch
            {
                // An error occurred while exporting data.
                error("@SYP4861341");
            }
        }
        else
        {
            // There is no data available.
            info("@SYS300117");
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>