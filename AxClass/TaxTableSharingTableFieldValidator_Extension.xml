<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTableSharingTableFieldValidator_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxTableSharingTableFieldValidator_Extension</c> contains field validation logic for the fields of tax related tables.
/// </summary>
[ExtensionOf(classStr(SysSharingTableFieldValidator))]
public static class TaxTableSharingTableFieldValidator_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canFieldBeShared</Name>
				<Source><![CDATA[
    public static boolean canFieldBeShared(SysDataSharingPolicyRecId _policyRecId, TableName _tableName, FieldName _fieldName, boolean _showWarnings)
    {
        boolean canBeShared = next canFieldBeShared(_policyRecId, _tableName, _fieldName, _showWarnings);

        if (canBeShared)
        {
            SysDictField dictField = SysDictField::newName(_tableName, _fieldName);
            if (dictField && !dictField.isSystem())
            {
                switch (_tableName)
                {
                    case tableStr(TaxParameters):
                        canBeShared = SysSharingTableFieldValidator::validateTableFieldCanBeShared(_tableName, _fieldName);
                        break;
                }

                if (!canBeShared && _showWarnings)
                {
                    checkFailed(strFmt("@ApplicationSuite_SysSharing:DataSharingPolicyUnsupportedFieldWarning", _tableName, _fieldName));
                }
            }
        }

        return canBeShared;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTableFieldCanBeShared</Name>
				<Source><![CDATA[
    private static boolean validateTableFieldCanBeShared(TableName _tableName, FieldName _fieldName)
    {
        if (_tableName == tableStr(TaxParameters))
        {
            switch (_fieldName)
            {
                case fieldstr(TaxParameters, IncomingVATPayment_RU):
                    return !TaxParametersIncomingVATPaymentRUValidationFlight::instance().isEnabled();

                case fieldstr(TaxParameters, ReportUseVatDueDate_W):
                    return !TaxParametersReportUseVatDueDateWValidationFlight::instance().isEnabled();

                case fieldstr(TaxParameters, TaxBranchEnabled):
                    return !TaxParametersTaxBranchEnabledValidationFlight::instance().isEnabled();
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>