<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ELedgerAccountingDataService</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the parameters sent by SysOperation and
/// starts ledger statement operation via GER (General electronic reporting)
/// </summary>
public class ELedgerAccountingDataService
{
    ELedgerAccountingContract contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>processFiles</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the report processing
    /// </summary>
    /// <param name="_contract">
    /// The Contract class with the input parameters
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void processFiles(ELedgerAccountingContract _contract)
    {
        contract =  _contract;

        this.processTrialBalance(_contract);
        this.processAuxiliaryLedger(_contract);
        this.processLedgerEntries(_contract);
        this.processAdditionals(_contract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>processTrialBalance</Name>
				<Source><![CDATA[
    internal void processTrialBalance(ELedgerAccountingContract _contract)
    {
        if (_contract.parmTrialBalance())
        {
            ELedgerAccountingBalanceSheet::construct(_contract).run();
            ELedgerAccountingChartOfAcc::construct(_contract).run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processAuxiliaryLedger</Name>
				<Source><![CDATA[
    internal void processAuxiliaryLedger(ELedgerAccountingContract _contract)
    {
        if (_contract.parmAuxiliaryLedger())
        {
            ELedgerAccountingAuxLedger::construct(_contract).run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processLedgerEntries</Name>
				<Source><![CDATA[
    internal void processLedgerEntries(ELedgerAccountingContract _contract)
    {
        if (_contract.parmLedgerEntries())
        {
            ELedgerAccountingLedgerEntries::construct(_contract).run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>processAdditionals</Name>
				<Source><![CDATA[
    protected void processAdditionals(ELedgerAccountingContract _contract)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>