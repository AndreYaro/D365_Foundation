<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfProdCalcTransCleaner</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PmfProdCalcTransCleaner</c> is responsible for removing <c>PmfProdCalcTrans</c> records for specified production output.
/// </summary>
class PmfProdCalcTransCleaner
{
    ProdId      prodId;
    RefRecId    refRecId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmProdId</Name>
				<Source><![CDATA[
    public void parmProdId(ProdId _prodId)
    {
        prodId = _prodId;
    }
]]></Source>
			</Method>
			<Method>
				<Name>parmRefRecId</Name>
				<Source><![CDATA[
    public void parmRefRecId(RefRecId _refRecId)
    {
        refRecId = _refRecId;
    }
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        PmfCoByProdCalcTrans prodCalcTrans;

        delete_from prodCalcTrans
            where  prodCalcTrans.TransRefId          == prodId
                && prodCalcTrans.TransRefType        == ProdTransRefType::Production
                && (refRecId == 0 || prodCalcTrans.PmfIdRefCoByRecId   == refRecId)
                && prodCalcTrans.RealConsump         == 0
                && prodCalcTrans.RealCostAmount      == 0
                && prodCalcTrans.RealCostAdjustment  == 0;
    }
]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PmfProdCalcTransCleaner construct()
    {
        return new PmfProdCalcTransCleaner();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>