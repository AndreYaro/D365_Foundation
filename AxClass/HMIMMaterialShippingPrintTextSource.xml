<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMMaterialShippingPrintTextSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>HMIMMaterialShippingPrintTextSource</c> class represents the source of the text to be printed on a shipping document for hazardous materials.
/// </summary>
public final class HMIMMaterialShippingPrintTextSource extends HMIMShippingPrintTextSource
{
    private HMIMMaterial material;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromMaterial</Name>
				<Source><![CDATA[
    internal static HMIMMaterialShippingPrintTextSource newFromMaterial(HMIMMaterial _material)
    {
        return new HMIMMaterialShippingPrintTextSource(_material);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(HMIMMaterial _material)
    {
        material = _material;
    }

]]></Source>
			</Method>
			<Method>
				<Name>record</Name>
				<Source><![CDATA[
    protected Common record()
    {
        return material;
    }

]]></Source>
			</Method>
			<Method>
				<Name>regCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMRegCode regCode()
    {
        return material.RegCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>identificationCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMIdentificationCode identificationCode()
    {
        return material.IdentificationCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>technicalNameCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMTechnicalNameCode technicalNameCode()
    {
        return material.TechnicalNameCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>classCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMClassCode classCode()
    {
        return material.ClassCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>divisionCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMDivisionCode divisionCode()
    {
        return material.DivisionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packingGroupCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMPackingGroupCode packingGroupCode()
    {
        return material.PackingGroupCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transportCategoryCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMTransportCategoryCode transportCategoryCode()
    {
        return material.TransportCategoryCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>marinePollutant</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMMarinePollutant marinePollutant()
    {
        return material.MarinePollutant;
    }

]]></Source>
			</Method>
			<Method>
				<Name>environmentalHazard</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMEnviroDangerous environmentalHazard()
    {
        return material.EnviroDangerous;
    }

]]></Source>
			</Method>
			<Method>
				<Name>limitedQty</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMLimitedQty limitedQty()
    {
        return material.LimitedQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>tunnelCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMTunnelCode tunnelCode()
    {
        return material.TunnelCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>labelCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMLabelCode labelCode()
    {
        return material.LabelCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>stowageCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMStowageCode stowageCode()
    {
        return material.StowageCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emsCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMEMSCode emsCode()
    {
        return material.EMSCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>airType</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMAirType airType()
    {
        return material.AirType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInstCodePassenger</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMPackInstCode packInstCodePassenger()
    {
        return material.PackInstCodePassenger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packInstCodeCargo</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMPackInstCode packInstCodeCargo()
    {
        return material.PackInstCodeCargo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>packCode</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMPackCode packCode()
    {
        return material.PackCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>flashpoint</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal HMIMFlashpoint flashpoint()
    {
        return material.Flashpoint;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>