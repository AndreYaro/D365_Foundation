<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesDelete_Returns</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesDelete_Returns extends SalesDelete implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns true
    /// </summary>
    /// <returns>
    /// true.
    /// </returns>
    /// <remarks>
    /// This method must be in this class because it is called from the <c>dialogRunbase</c> class.
    /// </remarks>
    public boolean canGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSelectOrder</Name>
				<Source><![CDATA[
    public boolean canSelectOrder(SalesTable _salesTable)
    {
        return _salesTable.returnItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>source</Name>
				<Source><![CDATA[
    public ReturnDeleteSource source()
    {
        return ReturnDeleteSource::ReturnOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQueryBuild</Name>
				<Source><![CDATA[
    public void updateQueryBuild()
    {
        chooseLines = new QueryRun(querystr(SalesUpdate));

        var range = chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, SalesType));
        range.value(queryValue(SalesType::ReturnItem));
        range.status(RangeStatus::Locked);

        chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, CreatedDateTime));
        chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, Deadline));
        chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, CustAccount));
        chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, ReturnItemNum));
        chooseLines.query().dataSourceTable(tablenum(SalesTable)).addRange(fieldnum(SalesTable, ReturnStatus)).value(
            strfmt('%1, %2, %3', queryValue(ReturnStatusHeader::Created), queryValue(ReturnStatusHeader::Canceled), queryValue(ReturnStatusHeader::Closed)));

        chooseLines.query().dataSourceTable(tablenum(SalesLine)).joinMode(JoinMode::OuterJoin);
        chooseLines.query().dataSourceTable(tablenum(InventDim)).joinMode(JoinMode::OuterJoin);

        chooseLines.query().dataSourceTable(tablenum(SalesLine)).addSortField(fieldnum(SalesLine, SalesId));
        chooseLines.query().dataSourceTable(tablenum(SalesLine)).addSortField(fieldnum(SalesLine, LineNum));

        chooseLines.query().interactive(showQueryForm);
        chooseLines.saveUserSetup(false);

        chooseLines.title("@SYS105833");
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@SYS105833";
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>