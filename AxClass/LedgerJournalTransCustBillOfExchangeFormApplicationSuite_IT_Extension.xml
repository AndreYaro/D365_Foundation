<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTransCustBillOfExchangeFormApplicationSuite_IT_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class complements the logic of <c>LedgerJournalTransCustBillOfExchange</c> form.
/// </summary>
public static class LedgerJournalTransCustBillOfExchangeFormApplicationSuite_IT_Extension
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>PostingProfile_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes offset account value.
    /// </summary>
    /// <param name = "_sender">The sender object.</param>
    /// <param name = "_e">the event arguments.</param>
    [FormDataFieldEventHandler(formDataFieldStr(LedgerJournalTransCustBillOfExchange, LedgerJournalTrans, PostingProfile), FormDataFieldEventType::Modified)]
    public static void PostingProfile_OnModified(FormDataObject _sender, FormDataFieldEventArgs _e)
    {
        if (FeatureStateProvider::isFeatureEnabled(ConfigurablePostingProfilesForBanksAndRemittanceTypesFeature::instance()))
        {
            FormRun formRun = _sender.datasource().formRun();

            if (formRun && formHasMethod(formRun, identifierStr(ledgerJournalEngine)))
            {
                LedgerJournalEngine_CustBillOfExchange ledgerJournalEngine = formRun.ledgerJournalEngine();

                if (ledgerJournalEngine)
                {
                    LedgerJournalTrans ledgerJournalTrans = _sender.datasource().cursor();
                    ledgerJournalEngine.initializeCustOffsetAccount_IT(ledgerJournalTrans);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buttonCustInPaym_OnClicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles the BOE import button click event to perform the import.
    /// </summary>
    /// <param name = "_sender">The sender object.</param>
    /// <param name = "_e">the event arguments.</param>
    [FormControlEventHandler(formControlStr(LedgerJournalTransCustBillOfExchange, buttonBOEImport), FormControlEventType::Clicked)]
    public static void buttonCustInPaym_OnClicked(FormControl sender, FormControlEventArgs e)
    {
        if (FeatureStateProvider::isFeatureEnabled(ProtestHandlingForBillsOfExchangeFeature::instance()))
        {
            FormRun formRun = sender.formRun();
            LedgerJournalTable ledgerJournalTable = formRun.ledgerJournalTable();
            FormDataSource ledgerJournalTrans_ds = formRun.dataSource(formDataSourceStr(LedgerJournalTransCustBillOfExchange, LedgerJournalTrans));

            Args args = new Args();

            args.caller(formRun);
            args.record(ledgerJournalTable);
            new MenuFunction(menuItemActionStr(CustInpayment), MenuItemType::Action).run(args);
            GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceIT00054, funcName());
            ledgerJournalTrans_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>LedgerJournalTransCustBillOfExchange_Post_enableButtons</Name>
				<Source><![CDATA[
    /// <summary>
    /// Manages the BOE import button visibility.
    /// </summary>
    /// <param name = "_sender">The sender object.</param>
    /// <param name = "_e">the event arguments.</param>
    [PostHandlerFor(formStr(LedgerJournalTransCustBillOfExchange), formMethodStr(LedgerJournalTransCustBillOfExchange, enableButtons))]
    public static void LedgerJournalTransCustBillOfExchange_Post_enableButtons(XppPrePostArgs args)
    {
        FormRun formRun = args.getThis();

        if (formRun.args() 
            && formRun.args().menuItemName() == menuitemDisplayStr(LedgerJournalTransCustBillProtest)
            && FeatureStateProvider::isFeatureEnabled(ProtestHandlingForBillsOfExchangeFeature::instance()))
        {
            FormButtonControl buttonBOEImport = formRun.control(formRun.controlId(formControlStr(LedgerJournalTransCustBillOfExchange, buttonBOEImport)));
            buttonBOEImport.visible(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>