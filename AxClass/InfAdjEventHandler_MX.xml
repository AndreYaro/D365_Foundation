<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InfAdjEventHandler_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Event handler for <c>MainAccount</c> related events.
/// </summary>
public class InfAdjEventHandler_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>MainAccount_onValidatingField</Name>
				<Source><![CDATA[
    /// <summary>
    /// <c>MainAccount</c> validating field event handler.
    /// </summary>
    /// <param name = "_sender">The <c>MainAccount</c> record.</param>
    /// <param name = "_e">Event arguments</param>
    [DataEventHandler(tableStr(MainAccount), DataEventType::ValidatingField)]
    public static void MainAccount_onValidatingField(Common _sender, DataEventArgs _e)
    {
        MainAccount mainAccount = _sender as MainAccount;
        ValidateFieldEventArgs ve = _e;

        if (ve.parmFieldId() == fieldNum(MainAccount, InflationAdjustment_MX))
        {
            boolean isValid = InfAdjValidation_MX::isMainAccountClosed(DimensionAttributeValue::findByDimensionAttributeAndEntityInst(DimensionAttribute::getWellKnownDimensionAttribute(DimensionAttributeType::MainAccount), mainAccount.RecId).IsSuspended, mainAccount.InflationAdjustment_MX);
            ve.parmValidateResult(isValid);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>MainAccount_onValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// <c>MainAccount</c> validating write event handler.
    /// </summary>
    /// <param name = "_sender">The <c>MainAccount</c> record that is being written.</param>
    /// <param name = "_e">Event arguments</param>
    [DataEventHandler(tableStr(MainAccount), DataEventType::ValidatingWrite)]
    public static void MainAccount_onValidatingWrite(Common _sender, DataEventArgs _e)
    {
        MainAccount mainAccount = _sender as MainAccount;
        ValidateEventArgs ve = _e;
        boolean isValid = true;
        #isoCountryRegionCodes

        if (ve.parmValidateResult())
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]))
            {
                isValid = InfAdjEventHandler_MX::validateAdjustmentMethod(mainAccount);
                isValid = isValid && InfAdjEventHandler_MX::validateRepomoType(mainAccount);
            }
            ve.parmValidateResult(isValid);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAdjustmentMethod</Name>
				<Source><![CDATA[
    private static boolean validateAdjustmentMethod(MainAccount _mainAccount)
    {
        boolean ret = true;

        if (_mainAccount.InflationAdjustment_MX)
        {
            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::None)
            {
                ret = checkFailed("@SYS312357");
            }

            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::OpenBalance
                && _mainAccount.Type != DimensionLedgerAccountType::BalanceSheet
                && _mainAccount.Type != DimensionLedgerAccountType::Asset
                && _mainAccount.Type != DimensionLedgerAccountType::Liability)
            {
                ret = checkFailed(strFmt("@SYS315855", _mainAccount.AdjustmentMethod_MX, DimensionLedgerAccountType::Asset, DimensionLedgerAccountType::Liability, DimensionLedgerAccountType::BalanceSheet ));
            }

            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::MonthlyBalance
                && _mainAccount.Type != DimensionLedgerAccountType::ProfitAndLoss
                && _mainAccount.Type != DimensionLedgerAccountType::Expense
                && _mainAccount.Type != DimensionLedgerAccountType::Revenue)
            {
                ret = checkFailed(strFmt("@SYS315855", _mainAccount.AdjustmentMethod_MX, DimensionLedgerAccountType::ProfitAndLoss, DimensionLedgerAccountType::Revenue, DimensionLedgerAccountType::Expense));
            }

            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::TransactionDate
                && _mainAccount.Type != DimensionLedgerAccountType::BalanceSheet
                && _mainAccount.Type != DimensionLedgerAccountType::Asset
                && _mainAccount.Type != DimensionLedgerAccountType::Liability
                && _mainAccount.Type != DimensionLedgerAccountType::Equity)
            {
                ret = checkFailed(strFmt("@SYS315856", _mainAccount.AdjustmentMethod_MX, DimensionLedgerAccountType::Equity, DimensionLedgerAccountType::Asset, DimensionLedgerAccountType::Liability, DimensionLedgerAccountType::BalanceSheet));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateRepomoType</Name>
				<Source><![CDATA[
    private static boolean validateRepomoType(MainAccount _mainAccount)
    {
        boolean ret = true;

        if (_mainAccount.InflationAdjustment_MX)
        {
            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::OpenBalance
            && _mainAccount.Type == DimensionLedgerAccountType::BalanceSheet
            && _mainAccount.RepomoType_MX == RepomoType_MX::NotApplicable)
            {
                ret = checkFailed(strFmt("@SYS315857", RepomoType_MX::NotApplicable, AdjustmentMethod_MX::OpenBalance, DimensionLedgerAccountType::BalanceSheet));
            }

            if (_mainAccount.AdjustmentMethod_MX != AdjustmentMethod_MX::OpenBalance
            && _mainAccount.RepomoType_MX    != RepomoType_MX::NotApplicable)
            {
                ret = checkFailed(strFmt("@SYS315858", RepomoType_MX::NotApplicable, _mainAccount.AdjustmentMethod_MX));
            }

            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::OpenBalance
            && _mainAccount.Type == DimensionLedgerAccountType::Asset
            && _mainAccount.RepomoType_MX != RepomoType_MX::Asset)
            {
                ret = checkFailed(strFmt("@SYS315859", RepomoType_MX::Asset, AdjustmentMethod_MX::OpenBalance, DimensionLedgerAccountType::Asset));
            }

            if (_mainAccount.AdjustmentMethod_MX == AdjustmentMethod_MX::OpenBalance
            && _mainAccount.Type == DimensionLedgerAccountType::Liability
            && _mainAccount.RepomoType_MX != RepomoType_MX::Liability)
            {
                ret = checkFailed(strFmt("@SYS315859", RepomoType_MX::Liability, AdjustmentMethod_MX::OpenBalance, DimensionLedgerAccountType::Liability));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>