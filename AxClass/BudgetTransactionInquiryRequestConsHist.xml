<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionInquiryRequestConsHist</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetTransactionInquiryRequestConsHist</c> class specifies additional information that is
/// required to inquire on the budget transactions for <c>LedgerConsolidateHist</c> records.
/// </summary>
public class BudgetTransactionInquiryRequestConsHist extends BudgetTransactionInquiryRequest
{
    recId ledgerConsolidateHistId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addLineRangesToQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Adds the <c>BudgetTransactionLine</c> record query ranges to the specified query.
    /// </summary>
    /// <param name="_query">
    ///    The query for which to add the ranges.
    /// </param>
    public void addLineRangesToQuery(Query _query)
    {
        QueryBuildDataSource budgetTransactionLineDS;

        QueryBuildDataSource ledgerConsolidateHistRefDS;
        QueryBuildDataSource ledgerConsolidateHistDS;

        super(_query);

        if (ledgerConsolidateHistId)
        {
            budgetTransactionLineDS = _query.dataSourceTable(tableNum(BudgetTransactionLine));

            if (budgetTransactionLineDS)
            {
                // Only show BudgetTransactionLine records that have an associated LedgerConsolidateHistRef record.
                ledgerConsolidateHistRefDS = budgetTransactionLineDS.addDataSource(tablenum(LedgerConsolidateHistRef));
                ledgerConsolidateHistRefDS.relations(true);
                ledgerConsolidateHistRefDS.joinMode(JoinMode::ExistsJoin);

                // Only include LedgerConsolidateHistRef records that are associated to the LedgerConsolidateHist record that was passed to the form.
                ledgerConsolidateHistDS = ledgerConsolidateHistRefDS.addDataSource(tablenum(LedgerConsolidateHist));
                ledgerConsolidateHistDS.relations(true);
                ledgerConsolidateHistDS.joinMode(JoinMode::ExistsJoin);
                ledgerConsolidateHistDS.addRange(fieldnum(LedgerConsolidateHist, RecId)).value(SysQuery::value(ledgerConsolidateHistId));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the <c>BudgetTransactionInquiryRequestConsHist</c> class.
    /// </summary>
    /// <param name="_common">
    ///    The record from which to initialize.
    /// </param>
    public void initialize(Common _common)
    {
        if (_common &&
            _common.TableId == tableNum(LedgerConsolidateHist))
        {
            ledgerConsolidateHistId = _common.RecId;
        }
        else
        {
            ledgerConsolidateHistId = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransactionCodeVisible</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the transaction code is visible in the inquiry.
    /// </summary>
    /// <returns>
    ///    A Boolean value that indicates whether the transaction code is visible.
    /// </returns>
    public boolean isTransactionCodeVisible()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTransferSourceNumberVisible</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Indicates whether the transfer source number is visible in the inquiry.
    /// </summary>
    /// <returns>
    ///    A Boolean value that indicates whether the transfer source number is visible.
    /// </returns>
    public boolean isTransferSourceNumberVisible()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>BudgetTransactionInquiryRequestConsHist</c> class.
    /// </summary>
    /// <param name="_common">
    ///    The record from which to construct the instance; optional.
    /// </param>
    /// <returns>
    ///    An instance of the <c>BudgetTransactionInquiryRequestConsHist</c> class.
    /// </returns>
    public static BudgetTransactionInquiryRequestConsHist construct(Common _common)
    {
        BudgetTransactionInquiryRequestConsHist transactionInquiryRequest;

        transactionInquiryRequest = new BudgetTransactionInquiryRequestConsHist();
        transactionInquiryRequest.initialize(_common);

        return transactionInquiryRequest;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>