<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReleaseUpdateDB70_FixedAssetDepBookBonusRemoval</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReleaseUpdateDB70_FixedAssetDepBookBonusRemoval extends ReleaseUpdateDB70_FixedAssets
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>preSyncCopyAssetDepBookBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Copies AssetDepBookBonus table into a staging table in order to migrated records to <c>AssetBookBonus</c>
    /// </summary>
    [
        UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeTitle_AssetDepBookBonusStaging"),
        UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PreSyncUpdate),
        UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
        UpgradeScriptConfigKeyAttribute(configurationKeyStr(Asset)),
        UpgradeScriptTableAttribute('ASSETDEPBOOKBONUS', false, true, false, false),
        UpgradeScriptTableAttribute('ASSETDEPBOOKBONUSUPGRADETEMP', true, true, false, false)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void preSyncCopyAssetDepBookBonus()
    {
        str sqlStatement;

        sqlStatement =
        @"IF OBJECT_ID ( '[dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]', 'U') IS NOT NULL
			DROP TABLE [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]

		CREATE TABLE [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP](
		[AMOUNT] [numeric](32, 6) NOT NULL,
		[ASSETID] [nvarchar](20) NOT NULL,
		[BONUSID] [nvarchar](10) NOT NULL,
		[DEPRECIATIONBOOKID] [nvarchar](10) NOT NULL,
		[DESCRIPTION] [nvarchar](60) NOT NULL,
		[PERCENTAGE] [numeric](32, 6) NOT NULL,
		[PRIORITY] [int] NOT NULL,
		[MODIFIEDDATETIME] [datetime] NOT NULL,
		[MODIFIEDBY] [nvarchar](20) NOT NULL,
		[DATAAREAID] [nvarchar](4) NOT NULL,
		[RECVERSION] [int] NOT NULL,
		[PARTITION] [bigint] NOT NULL,
		[RECID] [bigint] NOT NULL,
			CONSTRAINT [ASSETDEPBOOKBONUSUPGRADETEMPRECID] PRIMARY KEY CLUSTERED
			([RECID] ASC))

		CREATE UNIQUE NONCLUSTERED INDEX [ASSETDEPBOOKBONUSUPGRADETEMPIDX]
			ON [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]
		(
			[PARTITION] ASC,
			[DATAAREAID] ASC,
			[ASSETID] ASC,
			[DEPRECIATIONBOOKID] ASC,
			[BONUSID] ASC
        )";

        this.executeSqlStatement(sqlStatement);

        sqlStatement = 
            @"INSERT INTO [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]
				SELECT [AMOUNT], [ASSETID], [BONUSID], [DEPRECIATIONBOOKID],
				[DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
				[DATAAREAID], [RECVERSION], [PARTITION], [RECID]
					FROM [dbo].[ASSETDEPBOOKBONUS]";

        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postSyncInsertAssetBookBonus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserting records from staging table into <c>AssetBookBonus</c> table.
    /// The staging table will be dropped.
    /// </summary>
    [
    UpgradeScriptDescriptionAttribute("@FixedAssets:FA_UpgradeTitle_AssetBookBonusInsert"),
    UpgradeScriptStageAttribute(ReleaseUpdateScriptStage::PostSyncUpdate),
    UpgradeScriptTypeAttribute(ReleaseUpdateScriptType::SharedScript),
    UpgradeScriptConfigKeyAttribute(configurationKeyStr(Asset)),
    UpgradeScriptTableAttribute(tableStr(AssetBookBonus), true, true, false, false),
    UpgradeScriptTableAttribute('ASSETDEPBOOKBONUSUPGRADETEMP', false, true, false, true)
    , Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void postSyncInsertAssetBookBonus()
    {
        str sqlStatement;

        sqlStatement = 
        @"INSERT INTO [dbo].[ASSETBOOKBONUS]
				([AMOUNT], [ASSETID], [BONUSID], [BOOKID],
				[DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
				[DATAAREAID], [PARTITION], [RECVERSION])
			SELECT [AMOUNT], [ASSETID], [BONUSID], [DEPRECIATIONBOOKID],
				[DESCRIPTION], [PERCENTAGE], [PRIORITY], [MODIFIEDDATETIME], [MODIFIEDBY],
				[DATAAREAID], [PARTITION], [RECVERSION]
			FROM [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]
				WHERE NOT EXISTS (SELECT RECID FROM [dbo].[ASSETBOOKBONUS]
					WHERE [ASSETBOOKBONUS].[ASSETID] = [ASSETDEPBOOKBONUSUPGRADETEMP].[ASSETID]
					AND [ASSETBOOKBONUS].[BONUSID] = [ASSETDEPBOOKBONUSUPGRADETEMP].[BONUSID]
					AND [ASSETBOOKBONUS].[BOOKID] = [ASSETDEPBOOKBONUSUPGRADETEMP].[DEPRECIATIONBOOKID]
					AND [ASSETBOOKBONUS].[DATAAREAID] = [ASSETDEPBOOKBONUSUPGRADETEMP].[DATAAREAID]
					AND [ASSETBOOKBONUS].[PARTITION] = [ASSETDEPBOOKBONUSUPGRADETEMP].[PARTITION])";
        this.executeSqlStatement(sqlStatement);
		
        sqlStatement = @"IF OBJECT_ID ( '[dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]', 'U') IS NOT NULL
            DROP TABLE [dbo].[ASSETDEPBOOKBONUSUPGRADETEMP]";
        this.executeSqlStatement(sqlStatement);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>