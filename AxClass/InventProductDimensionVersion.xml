<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventProductDimensionVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventProductDimensionVersion</c> class defines the behavior of the version inventory dimension.
/// </summary>
class InventProductDimensionVersion extends InventProductDimension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmDefaultValueForItem</Name>
				<Source><![CDATA[
    public anytype parmDefaultValueForItem(InventTable _inventTable, anytype _value = _inventTable.StandardInventVersionId)
    {
        _inventTable.StandardInventVersionId = _value;
        return _inventTable.StandardInventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAlternativeValueForItem</Name>
				<Source><![CDATA[
    public anytype parmAlternativeValueForItem(InventTable _inventTable, anytype _value = _inventTable.AltInventVersionId)
    {
        _inventTable.AltInventVersionId = _value;
        return _inventTable.AltInventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findDimensionByNaturalKey</Name>
				<Source><![CDATA[
    public Common findDimensionByNaturalKey(anytype _value)
    {
        return EcoResVersion::findByName(_value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createProductDimensionValue</Name>
				<Source><![CDATA[
    public void createProductDimensionValue(
        EcoResDistinctProductVariant    _ecoResDistinctProductVariant,
        EcoResProductDimensionAttribute _ecoResProductDimensionAttribute,
        RefRecId                        _dimensionValue)
    {
        EcoResProductVariantVersion  ecoResProductVariantVersion;
        ecoResProductVariantVersion.initFromDistinctProductVariant(_ecoResDistinctProductVariant);
        ecoResProductVariantVersion.ProductDimensionAttribute     = _ecoResProductDimensionAttribute.recId;
        ecoResProductVariantVersion.ProductVersion                = _dimensionValue;
        ecoResProductVariantVersion.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTranslationByProduct</Name>
				<Source><![CDATA[
    public EcoResProductMasterDimValueTranslation findTranslationByProduct(EcoResProductRecId _productMasterRecId, anytype _dimensionValue, SystemLanguageId _languageId)
    {
        return EcoResProductMasterVersion::findTranslationByProduct(_productMasterRecId, _dimensionValue, _languageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveDimensionNaturalKey</Name>
				<Source><![CDATA[
    public anytype retrieveDimensionNaturalKey(RecId _id)
    {
        return EcoResVersion::find(_id).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>retrieveDimensionNaturalKeyByProductId</Name>
				<Source><![CDATA[
    public anytype retrieveDimensionNaturalKeyByProductId(RecId _productRecId)
    {
        EcoResVersion ecoResVersion;
        EcoResProductVariantVersion ecoResProductVariantVersion;

        RefRecId productDimensionAttribute   = EcoResProductDimensionAttribute::inventDimFieldId2DimensionAttributeRecId(this.parmInventDimFieldId());

        select firstonly Name
            from         ecoResVersion
            exists join  ecoResProductVariantVersion
                where    ecoResProductVariantVersion.ProductVersion                == ecoResVersion.RecId
                    &&   ecoResProductVariantVersion.ProductDimensionAttribute     == productDimensionAttribute
                    &&   ecoResProductVariantVersion.DistinctProductVariant        == _productRecId;

        return ecoResVersion.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInstance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the singleton instance of the <c>InventProductDimensionVersion</c> class.
    /// </summary>
    /// <returns>An instance of the <c>InventProductDimensionVersion</c> class.</returns>
    public static InventProductDimensionVersion getInstance()
    {
        return InventDimension::singletonFromInventDimFieldId(fieldNum(InventDim, InventVersionId)) as InventProductDimensionVersion;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>