<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>UnitOfMeasureEntityApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>UnitOfMeasureEntityApplicationSuite_Extension</c> class extends the <c>UnitOfMeasureEntity</c> data entity
/// to make additional actions with it's fields.
/// </summary>
[ExtensionOf(dataentityviewstr(UnitOfMeasureEntity))]
public final class UnitOfMeasureEntityApplicationSuite_Extension
{
    #isoCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        next mapEntityToDatasource(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(UnitOfMeasureEntity, UnitOfMeasure_W))
        {
            this.changeUnitOfMeasureWSaveOperation(_dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeUnitOfMeasureWSaveOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the save operation of the <c>UnitOfMeasure_W</c> datasource depending on the current and original values.
    /// </summary>
    /// <param name = "_dataSourceCtx">
    /// A datasource context.
    /// </param>
    private void changeUnitOfMeasureWSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataEntityDatabaseOperation databaseOperation = DataEntityDatabaseOperation::None;

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            if (this.NationalCode)
            {
                databaseOperation = (this.orig().NationalCode ? 
                    DataEntityDatabaseOperation::Update : 
                    DataEntityDatabaseOperation::Insert);
            }
            else
            {
                databaseOperation = (this.orig().NationalCode ? 
                    DataEntityDatabaseOperation::Delete : 
                    DataEntityDatabaseOperation::None);
            }
        }

        _dataSourceCtx.setDatabaseOperation(databaseOperation);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>