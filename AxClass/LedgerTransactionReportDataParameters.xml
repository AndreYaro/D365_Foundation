<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerTransactionReportDataParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides the parameters for the processing classes from the report criteria.
/// </summary>
internal final class LedgerTransactionReportDataParameters
{
    private FromDate fromDate;
    private ToDate toDate;
    private Name primaryDimensionFocus;
    private boolean includeOpening;
    private boolean includeClosing;
    private CurrentOperationsTax postingLayer;
    private LedgerTrialBalanceShowTransactionStates showTransactions;
    private boolean includePendingPurchaseOrder;
    private boolean includePendingPurchReq;
    private boolean includePendingBudgetRegisterEntry;
    private boolean includePendingAdvancedLedgerEntry;
    private boolean includePendingFreeTextInvoice;
    private boolean includePendingProjInvoice;
    private boolean includePendingVendorInvoice;
    private boolean includePendingPayment;
    private boolean includePendingCustPay;
    private boolean includePendingDaily;
    private boolean includePendingBudget;
    private boolean includePendingAllocation;
    private boolean includePendingVendorInvoiceJournal;
    private boolean includePendingVendorInvoiceRegister;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static LedgerTransactionReportDataParameters construct()
    {
        return new LedgerTransactionReportDataParameters();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShowTransactions</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public LedgerTrialBalanceShowTransactionStates parmShowTransactions(LedgerTrialBalanceShowTransactionStates _showTransactions = showTransactions)
    {
        showTransactions = _showTransactions;
        return showTransactions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeClosing</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludeClosing(boolean _includeClosing = includeClosing)
    {
        includeClosing = _includeClosing;
        return includeClosing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeOpening</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludeOpening(boolean _includeOpening = includeOpening)
    {
        includeOpening = _includeOpening;
        return includeOpening;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrimaryDimensionFocus</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public Name parmPrimaryDimensionFocus(Name _primaryDimensionFocus = primaryDimensionFocus)
    {
        primaryDimensionFocus = _primaryDimensionFocus;
        return primaryDimensionFocus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingAdvancedLedgerEntry</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingAdvancedLedgerEntry(boolean _includePendingAdvancedLedgerEntry = includePendingAdvancedLedgerEntry)
    {
        includePendingAdvancedLedgerEntry = _includePendingAdvancedLedgerEntry;
        return includePendingAdvancedLedgerEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingBudgetRegisterEntry</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingBudgetRegisterEntry(boolean _includePendingBudgetRegisterEntry = includePendingBudgetRegisterEntry)
    {
        includePendingBudgetRegisterEntry = _includePendingBudgetRegisterEntry;
        return includePendingBudgetRegisterEntry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingPurchaseOrder</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingPurchaseOrder(boolean _includePendingPurchaseOrder = includePendingPurchaseOrder)
    {
        includePendingPurchaseOrder = _includePendingPurchaseOrder;
        return includePendingPurchaseOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingPurchReq</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingPurchReq(boolean _includePendingPurchReq = includePendingPurchReq)
    {
        includePendingPurchReq = _includePendingPurchReq;
        return includePendingPurchReq;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingFreeTextInvoice</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingFreeTextInvoice(boolean _includePendingFreeTextInvoice = includePendingFreeTextInvoice)
    {
        includePendingFreeTextInvoice = _includePendingFreeTextInvoice;
        return includePendingFreeTextInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingVendorInvoice</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingVendorInvoice(boolean _includePendingVendorInvoice = includePendingVendorInvoice)
    {
        includePendingVendorInvoice = _includePendingVendorInvoice;
        return includePendingVendorInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingProjInvoice</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingProjInvoice(boolean _includePendingProjInvoice = includePendingProjInvoice)
    {
        includePendingProjInvoice = _includePendingProjInvoice;
        return includePendingProjInvoice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingPayment</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingPayment(boolean _includePendingPayment = includePendingPayment)
    {
        includePendingPayment = _includePendingPayment;
        return includePendingPayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingCustPay</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingCustPay(boolean _includePendingCustPay = includePendingCustPay)
    {
        includePendingCustPay = _includePendingCustPay;
        return includePendingCustPay;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingDaily</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingDaily(boolean _includePendingDaily = includePendingDaily)
    {
        includePendingDaily = _includePendingDaily;
        return includePendingDaily;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingBudget</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingBudget(boolean _includePendingBudget = includePendingBudget)
    {
        includePendingBudget = _includePendingBudget;
        return includePendingBudget;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingAllocation</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingAllocation(boolean _includePendingAllocation = includePendingAllocation)
    {
        includePendingAllocation = _includePendingAllocation;
        return includePendingAllocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingVendorInvoiceJournal</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingVendorInvoiceJournal(boolean _includePendingVendorInvoiceJournal = includePendingVendorInvoiceJournal)
    {
        includePendingVendorInvoiceJournal = _includePendingVendorInvoiceJournal;
        return includePendingVendorInvoiceJournal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludePendingVendorInvoiceRegister</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean parmIncludePendingVendorInvoiceRegister(boolean _includePendingVendorInvoiceRegister = includePendingVendorInvoiceRegister)
    {
        includePendingVendorInvoiceRegister = _includePendingVendorInvoiceRegister;
        return includePendingVendorInvoiceRegister;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>