<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInstrumentationWorkBlockingActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Provides activities for blocking and unblocking work using blocking reasons.
/// </summary>
internal final class WHSInstrumentationWorkBlockingActivities
{
    private WHSInstrumentationLogger logger;

    private const str ActivityNamePrefix = 'WorkBlocking.';

    private const str TryBlockWork = 'tryBlockWorkWithReason';
    private const str TryUnBlockWork = 'tryUnBlockWorkWithReason';
    private const str AcquireLock = 'acquireLock';
    private const str TryAllowManualUnBlockReasonList = 'tryAllowManualUnBlockWorkWithReasonList';
    private const str TryUnBlockReasonList = 'tryUnBlockWorkWithReasonList';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(WHSInstrumentationLogger _logger)
    {
        logger = _logger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromLogger</Name>
				<Source><![CDATA[
    internal static WHSInstrumentationWorkBlockingActivities newFromLogger(WHSInstrumentationLogger _logger)
    {
        return new WHSInstrumentationWorkBlockingActivities(_logger);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    private SysInstrumentationActivity activity(str _activityName)
    {
        return logger.activity(ActivityNamePrefix + _activityName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryBlockWork</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext tryBlockWork()
    {
        return logger.activityContext(this.activity(TryBlockWork));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryUnBlockWork</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext tryUnBlockWork()
    {
        return logger.activityContext(this.activity(TryUnBlockWork));
    }

]]></Source>
			</Method>
			<Method>
				<Name>acquireLock</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext acquireLock()
    {
        return logger.activityContext(this.activity(AcquireLock));
    }

]]></Source>
			</Method>
			<Method>
				<Name>tryUnBlockWorkReasonList</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates activity context for unblocking with a reason list.
    /// </summary>
    /// <param name = "_allowManualUnBlock">true if performing a manual unblock operation; otherwise false</param>
    /// <returns>An instance of <c>SysInstrumentationActivityContext</c>.</returns>
    internal SysInstrumentationActivityContext tryUnBlockWorkReasonList(boolean _allowManualUnBlock)
    {
        if (_allowManualUnBlock)
        {
            return logger.activityContext(this.activity(TryAllowManualUnBlockReasonList));
        }

        return logger.activityContext(this.activity(TryUnBlockReasonList));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>