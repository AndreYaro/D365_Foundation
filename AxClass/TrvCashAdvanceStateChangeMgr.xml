<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvCashAdvanceStateChangeMgr</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TrvCashAdvanceStateChangeMgr
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setStatusBasedOnArgsEnum</Name>
				<Source><![CDATA[
    protected static TrvWorkflowCashAdvanceStatus setStatusBasedOnArgsEnum(Args _args)
    {
        TrvWorkflowCashAdvanceStatus returnValue;

        switch (_args.parmEnum())
        {
            case TrvCashAdvanceFilter::Approved:
                returnValue = TrvWorkflowCashAdvanceStatus::Approved;
                break;

            case TrvCashAdvanceFilter::Paid:
                returnValue = TrvWorkflowCashAdvanceStatus::Paid;
                break;
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
	public static void main(Args args)
    {
        TrvCashAdvance trvCashAdvance = args.record();

        // Ensure that all of the fields have been selected before changing the record.
        trvCashAdvance = TrvCashAdvance::findRecId(trvCashAdvance.RecId, true);

        if (args.parmEnumType() ==  enumnum(TrvCashAdvanceFilter))
        {
            TrvWorkflowCashAdvanceStatus status = TrvCashAdvanceStateChangeMgr::setStatusBasedOnArgsEnum(args);

            if (!TrvCashAdvanceStateChangeMgr::validateStatusChange(trvCashAdvance.CashAdvanceStatus, status))
            {
                throw error(strfmt("@SYS108515",trvCashAdvance.CashAdvanceStatus, status));
            }

            trvCashAdvance.CashAdvanceStatus = status;

            ttsbegin;
            trvCashAdvance.doUpdate();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldPaidAmountFieldsBeSet</Name>
				<Source><![CDATA[
    protected static boolean shouldPaidAmountFieldsBeSet(TrvWorkflowCashAdvanceStatus _status)
    {
        boolean returnValue = false;

        if (_status == TrvWorkflowCashAdvanceStatus::Approved)
        { 
            returnValue = true;
        }

        return returnValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCashAdvanceStatus</Name>
				<Source><![CDATA[
    public static void updateCashAdvanceStatus(RecId _recId, TrvWorkflowCashAdvanceStatus _status)
    {
        TrvCashAdvance trvCashAdvance = TrvCashAdvance::findRecId(_recId, true);
    
        if (!TrvCashAdvanceStateChangeMgr::validateStatusChange(trvCashAdvance.CashAdvanceStatus, _status))
        {
            throw error(strfmt("@SYS108515",trvCashAdvance.CashAdvanceStatus, _status));
        }

        trvCashAdvance.CashAdvanceStatus = _status;

        if (TrvCashAdvanceStateChangeMgr::shouldPaidAmountFieldsBeSet(_status))
        {
            trvCashAdvance.PaidAmountCur = trvCashAdvance.RequestedAmountCur;
            trvCashAdvance.PaidAmountMST = trvCashAdvance.RequestAmountMST;
        }

        ttsbegin;
        trvCashAdvance.doUpdate();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateStatusChange</Name>
				<Source><![CDATA[
    public static boolean validateStatusChange(TrvWorkflowCashAdvanceStatus _current, TrvWorkflowCashAdvanceStatus _new)
    {
        boolean ret = true;

        if ( _current == _new)   // no need to validate
            return ret;

        switch (_new)
        {
            case TrvWorkflowCashAdvanceStatus::Submitted:
                ret = _current == TrvWorkflowCashAdvanceStatus::Created;
                break;

            case TrvWorkflowCashAdvanceStatus::Pending:
                ret = _current == TrvWorkflowCashAdvanceStatus::Submitted || _current == TrvWorkflowCashAdvanceStatus::Returned;
                break;

            case TrvWorkflowCashAdvanceStatus::Approved:
                ret = _current == TrvWorkflowCashAdvanceStatus::Pending;
                break;

            case TrvWorkflowCashAdvanceStatus::Returned:
                ret = _current == TrvWorkflowCashAdvanceStatus::Pending;
                break;

            case TrvWorkflowCashAdvanceStatus::Created: //for cancelled wf item
                ret = _current == TrvWorkflowCashAdvanceStatus::Pending || _current == TrvWorkflowCashAdvanceStatus::Returned || _current == TrvWorkflowCashAdvanceStatus::Submitted;
                break;

            case TrvWorkflowCashAdvanceStatus::Paid:
                ret = _current == TrvWorkflowCashAdvanceStatus::Approved;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>