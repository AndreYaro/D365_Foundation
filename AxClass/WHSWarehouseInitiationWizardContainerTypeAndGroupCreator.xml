<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseInitiationWizardContainerTypeAndGroupCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSWarehouseInitiationWizardContainerTypeAndGroupCreator extends WHSWarehouseInitiationWizardEntityCreatorBase
{
    private WHSContainerGroupId groupName;
    private Set selectedTypes;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>entityName</Name>
				<Source><![CDATA[
    public str entityName()
    {
        return tablePName(WHSContainerGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    public static WHSWarehouseInitiationWizardContainerTypeAndGroupCreator newFromParameters(
        WHSWarehouseInitiationWizardEntitiesCreatorMode _mode,
        WHSWarehouseInitiationWizardEntitiesCreationSummaryBuilder _summaryBuilder,
        Set _selectedTypeSet,
        WHSContainerGroupId _groupName)
    {
        WHSWarehouseInitiationWizardContainerTypeAndGroupCreator creator = new WHSWarehouseInitiationWizardContainerTypeAndGroupCreator(_mode, _summaryBuilder);
        creator.groupName = _groupName;
        creator.selectedTypes = _selectedTypeSet;
        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canCreate</Name>
				<Source><![CDATA[
    protected boolean canCreate()
    {
        return groupName != '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    protected boolean exist()
    {
        return WHSContainerGroup::exist(groupName) && this.selectedContainerGroupLinesExist(groupName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    protected void insert()
    {
        WHSContainerGroup containerGroup = WHSContainerGroup::find(groupName);
        
        if(!containerGroup)
        {
            containerGroup.ContainerGroupId = groupName;
            containerGroup.ContainerGroupDesc = groupName;
            containerGroup.insert();

            this.createLines();
        }
        else
        {
            this.updateLines(containerGroup.ContainerGroupId);
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLines</Name>
				<Source><![CDATA[
    protected void createLines()
    {
        int seqNum = 1;
        SetEnumerator typesEnumerator = selectedTypes.getEnumerator();

        while (typesEnumerator.moveNext())
        {
            WHSContainerTypeCode typeName = typesEnumerator.current();
            
            WHSContainerGroupLine groupLine;
            groupLine.ContainerGroupId = groupName;
            groupLine.ContainerTypeCode = typeName;
            groupLine.FillPercentage = 100;
            groupLine.SeqNum = seqNum;
            groupLine.insert();

            seqNum += 1;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLines</Name>
				<Source><![CDATA[
    protected void updateLines(WHSContainerGroupId _containerGroupId)
    {
        WHSContainerGroupLine   contGroupLine;
        select maxOf(SeqNum) from contGroupLine where contGroupLine.ContainerGroupId == _containerGroupId;
        int seqNum = contGroupLine.SeqNum + 1;

        SetEnumerator typesEnumerator = selectedTypes.getEnumerator();

        while (typesEnumerator.moveNext())
        {
            WHSContainerTypeCode typeName = typesEnumerator.current();
            boolean containerGroupLineExist = WHSContainerGroupLine::exist(_containerGroupId, typeName);
            
            if(!containerGroupLineExist)
            {
                WHSContainerGroupLine groupLine;
                groupLine.ContainerGroupId = _containerGroupId;
                groupLine.ContainerTypeCode = typeName;
                groupLine.FillPercentage = 100;
                groupLine.SeqNum = seqNum;
                groupLine.insert();

                seqNum += 1;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedContainerGroupLinesExist</Name>
				<Source><![CDATA[
    protected boolean selectedContainerGroupLinesExist(WHSContainerGroupId _containerGroupId)
    {
        boolean linesExist = true;

        SetEnumerator typesEnumerator = selectedTypes.getEnumerator();

        while (typesEnumerator.moveNext())
        {
            WHSContainerTypeCode typeName = typesEnumerator.current();
            boolean lineWithTypeExists = WHSContainerGroupLine::exist(_containerGroupId, typeName);
            
            linesExist = linesExist && lineWithTypeExists;

        }

        return linesExist;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>