<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceCapacity</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource capacity class
/// </summary>
public class ResResourceCapacity
{
    private ResourceRecId resource;
    private LegalEntityRecId legalEntity;
    private utcdatetime start, end;
    private real capacity;
    private real bookedCapacity;
    private real remainingCapacity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the start date/time of the capacity range
    /// </summary>
    /// <param name = "_start">Start date/time value</param>
    /// <returns>Date/time value</returns>
    public utcdatetime start(utcdatetime _start = start)
    {
        start = _start;
        return start;
    }

]]></Source>
			</Method>
			<Method>
				<Name>end</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the end date/time of the capacity range
    /// </summary>
    /// <param name = "_end">End date/time value</param>
    /// <returns>Date/time value</returns>
    public utcdatetime end(utcdatetime _end = end)
    {
        end = _end;
        return end;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource record identifier
    /// </summary>
    /// <param name = "_resource">Resource record identifier</param>
    /// <returns>Int64 record identifier value</returns>
    public ResourceRecId resource(ResourceRecId _resource = resource)
    {
        resource = _resource;
        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the legal entity record identifier of the resource
    /// </summary>
    /// <param name = "_legalEntity">Legal entity record identifier</param>
    /// <returns>Int64 record identifier value</returns>
    public LegalEntityRecId legalEntity(LegalEntityRecId _legalEntity = legalEntity)
    {
        legalEntity = _legalEntity;
        return legalEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCapacities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the available and booked capacities of the resource
    /// </summary>
    /// <returns>TRUE when the operation succeeds</returns>
    public boolean getCapacities()
    {
        ResCapacityUtilizationHourView utilizationView;

        select sum(Capacity), sum(HardLocked), sum(Remaining) from utilizationView
            group by utilizationView.resource
            where utilizationView.Resource == resource
            && utilizationView.Timeframe >= start
            && utilizationView.Timeframe <= end;

        capacity = utilizationView.Capacity;
        bookedCapacity = utilizationView.HardLocked;
        remainingCapacity = utilizationView.Remaining;

        return utilizationView && true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>capacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the resource capacity
    /// </summary>
    /// <param name = "_capacity">Resource capacity</param>
    /// <returns>Real resource capacity value</returns>
    public real capacity(real _capacity = capacity)
    {
        capacity = _capacity;
        return capacity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>bookedCapacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the booked capacity
    /// </summary>
    /// <param name = "_bookedCapacity">Booked capacity</param>
    /// <returns>Real booked capacity value</returns>
    public real bookedCapacity(real _bookedCapacity = bookedCapacity)
    {
        bookedCapacity = _bookedCapacity;
        return bookedCapacity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>remaining</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the remaining capacity
    /// </summary>
    /// <param name = "_remainingCapacity">Remaining capacity</param>
    /// <returns>Real remaining capacity value</returns>
    public real remaining(real _remainingCapacity = remainingCapacity)
    {
        remainingCapacity = _remainingCapacity;
        return remainingCapacity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the resource capacity
    /// </summary>
    /// <param name = "_resource">Resource record identifier</param>
    /// <param name = "_legalEntity">Legal entity record identifier</param>
    /// <param name = "_start">Start date/time of the capacity range</param>
    /// <param name = "_end">End date/time of the capacity range</param>
    protected void new(ResourceRecId _resource, LegalEntityRecId _legalEntity, utcdatetime _start, utcdatetime _end)
    {
        resource = _resource;
        legalEntity = _legalEntity;
        start = _start;
        end = _end;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the resource capacity
    /// </summary>
    /// <param name = "_resource">Resource record identifier</param>
    /// <param name = "_legalEntity">Legal entity record identifier</param>
    /// <param name = "_start">Start date/time of the capacity range</param>
    /// <param name = "_end">End date/time of the capacity range</param>
    /// <returns>Instance of <c>ResResourceCapacity</c></returns>
    public static ResResourceCapacity construct(ResourceRecId _resource, LegalEntityRecId _legalEntity, utcdatetime _start, utcdatetime _end)
    {
        ResResourceCapacity capacity = new ResResourceCapacity(_resource, _legalEntity, _start, _end);
        return capacity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getScheduleStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Return schedule status
    /// </summary>
    /// <param name="hourCapacity">
    /// Capacity hours
    /// </param>
    /// <param name="bookedCapacity">
    /// Booked hours
    /// </param>
    /// <returns>
    /// Schedule status
    /// </returns>
    public static ProjScheduleStatus getScheduleStatus(real hourCapacity, real bookedCapacity)
    {
        ProjScheduleStatus scheduleStatus;

        if (bookedCapacity == hourCapacity && hourCapacity > 0)
        {
            scheduleStatus = ProjScheduleStatus::Booked;
        }
        else if (bookedCapacity > hourCapacity)
        {
            scheduleStatus = ProjScheduleStatus::Overbooked;
        }
        else if (bookedCapacity > 0)
        {
            scheduleStatus = ProjScheduleStatus::PartiallyAvailable;
        }
        else if (hourCapacity == 0)
        {
            scheduleStatus = ProjScheduleStatus::Unavailable;
        }
        else
        {
            scheduleStatus = ProjScheduleStatus::Available;
        }

        return scheduleStatus;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>