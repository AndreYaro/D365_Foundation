<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDimCtrl_Frm_Mov_Count</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// class for inventDimCtrl for count journal
/// controls dimensions on grid
/// </summary>
class InventDimCtrl_Frm_Mov_Count extends InventDimCtrl_Frm_Mov
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// substantiates the object
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method shows/hides disposition code and status control based on batchId control
    /// </summary>
    public void updateControls()
    {
        FormRun         formRun = callingElement.formObject();

        #define.batchId    ("InventoryDimensionsGrid_inventBatchId")
        #define.dispCode   ("PdsDispositionCode")
        #define.dispStatus ("PdsDispositionStatus")

        super();

        if (#PdsShelfEnabled && formRun)
        {
            FormControl batchIdControl    = formRun.design().controlName(#batchId);
            FormControl dispCodeControl   = formRun.design().controlName(#dispCode);
            FormControl dispStatusControl = formRun.design().controlName(#dispStatus);
            dispCodeControl.visible(batchIdControl.visible());
            dispStatusControl.visible(batchIdControl.visible());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEnableDimensionInCurrentCountryContext</Name>
				<Source><![CDATA[
    protected boolean canEnableDimensionInCurrentCountryContext(FieldId _fieldId)
    {
        return this.isOwnerFieldInConsignmentConfiguration(_fieldId) || super(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns an instance of the class
    /// </summary>
    /// <returns>returns instance</returns>
    public static InventDimCtrl_Frm_Mov_Count construct()
    {
        return new InventDimCtrl_Frm_Mov_Count();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromFormMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes an instance of this class to be used in Forms.
    /// </summary>
    /// <param name="_formRun">
    /// The Form where controls are maintained
    /// </param>
    /// <param name="_movement">
    /// An instance of the movement for which the class is used.
    /// </param>
    /// <returns>
    /// A instance of this class to be used in a Form
    /// </returns>
    public static InventDimCtrl_Frm_Mov newFromFormMovement(
        FormRun         _formRun,
        InventMovement  _movement)
    {
        InventDimCtrl_Frm_Mov   inventDimCtrl
            = InventDimCtrl_Frm_Mov_Count::construct();
        InventDimAxFormAdapter adapter
            = InventDimAxFormAdapter::newFromForm(_formRun);

        inventDimCtrl.parmCallingElement(adapter);
        inventDimCtrl.parmMovement(_movement);
        inventDimCtrl.init();

        return inventDimCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
