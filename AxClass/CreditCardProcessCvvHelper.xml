<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardProcessCvvHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The CreditCardProcessCvvHelper class contains helper methods for credit card verification value.
/// </summary>
internal static final class CreditCardProcessCvvHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCvvRequired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if CVV is needed.
    /// </summary>
    /// <param name = "_mcrCustPaymTable">
    /// The customer payment record.
    /// </param>
    /// <param name = "_salesTable">
    /// The salestable record.
    /// </param>
    /// <returns>
    /// True if CVV is needed.
    /// </returns>
    internal static NoYes isCvvRequired(MCRCustPaymTable _mcrCustPaymTable, SalesTable _salesTable = null)
    {
        NoYes checkCvc = NoYes::No;

        CreditCardAuthTrans creditCardAuthTransLoc = CreditCardAuthTrans::findLatest(_salesTable.SalesId);

        // Once the authorization and cvv check is completed, then there is no need for a cvv check.
        if (creditCardAuthTransLoc.RecId && creditCardAuthTransLoc.CVCResult == CreditCardMSCVCResultCode::Success)
        {
            return checkCvc;
        }

        CreditCardPreAuthorization creditCardPreAuthorization = CustParameters::find().CreditCardPreAuthorization;
        if (creditCardPreAuthorization || _salesTable)
        {
            CreditCardCVC cardVerificationCheck = CustTable::find(_salesTable.CustAccount).CreditCardCVC;

            if (cardVerificationCheck == CreditCardCVC::Yes)
            {
                checkCvc = NoYes::Yes;
            }
            else if (cardVerificationCheck == CreditCardCVC::None)
            {
                CreditCardCust creditCardCustLoc = CreditCardCust::find(_mcrCustPaymTable.PaymInfoRecId);
                CreditCardProcessors creditCardProcessors = CreditCardProcessors::find(creditCardCustLoc.CreditCardProcessors);
                CreditCardAccountSetup creditCardAccountSetup = CreditCardAccountSetup::find(creditCardProcessors.RecId);

                checkCvc = creditCardAccountSetup.CardVerificationCheck;
            }
        }
        return checkCvc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCardVerificationValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the credit card verification value.
    /// </summary>
    /// <param name = "_mcrCustPaymTable">
    /// The customer payment record.
    /// </param>
    /// <param name = "_salesTable">
    /// The salestable record.
    /// </param>
    /// <returns>
    /// Credit card verification value.
    /// </returns>
    internal static CreditCardVerificationNumber getCardVerificationValue(MCRCustPaymTable _mcrCustPaymTable, SalesTable _salesTable = null)
    {
        CreditCardVerificationNumber cvv;

        CreditCardCust creditCardCust = CreditCardCust::find(_mcrCustPaymTable.PaymInfoRecId);
        CreditCardProcessors creditCardProcessors = CreditCardProcessors::find(creditCardCust.CreditCardProcessors);
        CreditCardAccountSetup creditCardAccountSetup = CreditCardAccountSetup::find(creditCardProcessors.RecId);

        CreditCardCVVEntry cvvEntry = new CreditCardCVVEntry(creditCardAccountSetup);

        cvvEntry.parmSalesTable(_salesTable);
        cvvEntry.parmCreditCardNumber(creditCardCust.CardNumber);

        if (cvvEntry.prompt())
        {
            cvv = cvvEntry.getCVV();
        }
        return cvv;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>