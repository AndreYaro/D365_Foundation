<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceAssignmentCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Resource assignment collection controller.
/// </summary>
public class ResResourceAssignmentCollection extends ResActivityResourcesCollection implements IAVCollectionController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCollectionQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query for all resources of the project and company.
    /// </summary>
    /// <returns>Instance of query object.</returns>
    public Query getCollectionQuery()
    {
        AvailabilityView avControl = this.control();
        ResAvailabilityViewContext context = avControl.controlContext();
        ActivityRecId activity;

        if (context)
        {
            ActivityRecId task = context.activity();
            activity = HierarchyTreeTable::findActivityRootRefRecId(task);
        }

        Query query;
        if (ResUtil::isPerformanceEnhancementFeatureEnabled(true))
        {
            query = new Query(querystr(ResTaskResourcesQueryV2));
        }
        else
        {
            query = new Query(querystr(ResTaskResourcesQuery));
        }
            
        QueryBuildDataSource dataSource = query.dataSourceName('ActivityResources');

        // set recipientCompany
        SelectableDataArea currentDataArea = curExt();
        dataSource.range(1).value(queryValue(currentDataArea));

        // set activity
        if (activity)
        {
            dataSource.range(2).value(strFmt('%1,0', activity));
        }

        // set effective date/time
        utcdatetime end = avControl.endDateTime();
        dataSource.range(3).value(strfmt('..%1', queryValue(end)));

        // set expiration date/time
        utcdatetime start = avControl.startDateTime();
        dataSource.range(4).value(strFmt('%1..', queryValue(start)));

        // set ranges for company resource exclusions - ExcludedCompanyResources
        dataSource = dataSource.childDataSourceNo(1);

        // set recipient company
        dataSource.range(1).value(queryValue(currentDataArea));

        // set activity
        if (activity)
        {
            dataSource.range(2).value(queryValue(activity));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes common record to data contract instance.
    /// </summary>
    /// <param name = "_entity">Record instance.</param>
    /// <returns>Instance of <c>CollectionItemDataContract</c>.</returns>
    public CollectionItemDataContract resolveEntity(Common _entity)
    {
        List properties = new List(Types::Class);

        EntityFieldDataContract kvPair = EntityFieldDataContract::construct('Name', _entity.getFieldValue('Name'));
        properties.addEnd(kvPair);

        var activity = _entity.getFieldValue('Activity');
        kvPair = EntityFieldDataContract::construct('Activity', activity);
        properties.addEnd(kvPair);

        kvPair = EntityFieldDataContract::construct('Role', _entity.getFieldValue('SourceCompany'));
        properties.addEnd(kvPair);

        int isGenericResource = _entity.getFieldValue('Generic');
        kvPair = EntityFieldDataContract::construct('IsGenericResource', isGenericResource);
        properties.addEnd(kvPair);

        str collectionKey = this.buildCollectionItemKey(
            activity,
            _entity.getFieldValue('Resource'),
            _entity.getFieldValue("ActivityResource"));

        CollectionItemDataContract resource = CollectionItemDataContract::construct();
        resource.CollectionKey(collectionKey);
        resource.Properties(properties);
        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the resource assignment collection controller.
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the resource assignment collection controller
    /// </summary>
    /// <returns>Instance of <c>ResResourceAssignmentCollection</c></returns>
    public static IAVCollectionController construct()
    {
        IAVCollectionController controller = new ResResourceAssignmentCollection();
        return controller;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>