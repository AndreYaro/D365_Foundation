<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendInvoiceAutomationInstrumentationTransferCapturedInvoiceActivities</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class VendInvoiceAutomationInstrumentationTransferCapturedInvoiceActivities
{
    private const str ActivityNamePrefix = 'TransferCapturedInvoice';
    private const str CapturedInvoiceRecId = 'CapturedInvoiceRecId';
    private const str CollectCapturedInvoicesReady = 'CollectCapturedInvoicesReady';
    private const str ProcessAutomationExecutionId = 'ProcessAutomationExecutionId';
    private const str PerformTransfer = 'PerformTransfer';
    private const str RemoveTransferRecords = 'RemoveTransferRecords';
    private const str Success = 'Success';
    private const str Failure = 'Failure';

    private SysInstrumentationLogger logger;
    private SysInstrumentationActivityContext collectCapturedInvoicesReadyForTransferContext;
    private SysInstrumentationActivityContext failureTransferContext;
    private SysInstrumentationActivityContext performTransferContext;
    private SysInstrumentationActivityContext successTransferContext;
    private SysInstrumentationActivityContext removeTransferRecordsContext;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromLoggerName</Name>
				<Source><![CDATA[
    internal static VendInvoiceAutomationInstrumentationTransferCapturedInvoiceActivities createFromLoggerName(str _name)
    {
        VendInvoiceAutomationInstrumentationTransferCapturedInvoiceActivities activities = new VendInvoiceAutomationInstrumentationTransferCapturedInvoiceActivities();

        activities.logger = SysInstrumentationLoggerFactory::CreateLogger(_name);

        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>collectCapturedInvoicesReadyForTransferContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext collectCapturedInvoicesReadyForTransferContext()
    {
        if (collectCapturedInvoicesReadyForTransferContext == null)
        {
            collectCapturedInvoicesReadyForTransferContext = this.activityContext(CollectCapturedInvoicesReady);
        }

        return collectCapturedInvoicesReadyForTransferContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>failureTransferContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext failureTransferContext(System.Exception _exception)
    {
        if (failureTransferContext == null)
        {
            failureTransferContext = this.activityContext(Failure);
            failureTransferContext.setException(_exception);
        }

        return failureTransferContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performTransferContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext performTransferContext(RecId _recId, ProcessExecutionId _executionId)
    {
        if (performTransferContext == null)
        {
            performTransferContext = this.activityContext(PerformTransfer);
            performTransferContext.addCustomProperty(CapturedInvoiceRecId, int642Str(_recId));
            performTransferContext.addCustomProperty(ProcessAutomationExecutionId, guid2Str(_executionId));
        }
        
        return performTransferContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>successTransferContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext successTransferContext()
    {
        if (successTransferContext == null)
        {
            successTransferContext = this.activityContext(Success);
        }

        return successTransferContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>removeTransferRecordsContext</Name>
				<Source><![CDATA[
    internal SysInstrumentationActivityContext removeTransferRecordsContext()
    {
        if (removeTransferRecordsContext == null)
        {
            removeTransferRecordsContext = this.activityContext(RemoveTransferRecords);
        }

        return removeTransferRecordsContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    private SysInstrumentationActivityContext activityContext(str _activityName)
    {
        return logger.activityContextWithCustomProperties(
            SysInstrumentationActivity::construct(
            VendInvoiceAutomationInstrumentationFormatting::segmentedName(ActivityNamePrefix, _activityName),
            VendInvoiceAutomationConstants::InstrumentationNamespace));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>