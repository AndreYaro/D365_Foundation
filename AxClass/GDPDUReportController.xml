<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GDPDUReportController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>GDPDUReportController</c> class is the controller for ER GDPDUReport generation.
/// </summary>
class GDPDUReportController extends ERFormatMappingRunBaseController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GDPDUReportController controller = GDPDUReportController::construct();

        controller.parmArgs(_args);
        controller.prePromptModifyContract();
        GDPDUReportContract contract = controller.getDataContractObject() as GDPDUReportContract;
        if (contract.parmFormatMapping())
        {
            controller.parmShowDialog(false);
        }
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GDPDUReportController construct()
    {
        GDPDUReportController controller = new GDPDUReportController(
            classStr(GDPDUReportService), 
            methodStr(GDPDUReportService, generateReport), 
            SysOperationExecutionMode::Synchronous);
        controller.parmLoadFromSysLastValue(false);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prePromptModifyContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prepares for data contract.
    /// </summary>
    protected void prePromptModifyContract()
    {
        ERReportFormatMappingId reportFormatMappingId = LedgerParameters::find().LedgerTransactionsExportFormat;

        GDPDUReportContract contract = this.getDataContractObject() as GDPDUReportContract;
        contract.parmFormatMapping(reportFormatMappingId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArgs</Name>
				<Source><![CDATA[
    public Args parmArgs(Args _args = args)
    {
        args = _args;
        return args;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>