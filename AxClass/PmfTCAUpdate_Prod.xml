<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfTCAUpdate_Prod</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class used to calculate and update the production co-products cost allocation percent.
/// </summary>
class PmfTCAUpdate_Prod extends PmfTCAUpdate
{
    ProdTable   prodTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcCoByExtPrice</Name>
				<Source><![CDATA[
        public Price calcCoByExtPrice(Common _buffer)
    {
        PmfProdCoBy     prodCoByBuffer = _buffer as PmfProdCoBy;
        Price           coByExtPrice = 0;

        if (prodTable.status().isBefore(ProdStatus::ReportedFinished))
        {
            coByExtPrice = prodCoByBuffer.type().qtyCoBySched() * prodCoByBuffer.inventItemPrice().pcsPrice();
        }
        else
        {
            coByExtPrice = prodCoByBuffer.reportedFinishedGood() * prodCoByBuffer.inventItemPrice().pcsPrice();
        }

        return coByExtPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>estimatedAllocationPct</Name>
				<Source><![CDATA[
        public Percent estimatedAllocationPct()
    {
        return 0.0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBufferFromQueryRun</Name>
				<Source><![CDATA[
        public Common getBufferFromQueryRun(QueryRun  _queryRun)
    {
        return _queryRun.get(tablenum(PmfProdCoBy));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFormulaExtPrice</Name>
				<Source><![CDATA[
        public Price getFormulaExtPrice()
    {
        Price   formulaExtPrice = 0;

        if (prodTable.inventTable().PmfProductType == PmfProductType::Formula)
        {
            if (prodTable.status().isBefore(ProdStatus::ReportedFinished))
            {
                formulaExtPrice = prodTable.QtySched * prodTable.inventItemPrice().pcsPrice();
            }

            if (prodTable.status().isAfterOrEqualTo(ProdStatus::ReportedFinished))
            {
                formulaExtPrice = prodTable.reportedFinishedGood() * prodTable.inventItemPrice().pcsPrice();
            }
        }

        return formulaExtPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        protected void new(Common _buffer)
    {
        super(_buffer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProdTable</Name>
				<Source><![CDATA[
        public ProdTable parmProdTable(ProdTable    _prodTable = prodTable)
    {
        if (! prmisDefault(_prodTable))
        {
            prodTable = _prodTable;
        }

        return prodTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryRunBuild</Name>
				<Source><![CDATA[
        QueryRun queryRunBuild()
    {
        Query                   query;
        QueryBuildDataSource    dataSource;

        query           = new Query();
        dataSource      = query.addDataSource(tablenum(PmfProdCoBy));
        dataSource.update(true);
        dataSource.addRange(fieldNum(PmfProdCoBy, ProdId)).value(prodTable.ProdId);
        dataSource.addRange(fieldNum(PmfProdCoBy, CostAllocation)).value(queryValue(PmfCostAllocationMethod::TCA));
        dataSource.addRange(fieldNum(PmfProdCoBy, ProductType)).value(queryValue(PmfProductType::Co_Product));

        return new QueryRun(query);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBuffer</Name>
				<Source><![CDATA[
        public void updateBuffer(Common _buffer, Real _percent)
    {
        PmfProdCoBy prodCoBy = _buffer as PmfProdCoBy;

        ttsBegin;
        prodCoBy.selectForUpdate(true);
        prodCoBy.CostAllocationPct = _percent;
        prodCoBy.update();
        ttsCommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromProdTable</Name>
				<Source><![CDATA[
        public static PmfTCAUpdate_Prod newFromProdTable(ProdTable    _prodTable)
    {
        PmfTCAUpdate_Prod  pmfUpdateTCAProd = new PmfTCAUpdate_Prod(_prodTable);

        pmfUpdateTCAProd.parmProdTable(_prodTable);

        return pmfUpdateTCAProd;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>