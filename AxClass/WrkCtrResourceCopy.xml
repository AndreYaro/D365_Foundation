<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WrkCtrResourceCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    Creates a new resource based on a resource that already exists.
/// </summary>
/// <remarks>
///    The resource group memebership and the capabilities of the resource will also be copied.
/// </remarks>
class WrkCtrResourceCopy
{
    WrkCtrType  fromWrkCtrType;
    WrkCtrId    fromWrkCtrId;
    WrkCtrType  toWrkCtrType;
    WrkCtrId    toWrkCtrId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>copy</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new resource based on a resource that exists.
    /// </summary>
    /// <returns>
    ///    true if the copy succedded; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    The resource group memebership and the capabilities of the resource will also be copied.
    /// </remarks>
    public boolean copy()
    {
        WrkCtrTable                 fromWrkCtrTable;
        WrkCtrResourceGroupResource fromWrkCtrResourceGroupResource;
        WrkCtrResourceCalendar      fromWrkCtrResourceCalendar;
        WrkCtrCapabilityResource    fromWrkCtrCapabilityResource;

        WrkCtrTable                 toWrkCtrTable;
        WrkCtrResourceGroupResource toWrkCtrResourceGroupResource;
        WrkCtrResourceCalendar      toWrkCtrResourceCalendar;
        WrkCtrCapabilityResource    toWrkCtrCapabilityResource;

        date                        minSearchDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
        date                        maxSearchDate = dateMax();

        //First validate if the parm's has been set correct
        if (! this.validate())
        {
            return false;
        }

        ttsbegin;

        //Copy resource
        fromWrkCtrTable = WrkCtrTable::find(this.parmFromWrkCtrId());

        toWrkCtrTable.data(fromWrkCtrTable);
        toWrkCtrTable.WrkCtrId = this.parmToWrkCtrId();
        toWrkCtrTable.WrkCtrType = this.parmToWrkCtrType();
        toWrkCtrTable.insert();

        //Copy relations to resource group
        while select validTimeState(minSearchDate, maxSearchDate) fromWrkCtrResourceGroupResource
            where fromWrkCtrResourceGroupResource.WrkCtrId              == fromWrkCtrTable.WrkCtrId
        {
            toWrkCtrResourceGroupResource.data(fromWrkCtrResourceGroupResource);
            toWrkCtrResourceGroupResource.WrkCtrId = toWrkCtrTable.WrkCtrId;
            toWrkCtrResourceGroupResource.insert();
        }

        //Copy relations to resource calendar
        while select validTimeState(minSearchDate, maxSearchDate) fromWrkCtrResourceCalendar
            where fromWrkCtrResourceCalendar.WrkCtrId == fromWrkCtrTable.WrkCtrId
        {
            toWrkCtrResourceCalendar.data(fromWrkCtrResourceCalendar);
            toWrkCtrResourceCalendar.WrkCtrId = toWrkCtrTable.WrkCtrId;
            toWrkCtrResourceCalendar.insert();
        }

        //Copy capabilities
        while select validTimeState(minSearchDate, maxSearchDate) fromWrkCtrCapabilityResource
            where fromWrkCtrCapabilityResource.WrkCtrId             == fromWrkCtrTable.WrkCtrId
               && fromWrkCtrCapabilityResource.ResourceDataAreaId   == fromWrkCtrTable.DataAreaId
        {
            toWrkCtrCapabilityResource.data(fromWrkCtrCapabilityResource);
            toWrkCtrCapabilityResource.WrkCtrId = toWrkCtrTable.WrkCtrId;
            toWrkCtrCapabilityResource.ResourceDataAreaId = toWrkCtrTable.DataAreaId;
            toWrkCtrCapabilityResource.insert();
        }

        ttscommit;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromWrkCtrId</Name>
				<Source><![CDATA[
    public WrkCtrId parmFromWrkCtrId(WrkCtrId _wrkCtrId = fromWrkCtrId)
    {
        fromWrkCtrId = _wrkCtrId;
        return fromWrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromWrkCtrType</Name>
				<Source><![CDATA[
    public WrkCtrType parmFromWrkCtrType(WrkCtrType _wrkCtrType = fromWrkCtrType)
    {
        fromWrkCtrType = _wrkCtrType;
        return fromWrkCtrType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToWrkCtrId</Name>
				<Source><![CDATA[
    public WrkCtrId parmToWrkCtrId(WrkCtrId _wrkCtrId = toWrkCtrId)
    {
        toWrkCtrId = _wrkCtrId;
        return toWrkCtrId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToWrkCtrType</Name>
				<Source><![CDATA[
    public WrkCtrType parmToWrkCtrType(WrkCtrType _wrkCtrType = toWrkCtrType)
    {
        toWrkCtrType = _wrkCtrType;
        return toWrkCtrType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Validates that the parameters passed to the class are correct.
    /// </summary>
    /// <returns>
    ///    true if the validation passes; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    If parameters passed are incorrect then errors are also added to the Infolog.
    /// </remarks>
    public boolean validate()
    {
        WrkCtrTable     fromWrkCtrTable;

        fromWrkCtrTable = WrkCtrTable::find(this.parmFromWrkCtrId());

        if (!fromWrkCtrTable)
        {
            return checkFailed(strfmt("@SYS12234", this.parmFromWrkCtrId()));
        }

        if (fromWrkCtrTable.WrkCtrType != this.parmFromWrkCtrType())
        {
            return checkFailed(strfmt("@SYS133100", this.parmFromWrkCtrId()));
        }

        if (!this.parmToWrkCtrId())
        {
            return checkFailed(strfmt("@SYS26332",fieldpname(WrkCtrTable,WrkCtrId)));
        }

        if (WrkCtrTable::exist(this.parmToWrkCtrId()))
        {
            return checkFailed(strfmt("@SYS133101",this.parmToWrkCtrId()));
        }

        if (this.parmFromWrkCtrType() == WrkCtrType::Group ||
            this.parmToWrkCtrType() == WrkCtrType::Group)
        {
            return checkFailed('@SCM:OperationsResourceNotGroup');
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WrkCtrResourceCopy construct()
    {
        return new WrkCtrResourceCopy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newDefault</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a new instance of the <c>wrkCtrResourceCopy</c> class filled out with the supplied
    ///    parameters.
    /// </summary>
    /// <param name="_fromWrkCtrType">
    ///    The type of resource to copy from.
    /// </param>
    /// <param name="_fromWrkCtrId">
    ///    The <c>WrkCtrId</c> object of the resource to copy from.
    /// </param>
    /// <param name="_toWrkCtrType">
    ///    The type of resource to be created.
    /// </param>
    /// <param name="_toWrkCtrId">
    ///    The <c>WrkCtrId</c> of the new resource.
    /// </param>
    /// <returns>
    ///    A new instance of the <c>wrkCtrResourceCopy</c> class.
    /// </returns>
    public static WrkCtrResourceCopy newDefault(WrkCtrType  _fromWrkCtrType,
                                                WrkCtrId    _fromWrkCtrId,
                                                WrkCtrType  _toWrkCtrType,
                                                WrkCtrId    _toWrkCtrId)
    {
        WrkCtrResourceCopy wrkCtrResourceCopy = WrkCtrResourceCopy::construct();

        wrkCtrResourceCopy.parmFromWrkCtrType(_fromWrkCtrType);
        wrkCtrResourceCopy.parmFromWrkCtrId(_fromWrkCtrId);
        wrkCtrResourceCopy.parmToWrkCtrType(_toWrkCtrType);
        wrkCtrResourceCopy.parmToWrkCtrId(_toWrkCtrId);

        return wrkCtrResourceCopy;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>