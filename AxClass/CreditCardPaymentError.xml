<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardPaymentError</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The CreditCardPaymentError class represents one error as returned from the Payment SDK.
/// </summary>
class CreditCardPaymentError
{
    int code;
    str message;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(int _code, str _message)
    {
        code = _code;

        if (_code != 0 && !_message)
        {
            message = CreditCardPaymentError::code2Message(_code);
        }
        else
        {
            message = _message;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCode</Name>
				<Source><![CDATA[
    public int parmCode()
    {
        return code;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMessage</Name>
				<Source><![CDATA[
    public str parmMessage()
    {
        return message;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static CreditCardPaymentError construct(int _code, str _message)
    {
        return new CreditCardPaymentError(_code, _message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>code2Message</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps Payment error code to error message.
    /// </summary>
    /// <param name = "_code">The error code.</param>
    /// <returns>The error message.</returns>
    public static str code2Message(int _code)
    {
        str message;
        Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode errorCode = _code;

        switch (errorCode)
        {
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidOperation:
                message = "@Retail:PaymentErrorInvalidOperation";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ApplicationError:
                message = "@Retail:PaymentErrorApplicationError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::GenericCheckDetailsForError:
                message = "@Retail:PaymentErrorGenericCheckDetailsForError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::DONotAuthorized:
                message = "@Retail:PaymentErrorDONotAuthorized";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::UserAborted:
                message = "@Retail:PaymentErrorUserAborted";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidArgumentTenderAccountNumber:
                message = "@Retail:PaymentErrorInvalidArgumentTenderAccountNumber";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::LocaleNotSupported:
                message = "@Retail:PaymentErrorLocaleNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidMerchantProperty:
                message = "@Retail:PaymentErrorInvalidMerchantProperty";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidArgumentVoiceAuthCode:
                message = "@Retail:PaymentErrorInvalidArgumentVoiceAuthCode";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CommunicationError:
                message = "@Retail:PaymentErrorCommunicationError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidArgumentCardTypeNotSupported:
                message = "@Retail:PaymentErrorInvalidArgumentCardTypeNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::VoiceAuthorizationNotSupported:
                message = "@Retail:PaymentErrorVoiceAuthorizationNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ReauthorizationNotSupported:
                message = "@Retail:PaymentErrorReauthorizationNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::MultipleCaptureNotSupported:
                message = "@Retail:PaymentErrorMultipleCaptureNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::BatchCaptureNotSupported:
                message = "@Retail:PaymentErrorBatchCaptureNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::UnsupportedCurrency:
                message = "@Retail:PaymentErrorUnsupportedCurrency";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::UnsupportedCountry:
                message = "@Retail:PaymentErrorUnsupportedCountry";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CannotReauthorizePostCapture:
                message = "@Retail:PaymentErrorCannotReauthorizePostCapture";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CannotReauthorizePostVoid:
                message = "@Retail:PaymentErrorCannotReauthorizePostVoid";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ImmediateCaptureNotSupported:
                message = "@Retail:PaymentErrorImmediateCaptureNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CardExpired:
                message = "@Retail:PaymentErrorCardExpired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ReferToIssuer:
                message = "@Retail:PaymentErrorReferToIssuer";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoReply:
                message = "@Retail:PaymentErrorNoReply";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::HoldCallOrPickupCard:
                message = "@Retail:PaymentErrorHoldCallOrPickupCard";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidAmount:
                message = "@Retail:PaymentErrorInvalidAmount";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AccountLengthError:
                message = "@Retail:PaymentErrorAccountLengthError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AlreadyReversed:
                message = "@Retail:PaymentErrorAlreadyReversed";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CannotVerifyPin:
                message = "@Retail:PaymentErrorCannotVerifyPin";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCardNumber:
                message = "@Retail:PaymentErrorInvalidCardNumber";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCVV2:
                message = "@Retail:PaymentErrorInvalidCVV2";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CashBackNotAvailable:
                message = "@Retail:PaymentErrorCashBackNotAvailable";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CardTypeVerificationError:
                message = "@Retail:PaymentErrorCardTypeVerificationError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::Decline:
                message = "@Retail:PaymentErrorDecline";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::EncryptionError:
                message = "@Retail:PaymentErrorEncryptionError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoActionTaken:
                message = "@Retail:PaymentErrorNoActionTaken";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoSuchIssuer:
                message = "@Retail:PaymentErrorNoSuchIssuer";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::PinTriesExceeded:
                message = "@Retail:PaymentErrorPinTriesExceeded";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::SecurityViolation:
                message = "@Retail:PaymentErrorSecurityViolation";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ServiceNotAllowed:
                message = "@Retail:PaymentErrorServiceNotAllowed";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::StopRecurring:
                message = "@Retail:PaymentErrorStopRecurring";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::WrongPin:
                message = "@Retail:PaymentErrorWrongPin";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CVV2Mismatch:
                message = "@Retail:PaymentErrorCVV2Mismatch";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::DuplicateTransaction:
                message = "@Retail:PaymentErrorDuplicateTransaction";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::Reenter:
                message = "@Retail:PaymentErrorReenter";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AmountExceedLimit:
                message = "@Retail:PaymentErrorAmountExceedLimit";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AuthorizationExpired:
                message = "@Retail:PaymentErrorAuthorizationExpired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AuthorizationAlreadyCompleted:
                message = "@Retail:PaymentErrorAuthorizationAlreadyCompleted";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AuthorizationIsVoided:
                message = "@Retail:PaymentErrorAuthorizationIsVoided";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ProcessorDuplicateBatch:
                message = "@Retail:PaymentErrorProcessorDuplicateBatch";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AuthorizationFailure:
                message = "@Retail:PaymentErrorAuthorizationFailure";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidMerchantConfiguration:
                message = "@Retail:PaymentErrorInvalidMerchantConfiguration";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidExpirationDate:
                message = "@Retail:PaymentErrorInvalidExpirationDate";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCardholderNameFirstNameRequired:
                message = "@Retail:PaymentErrorInvalidCardholderNameFirstNameRequired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCardholderNameLastNameRequired:
                message = "@Retail:PaymentErrorInvalidCardholderNameLastNameRequired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::FilterDecline:
                message = "@Retail:PaymentErrorFilterDecline";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidAddress:
                message = "@Retail:PaymentErrorInvalidAddress";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CVV2Required:
                message = "@Retail:PaymentErrorCVV2Required";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CardTypeNotSupported:
                message = "@Retail:PaymentErrorCardTypeNotSupported";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::UniqueInvoiceNumberRequired:
                message = "@Retail:PaymentErrorUniqueInvoiceNumberRequired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::PossibleDuplicate:
                message = "@Retail:PaymentErrorPossibleDuplicate";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ProcessorRequiresLinkedRefund:
                message = "@Retail:PaymentErrorProcessorRequiresLinkedRefund";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CryptoBoxUnavailable:
                message = "@Retail:PaymentErrorCryptoBoxUnavailable";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::CVV2Declined:
                message = "@Retail:PaymentErrorCVV2Declined";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::MerchantIdInvalid:
                message = "@Retail:PaymentErrorMerchantIdInvalid";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::TranNotAllowed:
                message = "@Retail:PaymentErrorTranNotAllowed";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::TerminalNotFound:
                message = "@Retail:PaymentErrorTerminalNotFound";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidEffectiveDate:
                message = "@Retail:PaymentErrorInvalidEffectiveDate";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InsufficientFunds:
                message = "@Retail:PaymentErrorInsufficientFunds";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ReauthorizationMaxReached:
                message = "@Retail:PaymentErrorReauthorizationMaxReached";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ReauthorizationNotAllowed:
                message = "@Retail:PaymentErrorReauthorizationNotAllowed";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::DateOfBirthError:
                message = "@Retail:PaymentErrorDateOfBirthError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::EnterLesserAmount:
                message = "@Retail:PaymentErrorEnterLesserAmount";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::HostKeyError:
                message = "@Retail:PaymentErrorHostKeyError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCashBackAmount:
                message = "@Retail:PaymentErrorInvalidCashBackAmount";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidTransaction:
                message = "@Retail:PaymentErrorInvalidTransaction";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ImmediateCaptureRequired:
                message = "@Retail:PaymentErrorImmediateCaptureRequired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ImmediateCaptureRequiredMAC:
                message = "@Retail:PaymentErrorImmediateCaptureRequiredMAC";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::MACRequired:
                message = "@Retail:PaymentErrorMACRequired";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::BankcardNotSet:
                message = "@Retail:PaymentErrorBankcardNotSet";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidRequest:
                message = "@Retail:PaymentErrorInvalidRequest";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidTransactionFee:
                message = "@Retail:PaymentErrorInvalidTransactionFee";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoCheckingAccount:
                message = "@Retail:PaymentErrorNoCheckingAccount";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoSavingsAccount:
                message = "@Retail:PaymentErrorNoSavingsAccount";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::RestrictedCardTemporarilyDisallowedFromInterchange:
                message = "@Retail:PaymentErrorRestrictedCardTemporarilyDisallowedFromInterchange";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::MACSecurityFailure:
                message = "@Retail:PaymentErrorMACSecurityFailure";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ExceedsWithdrawalFrequencyLimit:
                message = "@Retail:PaymentErrorExceedsWithdrawalFrequencyLimit";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCaptureDate:
                message = "@Retail:PaymentErrorInvalidCaptureDate";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::NoKeysAvailable:
                message = "@Retail:PaymentErrorNoKeysAvailable";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::KMESyncError:
                message = "@Retail:PaymentErrorKMESyncError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::KPESyncError:
                message = "@Retail:PaymentErrorKPESyncError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::KMACSyncError:
                message = "@Retail:PaymentErrorKMACSyncError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ResubmitExceedsLimit:
                message = "@Retail:PaymentErrorResubmitExceedsLimit";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::SystemProblemError:
                message = "@Retail:PaymentErrorSystemProblemError";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::AccountNumberNotFoundForRow:
                message = "@Retail:PaymentErrorAccountNumberNotFoundForRow";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidTokenInfoParameterForRow:
                message = "@Retail:PaymentErrorInvalidTokenInfoParameterForRow";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::ExceptionThrownForRow:
                message = "@Retail:PaymentErrorExceptionThrownForRow";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::TransactionAmountExceedsRemaining:
                message = "@Retail:PaymentErrorTransactionAmountExceedsRemaining";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::GeneralException:
                message = "@Retail:PaymentErrorGeneralException";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidCardTrackData:
                message = "@Retail:PaymentErrorInvalidCardTrackData";
                break;
            case Microsoft.Dynamics.Retail.PaymentSDK.Portable.ErrorCode::InvalidResultAccessCode:
                message = "@Retail:PaymentErrorInvalidResultAccessCode";
                break;
            default:
                message = "@Retail:PaymentErrorApplicationError";
        }

        return message;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>