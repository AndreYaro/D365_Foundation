<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustomerServiceSelectionFieldDefaultValues</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>MCRCustomerServiceSelectionFieldDefaultValues</c> preloads the fields that are necessary for the out-of-box experience for MCRCustomerService
/// to work despite the limited number of fields being projected in the query.
/// </summary>
public class MCRCustomerServiceSelectionFieldDefaultValues
{
    private const GlobalObjectCacheScope SelectionFieldDefaultValuesCacheScope = classStr(MCRCustomerServiceSelectionFieldDefaultValues);
    private const GlobalObjectCacheScope SelectionFieldDefaultValuesLoadedKey = 'DefaultValuesLoaded';

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ensureDefaultsAreLoaded</Name>
				<Source><![CDATA[
    internal static void ensureDefaultsAreLoaded()
    {
        SysGlobalObjectCache globalObjectCache = classFactory.globalObjectCache();

        container cacheContainer = globalObjectCache.find(SelectionFieldDefaultValuesCacheScope, [SelectionFieldDefaultValuesLoadedKey]);

        if (cacheContainer == conNull())
        {
            MCRCustomerServiceSelectionFieldDefaultValues::loadDefaultValues();
            globalObjectCache.insert(SelectionFieldDefaultValuesCacheScope, [SelectionFieldDefaultValuesLoadedKey], [true]);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>loadDefaultValues</Name>
				<Source><![CDATA[
    internal static void loadDefaultValues()
    {
        MCRCustomerServiceSelectionField countSelectionField;
        select count(RecId) from countSelectionField;
        
        if (countSelectionField.RecId == 0)
        {
            ttsbegin;

            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, CustAccount));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, ReturnItemNum));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, ProjId));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, CustomerRef));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, DeliveryDate));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, PurchOrderFormNum));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, SalesId));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, SalesName));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, SalesStatus));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, SalesType));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, CreatedDateTime));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, RecVersion));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, RecId));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, DeliveryName));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, DeliveryPostalAddress));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, TableId));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, MCROrderStopped));
            MCRCustomerServiceSelectionField::findOrCreate(MCRCustomerServiceFormViewMode::SalesOrders, tableStr(SalesTable), fieldStr(SalesTable, RetailChannelTable));

            MCRCustomerServiceSelectionFieldDefaultValues::onLoadingDefaultValues();

            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>onLoadingDefaultValues</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extension point to allow new fields to be loaded by default.
    /// </summary>
    static delegate void onLoadingDefaultValues()
    {

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>