<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceJournalCreate_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(ProjInvoiceJournalCreate))]
public final class ProjInvoiceJournalCreate_ApplicationSuite_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createJournalHeader</Name>
				<Source><![CDATA[
    protected void createJournalHeader()
    {
        if (FeatureStateProvider::isFeatureEnabled(IntentLettersFeature::instance()))
        {
            this.setIntentLetterFields_IT();
        }

        next createJournalHeader();

        if (FeatureStateProvider::IsFeatureEnabled(BusinessDocChorusProInvoicingIntegrationFeature_FR::instance()))
        {
            BusinessDocChorusProProjInvoiceJour_FR chorusProProjInvoiceJour;
            chorusProProjInvoiceJour.initFrom(projInvoiceJour.RecId, projProposalJour);
            chorusProProjInvoiceJour.insert();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntentLetterFields_IT</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets intent letter fields on project invoice.
    /// </summary>
    protected void setIntentLetterFields_IT()
    {
        if (projProposalJour.IntentLetterId_IT)
        {
            CustIntentLetter_IT custIntentLetter = CustIntentLetter_IT::findInternalId(projProposalJour.IntentLetterId_IT);
            ProjInvoiceJour projInvoiceJour = this.parmProjInvoiceJour_W();
            projInvoiceJour.IntentLetterInternalId_IT = custIntentLetter.InternalLetterId;
            projInvoiceJour.IntentLetterId_IT = custIntentLetter.LetterId;
            projInvoiceJour.IntentLetterFromDate_IT = custIntentLetter.FromDate;
            projInvoiceJour.IntentLetterToDate_IT = custIntentLetter.ToDate;
            this.parmProjInvoiceJour_W(projInvoiceJour);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjInvoiceJour_W</Name>
				<Source><![CDATA[
    public ProjInvoiceJour parmProjInvoiceJour_W(ProjInvoiceJour _projInvoiceJour = ProjInvoiceJour)
    {
        projInvoiceJour = _projInvoiceJour;
        return projInvoiceJour;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allocateNumAndVoucher</Name>
				<Source><![CDATA[
    protected NumberSeq allocateNumAndVoucher()
    {
        if (FeatureStateProvider::isFeatureEnabled(ChronologicalNumberingFeature::instance()))
        {
            ChronologicalNumberSequenceGroupEngine::applyChronologicalNumberSequenceGroup(projProposalJour, projInvoiceParmTable.InvoiceDate);
        }

        return next allocateNumAndVoucher();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>