<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rAssetGroupPeriodCopy</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rAssetGroupPeriodCopy extends RunBaseBatch implements BatchRetryable
{
    protected RAssetGroupDefinitionPeriod oldPeriod;
    protected RAssetGroupDefinitionPeriod newPeriod;

    protected StartDate startDate;
    protected DialogField dlgStartDate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    public Object dialog()
    {
        DialogRunbase dialog = super();

        dlgStartDate = dialog.addFieldValue(extendedtypestr(StartDate), oldPeriod.EndDate + 1);

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        startDate = dlgStartDate.value();

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue(RAssetGroupDefinitionPeriod _oldRecord = oldPeriod)
    {
        oldPeriod = _oldRecord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newPeriod</Name>
				<Source><![CDATA[
    public RAssetGroupDefinitionPeriod newPeriod()
    {
        return newPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return connull();
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public void run()
    {
        #OCCRetryCount

        if (!this.validate())
        {
            throw error('');
        }

        try
        {
            ttsbegin;

            newPeriod.data(oldPeriod);
            newPeriod.StartDate = startDate;
            newPeriod.EndDate = dateNull();

            if (!newPeriod.validateWrite())
            {
                throw error("@GLS113154");
            }

            newPeriod.doInsert();
            
            RAssetInventIssueGroupDefinition oldDefinition, newDefinition;
            while select oldDefinition
                where oldDefinition.PeriodRefRecId == oldPeriod.RecId
            {
                newDefinition.data(oldDefinition);
                newDefinition.PeriodRefRecId = newPeriod.RecId;
                newDefinition.doInsert();
            }

            ttscommit;
        }
        catch (Exception::Deadlock)
        {
            retry;
        }
        catch (Exception::UpdateConflict)
        {
            if (appl.ttsLevel() == 0)
            {
                if (xSession::currentRetryCount() >= #RetryNum)
                {
                    throw Exception::UpdateConflictNotRecovered;
                }
                else
                {
                    retry;
                }
            }
            else
            {
                throw Exception::UpdateConflict;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    public boolean validate(Object calledFrom = null)
    {
        boolean ret = true;

        if (!startDate)
        {
            ret = checkFailed("@SYS19617");
        }

        if (ret && oldPeriod.EndDate > startDate)
        {
            ret = checkFailed("@GLS113984");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static RAssetGroupPeriodCopy construct()
    {
        return new RAssetGroupPeriodCopy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    public static ClassDescription description()
    {
        return "@GLS113983";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || _args.dataset() != tablenum(RAssetGroupDefinitionPeriod))
        {
            throw error(strfmt("@SYS25516", RAssetGroupPeriodCopy::description()));
        }

        RAssetGroupDefinitionPeriod definitionPeriod = _args.record();

        if (!definitionPeriod.EndDate)
        {
            throw error("@GLS113985");
        }

        RAssetGroupPeriodCopy periodCopy = RAssetGroupPeriodCopy::construct();
        periodCopy.initValue(_args.record());

        if (periodCopy.prompt())
        {
            periodCopy.runOperation();
            FormDataSource formDataSource = FormDataUtil::getFormDataSource(_args.record());
            definitionPeriod = periodCopy.newPeriod();
            formDataSource.executeQuery();
            formDataSource.positionToRecord(definitionPeriod);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>