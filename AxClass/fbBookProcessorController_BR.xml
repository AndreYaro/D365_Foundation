<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>fbBookProcessorController_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Controller class for the book processor service.
/// </summary>
class fbBookProcessorController_BR extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(IdentifierName _className = '', IdentifierName _methodName = '', SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Asynchronous)
    {
        super(_className, _methodName, _executionMode);

        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceBR10001, funcName());
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Constructs a new instance of the <c>FBBookProcessorController_BR</c> class.
    /// </summary>
    /// <param name="_args">
    ///     Instance of <c>Args</c> with the values used to initialize the controller.
    /// </param>
    /// <returns>
    ///     An instance of <c>FBBookProcessorController_BR</c> class.
    /// </returns>
    /// <exception cref="Exception::Error">
    ///     Exception thrown if the values passed in through the <c>Args</c> parameter are not appropriate.
    /// </exception>
    public static SysOperationController construct(Args _args)
    {
        FBBookProcessorContract_BR      contract;
        FBBookProcessorController_BR    controller = new FBBookProcessorController_BR();
        FBBookingPeriod_BR              bookingPeriod;

        if (_args.dataset() == tableNum(FBBookingPeriod_BR)
            && _args.record().RecId)
        {
            controller.initializeFromArgs(_args);

            contract = controller.getDataContractObject();

            bookingPeriod = _args.record();

            contract.parmBookingPeriod(bookingPeriod);

            controller.parmExecutionMode(SysOperationExecutionMode::ReliableAsynchronous);
            controller.parmShowProgressForm(true);
        }
        else
        {
            throw error("@SYS22996");
        }

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
        public static void main(Args _args)
    {
        FBBookProcessorController_BR    bookProcessorController = FBBookProcessorController_BR::construct(_args);
        FBBookProcessorContract_BR      contract = bookProcessorController.getDataContractObject();

        if (contract.parmBookingPeriod().existsClosedTaxAssessment())
        {
            error("@SYS4001748");
        }
        else
        {
            bookProcessorController.startOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns true.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>