<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmEwsOccurrence</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class <c>smmEwsOccurence</c> defines and captures each occurence of a recurring appointment.
/// </summary>
class SmmEwsOccurrence implements smmIOccurrence
{
    Microsoft.Dynamics.AX.ExchangeIntegration.ItemOccurrence    occurrence;
    smmEwsAppointment                                           appointment;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if the occurence is deleted.
    /// </summary>
    /// <returns>
    /// True if occurence is deleted; otherwise false.
    /// </returns>

    public boolean deleted()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAppointment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of <c>smmEwsAppointment</c> associated to the occurence.
    /// </summary>
    /// <returns>
    /// Appointment associated to the occurence.
    /// </returns>
    public smmIAppointment getAppointment()
    {
        return appointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasStart</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets if the occurence has a start date.
    /// </summary>
    /// <returns>
    /// True if occurence has start date;otherwise false.
    /// </returns>
    public boolean hasStart()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of <c>smmEwsOccurence</c> to track the occurences of recurring appointment.
    /// </summary>
    /// <param name="_occurrence">
    /// Occurence from exchange server.
    /// </param>
    /// <param name="_appointment">
    /// Appointment associated to the occurence.
    /// </param>
    public void new(Microsoft.Dynamics.AX.ExchangeIntegration.ItemOccurrence _occurrence, smmEwsAppointment _appointment)
    {
        occurrence  = _occurrence;
        appointment = _appointment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>originalDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets original datetime of the occurence.
    /// </summary>
    /// <returns>
    /// Original datetime of occurence.
    /// </returns>
    public utcdatetime originalDate()
    {
        utcdatetime ret;

        ret = occurrence.originalStart();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>start</Name>
				<Source><![CDATA[
    /// <summary>
    /// Start datetime of occurence.
    /// </summary>
    /// <returns>
    /// Start datetime of the occurence.
    /// </returns>
    public utcdatetime start()
    {
        utcdatetime ret;

        ret = occurrence.start();

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>