<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendAgingDataStorageController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>vendAgingDataStorageController</c> class acts as a controller for the <c>VendAgingDataStorageService</c> service.
/// </summary>
internal class VendAgingDataStorageController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static SysOperationController construct(Args _args)
    {
        SysOperationController controller = new VendAgingDataStorageController(classstr(VendAgingDataStorageService),
            methodstr(VendAgingDataStorageService, process), SysOperationExecutionMode::Synchronous);
        controller.parmArgs(_args);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public static void main(Args _args)
    {
        if (!FeatureStateProvider::isFeatureEnabled(VendAgingDataStorageFeature::instance()))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        VendAgingDataStorageController::construct(_args).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    [Hookable(false)]
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustGoBatch</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean mustGoBatch()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable()
    {
        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>