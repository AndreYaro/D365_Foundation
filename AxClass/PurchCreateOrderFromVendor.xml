<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchCreateOrderFromVendor</Name>
	<SourceCode>
		<Declaration><![CDATA[
class PurchCreateOrderFromVendor
{
    PurchTable            purchTable;
    PurchAgreementHeader  purchAgreementHeader;

    boolean agreementFormClosedOK;
    boolean initFromVendTable;

    #define.CurrentVersion(1)
    #LOCALMACRO.CurrentList
        purchTable,
        purchAgreementHeader,
        agreementFormClosedOK
    #ENDMACRO

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a purchase order that is based on the account number of the vendor.
    /// </summary>
    /// <param name="_vendTable">
    /// A <c>VendTable</c> record that is used to initialize the purchase order.
    /// </param>
    /// <returns>
    /// The new purchase order; otherwise, null.
    /// </returns>
    public PurchTable create(VendTable _vendTable)
    {
        PurchTableForm purchTableForm = PurchTableForm::construct(PurchTableFormId::None, _vendTable);
        purchTableForm.initValues();

        purchTable.initValue();
        purchTable.PurchaseType = purchTableForm.defaultPurchaseType();
        purchTable.OrderAccount = _vendTable.AccountNum;
        purchTable.transferOrderAccount_server(this.parmInitFromVendTable());

        if (PurchAgreementHeader::existForVendor(_vendTable.AccountNum))
        {
            if (!this.openCreateWithAgreementForm())
            {
                // Order creation was canceled.
                return null;
            }

            if (purchAgreementHeader)
            {
                purchTable.initFromPurchAgreementHeader(purchAgreementHeader);
            }
        }
        if (!purchTable.type().validateWrite())
        {
            // Order creation was canceled.
            throw error("@SYS23020");
        }
        ttsbegin;
        purchTable.PurchId = NumberSeq::newGetNum(PurchParameters::numRefPurchId()).num();
        purchTable.insert();
        ttscommit;

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>openCreateWithAgreementForm</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens a form for creating the order that is linked to the purchase agreement.
    /// </summary>
    /// <returns>
    /// true if the form was closed successfully; otherwise, false.
    /// </returns>
    protected boolean openCreateWithAgreementForm()
    {
        Args     args = new Args();
        FormRun  salesCreateOrder;

        args.name(formStr(PurchCreateOrderFromVendorWithAgreement));
        args.caller(this);
        salesCreateOrder = classfactory.formRunClass(args);
        salesCreateOrder.init();
        salesCreateOrder.run();

        if (!salesCreateOrder.closed())
        {
            salesCreateOrder.wait();
            agreementFormClosedOK = salesCreateOrder.closedOk();
        }

        return agreementFormClosedOK;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInitFromVendTable</Name>
				<Source><![CDATA[
    public boolean parmInitFromVendTable(boolean _initFromVendTable = initFromVendTable)
    {
        initFromVendTable = _initFromVendTable;
        return initFromVendTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchAgreementHeader</Name>
				<Source><![CDATA[
    public PurchAgreementHeader parmPurchAgreementHeader(PurchAgreementHeader _purchAgreementHeader = purchAgreementHeader)
    {
        purchAgreementHeader = _purchAgreementHeader;
        return purchAgreementHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchTable</Name>
				<Source><![CDATA[
    public PurchTable parmPurchTable(PurchTable _purchTable = purchTable)
    {
        purchTable = _purchTable;
        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container  _packedClass)
    {
        Integer  version = conPeek(_packedClass,1);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                //Buffer must be reselected due to the super / sub type implementation
                purchAgreementHeader = PurchAgreementHeader::find(purchAgreementHeader.RecId);
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchCreateOrderFromVendor construct()
    {
        return new PurchCreateOrderFromVendor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a purchase order from the given vendor.
    /// </summary>
    /// <param name="_vendTable">
    /// A <c>VendTable</c> record.
    /// </param>
    /// <param name="_initFromVendTable">
    /// A <c>boolean</c> value identifies if the purchase order should be initailized from the <c>VendTable</c> record. Default value is true; Optional.
    /// </param>
    /// <returns>
    /// A <c>PurchTable</c> record.
    /// </returns>
    static public PurchTable createNewOrder(VendTable _vendTable, boolean _initFromVendTable = true)
    {
        PurchCreateOrderFromVendor purchCreateOrder = PurchCreateOrderFromVendor::construct();
        purchCreateOrder.parmInitFromVendTable(_initFromVendTable);
        return purchCreateOrder.create(_vendTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        VendTable       vendTable;
        PurchTable      purchTable;
        FormDataSource  vendTableDatasource;

        if (!_args || !_args.record())
        {
            throw error(strFmt("@SYS29104", classStr(PurchCreateOrderFromVendor)));
        }

        // check datasource parameter
        if (_args.dataset() != tableNum(VendTable))
        {
            throw error(strFmt("@SYS117974", classStr(PurchCreateOrderFromVendor)));
        }

        // If vendTable record is passed from a list page, some fields are not fetched.
        // In that case, vendTable record should be selected again.
        vendTableDatasource = FormDataUtil::getFormDataSource(_args.record());
        if (vendTableDatasource && vendTableDatasource.onlyFetchActive())
        {
            // reselect vendor record
            vendTable = VendTable::findRecId(_args.record().RecId);
        }
        else
        {
            vendTable = _args.record();
        }


        using (SysErrorMessageHelpScope scope = SysErrorMessageHelpScope::newErrorContext(_args))
        {
            if (PurchParameters::find().PromptTransfer &&
            Box::yesNo("@SYS22099" + '\n\n' + vendTable.name(), DialogButton::Yes) != DialogButton::Yes)
            {
                purchTable = PurchCreateOrderFromVendor::createNewOrder(vendTable, false);
            }
            else
            {
                purchTable = PurchCreateOrderFromVendor::createNewOrder(vendTable, true);
            }
        }

        if (purchTable == null)
        {
            return; // Customer creation was canceled
        }
        new MenuFunction(menuitemDisplayStr(PurchTableForEdit_Action), MenuItemType::Display).run(
                PurchCreateOrderFromVendor::purchTableFormArgs(purchTable, _args.caller()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>purchTableFormArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates arguments used to open purchase order form.
    /// </summary>
    /// <param name="_purchTable">A newly created <c>PurchTable</c> record.</param>
    /// <param name="_caller">A caller form.</param>
    /// <param name="_vendTable">The vendor record matching the vendor on the created purchase order. Optional</param>
    /// <returns>An arguments for opening purchase order form.</returns>
    static protected Args purchTableFormArgs(PurchTable _purchTable, Object _caller,
        VendTable _vendTable = _purchTable.vendTable_OrderAccount())
    {
        Args purchOrderCreateArgs = new Args();

        purchOrderCreateArgs.record(_vendTable);
        purchOrderCreateArgs.lookupRecord(_purchTable);

        purchOrderCreateArgs.caller(_caller);
        purchOrderCreateArgs.parmObject(_caller);
        purchOrderCreateArgs.openMode(OpenMode::Edit);

        return purchOrderCreateArgs;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>