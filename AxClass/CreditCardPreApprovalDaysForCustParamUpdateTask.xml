<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CreditCardPreApprovalDaysForCustParamUpdateTask</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class CreditCardPreApprovalDaysForCustParamUpdateTask implements IDataMaintenanceTask
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method returns the caption for the given action.
    /// </summary>
    /// <returns>The <c>DataMaintenanceActionCaption</c> of the action.</returns>
    [Hookable(false)]
    public DataMaintenanceCaption caption()
    {
        return literalStr("@CashManagement:CreditCardPreApprovalDaysForCustParamUpdateCaption");
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public DataMaintenanceTaskResult run()
    {
        DataMaintenanceTaskResult taskResult = DataMaintenanceTaskResult::construct();

        CustParameters custParameters;
        select crosscompany count(RecId) from custParameters
            where custParameters.CreditCardPreapprovalLastNoOfDays == 0;
        int64 impactedRows = custParameters.RecId;

        ttsbegin;
        custParameters.skipDatabaseLog(true);
        custParameters.skipDataMethods(true);
        custParameters.skipEvents(true);

        update_recordset crosscompany custParameters
            setting CreditCardPreapprovalLastNoOfDays = 7
            where custParameters.CreditCardPreapprovalLastNoOfDays == 0;
        ttscommit;

        taskResult.parmCount(impactedRows);
        taskResult.addMessage(
            DataMaintenanceMessageContract::constructForMessage(
                Exception::Info, 
                strFmt("@CashManagement:CreditCardPreApprovalDaysForCustParamUpdateResult", impactedRows)));
        return taskResult;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>