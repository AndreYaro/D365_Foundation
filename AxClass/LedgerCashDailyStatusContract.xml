<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCashDailyStatusContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>LedgerCashDailyStatus</c> class is the data contract class for the SSRS report.
/// </summary>
[
    DataContractAttribute,
    SysOperationContractProcessingAttribute(classStr(LedgerCashDailyStatusUIBuilder), SysOperationDataContractProcessingMode::CreateSeparateUIBuilderForEachContract)
]
class LedgerCashDailyStatusContract implements SysOperationValidatable
{
    TransDate               asOnDate;
    FromDate                fromDate;
    ToDate                  toDate;
    LedgerCashReportType    ledgerCashReportType;
    CurrentOperationsTax    postingLayer;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmAsOnDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter As on.
    /// </summary>
    /// <param name="_asOnDate">
    /// the new value of the data contract parameter As on
    /// </param>
    /// <returns>
    /// the current value of data contract parameter As on
    /// </returns>
    [
        DataMemberAttribute('asOnDate'),
        SysOperationLabelAttribute(literalstr("@SYS7902")),
        SysOperationHelpTextAttribute(literalstr("@SYS67")),
        SysOperationDisplayOrderAttribute('3')
    ]
    public TransDate parmAsOnDate(TransDate _asOnDate = asOnDate)
    {
        asOnDate = _asOnDate;
        return asOnDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter From date.
    /// </summary>
    /// <param name = "_fromDate">
    /// The new value of the data contract parameter From date
    /// </param>
    /// <returns>
    /// The current value of data contract parameter From date
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerCashReportType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter Ledger cash report type.
    /// </summary>
    /// <param name = "_ledgerCashReportType">
    /// The new value of the data contract parameter Ledger cash report type
    /// </param>
    /// <returns>
    /// The current value of data contract parameter Ledger cash report type which is hidden.
    /// </returns>
    [
        DataMemberAttribute('LedgerCashReportType')
    ]
    public LedgerCashReportType parmLedgerCashReportType(LedgerCashReportType _ledgerCashReportType = ledgerCashReportType)
    {
        ledgerCashReportType = _ledgerCashReportType;
        return ledgerCashReportType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingLayer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter postinglayer.
    /// </summary>
    /// <param name="_postingLayer">
    /// The new value of the datacontract parameter postinglayer; optional.
    /// </param>
    /// <returns>
    /// The current value of datacontract parameter postinglayer.
    /// </returns>
    [
        DataMemberAttribute('PostingLayer'),
        SysOperationDisplayOrderAttribute('4'),
        SysOperationLabelAttribute(literalstr("@SYS334157"))
    ]
    public CurrentOperationsTax parmPostingLayer(CurrentOperationsTax _postingLayer = postingLayer)
    {
        postingLayer = _postingLayer;
        return postingLayer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter To date.
    /// </summary>
    /// <param name = "_toDate">
    /// The new value of the data contract parameter To date
    /// </param>
    /// <returns>
    /// The current value of data contract parameter To date
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the SSRS report parameters is valid.
    /// </summary>
    /// <returns>
    /// true if validation is successful; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean             isValid = true;
        TransDate           toOpeningStartDate, fromOpeningStartDate;

        // report parameters validate
        if (ledgerCashReportType == LedgerCashReportType::CashDaily)
        {
            if (!asOnDate)
            {
                // As on must be entered.
                isValid = checkFailed(strFmt("@SYS39376", "@SYS7902"));
            }
        }
        else
        {
            if (!fromDate)
            {
                // From date must be entered.
                isValid = checkFailed(strFmt("@SYS39376", "@SYS5209"));
            }

            if (!toDate)
            {
                // To date must be entered.
                isValid = checkFailed(strFmt("@SYS39376", "@SYS14656"));
            }

            if (isValid && fromDate > toDate)
            {
                // From date must be before To date
                isValid = checkFailed("@SYS91020");
            }

            fromOpeningStartDate = LedgerFiscalCalendar::findOpeningStartDateByDate(CompanyInfoHelper::fiscalCalendarRecId(), fromDate);
            toOpeningStartDate = LedgerFiscalCalendar::findOpeningStartDateByDate(CompanyInfoHelper::fiscalCalendarRecId(), toDate);

            if (isValid && fromOpeningStartDate != toOpeningStartDate)
            {
                // From date is in fiscal year %1. To date is in fiscal year %2. Dates must be in same fiscal year.
                isValid = checkFailed(strfmt("@SYS28745", year(fromOpeningStartDate), year(toOpeningStartDate)));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
