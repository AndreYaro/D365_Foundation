<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesAutoCreate_ProjPurchLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
class       SalesAutoCreate_ProjPurchLine
extends     SalesAutoCreate
{
    PurchTable      purchTable;
    PurchLine       purchLine;
    SalesId         currentSalesId;
    SalesId         salesId;
    boolean         firstRecord;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>checkSalesId</Name>
				<Source><![CDATA[
    boolean checkSalesId()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    void  create()
    {
        try
        {
            super();
        }

        catch (Exception::Error)
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createSalesLine</Name>
				<Source><![CDATA[
    void  createSalesLine()
    {
        InventMov_Sales inventMov_Sales = InventMovement::construct(salesLine);
        InventMov_Sales inventMov_Sales_Orig = inventMov_Sales.newMovement_Orig();

        InventDim::checkUpdateEstimatedMovement(inventMov_Sales,inventMov_Sales_Orig);

        boolean sameDimensions = (purchLine.InventDimId == salesLine.InventDimId);

        super();

        if (salesLine)
        {
            if (sameDimensions && salesLine.InventDimId != purchLine.InventDimId)
            {
                purchLine.setInventDimId(salesLine.InventDimId);
            }
        }

        purchLine.ItemRefType        = InventRefType::Sales;
        purchLine.InventRefId        = salesLine.SalesId;
        purchLine.InventRefTransId   = salesLine.InventTransId;
        purchLine.update();

        if (salesLine.RemainInventPhysical > 0)
        {
            InventUpd_Reservation::updateReserveRefTransId(InventMovement::construct(purchLine));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>custAccount</Name>
				<Source><![CDATA[
    CustAccount custAccount()
    {
        return ProjTable::find(purchTable.ProjId).CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>endUpdate</Name>
				<Source><![CDATA[
    void  endUpdate()
    {
        if (!salesLine)
        {
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount</Name>
				<Source><![CDATA[
    CustInvoiceAccount invoiceAccount()
    {
        return ProjFundingSource::findCustAccount(ProjTable::projInvoiceStatic(purchTable.ProjId).ProjInvoiceProjId).CustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    void new(PurchLine    _purchLine,
             Object       _callBackClass      = null)
    {
        purchLine = _purchLine;
        super(_purchLine,_callBackClass);
        salesId         = _callBackClass.salesId();
        purchTable      = _purchLine.purchTable();
        currentSalesId  = '';
        firstRecord     = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextRecord</Name>
				<Source><![CDATA[
    void nextRecord()
    {
        next purchLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>recordExist</Name>
				<Source><![CDATA[
    boolean recordExist()
    {
        return purchLine.RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesType</Name>
				<Source><![CDATA[
    SalesType salesType()
    {
        return SalesType::Sales;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCust</Name>
				<Source><![CDATA[
    void setCust()
    {
        if (this.custAccount())
        {
            custTable = CustTable::find(this.custAccount());
        }

        if (!custTable)
        {
            checkFailed(strfmt("@SYS16734",this.custAccount()));
            throw error("@SYS23020");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesLine</Name>
				<Source><![CDATA[
    void  setSalesLine()
    {
        setprefix(#PreFixField(PurchLine,ItemId));

        super();

        salesLine.initFromPurchLine(purchLine);

        this.createSalesLine();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTable</Name>
				<Source><![CDATA[
    void  setSalesTable()
    {
        if (firstRecord || currentSalesId != salesId)
        {
            if (salesId)
            {
                if (!this.checkSalesId())
                {
                    throw error("@SYS23020");
                }
                else
                {
                    salesTable  = SalesTable::find(salesId);
                }
            }
            else
            {
                super();
                this.createSalesTable();
            }

            if (!salesTable)
            {
                checkFailed(strfmt("@SYS15067", this.salesId()));
                throw error("@SYS23020");
            }
        }

        currentSalesId      = salesId;
        firstRecord         = false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
