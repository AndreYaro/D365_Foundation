<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FBSpedFiscalFileUIBuilder_BR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     Captures dialog events.
/// </summary>
class FBSpedFiscalFileUIBuilder_BR extends SysOperationAutomaticUIBuilder
{
    DialogField dlgFiscalEstablishmentId;
    DialogField dlgFiscalEstablishmentDataArea;
    DialogField dlgMonth;
    DialogField dlgYear;
    DialogField dlgSpedFileType;
    DialogField dlgSpedFileName;
    DialogField dlgSpedFiscalVersion;
    DialogField dlgEnableBlockK;
    private DialogField dlgBlockK;

    FBSpedFiscalFileContract_BR contract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Captures dialog events.
    /// </summary>
    public void postBuild()
    {
        super();

        contract = this.dataContractObject();

        dlgFiscalEstablishmentDataArea = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmFiscalEstablishmentDataArea));
        dlgFiscalEstablishmentDataArea.allowEdit(false);

        dlgFiscalEstablishmentId = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmFiscalEstablishmentId));
        dlgFiscalEstablishmentId.allowEdit(false);

        dlgMonth = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmMonth));
        dlgMonth.allowEdit(false);

        dlgYear = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmYr));
        dlgYear.allowEdit(false);

        dlgSpedFiscalVersion = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmSpedFiscalVersion));
        dlgSpedFiscalVersion.registerOverrideMethod(methodStr(FormComboBoxControl, modified), methodStr(FBSpedFiscalFileUIBuilder_BR, spedFiscalVersionModified), this);

        dlgBlockK = this.bindInfo().getDialogField(contract, methodStr(FBSpedFiscalFileContract_BR, parmBlockK));
        dlgBlockK.enabled(contract.parmSpedFiscalVersion() >= FBSPEDFiscalVersion_BR::v109);
        dlgBlockK.registerOverrideMethod(methodStr(FormComboBoxControl, modified), methodStr(FBSpedFiscalFileUIBuilder_BR, spedFiscalBlockKModified), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>spedFiscalBlockKModified</Name>
				<Source><![CDATA[
    private boolean spedFiscalBlockKModified(FormComboBoxControl _formControl)
    {
        boolean ret = _formControl.modified();

        if (ret)
        {
            FBSPEDFiscalBlockK_BR blockK = dlgBlockK.value();

            if (blockK != FBSPEDFiscalBlockK_BR::None)
            {
                FBBookingPeriod_BR bookingPeriod = contract.parmBookingPeriod();
                LogisticsAddressStateId state = bookingPeriod.fiscalEstablishment().postalAddress().State;

                if (bookingPeriod.existsTaxAssessmentForTaxTypeAndState(TaxType_BR::ICMS, state) == false
                    && bookingPeriod.existsTaxAssessmentForTaxTypeAndState(TaxType_BR::IPI, state) == false)
                {
                    warning(strFmt("@FiscalBooks_SpedFiscal:FBSpedFiscalFileController_WarningBlockK", TaxType_BR::ICMS, TaxType_BR::IPI));
                }

                if (blockK == FBSPEDFiscalBlockK_BR::Simplified && dlgSpedFiscalVersion.value() < FBSPEDFiscalVersion_BR::v115)
                {
                    FBSPEDFiscalVersion_BR version = dlgSpedFiscalVersion.value();
                    warning(strFmt("@FiscalBooks_SpedFiscal:FBSpedFiscalFileController_WarningUnsupportedBlockKMode",
                        blockK, 
                        version));
                    dlgBlockK.value(FBSPEDFiscalBlockK_BR::Full);
                }
            }

            contract.parmEnableBlockK(dlgBlockK.value() != FBSPEDFiscalBlockK_BR::None);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>spedFiscalVersionModified</Name>
				<Source><![CDATA[
    private boolean spedFiscalVersionModified(FormComboBoxControl _formControl)
    {
        boolean ret = _formControl.modified();

        if (ret)
        {
            dlgBlockK.enabled(dlgSpedFiscalVersion.value() >= FBSPEDFiscalVersion_BR::v109);

            if (dlgSpedFiscalVersion.value() < FBSPEDFiscalVersion_BR::v109)
            {
                contract.parmEnableBlockK(NoYes::No);
                dlgBlockK.value(FBSPEDFiscalBlockK_BR::None);
            }
            else if (dlgSpedFiscalVersion.value() < FBSPEDFiscalVersion_BR::v115)
            {
                dlgBlockK.value(dlgBlockK.value() == FBSPEDFiscalBlockK_BR::Simplified ? FBSPEDFiscalBlockK_BR::Full : dlgBlockK.value());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>