<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxMCRSalesTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>AxBC</c> class that relates to the <c>MCRSalesTable</c> table.
/// </summary>
public class AxMCRSalesTable extends AxInternalBase
{
    MCRSalesTable   mcrSalesTable;
    boolean         skipSalesIdValidation;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _mcrSalesTable = mcrSalesTable)
    {
        if (!prmisDefault(_mcrSalesTable))
        {
            super(_mcrSalesTable);
            mcrSalesTable = _mcrSalesTable as MCRSalesTable;
        }
        else
        {
            super();
        }

        return mcrSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>MCRSalesTable</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>MCRSalesTable</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        MCRSalesTable localMCRSalesTable;
        return localMCRSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the record associated to the current instance.
    /// </summary>
    /// <param name="_mcrSalesTable">
    /// The record to associate with the current class; optional.
    /// </param>
    /// <returns>
    /// The record associated with the current class.
    /// </returns>
    public MCRSalesTable mcrSalesTable(MCRSalesTable _mcrSalesTable = mcrSalesTable)
    {
        if (!prmisDefault(_mcrSalesTable))
        {
            this.setCurrentRecordFromExternal(_mcrSalesTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        ;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCatalogUpSellShown</Name>
				<Source><![CDATA[
    public NoYes parmCatalogUpSellShown(NoYes _catalogUpSellShown = NoYes::No)
    {
        if (!prmisDefault(_catalogUpSellShown))
        {
            this.setField(fieldNum(MCRSalesTable, CatalogUpSellShown), _catalogUpSellShown);
        }

        return mcrSalesTable.CatalogUpSellShown;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContinuityChild</Name>
				<Source><![CDATA[
    public MCRContinuityChildOrder parmContinuityChild(MCRContinuityChildOrder _continuityChild = 0)
    {
        if (!prmisDefault(_continuityChild))
        {
            this.setField(fieldNum(MCRSalesTable, ContinuityChild), _continuityChild);
        }
        return mcrSalesTable.ContinuityChild;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContinuityLineEval</Name>
				<Source><![CDATA[
    public MCRContinuityLineEval parmContinuityLineEval(MCRContinuityLineEval _mcrContinuityLineEval = 0)
    {
        if (!prmisDefault(_mcrContinuityLineEval))
        {
            this.setField(fieldNum(MCRSalesTable, ContinuityLineEval), _mcrContinuityLineEval);
        }

        return mcrSalesTable.ContinuityLineEval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContinuityOrder</Name>
				<Source><![CDATA[
    public boolean parmContinuityOrder(boolean _mcrContinuityOrder = false)
    {
        if (!prmisDefault(_mcrContinuityOrder))
        {
            this.setField(fieldNum(MCRSalesTable, ContinuityOrder), _mcrContinuityOrder);
        }

        return mcrSalesTable.ContinuityOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFTCExempt</Name>
				<Source><![CDATA[
    public NoYes parmFTCExempt(NoYes _ftcExempt = NoYes::No)
    {
        if (!prmisDefault(_ftcExempt))
        {
            this.setField(fieldNum(MCRSalesTable, ftcExempt), _ftcExempt);
        }

        return mcrSalesTable.ftcExempt;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInstallmentOrderSubmitted</Name>
				<Source><![CDATA[
    public NoYes parmInstallmentOrderSubmitted(NoYes _mcrInstallmentOrderSubmitted = NoYes::No)
    {
        if (!prmisDefault(_mcrInstallmentOrderSubmitted))
        {
            this.setField(fieldNum(MCRSalesTable, InstallmentOrderSubmitted), _mcrInstallmentOrderSubmitted);
        }

        return mcrSalesTable.InstallmentOrderSubmitted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOutOfBalanceReleased</Name>
				<Source><![CDATA[
    public MCROutOfBalanceReleaseType parmOutOfBalanceReleased(MCROutOfBalanceReleaseType _outOfBalanceReleasedType = MCROutOfBalanceReleaseType::None)
    {
        if (!prmisDefault(_outOfBalanceReleasedType))
        {
            this.setField(fieldNum(MCRSalesTable, OutOfBalanceReleased), _outOfBalanceReleasedType);
        }

        return mcrSalesTable.OutOfBalanceReleased;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymOutOfBalance</Name>
				<Source><![CDATA[
    public MCRPaymOutOfBalance parmPaymOutOfBalance(MCRPaymOutOfBalance _paymOutOfBalance = MCRPaymOutOfBalance::None)
    {
        if (!prmisDefault(_paymOutOfBalance))
        {
            this.setField(fieldNum(MCRSalesTable, PaymOutOfBalance), _paymOutOfBalance);
        }

        return mcrSalesTable.PaymOutOfBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostageGroupID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the postage group ID.
    /// </summary>
    /// <param name="_mcrPostageGroupID">
    /// The <c>MCRPostageGroupID</c> object to be set; optional.
    /// </param>
    /// <returns>
    /// The newly set or retrieved postage group ID.
    /// </returns>
    public str parmPostageGroupID(MCRPostageGroupID _mcrPostageGroupID = '')
    {
        if (!prmisDefault(_mcrPostageGroupID))
        {
            this.setField(fieldNum(MCRSalesTable, PostageGroupID), _mcrPostageGroupID);
        }
        return mcrSalesTable.PostageGroupID;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceOverride</Name>
				<Source><![CDATA[
    public NoYesId parmPriceOverride(NoYesId _priceOverride = NoYes::No)
    {
        if (!prmisDefault(_priceOverride))
        {
            this.setField(fieldNum(MCRSalesTable, PriceOverride), _priceOverride);
        }
        return mcrSalesTable.PriceOverride;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPromptedForInstBillingOption</Name>
				<Source><![CDATA[
    public MCRPromptedForInstBillingOption parmPromptedForInstBillingOption(MCRPromptedForInstBillingOption _promptedForInstBillingOption = NoYes::No)
    {
        if (!prmisDefault(_promptedForInstBillingOption))
        {
            this.setField(fieldNum(MCRSalesTable, PromptedForInstBillingOption), _promptedForInstBillingOption);
        }

        return mcrSalesTable.PromptedForInstBillingOption;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDate</Name>
				<Source><![CDATA[
    public TransDate parmReceiptDate(TransDate _receiptDate = dateNull())
    {
        if (!prmisDefault(_receiptDate))
        {
            this.setField(fieldNum(MCRSalesTable, ReceiptDate), _receiptDate);
        }

        return mcrSalesTable.ReceiptDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesTable</Name>
				<Source><![CDATA[
    public MCRSalesTableRefRecId parmSalesTable(MCRSalesTableRefRecId _mcrSalesTableRefRecId = 0)
    {
        if (!prmisDefault(_mcrSalesTableRefRecId))
        {
            this.setField(fieldNum(MCRSalesTable, SalesTable), _mcrSalesTableRefRecId);
        }

        return mcrSalesTable.SalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSmmTMCallListID</Name>
				<Source><![CDATA[
    public smmTMCallListID parmSmmTMCallListID(smmTMCallListID _smmTMCallListID = '')
    {
        if (!prmisDefault(_smmTMCallListID))
        {
            this.setField(fieldNum(MCRSalesTable, SmmTMCallListId), _smmTMCallListID);
        }

        return mcrSalesTable.SmmTMCallListId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSOAllocPriority</Name>
				<Source><![CDATA[
    public MCRSOAllocPriority parmSOAllocPriority(MCRSOAllocPriority _soAllocPriority = 0)
    {
        if (!prmisDefault(_soAllocPriority))
        {
            this.setField(fieldNum(MCRSalesTable, soAllocPriority), _soAllocPriority);
        }

        return mcrSalesTable.soAllocPriority;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSourceId</Name>
				<Source><![CDATA[
    public MCRSourceID parmSourceId(MCRSourceID _mcrSourceID = '')
    {
        if (!prmisDefault(_mcrSourceID))
        {
            this.setField(fieldNum(MCRSalesTable, SourceId), _mcrSourceID);
        }

        return mcrSalesTable.SourceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>save</Name>
				<Source><![CDATA[
    public void save()
    {
        boolean mcrSourceIdModified;
        MCRSourceCode  sourceCode_SalesTable;

        if (this.isFieldSet(fieldNum(MCRSalesTable, SourceId)))
        {
            mcrSourceIdModified = true;
        }

        super();

        if (mcrSourceIdModified)
        {
            sourceCode_SalesTable = MCRSourceCode::construct(SalesTable::findRecId(mcrSalesTable.RecId));
            sourceCode_SalesTable.mcrCreateCatalogGiftLine();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCatalogUpSellShown</Name>
				<Source><![CDATA[
    protected void setCatalogUpSellShown()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, CatalogUpSellShown)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContinuityChild</Name>
				<Source><![CDATA[
    protected void setContinuityChild()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, ContinuityChild)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContinuityLineEval</Name>
				<Source><![CDATA[
    protected void setContinuityLineEval()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, ContinuityLineEval)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContinuityOrder</Name>
				<Source><![CDATA[
    protected void setContinuityOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, ContinuityOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFTCExempt</Name>
				<Source><![CDATA[
    protected void setFTCExempt()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, ftcExempt)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInstallmentOrderSubmitted</Name>
				<Source><![CDATA[
    protected void setInstallmentOrderSubmitted()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, InstallmentOrderSubmitted)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOutOfBalanceReleased</Name>
				<Source><![CDATA[
    protected void setOutOfBalanceReleased()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, OutOfBalanceReleased)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymOutOfBalance</Name>
				<Source><![CDATA[
    protected void setPaymOutOfBalance()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, PaymOutOfBalance)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostageGroupID</Name>
				<Source><![CDATA[
    protected void setPostageGroupID()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, PostageGroupID)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceOverride</Name>
				<Source><![CDATA[
    protected void setPriceOverride()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, PriceOverride)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPromptedForInstBillingOption</Name>
				<Source><![CDATA[
    protected void setPromptedForInstBillingOption()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, PromptedForInstBillingOption)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDate</Name>
				<Source><![CDATA[
    protected void setReceiptDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, ReceiptDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesTable</Name>
				<Source><![CDATA[
    protected void setSalesTable()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, SalesTable)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSmmTMCallListID</Name>
				<Source><![CDATA[
    protected void setSmmTMCallListID()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, SmmTMCallListId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSOAllocPriority</Name>
				<Source><![CDATA[
    protected void setSOAllocPriority()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, soAllocPriority)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSourceId</Name>
				<Source><![CDATA[
    protected void setSourceId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(MCRSalesTable, SourceId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        this.setSourceId();
        this.setSOAllocPriority();
        this.setSmmTMCallListID();
        this.setSalesTable();
        this.setReceiptDate();
        this.setPromptedForInstBillingOption();
        this.setPriceOverride();
        this.setPostageGroupID();
        this.setPaymOutOfBalance();
        this.setOutOfBalanceReleased();
        this.setCatalogUpSellShown();
        this.setContinuityLineEval();
        this.setContinuityChild();
        this.setInstallmentOrderSubmitted();
        this.setFTCExempt();
        this.setContinuityOrder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AxMCRSalesTable construct()
    {
        return new AxMCRSalesTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the input validation for the <c>SalesTable</c> table.
    /// </summary>
    /// <param name="_salesTable">
    /// The sales table record.
    /// </param>
    /// <returns>
    /// The current record of the <c>AxMCRSalesTable</c> class.
    /// </returns>
    public static AxSalesTable constructValidateInput(SalesTable _salesTable)
    {
        AxSalesTable axSalesTable = AxSalesTable::newValidateInput();

        axSalesTable.salesTable(_salesTable);

        return axSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newMCRSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the <c>AxMCRSalesTable</c> class.
    /// </summary>
    /// <param name="_mcrSalesTable">
    /// The specified base record of the <c>MCRSalesTable</c> table.
    /// </param>
    /// <returns>
    /// The instantiated and initialized object of the <c>AxMCRSalesTable</c> class.
    /// </returns>
    public static AxMCRSalesTable newMCRSalesTable(MCRSalesTable _mcrSalesTable)
    {
        AxMCRSalesTable axMCRSalesTable = AxMCRSalesTable::construct();

        axMCRSalesTable.mcrSalesTable(_mcrSalesTable);

        return axMCRSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the input validation for the <c>AxSalesTable</c> class.
    /// </summary>
    /// <returns>
    /// The current record of the <c>AxSalesTable</c> class.
    /// </returns>
    public static AxSalesTable newValidateInput()
    {
        AxSalesTable axSalesTable = new AxSalesTable();

        axSalesTable.validateInput(true);
        return axSalesTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>