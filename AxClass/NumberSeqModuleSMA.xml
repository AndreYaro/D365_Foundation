<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>NumberSeqModuleSMA</Name>
  <SourceCode>
    <Declaration><![CDATA[
public class NumberSeqModuleSMA extends NumberSeqApplicationModule
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>loadModule</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Configures all the data types that are being used by the module.
    /// </summary>
    protected void loadModule()
    {
        NumberSeqDatatype datatype = NumberSeqDatatype::construct();

        /* Setup service agreement id */

        datatype.parmDatatypeId(extendedtypenum(SMAAgreementId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMAManagement));
        datatype.parmReferenceHelp(literalstr("@SYS79097"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(1);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(999999);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Setup service order id */

        datatype.parmDatatypeId(extendedtypenum(SMAServiceOrderId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMAManagement));
        datatype.parmReferenceHelp(literalstr("@SYS79127"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(2);
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(999999);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Pre-ServiceOrderLines ScopeId */

        datatype.parmDatatypeId(extendedtypenum(SMAScopeId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMAManagement));
        datatype.parmReferenceHelp(literalstr("@SYS79130"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(3);
        datatype.parmReferenceLabel(literalstr("@SYS79086"));
        datatype.parmWizardLowest(1);
        datatype.parmWizardHighest(999999);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Template BOM id */

        datatype.parmDatatypeId(extendedtypenum(SMATemplateBOMId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMABom));
        datatype.parmReferenceHelp(literalstr("@SYS86999"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardfetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(4);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Master BOM line id */

        datatype.parmDatatypeId(extendedtypenum(SMATemplateBOMLineId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMABom));
        datatype.parmReferenceHelp(literalstr("@SYS87000"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(5);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Object ID */

        datatype.parmDatatypeId(extendedtypenum(SMAServiceObjectId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMAManagement));
        datatype.parmReferenceHelp(literalstr("@SYS70048"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(6);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);

        /* Object relation ID */

        datatype.parmDatatypeId(extendedtypenum(SMAServiceObjectRelationId));
        datatype.parmConfigurationKeyId(configurationkeynum(SMAManagement));
        datatype.parmReferenceHelp(literalstr("@SYS87675"));
        datatype.parmWizardIsContinuous(false);
        datatype.parmWizardFetchAheadQty(10);
        datatype.parmWizardIsManual(NoYes::No);
        datatype.parmWizardIsChangeDownAllowed(NoYes::No);
        datatype.parmWizardIsChangeUpAllowed(NoYes::No);
        datatype.parmSortField(7);
        datatype.addParameterType(NumberSeqParameterType::DataArea, true, false);
        this.create(datatype);
    }
]]></Source>
      </Method>
      <Method>
        <Name>numberSeqModule</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the application-specific module for this class.
    /// </summary>
    /// <returns>
    ///    The module-specific ID.
    /// </returns>
    public NumberSeqModule numberSeqModule()
    {
        return NumberSeqModule::SMA;
    }
]]></Source>
      </Method>
      <Method>
        <Name>buildModulesMapSubsciber</Name>
        <Source><![CDATA[
    /// <summary>
    ///    Appends the current class to the map that links modules to number sequence data type generators.
    /// </summary>
    [SubscribesTo(classstr(NumberSeqGlobal),delegatestr(NumberSeqGlobal,buildModulesMapDelegate))]
    static void buildModulesMapSubsciber(Map numberSeqModuleNamesMap)
    {
        NumberSeqGlobal::addModuleToMap(classnum(NumberSeqModuleSMA), numberSeqModuleNamesMap);
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
</AxClass>