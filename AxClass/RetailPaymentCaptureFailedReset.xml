<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPaymentCaptureFailedReset</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Updates the value of the <c>IsCaptureFailed</c> checkbox in the <c>RetailTransactionPaymentTrans</c> table.
/// </summary>
public class RetailPaymentCaptureFailedReset
{
    RetailTransactionPaymentTrans paymentTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    private boolean dialog()
    {
        return Box::yesNo(strFmt("@SYP4881173", fieldPName(RetailTransactionPaymentTrans, IsCaptureFailed)), DialogButton::No) == DialogButton::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the paymentTrans table buffer.
    /// </summary>
    /// <param name = "_paymentTransForUpdate">A buffer containing the data to be updated.</param>
    public void parmPaymentTrans(RetailTransactionPaymentTrans _paymentTransForUpdate)
    {
        paymentTrans = _paymentTransForUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the payment transaction.
    /// </summary>
    /// <returns>
    /// Result of execution
    /// </returns>
    public boolean process()
    {
        boolean result = true;

        try
        {
            ttsBegin;

            paymentTrans.selectForUpdate();

            paymentTrans.IsCaptureFailed = false;

            paymentTrans.update();

            ttscommit;
        }
        catch
        {
            error("@SYP4881174");

            result = false;
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Run the reset procedure.
    /// </summary>
    public void run()
    {
        if (this.dialog())
        {
            this.process();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a correct instance of <c>RetailPaymentCaptureFailedReset</c> class.
    /// </summary>
    /// <param name="_paymentTransactionForUpdate">
    /// Retail payment transaction
    /// </param>
    /// <returns>
    /// Instance of <c>RetailPaymentCaptureFailedReset</c>
    /// </returns>
    public static RetailPaymentCaptureFailedReset construct(RetailTransactionPaymentTrans _paymentTransactionForUpdate)
    {
        RetailPaymentCaptureFailedReset captureFailedReset = new RetailPaymentCaptureFailedReset();

        captureFailedReset.parmPaymentTrans(_paymentTransactionForUpdate);

        return captureFailedReset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the value of the <c>IsCaptureFailed</c> checkbox in the <c>RetailTransactionPaymentTrans</c> table.
    /// </summary>
    /// <param name = "_args">Args object containing the <c>RetailTransactionPaymentTrans</c> to be reset.</param>
    public static void main(Args _args)
    {
        RetailPaymentCaptureFailedReset captureFailedReset;

        if (!_args ||
            !_args.record() ||
            _args.dataset() != tableNum(RetailTransactionPaymentTrans))
        {
            throw error(strfmt("@SYS113735", classstr(RetailPaymentCaptureFailedReset), tablestr(RetailTransactionPaymentTrans)));
        }

        captureFailedReset = RetailPaymentCaptureFailedReset::construct(_args.record());

        captureFailedReset.run();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>