<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RestoredVATSumType_Trans_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
class RestoredVATSumType_Trans_RU extends RestoredVATSumType_RU
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>keyFields</Name>
				<Source><![CDATA[
        public container keyFields()
    {
        return [ fieldnum(RestoredVATLogTrans_RU, TransDate) ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
        public void new(Common _common, Map _mapParentSumTypes)
    {
        RestoredVATLogTrans_RU  restoredVATLogTrans = _common;
        ;

        parentRecord = RestoredVATLogTable_RU::find(restoredVATLogTrans.TransDate, true);

        super(_common, _mapParentSumTypes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSum</Name>
				<Source><![CDATA[
        public void updateSum(Common _updatedRecord = common)
    {
        RestoredVATLogTrans_RU  trans       = _updatedRecord;
        RestoredVATLogTrans_RU  orig        = _updatedRecord.orig();
        RestoredVATLogTrans_RU  trans_Orig;
        RestoredVATLogTable_RU  logTable    = parentSumType.record();
        int                     sign        = trans.Include - orig.Include;
        ;

        if (commonPrev)
        {
            trans_Orig = commonPrev;
        }
        else
        {
            trans_Orig = orig;
        }

        if (trans.Include == orig.Include && ! trans.Include)
        {
            return;
        }

        logTable.TaxStandardDirect   += trans.TaxStandardDirect   - trans_Orig.TaxStandardDirect;
        logTable.TaxReducedDirect    += trans.TaxReducedDirect    - trans_Orig.TaxReducedDirect;
        logTable.TaxStandardIndirect += trans.TaxStandardIndirect - trans_Orig.TaxStandardIndirect;
        logTable.TaxReducedIndirect  += trans.TaxReducedIndirect  - trans_Orig.TaxReducedIndirect;
        logTable.TaxStandardAsset    += trans.TaxStandardAsset    - trans_Orig.TaxStandardAsset;
        logTable.TaxReducedAsset     += trans.TaxReducedAsset     - trans_Orig.TaxReducedAsset;

        super();

        if (sign)
        {
            logTable.TaxStandardDirect   += sign * trans.TaxStandardDirect;
            logTable.TaxReducedDirect    += sign * trans.TaxReducedDirect;
            logTable.TaxStandardIndirect += sign * trans.TaxStandardIndirect;
            logTable.TaxReducedIndirect  += sign * trans.TaxReducedIndirect;
            logTable.TaxStandardAsset    += sign * trans.TaxStandardAsset;
            logTable.TaxReducedAsset     += sign * trans.TaxReducedAsset;

            super();
        }

        commonPrev = trans.data();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>