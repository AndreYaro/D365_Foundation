<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsControlCurrentQty</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WhsControlCurrentQty</c> class is responsible for handling the current quantity controls on the mobile device.
/// </summary>
#WHSRF
[WhsControlFactory(#CurrentQty)]
class WhsControlCurrentQty extends WhsControl
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mustCalculateCurrentQty</Name>
				<Source><![CDATA[
    protected boolean mustCalculateCurrentQty() 
    { 
        if (mode != WHSWorkExecuteMode::TransferOrderItemReceiving          &&
            mode != WHSWorkExecuteMode::TransferOrderItemReceivingAndLocate &&
            mode != WHSWorkExecuteMode::TransferOrderLineReceiving          &&
            mode != WHSWorkExecuteMode::TransferOrderLineReceivingAndLocate &&
            mode != WHSWorkExecuteMode::LicensePlateLoading                 &&
            !WHSWorkExecutionMode::newFromMode(mode).isInboundOrderOrLoadReceiving())
        {
            return true;
        }
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>process</Name>
				<Source><![CDATA[
    public boolean process()
    {
        if (!super())
        {
            return false;
        }

        if (this.mustCalculateCurrentQty())
        {
            Qty currentQty = this.calculateCurrentQty();
            fieldValues.parmCurrentQty(currentQty);
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>populate</Name>
				<Source><![CDATA[
    public void populate()
    {
        Qty currentQty = this.calculateCurrentQty();
        fieldValues.parmCurrentQty(currentQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateCurrentQty</Name>
				<Source><![CDATA[
    private Qty calculateCurrentQty()
    {
        Qty ret;
        ItemId itemId = fieldValues.parmItemId();
        WMSLocationId locationId = fieldValues.parmWMSLocationId();
        WHSLicensePlateId licensePlateId = fieldValues.parmLicensePlateId();

        if (itemId && (locationId || licensePlateId))
        {
            ret = WHSInventOnHand::onHandHandlingQty(itemId, controlData.findInventDimId());
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>