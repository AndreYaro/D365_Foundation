<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductDimPerCompanyFormHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Helper class for the <c>EcoResProductMasterDimension</c> form, getting the product master record
/// from args record <c>EcoResProductMaster</c>, <c>InventTable</c> form datasource or jumpref form datasource.
/// </summary>
public class EcoResProductDimPerCompanyFormHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findProductMasterFromJumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Find the product master record from args form data source.
    /// </summary>
    /// <param name = "_args">
    ///     The <c>Args</c> parameter.
    ///     </param>
    /// <returns>
    ///     The product master if found.
    /// </returns>
    protected EcoResProductMaster findProductMasterFromJumpRef(Args _args)
    {
        RefRecId        productMaster;

        if (_args && _args.caller() && _args.caller() is FormRun)
        {
            FormRun formRun = _args.caller() as FormRun;
            FormDataSource formDataSource = formRun.dataSource();
            if (formDataSource)
            {
                switch (formDataSource.table())
                {
                    case tableNum(InventTable):
                        ItemId itemId = formDataSource.cursor().(fieldNum(InventTable, ItemId));
                        productMaster = InventTable::itemProduct(itemId);
                        break;
                    case tableNum(EcoResDistinctProductVariant):
                        productMaster = formDataSource.cursor().(fieldNum(EcoResDistinctProductVariant, ProductMaster));
                        break;
                    default:
                        FieldId fieldId = this.getFieldIdForItemId(formDataSource.table());
                        if (fieldId)
                        {
                            productMaster = InventTable::itemProduct(formDataSource.cursor().(fieldId));
                            break;
                        }
                }
            }
        }

        if (!productMaster)
        {
            productMaster = InventTable::itemProduct(InventDim::findItemIdFromJumpRef(_args));
        }

        return EcoResProductMaster::find(productMaster);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProductMasterRec</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>EcoResProductMaster</c> record from the specified <c>Args</c> value.
    /// </summary>
    /// <param name="_args">
    ///    An instance of <c>Args</c> class.
    /// </param>
    /// <returns>
    ///    The <c>EcoResProductMaster</c> record.
    /// </returns>
    public EcoResProductMaster getProductMasterRec(Args _args)
    {
        EcoResProductMaster ecoResProductMaster;
        ItemId              itemId;

        if (_args && _args.record() is EcoResProductMaster)
        {
            ecoResProductMaster = _args.record() as EcoResProductMaster;
        }
        else
        {
            ecoResProductMaster  = this.findProductMasterFromJumpRef(_args);
        }

        if (!ecoResProductMaster)
        {
            throw error("@SYS133845");
        }

        return ecoResProductMaster;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFieldIdForItemId</Name>
				<Source><![CDATA[
    private FieldId getFieldIdForItemId(TableId _tableId)
    {
        if ( _tableId > 0)
        {
            SysDictTable dictTable = SysDictTable::newTableId(_tableId);
            FieldId fieldId = dictTable.fieldNext(0);
            while (fieldId)
            {
                SysDictField dictField = new SysDictField(_tableId, fieldId);
                if (dictField.isDerivedFrom(extendedTypeNum(ItemId)))
                {
                    return fieldId;
                }

                fieldId = dictTable.fieldNext(fieldId);
            }
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static EcoResProductDimPerCompanyFormHelper construct()
    {
        return new EcoResProductDimPerCompanyFormHelper();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
