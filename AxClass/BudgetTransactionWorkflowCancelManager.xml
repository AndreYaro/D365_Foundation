<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionWorkflowCancelManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetTransactionWorkflowCancelManager</c> class manages the workflow command cancellation
///    action.
/// </summary>
public class BudgetTransactionWorkflowCancelManager extends WorkflowCancelManager
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Calls the <c>WorkflowCancelDialog</c> class to surface a cancel dialog box and performs the
    ///    cancellation logic for the selected workflow instance or instances.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the <c>WorkflowCancelManager</c> class.
    /// </param>
    /// <exception cref="M:Exception::Error">
    ///    The specified arguments are null.
    /// </exception>
    public void run(Args _args)
    {
        if (!_args)
        {
            throw error(Error::wrongUseOfFunction(funcname()));
        }

        super(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDocument</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the budget transaction workflow status for the cancel action.
    /// </summary>
    /// <param name="_args">
    ///    The arguments for the <c>BudgetTransactionWorkflowCancelManager</c> class.
    /// </param>
    public void updateDocument(Args _args)
    {
        FormDataSource budgetTransactionHeader_ds;
        BudgetTransactionHeader budgetTransactionHeader;

        budgetTransactionHeader = _args.record() as BudgetTransactionHeader;

        if (budgetTransactionHeader)
        {
            BudgetTransactionHeader::setWorkflowStatus(
                budgetTransactionHeader.RecId,
                BudgetTransactionWorkflowStatus::NotSubmitted);

            if (FormDataUtil::getFormDataSource(budgetTransactionHeader))
            {
                // Update the data source when called from a client form.
                budgetTransactionHeader_ds = FormDataUtil::getFormDataSource(budgetTransactionHeader);
                int cursorPosition = budgetTransactionHeader_ds.getPosition();
                budgetTransactionHeader_ds.research(true);
                budgetTransactionHeader_ds.setPosition(cursorPosition);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs an instance of the <c>BudgetTransactionWorkflowCancelManager</c> class.
    /// </summary>
    /// <returns>
    ///    An instance of the <c>BudgetTransactionWorkflowCancelManager</c> class.
    /// </returns>
    public static BudgetTransactionWorkflowCancelManager construct()
    {
        return new BudgetTransactionWorkflowCancelManager();
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Runs the main method.
    /// </summary>
    /// <param name="_args">
    ///    Any command argument to use.
    /// </param>
    public static void main(Args _args)
    {
        BudgetTransactionWorkflowCancelManager workflowCancelManager;

        workflowCancelManager = BudgetTransactionWorkflowCancelManager::construct();

        workflowCancelManager.run(_args);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>