<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendTransReorgPaymSchedSplit</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.AX.Platform.Extensibility;
/// <summary>
/// The <c>CustVendTransReorgPaymSchedSplit</c> class provides payment schedule splitting functionality for payment schedules.
/// </summary>
[ExportInterfaceAttribute()]
public abstract class CustVendTransReorgPaymSchedSplit
{
    private boolean isInitialized = false;
    private CurrencyCode currencyCode;
    private AmountCur amountCur;

    private PaymSched paymentSchedule;
    private AmountCur remainingAmountCur;
    private TransDate transactionDate;

    protected TmpCustVendTransReorg tmpCustVendTransReorg;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>doRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates new <c>TmpCustVendTransReorg</c> table records based on the <c>PaymSchedBy</c> enumeration.
    /// </summary>
    protected abstract void doRun()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes payment splitting logic for a given payment schedule.
    /// </summary>
    internal void run()
    {
        if (!isInitialized)
        {
            throw error(strFmt("@SYS23669", funcName()));
        }

        this.doRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <param name = "_contract">The <c>CustVendTransReorgPaymSchedSplitContract</c> contract class.</param>
    /// <returns>The new instance of <c>CustVendTransReorgPaymSchedSplit</c> class.</returns>
    internal static CustVendTransReorgPaymSchedSplit construct(PaymSchedBy _paymSched)
    {
        SysPluginMetadataCollection metadataCollection = new SysPluginMetadataCollection();

        metadataCollection.SetManagedValue(enumStr(PaymSchedBy), enum2Symbol(enumNum(PaymSchedBy), enum2int(_paymSched)));
        CustVendTransReorgPaymSchedSplit instance = SysPluginFactory::Instance(identifierStr(Dynamics.AX.Application), classStr(CustVendTransReorgPaymSchedSplit), metadataCollection);

        if (instance == null)
        {
            throw error(strFmt("@SYS28115", _paymSched));
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    internal void init(TmpCustVendTransReorg _tmpCustVendTransReorg, 
        PaymSched _paymSched,
        TransDate _transDate,
        AmountCur _remainAmountCur,
        AmountCur _amountCur,
        CurrencyCode _currencyCode)
    {
        tmpCustVendTransReorg = _tmpCustVendTransReorg;
        paymentSchedule = _paymSched;
        transactionDate = _transDate;

        remainingAmountCur = _remainAmountCur;
        amountCur = _amountCur;
        currencyCode = _currencyCode;

        delete_from tmpCustVendTransReorg;

        isInitialized = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymSched</Name>
				<Source><![CDATA[
    protected PaymSched getPaymSched()
    {
        return paymentSchedule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemainAmountCur</Name>
				<Source><![CDATA[
    protected AmountCur getRemainAmountCur()
    {
        return remainingAmountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDate</Name>
				<Source><![CDATA[
    protected TransDate getTransDate()
    {
        return transactionDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAmountCur</Name>
				<Source><![CDATA[
    protected AmountCur getAmountCur()
    {
        return amountCur;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyCode</Name>
				<Source><![CDATA[
    protected CurrencyCode getCurrencyCode()
    {
        return currencyCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>