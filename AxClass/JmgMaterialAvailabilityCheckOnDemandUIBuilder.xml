<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgMaterialAvailabilityCheckOnDemandUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
// <summary>
/// The <c>JmgMaterialAvailabilityCheckOnDemandUIBuilder</c> class handles the UI creation for the on-demand material availability check for production order process.
/// </summary>
internal final class JmgMaterialAvailabilityCheckOnDemandUIBuilder extends SysOperationAutomaticUIBuilder
{
    private JmgMaterialAvailabilityCheckOnDemandContract contract;
    private DialogField df_selectedProdOrders;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is executed when the service controller starts building the dialog.
    /// </summary>
    [Hookable(false)]
    public void build()
    {
        super();

        df_selectedProdOrders = this.bindInfo().getDialogField(this.dataContractObject(), methodStr(JmgMaterialAvailabilityCheckOnDemandContract, parmSelectedProdOrders));
        this.modifyDialogFields();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is responsible for overriding form control events.
    /// </summary>
    [Hookable(false)]
    public void postRun()
    {
        super();

        // Override modified method
        df_selectedProdOrders.registerOverrideMethod(methodStr(FormComboBoxControl, modified),
                                             methodStr(JmgMaterialAvailabilityCheckOnDemandUIBuilder, selectedProdOrders_modified),
                                             this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is executed after the service controller has built the dialog.
    /// Here, we add custom fields and label text to the dialog.
    /// </summary>
    [Hookable(false)]
    public void postBuild()
    {
        super();

        contract   = controller.getDataContractObject() as JmgMaterialAvailabilityCheckOnDemandContract;

        List selectedProdOrders = contract.parmSelectedProdOrders();
        Dialog dialogLocal = this.dialog();

        if (selectedProdOrders.elements() > 1)
        {
            dialogLocal.addText(strFmt("@SCM:JmgMaterialAvailabilityCheckSelectedOrders", selectedProdOrders.elements()));
        }
        else
        {
            ListEnumerator enumerator = selectedProdOrders.getEnumerator();
            enumerator.moveNext();
            dialogLocal.addText(strFmt("@SCM:JmgMaterialAvailabilityCheckOneOrder", enumerator.current()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifyDialogFields</Name>
				<Source><![CDATA[
    private void modifyDialogFields()
    {
        df_selectedProdOrders.visible(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectedProdOrders_modified</Name>
				<Source><![CDATA[
    private boolean selectedProdOrders_modified(FormComboBoxControl _control)
    {
        this.modifyDialogFields();
        return _control.modified();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>