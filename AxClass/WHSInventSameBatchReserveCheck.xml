<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInventSameBatchReserveCheck</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInventSameBatchReserveCheck</c> class is responsible for verification of whether it's
/// possible to reserve an inventory movement for a WHS-enabled item that has same batch reservation requirements.
/// </summary>
class WHSInventSameBatchReserveCheck extends InventSameBatchReserveCheck
{
    WHSItemReservationHierarchyProvider hierarchyProvider;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>availableBatchQueryBuilder</Name>
				<Source><![CDATA[
	/// <summary>
	/// Creates a new <c>WHSInventBatchReserveQueryBuilder</c> to query on available batchs to reserve.
	/// </summary>
	/// <returns>
	/// The newly created <c>WHSInventBatchReserveQueryBuilder</c> instance.
	/// </returns>
    public WHSInventBatchReserveQueryBuilder availableBatchQueryBuilder()
    {
        WHSInventBatchReserveQueryBuilder queryBuilder = WHSInventBatchReserveQueryBuilder::construct();
        queryBuilder.parmItemId(movement.itemId());
        queryBuilder.parmInventDimCriteria(inventDimRequested);
        queryBuilder.parmInventDimParmCriteria(inventDimParmRequested);
        queryBuilder.parmIncludeOrdered(this.parmAvailableQtyCriteria().parmReserveOnOrdered());
        queryBuilder.parmIncludePhysical(true);
        queryBuilder.parmGroupByBatchId(true);
        queryBuilder.parmReservationHierarchyLevel(this.parmHierarchyProvider().batchLevelAboveLocation());
        queryBuilder.parmAdvancedCriteria(this.parmCriteriaBuilder().buildCriteria());

        return queryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAvailableBatch</Name>
				<Source><![CDATA[
    public InventBatch findAvailableBatch()
    {
        InventBatch                         availableBatch;

        WHSInventBatchReserveQueryBuilder reserveQueryBuilder = this.availableBatchQueryBuilder();

        WHSInventReserveQueryCollection reserveCollection = WHSInventReserveQueryCollection::newFromQuery(reserveQueryBuilder.buildOnHandQuery(), reserveQueryBuilder.sumTableId());
        WHSInventReserveQueryEnumerator reserveEnumerator = reserveCollection.getEnumerator() as WHSInventReserveQueryEnumerator;

        while (reserveEnumerator.moveNext() && !availableBatch.RecId)
        {
            WHSInventOnHandData onHandData = reserveEnumerator.current();

            WHSInventOnHandDataAvailability onHandDataAvailability = WHSInventOnHandDataAvailability::newFromWHSInventOnHandData(onHandData);

            if (this.parmAvailableQtyCriteria().isMetByInventAvailability(InventAvailabilityByUnit::newFromParms(onHandDataAvailability, movement.pdsCWItem() ? onHandDataAvailability : null))
                && reserveQueryBuilder.parmAdvancedCriteria().isMatchedByInventDim(onHandData.parmInventDim()))
            {
                availableBatch = InventBatch::find(onHandData.parmInventDim().inventBatchId, movement.itemId());
            }
        }

        return availableBatch;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHierarchyProvider</Name>
				<Source><![CDATA[
    public WHSItemReservationHierarchyProvider parmHierarchyProvider(
        WHSItemReservationHierarchyProvider _hierarchyProvider = null)
    {
        if (!prmisDefault(_hierarchyProvider))
        {
            hierarchyProvider = _hierarchyProvider;
        }
        else if (!hierarchyProvider)
        {
            hierarchyProvider = WHSItemReservationHierarchyProvider::newFromInventTable(this.parmMovement().inventTable());
        }

        return hierarchyProvider;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    public PdsSameLotError run()
    {
        if (!this.parmHierarchyProvider().isBatchAboveLocation())
        {
            return PdsSameLotError::None;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static WHSInventSameBatchReserveCheck construct()
    {
        return new WHSInventSameBatchReserveCheck();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>