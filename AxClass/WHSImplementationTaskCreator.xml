<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSImplementationTaskCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSImplementationTaskCreator
{
    private boolean isExistingTask;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>constructFromTask</Name>
				<Source><![CDATA[
    internal static WHSImplementationTaskCreator constructFromTask(WHSImplementationProjectTasks _task, WHSTmpImplementationProjectTasks _taskEditorTmp)
    {
        WHSImplementationTaskCreator creator = new WHSImplementationTaskCreator();
        
        creator.initialize(_task, _taskEditorTmp);

        return creator;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    private void initialize(WHSImplementationProjectTasks _task, WHSTmpImplementationProjectTasks _taskEditorTmp)
    {
        isExistingTask = false;

        if (_task.RecId)
        {
            isExistingTask = true;
            _taskEditorTmp.Project = _task.Project;
            _taskEditorTmp.Name = _task.Name;
            _taskEditorTmp.MenuItem = _task.MenuItem;
            _taskEditorTmp.MenuItemType = _task.MenuItemType;
            _taskEditorTmp.Description = _task.Description;
            _taskEditorTmp.ParentTaskName = WHSImplementationProjectTasks::findBySequenceNumber(_task.Project, _task.ParentSequenceNumber).Name;
            _taskEditorTmp.SequenceNumber = _task.SequenceNumber;
        }
        else
        {
            _taskEditorTmp.Project = _task.Project;
            _taskEditorTmp.SequenceNumber = WHSImplementationProjectTasks::findNextSequenceNumber(_task.Project);
            _taskEditorTmp.ParentTaskName = '';
        }
        
        _taskEditorTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveChanges</Name>
				<Source><![CDATA[
    internal void saveChanges(WHSTmpImplementationProjectTasks _taskEditorTmp)
    {
        if (isExistingTask)
        {
            this.updateExistingTask(_taskEditorTmp);
        }
        else
        {
            this.createNewTask(_taskEditorTmp);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateExistingTask</Name>
				<Source><![CDATA[
    private void updateExistingTask(WHSTmpImplementationProjectTasks _taskEditorTmp)
    {
        ttsbegin;

        WHSImplementationProjectTasks task = WHSImplementationProjectTasks::find(_taskEditorTmp.Project, _taskEditorTmp.Name, true);

        task.MenuItem       = _taskEditorTmp.MenuItem;
        task.MenuItemType   = _taskEditorTmp.MenuItemType;
        task.Description    = _taskEditorTmp.Description;
        task.ParentSequenceNumber = WHSImplementationProjectTasks::find(_taskEditorTmp.Project, _taskEditorTmp.ParentTaskName).SequenceNumber;
        task.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createNewTask</Name>
				<Source><![CDATA[
    private void createNewTask(WHSTmpImplementationProjectTasks _taskEditorTmp)
    {
        ttsbegin;

        WHSImplementationProjectTasks task;
        task.Project        = _taskEditorTmp.Project;
        task.Name           = _taskEditorTmp.Name;
        task.MenuItem       = _taskEditorTmp.MenuItem;
        task.MenuItemType   = _taskEditorTmp.MenuItemType;
        task.SequenceNumber = _taskEditorTmp.SequenceNumber;
        task.Description    = _taskEditorTmp.Description;
        task.ParentSequenceNumber = WHSImplementationProjectTasks::find(_taskEditorTmp.Project, _taskEditorTmp.ParentTaskName).SequenceNumber;
        task.insert();

        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>