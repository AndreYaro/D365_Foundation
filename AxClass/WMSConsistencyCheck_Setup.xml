<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>wmsConsistencyCheck_Setup</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class wmsConsistencyCheck_Setup extends SysConsistencyCheck implements BatchRetryable
{
    boolean     dummy;

    #DEFINE.CurrentVersion(1)

    #LOCALMACRO.CurrentList
        Dummy
    #ENDMACRO
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configurationKey</Name>
				<Source><![CDATA[
    public ConfigurationKeyId configurationKey()
    {
        return configurationKeyNum(WMSBasic);
    }

]]></Source>
			</Method>
			<Method>
				<Name>executionOrder</Name>
				<Source><![CDATA[
    public Integer executionOrder()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
        public container pack()
    {
        return [#CurrentVersion,#CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        this.kernelCheckTable(tableNum(WMSJournalName));
        this.kernelCheckTable(tableNum(WMSAisle));
        this.kernelCheckTable(tableNum(WMSStoreArea));
        this.kernelCheckTable(tableNum(WMSStoreZone));
        this.kernelCheckTable(tableNum(WMSStoreZoneArea));
        this.kernelCheckTable(tableNum(WMSPalletType));
        this.kernelCheckTable(tableNum(WMSPalletTypeGroup));
        this.kernelCheckTable(tableNum(WMSPalletTypeGroupMember));
        this.kernelCheckTable(tableNum(WMSBlockingCause));
        this.kernelCheckTable(tableNum(WMSForkLift));
        this.kernelCheckTable(tableNum(WMSParameters));
    }

]]></Source>
			</Method>
			<Method>
				<Name>treeParentClassId</Name>
				<Source><![CDATA[
    public ClassId treeParentClassId()
    {
        return classNum(WMSConsistencyCheck);
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
        public boolean unpack(container packedClass)
    {
        Integer     version     = conPeek(packedClass,1);

        switch (version)
        {
            case #CurrentVersion :
                [version,#CurrentList] = packedClass;
                break;
            default :
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        public static ClassDescription description()
    {
        return "@SYS2186";
    }

]]></Source>
			</Method>
			<Method>
				<Name>helpText</Name>
				<Source><![CDATA[
        public static HelpTxt helpText()
    {
        return "@SYS58898";
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>