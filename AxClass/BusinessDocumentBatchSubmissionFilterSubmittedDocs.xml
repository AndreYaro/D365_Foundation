<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocumentBatchSubmissionFilterSubmittedDocs</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BusinessDocumentBatchSubmissionFilterSubmittedDocs</c> class implements the IBusinessDocumentBatchSubmissionFilter interface
///    to filter invoices as per Resubmit flag if the invoice was submitted before while doing batch submission.
/// </summary>
using System.ComponentModel.Composition;

[Export(identifierstr(Dynamics.AX.Application.IBusinessDocumentBatchSubmissionFilter))]
internal class BusinessDocumentBatchSubmissionFilterSubmittedDocs implements IBusinessDocumentBatchSubmissionFilter
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>filterBusinessDocumentsBeforeBatchSubmission</Name>
				<Source><![CDATA[
    public void filterBusinessDocumentsBeforeBatchSubmission(QueryBuildDataSource _qbds, TableId _tableId, BusinessDocumentSubmissionContract _dataContract)
    {
        _qbds = _qbds.addDataSource(tableNum(BusinessDocumentBatchSubmissionItem));
        _qbds.joinMode((_dataContract != null && _dataContract.parmResubmit()) ? JoinMode::ExistsJoin : JoinMode::NoExistsJoin);
        _qbds.addLink(fieldName2Id(_tableId, 'TableId'), fieldNum(BusinessDocumentBatchSubmissionItem, RefTableId));
        _qbds.addLink(fieldName2Id(_tableId, 'RecId'), fieldNum(BusinessDocumentBatchSubmissionItem, RefRecId));

        QueryBuildDataSource batchSubmissionQbds = _qbds.addDataSource(tableNum(BusinessDocumentBatchSubmission));
        batchSubmissionQbds.joinMode(JoinMode::ExistsJoin);
        batchSubmissionQbds.addLink(fieldNum(BusinessDocumentBatchSubmissionItem, BatchSubmissionId), fieldNum(BusinessDocumentBatchSubmission, RecId));

        QueryBuildDataSource serviceSubmissionQbds = batchSubmissionQbds.addDataSource(tableNum(BusinessDocumentSubmission));
        serviceSubmissionQbds.joinMode(JoinMode::ExistsJoin);
        serviceSubmissionQbds.addLink(fieldNum(BusinessDocumentBatchSubmission, RecId), fieldNum(BusinessDocumentSubmission, RefRecId));
        serviceSubmissionQbds.addLink(FieldNum(BusinessDocumentBatchSubmission, TableId), fieldNum(BusinessDocumentSubmission, RefTableId));

        if (_dataContract != null && _dataContract.parmResubmit())
        {
            findOrCreateRange_W(
                serviceSubmissionQbds,
                fieldNum(BusinessDocumentSubmission, State),
                queryValue(BusinessDocumentState::Failed)
            ).status(RangeStatus::Hidden);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>