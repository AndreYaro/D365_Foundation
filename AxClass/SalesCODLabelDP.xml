<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCODLabelDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>SalesCODLabelDP</c> class provides data for the sales COD label report.
/// </summary>
[SRSReportParameterAttribute(classstr(SalesCODLabelContract))]
public class SalesCODLabelDP extends SRSReportDataProviderBase
{
    CompanyInfo         companyInfo;
    CustTrans           custTrans;
    CustTable           custTable;
    AmountCur           amount;

    SalesCODLabelTmp    salesCODLabelTmp;
    recId               recId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSalesCODLabelTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the data from the <c>SalesCODLabelTmp</c> temporary table.
    /// </summary>
    /// <returns>
    ///    The data from the temporary table.
    /// </returns>
    [SRSReportDataSetAttribute(tablestr(SalesCODLabelTmp))]
    public SalesCODLabelTmp getSalesCODLabelTmp()
    {
        select * from salesCODLabelTmp;
        return salesCODLabelTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertIntoTempTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the selected records into the temporary table.
    /// </summary>
    private void insertIntoTempTable()
    {
        salesCODLabelTmp.UpsNum                 = companyInfo.upsNum;
        salesCODLabelTmp.CompanyName            = companyInfo.name();
        salesCODLabelTmp.CompanyAddress         = companyInfo.postalAddress().Address;
        salesCODLabelTmp.Amount                 = custTrans.remainAmountCur();
        salesCODLabelTmp.Invoice                = custTrans.Invoice;

        salesCODLabelTmp.CashPayment            = custTrans.CashPayment;

        salesCODLabelTmp.TransDate              = custTrans.TransDate;
        salesCODLabelTmp.CustName               = custTable.name();
        salesCODLabelTmp.CustAddress            = custTable.address();

        salesCODLabelTmp.insert();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Processes the report business logic, calls the helper methods, and inserts data into the temporary
    ///    table.
    /// </summary>
    /// <remarks>
    ///    This method provides the ability to write the report business logic. It will be called by SQL
    ///    Server Reporting Services at run time. The method should compute data and populate the data tables
    ///    that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        SalesCODLabelContract contract = this.parmDataContract() as SalesCODLabelContract;
        recId   = contract.parmRecordId();

        // If called from menu item, donot display the report
        if (recId)
        {
            custTrans = CustTrans::find(recId);
            companyInfo = CompanyInfo::find();
            custTable = CustTable::find(custTrans.AccountNum);
            this.insertIntoTempTable();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
