<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFDIWithholdingMail_MX</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CFDIWithholdingMail_MX</c> class populates the <c>SysEmailTable</c> table and related tables.
/// </summary>
public class CFDIWithholdingMail_MX  extends EInvoiceCFDIMail_MX
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initParameters</Name>
				<Source><![CDATA[
    protected void initParameters()
    {
        emailParameters = SysEmailParameters::find();
        languageId = xUserInfo::find().language;
        emailTable = SysEmailTable::find(EInvoiceCFDIParameters_MX::find().WithholdingEmailId);

        if (!languageId)
        {
            languageId = emailTable.DefaultLanguage;
        }

        emailMessage = SysEmailMessageTable::find(emailTable.EmailId, languageId);

        if (!emailMessage)
        {
            // Message not found for this language.
            emailMessage = SysEmailMessageTable::find(emailTable.EmailId, emailTable.DefaultLanguage);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create a new instance of the <c>CFDIWithholdingMail_MX</c> class
    /// </summary>
    /// <param name="_pathAndFileName">The file attachment path</param>
    /// <param name="_toEmailAddr">The email recipients</param>
    /// <param name="_emailIdentifier">The email identifier</param>
    /// <returns>The newly instantiated object</returns>
    public static CFDIWithholdingMail_MX construct(
        Filename _pathAndFileName,
        BinData _attachmentContent,
        SysEmailRecipients _toEmailAddr,
        SysEmailDescriptionType _emailIdentifier)
    {
        CFDIWithholdingMail_MX withholdingCFDIMail = new CFDIWithholdingMail_MX(_pathAndFileName, _attachmentContent, _toEmailAddr, _emailIdentifier);

        return withholdingCFDIMail;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>