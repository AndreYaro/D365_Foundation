<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PmfCoByProdReport_CalcTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Report execution class for batch cost estimates and costings report (PmfCoByProdCalcTrans)
/// </summary>
public class PmfCoByProdReport_CalcTrans extends RunBaseReport implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lastValueElementName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the name for the 'PmfCoByProdCalcTrans' report.
    /// </summary>
    /// <returns>
    ///    The name of the report in the AOT that will be used.
    /// </returns>
    public identifierName lastValueElementName()
    {
        return ssrsReportstr(PmfCoByProdCalcTrans, Report);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PmfCoByProdReport_CalcTrans construct()
    {
        return new PmfCoByProdReport_CalcTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static public ClassDescription description()
    {
        return "@PRO1379";
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        PmfCoByProdReport_CalcTrans
            pmfCoByProdReport_CalcTrans = PmfCoByProdReport_CalcTrans::construct();

        if (pmfCoByProdReport_CalcTrans.prompt())
        {
            pmfCoByProdReport_CalcTrans.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }
]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    final boolean isRetryable() 
    {
        return true;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>