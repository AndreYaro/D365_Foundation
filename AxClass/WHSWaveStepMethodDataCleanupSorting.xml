<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWaveStepMethodDataCleanupSorting</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSWaveStepMethodDataCleanupSorting</c> implements the wave data cleanup logic for the
/// sorting wave step method.
/// </summary>
[WHSWaveStepMethodDataCleanupAttribute(methodStr(WhsPostEngineBase, sorting))]
internal final class WHSWaveStepMethodDataCleanupSorting extends WHSWaveStepMethodDataCleanup
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cleanupWaveStepTrackingData</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void cleanupWaveStepTrackingData()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanupWaveStepCommittedData</Name>
				<Source><![CDATA[
    [Hookable(false)]
    internal void cleanupWaveStepCommittedData()
    {
        // WHSTmpWorkLine will be cleaned up by WHSWaveStepMethodDataCleanupAllocation
        if (this.parmWaveId())
        {
            WHSOutboundSortPosition sortPosition;
            WHSOutboundSortPositionCriteria sortPositionCriteria;

            delete_from sortPositionCriteria
            exists join sortPosition
                where sortPosition.WaveId == this.parmWaveId()
                    && sortPositionCriteria.OutboundSortPosition == sortPosition.RecId;

            delete_from sortPosition
                where sortPosition.WaveId == this.parmWaveId();

            this.parmPerfTask().setDeleteSortPositionRecords(sortPosition.RowCount());
            this.parmPerfTask().setDeleteSortPositionCriteriaRecords(sortPositionCriteria.RowCount());
        }
        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>