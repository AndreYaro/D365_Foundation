<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SmaServiceOrderActivityContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SMAServiceOrderActivityContract</c> class is the data contract class for
/// <c>SMAServiceOrderActivity</c> the <c>pn_SSRS_nover_1st</c> report.
/// </summary>
[DataContractAttribute]
public class SmaServiceOrderActivityContract
{
    // custGroupId and smaAgreementGroupId parameters could have
    // special values for selecting all groups and for selecting
    // agreements without group, so String255 is used to prevent
    // truncation of the special parameter values
    String255       custGroupId;
    String255       smaAgreementGroupId;
    FromDateTime    fromDate;
    ToDateTime      toDate;

    // special values defined in SCMConstants
    #define.parameterAllMembersValue('{F11CCF5A-E8EF-4e39-BA40-FB87E7EBF9D4}')
    #define.parameterNullMembersValue('NullMembers_5502a1cf_8e0a_4454_8886_b720a9dbba04')
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCustGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter CustGroupId.
    /// </summary>
    /// <param name="_custGroupId">
    /// The new value of the datacontract parameter CustGroupId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter CustGroupId
    /// </returns>
    [
        DataMemberAttribute('CustGroupId'),
        SysOperationLabelAttribute(literalstr("@SYS181968")),
        SysOperationHelpTextAttribute(literalstr("@SYS87804"))
    ]
    public CustGroupId parmCustGroupId(String255 _custGroupId = custGroupId)
    {
        custGroupId = _custGroupId;
        return custGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS182559")),
        SysOperationHelpTextAttribute(literalstr("@SYS87803"))
    ]
    public FromDateTime parmFromDate(FromDateTime _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSMAAgreementGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter SMAAgreementGroupId.
    /// </summary>
    /// <param name="_smaAgreementGroupId">
    /// The new value of the datacontract parameter SMAAgreementGroupId; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter SMAAgreementGroupId
    /// </returns>
    [
        DataMemberAttribute('SMAAgreementGroupId'),
        SysOperationLabelAttribute(literalstr("@SYS181023")),
        SysOperationHelpTextAttribute(literalstr("@SYS87804"))
    ]
    public SMAAgreementGroupId parmSMAAgreementGroupId(String255 _smaAgreementGroupId = smaAgreementGroupId)
    {
        smaAgreementGroupId = _smaAgreementGroupId;
        return smaAgreementGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS181811")),
        SysOperationHelpTextAttribute(literalstr("@SYS87804"))
    ]
    public ToDateTime parmToDate(ToDateTime _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSelectAgreementsWithoutGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the agreements without an agreement group will be selected.
    /// </summary>
    /// <returns>
    /// true if the agreements without an agreement group will be selected; otherwise, false
    /// </returns>
    public boolean shouldSelectAgreementsWithoutGroup()
    {
        return smaAgreementGroupId == #parameterNullMembersValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSelectAllAgreementGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether all agreement groups will be selected.
    /// </summary>
    /// <returns>
    /// true if all the groups will be selected; otherwise, false.
    /// </returns>
    public boolean shouldSelectAllAgreementGroup()
    {
        return smaAgreementGroupId == #parameterAllMembersValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>shouldSelectAllCustGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether all customer groups will be selected.
    /// </summary>
    /// <returns>
    /// true if all the groups should be selected; otherwise, false.
    /// </returns>
    public boolean shouldSelectAllCustGroup()
    {
        return custGroupId == #parameterAllMembersValue;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>