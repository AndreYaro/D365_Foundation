<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqActionApplyTransferOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class applies an action to a <c>ReqTrans</c> record which is a transfer order.
/// </summary>
[ReqRefTypeFactoryAttribute(ReqRefType::TransferOrderReceive)]
class ReqActionApplyTransferOrder extends ReqActionApplyToOrder
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyActionToReferencedOrder</Name>
				<Source><![CDATA[
    public void applyActionToReferencedOrder()
    {
        InventTransferTable         inventTransferTable;
        InventTransferLine          inventTransferLine;
        SalesCalcAvailableDlvDates  salesCalcAvailableDlvDates;

        inventTransferLine = InventTransferLine::findTransIdReceive(InventTransOrigin::find(reqTrans.InventTransOrigin).InventTransId, true);

        if (!inventTransferLine.RecId)
        {
            throw error(strFmt("@SYS78332", reqTrans.RefId));
        }

        if (reqTrans.ActionType == ActionType::Cancel)
        {
            if (!inventTransferLine.validateDelete())
            {
                throw error("@SYS18447");
            }

            inventTransferLine.delete();

            if (reqActionApply.parmDeleteEmptyTransfer())
            {
                // Delete the transfer order if there are not any lines left
                inventTransferTable = InventTransferTable::find(inventTransferLine.TransferId, true);
                if (!inventTransferTable.hasLines())
                {
                    if (!inventTransferTable.validateDelete())
                    {
                        throw error("@SYS18447");
                    }

                    inventTransferTable.delete();
                }
            }
        }
        else
        {
            if (reqTrans.ActionDays != 0)
            {
                inventTransferLine.ReceiveDate = reqTrans.ActionDate;
                inventTransferLine.ShipDate = reqTrans.ActionDate;

                if (ReqActionApplyTransfOrderNotIgnoreTransportDaysFlight::instance().isEnabled() || inventTransferLine.DeliveryDateControlType != SalesDeliveryDateControlType::None)
                {
                    // Find the ship date based on the receipt date
                    salesCalcAvailableDlvDates = SalesCalcAvailableDlvDates::newCommonSalesDlvDateType(inventTransferLine,fieldNum(InventTransferLine, ReceiveDate));
                    salesCalcAvailableDlvDates.createPossibleShippingAndReceiptDates(true);
                    inventTransferLine.ShipDate = salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmpBestGuess().AvailableShippingDate;

                    if (inventTransferLine.ShipDate > inventTransferLine.ReceiveDate)
                    {
                        inventTransferLine.ShipDate = inventTransferLine.ReceiveDate;
                    }

                    if (inventTransferLine.ShipDate < DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()))
                    {
                        inventTransferLine.ShipDate = DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone());
                    }
                }
            }

            if (reqTrans.ActionQtyAdd)
            {
                inventTransferLine.QtyTransfer += reqTrans.ActionQtyAdd;
                inventTransferLine.PdsCWQtyTransfer += PdsCatchWeight::cwQty(inventTransferLine.ItemId, reqTrans.ActionQtyAdd);

                if (inventTransferLine.AutoReservation && !InventMovement::canAutoReserveQuantity(inventTransferLine))
                {
                    throw error(strFmt("@GLS130114", inventTransferLine.ItemId));
                }

                InventMovement::bufferSetRemainQty(inventTransferLine,InventMovSubType::None);
                InventMovement::bufferSetRemainQty(inventTransferLine,InventMovSubType::TransferOrderTransitFrom);
            }

            if (!inventTransferLine.validateWrite())
            {
                throw error("@SYS18447");
            }

            inventTransferLine.update();

            this.updateReqTrans();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>