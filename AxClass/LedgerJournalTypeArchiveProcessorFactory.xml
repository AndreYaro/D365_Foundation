<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerJournalTypeArchiveProcessorFactory</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.Archive.Contracts;

internal static final class LedgerJournalTypeArchiveProcessorFactory
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getProcessorFromJournalType</Name>
				<Source><![CDATA[
    internal static LedgerJournalTypeArchiveProcessor getProcessorFromJournalType(LedgerJournalType _ledgerJournalType)
    {
        SysPluginMetadataCollection metadataCollection = new SysPluginMetadataCollection();

        metadataCollection.SetManagedValue(enumStr(LedgerJournalType), _ledgerJournalType);
        LedgerJournalTypeArchiveProcessor instance = SysPluginFactory::Instance(identifierStr(Dynamics.AX.Application), classStr(LedgerJournalTypeArchiveProcessor), metadataCollection);

        if (instance == null)
        {
            throw error(strFmt("@SYS19306", funcName()));
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAllRegisteredJournalTypes</Name>
				<Source><![CDATA[
    internal static container getAllRegisteredJournalTypes()
    {
        container jourTypes;
        Array allTypesProviders = SysPluginFactory::Instances(identifierStr(Dynamics.AX.Application), classStr(LedgerJournalTypeArchiveProcessor), new SysPluginMetadataCollection());

        if (allTypesProviders == null || allTypesProviders.lastIndex() == 0)
        {
            throw error(strFmt("@SYS19306", funcName()));
        }

        for (int i = 1; i <= allTypesProviders.lastIndex(); i++)
        {
            jourTypes += [enum2Str(allTypesProviders.value(i).getLedgerJournalType())];
        }

        return jourTypes;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>