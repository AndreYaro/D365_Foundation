<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RPayCreatePayment_BankSheetTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
final class RPayCreatePayment_BankSheetTrans extends RPayCreatePayment_Bank
{
    RPaySheetTrans      rPaySheetTrans;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcTotalAmount</Name>
				<Source><![CDATA[
        protected Amount calcTotalAmount()
    {
        RPaySheetTrans  rPaySheetTransLocal, rPaySheetTransCheck;
        Amount          ret;

        for (rPaySheetTransLocal = table_ds.getFirst(true) ?
                                   table_ds.getFirst(true) :
                                   table_ds.cursor();
             rPaySheetTransLocal;
             rPaySheetTransLocal = table_ds.getNext())
        {
            rPaySheetTransCheck = RPaySheetTrans::find(rPaySheetTransLocal.Emplid, rPaySheetTransLocal.sheetTableRecId);
            if (! rPaySheetTransCheck.JournalNum)
            {
                ret += rPaySheetTransLocal.Amount;
                counter++;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postUpdate</Name>
				<Source><![CDATA[
        protected void postUpdate()
    {
        RPaySheetTrans rPaySheetTransLocal, rPaySheetTransUpdate;
        RPaySheetTable rPaySheetTable;
        ttsbegin;

        for (rPaySheetTransLocal = table_ds.getFirst(true) ? table_ds.getFirst(true) : table_ds.cursor();
             rPaySheetTransLocal;
             rPaySheetTransLocal = table_ds.getNext())
        {
            rPaySheetTransUpdate = RPaySheetTrans::find(rPaySheetTransLocal.Emplid, rPaySheetTransLocal.sheetTableRecId, true);

            if (! rPaySheetTransUpdate.JournalNum)
            {
                rPaySheetTransUpdate.JournalNum     = ledgerJournalTable.JournalNum;
                rPaySheetTransUpdate.PayVoucherBank = payVoucherBank;
                rPaySheetTransUpdate.PayDateBank    = payDateBank;
                rPaySheetTransUpdate.update();
            }
        }

        rPaySheetTable = RPaySheetTable::find(rPaySheetTrans.SheetTableRecId, true);
        if (rPaySheetTable)
        {
            rPaySheetTable.updateDisbursedSum(totalAmount);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataSource</Name>
				<Source><![CDATA[
        public void setDataSource(Common _rPaySheetTrans, FormDataSource _ds)
    {
        super(_rPaySheetTrans, _ds);
        rPaySheetTrans    = _rPaySheetTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
        [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
        public static ClassDescription description()
    {
        return "@RUP649";
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>