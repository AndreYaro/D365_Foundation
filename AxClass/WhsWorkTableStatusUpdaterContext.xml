<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WhsWorkTableStatusUpdaterContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WhsWorkTableStatusUpdaterContext implements System.IDisposable
{
    private WHSWorkLine workLine;
    private static WhsWorkTableStatusUpdaterContext instance;
    private static StackBase instanceStack;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>Dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void Dispose()
    {
        if (instanceStack)
        {
            instanceStack.pop();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
        if (!instanceStack)
        {
            instanceStack = new StackBase(Types::Class);
        }

        instanceStack.push(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    private static WhsWorkTableStatusUpdaterContext construct()
    {
        return new WhsWorkTableStatusUpdaterContext();
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    [Hookable(false)]
    public static WhsWorkTableStatusUpdaterContext current()
    {
        if (instanceStack)
        {
            return instanceStack.peek(instanceStack.count());
        }
        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromWorkLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a new instance of the class.
    /// </summary>
    /// <param name = "_workLine">The work line.</param>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    public static WhsWorkTableStatusUpdaterContext newFromWorkLine(WHSWorkLine _workLine)
    {
        var context = WhsWorkTableStatusUpdaterContext::construct();

        context.parmWorkLine(_workLine);

        return context;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkLine</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public WHSWorkLine parmWorkLine(WHSWorkLine _workLine = workLine)
    {
        workLine = _workLine;
        return workLine;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>