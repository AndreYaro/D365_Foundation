<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntrastatTransferTaxIdCurrencyRule</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>IntrastatTransferTaxIdCurrencyRule</c> is responcible for searching of Currency code for the TAxId accroding Intrastat setup.
/// </summary>
internal class IntrastatTransferTaxIdCurrencyRule
{
    private Map taxRegistration2CurrencyMap = new Map(Types::Int64, Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static IntrastatTransferTaxIdCurrencyRule construct()
    {
        return new IntrastatTransferTaxIdCurrencyRule();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrencyFromTaxRegistration</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns reporting Currency Code for the given TaxId.
    /// </summary>
    /// <param name = "_taxRegistrationRecId">The Tax registration records reffering to TaxID.</param>
    /// <param name = "_defaultCurrencyCode">The default value of Currency code</param>
    /// <returns>Reporting Currency Code for the given TaxId</returns>
    public CurrencyCode getCurrencyFromTaxRegistration(TaxRegistrationRecId _taxRegistrationRecId, CurrencyCode _defaultCurrencyCode)
    {
        if (taxRegistration2CurrencyMap.exists(_taxRegistrationRecId))
        {
            return taxRegistration2CurrencyMap.lookup(_taxRegistrationRecId);
        }

        TaxRegistration taxRegistration = TaxRegistration::find(_taxRegistrationRecId);
        TaxRegistrationTypeApplicabilityRule applicabilityRule = TaxRegistrationTypeApplicabilityRule::find(taxRegistration.TaxRegistrationTypeApplicabilityRule);

        CurrencyCode currencyCode;
        if (applicabilityRule.CountryRegionId)
        {
            currencyCode = (select firstonly CurrencyCode from IntrastatCountryRegionParameters
                where intrastatCountryRegionParameters.CountryRegionId == applicabilityRule.CountryRegionId).CurrencyCode;
        }

        currencyCode = currencyCode ? currencyCode : _defaultCurrencyCode;

        taxRegistration2CurrencyMap.add(_taxRegistrationRecId, currencyCode);

        return currencyCode;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>