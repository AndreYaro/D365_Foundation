<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CatVendorCatalogListPageInteraction</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CatVendorCatalogListPageInteraction extends ListPageInteraction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    public void initializeQuery(Query _query)
    {
        QueryBuildDataSource    qbds;
        RefRecId                vendorParty;
        boolean                 isVendorPartyEnabled =false;
        super(_query);

        // Filter the query to show only vendor's party catalogs, if the request is coming from EP.
        if (this.listPage().listPageArgs().menuItemName() == menuitemdisplaystr(CatVendorCatalogEP))
        {
            vendorParty = CatVendorCatalogMaintenance::getVendorParty();
            isVendorPartyEnabled = CatVendorCatalogMaintenance::isVendorPartyEnabled(vendorParty);
            // Check whether vendor is enabled for Catalog Import Process. If not throw the error.
            if (!isVendorPartyEnabled)
            {
                error("@SYS191378");
            }
            this.listPage().actionPaneControlEnabled(formcontrolstr(CatVendorCatalogListPage, CatalogActionPaneTab),isVendorPartyEnabled);
            qbds = _query.dataSourceTable(tablenum(CatVendorCatalog));
            qbds.addRange(fieldnum(CatVendorCatalog, VendorParty)).value(SysQuery::value(vendorParty));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionChanged</Name>
				<Source><![CDATA[
    public void selectionChanged()
    {
        CatVendorCatalog catVendorCatalogCurrent = this.listPage().activeRecord(tableId2name(tableNum(CatVendorCatalog)));
        super();

        if (catVendorCatalogCurrent)
        {
            //Enable buttons as record is available
            this.listPage().actionPaneControlEnabled(
                formcontrolstr(CatVendorCatalogListPage, DeleteCatalogButton),
                !catVendorCatalogCurrent.IsDeleted);

            this.listPage().actionPaneControlEnabled(
                formcontrolstr(CatVendorCatalogListPage, EnableAutomatedApproval),
                catVendorCatalogCurrent.canEnableDisableAutoApproval(true));

            this.listPage().actionPaneControlEnabled(
                formcontrolstr(CatVendorCatalogListPage, DisableAutomatedApproval),
                catVendorCatalogCurrent.canEnableDisableAutoApproval(false));

            this.listPage().actionPaneControlEnabled(
                formcontrolstr(CatVendorCatalogListPage, ReleaseApprovedProducts),
                !catVendorCatalogCurrent.IsDeleted);

            // update the CatVendorReleaseCatalog table.
            CatVendorReleaseCatalog::updateCatalog(catVendorCatalogCurrent);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>