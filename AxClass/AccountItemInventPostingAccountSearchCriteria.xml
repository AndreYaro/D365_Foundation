<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccountItemInventPostingAccountSearchCriteria</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AccountItemInventPostingAccountSearchCriteria</c> class is responsible for populating the account related fields
/// in the <c>InventPostingSearchState</c>.
/// </summary>
class AccountItemInventPostingAccountSearchCriteria extends InventPostingSearchCriteria
{
    private InventPostingAccountItemLedgerDimensionParameters   searchParameters;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new (InventPostingAccountItemLedgerDimensionParameters _searchParameters)
    {
        searchParameters    = _searchParameters;
        this.buildSearchValuesList();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static AccountItemInventPostingAccountSearchCriteria construct(InventPostingAccountItemLedgerDimensionParameters _searchParameters)
    {
        return new AccountItemInventPostingAccountSearchCriteria(_searchParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSearchValuesList</Name>
				<Source><![CDATA[
    protected void buildSearchValuesList()
    {
        this.buildSearchValuesListForTableGroupAll();
    }

]]></Source>
			</Method>
			<Method>
				<Name>populateInventPostingSearchState</Name>
				<Source><![CDATA[
    public void populateInventPostingSearchState(anytype _searchValue)
    {
        InventPosting inventPosting = inventPostingSearchState.parmInventPosting();
        inventPosting.initFromPostingParameterBase(searchParameters);
        inventPosting.CustVendCode = _searchValue;
        inventPosting.CustVendRelation = InventPosting::accountRelation(_searchValue, searchParameters.AccountNum, searchParameters.AccountGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSearchCriteria</Name>
				<Source><![CDATA[
    public boolean mustSearchCriteria(anytype _searchValue)
    {
        InventCustVendRel accountRelation = InventPosting::accountRelation(_searchValue, searchParameters.AccountNum, searchParameters.AccountGroup);

        return inventPostingParameters.accountRelationEnabled(_searchValue) && this.accountRelationExists(_searchValue, accountRelation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountRelationExists</Name>
				<Source><![CDATA[
    private boolean accountRelationExists(
        TableGroupAll   _accountCode,
        CustVendRel     _accountRelation)
    {
        InventPosting   localInventPosting;
        container       cachedResult;
        boolean         result;

        if (_accountCode == TableGroupAll::All || _accountRelation == '')
        {
            // All always exists
            return true;
        }

        cachedResult = InventPostingSetupCache::getAccountRelationExists(_accountCode, _accountRelation);
        if (cachedResult == conNull())
        {
            select firstonly RecId from localInventPosting
                where localInventPosting.CustVendCode        == _accountCode
                      && localInventPosting.CustVendRelation == _accountRelation;

            result = (localInventPosting.RecId != 0);
            InventPostingSetupCache::insertAccountRelationExists(_accountCode, _accountRelation, result);
        }
        else
        {
            [result] = cachedResult;
        }

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>