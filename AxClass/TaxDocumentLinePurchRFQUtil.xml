<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxDocumentLinePurchRFQUtil</Name>
	<SourceCode>
		<Declaration><![CDATA[
class TaxDocumentLinePurchRFQUtil
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void markCurrentTaxDocumentTaxStatus(Common _common, TaxDocumentCalculationLevel _status)
    {
        TaxableDocumentDescriptor descriptor = TaxDocumentLinePurchRFQUtil::getDescriptor(_common);

        switch (_status)
        {
            case TaxDocumentCalculationLevel::Messy:
                TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatusMessy(descriptor);
                break;
            case TaxDocumentCalculationLevel::Dirty:
                TaxDocumentLinePurchRFQUtil::markCurrentTaxDocumentTaxStatusDirty(descriptor);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDescriptor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get TaxableDocumentDescriptor
    /// </summary>
    /// <param name = "_common">The <c>Common</c> object.</param>
    /// <returns>The <c>TaxableDocumentDescriptor</c> object.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static TaxableDocumentDescriptor getDescriptor(Common _common)
    {
        TaxableDocumentDescriptor descriptor;

        switch (_common.TableId)
        {
            case tableNum(PurchRFQTable):
                descriptor = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(_common);
                break;
            case tableNum(PurchRFQLine):
                descriptor = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(_common.purchRFQTable());
                break;
            case tableNum(PurchRFQLine):
                descriptor = TaxableDocumentDescriptorFactory::getTaxableDocumentDescriptor(_common.purchRFQReplyTable());
                break;
            default:
                break;
        }

        return descriptor;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatusMessy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status to messy
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void markCurrentTaxDocumentTaxStatusMessy(TaxableDocumentDescriptor _descriptor)
    {
        ITaxableDocument taxableDocument = TaxableDocumentObject::construct(_descriptor);

        if (taxableDocument && TaxBusinessService::getTaxDocumentTaxStatus(taxableDocument) == TaxDocumentCalculationLevel::Clean)
        {
            TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Messy);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>markCurrentTaxDocumentTaxStatusDirty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark current tax status to dirty
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void markCurrentTaxDocumentTaxStatusDirty(TaxableDocumentDescriptor _descriptor)
    {
        ITaxableDocument taxableDocument = TaxableDocumentObject::construct(_descriptor);
        TaxBusinessService::markTaxDocumentTaxStatus(taxableDocument, TaxDocumentCalculationLevel::Dirty);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>