<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EmplAdvReportSourceDocumentLineItem_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>EmplAdvReportSourceDocumentLineItem_RU</c> class provides the information to handle the
///    distributions and sub-ledger journal account entries for a Employee Advance Report Line.
/// </summary>
[SourceDocumentEnumExtensionAttribute(enumStr(SourceDocumentLine_EmplAdvReport_RU), SourceDocumentLine_EmplAdvReport_RU::EmplAdvReportLine)]
public class EmplAdvReportSourceDocumentLineItem_RU extends SourceDocumentLineItem
    implements SourceDocumentLineItemIDescription,
               SourceDocumentLineItemIEmpl_RU,
               SourceDocumentIDataProvider,
               SourceDocumentLineItemIProductQuantity
{
    EmplAdvLine_RU advLine;
    EmplAdvTable_RU advTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateLegalEntityRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns RecId field of Company info table for current company.
    /// </summary>
    /// <returns>
    /// Returns RecId field of Company info table for current company.
    /// </returns>
    protected LegalEntityRecId calculateLegalEntityRecId()
    {
        return CompanyInfo::current();
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateSourceDocumentAmountMap</Name>
				<Source><![CDATA[
    protected SourceDocumentAmountMap calculateSourceDocumentAmountMap()
    {
        SourceDocumentAmountMap sourceDocumentAmountMap = SourceDocumentAmountMap::construct();
        SourceDocumentAmount    sourceDocumentAmount;

        sourceDocumentAmount = SourceDocumentAmount::newFromParameters(this.parmSourceDocumentLine(),
                                    advLine.advTable().Status == EmplAdvStatus_RU::Rejected ? 0 : advLine.AmountCurExclTax,
                                    MonetaryAmount::ExtendedPrice,
                                    advLine.TaxIncluded);

        sourceDocumentAmountMap.insert(sourceDocumentAmount);

        return sourceDocumentAmountMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsBusinessEvent</Name>
				<Source><![CDATA[
    public BusinessEvent documentsBusinessEvent()
    {
        BusinessEvent       businessEvent;

        businessEvent = new BusinessEvent(enumNum(BusinessEvent_EmplAdvReport_RU), BusinessEvent_EmplAdvReport_RU::RegistrationOfAdvanceReport);

        return businessEvent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentsInterCompanyBusinessEvent</Name>
				<Source><![CDATA[
    public boolean documentsInterCompanyBusinessEvent()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasDimensionDerivationInputChanged</Name>
				<Source><![CDATA[
    /// <summary>
    ///    See ancestor ofr documentation
    /// </summary>
    /// <returns>
    ///   true or false
    /// </returns>
    public boolean hasDimensionDerivationInputChanged()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeExchangeRates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the exchange rates.
    /// </summary>
    protected void initializeExchangeRates()
    {
        super();

        if (!exchRate1 && this.parmTransactionExchangeRate())
        {
            exchRate1 = this.parmTransactionExchangeRate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeImplementation</Name>
				<Source><![CDATA[
    protected void initializeImplementation(SourceDocumentLineImplementation _sourceDocumentLineImplementation, Map _additionalInformation = null)
    {
        advLine = _sourceDocumentLineImplementation;
        advTable = advLine.advTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAccountingDate</Name>
				<Source><![CDATA[
    public AccountingDate parmAccountingDate()
    {
        return advTable.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBusinessEventDate</Name>
				<Source><![CDATA[
    public DocumentDate parmBusinessEventDate()
    {
        DocumentDate documentDate;

        documentDate = super();

        return documentDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension()
    {
        return advLine.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDescription</Name>
				<Source><![CDATA[
    public Description parmDescription()
    {
        return strFmt("@SYS53184", advLine.DocumentNum, strFmt("@GLS106646", advLine.DocumentName, advLine.Description));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDistributionTemplateRecId</Name>
				<Source><![CDATA[
    public AccountingDistributionTemplateRecId parmDistributionTemplateRecId()
    {
        return advLine.DistributionTemplate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmplAdvLine</Name>
				<Source><![CDATA[
    public EmplAdvLine_RU parmEmplAdvLine()
    {
        return advLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmplId</Name>
				<Source><![CDATA[
    public EmployeeId_RU parmEmplId()
    {
        return advTable.EmplAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerDimensionDefaultAccount</Name>
				<Source><![CDATA[
    public LedgerDimensionDefaultAccount parmLedgerDimensionDefaultAccount(LegalEntityRecId _legalEntityRecId = this.parmLegalEntityRecId())
    {
        return advLine.LedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    public LineNum parmLineNum()
    {
        return advLine.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantity</Name>
				<Source><![CDATA[
    public Qty parmQuantity()
    {
        return advLine.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuantityDecimalPlaces</Name>
				<Source><![CDATA[
    public Decimals parmQuantityDecimalPlaces()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCurrencyCode</Name>
				<Source><![CDATA[
    public CurrencyCode parmTransactionCurrencyCode()
    {
        return advLine.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionExchangeRate</Name>
				<Source><![CDATA[
    public ExchRate parmTransactionExchangeRate()
    {
        return advLine.ExchRate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>