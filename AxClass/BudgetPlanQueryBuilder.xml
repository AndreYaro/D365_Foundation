<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetPlanQueryBuilder</c> provides support for filtering budget planning queries.
/// </summary>
public class BudgetPlanQueryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addBudgetingOrganizationLookupRanges</Name>
				<Source><![CDATA[
    /// <summary>
    /// Applies ranges to budget planning lookup queries.
    /// </summary>
    /// <param name="_query">
    /// The query that will have ranges applied to.
    /// </param>
    /// <param name="_planningProcessRecId">
    /// The record ID of the <c>BudgetPlanningProcess</c> record.
    /// </param>
    /// <param name="_filterOrganizationRecId">
    /// The record ID of the <c>OMInternalOrganization</c> record; optional.
    /// </param>
    /// <param name="_hcmWorkerRecId">
    /// The record ID of the <c>HcmWorker</c> record; optional.
    /// </param>
    /// <param name="_userid">
    /// The UserId of the <c>UserInfo</c> record; optional.
    /// </param>
    /// <param name="_parentOrganizationRecId">
    /// The record ID of the parent <c>OMInternalOrganization</c> record; optional.
    /// </param>
    /// <remarks>
    /// This method is used to apply filters to known datasources in a query.
    /// </remarks>
    /// <exception cref="Exception::Error">
    /// The required parameters are null.
    /// </exception>
    public static void addBudgetingOrganizationLookupRanges(
        Query                       _query,
        BudgetPlanningProcessRecId  _planningProcessRecId,
        BudgetingOrganizationRecId  _filterOrganizationRecId = 0,
        HCMWorkerRecId              _hcmWorkerRecId = HcmWorkerLookup::currentWorker(),
        UserId                      _userid = curUserId(),
        BudgetingOrganizationRecId  _parentOrganizationRecId = 0)
    {
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryRange;
        int                     dataSourceCount;
        int                     dataSourceIndex;

        if (!_planningProcessRecId || !_query)
        {
            throw error(Error::missingParameter(null));
        }

        dataSourceCount = _query.dataSourceCount();
        for (dataSourceIndex = 1; dataSourceIndex <= dataSourceCount ; dataSourceIndex++)
        {
            queryBuildDataSource = _query.dataSourceNo(dataSourceIndex);

            switch (queryBuildDataSource.table())
            {
                case tableNum(OMInternalOrganization):
                    if (_filterOrganizationRecId)
                    {
                        queryRange = queryBuildDataSource.addRange(fieldNum(OMInternalOrganization, RecId));
                        queryRange.value(SysQuery::value(_filterOrganizationRecId));
                    }
                    break;

                case tableNum(BudgetPlanningProcessAdministration):
                    queryRange = queryBuildDataSource.addRange(fieldNum(BudgetPlanningProcessAdministration, BudgetPlanningProcess));
                    queryRange.value(SysQuery::value(_planningProcessRecId));

                    if (_filterOrganizationRecId)
                    {
                        queryRange = queryBuildDataSource.addRange(fieldNum(BudgetPlanningProcessAdministration, BudgetingOrganization));
                        queryRange.value(SysQuery::value(_filterOrganizationRecId));
                    }
                    break;

                case tableNum(BudgetPlanningProcess):
                    queryRange = queryBuildDataSource.addRange(fieldNum(BudgetPlanningProcess, RecId));
                    queryRange.value(SysQuery::value(_planningProcessRecId));
                    break;

                case tableNum(HcmPositionWorkerAssignment):
                    if (_hcmWorkerRecId && !prmisDefault(_hcmWorkerRecId))
                    {
                        queryRange = queryBuildDataSource.findRange(fieldNum(HcmPositionWorkerAssignment, Worker));
                        if (queryRange)
                        {
                            queryRange.value(SysQuery::value(_hcmWorkerRecId));
                        }
                    }
                    break;

                case tableNum(OMUserRoleOrganization):
                    if (!prmisDefault(_userid))
                    {
                        queryRange = queryBuildDataSource.findRange(fieldNum(OMUserRoleOrganization, User));
                        if (queryRange)
                        {
                            queryRange.value(SysQuery::value(_userid));
                        }
                    }
                    break;

                case tableNum(OMExplodedOrganizationSecurityGraph):
                    if (_parentOrganizationRecId)
                    {
                        queryRange = queryBuildDataSource.findRange(fieldNum(OMExplodedOrganizationSecurityGraph, AncestorOrganization));
                        if (queryRange)
                        {
                            queryRange.value(SysQuery::value(_parentOrganizationRecId));
                        }
                    }
                    break;

                default:
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>