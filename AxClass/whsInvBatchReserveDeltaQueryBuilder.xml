<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>whsInvBatchReserveDeltaQueryBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSInvBatchReserveDeltaQueryBuilder</c> class is used to build a<c>Query</c> sorted by batch values for selecting quantities and dimensions for reservation from the <c>WHSInventReserveDeltaAggrReserveView</c> view.
/// </summary>
class whsInvBatchReserveDeltaQueryBuilder extends WHSInventReserveDeltaQueryBuilder
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>buildOnHandQuery</Name>
				<Source><![CDATA[
    public Query buildOnHandQuery()
    {
        QueryBuildDataSource qbdsWHSInventReserveDeltaAggrReserveView;
        QueryBuildDataSource qbdsInventBatch;
        QueryBuildDataSource qbdsInventDim;

        this.initQuery();

        qbdsInventBatch = query.addDataSource(tableNum(InventBatch));
        qbdsInventBatch.addRange(fieldNum(InventBatch, ItemId)).value(queryValue(itemId));

        qbdsWHSInventReserveDeltaAggrReserveView = this.addWHSInventReserveDeltaAggrReserveView(qbdsInventBatch);
        qbdsWHSInventReserveDeltaAggrReserveView.addLink(fieldNum(InventBatch, ItemId), fieldNum(WHSInventReserveDeltaAggrReserveView, ItemId), qbdsInventBatch.name());

        //add ordering on batch
        this.addBatchOrderByFields(qbdsInventBatch);

        if (WHSReservationHierarchyElementPolicyProvider::singleton().isFlexibleReservationEnabledForItem(ItemId))
        {
            this.addShelfLifeCriteriaRanges(qbdsInventBatch);
        }

        qbdsInventDim = this.addInventDimDS(qbdsWHSInventReserveDeltaAggrReserveView);
        qbdsInventDim.addLink(fieldNum(InventBatch, InventBatchId),fieldNum(InventDim,InventBatchId), qbdsInventBatch.name());

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static WHSInvBatchReserveDeltaQueryBuilder construct()
    {
        return new WHSInvBatchReserveDeltaQueryBuilder();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance with given parameters.
    /// </summary>
    /// <param name="_itemId">
    /// Item id of the instance.
    /// </param>
    /// <param name="_inventDimCriteria">
    /// InventDim criteria to be set to the instance.
    /// </param>
    /// <param name="_inventDimParmCriteria">
    /// InventDimParm criteria to be set to the instance.
    /// </param>
    /// <param name="_reservationHierarchyLevel">
    /// Reservation hierarchy level to be set to instance.
    /// </param>
    /// <param name="_ttsId">
    /// Created transaction id to be set to instance.
    /// </param>
    /// <param name="_includeOrdered">
    /// Boolean indicates to include ordered quantity in the query.
    /// </param>
    /// <param name="_includePhysical">
    /// Boolean indicates to include physical quantity in the query.
    /// </param>
    /// <param name="_minAvailQty">
    /// Minimum available quantity to be set to instance.
    /// </param>
    /// <param name="_onlyReserveOnWHSEnabledWarehouses">
    /// Whether to allow reservation on non-WHS enabled warehouses.
    /// </param>
    /// <returns>
    /// The created <c>WHSInvBatchReserveDeltaQueryBuilder</c> instance.
    /// </returns>
    public static WHSInvBatchReserveDeltaQueryBuilder newFromParameters(
        ItemId                          _itemId,
        InventDim                       _inventDimCriteria,
        InventDimParm                   _inventDimParmCriteria,
        WHSReservationHierarchyLevel    _reservationHierarchyLevel,
        CreatedTransactionId            _ttsId,
        boolean                         _includeOrdered,
        boolean                         _includePhysical,
        InventQty                       _minAvailQty,
        boolean                         _onlyReserveOnWHSEnabledWarehouses = false
        )
    {
        WHSInvBatchReserveDeltaQueryBuilder whsInvBatchReserveDeltaQueryBuilder = WHSInvBatchReserveDeltaQueryBuilder::construct();

        whsInvBatchReserveDeltaQueryBuilder.initializeFromParameters(
            _itemId,
            _inventDimCriteria,
            _inventDimParmCriteria,
            _reservationHierarchyLevel,
            _ttsId,
            _includeOrdered,
            _includePhysical,
            _onlyReserveOnWHSEnabledWarehouses);

        whsInvBatchReserveDeltaQueryBuilder.parmMinAvailQty(_minAvailQty);

        return whsInvBatchReserveDeltaQueryBuilder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addOnOrAfterDateRange</Name>
				<Source><![CDATA[
    private void addOnOrAfterDateRange(QueryBuildDataSource _dsInventBatch, FieldId _fieldId, date _upperLimitDate)
    {
        FieldName fieldName = fieldId2name(tableNum(InventBatch), _fieldId);
        str expiryFilter = strFmt('(%1.%2 >= %3)', _dsInventBatch.name(), fieldName, date2StrXpp(_upperLimitDate));

        _dsInventBatch.addRange(_fieldId).value(expiryFilter);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addShelfLifeCriteriaRanges</Name>
				<Source><![CDATA[
    private void addShelfLifeCriteriaRanges(QueryBuildDataSource _dsInventBatch)
    {
        WHSInventBatchReservationPolicy policy = WHSInventReserveExpiredBatchContext::getBatchReservationPolicy();
        
        if (policy)
        {
            InventBatchExpDate minAllowedExpiryDate = policy.parmMinAllowedExpiryDate();
            PdsBestBeforeDate minAllowedBestBeforeDate = policy.parmMinAllowedBestBeforeDate();

            if (minAllowedExpiryDate)
            {
                this.addOnOrAfterDateRange(_dsInventBatch, fieldNum(InventBatch, ExpDate), minAllowedExpiryDate);
            }
            else if (minAllowedBestBeforeDate)
            {
                this.addOnOrAfterDateRange(_dsInventBatch, fieldNum(InventBatch, PdsBestBeforeDate), minAllowedBestBeforeDate);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>