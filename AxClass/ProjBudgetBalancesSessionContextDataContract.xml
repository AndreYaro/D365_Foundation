<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjBudgetBalancesSessionContextDataContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
class ProjBudgetBalancesSessionContextDataContract extends HierarchicalGridSessionContext
{
    str                                 ProjBudgetBalancesContextId;
    ProjBudgetBalanceInterval           ProjBudgetBalanceInterval;
    ProjBudgetBalancesGroupByOptions    groupBy;
    ProjId                              projId;
    boolean                             includeSubProjects;
    FromDate                            fromDate;
    ToDate                              toDate;

    TmpProjBudgetBalances               tmpProjBudgetBalances;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjBudgetBalancesSessionContextDataContract construct()
    {
        return new ProjBudgetBalancesSessionContextDataContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjBudgetBalances</Name>
				<Source><![CDATA[
    public tmpProjBudgetBalances parmProjBudgetBalances(TmpProjBudgetBalances _tmpProjBudgetBalances = tmpProjBudgetBalances)
    {
        tmpProjBudgetBalances = _tmpProjBudgetBalances;
        return tmpProjBudgetBalances;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjBudgetBalancesContextId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ProjBudgetBalancesContextId")]
    public str parmProjBudgetBalancesContextId(str _ProjBudgetBalancesContextId = ProjBudgetBalancesContextId)
    {
        if (!prmIsDefault(_ProjBudgetBalancesContextId))
        {
            ProjBudgetBalancesContextId = _ProjBudgetBalancesContextId;
        }

        return _ProjBudgetBalancesContextId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjBudgetBalanceInterval</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ProjBudgetBalanceInterval")]
    public ProjBudgetBalanceInterval parmProjBudgetBalanceInterval(ProjBudgetBalanceInterval _ProjBudgetBalanceInterval = ProjBudgetBalanceInterval)
    {
        if (!prmIsDefault(_ProjBudgetBalanceInterval))
        {
            ProjBudgetBalanceInterval = _ProjBudgetBalanceInterval;
        }

        return ProjBudgetBalanceInterval;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupBy</Name>
				<Source><![CDATA[
    [DataMemberAttribute("GroupBy")]
    public ProjBudgetBalancesGroupByOptions parmGroupBy(ProjBudgetBalancesGroupByOptions _groupBy = groupBy)
    {
        if (!prmIsDefault(_groupBy))
        {
            groupBy = _groupBy;
        }

        return groupBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ProjId")]
    public ProjId parmProjId(ProjId _projId = projId)
    {
        if (!prmIsDefault(_projId))
        {
            projId = _projId;
        }

        return projId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIncludeSubProjects</Name>
				<Source><![CDATA[
    [DataMemberAttribute("IncludeSubProjects")]
    public boolean parmIncludeSubProjects(boolean _includeSubProjects = includeSubProjects)
    {
        if (!prmIsDefault(_includeSubProjects))
        {
            includeSubProjects = _includeSubProjects;
        }

        return includeSubProjects;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("FromDate")]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        if (!prmIsDefault(_fromDate))
        {
            fromDate = _fromDate;
        }

        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute("ToDate")]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        if (!prmIsDefault(_toDate))
        {
            toDate = _toDate;
        }

        return toDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>