<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HRPLimitWorkflowEventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>HRPLimitWorkflowEventHandler</c> class occurs when the workflow event starts.
/// </summary>
public class HRPLimitWorkflowEventHandler implements
    WorkflowStartedEventHandler,
    WorkflowCanceledEventHandler,
    WorkflowCompletedEventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canceled</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Cancels the workflow submission.
    /// </summary>
    /// <param name="_workflowEventArgs">
    ///    A <c>WorkflowEventArgs</c> instance.
    /// </param>
    /// <remarks>
    ///    Sets the <c>RequestState</c> field on the <c>HRPLimitRequest</c> table to the <c>Draft</c> status
    ///    and the <c>SigningLimitWorkflowStatus</c> field is set to the <c>PendingCancellation</c> status.
    /// </remarks>
    public void canceled(WorkflowEventArgs _workflowEventArgs)
    {
        HRPLimitRequest::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), HRPLimitWorkflowState::PendingCancellation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>completed</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Occurs after the workflow is completed.
    /// </summary>
    /// <param name="_workflowEventArgs">
    ///    A <c>WorkflowEventArgs</c> instance.
    /// </param>
    /// <remarks>
    ///    The <c>RequestState</c> field on the <c>HRPLimitRequest</c> table is set to the
    ///    <c>RequestApproved</c> status and the <c>SigningLimitWorkflowStatus</c> field is set to the
    ///    <c>Completed</c> status.
    /// </remarks>
    public void completed(WorkflowEventArgs _workflowEventArgs)
    {
        HRPLimitRequest::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), HRPLimitWorkflowState::Completed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>started</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Handles starting the workflow.
    /// </summary>
    /// <param name="_workflowEventArgs">
    ///    A <c>WorkflowEventArgs</c> object.
    /// </param>
    /// <remarks>
    ///    This method is called from workflow framework when the workflow is started.The <c>RequestState</c>
    ///    field on the <c>HRPLimitRequest</c> table is set to <c>RequestSubmitted</c> enumeration value and
    ///    the <c>SigningLimitWorkflowStatus</c> field is set to <c>Submitted</c> enumeration value.
    /// </remarks>
    public void started(WorkflowEventArgs _workflowEventArgs)
    {
        HRPLimitRequest::setWorkflowState(_workflowEventArgs.parmWorkflowContext().parmRecId(), HRPLimitWorkflowState::Submitted);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Main</Name>
				<Source><![CDATA[
    static void Main()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>