<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailDeploymentSetupAsync</Name>
	<SourceCode>
		<Declaration><![CDATA[
using AppLogging = Microsoft.Dynamics.Application.Instrumentation.ApplicationEventSource;
using Microsoft.Dynamics.ApplicationPlatform.Environment;
using Microsoft.Dynamics.Commerce.Deployment.Headquarters;

/// <summary>
/// The <c>RetailDeploymentSetupAsync</c> class which enables retail deployment configuration changes in a batch job, immediately after AOS install.
/// </summary>
[SysSetupTableAttribute(tableStr(CreditCardAccountSetup))]
[SysSetupConfigAttribute(true, 600, 0.0)]
public final class RetailDeploymentSetupAsync extends SysSetupAsync implements SysSetup
{
    private str identityProvider;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>loadData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the seed data post AOS deployment.
    /// </summary>
    public void loadData()
    {
        identityProvider = RetailDeploymentUtility::GetAadAuthorityPrefix();
        str aadTenantId = RetailDeploymentUtility::GetAadTenantId();

        if (RetailDeploymentUtility::shouldSetupDataForTestEnvironment(identityProvider, aadTenantId))
        {
            this.setupPaymentsTestData();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupPaymentsTestData</Name>
				<Source><![CDATA[
    private void setupPaymentsTestData()
    {
        int fromLine;
        
        try
        {
            AppLogging::EventWriteRetailDeploymentSetupInformation('Running RetailSecurityUpdate7 for payments...');
            fromLine = Global::infologLine();
            RetailSecurityUpdate7::main();
            AppLogging::EventWriteRetailDeploymentSetupInformation('Running RetailSecurityUpdate7 for payments completed.');
        }
        catch (Exception::CLRError)
        {
            System.Exception clrException = RetailUtilities::getLatestClrException();
            AppLogging::EventWriteRetailDeploymentSetupWarning(strFmt('CLR Exception thrown when trying to run RetailSecurityUpdate7 for payments. Message: %1 Stack Trace: %2', clrException.Message, clrException.StackTrace));
        }
        catch (Exception::Error)
        {
            str exceptionMessage = RetailTransactionServiceUtilities::getInfologMessages(fromLine);
            AppLogging::EventWriteRetailDeploymentSetupWarning(strFmt('X++ Exception thrown when trying to RetailSecurityUpdate7 for payments. Message: %1', exceptionMessage));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>