<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxSalesTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
class AxSalesTable extends AxApplicationBase implements AxInventSiteDimensionable
{
    SalesTable                      salesTable;

    int                             custAccount_CustTableIdx;
    int                             invoiceAccount_CustTableIdx;
    int                             projTableIdx;
    int                             salesParametersIdx;
    int                             custParametersIdx;
    int                             paymTermIdx;
    int                             contactPersonIdx;
    int                             salesTotalsIdx;

    int                             axLogisticsLocationIdx;
    int                             axDeliveryLocationIdx;
    int                             agreementHeaderDefaultIdx;
    int                             salesAgreementHeaderDefaultIdx;
    int                             shipCarrierAddressIdx;
    InventSiteDimensionLink         inventSiteDimensionLink;
    boolean                         skipSalesIdValidation;
    private int axSalesTableIdx_RU;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>agreementHeaderDefaultRecord</Name>
				<Source><![CDATA[
    public AgreementHeaderDefault agreementHeaderDefaultRecord(AgreementHeaderDefault _salesAagreementHeader = null)
    {
        AgreementHeaderDefault    agreementHeaderDefault;

        if (!agreementHeaderDefaultIdx)
        {
            agreementHeaderDefaultIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_salesAagreementHeader))
        {
            this.tableCacheInsert(agreementHeaderDefaultIdx, _salesAagreementHeader);
            agreementHeaderDefault = _salesAagreementHeader;
        }
        else
        {
            if (this.tableCacheExist(agreementHeaderDefaultIdx))
            {
                agreementHeaderDefault = this.tableCacheLookup(agreementHeaderDefaultIdx);
            }
            else
            {
                if (salesTable.MatchingAgreement)
                {
                    agreementHeaderDefault = AgreementHeader::find(salesTable.MatchingAgreement).agreementHeaderDefault();
                    this.tableCacheInsert(agreementHeaderDefaultIdx, agreementHeaderDefault);
                }
            }
        }

        return agreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axDeliveryLocation</Name>
				<Source><![CDATA[
    public AxLogisticsLocation  axDeliveryLocation(AxLogisticsLocation  _axDeliveryLocation = null)
    {
        AxLogisticsLocation  axDeliveryLocation;

        if (! axDeliveryLocationIdx)
        {
            axDeliveryLocationIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axDeliveryLocation))
        {
            this.classCacheInsert(axDeliveryLocationIdx, _axDeliveryLocation);
            axDeliveryLocation = _axDeliveryLocation;
        }
        else
        {
            if (this.classCacheExist(axDeliveryLocationIdx))
            {
                axDeliveryLocation = this.classCacheLookup(axDeliveryLocationIdx);
            }
            else
            {
                axDeliveryLocation = AxLogisticsLocation::newLogisticsLocation(LogisticsLocationEntity::findLocation(this.custAccount_CustTableRecord(), LogisticsLocationRoleType::Delivery).getLogisticsLocation());

                this.classCacheInsert(axDeliveryLocationIdx, axDeliveryLocation);
            }
        }

        return axDeliveryLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axLogisticsLocation</Name>
				<Source><![CDATA[
    public AxLogisticsLocation  axLogisticsLocation(AxLogisticsLocation  _axLogisticsLocation = null)
    {
        AxLogisticsLocation     axLogisticsLocation;
        LogisticsPostalAddress  logisticsPostalAddress;

        if (! axLogisticsLocationIdx)
        {
            axLogisticsLocationIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_axLogisticsLocation))
        {
            this.classCacheInsert(axLogisticsLocationIdx, _axLogisticsLocation);
            axLogisticsLocation = _axLogisticsLocation;
        }
        else
        {
            if (this.classCacheExist(axLogisticsLocationIdx))
            {
                axLogisticsLocation = this.classCacheLookup(axLogisticsLocationIdx);
            }
            else
            {
                this.setDeliveryPostalAddress();
                logisticsPostalAddress = LogisticsPostalAddress::findRecId(this.parmDeliveryPostalAddress());

                if (logisticsPostalAddress.RecId)
                {
                    axLogisticsLocation = AxLogisticsLocation::newLogisticsLocation(LogisticsLocation::find(logisticsPostalAddress.Location));
                }
                this.classCacheInsert(axLogisticsLocationIdx, axLogisticsLocation);
            }
        }

        return axLogisticsLocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>axSalesTable_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the a instance of related <C>AxSalesTable_RU</C>.
    /// </summary>
    /// <param name="_axSalesTable_RU">
    /// A instance of <C>AxSalesTable_RU</C>. Optional.
    /// </param>
    /// <returns>
    /// A instance of <C>AxSalesTable_RU</C>.
    /// </returns>
    public AxSalesTable_RU axSalesTable_RU(AxSalesTable_RU _axSalesTable_RU = null)
    {
        AxSalesTable_RU     axSalesTable_RU;
        SalesTable_RU       salesTable_RU;

        if (!axSalesTableIdx_RU)
        {
            axSalesTableIdx_RU = this.nextCacheIdx();
        }

        if (!prmisDefault(_axSalesTable_RU))
        {
            axSalesTable_RU = _axSalesTable_RU;

            this.classCacheInsert(axSalesTableIdx_RU, axSalesTable_RU);
            axSalesTable_RU.parentAxBC(this);
        }
        else
        {
            if (this.classCacheExist(axSalesTableIdx_RU))
            {
                axSalesTable_RU = this.classCacheLookup(axSalesTableIdx_RU);
            }
            else
            {
                salesTable_RU.selectForUpdate(true);
                salesTable_RU.data(salesTable.salesTable_RU());

                axSalesTable_RU = AxSalesTable_RU::newSalesTable_RU(salesTable_RU);

                this.classCacheInsert(axSalesTableIdx_RU, axSalesTable_RU);
                axSalesTable_RU.parentAxBC(this);
            }
        }

        return axSalesTable_RU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>contactPersonRecord</Name>
				<Source><![CDATA[
    public ContactPerson contactPersonRecord(ContactPerson _contactPerson = null)
    {
        ContactPerson    contactPerson;

        if (!contactPersonIdx)
        {
            contactPersonIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_contactPerson))
        {
            this.tableCacheInsert(contactPersonIdx, _contactPerson);
            contactPerson = _contactPerson;
        }
        else
        {
            if (this.tableCacheExist(contactPersonIdx))
            {
                contactPerson = this.tableCacheLookup(contactPersonIdx);
            }
            else
            {
                this.setContactPersonId();
                contactPerson = ContactPerson::find(this.parmContactPersonId());
                this.tableCacheInsert(contactPersonIdx, contactPerson);
            }
        }

        return contactPerson;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    public Common currentRecord(Common _salesTable = salesTable)
    {
        if (!prmisDefault(_salesTable))
        {
            super(_salesTable);
            salesTable = _salesTable as SalesTable;
        }
        else
        {
            super();
        }

        return salesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custAccount_CustTableRecord</Name>
				<Source><![CDATA[
    public CustTable custAccount_CustTableRecord(CustTable _custTable = null)
    {
        CustTable   custTable;

        if (!custAccount_CustTableIdx)
        {
            custAccount_CustTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_custTable))
        {
            this.tableCacheInsert(custAccount_CustTableIdx, _custTable);
            custTable = _custTable;
        }
        else
        {
            if (this.tableCacheExist(custAccount_CustTableIdx))
            {
                custTable = this.tableCacheLookup(custAccount_CustTableIdx);
            }
            else
            {
                this.setCustAccount();
                custTable = CustTable::find(this.parmCustAccount());
                this.tableCacheInsert(custAccount_CustTableIdx, custTable);
            }
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets an empty <c>SalesTable</c> record.
    /// </summary>
    /// <returns>
    /// An empty <c>SalesTable</c> record.
    /// </returns>
    protected Common emptyRecord()
    {
        SalesTable localSalesTable;
        return localSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMandatoryFieldsExemptionList</Name>
				<Source><![CDATA[
    protected void initMandatoryFieldsExemptionList()
    {
        super();
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmCurrencyCode));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmCustAccount));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmCustGroup));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmInvoiceAccount));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmLanguageId));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmSalesId));
        this.setParmMethodAsNotMandatory(methodStr(AxSalesTable,parmShippingDateRequested));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteDimensionLink</Name>
				<Source><![CDATA[
    protected InventSiteDimensionLink inventSiteDimensionLink()
    {
        return InventSiteDimensionLink::newDimensionTables(this.salesTable(), this.salesTable());
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceAccount_CustTableRecord</Name>
				<Source><![CDATA[
    public CustTable invoiceAccount_CustTableRecord(CustTable _custTable = null)
    {
        CustTable   custTable;

        if (!invoiceAccount_CustTableIdx)
        {
            invoiceAccount_CustTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_custTable))
        {
            this.tableCacheInsert(invoiceAccount_CustTableIdx, _custTable);
            custTable = _custTable;
        }
        else
        {
            if (this.tableCacheExist(invoiceAccount_CustTableIdx))
            {
                custTable = this.tableCacheLookup(invoiceAccount_CustTableIdx);
            }
            else
            {
                this.setInvoiceAccount();
                custTable = CustTable::find(this.parmInvoiceAccount());
                this.tableCacheInsert(invoiceAccount_CustTableIdx, custTable);
            }
        }

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStorageDimFieldSet</Name>
				<Source><![CDATA[
    public boolean isStorageDimFieldSet(FieldId _fieldId)
    {
        return this.isFieldSet(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mcrSkipSalesIdValidation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>MCRSkipSalesIdValidation</c> flag.  This flag is queried in
    /// the <c>setSalesId</c> method.  When set, it allows the <c>SalesId</c> field to be set
    /// explicitly by calling <c>parmSalesId</c>, instead of having it defaulted in
    /// by the system using a number sequence.
    /// </summary>
    /// <param name="_skipSalesIdValidation">
    /// <c>MCRSkipSalesIdValidation</c> falg to set the class variable.
    /// </param>
    /// <returns>
    /// The <c>MCRSkipSalesIdValidation</c> value.
    /// </returns>
    public boolean mcrSkipSalesIdValidation(boolean _skipSalesIdValidation = skipSalesIdValidation)
    {
        skipSalesIdValidation = _skipSalesIdValidation;
        return skipSalesIdValidation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>moveAxSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Copies values to a different <c>AxSalesTable</c> object.
    /// </summary>
    /// <param name="_axSalesTable">
    ///    The <c>AxSalesTable</c> object from which to copy.
    /// </param>
    /// <remarks>
    ///    This method copies values from one <c>AxSalesTable</c> object to another. It is typically used to
    ///    copy values from an <c>AxSalesTable</c> object to an <c>AxSalesTable</c> object derivative.
    /// </remarks>
    public void moveAxSalesTable(AxSalesTable _axSalesTable)
    {
        MapIterator     fieldTouchedIterator;

        fieldTouchedIterator = new MapIterator(fieldTouched);
        fieldTouchedIterator.begin();
        while (fieldTouchedIterator.more())
        {
            _axSalesTable.fieldId(fieldTouchedIterator.domainValue(), this.salesTable().(fieldTouchedIterator.domainValue()));
            fieldTouchedIterator.next();
        }

        if (this.mapPolicy())
        {
            _axSalesTable.mapPolicy(this.mapPolicy());
        }
        _axSalesTable.xmlDocDirection(this.xmlDocDirection());
        if (this.parentAxBC())
        {
            _axSalesTable.parentAxBC(this.parentAxBC());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefRecId</Name>
				<Source><![CDATA[
    public AddressRefRecId parmAddressRefRecId(AddressRefRecId _addressRefRecId = 0)
    {
        if (!prmisDefault(_addressRefRecId))
        {
            this.setField(fieldNum(SalesTable, AddressRefRecId), _addressRefRecId);
        }

        return salesTable.AddressRefRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAddressRefTableId</Name>
				<Source><![CDATA[
    public AddressRefTableId parmAddressRefTableId(AddressRefTableId _addressRefTableId = 0)
    {
        if (!prmisDefault(_addressRefTableId))
        {
            this.setField(fieldNum(SalesTable, AddressRefTableId), _addressRefTableId);
        }

        return salesTable.AddressRefTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAutoSummaryModuleType</Name>
				<Source><![CDATA[
    public ModuleCustSales parmAutoSummaryModuleType(ModuleCustSales _autoSummaryModuleType = ModuleCustSales::Cust)
    {
        if (!prmisDefault(_autoSummaryModuleType))
        {
            this.setField(fieldNum(SalesTable, AutoSummaryModuleType), _autoSummaryModuleType);
        }

        return salesTable.AutoSummaryModuleType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankAccount_LV</Name>
				<Source><![CDATA[
    public CompanyBankAccountId parmBankAccount_LV(CompanyBankAccountId _bankAccount_LV = '')
    {
        if (!prmisDefault(_bankAccount_LV))
        {
            this.setField(fieldNum(SalesTable, BankAccount_LV), _bankAccount_LV);
        }

        return salesTable.BankAccount_LV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankCentralBankPurposeCode</Name>
				<Source><![CDATA[
public BankCentralBankPurposeCode parmBankCentralBankPurposeCode(BankCentralBankPurposeCode _bankCentralBankPurposeCode = '')
    {
        if (!prmisDefault(_bankCentralBankPurposeCode))
        {
            this.setField(fieldNum(SalesTable, BankCentralBankPurposeCode), _bankCentralBankPurposeCode);
        }

        return salesTable.BankCentralBankPurposeCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankCentralBankPurposeText</Name>
				<Source><![CDATA[
    public BankCentralBankPurposeText parmBankCentralBankPurposeText(BankCentralBankPurposeText _bankCentralBankPurposeText = '')
    {
        if (!prmisDefault(_bankCentralBankPurposeText))
        {
            this.setField(fieldNum(SalesTable, BankCentralBankPurposeText), _bankCentralBankPurposeText);
        }

        return salesTable.BankCentralBankPurposeText;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBankDocumentType</Name>
				<Source><![CDATA[
    public BankDocumentType parmBankDocumentType(BankDocumentType _bankDocumentType = BankDocumentType::None)
    {
        if (!prmisDefault(_bankDocumentType))
        {
            this.setField(fieldNum(SalesTable, BankDocumentType), _bankDocumentType);
        }

        return salesTable.BankDocumentType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDisc</Name>
				<Source><![CDATA[
    public CustCashDiscCode parmCashDisc(CustCashDiscCode _cashDisc = '')
    {
        if (!prmisDefault(_cashDisc))
        {
            this.setField(fieldNum(SalesTable, CashDisc), _cashDisc);
        }

        return salesTable.CashDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscBaseDate</Name>
				<Source><![CDATA[
    public CashDiscBaseDate parmCashDiscBaseDate(CashDiscBaseDate _cashDiscBaseDate = dateNull())
    {
        if (!prmisDefault(_cashDiscBaseDate))
        {
            this.setField(fieldNum(SalesTable, CashDiscBaseDate), _cashDiscBaseDate);
        }

        return salesTable.CashDiscBaseDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCashDiscPercent</Name>
				<Source><![CDATA[
    public DiscPct parmCashDiscPercent(DiscPct _cashDiscPercent = 0)
    {
        if (!prmisDefault(_cashDiscPercent))
        {
            this.setField(fieldNum(SalesTable, CashDiscPercent), _cashDiscPercent);
        }

        return salesTable.CashDiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCommissionGroup</Name>
				<Source><![CDATA[
    public CommissCustomerGroup parmCommissionGroup(CommissCustomerGroup _commissionGroup = '')
    {
        if (!prmisDefault(_commissionGroup))
        {
            this.setField(fieldNum(SalesTable, CommissionGroup), _commissionGroup);
        }

        return salesTable.CommissionGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConsTarget_JP</Name>
				<Source><![CDATA[
    public CustConsTarget_JP parmConsTarget_JP(CustConsTarget_JP _consTarget_JP = NoYes::No)
    {
        if (!prmisDefault(_consTarget_JP))
        {
            this.setField(fieldNum(SalesTable, ConsTarget_JP), _consTarget_JP);
        }

        return salesTable.ConsTarget_JP;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmContactPersonId</Name>
				<Source><![CDATA[
public ContactPersonId parmContactPersonId(ContactPersonId _contactPersonId = '')
    {
        if (!prmisDefault(_contactPersonId))
        {
            this.setField(fieldNum(SalesTable, ContactPersonId), _contactPersonId);
        }

        return salesTable.ContactPersonId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCountyOrigDest</Name>
				<Source><![CDATA[
    public AddressCountyOrigDest parmCountyOrigDest(AddressCountyOrigDest   _countyOrigDest = '')
    {
        if (!prmisDefault(_countyOrigDest))
        {
            this.setField(fieldNum(SalesTable, CountyOrigDest), _countyOrigDest);
        }

        return salesTable.CountyOrigDest;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCovStatus</Name>
				<Source><![CDATA[
    public CovStatus parmCovStatus(CovStatus _covStatus = 0)
    {
        if (!prmisDefault(_covStatus))
        {
            this.setField(fieldNum(SalesTable, CovStatus), _covStatus);
        }

        return salesTable.CovStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditCardApprovalAmount</Name>
				<Source><![CDATA[
    public AmountMST parmCreditCardApprovalAmount(AmountMST _creditCardApprovalAmount = 0)
    {
        if (!prmisDefault(_creditCardApprovalAmount))
        {
            this.setField(fieldNum(SalesTable, CreditCardApprovalAmount), _creditCardApprovalAmount);
        }

        return salesTable.CreditCardApprovalAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditCardAuthorization</Name>
				<Source><![CDATA[
    public CreditCardAuthorization parmCreditCardAuthorization(CreditCardAuthorization _creditCardAuthorization = '')
    {
        if (!prmisDefault(_creditCardAuthorization))
        {
            this.setField(fieldNum(SalesTable, CreditCardAuthorization), _creditCardAuthorization);
        }

        return salesTable.CreditCardAuthorization;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditCardAuthorizationError</Name>
				<Source><![CDATA[
    public NoYes parmCreditCardAuthorizationError(NoYes _creditCardAuthorizationError = NoYes::No)
    {
        if (!prmisDefault(_creditCardAuthorizationError))
        {
            this.setField(fieldNum(SalesTable, CreditCardAuthorizationError), _creditCardAuthorizationError);
        }

        return salesTable.CreditCardAuthorizationError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCreditCardCustRefId</Name>
				<Source><![CDATA[
    public RefRecId parmCreditCardCustRefId(RefRecId _creditCardCustRefId = 0)
    {
        if (!prmisDefault(_creditCardCustRefId))
        {
            this.setField(fieldNum(SalesTable, CreditCardCustRefId), _creditCardCustRefId);
        }

        return salesTable.CreditCardCustRefId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurBankAccount_LV</Name>
				<Source><![CDATA[
    public CompanyBankAccountId parmCurBankAccount_LV(CompanyBankAccountId _curBankAccount_LV = '')
    {
        if (!prmisDefault(_curBankAccount_LV))
        {
            this.setField(fieldNum(SalesTable, CurBankAccount_LV), _curBankAccount_LV);
        }

        return salesTable.CurBankAccount_LV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_currencyCode))
        {
            dictField = new DictField(tableNum(SalesTable),fieldNum(SalesTable, CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode, dictField);

            if (this.valueMappingInbound())
            {
                _currencyCode = this.axCurrencyCode(_currencyCode);
            }

            this.setField(fieldNum(SalesTable, CurrencyCode), _currencyCode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(salesTable.CurrencyCode);
        }
        else
        {
            return salesTable.CurrencyCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustAccount</Name>
				<Source><![CDATA[
    public str parmCustAccount(str _custAccount = '')
    {
        DictField dictField;

        if (!prmisDefault(_custAccount))
        {
            dictField = new DictField(tableNum(SalesTable),fieldNum(SalesTable, CustAccount));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_custAccount, dictField, this.mapPolicy().xMLMapCustAccount());
                _custAccount = this.axCustAccount(_custAccount);
            }
            else
            {
                this.validateInboundString(_custAccount, dictField);
            }

            this.setField(fieldNum(SalesTable, CustAccount), _custAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(salesTable.CustAccount);
        }
        else
        {
            return salesTable.CustAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustBankAccount_LV</Name>
				<Source><![CDATA[
    public CustBankAccountId parmCustBankAccount_LV(CustBankAccountId _custBankAccount_LV = '')
    {
        if (!prmisDefault(_custBankAccount_LV))
        {
            this.setField(fieldNum(SalesTable, CustBankAccount_LV), _custBankAccount_LV);
        }

        return salesTable.CustBankAccount_LV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustGroup</Name>
				<Source><![CDATA[
public CustGroupId parmCustGroup(CustGroupId _custGroup = '')
    {
        if (!prmisDefault(_custGroup))
        {
            this.setField(fieldNum(SalesTable, CustGroup), _custGroup);
        }

        return salesTable.CustGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustInvoiceId</Name>
				<Source><![CDATA[
    CustInvoiceId parmCustInvoiceId(CustInvoiceId _custInvoiceId = '')
    {
        if (!prmisDefault(_custInvoiceId))
        {
            this.setField(fieldNum(SalesTable, CustInvoiceId), _custInvoiceId);
        }

        return salesTable.CustInvoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomerRef</Name>
				<Source><![CDATA[
    public CustRef parmCustomerRef(CustRef _customerRef = '')
    {
        if (!prmisDefault(_customerRef))
        {
            this.setField(fieldNum(SalesTable, CustomerRef), _customerRef);
        }

        return salesTable.CustomerRef;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsExportOrder_IN</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CustomsExportOrder_IN</c> parameter.
    /// </summary>
    /// <param name="_customsExportOrder_IN">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustomsExportOrder_IN</c> parameter.
    /// </returns>
    public NoYesId parmCustomsExportOrder_IN(NoYesId _customsExportOrder_IN = NoYes::No)
    {
        if (!prmisDefault(_customsExportOrder_IN))
        {
            this.setField(fieldNum(SalesTable, CustomsExportOrder_IN), _customsExportOrder_IN);
        }

        return salesTable.CustomsExportOrder_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustomsShippingBill_IN</Name>
				<Source><![CDATA[
/// <summary>
    ///    Gets or sets the <c>CustomsShippingBill_IN</c> parameter.
    /// </summary>
    /// <param name="_customsShippingBill_IN">
    ///    The value to set.
    /// </param>
    /// <returns>
    ///    The value of the <c>CustomsShippingBill_IN</c> parameter.
    /// </returns>
    public NoYesId parmCustomsShippingBill_IN(NoYesId _customsShippingBill_IN = NoYes::No)
    {
        if (!prmisDefault(_customsShippingBill_IN))
        {
            this.setField(fieldNum(SalesTable, CustomsShippingBill_IN), _customsShippingBill_IN);
        }

        return salesTable.CustomsShippingBill_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeadline</Name>
				<Source><![CDATA[
    public SalesDeadline parmDeadline(SalesDeadline _deadline = dateNull())
    {
        if (!prmisDefault(_deadline))
        {
            this.setField(fieldNum(SalesTable, Deadline), _deadline);
        }

        return salesTable.Deadline;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
    public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisDefault(_defaultDimension))
        {
            this.setField(fieldNum(SalesTable, DefaultDimension), _defaultDimension);
        }

        return salesTable.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDate</Name>
				<Source><![CDATA[
    public SalesShippingDate parmDeliveryDate(SalesShippingDate _deliveryDate = dateNull())
    {
        if (!prmisDefault(_deliveryDate))
        {
            this.setField(fieldNum(SalesTable, DeliveryDate), _deliveryDate);
        }

        return salesTable.DeliveryDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryDateControlType</Name>
				<Source><![CDATA[
    public SalesDeliveryDateControlType parmDeliveryDateControlType(SalesDeliveryDateControlType _deliveryDateControlType = SalesDeliveryDateControlType::None)
    {
        if (!prmisDefault(_deliveryDateControlType))
        {
            this.setField(fieldNum(SalesTable, DeliveryDateControlType), _deliveryDateControlType);
        }

        return salesTable.DeliveryDateControlType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryName</Name>
				<Source><![CDATA[
    public CustName parmDeliveryName(CustName _deliveryName = '')
    {
        if (!prmisDefault(_deliveryName))
        {
            this.setField(fieldNum(SalesTable, DeliveryName), _deliveryName);
        }

        return salesTable.DeliveryName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeliveryPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmDeliveryPostalAddress(LogisticsPostalAddressRecId _deliveryPostalAddress = 0)
    {
        if (!prmisDefault(_deliveryPostalAddress))
        {
            this.setField(fieldNum(SalesTable, DeliveryPostalAddress), _deliveryPostalAddress);
        }

        return salesTable.DeliveryPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDirectDebitMandate</Name>
				<Source><![CDATA[
    public CustDirectDebitMandateRecId parmDirectDebitMandate(CustDirectDebitMandateRecId _directDebitMandate = 0)
    {
        if (!prmisDefault(_directDebitMandate))
        {
            this.setField(fieldNum(SalesTable, DirectDebitMandate), _directDebitMandate);
        }

        return salesTable.DirectDebitMandate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    public SalesEndDiscPct parmDiscPercent(SalesEndDiscPct _discPercent = 0)
    {
        if (!prmisDefault(_discPercent))
        {
            this.setField(fieldNum(SalesTable, DiscPercent), _discPercent);
        }

        return salesTable.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvMode</Name>
				<Source><![CDATA[
    public str parmDlvMode(str _dlvMode = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvMode))
        {
            dictField = new DictField(tableNum(SalesTable), fieldNum(SalesTable, DlvMode));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvMode, dictField, this.mapPolicy().xMLMapDlvMode());
                _dlvMode = this.axDlvModeId(_dlvMode);
            }
            else
            {
                this.validateInboundString(_dlvMode, dictField);
            }

            this.setField(fieldNum(SalesTable, DlvMode), _dlvMode);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvModeId(salesTable.DlvMode);
        }
        else
        {
            return salesTable.DlvMode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvReason</Name>
				<Source><![CDATA[
    public DlvReasonId parmDlvReason(DlvReasonId _dlvReason = '')
    {
        if (!prmisDefault(_dlvReason))
        {
            this.setField(fieldNum(SalesTable, DlvReason), _dlvReason);
        }

        return salesTable.DlvReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
    public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(SalesTable), fieldNum(SalesTable, DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm, dictField, this.mapPolicy().xMLMapDlvTerm());
                _dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm, dictField);
            }

            this.setField(fieldNum(SalesTable, DlvTerm), _dlvTerm);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(salesTable.DlvTerm);
        }
        else
        {
            return salesTable.DlvTerm;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentStatus</Name>
				<Source><![CDATA[
    public DocumentStatus parmDocumentStatus(DocumentStatus _documentStatus = DocumentStatus::None)
    {
        if (!prmisDefault(_documentStatus))
        {
            this.setField(fieldNum(SalesTable, DocumentStatus), _documentStatus);
        }

        return salesTable.DocumentStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEInvoiceAccountCode</Name>
				<Source><![CDATA[
    public EInvoiceAccountCode parmEInvoiceAccountCode(EInvoiceAccountCode _eInvoiceAccountCode = '')
    {
        if (!prmisDefault(_eInvoiceAccountCode))
        {
            this.setField(fieldNum(SalesTable, eInvoiceAccountCode), _eInvoiceAccountCode);
        }

        return salesTable.eInvoiceAccountCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEInvoiceLineSpec</Name>
				<Source><![CDATA[
    public EInvoiceLineSpecific parmEInvoiceLineSpec(EInvoiceLineSpecific _eInvoiceLineSpecific = NoYes::No)
    {
        if (!prmisDefault(_eInvoiceLineSpecific))
        {
            this.setField(fieldNum(SalesTable, eInvoiceLineSpec), _eInvoiceLineSpecific);
        }

        return salesTable.eInvoiceLineSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmail</Name>
				<Source><![CDATA[
    public Email parmEmail(Email _email = '')
    {
        if (!prmisDefault(_email))
        {
            this.setField(fieldNum(SalesTable, Email), _email);
        }

        return salesTable.Email;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEndDisc</Name>
				<Source><![CDATA[
    public CustEndDiscCode parmEndDisc(CustEndDiscCode _endDisc = '')
    {
        if (!prmisDefault(_endDisc))
        {
            this.setField(fieldNum(SalesTable, EndDisc), _endDisc);
        }

        return salesTable.EndDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnterpriseNumber</Name>
				<Source><![CDATA[
    public TaxEnterpriseNumber parmEnterpriseNumber(TaxEnterpriseNumber _enterpriseNumber = '')
    {
        if (!prmisDefault(_enterpriseNumber))
        {
            this.setField(fieldNum(SalesTable, EnterpriseNumber), _enterpriseNumber);
        }

        return salesTable.EnterpriseNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEstimate</Name>
				<Source><![CDATA[
    public SalesEstimateGross parmEstimate(SalesEstimateGross _estimate = 0)
    {
        if (!prmisDefault(_estimate))
        {
            this.setField(fieldNum(SalesTable, Estimate), _estimate);
        }

        return salesTable.Estimate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExportReason</Name>
				<Source><![CDATA[
    public SalesExportReason parmExportReason(SalesExportReason _exportReason = '')
    {
        if (!prmisDefault(_exportReason))
        {
            this.setField(fieldNum(SalesTable, ExportReason), _exportReason);
        }

        return salesTable.ExportReason;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFiscalDocType_PL</Name>
				<Source><![CDATA[
    public PlFiscalDocType parmFiscalDocType_PL(PlFiscalDocType _fiscalDocType_PL = PlFiscalDocType::Invoice)
    {
        if (!prmisDefault(_fiscalDocType_PL))
        {
            this.setField(fieldNum(SalesTable, FiscalDocType_PL), _fiscalDocType_PL);
        }

        return salesTable.FiscalDocType_PL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedDueDate</Name>
				<Source><![CDATA[
    public SalesFixedDueDate parmFixedDueDate(SalesFixedDueDate _fixedDueDate = dateNull())
    {
        if (!prmisDefault(_fixedDueDate))
        {
            this.setField(fieldNum(SalesTable, FixedDueDate), _fixedDueDate);
        }

        return salesTable.FixedDueDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFixedExchRate</Name>
				<Source><![CDATA[
    public SalesFixedExchRate parmFixedExchRate(SalesFixedExchRate _fixedExchRate = 0)
    {
        if (!prmisDefault(_fixedExchRate))
        {
            this.setField(fieldNum(SalesTable, FixedExchRate), _fixedExchRate);
        }

        return salesTable.FixedExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportingCurrencyFixedExchRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value for the <c>ReportingCurrencyFixedExchRate</c> field.
    /// </summary>
    /// <param name = "_reportingCurrencyFixedExchRate">The reporting currency fixed exchange rate.</param>
    /// <returns>Reporting currency fixed exchange rate.</returns>
    internal CustExchRate parmReportingCurrencyFixedExchRate(CustExchRate _reportingCurrencyFixedExchRate = 0)
    {
        if (!prmisDefault(_reportingCurrencyFixedExchRate))
        {
            this.setField(fieldNum(SalesTable, ReportingCurrencyFixedExchRate), _reportingCurrencyFixedExchRate);
        }

        return salesTable.ReportingCurrencyFixedExchRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightSlipType</Name>
				<Source><![CDATA[
    public CustFreightSlipType parmFreightSlipType(CustFreightSlipType _freightSlipType = FreightSlipType::None)
    {
        if (!prmisDefault(_freightSlipType))
        {
            this.setField(fieldNum(SalesTable, FreightSlipType), _freightSlipType);
        }

        return salesTable.FreightSlipType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFreightZone</Name>
				<Source><![CDATA[
    public CustFreightZoneId parmFreightZone(CustFreightZoneId _freightZone = '')
    {
        if (!prmisDefault(_freightZone))
        {
            this.setField(fieldNum(SalesTable, FreightZone), _freightZone);
        }

        return salesTable.FreightZone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGiroType</Name>
				<Source><![CDATA[
    public PaymentStubInvoiceId parmGiroType(PaymentStubInvoiceId _giroType = PaymentStub::None)
    {
        if (!prmisDefault(_giroType))
        {
            this.setField(fieldNum(SalesTable, GiroType), _giroType);
        }

        return salesTable.GiroType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTax</Name>
				<Source><![CDATA[
    public InclTax parmInclTax(InclTax _inclTax = NoYes::No)
    {
        if (!prmisDefault(_inclTax))
        {
            this.setField(fieldNum(SalesTable, InclTax), _inclTax);
        }

        return salesTable.InclTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyAllowIndirectCreation</Name>
				<Source><![CDATA[
    public InterCompanyAllowIndirectCreation parmInterCompanyAllowIndirectCreation(InterCompanyAllowIndirectCreation _interCompanyAllowIndirectCreation = false)
    {
        if (!prmisDefault(_interCompanyAllowIndirectCreation))
        {
            this.setField(fieldNum(SalesTable, InterCompanyAllowIndirectCreation), _interCompanyAllowIndirectCreation);
        }

        return salesTable.InterCompanyAllowIndirectCreation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyAllowIndirectCreationOri</Name>
				<Source><![CDATA[
    public InterCompanyAllowIndirectCreation parmInterCompanyAllowIndirectCreationOri(InterCompanyAllowIndirectCreation _interCompanyAllowIndirectCreation = false)
    {
        if (!prmisDefault(_interCompanyAllowIndirectCreation))
        {
            this.setField(fieldNum(SalesTable, InterCompanyAllowIndirectCreationOrig), _interCompanyAllowIndirectCreation);
        }

        return salesTable.InterCompanyAllowIndirectCreationOrig;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyAutoCreateOrders</Name>
				<Source><![CDATA[
    public InterCompanyAutoCreateOrders parmInterCompanyAutoCreateOrders(InterCompanyAutoCreateOrders _interCompanyAutoCreateOrders = NoYes::No)
    {
        if (!prmisDefault(_interCompanyAutoCreateOrders))
        {
            this.setField(fieldNum(SalesTable, InterCompanyAutoCreateOrders), _interCompanyAutoCreateOrders);
        }

        return salesTable.InterCompanyAutoCreateOrders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyCompanyId</Name>
				<Source><![CDATA[
    public InterCompanyCompanyId parmInterCompanyCompanyId(InterCompanyCompanyId _interCompanyCompanyId = '')
    {
        if (!prmisDefault(_interCompanyCompanyId))
        {
            this.setField(fieldNum(SalesTable, InterCompanyCompanyId), _interCompanyCompanyId);
        }

        return salesTable.InterCompanyCompanyId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyDirectDelivery</Name>
				<Source><![CDATA[
    public InterCompanyDirectDelivery parmInterCompanyDirectDelivery(InterCompanyDirectDelivery _interCompanyDirectDelivery = false)
    {
        if (!prmisDefault(_interCompanyDirectDelivery))
        {
            this.setField(fieldNum(SalesTable, InterCompanyDirectDelivery), _interCompanyDirectDelivery);
        }

        return salesTable.InterCompanyDirectDelivery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyDirectDeliveryOrig</Name>
				<Source><![CDATA[
    public InterCompanyDirectDelivery parmInterCompanyDirectDeliveryOrig(InterCompanyDirectDelivery _interCompanyDirectDelivery = false)
    {
        if (!prmisDefault(_interCompanyDirectDelivery))
        {
            this.setField(fieldNum(SalesTable, InterCompanyDirectDeliveryOrig), _interCompanyDirectDelivery);
        }

        return salesTable.InterCompanyDirectDeliveryOrig;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOrder</Name>
				<Source><![CDATA[
    public InterCompanyCustomer parmInterCompanyOrder(InterCompanyCustomer _interCompanyOrder = NoYes::No)
    {
        if (!prmisDefault(_interCompanyOrder))
        {
            this.setField(fieldNum(SalesTable, InterCompanyOrder), _interCompanyOrder);
        }

        return salesTable.InterCompanyOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOrigin</Name>
				<Source><![CDATA[
    public InterCompanyOrigin parmInterCompanyOrigin(InterCompanyOrigin _interCompanyOrigin = InterCompanyOrigin::Source)
    {
        if (!prmisDefault(_interCompanyOrigin))
        {
            this.setField(fieldNum(SalesTable, InterCompanyOrigin), _interCompanyOrigin);
        }

        return salesTable.InterCompanyOrigin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOriginalCustAccount</Name>
				<Source><![CDATA[
    public InterCompanyOriginalCustAccount parmInterCompanyOriginalCustAccount(InterCompanyOriginalCustAccount _interCompanyOriginalCustAccount = '')
    {
        if (!prmisDefault(_interCompanyOriginalCustAccount))
        {
            this.setField(fieldNum(SalesTable, InterCompanyOriginalCustAccount), _interCompanyOriginalCustAccount);
        }

        return salesTable.InterCompanyOriginalCustAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyOriginalSalesId</Name>
				<Source><![CDATA[
    public InterCompanyOriginalSalesId parmInterCompanyOriginalSalesId(InterCompanyOriginalSalesId _interCompanyOriginalSalesId = '')
    {
        if (!prmisDefault(_interCompanyOriginalSalesId))
        {
            this.setField(fieldNum(SalesTable, InterCompanyOriginalSalesId), _interCompanyOriginalSalesId);
        }

        return salesTable.InterCompanyOriginalSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInterCompanyPurchId</Name>
				<Source><![CDATA[
    public InterCompanyPurchId parmInterCompanyPurchId(InterCompanyPurchId _interCompanyPurchId = '')
    {
        if (!prmisDefault(_interCompanyPurchId))
        {
            this.setField(fieldNum(SalesTable, InterCompanyPurchId), _interCompanyPurchId);
        }

        return salesTable.InterCompanyPurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatAddValue_LV</Name>
				<Source><![CDATA[
    public LvIntrastatAddValue parmIntrastatAddValue_LV(LvIntrastatAddValue _intrastatAddValue_LV = 0)
    {
        if (!prmisDefault(_intrastatAddValue_LV))
        {
            this.setField(fieldNum(SalesTable, IntrastatAddValue_LV), _intrastatAddValue_LV);
        }

        return salesTable.IntrastatAddValue_LV;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    public IntrastatFulfillmentDate_HU parmIntrastatFulfillmentDate_HU(IntrastatFulfillmentDate_HU _intrastatFulfillmentDate_HU = dateNull())
    {
        if (!prmisDefault(_intrastatFulfillmentDate_HU))
        {
            this.setField(fieldNum(SalesTable, IntrastatFulfillmentDate_HU), _intrastatFulfillmentDate_HU);
        }

        return salesTable.IntrastatFulfillmentDate_HU;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventLocationId</Name>
				<Source><![CDATA[
    public SalesInventLocationId parmInventLocationId(SalesInventLocationId _inventLocationId = '')
    {
        if (!prmisDefault(_inventLocationId))
        {
            this.setField(fieldNum(SalesTable, InventLocationId), _inventLocationId);
        }

        return salesTable.InventLocationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventSiteId</Name>
				<Source><![CDATA[
    public InventSiteId parmInventSiteId(InventSiteId _inventSiteId = '')
    {
        if (!prmisDefault(_inventSiteId))
        {
            this.setField(fieldNum(SalesTable, InventSiteId), _inventSiteId);
        }

        return salesTable.InventSiteId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAccount</Name>
				<Source><![CDATA[
    public str parmInvoiceAccount(str _invoiceAccount = '')
    {
        DictField dictField;

        if (!prmisDefault(_invoiceAccount))
        {
            dictField = new DictField(tableNum(SalesTable), fieldNum(SalesTable, InvoiceAccount));

            if (this.valueMappingInbound())
            {
                this.validateInboundString(_invoiceAccount, dictField, this.mapPolicy().xMLMapCustAccount());
                _invoiceAccount = this.axCustAccount(_invoiceAccount);
            }
            else
            {
                this.validateInboundString(_invoiceAccount, dictField);
            }

            this.setField(fieldNum(SalesTable, InvoiceAccount), _invoiceAccount);
        }

        if (this.valueMappingOutbound())
        {
            return this.axCustAccount(salesTable.InvoiceAccount);
        }
        else
        {
            return salesTable.InvoiceAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceAutoNumbering_LT</Name>
				<Source><![CDATA[
    public LtInvoiceAutoNumbering parmInvoiceAutoNumbering_LT(LtInvoiceAutoNumbering _ltInvoiceAutoNumbering = NoYes::No)
    {
        if (!prmisDefault(_ltInvoiceAutoNumbering))
        {
            this.setField(fieldNum(SalesTable, InvoiceAutoNumbering_LT), _ltInvoiceAutoNumbering);
        }

        return salesTable.InvoiceAutoNumbering_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLanguageId</Name>
				<Source><![CDATA[
    public CustLanguageId parmLanguageId(CustLanguageId _languageId = '')
    {
        if (!prmisDefault(_languageId))
        {
            this.setField(fieldNum(SalesTable, LanguageId), _languageId);
        }

        return salesTable.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    public CustLineDiscCode parmLineDisc(CustLineDiscCode _lineDisc = '')
    {
        if (!prmisDefault(_lineDisc))
        {
            this.setField(fieldNum(SalesTable, LineDisc), _lineDisc);
        }

        return salesTable.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmListcode</Name>
				<Source><![CDATA[
    public ListcodeId parmListcode(ListcodeId _listcode = Listcode::IncludeNot)
    {
        if (!prmisDefault(_listcode))
        {
            this.setField(fieldNum(SalesTable, Listcode), _listcode);
        }

        return salesTable.Listcode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMarkupGroup</Name>
				<Source><![CDATA[
    public CustMarkupGroupId parmMarkupGroup(CustMarkupGroupId _markupGroup = '')
    {
        if (!prmisDefault(_markupGroup))
        {
            this.setField(fieldNum(SalesTable, MarkupGroup), _markupGroup);
        }

        return salesTable.MarkupGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMatchingAgreement</Name>
				<Source><![CDATA[
    public RefRecId parmMatchingAgreement(AgreementHeaderRecId _agreementHeaderRecId = 0)
    {
        if (!prmisDefault(_agreementHeaderRecId))
        {
            this.setField(fieldNum(SalesTable, MatchingAgreement), _agreementHeaderRecId);
        }

        return salesTable.MatchingAgreement;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMCROrderStopped</Name>
				<Source><![CDATA[
    public MCROrderStopped parmMCROrderStopped(MCROrderStopped _mcrOrderStopped = NoYes::No)
    {
        if (!prmisDefault(_mcrOrderStopped))
        {
            this.setField(fieldNum(SalesTable, MCROrderStopped), _mcrOrderStopped);
        }

        return salesTable.MCROrderStopped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLineDisc</Name>
				<Source><![CDATA[
    public CustMultiLineDiscCode parmMultiLineDisc(CustMultiLineDiscCode _multiLineDisc = '')
    {
        if (!prmisDefault(_multiLineDisc))
        {
            this.setField(fieldNum(SalesTable, MultiLineDisc), _multiLineDisc);
        }

        return salesTable.MultiLineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNatureOfAssessee_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>NatureOfAssessee_IN</c> parameter.
    /// </summary>
    /// <param name="_natureOfAssessee_IN">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>NatureOfAssessee_IN</c> parameter.
    /// </returns>
    public NatureOfAssessee_IN parmNatureOfAssessee_IN(NatureOfAssessee_IN _natureOfAssessee_IN = NatureOfAssessee_IN::Company)
    {
        if (!prmisDefault(_natureOfAssessee_IN))
        {
            this.setField(fieldNum(SalesTable, NatureOfAssessee_IN), _natureOfAssessee_IN);
        }

        return salesTable.NatureOfAssessee_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberSequenceGroup</Name>
				<Source><![CDATA[
public NumberSequenceGroupId parmNumberSequenceGroup(NumberSequenceGroupId _numberSequenceGroup = '')
    {
        if (!prmisDefault(_numberSequenceGroup))
        {
            this.setField(fieldNum(SalesTable, NumberSequenceGroup), _numberSequenceGroup);
        }

        return salesTable.NumberSequenceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOneTimeCustomer</Name>
				<Source><![CDATA[
    public OneTimeCustomer parmOneTimeCustomer(OneTimeCustomer _oneTimeCustomer = NoYes::No)
    {
        if (!prmisDefault(_oneTimeCustomer))
        {
            this.setField(fieldNum(SalesTable, OneTimeCustomer), _oneTimeCustomer);
        }

        return salesTable.OneTimeCustomer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPackingSlipAutoNumbering_LT</Name>
				<Source><![CDATA[
    public LtPackingSlipAutoNumbering parmPackingSlipAutoNumbering_LT(LtPackingSlipAutoNumbering _ltPackingSlipAutoNumbering = NoYes::No)
    {
        if (!prmisDefault(_ltPackingSlipAutoNumbering))
        {
            this.setField(fieldNum(SalesTable, PackingSlipAutoNumbering_LT), _ltPackingSlipAutoNumbering);
        }

        return salesTable.PackingSlipAutoNumbering_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPayment</Name>
				<Source><![CDATA[
    public CustPaymTermId parmPayment(CustPaymTermId _payment = '')
    {
        if (!prmisDefault(_payment))
        {
            this.setField(fieldNum(SalesTable, Payment), _payment);
        }

        return salesTable.Payment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymentSched</Name>
				<Source><![CDATA[
    public PaymSchedId parmPaymentSched(PaymSchedId _paymentSched = '')
    {
        if (!prmisDefault(_paymentSched))
        {
            this.setField(fieldNum(SalesTable, PaymentSched), _paymentSched);
        }

        return salesTable.PaymentSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymMode</Name>
				<Source><![CDATA[
    public CustPaymMode parmPaymMode(CustPaymMode _paymMode = '')
    {
        if (!prmisDefault(_paymMode))
        {
            this.setField(fieldNum(SalesTable, PaymMode), _paymMode);
        }

        return salesTable.PaymMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPaymSpec</Name>
				<Source><![CDATA[
    public CustPaymSpec parmPaymSpec(CustPaymSpec _paymSpec = '')
    {
        if (!prmisDefault(_paymSpec))
        {
            this.setField(fieldNum(SalesTable, PaymSpec), _paymSpec);
        }

        return salesTable.PaymSpec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsBatchAttribAutoRes</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the salesTable
    /// pdsSameLot field value.
    /// </summary>
    /// <param name="_attribRes">Same lot reservation value.
    /// </param>
    /// <returns>
    /// The value of the 'PdsBatchAttribAutoRes' field
    /// </returns>
    /// <remarks>
    /// Batch Attributes enhancement
    /// </remarks>
    public PdsBatchAttribAutoRes parmPdsBatchAttribAutoRes(
        PdsBatchAttribAutoRes _attribRes = NoYes::No)
    {
        if (!prmisDefault(_attribRes))
        {
            this.setField(fieldNum(SalesTable, PdsBatchAttribAutoRes), _attribRes);
        }

        return salesTable.PdsBatchAttribAutoRes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCustRebateGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the salesTable
    /// pdsCustRebateGroupId field value.
    /// </summary>
    /// <param name="_pdsCustRebateGroupId">Customer rebate group</param>
    /// <returns>
    /// Customer rebate group
    /// </returns>
    public PdsCustRebateGroupId parmPdsCustRebateGroupId(
        PdsCustRebateGroupId _pdsCustRebateGroupId = "")
    {
        if (!prmisDefault(_pdsCustRebateGroupId))
        {
            this.setField(
                fieldNum(SalesTable, PdsCustRebateGroupId),
                _pdsCustRebateGroupId);
        }

        return salesTable.PdsCustRebateGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsRebateProgramTMAGroup</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the salesTable
    /// PdsRebateProgramTMAGroup field value.
    /// </summary>
    /// <param name="_pdsRebateProgramTMAGroup">Rebate program TMA group</param>
    /// <returns>
    /// Rebate Program TMA group
    /// </returns>
    public PdsRebateProgramTMAGroup parmPdsRebateProgramTMAGroup(
        PdsRebateProgramTMAGroup _pdsRebateProgramTMAGroup = "")
    {
        if (!prmisDefault(_pdsRebateProgramTMAGroup))
        {
            this.setField(
                fieldNum(SalesTable, PdsRebateProgramTMAGroup),
                _pdsRebateProgramTMAGroup);
        }

        return salesTable.PdsRebateProgramTMAGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPhone</Name>
				<Source><![CDATA[
    public Phone parmPhone(Phone _phone = '')
    {
        if (!prmisDefault(_phone))
        {
            this.setField(fieldNum(SalesTable, Phone), _phone);
        }

        return salesTable.Phone;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPort</Name>
				<Source><![CDATA[
    public IntrastatPortId parmPort(IntrastatPortId _port = '')
    {
        if (!prmisDefault(_port))
        {
            this.setField(fieldNum(SalesTable, Port), _port);
        }

        return salesTable.Port;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingProfile</Name>
				<Source><![CDATA[
    public CustPostingProfile parmPostingProfile(CustPostingProfile _postingProfile = '')
    {
        if (!prmisDefault(_postingProfile))
        {
            this.setField(fieldNum(SalesTable, PostingProfile), _postingProfile);
        }

        return salesTable.PostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceGroupId</Name>
				<Source><![CDATA[
    public CustPriceGroup parmPriceGroupId(CustPriceGroup _priceGroupId = '')
    {
        if (!prmisDefault(_priceGroupId))
        {
            this.setField(fieldNum(SalesTable, PriceGroupId), _priceGroupId);
        }

        return salesTable.PriceGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProjId</Name>
				<Source><![CDATA[
    public ProjId parmProjId(ProjId _projId = '')
    {
        if (!prmisDefault(_projId))
        {
            this.setField(fieldNum(SalesTable, ProjId), _projId);
        }

        return salesTable.ProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchId</Name>
				<Source><![CDATA[
    public PurchId parmPurchId(PurchId _purchId = '')
    {
        if (!prmisDefault(_purchId))
        {
            this.setField(fieldNum(SalesTable, PurchId), _purchId);
        }

        return salesTable.PurchId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchOrderFormNum</Name>
				<Source><![CDATA[
    public CustPurchaseOrder parmPurchOrderFormNum(CustPurchaseOrder _purchOrderFormNum = '')
    {
        if (!prmisDefault(_purchOrderFormNum))
        {
            this.setField(fieldNum(SalesTable, PurchOrderFormNum), _purchOrderFormNum);
        }

        return salesTable.PurchOrderFormNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuotationId</Name>
				<Source><![CDATA[
    public QuotationId parmQuotationId(QuotationId _quotationId = '')
    {
        if (!prmisDefault(_quotationId))
        {
            this.setField(fieldNum(SalesTable, QuotationId), _quotationId);
        }

        return salesTable.QuotationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDateConfirmed</Name>
				<Source><![CDATA[
    public SalesReceiptDateConfirmed parmReceiptDateConfirmed(SalesReceiptDateConfirmed _receiptDateConfirmed = dateNull())
    {
        if (!prmisDefault(_receiptDateConfirmed))
        {
            this.setField(fieldNum(SalesTable, ReceiptDateConfirmed), _receiptDateConfirmed);
        }

        return salesTable.ReceiptDateConfirmed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReceiptDateRequested</Name>
				<Source><![CDATA[
    public SalesReceiptDateRequested parmReceiptDateRequested(SalesReceiptDateRequested _receiptDateRequested = dateNull())
    {
        if (!prmisDefault(_receiptDateRequested))
        {
            this.setField(fieldNum(SalesTable, ReceiptDateRequested), _receiptDateRequested);
        }

        return salesTable.ReceiptDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReleaseStatus</Name>
				<Source><![CDATA[
    public WHSReleaseStatus parmReleaseStatus(WHSReleaseStatus _releaseStatus = 0)
    {
        if (!prmisDefault(_releaseStatus))
        {
            this.setField(fieldNum(SalesTable, ReleaseStatus), _releaseStatus);
        }

        return salesTable.ReleaseStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReservation</Name>
				<Source><![CDATA[
    public ItemReservation parmReservation(ItemReservation _reservation = ItemReservation::None)
    {
        if (!prmisDefault(_reservation))
        {
            this.setField(fieldNum(SalesTable, Reservation), _reservation);
        }

        return salesTable.Reservation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnDeadline</Name>
				<Source><![CDATA[
    public ReturnDeadline parmReturnDeadline(ReturnDeadline _returnDeadline = dateNull())
    {
        if (!prmisDefault(_returnDeadline))
        {
            this.setField(fieldNum(SalesTable, ReturnDeadline), _returnDeadline);
        }

        return salesTable.ReturnDeadline;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnItemNum</Name>
				<Source><![CDATA[
    public SalesReturnItemNum parmReturnItemNum(SalesReturnItemNum _returnItemNum = '')
    {
        if (!prmisDefault(_returnItemNum))
        {
            this.setField(fieldNum(SalesTable, ReturnItemNum), _returnItemNum);
        }

        return salesTable.ReturnItemNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReasonCodeId</Name>
				<Source><![CDATA[
    public ReturnReasonCodeId parmReturnReasonCodeId(ReturnReasonCodeId _returnReasonCodeId = '')
    {
        if (!prmisDefault(_returnReasonCodeId))
        {
            this.setField(fieldNum(SalesTable, ReturnReasonCodeId), _returnReasonCodeId);
        }

        return salesTable.ReturnReasonCodeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReplacementCreated</Name>
				<Source><![CDATA[
    public ReturnReplacementCreated parmReturnReplacementCreated(ReturnReplacementCreated _returnReplacementCreated = false)
    {
        if (!prmisDefault(_returnReplacementCreated))
        {
            this.setField(fieldNum(SalesTable, ReturnReplacementCreated), _returnReplacementCreated);
        }

        return salesTable.ReturnReplacementCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnReplacementId</Name>
				<Source><![CDATA[
    public ReturnReplacementId parmReturnReplacementId(ReturnReplacementId _returnReplacementId = '')
    {
        if (!prmisDefault(_returnReplacementId))
        {
            this.setField(fieldNum(SalesTable, ReturnReplacementId), _returnReplacementId);
        }

        return salesTable.ReturnReplacementId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReturnStatus</Name>
				<Source><![CDATA[
    public ReturnStatusHeader parmReturnStatus(ReturnStatusHeader _returnStatus = ReturnStatusHeader::None)
    {
        if (!prmisDefault(_returnStatus))
        {
            this.setField(fieldNum(SalesTable, ReturnStatus), _returnStatus);
        }

        return salesTable.ReturnStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesGroup</Name>
				<Source><![CDATA[
    public CommissSalesGroup parmSalesGroup(CommissSalesGroup _salesGroup = '')
    {
        if (!prmisDefault(_salesGroup))
        {
            this.setField(fieldNum(SalesTable, SalesGroup), _salesGroup);
        }

        return salesTable.SalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesId</Name>
				<Source><![CDATA[
    public SalesIdBase parmSalesId(SalesIdBase _salesId = '')
    {
        if (!prmisDefault(_salesId))
        {
            this.setField(fieldNum(SalesTable, SalesId), _salesId);
        }

        return salesTable.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesName</Name>
				<Source><![CDATA[
    public SalesName parmSalesName(SalesName _salesName = '')
    {
        if (!prmisDefault(_salesName))
        {
            this.setField(fieldNum(SalesTable, SalesName), _salesName);
        }

        return salesTable.SalesName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesOriginId</Name>
				<Source><![CDATA[
    public SalesOriginId parmSalesOriginId(SalesOriginId _salesOriginId = '')
    {
        if (!prmisDefault(_salesOriginId))
        {
            this.setField(fieldNum(SalesTable, SalesOriginId), _salesOriginId);
        }

        return salesTable.SalesOriginId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPoolId</Name>
				<Source><![CDATA[
    public SalesPoolId parmSalesPoolId(SalesPoolId _salesPoolId = '')
    {
        if (!prmisDefault(_salesPoolId))
        {
            this.setField(fieldNum(SalesTable, SalesPoolId), _salesPoolId);
        }

        return salesTable.SalesPoolId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesStatus</Name>
				<Source><![CDATA[
    public SalesStatus parmSalesStatus(SalesStatus _salesStatus = SalesStatus::None)
    {
        if (!prmisDefault(_salesStatus))
        {
            this.setField(fieldNum(SalesTable, SalesStatus), _salesStatus);
        }

        return salesTable.SalesStatus;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesType</Name>
				<Source><![CDATA[
    public SalesType parmSalesType(SalesType _salesType = SalesType::Journal)
    {
        if (!prmisDefault(_salesType))
        {
            this.setField(fieldNum(SalesTable, SalesType), _salesType);
        }

        return salesTable.SalesType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesUnitId</Name>
				<Source><![CDATA[
    public smmSalesUnitId parmSalesUnitId(smmSalesUnitId _salesUnitId = '')
    {
        if (!prmisDefault(_salesUnitId))
        {
            this.setField(fieldNum(SalesTable, SalesUnitId), _salesUnitId);
        }

        return salesTable.SalesUnitId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleVoucher</Name>
				<Source><![CDATA[
    public SalesSettlementType parmSettleVoucher(SalesSettlementType _settleVoucher = SettlementType::None)
    {
        if (!prmisDefault(_settleVoucher))
        {
            this.setField(fieldNum(SalesTable, SettleVoucher), _settleVoucher);
        }

        return salesTable.SettleVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierAccount</Name>
				<Source><![CDATA[
    public ShipCarrierAccount parmShipCarrierAccount(ShipCarrierAccount _shipCarrierAccount = '')
    {
        if (!prmisDefault(_shipCarrierAccount))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierAccount), _shipCarrierAccount);
        }

        return salesTable.ShipCarrierAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierAccountCode</Name>
				<Source><![CDATA[
    public ShipCarrierAccountCode parmShipCarrierAccountCode(ShipCarrierAccountCode _shipCarrierAccountCode = '')
    {
        if (!prmisDefault(_shipCarrierAccountCode))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierAccountCode), _shipCarrierAccountCode);
        }

        return salesTable.ShipCarrierAccountCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierBlindShipment</Name>
				<Source><![CDATA[
    public ShipCarrierBlindShipment parmShipCarrierBlindShipment(ShipCarrierBlindShipment _shipCarrierBlindShipment = NoYes::No)
    {
        if (!prmisDefault(_shipCarrierBlindShipment))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierBlindShipment), _shipCarrierBlindShipment);
        }

        return salesTable.ShipCarrierBlindShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierDeliveryContact</Name>
				<Source><![CDATA[
    public Name parmShipCarrierDeliveryContact(Name _deliveryContact = '')
    {
        if (!prmisDefault(_deliveryContact))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierDeliveryContact), _deliveryContact);
        }

        return salesTable.ShipCarrierDeliveryContact;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierDlvType</Name>
				<Source><![CDATA[
    public ShipCarrierDlvType parmShipCarrierDlvType(ShipCarrierDlvType _shipCarrierDlvType = ShipCarrierDlvType::Misc)
    {
        if (!prmisDefault(_shipCarrierDlvType))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierDlvType), _shipCarrierDlvType);
        }

        return salesTable.ShipCarrierDlvType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierExpeditedShipment</Name>
				<Source><![CDATA[
    public ShipCarrierExpeditedShipment parmShipCarrierExpeditedShipment(ShipCarrierExpeditedShipment _shipCarrierExpeditedShipment = NoYes::No)
    {
        if (!prmisDefault(_shipCarrierExpeditedShipment))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierExpeditedShipment), _shipCarrierExpeditedShipment);
        }

        return salesTable.ShipCarrierExpeditedShipment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierFuelSurcharge</Name>
				<Source><![CDATA[
    public ShipCarrierFuelSurcharge parmShipCarrierFuelSurcharge(ShipCarrierFuelSurcharge _shipCarrierFuelSurcharge = NoYes::No)
    {
        if (!prmisDefault(_shipCarrierFuelSurcharge))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierFuelSurcharge), _shipCarrierFuelSurcharge);
        }

        return salesTable.ShipCarrierFuelSurcharge;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierId</Name>
				<Source><![CDATA[
    public ShipCarrierId parmShipCarrierId(ShipCarrierId _shipCarrierId = '')
    {
        if (!prmisDefault(_shipCarrierId))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierId), _shipCarrierId);
        }

        return salesTable.ShipCarrierId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierName</Name>
				<Source><![CDATA[
    public CustName parmShipCarrierName(CustName _shipCarrierName = '')
    {
        if (!prmisDefault(_shipCarrierName))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierName), _shipCarrierName);
        }

        return salesTable.ShipCarrierName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierPostalAddress</Name>
				<Source><![CDATA[
    public LogisticsPostalAddressRecId parmShipCarrierPostalAddress(LogisticsPostalAddressRecId _shipCarrierPostalAddress = 0)
    {
        if (!prmisDefault(_shipCarrierPostalAddress))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierPostalAddress), _shipCarrierPostalAddress);
        }

        return salesTable.ShipCarrierPostalAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShipCarrierResidential</Name>
				<Source><![CDATA[
    public ShipCarrierResidentialDest parmShipCarrierResidential(ShipCarrierResidentialDest _shipCarrierResidential = NoYes::No)
    {
        if (!prmisDefault(_shipCarrierResidential))
        {
            this.setField(fieldNum(SalesTable, ShipCarrierResidential), _shipCarrierResidential);
        }

        return salesTable.ShipCarrierResidential;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateConfirmed</Name>
				<Source><![CDATA[
    public SalesShippingDateConfirmed parmShippingDateConfirmed(SalesShippingDateConfirmed _shippingDateConfirmed = dateNull())
    {
        if (!prmisDefault(_shippingDateConfirmed))
        {
            this.setField(fieldNum(SalesTable, ShippingDateConfirmed), _shippingDateConfirmed);
        }

        return salesTable.ShippingDateConfirmed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmShippingDateRequested</Name>
				<Source><![CDATA[
    public SalesShippingDateRequested parmShippingDateRequested(SalesShippingDateRequested _shippingDateRequested = dateNull())
    {
        if (!prmisDefault(_shippingDateRequested))
        {
            this.setField(fieldNum(SalesTable, ShippingDateRequested), _shippingDateRequested);
        }

        return salesTable.ShippingDateRequested;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipUpdate</Name>
				<Source><![CDATA[
    public InterCompanySkipUpdate parmSkipUpdate(InterCompanySkipUpdate _skipUpdate = InterCompanySkipUpdate::Both)
    {
        if (!prmisDefault(_skipUpdate))
        {
            this.setField(fieldNum(SalesTable, SkipUpdate), _skipUpdate);
        }

        return salesTable.SkipUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmsmmCampaignId</Name>
				<Source><![CDATA[
    public smmCampaignId parmsmmCampaignId(smmCampaignId _smmCampaignId = '')
    {
        if (!prmisDefault(_smmCampaignId))
        {
            this.setField(fieldNum(SalesTable, SmmCampaignId), _smmCampaignId);
        }

        return salesTable.SmmCampaignId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmsmmSalesAmountTotal</Name>
				<Source><![CDATA[
    public smmSalesAmountTotal parmsmmSalesAmountTotal(smmSalesAmountTotal _smmSalesAmountTotal = 0)
    {
        if (!prmisDefault(_smmSalesAmountTotal))
        {
            this.setField(fieldNum(SalesTable, SmmSalesAmountTotal), _smmSalesAmountTotal);
        }

        return salesTable.SmmSalesAmountTotal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatProcId</Name>
				<Source><![CDATA[
    public IntrastatProcId parmStatProcId(IntrastatProcId _statProcId = '')
    {
        if (!prmisDefault(_statProcId))
        {
            this.setField(fieldNum(SalesTable, StatProcId), _statProcId);
        }

        return salesTable.StatProcId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisDefault(_taxGroup))
        {
            this.setField(fieldNum(SalesTable, TaxGroup), _taxGroup);
        }

        return salesTable.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOverrideSalesTax</Name>
				<Source><![CDATA[
    public NoYes parmOverrideSalesTax(NoYes _overrideSalesTax = NoYes::No)
    {
        if (!prmisDefault(_overrideSalesTax))
        {
            this.setField(fieldNum(SalesTable, OverrideSalesTax), _overrideSalesTax);
        }

        return salesTable.OverrideSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxPeriodPaymentCode_PL</Name>
				<Source><![CDATA[
    public PlTaxPeriodPaymentCode parmTaxPeriodPaymentCode_PL(PlTaxPeriodPaymentCode _taxPeriodPaymentCode_PL = '')
    {
        if (!prmisDefault(_taxPeriodPaymentCode_PL))
        {
            this.setField(fieldNum(SalesTable, TaxPeriodPaymentCode_PL), _taxPeriodPaymentCode_PL);
        }

        return salesTable.TaxPeriodPaymentCode_PL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTCSGroup_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>tcsGroup_IN</c> parameter.
    /// </summary>
    /// <param name="_tcsGroup_IN">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>tcsGroup_IN</c> parameter.
    /// </returns>
    public TaxWithholdGroup parmTCSGroup_IN(TaxWithholdGroup _tcsGroup_IN = '')
    {
        if (!prmisDefault(_tcsGroup_IN))
        {
            this.setField(fieldNum(SalesTable, tcsGroup_IN), _tcsGroup_IN);
        }

        return salesTable.tcsGroup_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTDSGroup_IN</Name>
				<Source><![CDATA[
/// <summary>
    /// Gets or sets the <c>tdsGroup_IN</c> parameter.
    /// </summary>
    /// <param name="_tdsGroup_IN">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <c>tdsGroup_IN</c> parameter.
    /// </returns>
    public TaxWithholdGroup parmTDSGroup_IN(TaxWithholdGroup _tdsGroup_IN = '')
    {
        if (!prmisDefault(_tdsGroup_IN))
        {
            this.setField(fieldNum(SalesTable, tdsGroup_IN), _tdsGroup_IN);
        }

        return salesTable.tdsGroup_IN;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalBalance</Name>
				<Source><![CDATA[
public AmountCur parmTotalBalance(AmountCur _amountCur = 0)
    {
        return this.salesTotals().totalBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalCashDiscount</Name>
				<Source><![CDATA[
    public DiscAmount parmTotalCashDiscount(DiscAmount _discAmount = 0)
    {
        return this.salesTotals().totalCashDisc();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalInvoice</Name>
				<Source><![CDATA[
    public AmountCur parmTotalInvoice(AmountCur _amountCur = 0)
    {
        if (TaxParameters::canApplyCashDiscOnInvoice_ES())
        {
            return this.salesTotals().totalAmountCashDiscOnInvoice(true);
        }
        else
        {
            return this.salesTotals().totalAmount();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalMiscCharges</Name>
				<Source><![CDATA[
    public MarkupAmount parmTotalMiscCharges(MarkupAmount _markupAmount = 0)
    {
        return this.salesTotals().totalMarkup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTotalSalesTax</Name>
				<Source><![CDATA[
    public TaxAmountCur parmTotalSalesTax(TaxAmountCur _taxAmountCur = 0)
    {
        return this.salesTotals().totalTaxAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTouched</Name>
				<Source><![CDATA[
    public TradeTouched parmTouched(TradeTouched _touched = NoYes::No)
    {
        if (!prmisDefault(_touched))
        {
            this.setField(fieldNum(SalesTable, Touched), _touched);
        }

        return salesTable.Touched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactionCode</Name>
				<Source><![CDATA[
    public IntrastatTransactionCodeId parmTransactionCode(IntrastatTransactionCodeId _transactionCode = '')
    {
        if (!prmisDefault(_transactionCode))
        {
            this.setField(fieldNum(SalesTable, TransactionCode), _transactionCode);
        }

        return salesTable.TransactionCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransport</Name>
				<Source><![CDATA[
    public IntrastatTransport parmTransport(IntrastatTransport _transport = '')
    {
        if (!prmisDefault(_transport))
        {
            this.setField(fieldNum(SalesTable, Transport), _transport);
        }

        return salesTable.Transport;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUnitedVATInvoice_LT</Name>
				<Source><![CDATA[
    public UnitedVATInvoice_LT parmUnitedVATInvoice_LT(UnitedVATInvoice_LT _unitedVATInvoice_LT = NoYes::No)
    {
        if (!prmisDefault(_unitedVATInvoice_LT))
        {
            this.setField(fieldNum(SalesTable, UnitedVATInvoice_LT), _unitedVATInvoice_LT);
        }

        return salesTable.UnitedVATInvoice_LT;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmURL</Name>
				<Source><![CDATA[
public URL parmURL(URL _url = '')
    {
        if (!prmisDefault(_url))
        {
            this.setField(fieldNum(SalesTable, url), _url);
        }

        return salesTable.url;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNum</Name>
				<Source><![CDATA[
    public VATNumJournal parmVATNum(VATNumJournal _vatNum = '')
    {
        if (!prmisDefault(_vatNum))
        {
            this.setField(fieldNum(SalesTable, vatNum), _vatNum);
        }

        return salesTable.vatNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNumRecId</Name>
				<Source><![CDATA[
    public RefRecId parmVATNumRecId(RefRecId _vatNumRecId = 0)
    {
        if (!prmisDefault(_vatNumRecId))
        {
            this.setField(fieldNum(SalesTable, vatNumRecId), _vatNumRecId);
        }

        return salesTable.vatNumRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmVATNumTableType</Name>
				<Source><![CDATA[
    public TaxExemptNumberSourceType parmVATNumTableType(TaxExemptNumberSourceType _vatNumTableType = TaxExemptNumberSourceType::None)
    {
        if (!prmisDefault(_vatNumTableType))
        {
            this.setField(fieldNum(SalesTable, vatNumTableType), _vatNumTableType);
        }

        return salesTable.vatNumTableType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesResponsible</Name>
				<Source><![CDATA[
    public WorkerSalesResponsible parmWorkerSalesResponsible(WorkerSalesResponsible _salesResponsible = 0)
    {
        if (!prmisDefault(_salesResponsible))
        {
            this.setField(fieldNum(SalesTable, WorkerSalesResponsible), _salesResponsible);
        }

        return salesTable.WorkerSalesResponsible;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesTaker</Name>
				<Source><![CDATA[
    public SalesTaker parmWorkerSalesTaker(SalesTaker _salesTaker = 0)
    {
        if (!prmisDefault(_salesTaker))
        {
            this.setField(fieldNum(SalesTable, WorkerSalesTaker), _salesTaker);
        }

        return salesTable.WorkerSalesTaker;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmWorkerSalesTakerPersonnelNumber</Name>
				<Source><![CDATA[
    public SalesTakerPersonnelNumber parmWorkerSalesTakerPersonnelNumber(SalesTakerPersonnelNumber _salesTakerPersonnelNumber = '')
    {
        if (!prmisDefault(_salesTakerPersonnelNumber))
        {
            this.setField(fieldNum(SalesTable, WorkerSalesTaker), HcmWorker::findByPersonnelNumber(_salesTakerPersonnelNumber).RecId);
        }

        return HcmWorker::find(salesTable.WorkerSalesTaker).PersonnelNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymTermRecord</Name>
				<Source><![CDATA[
    public PaymTerm paymTermRecord(PaymTerm _paymTerm = null)
    {
        PaymTerm    paymTerm;

        if (!paymTermIdx)
        {
            paymTermIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_paymTerm))
        {
            this.tableCacheInsert(paymTermIdx, _paymTerm);
            paymTerm = _paymTerm;
        }
        else
        {
            if (this.tableCacheExist(paymTermIdx))
            {
                paymTerm = this.tableCacheLookup(paymTermIdx);
            }
            else
            {
                this.setPayment();
                paymTerm = PaymTerm::find(this.parmPayment());
                this.tableCacheInsert(paymTermIdx, paymTerm);
            }
        }

        return paymTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMpsExcludeSalesOrder</Name>
				<Source><![CDATA[
    public MpsExcludeSalesOrder parmMpsExcludeSalesOrder(MpsExcludeSalesOrder _mpsExcludeSalesOrder = NoYes::No)
    {
        if (!prmisDefault(_mpsExcludeSalesOrder))
        {
            this.setField(fieldNum(SalesTable, MpsExcludeSalesOrder), _mpsExcludeSalesOrder);
        }

        return salesTable.MpsExcludeSalesOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projTableRecord</Name>
				<Source><![CDATA[
    public ProjTable projTableRecord(ProjTable _projTable = null)
    {
        ProjTable   projTable;

        if (!projTableIdx)
        {
            projTableIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_projTable))
        {
            this.tableCacheInsert(projTableIdx, _projTable);
            projTable = _projTable;
        }
        else
        {
            if (this.tableCacheExist(projTableIdx))
            {
                projTable = this.tableCacheLookup(projTableIdx);
            }
            else
            {
                this.setProjId();
                projTable = ProjTable::find(this.parmProjId());
                this.tableCacheInsert(projTableIdx, projTable);
            }
        }

        return projTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesAgreementHeaderDefaultRecord</Name>
				<Source><![CDATA[
    public SalesAgreementHeaderDefault salesAgreementHeaderDefaultRecord(SalesAgreementHeaderDefault _salesAagreementHeader = null)
    {
        SalesAgreementHeaderDefault     salesAgreementHeaderDefault;

        if (!salesAgreementHeaderDefaultIdx)
        {
            salesAgreementHeaderDefaultIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_salesAagreementHeader))
        {
            this.tableCacheInsert(salesAgreementHeaderDefaultIdx, _salesAagreementHeader);
            salesAgreementHeaderDefault = _salesAagreementHeader;
        }
        else
        {
            if (this.tableCacheExist(salesAgreementHeaderDefaultIdx))
            {
                salesAgreementHeaderDefault = this.tableCacheLookup(salesAgreementHeaderDefaultIdx);
            }
            else
            {
                if (salesTable.MatchingAgreement)
                {
                    salesAgreementHeaderDefault = SalesAgreementHeader::find(salesTable.MatchingAgreement).salesAgreementHeaderDefault();
                    this.tableCacheInsert(salesAgreementHeaderDefaultIdx, salesAgreementHeaderDefault);
                }
            }
        }

        return salesAgreementHeaderDefault;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the <c>SalesId</c> field on a buffer.
    /// </summary>
    /// <param name="_salesId">
    /// The new sales ID value.
    /// </param>
    /// <returns>
    /// The sales ID value.
    /// </returns>
    /// <remarks>
    /// If parameter is not default then the new value is set as a <c>SalesId</c> field value.
    /// Otherwise, method return current value of <c>SalesId</c> field.
    /// </remarks>
    public SalesId salesId(SalesId _salesId = '')
    {
        if (!prmisDefault(_salesId))
            this.setField(fieldNum(SalesTable, SalesId), _salesId);

        return salesTable.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesParametersRecord</Name>
				<Source><![CDATA[
    public SalesParameters salesParametersRecord(SalesParameters _salesParameters = null)
    {
        SalesParameters  salesParameters;

        if (!salesParametersIdx)
        {
            salesParametersIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_salesParameters))
        {
            this.tableCacheInsert(salesParametersIdx, _salesParameters);
            salesParameters = _salesParameters;
        }
        else
        {
            if (this.tableCacheExist(salesParametersIdx))
            {
                salesParameters = this.tableCacheLookup(salesParametersIdx);
            }
            else
            {
                salesParameters = SalesParameters::find();
                this.tableCacheInsert(salesParametersIdx, salesParameters);
            }
        }

        return salesParameters;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateRequestedFromPurchTable</Name>
				<Source><![CDATA[
    internal void setShippingDateRequestedFromPurchTable(PurchTable _purchTable)
    {
        if (_purchTable.ShippingDateRequested)
        {
            this.parmShippingDateRequested(_purchTable.ShippingDateRequested ? _purchTable.ShippingDateRequested : _purchTable.DeliveryDate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTable</Name>
				<Source><![CDATA[
    public SalesTable salesTable(SalesTable _salesTable = salesTable)
    {
        if (!prmisDefault(_salesTable))
        {
            this.setCurrentRecordFromExternal(_salesTable);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesTotals</Name>
				<Source><![CDATA[
    public SalesTotals  salesTotals(SalesTotals  _salesTotals = null)
    {
        SalesTotals  salesTotals;

        if (! salesTotalsIdx)
        {
            salesTotalsIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_salesTotals))
        {
            this.classCacheInsert(salesTotalsIdx, _salesTotals);
            salesTotals = _salesTotals;
        }
        else
        {
            if (this.classCacheExist(salesTotalsIdx))
            {
                salesTotals = this.classCacheLookup(salesTotalsIdx);
            }
            else
            {
                salesTotals = SalesTotals::construct(salesTable,SalesUpdate::All);
                salesTotals.calc();
                this.classCacheInsert(salesTotalsIdx, salesTotals);
            }
        }

        return salesTotals;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefRecId</Name>
				<Source><![CDATA[
    protected void setAddressRefRecId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, AddressRefRecId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAddressRefTableId</Name>
				<Source><![CDATA[
    protected void setAddressRefTableId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, AddressRefTableId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBankDocumentType</Name>
				<Source><![CDATA[
    protected void setBankDocumentType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, BankDocumentType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDisc</Name>
				<Source><![CDATA[
    protected void setCashDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CashDisc)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmCashDisc(this.agreementHeaderDefaultRecord().CashDiscountCode);
            return;
        }

        this.setInvoiceAccount();
        if (this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            this.parmCashDisc(this.invoiceAccount_CustTableRecord().CashDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCashDiscPercent</Name>
				<Source><![CDATA[
    protected void setCashDiscPercent()
    {
        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isFieldSet(fieldNum(SalesTable, CashDiscPercent)))
        {
            if (!TaxParameters::find().CashDiscOnInvoice)
            {
                salesTable.CashDiscPercent = 0;
                return;
            }
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmCashDiscPercent(this.agreementHeaderDefaultRecord().cashDiscPercent());
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCommissionGroup</Name>
				<Source><![CDATA[
    protected void setCommissionGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CommissionGroup)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmCommissionGroup(this.salesAgreementHeaderDefaultRecord().CommissionCustomerGroup);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmCommissionGroup(this.custAccount_CustTableRecord().CommissionGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConsTarget_JP</Name>
				<Source><![CDATA[
    protected void setConsTarget_JP()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ConsTarget_JP)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setContactPersonId</Name>
				<Source><![CDATA[
    protected void setContactPersonId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ContactPersonId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmContactPersonId(this.agreementHeaderDefaultRecord().ContactPerson);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmContactPersonId(this.custAccount_CustTableRecord().ContactPersonId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CurrencyCode)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            this.setSalesType();

            if (this.parmSalesType() == SalesType::ItemReq)
            {
                if (this.isFieldSet(fieldNum(SalesTable, SalesType)))
                {
                    this.parmCurrencyCode(this.projTableRecord().currencyId());
                    return;
                }
            }
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmCurrencyCode(this.custAccount_CustTableRecord().Currency);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustAccount</Name>
				<Source><![CDATA[
    protected void setCustAccount()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CustAccount)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, ProjId)))
            {
                this.parmCustAccount(this.projTableRecord().CustAccount);
                return;
            }
        }

        this.setOneTimeCustomer();

        if (this.parmOneTimeCustomer() && !this.parmCustAccount())
        {
            if (this.isFieldSet(fieldNum(SalesTable, OneTimeCustomer)))
            {
                this.setDeliveryName();
                this.setDeliveryPostalAddress();

                this.parmCustAccount(CustTable::createOneTimeAccount(this.currentRecord()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustGroup</Name>
				<Source><![CDATA[
    protected void setCustGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CustGroup)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmCustGroup(this.custAccount_CustTableRecord().CustGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomsExportOrder_IN</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CustomsExportOrder_IN</c> field.
    /// </summary>
    protected void setCustomsExportOrder_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CustomsExportOrder_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCustomsShippingBill_IN</Name>
				<Source><![CDATA[
/// <summary>
    ///    Sets the value for the <c>CustomsShippingBill_IN</c> field.
    /// </summary>
    protected void setCustomsShippingBill_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CustomsShippingBill_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (!this.isFieldSetExternally(fieldNum(SalesTable,DefaultDimension)))
        {
            if (this.isFieldSet(fieldNum(SalesTable,DefaultDimension)))
            {
                return;
            }
        }

        this.setInventSiteId();
        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        if (this.projTableRecord())
        {
            this.setSalesType();

            if (this.canSetProjDefaultDimension())
            {
                this.parmDefaultDimension(this.currentRecord().mergeDimension(this.projTableRecord().DefaultDimension));
                return;
            }
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmDefaultDimension(this.currentRecord().mergeDimension(this.custAccount_CustTableRecord().DefaultDimension));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimensionValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>DefaultDimension</c> field on a buffer.
    /// </summary>
    /// <param name="_dimension">
    ///    The new dimension value.
    /// </param>
    /// <remarks>
    ///    This method is part of the <c>AxInventSiteDimensionable</c> interface and is called from the
    ///    <c>InventSiteDimensionLink</c> class.
    /// </remarks>
    public void setDefaultDimensionValue(DimensionDefault _dimension)
    {
        this.setField(fieldNum(SalesTable, DefaultDimension), _dimension);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDate</Name>
				<Source><![CDATA[
    protected void setDeliveryDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DeliveryDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryName</Name>
				<Source><![CDATA[
    protected void setDeliveryName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DeliveryName)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.axLogisticsLocation() &&
                this.axLogisticsLocation().parmDescription())
            {
                this.parmDeliveryName(this.axLogisticsLocation().parmDescription());
            }
            else
            {
                this.parmDeliveryName(this.custAccount_CustTableRecord().name());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryPostalAddress</Name>
				<Source><![CDATA[
    protected void setDeliveryPostalAddress()
    {
        LogisticsLocation       location;
        LogisticsLocationEntity locationEntity;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DeliveryPostalAddress)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            if (!this.parmDeliveryPostalAddress())
            {
                this.parmDeliveryPostalAddress(this.agreementHeaderDefaultRecord().DeliveryPostalAddress);
            }
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.parmCustAccount())
            {
                location = LogisticsLocationDefault::findSimpleDefault(this.custAccount_CustTableRecord(),
                            LogisticsLocationRole::findBytype(LogisticsLocationRoleType::Delivery));
                if (location)
                {
                    locationEntity = LogisticsLocationEntity::constructFromLocationRecId(location.RecId);
                    this.parmDeliveryPostalAddress(locationEntity.getPostalAddress().RecId);
                }
                return;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimension</Name>
				<Source><![CDATA[
    protected void setDimension()
    {
        MCRDefaultDimensions mcrDefaultDimensions;
        SysDictField    sysDictField;
        int             array;
        int             arraySize;

        boolean         allDimensionsAreSet = true;

        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        sysDictField = this.sysDictFieldFind(fieldNum(SalesTable, DefaultDimension));
        arraySize = sysDictField.arraySize() ;
        for (array = 1; array <= arraySize && allDimensionsAreSet ; array++)
        {
            if (!this.isFieldSet(new SysDictField(sysDictField.tableid(), sysDictField.id(), array).id()))
            {
                allDimensionsAreSet = false;
            }
        }

        if (allDimensionsAreSet)
        {
            return;
        }

        this.inventSiteDimensionLink().axSetDefaultDimension(this);

        if (this.projTableRecord())
        {
            this.setSalesType();

            if (this.parmSalesType() == SalesType::ItemReq)
            {
                if (this.isFieldSet(fieldNum(SalesTable, SalesType)))
                {
                    // Get the new dimensions based on the hierarchy.
                    mcrDefaultDimensions = MCRDefaultDimensions::construct(this.salesTable());
                    mcrDefaultDimensions.setDefaultDimensions();
                    return;
                }
            }
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            // Get the new dimensions based on the hierarchy.
            mcrDefaultDimensions = MCRDefaultDimensions::construct(this.salesTable());
            mcrDefaultDimensions.setDefaultDimensions();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method so that all of the fields that are
    ///    entity specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldNum(SalesTable, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvMode</Name>
				<Source><![CDATA[
    protected void setDlvMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DlvMode)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmDlvMode(this.agreementHeaderDefaultRecord().DeliveryMode);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.shipCarrier_ShipCarrierAddressRecord().DlvModeId)
            {
                this.parmDlvMode(this.shipCarrier_ShipCarrierAddressRecord().DlvModeId);
            }
            else
            {
                this.parmDlvMode(this.custAccount_CustTableRecord().DlvMode);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvReason</Name>
				<Source><![CDATA[
    protected void setDlvReason()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DlvReason)))
        {
            return;
        }

        this.setCustAccount();

        FieldId fieldId = IntercompanySyncPurchTableDlvReasonDefaultedFlight::instance().isEnabled() ?
            fieldNum(SalesTable, CustAccount) : fieldNum(SalesTable, DlvReason);

        if (this.isFieldSet(fieldId))
        {
            this.parmDlvReason(this.custAccount_CustTableRecord().DlvReason);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
    protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, DlvTerm)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmDlvTerm(this.agreementHeaderDefaultRecord().DeliveryTerm);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.shipCarrier_ShipCarrierAddressRecord().DlvTermId)
            {
                this.parmDlvTerm(this.shipCarrier_ShipCarrierAddressRecord().DlvTermId);
            }
            else
            {
                this.parmDlvTerm(this.custAccount_CustTableRecord().DlvTerm);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEInvoiceAccountCode</Name>
				<Source><![CDATA[
    protected void setEInvoiceAccountCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, eInvoiceAccountCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEInvoiceLineSpecific</Name>
				<Source><![CDATA[
    protected void setEInvoiceLineSpecific()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, eInvoiceLineSpec)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEmail</Name>
				<Source><![CDATA[
    protected void setEmail()
    {
        LogisticsLocationEntity location;
        ContactPerson           contactPerson;
        Email                   email;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Email)))
        {
            return;
        }

        this.setContactPersonId();
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, ContactPersonId)) ||
            this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            contactPerson = this.contactPersonRecord();
            if (contactPerson.Party)
            {
                email = contactPerson.email();
            }

            if (email)
            {
                this.parmEmail(email);
            }
            else
            {
                if (this.axLogisticsLocation())
                {
                    location = LogisticsLocationEntity::constructFromLocationRecId(this.axLogisticsLocation().parmRecId());
                    if (location)
                    {
                        this.parmEmail(location.getEmail());
                    }
                }

                if (!this.parmEmail())
                {
                    this.parmEmail(this.custAccount_CustTableRecord().email());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEndDisc</Name>
				<Source><![CDATA[
    protected void setEndDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, EndDisc)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmEndDisc(this.custAccount_CustTableRecord().EndDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnterpriseNumber</Name>
				<Source><![CDATA[
    protected void setEnterpriseNumber()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, EnterpriseNumber)))
        {
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmEnterpriseNumber(this.custAccount_CustTableRecord().getPrimaryRegistrationNumber(TaxRegistrationTypesList::UID, this.parmDeliveryDate()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEstimate</Name>
				<Source><![CDATA[
    protected void setEstimate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Estimate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExportReason</Name>
				<Source><![CDATA[
    protected void setExportReason()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ExportReason)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedDueDate</Name>
				<Source><![CDATA[
    protected void setFixedDueDate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, FixedDueDate)))
        {
            return;
        }

        this.setPayment();

        if (this.isFieldSet(fieldNum(SalesTable, Payment)))
        {
            this.parmFixedDueDate(dateNull());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFixedExchRate</Name>
				<Source><![CDATA[
    protected void setFixedExchRate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, FixedExchRate)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmFixedExchRate(this.salesAgreementHeaderDefaultRecord().FixedExchangeRate);
            return;
        }

        this.setCurrencyCode();

        if (this.isFieldSet(fieldNum(SalesTable, CurrencyCode)))
        {
            this.parmFixedExchRate(0);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the value for the <c>ReportingCurrencyFixedExchRate</c> field.
    /// </summary>
    internal void setReportingCurrencyFixedExchangeRate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReportingCurrencyFixedExchRate)))
        {
            return;
        }

        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmReportingCurrencyFixedExchRate(this.salesAgreementHeaderDefaultRecord().ReportingCurrencyFixedExchRate);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFreightZone</Name>
				<Source><![CDATA[
    protected void setFreightZone()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, FreightZone)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmFreightZone(this.custAccount_CustTableRecord().FreightZone);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setGiroType</Name>
				<Source><![CDATA[
    protected void setGiroType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, GiroType)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmGiroType(this.custAccount_CustTableRecord().GiroType);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInclTax</Name>
				<Source><![CDATA[
    protected void setInclTax()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InclTax)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmInclTax(this.custAccount_CustTableRecord().InclTax);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyAllowIndirectCreation</Name>
				<Source><![CDATA[
    protected void setInterCompanyAllowIndirectCreation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyAllowIndirectCreation)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyAllowIndirectCreationOrig</Name>
				<Source><![CDATA[
    protected void setInterCompanyAllowIndirectCreationOrig()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyAllowIndirectCreationOrig)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyAutoCreateOrders</Name>
				<Source><![CDATA[
    protected void setInterCompanyAutoCreateOrders()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyAutoCreateOrders)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyCompanyId</Name>
				<Source><![CDATA[
    protected void setInterCompanyCompanyId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyCompanyId)))
        {
            return;
        }

        if (this.custAccount_CustTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
            {
                this.parmInterCompanyCompanyId(this.custAccount_CustTableRecord().interCompanyTradingPartnerCompanyID());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyDirectDelivery</Name>
				<Source><![CDATA[
    protected void setInterCompanyDirectDelivery()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyDirectDelivery)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyDirectDeliveryOrig</Name>
				<Source><![CDATA[
    protected void setInterCompanyDirectDeliveryOrig()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyDirectDeliveryOrig)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOrder</Name>
				<Source><![CDATA[
    protected void setInterCompanyOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyOrder)))
        {
            return;
        }

        if (this.custAccount_CustTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
            {
                this.parmInterCompanyOrder(this.custAccount_CustTableRecord().interCompanyTradingRelationActive());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInterCompanyOrigin</Name>
				<Source><![CDATA[
    protected void setInterCompanyOrigin()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InterCompanyOrigin)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntrastatFulfillmentDate_HU</Name>
				<Source><![CDATA[
    protected void setIntrastatFulfillmentDate_HU()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, IntrastatFulfillmentDate_HU)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventLocationId</Name>
				<Source><![CDATA[
    protected void setInventLocationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InventLocationId)))
        {
            return;
        }

        this.setCustAccount();
        this.setInventSiteId();

        if (!this.parmInventSiteId() || this.parmInventSiteId() == this.custAccount_CustTableRecord().InventSiteId)
        {
            if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
            {
                this.parmInventLocationId(this.custAccount_CustTableRecord().InventLocation);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventSiteId</Name>
				<Source><![CDATA[
    protected void setInventSiteId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InventSiteId)))
        {
            return;
        }

        this.setCustAccount();
        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmInventSiteId(this.custAccount_CustTableRecord().InventSiteId);
        }

        if (!this.parmInventSiteId())
        {
            this.setInventLocationId();
            if (this.isFieldSet(fieldNum(SalesTable, InventLocationId)))
            {
                this.parmInventSiteId(InventLocation::find(this.parmInventLocationId()).InventSiteId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceAccount</Name>
				<Source><![CDATA[
    protected void setInvoiceAccount()
    {
        CustTable   custTable;

        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InvoiceAccount)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord()
         && this.salesAgreementHeaderDefaultRecord().CustomerInvoiceAccount
        )
        {
            this.parmInvoiceAccount(this.salesAgreementHeaderDefaultRecord().CustomerInvoiceAccount);
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, ProjId)))
            {
                custTable   = CustTable::find(ProjFundingSource::findCustAccount(this.projTableRecord().ProjInvoiceProjId).CustAccount);
                this.parmInvoiceAccount(custTable.InvoiceAccount ? custTable.InvoiceAccount : custTable.AccountNum);
            }
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmInvoiceAccount(this.custAccount_CustTableRecord().InvoiceAccount ? this.custAccount_CustTableRecord().InvoiceAccount : this.custAccount_CustTableRecord().AccountNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInvoiceRegister_LT</Name>
				<Source><![CDATA[
    protected void setInvoiceRegister_LT()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, InvoiceAutoNumbering_LT)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLanguageId</Name>
				<Source><![CDATA[
    protected void setLanguageId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, LanguageId)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmLanguageId(DirPartyTable::findRec(this.custAccount_CustTableRecord().Party).LanguageId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, LineDisc)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmLineDisc(this.custAccount_CustTableRecord().LineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setListcode</Name>
				<Source><![CDATA[
    protected void setListcode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Listcode)))
        {
            return;
        }
        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, ProjId)))
            {
                this.parmListcode(this.projTableRecord().projInvoice().ListCodeId);
            }
            return;
        }

        this.setDeliveryPostalAddress();
        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, DeliveryPostalAddress))  ||
            this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            // For intercompany sales order, EU sales list code should be from customer address, not the address from intercompany order address.
            if (salesTable.InterCompanyCompanyId && salesTable.InterCompanyOrder)
            {
                this.parmListcode(EUSalesList::resolveListCodeByCountryState(salesTable.custTable_CustAccount().postalAddress()));
            }
            else
            {
                this.parmListcode(EUSalesList::resolveListCodeByCountryState(salesTable.deliveryAddress()));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMarkupGroup</Name>
				<Source><![CDATA[
    protected void setMarkupGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, MarkupGroup)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmMarkupGroup(this.agreementHeaderDefaultRecord().MiscChargeGroup);
            return;
        }
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmMarkupGroup(this.custAccount_CustTableRecord().MarkupGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMatchingAgreement</Name>
				<Source><![CDATA[
    protected void setMatchingAgreement()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, MatchingAgreement)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMCROrderStopped</Name>
				<Source><![CDATA[
    protected void setMCROrderStopped()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, MCROrderStopped)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLineDisc</Name>
				<Source><![CDATA[
    protected void setMultiLineDisc()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, MultiLineDisc)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmMultiLineDisc(this.custAccount_CustTableRecord().MultiLineDisc);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNatureOfAssessee_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>NatureOfAssessee_IN</c> in the table.
    /// </summary>
    protected void setNatureOfAssessee_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, NatureOfAssessee_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setNumberSequenceGroup</Name>
				<Source><![CDATA[
protected void setNumberSequenceGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, NumberSequenceGroup)))
        {
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            this.parmNumberSequenceGroup(this.invoiceAccount_CustTableRecord().NumberSequenceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOneTimeCustomer</Name>
				<Source><![CDATA[
    protected void setOneTimeCustomer()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, CashDisc)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPackingSlipRegister_LT</Name>
				<Source><![CDATA[
    protected void setPackingSlipRegister_LT()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PackingSlipAutoNumbering_LT)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPayment</Name>
				<Source><![CDATA[
    protected void setPayment()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Payment)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmPayment(this.agreementHeaderDefaultRecord().PaymentTerms);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            this.parmPayment(this.invoiceAccount_CustTableRecord().PaymTermId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymentSched</Name>
				<Source><![CDATA[
    protected void setPaymentSched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PaymentSched)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmPaymentSched(this.agreementHeaderDefaultRecord().PaymentSchedule);
            return;
        }

        this.setPayment();
        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, Payment))  ||
            this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            if (this.invoiceAccount_CustTableRecord().PaymSched)
            {
                this.parmPaymentSched(this.invoiceAccount_CustTableRecord().PaymSched);
            }
            else
            {
                this.parmPaymentSched(this.paymTermRecord().PaymSched);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymMode</Name>
				<Source><![CDATA[
    protected void setPaymMode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PaymMode)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmPaymMode(this.salesAgreementHeaderDefaultRecord().CustomerMethodOfPayment);
            return;
        }

        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            this.parmPaymMode(this.invoiceAccount_CustTableRecord().PaymMode);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPaymSpec</Name>
				<Source><![CDATA[
    protected void setPaymSpec()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PaymSpec)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmPaymSpec(this.salesAgreementHeaderDefaultRecord().CustomerPaymentSpec);
            return;
        }
        this.setInvoiceAccount();

        if (this.isFieldSet(fieldNum(SalesTable, InvoiceAccount)))
        {
            this.parmPaymSpec(this.invoiceAccount_CustTableRecord().PaymSpec);
            return;
        }

        this.setPaymMode();

        if (this.isFieldSet(fieldNum(SalesTable, PaymMode)))
        {
            this.parmPaymSpec('');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsBatchAttribAutoRes</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to set the salesTable
    /// PdsBatchAttribAutoRes field value.
    /// </summary>
    /// <remarks>
    /// Process 3.1 Batch Attrib Enhancement
    /// <syntax>
    /// protected void setPdsBatchAttribAutoRes()
    /// </syntax>
    /// </remarks>
    protected void setPdsBatchAttribAutoRes()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PdsBatchAttribAutoRes)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsCustRebateGroupId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsCustRebateGroupId</c> field.
    /// </summary>
    protected void setPdsCustRebateGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PdsCustRebateGroupId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPdsRebateProgramTMAGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PdsRebateProgramTMAGroup</c> field.
    /// </summary>
    protected void setPdsRebateProgramTMAGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PdsRebateProgramTMAGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPhone</Name>
				<Source><![CDATA[
    protected void setPhone()
    {
        if (!AxSalesTableConsiderPhoneDefaultingFlight::instance().isEnabled()
            || this.isMethodExecuted(funcName(), fieldNum(SalesTable, Phone)))
        {
            return;
        }

        this.setContactPersonId();
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, ContactPersonId)) ||
            this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            ContactPerson contactPerson = this.contactPersonRecord();

            this.parmPhone(contactPerson.Party ? 
                contactPerson.phone() : this.custAccount_CustTableRecord().phone());

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPostingProfile</Name>
				<Source><![CDATA[
    protected void setPostingProfile()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PostingProfile)))
        {
            return;
        }
        this.parmPostingProfile(CustParameters::find().PostingProfile);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceGroupId</Name>
				<Source><![CDATA[
    protected void setPriceGroupId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PriceGroupId)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmPriceGroupId(this.custAccount_CustTableRecord().PriceGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProjId</Name>
				<Source><![CDATA[
    protected void setProjId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ProjId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.agreementHeaderDefaultRecord())
        {
            this.parmProjId(this.agreementHeaderDefaultRecord().Project);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPurchId</Name>
				<Source><![CDATA[
    protected void setPurchId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, PurchId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationId</Name>
				<Source><![CDATA[
    protected void setQuotationId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, QuotationId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDateConfirmed</Name>
				<Source><![CDATA[
    protected void setReceiptDateConfirmed()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReceiptDateConfirmed)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReceiptDateRequested</Name>
				<Source><![CDATA[
    protected void setReceiptDateRequested()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReceiptDateRequested)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReservation</Name>
				<Source><![CDATA[
    protected void setReservation()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Reservation)))
        {
            return;
        }
        this.parmReservation(this.salesParametersRecord().Reservation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnDeadLine</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReturnDeadLine</c> field.
    /// </summary>
    protected void setReturnDeadLine()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReturnDeadline)))
        {
            return;
        }

        this.setReturnStatus();

        if (this.isFieldSet(fieldNum(SalesTable, ReturnStatus)) && salesTable.ReturnStatus == ReturnStatusHeader::Created)
        {
            this.parmReturnDeadline(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()) + this.salesParametersRecord().ReturnPeriodOfValidity);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnItemNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ReturnItemNum</c> field.
    /// </summary>
    /// <remarks>
    ///    This method determines whether the required fields like <c>SalesType</c> and <c>ReturnStatus</c>
    ///    have been set. If set, the method checks the <c>ReturnItemNum</c>. If it does not exist, it sets
    ///    the <c>ReturnItemNum</c> field from <c>numberSeq</c> table.
    /// </remarks>
    protected void setReturnItemNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReturnItemNum)))
        {
            return;
        }

        this.setSalesType();
        this.setReturnStatus();

        if (salesTable.SalesType == SalesType::ReturnItem)
        {
            if (!salesTable.ReturnItemNum)
            {
                if (this.isSetMethodsCalledFromSave())
                {
                    this.parmReturnItemNum(NumberSeq::newGetNum(SalesParameters::numRefReturnItemNum()).num());
                }
            }
        }

        if (salesTable.SalesType == SalesType::Journal && salesTable.ReturnStatus != ReturnStatusHeader::None)
        {
            if (!salesTable.ReturnItemNum)
            {
                if (this.isSetMethodsCalledFromSave())
                {
                    this.parmReturnItemNum(NumberSeq::newGetNum(SalesParameters::numRefReturnItemNum()).num());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnReasonCodeId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ReturnReasonCodeId</c> field.
    /// </summary>
    protected void setReturnReasonCodeId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReturnReasonCodeId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnReplacementId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ReturnReplacementId</c> field.
    /// </summary>
    protected void setReturnReplacementId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReturnReplacementId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnStatus</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value of the <c>ReturnStatus</c> field.
    /// </summary>
    protected void setReturnStatus()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ReturnStatus)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesGroup</Name>
				<Source><![CDATA[
    protected void setSalesGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SalesGroup)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmSalesGroup(this.salesAgreementHeaderDefaultRecord().CommissionSalesGroup);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmSalesGroup(this.custAccount_CustTableRecord().SalesGroup);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesId</Name>
				<Source><![CDATA[
    protected void setSalesId()
    {
        NumberSequenceReference numberSequenceReference;

        if (this.isMethodExecuted(funcName()))
        {
            return;
        }

        if (this.isSetMethodsCalledFromSave())
        {
            if (this.isFieldSetExternally(fieldNum(SalesTable, SalesId))
                && (!MCROrderParameters::isCallCenterEnabledAndInUse()
                || !this.mcrSkipSalesIdValidation())
                )
            {
                if (!this.salesTable())
                {
                    numberSequenceReference = SalesParameters::numRefSalesId();
                    this.checkNumber(numberSequenceReference.numberSequenceTable(),fieldNum(SalesTable,SalesId),this.parmSalesId());
                    if (numberSequenceReference.NumberSequenceId && numberSequenceReference.numberSequenceTable().Continuous)
                    {
                        NumberSeq::newReserveNum(numberSequenceReference).reserve(this.parmSalesId());
                    }
                }
            }
            else
            {
                if (this.isFieldSet(fieldNum(SalesTable, SalesId)))
                {
                    return;
                }

                if (!this.parmSalesId())
                {
                    this.parmSalesId(NumberSeq::newGetNum(SalesParameters::numRefSalesId()).num());
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesName</Name>
				<Source><![CDATA[
    protected void setSalesName()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SalesName)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.parmSalesName(this.custAccount_CustTableRecord().name());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPoolId</Name>
				<Source><![CDATA[
    protected void setSalesPoolId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SalesPoolId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmSalesPoolId(this.salesAgreementHeaderDefaultRecord().SalesPool);
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.custAccount_CustTableRecord().SalesPoolId)
            {
                this.parmSalesPoolId(this.custAccount_CustTableRecord().SalesPoolId);
            }
            else
            {
                this.parmSalesPoolId(this.salesParametersRecord().SalesPoolId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesType</Name>
				<Source><![CDATA[
    protected void setSalesType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SalesType)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesUnitId</Name>
				<Source><![CDATA[
    protected void setSalesUnitId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SalesUnitId)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmSalesUnitId(this.salesAgreementHeaderDefaultRecord().SalesUnit);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierAccount</Name>
				<Source><![CDATA[
    protected void setShipCarrierAccount()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierAccountCode</Name>
				<Source><![CDATA[
    protected void setShipCarrierAccountCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShipCarrierAccountCode)))
        {
            return;
        }

        this.parmShipCarrierAccountCode(DlvMode::find(salesTable.DlvMode).ShipCarrierAccountCode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierDlvType</Name>
				<Source><![CDATA[
    protected void setShipCarrierDlvType()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShipCarrierDlvType)))
        {
            return;
        }

        this.parmShipCarrierDlvType(DlvMode::find(salesTable.DlvMode).ShipCarrierDlvType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierExpeditedShipment</Name>
				<Source><![CDATA[
    protected void setShipCarrierExpeditedShipment()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShipCarrierExpeditedShipment)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierId</Name>
				<Source><![CDATA[
    protected void setShipCarrierId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShipCarrierId)))
        {
            return;
        }

        this.parmShipCarrierId(DlvMode::find(salesTable.DlvMode).ShipCarrierId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShipCarrierResidential</Name>
				<Source><![CDATA[
    protected void setShipCarrierResidential()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShipCarrierResidential)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateConfirmed</Name>
				<Source><![CDATA[
    protected void setShippingDateConfirmed()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShippingDateConfirmed)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setShippingDateRequested</Name>
				<Source><![CDATA[
    protected void setShippingDateRequested()
    {        
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, ShippingDateRequested)))
        {
            return;
        }

        this.setReceiptDateRequested();
        if (this.isFieldSet(fieldNum(SalesTable, ReceiptDateRequested))
            && !this.parmShippingDateRequested())
        {
            this.parmShippingDateRequested(max(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), this.parmReceiptDateRequested()));
            return;
        }
        this.setDeliveryDate();
        if (this.isFieldSet(fieldNum(SalesTable, DeliveryDate))
            && !this.parmShippingDateRequested())
        {
            this.parmShippingDateRequested(max(DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), this.parmDeliveryDate()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSkipUpdate</Name>
				<Source><![CDATA[
    protected void setSkipUpdate()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SkipUpdate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setsmmCampaignId</Name>
				<Source><![CDATA[
    protected void setsmmCampaignId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SmmCampaignId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setsmmSalesAmountTotal</Name>
				<Source><![CDATA[
    protected void setsmmSalesAmountTotal()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, SmmSalesAmountTotal)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStatProcId</Name>
				<Source><![CDATA[
    protected void setStatProcId()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, StatProcId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStorageDimField</Name>
				<Source><![CDATA[
    public void setStorageDimField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(SalesTable, InventSiteId):         this.setInventSiteId();         break;
            case fieldNum(SalesTable, InventLocationId):     this.setInventLocationId();     break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    protected void setTableFields()
    {
        // <GIN>
        #ISOCountryRegionCodes
        // </GIN>

        super();

        useMapPolicy = false;

        this.setCashDisc();
        this.setCommissionGroup();
        this.setContactPersonId();
        this.setCurrencyCode();
        this.setCustAccount();
        this.setCustGroup();
        this.setDeliveryPostalAddress();
        this.setDeliveryName();
        this.setDefaultDimension();
        this.setDlvMode();
        this.setDlvReason();
        this.setDlvTerm();
        this.setEmail();
        this.setEndDisc();
        this.setEstimate();
        this.setExportReason();
        this.setFreightZone();
        this.setFixedDueDate();
        this.setFixedExchRate();
        this.setReportingCurrencyFixedExchangeRate();
        this.setGiroType();
        this.setInclTax();
        this.setInterCompanyCompanyId();
        this.setInterCompanyOrder();
        this.setInventLocationId();
        this.setInventSiteId();
        this.setInvoiceAccount();
        this.setLanguageId();
        this.setLineDisc();
        this.setListcode();
        this.setMarkupGroup();
        this.setMultiLineDisc();
        this.setNumberSequenceGroup();
        this.setOneTimeCustomer();
        this.setPayment();
        this.setPaymentSched();
        this.setPaymMode();
        this.setPaymSpec();
        this.setPhone();
        this.setPostingProfile();
        this.setPriceGroupId();
        this.setProjId();
        this.setPurchId();
        this.setQuotationId();
        this.setReservation();
        this.setReturnItemNum();
        this.setReturnDeadLine();
        this.setReturnReasonCodeId();
        this.setReturnReplacementId();
        this.setReturnStatus();
        this.setSalesId();
        this.setSalesGroup();
        this.setSalesName();
        this.setSalesPoolId();
        this.setWorkerSalesResponsible();
        this.setSalesType();
        this.setSalesUnitId();
        this.setSkipUpdate();
        this.setStatProcId();
        this.setsmmCampaignId();
        this.setsmmSalesAmountTotal();
        this.setTaxGroup();
        this.setTransactionCode();
        this.setTouched();
        this.setURL();
        this.setVATNum();
        this.setAddressRefTableId();
        this.setAddressRefRecId();
        this.setEnterpriseNumber();
        this.setInterCompanyAutoCreateOrders();
        this.setInterCompanyDirectDelivery();
        this.setInterCompanyDirectDeliveryOrig();
        this.setShippingDateRequested();
        this.setShippingDateConfirmed();
        this.setShipCarrierId();
        this.setShipCarrierAccount();
        this.setShipCarrierAccountCode();
        this.setShipCarrierDlvType();
        this.setReceiptDateRequested();
        this.setReceiptDateConfirmed();
        this.setInterCompanyAllowIndirectCreation();
        this.setInterCompanyAllowIndirectCreationOrig();
        this.setInterCompanyOrigin();
        this.setEInvoiceLineSpecific();
        this.setEInvoiceAccountCode();
        this.setMpsExcludeSalesOrder();

        if (RetailMCRChannelTable::mcrEnableOrderCompletionFindByUser())
        {
            this.setMCROrderStopped();
        }

        this.setCashDiscPercent();
        this.setMatchingAgreement();

        // <GJP>
        if (CustConsInvoiceType_JP::isCustConsInvoiceEnabled())
        {
            this.setConsTarget_JP();
        }
        // </GJP>
        // <GIN>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            if (TaxParameters::find().Customs_IN)
            {
                this.setCustomsExportOrder_IN();
                this.setCustomsShippingBill_IN();
            }
            if (TaxWithholdParameters_IN::checkTaxParameters())
            {
                this.setTCSGroup_IN();
                this.setTCSGroup_IN();
                this.setNatureOfAssessee_IN();
            }
        }
        // </GIN>

        this.setBankDocumentType();

        if (salesTable.returnItem())
        {
            salesTable.setReturnAddressFromInventLocationId(salesTable.InventLocationId);
            this.parmDeliveryName(CompanyInfo::find().name());
        }

        this.setPdsCustRebateGroupId();
        this.setPdsRebateProgramTMAGroup();
        this.setPdsBatchAttribAutoRes();
        // <GEEU>
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoLT, #isoLV]))
        {
            this.setInvoiceRegister_LT();
            this.setPackingSlipRegister_LT();
        }
        // </GEEU>

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, TaxGroup)))
        {
            return;
        }

        if (this.projTableRecord())
        {
            if (this.isFieldSet(fieldNum(SalesTable, ProjId)))
            {
                this.parmTaxGroup(ProjParameters::taxGroupInvoice(salesTable.ProjId));
            }
            return;
        }

        this.setDlvTerm();
        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, DlvTerm)) ||
            this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.axLogisticsLocation())
            {
                this.parmTaxGroup(TaxSales::custTaxGroup(salesTable.DlvTerm,
                                                         this.custAccount_CustTableRecord().TaxGroup,
                                                         this.axLogisticsLocation().parmRecId()));
            }
            else
            {
                this.parmTaxGroup(TaxSales::custTaxGroup(salesTable.DlvTerm, this.custAccount_CustTableRecord().TaxGroup));
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTCSGroup_IN</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>tcsGroup_IN</c> in the table.
    /// </summary>
    protected void setTCSGroup_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, tcsGroup_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTDSGroup_IN</Name>
				<Source><![CDATA[
/// <summary>
    /// Sets the <c>tdsGroup_IN</c> in the table.
    /// </summary>
    protected void setTDSGroup_IN()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, tdsGroup_IN)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTouched</Name>
				<Source><![CDATA[
protected void setTouched()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, Touched)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCode</Name>
				<Source><![CDATA[
    protected void setTransactionCode()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, TransactionCode)))
        {
            return;
        }

        this.setSalesType();

        if (salesTable.SalesType == SalesType::ReturnItem)
        {
            if (this.isFieldSet(fieldNum(SalesTable, SalesType)))
            {
                this.parmTransactionCode(IntrastatParameters::find().DefaultCreditNote);
            }
            return;
        }
        this.parmTransactionCode(IntrastatParameters::find().DefaultSalePurchase);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setURL</Name>
				<Source><![CDATA[
    protected void setURL()
    {
        LogisticsLocationEntity location;
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, url)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            if (this.axLogisticsLocation())
            {
                location = LogisticsLocationEntity::constructFromLocationRecId(this.axLogisticsLocation().parmRecId());
                if (location)
                {
                    this.parmURL(location.getURL());
                }
            }
            if (!this.parmURL())
            {
                this.parmURL(this.custAccount_CustTableRecord().url());
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVATNum</Name>
				<Source><![CDATA[
    protected void setVATNum()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, vatNum)))
        {
            return;
        }

        this.setCustAccount();

        if (this.isFieldSet(fieldNum(SalesTable, CustAccount)))
        {
            this.custAccount_CustTableRecord().copyPrimaryRegistrationNumberToVATMap(this.salesTable(), this.parmDeliveryDate());
            this.parmVATNum(this.salesTable().VATNum);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setWorkerSalesResponsible</Name>
				<Source><![CDATA[
    protected void setWorkerSalesResponsible()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, WorkerSalesResponsible)))
        {
            return;
        }

        this.setMatchingAgreement();
        if (this.salesAgreementHeaderDefaultRecord())
        {
            this.parmWorkerSalesResponsible(this.salesAgreementHeaderDefaultRecord().WorkerSalesResponsible);
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMpsExcludeSalesOrder</Name>
				<Source><![CDATA[
    protected void setMpsExcludeSalesOrder()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(SalesTable, MpsExcludeSalesOrder)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canSetProjDefaultDimension</Name>
				<Source><![CDATA[
    protected boolean canSetProjDefaultDimension()
    {
        return this.parmSalesType() == SalesType::ItemReq
            && this.isFieldSet(fieldNum(SalesTable, SalesType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>shipCarrier_ShipCarrierAddressRecord</Name>
				<Source><![CDATA[
    private ShipCarrierAddress shipCarrier_ShipCarrierAddressRecord(ShipCarrierAddress _shipCarrierAddress = null)
    {
        LogisticsPostalAddress  logisticsPostalAddress;
        ShipCarrierAddress      shipCarrierAddress;

        if (!shipCarrierAddressIdx)
        {
            shipCarrierAddressIdx = this.nextCacheIdx();
        }

        if (!prmisDefault(_shipCarrierAddress))
        {
            this.tableCacheInsert(shipCarrierAddressIdx, _shipCarrierAddress);
            shipCarrierAddress = _shipCarrierAddress;
        }
        else
        {
            if (this.tableCacheExist(shipCarrierAddressIdx))
            {
                shipCarrierAddress = this.tableCacheLookup(shipCarrierAddressIdx);
            }
            else
            {
                this.setCustAccount();

                logisticsPostalAddress = LogisticsPostalAddress::findRecId(this.parmDeliveryPostalAddress());
                shipCarrierAddress = ShipCarrierAddress::findByCustomerLocation(this.parmCustAccount(), logisticsPostalAddress.Location);

                this.tableCacheInsert(shipCarrierAddressIdx, shipCarrierAddress);
            }
        }

        return shipCarrierAddress;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static AxSalesTable construct()
    {
        return new AxSalesTable();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructValidateInput</Name>
				<Source><![CDATA[
    static AxSalesTable constructValidateInput(SalesTable _salesTable)
    {
        AxSalesTable axSalesTable = AxSalesTable::newValidateInput();
        axSalesTable.salesTable(_salesTable);

        return axSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSalesTable</Name>
				<Source><![CDATA[
    public static AxSalesTable newSalesTable(SalesTable _salesTable)
    {
        AxSalesTable axSalesTable = AxSalesTable::construct();
        axSalesTable.salesTable(_salesTable);

        return axSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newValidateInput</Name>
				<Source><![CDATA[
    static AxSalesTable newValidateInput()
    {
        AxSalesTable axSalesTable = new AxSalesTable();
        axSalesTable.validateInput(true);
        return axSalesTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>write</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Saves the record.
    /// </summary>
    protected void write()
    {
        if (axSalesTableIdx_RU)
        {
            SysExtensionSerializerExtensionMap sysExtensionSerializerExtensionMap = this.axSalesTable_RU().currentRecord();

            salesTable.SysExtensionSerializerMap::packExtensionTable(sysExtensionSerializerExtensionMap);
        }

        super();
        
        if (axSalesTableIdx_RU)
        {
            if (this.axSalesTable_RU().parmSalesTable() != salesTable.salesTable_RU().RecId ||
                this.axSalesTable_RU().currentRecord().recVersion != salesTable.salesTable_RU().recVersion)
            {
                this.classCacheDelete(axSalesTableIdx_RU);
            }
            else
            {
                if (this.axSalesTable_RU().parmSalesTable() == 0)
                {
                    this.axSalesTable_RU().parmSalesTable(this.parmRecId());
                }
                this.axSalesTable_RU().save();
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>