<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdYearlyRptUIBuilder_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxWithholdYearlyRptUIBuilder_SA</c> class is a report dialog UI builder class that is used
/// by the Saudi Arabia yearly withholding tax report.
/// </summary>
public class TaxWithholdYearlyRptUIBuilder_SA extends SrsReportDataContractUIBuilder
{
    DialogField             fiscalYearCtrl;

    TaxWithholdYearlyRptRdlContract_SA contract;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the report default parameters.
    /// </summary>
    public void build()
    {
        Dialog      dialoglocal = this.dialog();
        DialogGroup withholdingTaxdetails;

        contract = this.getRdlContractInfo().dataContractObject() as TaxWithholdYearlyRptRdlContract_SA;
        withholdingTaxdetails = dialoglocal.addGroup("@SYS342871");

        fiscalYearCtrl = dialoglocal.addFieldValue(extendedTypeStr(FiscalYearName), contract.parmTaxWithholdYear());
        fiscalYearCtrl.registerOverrideMethod(methodStr(FormStringControl, lookup),
                                              methodStr(TaxWithholdYearlyRptUIBuilder_SA, fiscalYearLookup), this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalYearLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the user with a drop-down lookup for the current ledger fiscal year with a from date and
    /// an end date.
    /// </summary>
    /// <param name="_formStringControl">
    /// A form string control.
    /// </param>
    public void fiscalYearLookup(FormStringControl _formStringControl)
    {
        Query                   query = new Query();
        QueryBuildDataSource    fiscalCalendarYearDs;
        QueryBuildRange         fiscalCalendarRange;
        SysTableLookup          sysTableLookup;

        // Create an instance of SysTableLookup using the specified control.
        sysTableLookup = SysTableLookup::newParameters(tableNum(FiscalCalendarYear), _formStringControl);

        // Adding fiscal calendar year fields to be shown in the lookup
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, Name));
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, StartDate));
        sysTableLookup.addLookupfield(fieldNum(FiscalCalendarYear, EndDate));

        // Restricting the fiscal calendar years to the fiscal calendar of the current ledger.
        fiscalCalendarYearDs = query.addDataSource(tableNum(FiscalCalendarYear));
        fiscalCalendarRange  = fiscalCalendarYearDs.addRange(fieldNum(FiscalCalendarYear, FiscalCalendar));
        fiscalCalendarRange.value(int642str(Ledger::fiscalCalendar()));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Passes user input to a report data contract class.
    /// </summary>
    public void getFromDialog()
    {
        super();
        contract.parmTaxWithholdYear(fiscalYearCtrl.value());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>