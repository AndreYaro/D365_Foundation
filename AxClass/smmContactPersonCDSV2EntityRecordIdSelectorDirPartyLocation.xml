<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmContactPersonCDSV2EntityRecordIdSelectorDirPartyLocation</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;

[ExportMetadataAttribute(identifierStr(TableName), tableStr(DirPartyLocation))]
[ExportMetadataAttribute(identifierStr(EntityName), dataentityviewstr(smmContactPersonCDSV2Entity))]
[ExportAttribute(identifierstr(Dynamics.AX.Application.IBusinessEventsTableToEntityRecordIdSelector))]
internal final class smmContactPersonCDSV2EntityRecordIdSelectorDirPartyLocation implements IBusinessEventsTableToEntityRecordIdSelector
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEntityRecordIdsImpactedByTableChange</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public List getEntityRecordIdsImpactedByTableChange(BusinessEventsDefinition _eventDefinition, BusinessEventsActions _changeType, RecId _changedRecordId)
    {
        List impactedRecIds = new List(Types::Int64);

        ContactPerson contactPerson;
        DirPartyLocation partyLocation;

        // Only the primary postal address location is mapped.
        select firstonly RecId from contactPerson
            exists join partyLocation
            where partyLocation.RecId == _changedRecordId
                && partyLocation.IsPrimary == NoYes::Yes
                && partyLocation.IsPostalAddress == NoYes::Yes
                && partyLocation.Party == contactPerson.Party;

        if (contactPerson)
        {
            impactedRecIds.addEnd(contactPerson.RecId);
        }

        return impactedRecIds;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>