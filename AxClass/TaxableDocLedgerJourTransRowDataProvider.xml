<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxableDocLedgerJourTransRowDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Row data provider for ledger journal trans.
/// </summary>
public class TaxableDocLedgerJourTransRowDataProvider extends TaxableDocumentRowDataProviderLine
{
    LedgerJournalTrans ledgerJournalTrans;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillInFields</Name>
				<Source><![CDATA[
    public void fillInFields(TaxableDocumentLineObject _lineObj)
    {
        TaxModelDocLineJournalImpl      taxModelDocLineJournalImpl;

        super(_lineObj);

        if (taxModelTaxable is TaxModelDocLineJournalImpl)
        {
            taxModelDocLineJournalImpl = taxModelTaxable as TaxModelDocLineJournalImpl;
            this.addFieldValue(_lineObj, TaxEngineModelFields::ShouldSkip, taxModelDocLineJournalImpl.shouldSkipForTaxDocumentRow());
            this.addFieldValue(_lineObj, TaxEngineModelFields::Prepayment, taxModelDocLineJournalImpl.getPrepayment());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValidFields</Name>
				<Source><![CDATA[
    protected void initValidFields()
    {
        super();

        validFields.add(TaxEngineModelFields::Prepayment, Types::Enum, enumNum(NoYes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initMainTable</Name>
				<Source><![CDATA[
    protected void initMainTable()
    {
        ledgerJournalTrans = mainRecord as LedgerJournalTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLineType</Name>
				<Source><![CDATA[
    protected TaxableDocumentLineType getLineType()
    {
        if (ledgerJournalTrans.TransactionType == LedgerTransType::Fee)
        {
            return TaxableDocumentLineType::MiscChargeLine;
        }
        else
        {
            return super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportingCurrencyExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets reporting currency exchange rate
    /// </summary>
    /// <returns>
    /// Reporting currency exchange rate
    /// </returns>
    [Replaceable]
    protected ExchRate getReportingCurrencyExchangeRate(TaxableDocumentLineObject _lineObj)
    {
        return ledgerJournalTrans.ReportingCurrencyExchRate ? ledgerJournalTrans.ReportingCurrencyExchRate / 100 : super(_lineObj);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingCurrencyExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets accounting currency exchange rate
    /// </summary>
    /// <returns>
    /// Accounting currency exchange rate
    /// </returns>
    [Replaceable]
    protected ExchRate getAccountingCurrencyExchangeRate(TaxableDocumentLineObject _lineObj)
    {
        return ledgerJournalTrans.ExchRate ? ledgerJournalTrans.ExchRate / 100 : super(_lineObj);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>