<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSPostPackingSlipAction</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSPostPackingSlipAction</c> class is used to encapsulate logic for posting of packing slips for different sources.
/// </summary>
public abstract class WHSPostPackingSlipAction
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </summary>
    /// <param name = "_common">
    /// <c>Common</c> used for this instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </returns>
    public static WHSPostPackingSlipAction newFromBuffer(Common _common)
    {
        SysTableNameFactoryAttribute attribute = new SysTableNameFactoryAttribute(tableId2Name(_common.TableId));
        WHSPostPackingSlipAction     instance  = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(WHSPostPackingSlipAction), attribute) as WHSPostPackingSlipAction;

        if (!instance)
        {
            throw error(strFmt("@SYS23455",funcName()));
        }

        instance.initFromBuffer(_common);

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBufferAndArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </summary>
    /// <param name = "_common">
    /// <c>Common</c> used for this instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </param>
    /// <param name = "_salesPackingSlipPostArgs">
    /// Packing slip posting parameters.
    /// </param>
    /// <returns>
    /// A new instance of the <c>WHSPostPackingSlipAction</c> class.
    /// </returns>
    public static WHSPostPackingSlipAction newFromBufferAndArgs(Common _common, WHSSalesPackingSlipPostArgs _salesPackingSlipPostArgs)
    {
        WHSPostPackingSlipAction instance = WHSPostPackingSlipAction::newFromBuffer(_common);

        instance.initFromArgs(_salesPackingSlipPostArgs);

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canPackingSlipBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if a packing slip can be posted.
    /// </summary>
    /// <returns>
    /// true if packing slip can be posted; otherwise, false
    /// </returns>
    public abstract boolean canPackingSlipBePosted()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPackingSlipEnabledForBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if post packing slip button should be enabled.
    /// </summary>
    /// <param name="_common">
    /// <c>Common</c> buffer for which we want to generate packing slip.
    /// </param>
    /// <returns>
    /// true if post packing slip button should be enabled; otherwise, false
    /// </returns>
    public static boolean isPackingSlipEnabledForBuffer(Common _common)
    {
        switch (_common.TableId)
        {
            case tableNum(WHSContainerTable):
                WHSContainerTable containerTable = _common as WHSContainerTable;

                return containerTable.ContainerId
                    && WHSPostPackingSlipAction::isPackingSlipEnabledForShipment(WHSShipmentTable::find(containerTable.ShipmentId));

            case tableNum(WHSShipmentTable):
                WHSShipmentTable shipmentTable = _common as WHSShipmentTable;
                
                return WHSPostPackingSlipAction::isPackingSlipEnabledForShipment(shipmentTable);

            default:
                return WHSPostPackingSlipAction::newFromBuffer(_common).canPackingSlipBePosted();
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instance of a table.
    /// </summary>
    /// <param name = "_common">
    /// <c>Common</c> buffer used for this instance of the table.
    /// </param>
    public abstract void initFromBuffer(Common _common)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes from sales slip posting parameters.
    /// </summary>
    /// <param name = "_salesPackingSlipPostArgs">
    /// Sales packing slip posting parameters.
    /// </param>
    protected void initFromArgs(WHSSalesPackingSlipPostArgs _salesPackingSlipPostArgs)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPackingSlipEnabledForShipment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine if post packing slip button should be enabled for a <c>WHSShipmentTable</c> record.
    /// </summary>
    /// <param name = "_shipmentTable">
    /// <c>WHSShipmentTable</c> record for which we want to generate packing slip.
    /// </param>
    /// <returns>
    /// true if post packing slip button should be enabled; otherwise, false
    /// </returns>
    private static boolean isPackingSlipEnabledForShipment(WHSShipmentTable _shipmentTable)
    {
        WHSLoadTable loadTable = WHSLoadTable::find(_shipmentTable.LoadId);

        return _shipmentTable.ShipmentId
                    && loadTable.displayShipment() != ''
                    && WHSPostPackingSlipAction::newFromBuffer(loadTable).canPackingSlipBePosted();
    }

]]></Source>
			</Method>
			<Method>
				<Name>whsPackingSlipType</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to return the packing slip type of <c>Common</c> buffer.
    /// </summary>
    /// <returns>
    /// The packing slip type of <c>Common</c> buffer.
    /// </returns>
    public abstract WHSPackingSlipType whsPackingSlipType()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCanPackingSlipBePosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates if a packing slip can be posted for a given <c>Common</c> buffer.
    /// </summary>
    /// <returns>
    /// true if packing slip can be posted; otherwise, false
    /// </returns>
    public abstract boolean validateCanPackingSlipBePosted()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>