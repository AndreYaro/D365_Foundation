<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>tmsDeliveryModeSyncAgentPurch</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Synchronizes TMS specific delivery mode data from purchase order header.
/// </summary>
class tmsDeliveryModeSyncAgentPurch extends TMSDeliveryModeSyncAgent
{
    PurchTable purchTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPurchTable</Name>
				<Source><![CDATA[
    public PurchTable parmPurchTable(PurchTable _purchTable = purchTable)
    {
        purchTable = _purchTable;

        return purchTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data.
    /// </summary>
    /// <param name="_tmsPurchTable">
    /// A table <c>TMSPurchTable</c> that should be synchronized.
    /// </param>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    private void syncData(
        TMSPurchTable   _tmsPurchTable,
        DlvModeId       _deliveryModeId
    )
    {
        _tmsPurchTable.setCarrierFieldsFromDlvMode(_deliveryModeId);

        _tmsPurchTable.write();
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnInsert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the purchase order header is inserted.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnInsert(DlvModeId _deliveryModeId)
    {
        TMSPurchTable   tmsPurchTable;
        Counter         logCount = infologLine();

        try
        {
            ttsbegin;

            tmsPurchTable.initFromPurchTable(purchTable.PurchId);

            this.syncData(tmsPurchTable, _deliveryModeId);

            ttscommit;
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::lastDuplicateKeyViolatingTable() == tmsPurchTable.TableId)
            {
                infolog.clear(logCount);
                this.syncOnUpdate(_deliveryModeId);
            }
            else
            {
                throw Exception::DuplicateKeyException;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncOnUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes TMS specific delivery mode data, when the purchase order header is updated.
    /// </summary>
    /// <param name="_deliveryModeId">
    /// A specified <c>DlvModeId</c> value.
    /// </param>
    public void syncOnUpdate(DlvModeId _deliveryModeId)
    {
        TMSPurchTable tmsPurchTable;

        ttsbegin;

        tmsPurchTable = TMSPurchTable::find(purchTable.PurchId, true);

        if (tmsPurchTable.RecId == 0)
        {
            this.syncOnInsert(_deliveryModeId);
        }
        else
        {
            this.syncData(tmsPurchTable, _deliveryModeId);
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static TMSDeliveryModeSyncAgentPurch construct()
    {
        return new TMSDeliveryModeSyncAgentPurch();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromBuffer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates and initializes a new instance of the <c>TMSDeliveryModeSyncAgentPurch</c> class that is based on a table <c>PurchTable</c>
    /// </summary>
    /// <param name="_purchTable">
    /// A table <c>PurchTable</c> that should be syncronized
    /// </param>
    /// <returns>
    /// A new instance of the <c>TMSDeliveryModeSyncAgentPurch</c> class.
    /// </returns>
    public static TMSDeliveryModeSyncAgentPurch newFromBuffer(PurchTable _purchTable)
    {
        TMSDeliveryModeSyncAgentPurch tmsDeliveryModeSyncAgentPurch;

        tmsDeliveryModeSyncAgentPurch = TMSDeliveryModeSyncAgentPurch::construct();
        tmsDeliveryModeSyncAgentPurch.parmPurchTable(_purchTable);

        return tmsDeliveryModeSyncAgentPurch;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>