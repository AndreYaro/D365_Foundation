<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InterCompanySyncSalesLineType_ReturnItem</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Syncronization engine at order line level for intercompany trade where order lines are customer returns.
/// </summary>
public class InterCompanySyncSalesLineType_ReturnItem extends InterCompanySyncSalesLineType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InterCompanySyncSalesLineType_ReturnItem construct()
    {
        return new InterCompanySyncSalesLineType_ReturnItem();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromSalesLineType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiate a new intercompany synchronization engine for the provided <c>SalesLineType</c> instance.
    /// </summary>
    /// <param name = "_salesLineType">An instance of <c>SalesLineType</c> class representing the sales order line.</param>
    /// <returns>The instantiated instance.</returns>
    public static InterCompanySyncSalesLineType_ReturnItem newFromSalesLineType(SalesLineType _salesLineType)
    {
        InterCompanySyncSalesLineType_ReturnItem syncEngine = InterCompanySyncSalesLineType_ReturnItem::construct();
        syncEngine.initFromSalesLineType(_salesLineType);

        return syncEngine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the purchase order line quantity based on the corresponding sales line field.
    /// </summary>
    protected void setQuantity()
    {
        axPurchLine.parmPurchQty(salesLine.ExpectedRetQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCatchWeightQuantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the purchase order line catch weight quantity based on the corresponding sales line field.
    /// </summary>
    protected void setCatchWeightQuantity()
    {
        axPurchLine.parmPdsCWQty(salesLine.PdsCWExpectedRetQty);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReturnActionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the return action.
    /// </summary>
    protected void setReturnActionId()
    {
        axPurchLine.parmReturnActionId(PurchParameters::find().ReturnActionDefault);        
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOriginalScrapReplacement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the original order line is a return with scrap (and replacement) selected as the return action.
    /// </summary>
    /// <returns>true if the original order line is a return with scrap; otherwise, false.</returns>
    protected boolean isOriginalScrapReplacement()
    {
        if (salesTable.SalesType == SalesType::ReturnItem
            && !salesLine.InterCompanyInventTransId
            && salesLine.returnDispositionCode().createScrap()
            && salesLine.SalesQty > 0)
        {
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>