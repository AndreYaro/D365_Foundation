<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjTableWizardFundingRulesCtrl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class ProjTableWizardFundingRulesCtrl extends ProjTableWizard
{
    ProjInvoiceProjId   invoiceProjId;
    ProjInvoiceProjId   oldInvoiceProjId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createdQtyDB</Name>
				<Source><![CDATA[
    int createdQtyDB()
    {
        return any2int((select count(RecId) from projFundingRule).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createdQtyFile</Name>
				<Source><![CDATA[
    Integer createdQtyFile()
    {
        return any2int((select count(RecId) from projFundingRule
               where projFundingRule.ContractId == this.parmOldInvoiceProjId()).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    static Name description()
    {
        return "@SYS134754";
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDB</Name>
				<Source><![CDATA[
    void insertDB()
    {
        ProjFundingRule             projFundingRuleDB, projFundingRuleFile;
        ProjFundingRuleAllocation   projFundingRuleAllocationDB, projFundingRuleAllocationFile;
        RecId                       fundingRuleRecId;

        ttsbegin;

        while select projFundingRuleFile
            where projFundingRuleFile.ContractId == this.parmOldInvoiceProjId()
        {
            projFundingRuleDB.clear();
            projFundingRuleDB.data(projFundingRuleFile);
            projFundingRuleDB.ContractId = this.parmInvoiceProjId();
            projFundingRuleDB.insert();
            fundingRuleRecId = projFundingRuleDB.RecId;

            while select projFundingRuleAllocationFile
                where projFundingRuleAllocationFile.FundingRule == projFundingRuleFile.RecId
            {
                projFundingRuleAllocationDB.clear();
                projFundingRuleAllocationDB.data(projFundingRuleAllocationFile);
                projFundingRuleAllocationDB.FundingSource = ProjFundingSource::findContractFundingSource(projFundingRuleDB.ContractId,
                                                        ProjFundingSource::find(projFundingRuleAllocationFile.FundingSource).FundingSourceId).RecId;
                projFundingRuleAllocationDB.FundingRule = fundingRuleRecId;
                projFundingRuleAllocationDB.insert();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceProjId</Name>
				<Source><![CDATA[
    ProjInvoiceProjId parmInvoiceProjId(ProjInvoiceProjId    _invoiceProjId = invoiceProjId)
    {
        invoiceProjId  = _invoiceProjId;

        return invoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOldInvoiceProjId</Name>
				<Source><![CDATA[
    public ProjInvoiceProjId parmOldInvoiceProjId(ProjInvoiceProjId _oldInvoiceProjId = oldInvoiceProjId)
    {
        oldInvoiceProjId = _oldInvoiceProjId;

        return oldInvoiceProjId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ProjTableWizardFundingRulesCtrl construct()
    {
        return new ProjTableWizardFundingRulesCtrl();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>