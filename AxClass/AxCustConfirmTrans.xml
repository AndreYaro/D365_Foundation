<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AxCustConfirmTrans</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AxCustConfirmTrans</c> class handles the business logic for the <c>CustConfirmTrans</c>
/// table.
/// </summary>
/// <remarks>
/// This internal <c>AxBC</c> class is derived from the <c>AxInternalBase</c> class.
/// </remarks>
class AxCustConfirmTrans extends AxApplicationBase
{
    CustConfirmTrans custConfirmTrans;
    AxInventDim      axInventDim;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>axInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an instance of the <c>AxInventDim</c> class.
    /// </summary>
    /// <param name="_axInventDim">
    ///    The <c>AxInventDim</c> object to set; optional.
    /// </param>
    /// <returns>
    ///    An instance of the <c>AxInventDim</c> object.
    /// </returns>
    public AxInventDim axInventDim(AxInventDim _axInventDim = axInventDim)
    {
        axInventDim = _axInventDim;

        return axInventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>axOrig</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the original record of the <c>CustConfirmTrans</c> table.
    /// </summary>
    /// <returns>
    ///    The original record of the <c>CustConfirmTrans</c> table.
    /// </returns>
    public AxInternalBase axOrig()
    {
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the buffer for the <c>CustConfirmTrans</c> table.
    /// </summary>
    /// <param name="_custConfirmTrans">
    ///    _<paramref name="custConfirmTrans" /> the specified buffer; optional.
    /// </param>
    /// <returns>
    ///    The current record for the <c>CustConfirmTrans</c> table.
    /// </returns>
    public Common currentRecord(Common _custConfirmTrans = custConfirmTrans)
    {
        if (!prmisdefault(_custConfirmTrans))
        {
            super(_custConfirmTrans);
            custConfirmTrans = _custConfirmTrans as CustConfirmTrans;
        }
        else
        {
            super();
        }

        return custConfirmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custConfirmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Returns the <c>CustConfirmTrans</c> object.
    /// </summary>
    /// <param name="_custConfirmTrans">
    ///    The <c>CustConfirmJour</c> to set; optional.
    /// </param>
    /// <returns>
    ///    The <c>CustConfirmTrans</c> object.
    /// </returns>
    public CustConfirmTrans custConfirmTrans(CustConfirmTrans _custConfirmTrans = custConfirmTrans)
    {
        if (!prmisdefault(_custConfirmTrans))
        {
            this.setCurrentRecordFromExternal(_custConfirmTrans);
        }

        return this.currentRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>emptyRecord</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets an empty record for the <c>CustConfirmTrans</c> table.
    /// </summary>
    /// <returns>
    ///    An empty record for the <c>CustConfirmTrans</c> table.
    /// </returns>
    protected Common emptyRecord()
    {
        CustConfirmTrans localCustConfirmTrans;

        return localCustConfirmTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxCustConfirmTrans</c> class.
    /// </summary>
    public void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmDate</c> parameter.
    /// </summary>
    /// <param name="_confirmDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmDate</c> parameter.
    /// </returns>
    public TransDate parmConfirmDate(TransDate _confirmDate = dateNull())
    {
        if (!prmisdefault(_confirmDate))
        {
            this.setField(fieldnum(CustConfirmTrans, ConfirmDate), _confirmDate);
        }

        return custConfirmTrans.ConfirmDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmConfirmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ConfirmId</c> parameter.
    /// </summary>
    /// <param name="_confirmId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ConfirmId</c> parameter.
    /// </returns>
    public ConfirmId parmConfirmId(ConfirmId _confirmId = '')
    {
        if (!prmisdefault(_confirmId))
        {
            this.setField(fieldnum(CustConfirmTrans, ConfirmId), _confirmId);
        }

        return custConfirmTrans.ConfirmId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>CurrencyCode</c> parameter.
    /// </summary>
    /// <param name="_currencyCode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>CurrencyCode</c> parameter.
    /// </returns>
    public str parmCurrencyCode(str _currencyCode = '')
    {
        DictField   dictField;
        str         currencyCode;

        if (!prmisdefault(_currencyCode))
        {
            dictField = new DictField(tablenum(CustConfirmTrans),fieldnum(CustConfirmTrans,CurrencyCode));
            this.validateInboundCurrencyString(_currencyCode,dictField);

            if (this.valueMappingInbound())
            {
                currencyCode = this.axCurrencyCode(_currencyCode);
            }

            if (currencyCode)
            {
                this.setField(fieldnum(CustConfirmTrans, CurrencyCode), currencyCode);
            }
            else
            {
                this.setField(fieldnum(CustConfirmTrans, CurrencyCode), _currencyCode);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axCurrencyCode(custConfirmTrans.CurrencyCode);
        }
        return custConfirmTrans.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDefaultDimension</Name>
				<Source><![CDATA[
        public DimensionDefault parmDefaultDimension(DimensionDefault _defaultDimension = 0)
    {
        if (!prmisdefault(_defaultDimension))
        {
            this.setField(fieldnum(CustConfirmTrans, DefaultDimension), _defaultDimension);
        }

        return custConfirmTrans.DefaultDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DiscAmount</c> parameter.
    /// </summary>
    /// <param name="_discAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DiscAmount</c> parameter.
    /// </returns>
    public SalesDiscAmount parmDiscAmount(SalesDiscAmount _discAmount = 0)
    {
        if (!prmisdefault(_discAmount))
        {
            this.setField(fieldnum(CustConfirmTrans, DiscAmount), _discAmount);
        }

        return custConfirmTrans.DiscAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DiscPercent</c> parameter.
    /// </summary>
    /// <param name="_discPercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DiscPercent</c> parameter.
    /// </returns>
    public SalesDiscPercent parmDiscPercent(SalesDiscPercent _discPercent = 0)
    {
        if (!prmisdefault(_discPercent))
        {
            this.setField(fieldnum(CustConfirmTrans, DiscPercent), _discPercent);
        }

        return custConfirmTrans.DiscPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>DlvDate</c> parameter.
    /// </summary>
    /// <param name="_dlvDate">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>DlvDate</c> parameter.
    /// </returns>
    public SalesShippingDate parmDlvDate(SalesShippingDate _dlvDate = dateNull())
    {
        if (!prmisdefault(_dlvDate))
        {
            this.setField(fieldnum(CustConfirmTrans, DlvDate), _dlvDate);
        }

        return custConfirmTrans.DlvDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDlvTerm</Name>
				<Source><![CDATA[
        public str parmDlvTerm(str _dlvTerm = '')
    {
        DictField   dictField;

        if (!prmisDefault(_dlvTerm))
        {
            dictField = new DictField(tableNum(CustConfirmTrans), fieldNum(CustConfirmTrans, DlvTerm));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_dlvTerm, dictField, this.mapPolicy().xMLMapDlvTerm());
                _dlvTerm = this.axDlvTermId(_dlvTerm);
            }
            else
            {
                this.validateInboundString(_dlvTerm, dictField);
            }

            this.setField(fieldNum(CustConfirmTrans, DlvTerm), _dlvTerm);
        }

        if (this.valueMappingOutbound())
        {
            return this.axDlvTermId(CustConfirmTrans.DlvTerm);
        }
        return CustConfirmTrans.DlvTerm;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ExternalItemId</c> parameter.
    /// </summary>
    /// <param name="_externalItemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ExternalItemId</c> parameter.
    /// </returns>
    public SalesExternalItemId parmExternalItemId(SalesExternalItemId _externalItemId = '')
    {
        if (!prmisdefault(_externalItemId))
        {
            this.setField(fieldnum(CustConfirmTrans, ExternalItemId), _externalItemId);
        }

        return custConfirmTrans.ExternalItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventDimId</c> parameter.
    /// </summary>
    /// <param name="_inventDimId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventDimId</c> parameter.
    /// </returns>
    public InventDimId parmInventDimId(InventDimId _inventDimId = '')
    {
        if (!prmisdefault(_inventDimId))
        {
            this.setField(fieldnum(CustConfirmTrans, InventDimId), _inventDimId);
        }

        return custConfirmTrans.InventDimId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventQty</c> parameter.
    /// </summary>
    /// <param name="_inventQty">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventQty</c> parameter.
    /// </returns>
    public InventQty parmInventQty(InventQty _inventQty = 0)
    {
        if (!prmisdefault(_inventQty))
        {
            this.setField(fieldnum(CustConfirmTrans, InventQty), _inventQty);
        }

        return custConfirmTrans.InventQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>InventTransId</c> parameter.
    /// </summary>
    /// <param name="_inventTransId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>InventTransId</c> parameter.
    /// </returns>
    public TradeInventTransId parmInventTransId(TradeInventTransId _inventTransId = '')
    {
        if (!prmisdefault(_inventTransId))
        {
            this.setField(fieldnum(CustConfirmTrans, InventTransId), _inventTransId);
        }

        return custConfirmTrans.InventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>ItemId</c> parameter.
    /// </summary>
    /// <param name="_itemId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>ItemId</c> parameter.
    /// </returns>
    public str parmItemId(str _itemId = '')
    {
        DictField   dictField;
        str         itemId;
        CustConfirmTrans localCustConfirmTrans = this.currentRecord();

        if (!prmisdefault(_itemId))
        {
            dictField = new DictField(tablenum(CustConfirmTrans),fieldnum(CustConfirmTrans,ItemId));
            this.validateInboundItemIdString(_itemId,dictField);
            if (this.valueMappingInbound())
            {
                itemId = conpeek(this.axSalesItemId('',_itemId),1);
            }

            if (itemId)
            {
                this.setField(fieldnum(CustConfirmTrans, ItemId), itemId);
            }
            else
            {
                this.setField(fieldnum(CustConfirmTrans, ItemId), _itemId);
            }
        }

        if (this.valueMappingOutbound())
        {
            return conpeek(this.axSalesItemId(localCustConfirmTrans.custConfirmJour().OrderAccount, custConfirmTrans.ItemId,custConfirmTrans.inventDim()),1);
        }
        return custConfirmTrans.ItemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineAmount</c> parameter.
    /// </summary>
    /// <param name="_lineAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineAmount</c> parameter.
    /// </returns>
    public AmountCur parmLineAmount(AmountCur _lineAmount = 0)
    {
        if (!prmisdefault(_lineAmount))
        {
            this.setField(fieldnum(CustConfirmTrans, LineAmount), _lineAmount);
        }

        return custConfirmTrans.LineAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineAmountTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineAmountTax</c> parameter.
    /// </summary>
    /// <param name="_lineAmountTax">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineAmountTax</c> parameter.
    /// </returns>
    public LineAmountTax parmLineAmountTax(LineAmountTax _lineAmountTax = 0)
    {
        if (!prmisdefault(_lineAmountTax))
        {
            this.setField(fieldnum(CustConfirmTrans, LineAmountTax), _lineAmountTax);
        }

        return custConfirmTrans.LineAmountTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineDisc</c> parameter.
    /// </summary>
    /// <param name="_lineDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineDisc</c> parameter.
    /// </returns>
    public SalesLineDisc parmLineDisc(SalesLineDisc _lineDisc = 0)
    {
        if (!prmisdefault(_lineDisc))
        {
            this.setField(fieldnum(CustConfirmTrans, LineDisc), _lineDisc);
        }

        return custConfirmTrans.LineDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineHeader</c> parameter.
    /// </summary>
    /// <param name="_lineHeader">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineHeader</c> parameter.
    /// </returns>
    public LineHeader parmLineHeader(LineHeader _lineHeader = '')
    {
        if (!prmisdefault(_lineHeader))
        {
            this.setField(fieldnum(CustConfirmTrans, LineHeader), _lineHeader);
        }

        return custConfirmTrans.LineHeader;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LineNum</c> parameter.
    /// </summary>
    /// <param name="_lineNum">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LineNum</c> parameter.
    /// </returns>
    public LineNum parmLineNum(LineNum _lineNum = 0)
    {
        if (!prmisdefault(_lineNum))
        {
            this.setField(fieldnum(CustConfirmTrans, LineNum), _lineNum);
        }

        return custConfirmTrans.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>LinePercent</c> parameter.
    /// </summary>
    /// <param name="_linePercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>LinePercent</c> parameter.
    /// </returns>
    public SalesLinePercent parmLinePercent(SalesLinePercent _linePercent = 0)
    {
        if (!prmisdefault(_linePercent))
        {
            this.setField(fieldnum(CustConfirmTrans, LinePercent), _linePercent);
        }

        return custConfirmTrans.LinePercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>MultiLnDisc</c> parameter.
    /// </summary>
    /// <param name="_multiLnDisc">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnDisc</c> parameter.
    /// </returns>
    public SalesMultiLnDisc parmMultiLnDisc(SalesMultiLnDisc _multiLnDisc = 0)
    {
        if (!prmisdefault(_multiLnDisc))
        {
            this.setField(fieldnum(CustConfirmTrans, MultiLnDisc), _multiLnDisc);
        }

        return custConfirmTrans.MultiLnDisc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>MultiLnPercent</c> parameter.
    /// </summary>
    /// <param name="_multiLnPercent">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>MultiLnPercent</c> parameter.
    /// </returns>
    public SalesMultiLnPercent parmMultiLnPercent(SalesMultiLnPercent _multiLnPercent = 0)
    {
        if (!prmisdefault(_multiLnPercent))
        {
            this.setField(fieldnum(CustConfirmTrans, MultiLnPercent), _multiLnPercent);
        }

        return custConfirmTrans.MultiLnPercent;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Name</c> parameter.
    /// </summary>
    /// <param name="_name">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Name</c> parameter.
    /// </returns>
    public ItemFreeTxt parmName(ItemFreeTxt _name = '')
    {
        if (!prmisdefault(_name))
        {
            this.setField(fieldnum(CustConfirmTrans, Name), _name);
        }

        return custConfirmTrans.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>OrigSalesId</c> parameter.
    /// </summary>
    /// <param name="_origSalesId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>OrigSalesId</c> parameter.
    /// </returns>
    public SalesIdOrig parmOrigSalesId(SalesIdOrig _origSalesId = '')
    {
        if (!prmisdefault(_origSalesId))
        {
            this.setField(fieldnum(CustConfirmTrans, OrigSalesId), _origSalesId);
        }

        return custConfirmTrans.OrigSalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPdsCWQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method can be call from the AIF framework to get the SalesLine
    /// PdsCWQty field value.
    /// </summary>
    /// <param name="_qty">CW quantity</param>
    /// <returns>CW quantitiy</returns>
    public PdsCWInventQty parmPdsCWQty(PdsCWInventQty _qty = 0)
    {
        if (!prmisDefault(_qty))
        {
            this.setField(fieldNum(CustConfirmTrans, PdsCWQty), _qty);
        }

        return custConfirmTrans.PdsCWQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>PriceUnit</c> parameter.
    /// </summary>
    /// <param name="_priceUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>PriceUnit</c> parameter.
    /// </returns>
    public PriceUnit parmPriceUnit(PriceUnit _priceUnit = 0)
    {
        if (!prmisdefault(_priceUnit))
        {
            this.setField(fieldnum(CustConfirmTrans, PriceUnit), _priceUnit);
        }

        return custConfirmTrans.PriceUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>Qty</c> parameter.
    /// </summary>
    /// <param name="_qty">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>Qty</c> parameter.
    /// </returns>
    public SalesConfirmedQty parmQty(SalesConfirmedQty _qty = 0)
    {
        if (!prmisdefault(_qty))
        {
            this.setField(fieldnum(CustConfirmTrans, Qty), _qty);
        }

        return custConfirmTrans.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesCategory</Name>
				<Source><![CDATA[
        public SalesCategory parmSalesCategory(SalesCategory _salesCategory = 0)
    {
        if (!prmisdefault(_salesCategory))
        {
            this.setField(fieldnum(CustConfirmTrans, SalesCategory), _salesCategory);
        }

        return custConfirmTrans.SalesCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesGroup</c> parameter.
    /// </summary>
    /// <param name="_salesGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesGroup</c> parameter.
    /// </returns>
    public CommissSalesGroup parmSalesGroup(CommissSalesGroup _salesGroup = '')
    {
        if (!prmisdefault(_salesGroup))
        {
            this.setField(fieldnum(CustConfirmTrans, SalesGroup), _salesGroup);
        }

        return custConfirmTrans.SalesGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesId</c> parameter.
    /// </summary>
    /// <param name="_salesId">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesId</c> parameter.
    /// </returns>
    public SalesId parmSalesId(SalesId _salesId = '')
    {
        if (!prmisdefault(_salesId))
        {
            this.setField(fieldnum(CustConfirmTrans, SalesId), _salesId);
        }

        return custConfirmTrans.SalesId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesMarkup</c> parameter.
    /// </summary>
    /// <param name="_salesMarkup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesMarkup</c> parameter.
    /// </returns>
    public SalesMarkup parmSalesMarkup(SalesMarkup _salesMarkup = 0)
    {
        if (!prmisdefault(_salesMarkup))
        {
            this.setField(fieldnum(CustConfirmTrans, SalesMarkup), _salesMarkup);
        }

        return custConfirmTrans.SalesMarkup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesPrice</c> parameter.
    /// </summary>
    /// <param name="_salesPrice">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesPrice</c> parameter.
    /// </returns>
    public SalesPrice parmSalesPrice(SalesPrice _salesPrice = 0)
    {
        if (!prmisdefault(_salesPrice))
        {
            this.setField(fieldnum(CustConfirmTrans, SalesPrice), _salesPrice);
        }

        return custConfirmTrans.SalesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>SalesUnit</c> parameter.
    /// </summary>
    /// <param name="_salesUnit">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>SalesUnit</c> parameter.
    /// </returns>
    public str parmSalesUnit(str _salesUnit = '')
    {
        DictField   dictField;
        str         salesUnit;

        if (!prmisdefault(_salesUnit))
        {
            dictField = new DictField(tablenum(CustConfirmTrans),fieldnum(CustConfirmTrans,SalesUnit));
            if (this.valueMappingInbound())
            {
                this.validateInboundString(_salesUnit,dictField,this.mapPolicy().xmlMapUnitOfMeasureSymbol());
                salesUnit = this.axUnitOfMeasureSymbol(_salesUnit);
            }
            else
            {
                this.validateInboundString(_salesUnit,dictField);
            }
            if (salesUnit)
            {
                this.setField(fieldnum(CustConfirmTrans, SalesUnit), salesUnit);
            }
            else
            {
                this.setField(fieldnum(CustConfirmTrans, SalesUnit), _salesUnit);
            }
        }

        if (this.valueMappingOutbound())
        {
            return this.axUnitOfMeasureSymbol(custConfirmTrans.SalesUnit);
        }
        return custConfirmTrans.SalesUnit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStockedProduct</Name>
				<Source><![CDATA[
        public TradeStockedProduct parmStockedProduct(TradeStockedProduct _stockedProduct = NoYes::Yes)
    {
        if (!prmisdefault(_stockedProduct))
        {
            this.setField(fieldnum(CustConfirmTrans, StockedProduct), _stockedProduct);
        }

        return custConfirmTrans.StockedProduct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxAmount</c> parameter.
    /// </summary>
    /// <param name="_taxAmount">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxAmount</c> parameter.
    /// </returns>
    public TaxAmountCur parmTaxAmount(TaxAmountCur _taxAmount = 0)
    {
        if (!prmisdefault(_taxAmount))
        {
            this.setField(fieldnum(CustConfirmTrans, TaxAmount), _taxAmount);
        }

        return custConfirmTrans.TaxAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxGroup</c> parameter.
    /// </summary>
    /// <param name="_taxGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxGroup</c> parameter.
    /// </returns>
    public TaxGroup parmTaxGroup(TaxGroup _taxGroup = '')
    {
        if (!prmisdefault(_taxGroup))
        {
            this.setField(fieldnum(CustConfirmTrans, TaxGroup), _taxGroup);
        }

        return custConfirmTrans.TaxGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxItemGroup</c> parameter.
    /// </summary>
    /// <param name="_taxItemGroup">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxItemGroup</c> parameter.
    /// </returns>
    public TaxItemGroup parmTaxItemGroup(TaxItemGroup _taxItemGroup = '')
    {
        if (!prmisdefault(_taxItemGroup))
        {
            this.setField(fieldnum(CustConfirmTrans, TaxItemGroup), _taxItemGroup);
        }

        return custConfirmTrans.TaxItemGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTaxWriteCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets or sets the <c>TaxWriteCode</c> parameter.
    /// </summary>
    /// <param name="_taxWriteCode">
    ///    The value to set; optional.
    /// </param>
    /// <returns>
    ///    The value of the <c>TaxWriteCode</c> parameter.
    /// </returns>
    public TaxWriteCode parmTaxWriteCode(TaxWriteCode _taxWriteCode = '')
    {
        if (!prmisdefault(_taxWriteCode))
        {
            this.setField(fieldnum(CustConfirmTrans, TaxWriteCode), _taxWriteCode);
        }

        return custConfirmTrans.TaxWriteCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmDate</c> field.
    /// </summary>
    protected void setConfirmDate()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, ConfirmDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setConfirmId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ConfirmId</c> field.
    /// </summary>
    protected void setConfirmId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, ConfirmId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>CurrencyCode</c> field.
    /// </summary>
    protected void setCurrencyCode()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, CurrencyCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDefaultDimension</Name>
				<Source><![CDATA[
        protected void setDefaultDimension()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, DefaultDimension)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDimensionEntitySpecifiers</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Updates the financial dimension entity specifiers for the record.
    /// </summary>
    /// <remarks>
    ///    This method is called after the <c>setTableFields</c> method, so all the fields that are entity
    ///    specifiers are set.
    /// </remarks>
    protected void setDimensionEntitySpecifiers()
    {
        this.setField(fieldnum(CustConfirmTrans, DefaultDimension), this.currentRecord().mergeDimension(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDiscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DiscAmount</c> field.
    /// </summary>
    protected void setDiscAmount()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, DiscAmount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDiscPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DiscPercent</c> field.
    /// </summary>
    protected void setDiscPercent()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, DiscPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvDate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>DlvDate</c> field.
    /// </summary>
    protected void setDlvDate()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, DlvDate)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDlvTerm</Name>
				<Source><![CDATA[
        protected void setDlvTerm()
    {
        if (this.isMethodExecuted(funcName(), fieldNum(CustConfirmTrans, DlvTerm)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExternalItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ExternalItemId</c> field.
    /// </summary>
    protected void setExternalItemId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, ExternalItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventDimId</c> field.
    /// </summary>
    protected void setInventDimId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, InventDimId)))
        {
            return;
        }

        this.axInventDim().setInventDimId();

        if (this.axInventDim().isFieldSet(fieldnum(InventDim, InventDimId)))
        {
            this.parmInventDimId(this.axInventDim().parmInventDimId());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventQty</c> field.
    /// </summary>
    protected void setInventQty()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, InventQty)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setInventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>InventTransId</c> field.
    /// </summary>
    protected void setInventTransId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, InventTransId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>ItemId</c> field.
    /// </summary>
    protected void setItemId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, ItemId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineAmount</c> field.
    /// </summary>
    protected void setLineAmount()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LineAmount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineAmountTax</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineAmountTax</c> field.
    /// </summary>
    protected void setLineAmountTax()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LineAmountTax)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineDisc</c> field.
    /// </summary>
    protected void setLineDisc()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LineDisc)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineHeader</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineHeader</c> field.
    /// </summary>
    protected void setLineHeader()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LineHeader)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LineNum</c> field.
    /// </summary>
    protected void setLineNum()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LineNum)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLinePercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>LinePercent</c> field.
    /// </summary>
    protected void setLinePercent()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, LinePercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnDisc</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>MultiLnDisc</c> field.
    /// </summary>
    protected void setMultiLnDisc()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, MultiLnDisc)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMultiLnPercent</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>MultiLnPercent</c> field.
    /// </summary>
    protected void setMultiLnPercent()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, MultiLnPercent)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Name</c> field.
    /// </summary>
    protected void setName()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, Name)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setOrigSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>OrigSalesId</c> field.
    /// </summary>
    protected void setOrigSalesId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, OrigSalesId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>PriceUnit</c> field.
    /// </summary>
    protected void setPriceUnit()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, PriceUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQty</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>Qty</c> field.
    /// </summary>
    protected void setQty()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, Qty)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesCategory</Name>
				<Source><![CDATA[
        protected void setSalesCategory()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesCategory)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesGroup</c> field.
    /// </summary>
    protected void setSalesGroup()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesId</c> field.
    /// </summary>
    protected void setSalesId()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesId)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesMarkup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesMarkup</c> field.
    /// </summary>
    protected void setSalesMarkup()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesMarkup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesPrice</c> field.
    /// </summary>
    protected void setSalesPrice()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesPrice)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesUnit</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>SalesUnit</c> field.
    /// </summary>
    protected void setSalesUnit()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, SalesUnit)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setStockedProduct</Name>
				<Source><![CDATA[
        protected void setStockedProduct()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, StockedProduct)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTableFields</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Applies default values to fields of a table row.
    /// </summary>
    protected void setTableFields()
    {
        super();

        useMapPolicy = false;

        this.setSalesId();
        this.setConfirmId();
        this.setConfirmDate();
        this.setLineNum();
        this.setItemId();
        this.setExternalItemId();
        this.setName();
        this.setCurrencyCode();
        this.setPriceUnit();
        this.setSalesUnit();
        this.setQty();
        this.setSalesPrice();
        this.setSalesMarkup();
        this.setDiscPercent();
        this.setDiscAmount();
        this.setLineAmount();
        this.setDefaultDimension();
        this.setDlvDate();
        this.setDlvTerm();
        this.setInventTransId();
        this.setTaxAmount();
        this.setTaxWriteCode();
        this.setMultiLnDisc();
        this.setMultiLnPercent();
        this.setLineDisc();
        this.setLinePercent();
        this.setTaxGroup();
        this.setTaxItemGroup();
        this.setSalesGroup();
        this.setOrigSalesId();
        this.setLineHeader();
        this.setInventDimId();
        this.setInventQty();
        this.setLineAmountTax();
        this.setSalesCategory();
        this.setStockedProduct();

        useMapPolicy = true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxAmount</c> field.
    /// </summary>
    protected void setTaxAmount()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, TaxAmount)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxGroup</c> field.
    /// </summary>
    protected void setTaxGroup()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, TaxGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxItemGroup</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxItemGroup</c> field.
    /// </summary>
    protected void setTaxItemGroup()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, TaxItemGroup)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxWriteCode</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the value for the <c>TaxWriteCode</c> field.
    /// </summary>
    protected void setTaxWriteCode()
    {
        if (this.isMethodExecuted(funcname(), fieldnum(CustConfirmTrans, TaxWriteCode)))
        {
            return;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateFromInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Sets the <c>axInventDimID</c> value of <c>axCustConfirmTrans</c> from an <c>axInventDim</c> object.
    /// </summary>
    /// <remarks>
    ///    When an instance of <c>axInventDim</c> updates an <c>axCustConfirmTrans</c> class, only
    ///    <c>this.setInventDimId()</c> can be called, not the whole <c>setTableFields()</c>.
    /// </remarks>
    public void updateFromInventDim()
    {
        ttsbegin;
        runState        = AxBCRunState::Save;
        fieldModified   = new Set(Types::Integer);

        this.initRecord();

        this.inputStatus(InternalExternal::Internal);

        this.setInventDimId();
        inventDimIdDirtySaved = false;

        this.validateFields();

        this.validateWrite();

        this.write();

        custConfirmTrans.InventDimId = InventDim::inventDimIdBlank();

        this.resetInternalValues();
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>AxCustConfirmTrans </c>class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>AxCustConfirmTrans</c> class.
    /// </returns>
    public static AxCustConfirmTrans construct()
    {
        return new AxCustConfirmTrans();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCustConfirmTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates an instance of the <c>AxCustConfirmTrans</c> class.
    /// </summary>
    /// <param name="_custConfirmTrans">
    ///    An instance of the <c>AxCustConfirmTrans</c> class.
    /// </param>
    /// <returns>
    ///    An instance of the <c>AxCustConfirmTrans</c> class.
    /// </returns>
    public static AxCustConfirmTrans newCustConfirmTrans(CustConfirmTrans _custConfirmTrans)
    {
        AxCustConfirmTrans axCustConfirmTrans = AxCustConfirmTrans::construct();

        axCustConfirmTrans.custConfirmTrans(_custConfirmTrans);

        return axCustConfirmTrans;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>