<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxSaxDocumentHandler_AU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Handles the document for Australia tax report
/// </summary>
class TaxSaxDocumentHandler_AU
{
    str                 tmpData;
    str                 fieldId;
    str                 fringeATO;
    str                 deferredInstalment;
    str                 deferredGSTOnImport;
    str                 paygCommRate;
    str                 fromDate;
    str                 toDate;
    str                 manualTotals;

    TaxDocumentIdNumber documentID;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>characters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets value to a selected field.
    /// </summary>
    /// <param name="_data">
    /// The needed to set value.
    /// </param>
    void characters(str _data)
    {
        ;

        tmpData = tmpData + _data;

        tmpData = strrem(tmpData,'\n\t\r '); //Removes white spaces from the data input.

        switch (fieldId)
        {
            case 'fA1' : // Document Identification Number
                documentID = tmpData;
                break;

            case 'fF1' : // FringeATO
                fringeATO = tmpData;
                break;

            case 'fT2' : // PaygCommRate
                paygCommRate = tmpData;
                break;

            case 'f7'  : // Deferred Instalment
                deferredInstalment = tmpData;
                break;

            case 'f7A' : //deferred gst On Imported goods
                deferredGSTOnImport = tmpData;
                break;

            case 'fA3' : //fromDate
                fromDate = tmpData;
                break;

            case 'fA4' : //toDate
                toDate = tmpData;
                break;

            case 'fMANUAL_MODE' :
                manualTotals = tmpData;
                break;

            default :
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentId</Name>
				<Source><![CDATA[
    TaxDocumentIdNumber parmDocumentId(TaxDocumentIdNumber _documentId = documentId)
    {
        documentId = _documentId;
        return documentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    FromDate parmFromDate()
    {
        ;
        return str2date(fromDate,123);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmManualTotals</Name>
				<Source><![CDATA[
    boolean parmManualTotals()
    {
        ;
        if (manualTotals == 'true')
            return true;
        else
            return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    ToDate parmToDate()
    {
        ;
        return str2date(toDate,123);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseFile</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets characters from a given file.
    /// </summary>
    /// <param name="_fileContent">
    /// The file content.
    /// </param>
    void parseFile(str _fileContent)
    {
        XmlReader reader;
        XmlNodeType nodeType;

        reader = XmlTextReader::newXml(_fileContent);
        while (reader.read())
        {
            nodeType = reader.nodeType();
            switch (nodeType)
            {
                case XmlNodeType::Element:
                    this.startElement(reader);
                    break;

                case XmlNodeType::Text:
                    this.characters(reader.value());
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>startElement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the field id for given parameter.
    /// </summary>
    /// <param name="reader">
    /// The instance of XmlReader.
    /// </param>
    void startElement(XmlReader reader)
    {
        str qName;
        ;

        qName = reader.name();

        if (qName == 'field')
        {
            fieldID = reader.getAttribute2('ID');
        }
        else if (qName != 'value')
        {
            fieldID = '';
        }

        tmpData = '';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>