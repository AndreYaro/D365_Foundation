<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlDataMaintenanceController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>BudgetControlDataMaintenanceController</c> class is the controller for the
/// budget control data maintenance operation.
/// </summary>
public class BudgetControlDataMaintenanceController extends SysOperationServiceController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs data maintenance for a process group.
    /// </summary>
    /// <param name="_args">
    /// An <c>Args</c> instance with the <c>BudgetControlDataMaintenance</c> record to be processed.
    /// </param>
    public static void main(Args _args)
    {
        if (_args.dataset() != tableNum(BudgetControlDataMaintenance) || !_args.record().RecId)
        {
            throw error("@SYS22996");
        }

        BudgetControlDataMaintenanceRecId budgetControlDataMaintenanceRecId = _args.record().RecId;

        BudgetControlDataMaintenanceController controller = new BudgetControlDataMaintenanceController(
            classStr(BudgetControlDataMaintenanceController),
            methodStr(BudgetControlDataMaintenanceController, processDataMaintenanceRequest),
            SysOperationExecutionMode::Synchronous);

        controller.parmDialogCaption("@Budget:BudgetControlDataMaintenance");
        controller.setDataMaintenanceRequest(budgetControlDataMaintenanceRecId);

        if (controller.startOperation() == SysOperationStartResult::AddedToBatchQueue)
        {
            BudgetControlDataMaintenance::setProcessGroupStatus(budgetControlDataMaintenanceRecId, BudgetControlDataMaintenanceStatus::Waiting);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogPostRun</Name>
				<Source><![CDATA[
    protected void dialogPostRun()
    {
        SysOperationDialog sysOperationDialog;

        super();

        sysOperationDialog = this.dialog() as SysOperationDialog;

        // Select the batch tab by default.
        sysOperationDialog.batchDialogTabPage().control().setFocus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>processDataMaintenanceRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes a budget control data maintenance request.
    /// </summary>
    /// <param name = "_request">
    /// The instance of the <c>BudgetControlDataMaintenanceRequest</c> class
    /// to process.
    /// </param>
    public void processDataMaintenanceRequest(BudgetControlDataMaintenanceRequest _request)
    {
        BudgetControlDataMaintenanceService::processDataMaintenanceRequest(_request);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDataMaintenanceRequest</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>BudgetControlDataMaintenanceRequest</c> details for the specified
    /// <c>BudgetControlDataMaintenanceRecId</c> value.
    /// </summary>
    /// <param name="_budgetControlDataMaintenanceRecId">
    /// The <c>BudgetControlDataMaintenance</c> record Id to be processed.
    /// </param>
    public void setDataMaintenanceRequest(BudgetControlDataMaintenanceRecId _budgetControlDataMaintenanceRecId)
    {
        BudgetControlDataMaintenanceRequest request = this.getBaseDataContract() as BudgetControlDataMaintenanceRequest;
        request.parmBudgetControlDataMaintenanceRecId(_budgetControlDataMaintenanceRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRetryable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>