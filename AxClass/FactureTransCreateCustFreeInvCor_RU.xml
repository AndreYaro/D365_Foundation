<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FactureTransCreateCustFreeInvCor_RU</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///<c>FactureTransCreateCustFreeInvCor_RU</c> object creates correction facture trans records
/// facture trans for customer free invoice
/// </summary>
class FactureTransCreateCustFreeInvCor_RU extends FactureTransCreate_RU
{
    FactureTrans_RU factureTransOriginal;
    InvoiceId       invoiceId;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calcAmounts</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates amounts, in this case amounts are negated source amounts
    /// </summary>
    /// <param name="_qty">
    /// Quantity to be processed
    /// </param>
    /// <returns>
    /// True if amount calculated successfully
    /// </returns>
    protected boolean calcAmounts(Qty _qty)
    {
        factureTrans.LineAmountMST        = - factureTrans.LineAmountMST;
        factureTrans.TaxAmountMST         = - factureTrans.TaxAmountMST;
        factureTrans.vatAmountMST         = - factureTrans.vatAmountMST;
        factureTrans.ExciseAmountMST      = - factureTrans.ExciseAmountMST;

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes facture trans record and updates facture journal
    /// </summary>
    protected void initTrans()
    {
        factureTrans.data(factureTransOriginal);

        factureTrans.FactureId            = factureJour.FactureId;
        factureTrans.InvoiceId            = invoiceId;
        factureTrans.InvoiceDate          = factureJour.FactureDate;
        factureTrans.FineAmountCalculated = - factureTrans.FineAmountCalculated;
        factureTrans.FineAmountToPost     = - factureTrans.FineAmountToPost;
        factureTrans.FineAmountToPost     = - factureTrans.FineAmountToPost;
        factureTrans.Qty                  = - factureTrans.Qty;
        factureTrans.LineAmount           = - factureTrans.LineAmount;
        factureTrans.TaxAmount            = - factureTrans.TaxAmount;
        factureTrans.vat                  = - factureTrans.vat;
        factureTrans.Excise               = - factureTrans.Excise;

        factureJour.FactureAmount        += factureTrans.LineAmount;
        factureJour.FactureTax           += factureTrans.TaxAmount;
        factureJour.doUpdate();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFactureTransOriginal</Name>
				<Source><![CDATA[
        public FactureTrans_RU parmFactureTransOriginal(FactureTrans_RU _factureTrans = factureTransOriginal)
    {
        factureTransOriginal = _factureTrans;
        return factureTransOriginal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceId</Name>
				<Source><![CDATA[
        public InvoiceId parmInvoiceId(InvoiceId _invoiceId = invoiceId)
    {
        invoiceId = _invoiceId;
        return invoiceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs <c>FactureTransCreateCustFreeInvCor_RU</c> object, which creates correction
    /// facture trans for customer free invoice
    /// </summary>
    /// <param name="_factureJourCreate">
    /// <c>FactureJourCreateCustFreeInvCor_RU</c> object transaction belongs to
    /// </param>
    /// <param name="_factureTrans">
    /// Original <c>FactureTrans_RU</c> record
    /// </param>
    /// <param name="_invoiceId">
    /// Source invoice id
    /// </param>
    /// <returns>
    /// <c>FactureTransCreateCustFreeInvCor_RU</c> object
    /// </returns>
    public static FactureTransCreateCustFreeInvCor_RU construct(FactureJourCreateCustFreeInvCor_RU _factureJourCreate,
                                                                FactureTrans_RU                    _factureTrans,
                                                                InvoiceId                          _invoiceId)
    {
        FactureTransCreateCustFreeInvCor_RU  ret = new FactureTransCreateCustFreeInvCor_RU(_factureJourCreate,
                                                                                           _factureTrans.RecId,
                                                                                           _factureTrans.Qty,
                                                                                           false);
        ret.parmFactureTransOriginal(_factureTrans);
        ret.parmInvoiceId(_invoiceId);
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>