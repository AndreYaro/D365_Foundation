<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesPurchSummarySumByCtrl</Name>
	<SourceCode>
		<Declaration><![CDATA[
class SalesPurchSummarySumByCtrl
{
    FormComboBoxControl sumByControl;
    Map                 selection2IndexMap;
    Map                 index2SelectionMap;
    Set                 removedElements;
    Map                 textMap;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    public void build()
    {
        DictEnum     dictEnum = new DictEnum(enumnum(AccountOrder));
        Counter      indexNo, selection;
        str          text;

        sumByControl.clear();

        while (indexNo < dictEnum.values())
        {
            if (removedElements.in(indexNo))
            {
                indexNo++;
                continue;
            }

            if (textMap.exists(indexNo))
            {
                text = textMap.lookup(indexNo);
            }
            else
            {
                text = dictEnum.index2Label(indexNo);
            }

            sumByControl.item(selection);
            sumByControl.add(text);

            AccountOrder accountOrder = dictEnum.index2Value(indexNo);
            selection2IndexMap.insert(selection, accountOrder);
            index2SelectionMap.insert(accountOrder, selection);
            indexNo++;
            selection++;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>index2Selection</Name>
				<Source><![CDATA[
    public int index2Selection(AccountOrder _accountOrder)
    {
        int selection = -1;

        if (index2SelectionMap && index2SelectionMap.exists(_accountOrder))
        {
            selection = index2SelectionMap.lookup(_accountOrder);
        }

        return selection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init()
    {
        selection2IndexMap = new Map(Types::Integer, Types::Enum);
        index2SelectionMap = new Map(Types::Enum, Types::Integer);
        removedElements    = new Set(Types::Enum);
        textMap            = new Map(Types::Integer, Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        this.init();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSumByControl</Name>
				<Source><![CDATA[
    public FormComboBoxControl parmSumByControl(FormComboBoxControl _sumByControl = sumByControl)
    {
        sumByControl = _sumByControl;
        return sumByControl;
    }

]]></Source>
			</Method>
			<Method>
				<Name>remove</Name>
				<Source><![CDATA[
    public void remove(AccountOrder _accountOrder)
    {
        removedElements.add(_accountOrder);
    }

]]></Source>
			</Method>
			<Method>
				<Name>selection2Index</Name>
				<Source><![CDATA[
    public AccountOrder selection2Index(int _index)
    {
        AccountOrder accountOrder = AccountOrder::None;

        if (selection2IndexMap && selection2IndexMap.exists(_index))
        {
            accountOrder = selection2IndexMap.lookup(_index);
        }

        return accountOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSelection</Name>
				<Source><![CDATA[
    public void setSelection(AccountOrder _accountOrder)
    {
        int selection = 0;

        if (this.index2Selection(_accountOrder) != -1)
        {
            selection = this.index2Selection(_accountOrder);
        }

        sumByControl.selection(selection);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setText</Name>
				<Source><![CDATA[
    public void setText(AccountOrder _accountOrder, str _text)
    {
        textMap.insert(_accountOrder, _text);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    static SalesPurchSummarySumByCtrl construct()
    {
        return new SalesPurchSummarySumByCtrl();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSumByControl</Name>
				<Source><![CDATA[
    static SalesPurchSummarySumByCtrl newSumByControl(FormComboBoxControl _sumByControl)
    {
        SalesPurchSummarySumByCtrl summarySumByCtrl = SalesPurchSummarySumByCtrl::construct();
        summarySumByCtrl.parmSumByControl(_sumByControl);

        return summarySumByCtrl;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
