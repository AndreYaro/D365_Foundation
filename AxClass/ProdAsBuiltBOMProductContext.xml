<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdAsBuiltBOMProductContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class ProdAsBuiltBOMProductContext
{
    private InventTable                             item; 
    private PmfProductType                          productType;
    private EcoResTrackingDimensionGroup            trackingDimensionGroup;
    private EcoResTrackingDimensionGroupFldSetup    batchTrackingDimensionSetup;
    private EcoResTrackingDimensionGroupFldSetup    serialTrackingDimensionSetup;
    private boolean                                 hasItemProductDimensions;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    internal static ProdAsBuiltBOMProductContext construct(ItemId _itemId)
    {
        ProdAsBuiltBOMProductContext productContext = new ProdAsBuiltBOMProductContext();
        productContext.setItem(_itemId)
                      .setTrackingDimensionGroup()
                      .setBatchTrackingDimensionSetup()
                      .setSerialTrackingDimensionSetup()
                      .setHasItemProductDimensions();
        
        return productContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setItem</Name>
				<Source><![CDATA[
    private ProdAsBuiltBOMProductContext setItem(ItemId _itemId)
    {
        item = InventTable::find(_itemId);

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTrackingDimensionGroup</Name>
				<Source><![CDATA[
    private ProdAsBuiltBOMProductContext setTrackingDimensionGroup()
    {
        trackingDimensionGroup = EcoResTrackingDimensionGroup::find(item.trackingDimensionGroup());

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setBatchTrackingDimensionSetup</Name>
				<Source><![CDATA[
    private ProdAsBuiltBOMProductContext setBatchTrackingDimensionSetup()
    {
        batchTrackingDimensionSetup = EcoResTrackingDimensionGroupFldSetup::findByDimensionGroupFieldId(trackingDimensionGroup.RecId, fieldNum(InventDim, InventBatchId));
        
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSerialTrackingDimensionSetup</Name>
				<Source><![CDATA[
    private ProdAsBuiltBOMProductContext setSerialTrackingDimensionSetup()
    {
        serialTrackingDimensionSetup = EcoResTrackingDimensionGroupFldSetup::findByDimensionGroupFieldId(trackingDimensionGroup.RecId, fieldNum(InventDim, InventSerialId));
        
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setHasItemProductDimensions</Name>
				<Source><![CDATA[
    private ProdAsBuiltBOMProductContext setHasItemProductDimensions()
    {
        hasItemProductDimensions = item.hasProductDimensions();

        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemBatchable</Name>
				<Source><![CDATA[
    internal boolean isItemBatchable()
    {
        return batchTrackingDimensionSetup.IsActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchAllowBlankReceiptEnabled</Name>
				<Source><![CDATA[
    internal boolean isBatchAllowBlankReceiptEnabled()
    {
        return batchTrackingDimensionSetup.IsAllowBlankReceiptEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isBatchAllowBlankIssueEnabled</Name>
				<Source><![CDATA[
    internal boolean isBatchAllowBlankIssueEnabled()
    {
        return batchTrackingDimensionSetup.IsAllowBlankIssueEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isItemSerializable</Name>
				<Source><![CDATA[
    internal boolean isItemSerializable()
    {
        return serialTrackingDimensionSetup.IsActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialAllowBlankReceiptEnabled</Name>
				<Source><![CDATA[
    internal boolean isSerialAllowBlankReceiptEnabled()
    {
        return serialTrackingDimensionSetup.IsAllowBlankReceiptEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialAllowBlankIssueEnabled</Name>
				<Source><![CDATA[
    internal boolean isSerialAllowBlankIssueEnabled()
    {
        return serialTrackingDimensionSetup.IsAllowBlankIssueEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialAtConsumptionEnabled</Name>
				<Source><![CDATA[
    internal boolean isSerialAtConsumptionEnabled()
    {
        return trackingDimensionGroup.IsSerialAtConsumptionEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSerialNumberControlEnabled</Name>
				<Source><![CDATA[
    internal boolean isSerialNumberControlEnabled()
    {
        return trackingDimensionGroup.IsSerialNumberControlEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCaptureSerialEnabled</Name>
				<Source><![CDATA[
    internal boolean isCaptureSerialEnabled()
    {
        return trackingDimensionGroup.CaptureSerial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasItemProductDimensions</Name>
				<Source><![CDATA[
    internal boolean hasItemProductDimensions()
    {
        return hasItemProductDimensions;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProductType</Name>
				<Source><![CDATA[
    internal PmfProductType getProductType()
    {
        return item.PmfProductType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBatchNumberGroup</Name>
				<Source><![CDATA[
    internal InventNumGroupId getBatchNumberGroup()
    {
        return item.BatchNumGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSerialNumberGroup</Name>
				<Source><![CDATA[
    internal InventNumGroupId getSerialNumberGroup()
    {
        return item.SerialNumGroupId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCoByProduct</Name>
				<Source><![CDATA[
    internal boolean isCoByProduct()
    {
        return item.PmfProductType == PmfProductType::Co_Product || item.PmfProductType == PmfProductType::By_Product;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>