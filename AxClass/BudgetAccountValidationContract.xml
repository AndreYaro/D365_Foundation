<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetAccountValidationContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BudgetAccountValidationContract</c> class is used as a data contract to pass a budget account and a validation date to services.
/// </summary>
[DataContractAttribute]
public class BudgetAccountValidationContract implements DimensionICombinationValidationContract
{
    date                    validationDate;
    BudgetAccountContract   budgetAccount;

    #define.CurrentVersion(1)

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmBudgetAccountContract</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public BudgetAccountContract parmBudgetAccountContract(BudgetAccountContract _budgetAccount = budgetAccount)
    {
        budgetAccount = _budgetAccount;
        return budgetAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmValidDate</Name>
				<Source><![CDATA[
    [DataMemberAttribute]
    public date parmValidDate(date _validationDate = validationDate)
    {
        validationDate = _validationDate;
        return validationDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionCombinationContract</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the <c>DimensionCombinationContract</c> instance with the values to validate.
    /// </summary>
    /// <returns>
    ///    The new instance of a <c>DimensionCombinationContract</c> subclass.
    /// </returns>
    public DimensionCombinationContract getDimensionCombinationContract()
    {
        return budgetAccount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [#CurrentVersion, validationDate, budgetAccount.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packed)
    {
        int version = conpeek(_packed, 1);

        switch (version)
        {
            case #CurrentVersion:
                container budgetAccountPack;
                [version, validationDate, budgetAccountPack] = _packed;
                this.budgetAccount = new BudgetAccountContract();
                budgetAccount.unpack(budgetAccountPack);
                break;

            default:
                return false;
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>