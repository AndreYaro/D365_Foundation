<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyTableHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DirPartyTableHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cnpjCPFNum_BR</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Finds CNPJ/CPF number from a given party.
    /// </summary>
    /// <param name="_party">
    ///     <c>DirPartyRecId</c> to search CNPJ/CPF of the appropriate party
    /// </param>
    /// <returns>
    ///     CNPJ/CPF number value
    /// </returns>
    public static CNPJCPFNum_BR cnpjCPFNum_BR(DirPartyRecId _party)
    {
        if (DirPartyTableHelper::isCustomer(_party))
        {
            return CustTable::findByPartyRecId(_party).cnpjcpfNum_BR;
        }

        if (DirPartyTableHelper::isvendor(_party))
        {
            return VendTable::findByPartyRecId(_party).cnpjcpfNum_BR;
        }

        if (DirPartyTableHelper::isLegalEntity(_party))
        {
            return CompanyInfo::findRecId(_party).cnpjCPFNumber_BR();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>ieNum_BR</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds IE number from a given party.
    /// </summary>
    /// <param name="_party">
    /// <c>DirPartyRecId</c> to search IE number of the appropriate party
    /// </param>
    /// <returns>
    /// IE number value
    /// </returns>
    public static IENum_BR ieNum_BR(DirPartyRecId _party)
    {
        if (DirPartyTableHelper::isCustomer(_party))
        {
            return CustTable::findByPartyRecId(_party).ieNum_BR;
        }

        if (DirPartyTableHelper::isvendor(_party))
        {
            return VendTable::findByPartyRecId(_party).ieNum_BR;
        }

        if (DirPartyTableHelper::isLegalEntity(_party))
        {
            return CompanyInfo::findRecId(_party).ieNumber_BR();
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>isApplicant</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an address book record represents an applicant in the system.
    /// </summary>
    /// <param name="_partyRecId">
    ///    The <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///    true if the selected address book record represents an applicant in the system; otherwise, false.
    /// </returns>
    static boolean isApplicant(DirPartyRecId _partyRecId)
    {
        HcmApplicant       applicant;

        if (_partyRecId)
        {
            select firstonly RecId from applicant
                where applicant.Person == _partyRecId;
        }

        return (applicant.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomer</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an address book record represents a customer in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record that must be checked.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents a customer in the current company; otherwise
    ///    false.
    /// </returns>
    static boolean isCustomer(DirPartyRecId _partyRecId)
    {
        CustTable       custTable;
        if (_partyRecId)
        {
            select firstonly RecId from custTable
                where custTable.Party == _partyRecId;
        }
        return (custTable.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomerOrRelation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an Address book record represents a customer or a business relation in the
    ///    current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the Address book record which must be checked.
    /// </param>
    /// <returns>
    ///    true if a selected Address book record represents a customer or a business relation in the current
    ///    company; otherwise, false.
    /// </returns>
    static boolean isCustomerOrRelation(DirPartyRecId _partyRecId)
    {
        return (DirPartyTableHelper::isCustomer(_partyRecId) || DirPartyTableHelper::isRelation(_partyRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomerOrRelationOrVendor</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an Address book record represents a customer, vendor, or business relation in
    ///    the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    The <c>DirPartyRecId</c> of the Address book record to be checked.
    /// </param>
    /// <returns>
    ///    true if a selected Address book record represents a customer, vendor, or business relation in the
    ///    current company; otherwise, false.
    /// </returns>
    static boolean isCustomerOrRelationOrVendor(DirPartyRecId _partyRecId)
    {
        return (DirPartyTableHelper::isCustomer(_partyRecId) || DirPartyTableHelper::isvendor(_partyRecId) || DirPartyTableHelper::isRelation(_partyRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomerOrRelationOrVendorOrEmployee</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an address book record represents a customer, a vendor, an employee, or a
    ///    business relation in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents a customer, a vendor, an employee, or a business
    ///    relation in the current company; otherwise false.
    /// </returns>
    static boolean isCustomerOrRelationOrVendorOrEmployee(DirPartyRecId _partyRecId)
    {
        return (DirPartyTableHelper::isCustomer(_partyRecId) || DirPartyTableHelper::isvendor(_partyRecId) || DirPartyTableHelper::isRelation(_partyRecId) || DirPartyTableHelper::isWorker(_partyRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEmployee</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an Address book record represents an employee in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    The <c>DirPartyRecId</c> value of the Address book record to be checked.
    /// </param>
    /// <returns>
    ///    true if a selected Address book record represents an employee in the current company; otherwise,
    ///    false.
    /// </returns>
    static boolean isEmployee(DirPartyRecId _partyRecId)
    {
        HcmWorker   worker;

        if (_partyRecId)
        {
            select firstonly RecId from worker
                where worker.Person == _partyRecId;
        }

        return (worker.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isEmployeeOrRelation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Checks whether an address book record represents an employee or a business relation in the current
    ///    company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents an employee or a business relation in the current
    ///    company; otherwise false.
    /// </returns>
    static boolean isEmployeeOrRelation(DirPartyRecId _partyRecId)
    {
        return (DirPartyTableHelper::isWorker(_partyRecId) || DirPartyTableHelper::isRelation(_partyRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an address book record represents a legal entity.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record that must be checked.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents a legal entity; otherwise false.
    /// </returns>
    static boolean isLegalEntity(DirPartyRecId _partyRecId)
    {
        CompanyInfo       companyInfo;

        if (_partyRecId)
        {
            select firstonly RecId from companyInfo
                where companyInfo.RecId == _partyRecId;
        }
        return (companyInfo.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isRelation</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an Address book record represents a business relation in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record that is to be checked.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents a business relation in the current company;
    ///    otherwise, false.
    /// </returns>
    static boolean isRelation(DirPartyRecId _partyRecId)
    {
        smmBusRelTable       smmBusRelTable;
        if (_partyRecId)
        {
            select firstonly RecId from smmBusRelTable
                where smmBusRelTable.Party == _partyRecId;
        }
        return (smmBusRelTable.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isvendor</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether an address book record represents a vendor in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///    A <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///    true if a selected address book record represents a vendor in the current company; otherwise false.
    /// </returns>
    static boolean isvendor(DirPartyRecId _partyRecId)
    {
        VendTable       vendTable;
        if (_partyRecId)
        {
            select firstonly RecId from vendTable
                where vendTable.Party == _partyRecId;
        }
        return (vendTable.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isWorker</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether an address book record represents a worker in the current company.
    /// </summary>
    /// <param name="_partyRecId">
    ///     The <c>DirPartyRecId</c> value of the Address book record to checked.
    /// </param>
    /// <returns>
    ///     true if a selected address book record represents an employee in the current company; otherwise,
    ///     false.
    /// </returns>
    static boolean isWorker(DirPartyRecId _partyRecId)
    {
        return DirPartyTableHelper::isEmployee(_partyRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isContactPerson</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether an address book record represents a contact person in the system.
    /// </summary>
    /// <param name="_partyRecId">
    ///     The <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///     true if the selected address book record represents a contact person in the system; otherwise,
    ///     false.
    /// </returns>
    static boolean isContactPerson(DirPartyRecId _partyRecId)
    {
        ContactPerson contactPerson;

        if (_partyRecId)
        {
            select firstonly RecId from contactPerson
                where contactPerson.Party == _partyRecId;
        }

        return (contactPerson.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLead</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether an address book record represents a lead in the system.
    /// </summary>
    /// <param name="_partyRecId">
    ///     The <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///     true if the selected address book record represents a lead in the system; otherwise,
    ///     false.
    /// </returns>
    static boolean isLead(DirPartyRecId _partyRecId)
    {
        smmLeadTable smmLeadTable;

        if (_partyRecId)
        {
            select firstonly RecId from smmLeadTable
                where smmLeadTable.Party == _partyRecId;
        }

        return (smmLeadTable.RecId ? true : false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOpportunity</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Indicates whether an address book record represents an opportunity in the system.
    /// </summary>
    /// <param name="_partyRecId">
    ///     The <c>DirPartyRecId</c> value of the address book record to check.
    /// </param>
    /// <returns>
    ///     true if the selected address book record represents an opportunity in the system; otherwise,
    ///     false.
    /// </returns>
    static boolean isOpportunity(DirPartyRecId _partyRecId)
    {
        smmOpportunityTable smmOpportunityTable;

        if (_partyRecId)
        {
            select firstonly RecId from smmOpportunityTable
                where smmOpportunityTable.Party == _partyRecId;
        }

        return (smmOpportunityTable.RecId ? true : false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>