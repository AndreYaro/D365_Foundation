<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemPriceCompareStorageDetailsChartViewModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventItemPriceCompareStorageDetailsChartViewModel</c> class is a view model for the chart that shows comparison of 
/// two item prices from a storage execution.
/// </summary>
public class InventItemPriceCompareStorageDetailsChartViewModel extends CostCompareChartViewModel
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static InventItemPriceCompareStorageDetailsChartViewModel construct()
    {
        return new InventItemPriceCompareStorageDetailsChartViewModel();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initChartData</Name>
				<Source><![CDATA[
    protected void initChartData(CostICompareArgs _costCompareArgs)
    {
        var inventItemPriceCompareStorageDetailsArgs = _costCompareArgs as InventItemPriceCompareStorageDetailsArgs;

        if (!inventItemPriceCompareStorageDetailsArgs)
        {
            throw error(error::wrongUseOfFunction(funcName()));
        }

        InventItemPriceCompareStorageDetailsChartDataProvider model = InventItemPriceCompareStorageDetailsChartDataProvider::construct();
        model.init(inventItemPriceCompareStorageDetailsArgs);

        CostPriceCompareChartModelDataSeriesParameters dataSeriesParameters = CostPriceCompareChartModelDataSeriesParameters::construct();
        dataSeriesParameters.dataSeries1 = "@SCM:DataSeries_InventItemPriceCompareStorageDetailsChart_Compare";
        dataSeriesParameters.dataSeries2 = "@SCM:DataSeries_InventItemPriceCompareStorageDetailsChart_CompareTo";
        dataSeriesParameters.dataSeries3 = "@SCM:DataSeries_InventItemPriceCompareStorageDetailsChart_NetChange";

        chartData = CostPriceCompareChartModel::prepareChartData(model.loadData(), dataSeriesParameters);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDrilldownBaseQuery</Name>
				<Source><![CDATA[
    protected Query getDrilldownBaseQuery(str _rangeValue)
    {
        return CostPriceCompareChartModel::buildQueryForDrilldown(drillLevel, _rangeValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>