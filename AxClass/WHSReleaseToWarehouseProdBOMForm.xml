<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReleaseToWarehouseProdBOMForm</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>WHSReleaseToWarehouseProdBOMForm</c> class contains the business logic of the <c>WHSReleaseToWarehouseProdBOM</c> form.
/// </summary>
public class WHSReleaseToWarehouseProdBOMForm extends WhsReleaseToWarehouseForm
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addInventSumDimFromTransIdDimensionHandlingQuantities</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates quantity left to release to warehouse for an order line.
    /// </summary>
    /// <param name = "_inventTransId">The transaction to be released.</param>
    /// <param name = "_inventDimId">The inventory dimensions being released.</param>
    /// <param name = "_itemId">The item being released.</param>
    /// <param name = "_sumOfHandlingQty">The sum of the handling quantity.</param>
    /// <param name = "_releaseToWarehouse">Temporary <c>WHSTmpReleaseToWarehouse</c> record.</param>
    /// <param name = "_module">Module of the order.</param>
    /// <param name = "_skipWHSTmpReleaseToWarehouseValidation">Determines whether to skip validation or not.</param>
    /// <remarks>
    /// The method is an extension point and is not meant to be called directly. Callers should call the addInventSumDimFromTransIdDimensionHandlingQty method.
    /// </remarks>
    [Wrappable(true)]
    protected void addInventSumDimFromTransIdDimensionHandlingQuantities(
        InventTransId               _inventTransId,
        InventDimId                 _inventDimId,
        ItemId                      _itemId,
        InventHandlingQty           _sumOfHandlingQty,
        WHSTmpReleaseToWarehouse    _releaseToWarehouse,
        WHSModule                   _module,
        boolean                     _skipWHSTmpReleaseToWarehouseValidation)
    {
        WHSTmpReleaseToWarehouse::createLineFromInventTransIdInventDimId(_releaseToWarehouse,
                                                                        releaseToWarehouseId,
                                                                        _inventTransId,
                                                                        _inventDimId,
                                                                        _module,
                                                                        _sumOfHandlingQty,
                                                                        _skipWHSTmpReleaseToWarehouseValidation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>addProdOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a <c>WHSTmpReleaseToWarehouse</c> record for the bill of materials on the given production ID.
    /// </summary>
    /// <param name = "_prodId">The production ID of the production order we are adding</param>
    /// <param name = "_releaseToWarehouse">Temporary instance of the <c>WHSTmpReleaseToWarehouse</c> record.</param>
    public void addProdOrder(
        ProdId                   _prodId,
        WHSTmpReleaseToWarehouse _releaseToWarehouse)
    {
        // Skipping the validation since correct inventory transactions have been filtered out by the query
        #define.SkipWHSTmpReleaseToWarehouseValidaton(true)

        WHSInventTransSumDimEnumerator inventTransSumDimEnumerator = this.newInventTransSumDimQuery().forWHSModuleOrder(WHSModule::ProdBOM, _prodId)
                                                                                                     .fromWHSEnabledWarehouse()
                                                                                                     .getEnumerator();

        while (inventTransSumDimEnumerator.moveNext())
        {
            WHSInventTransSumDim inventTransSumDim = inventTransSumDimEnumerator.inventTransSumDim();
            ProdBOM              prodBOM = ProdBOM::findTransId(inventTransSumDim.InventTransId);

            if (!prodBOM.fullyReleasedToWarehouse())
            {
                this.addInventSumDimFromTransIdDimensionHandlingQty(inventTransSumDim.InventTransId,
                                                        inventTransSumDim.InventDimId,
                                                        inventTransSumDim.ItemId,
                                                        prodBOM.displayRemainingToReleaseQty(),
                                                        _releaseToWarehouse,
                                                        WHSModule::ProdBOM,
                                                        true);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodBOMbuttonRelease_clicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Releases bills of materials to warehouse when Release button is clicked.
    /// </summary>
    /// <param name="_whsReleaseToWarehouse">
    /// The <c>WHSTmpReleaseToWarehouse</c> instance holding records to release.
    /// </param>
    public void prodBOMbuttonRelease_clicked(WHSTmpReleaseToWarehouse _whsReleaseToWarehouse)
    {
        WHSReleaseToWarehouseId whsReleaseToWarehouseId = this.parmReleaseToWarehouseId();
        container               inputParameters         = [WHSTmpReleaseToWarehouse::pack(_whsReleaseToWarehouse,
                                                                                          whsReleaseToWarehouseId), whsReleaseToWarehouseId];

        SysOperationSandbox::callStaticMethod(classIdGet(this),
                                                staticMethodStr(WHSReleaseToWarehouseProdBOMForm, prodBOMReleaseToWarehouseSandboxHelper),
                                                inputParameters,
                                                "@WAX:Dialog_ReleaseProdOrder_Label");
        
        this.parmReleaseToWarehouseId(WHSTmpReleaseToWarehouse::getNextReleaseToWarehouseId());

        delete_from _whsReleaseToWarehouse;
    }

]]></Source>
			</Method>
			<Method>
				<Name>prodBOMReleaseToWarehouseSandboxHelper</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method releases bills of materials to warehouse.
    /// </summary>
    /// <param name = "_inputParameters">
    /// Holds the parameters used to determine which bills of materials to release to the warehouse.
    /// </param>
    public static void prodBOMReleaseToWarehouseSandboxHelper(container _inputParameters)
    {
        WHSTmpReleaseToWarehouse whsTmpReleaseToWarehouse = WHSTmpReleaseToWarehouse::unpack(conPeek(_inputParameters, 1));
        WHSReleaseToWarehouseId  whsReleaseToWarehouseId  = conPeek(_inputParameters, 2);

        WHSWarehouseReleaseProdBOM::releaseToWarehouseProdBOM(whsTmpReleaseToWarehouse, whsReleaseToWarehouseId, false, true, false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>