<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesLineType_Journal</Name>
	<SourceCode>
		<Declaration><![CDATA[
[SalesLineTypeFactoryAttribute(SalesType::Journal, NoYes::No)]
class       SalesLineType_Journal
extends     SalesLineType
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>canInventBeReserved</Name>
				<Source><![CDATA[
    boolean  canInventBeReserved()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInventUpdFinancial</Name>
				<Source><![CDATA[
    boolean  canInventUpdFinancial()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canInventUpdPhysical</Name>
				<Source><![CDATA[
    boolean  canInventUpdPhysical()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>doDeliveryDateControl</Name>
				<Source><![CDATA[
    boolean doDeliveryDateControl()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    void initFromSalesTable(SalesTable _salesTable, boolean _ignoreInventDim = false)
    {
        super(_salesTable, _ignoreInventDim);

        if (_salesTable.returnItem())
        {
            salesLine.ReturnStatus   = ReturnStatusLine::Awaiting;
            salesLine.ReturnDeadline = _salesTable.ReturnDeadline;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustInventUpdEstimated</Name>
				<Source><![CDATA[
    boolean mustInventUpdEstimated()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setSalesStatus</Name>
				<Source><![CDATA[
    void  setSalesStatus(SalesLine  _salesLine, InventTransIdSum  inventTransIdSum = null)
    {
        if (_salesLine.SalesStatus != SalesStatus::Canceled)
        {
            _salesLine.SalesStatus = SalesStatus::Backorder;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates fields for the <c>SalesLine</c> table.
    /// </summary>
    /// <param name="_fieldId">
    /// The <c>fieldId</c> value of the field to validate
    /// </param>
    /// <returns>
    /// true if the validation of the field was successful; otherwise, false.
    /// </returns>
    boolean validateField(fieldId _fieldId)
    {
        SalesTable  checkSalesTable;

        boolean ret = super(_fieldId);

        if (ret && this.returnItem())
        {
            if (_fieldId == fieldnum(SalesLine, ExpectedRetQty))
            {
                if (salesLine.ExpectedRetQty > 0)
                {
                    // Quantity of returned items orders must be negative.
                    ret = checkFailed("@SYS53512");
                }

                if (salesLine.ExpectedRetQty == 0)
                {
                    // Expected return quantity must not be zero
                    ret = checkFailed("@SYS105646");
                }
                else
                {
                    SalesLine returnSalesLine = SalesLine::findInventTransId(salesLine.InventTransIdReturn);
                    if (returnSalesLine)
                    {
                        if (abs(salesLine.ExpectedRetQty) > (returnSalesLine.invoicedInTotal() - returnSalesLine.remainReturnLotQty(salesLine)))
                        {
                            // The quantity being returned is greater than what can be covered by the return lot.
                            ret = checkFailed("@SYS53004");
                        }
                    }
                }
            }

            if (_fieldId == fieldnum(SalesLine, ReturnDeadline))
            {
                select ReturnDeadline from checkSalesTable
                    where checkSalesTable.SalesId == salesLine.SalesId;

                if (checkSalesTable.ReturnDeadline && (salesLine.ReturnDeadline < checkSalesTable.ReturnDeadline))
                {
                    // Return deadline on lines must not be before return deadline on header
                    ret = checkFailed("@SYS105786");
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    boolean validateWrite(boolean _skipCreditLimitCheck = false)
    {
        boolean ok = true;

        ok = super(_skipCreditLimitCheck);

        if (ok && !salesLine.inventDim().validateWriteMandatoryAndProductDim(salesLine.ItemId))
        {
            ok = false;
        }

        return ok;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>