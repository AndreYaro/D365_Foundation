<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjInvoiceProposalDetailFormV2_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains the logic of handling lookup for Intent letters on <c>ProjInvoiceProposalDetailV2</c>.
/// </summary>
public static class ProjInvoiceProposalDetailFormV2_ApplicationSuite_Extension
{
		
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>IntentLetter_IntentLetterId_OnLookup</Name>
				<Source><![CDATA[
    // <summary>
    /// Opens the lookup drop-window when clicking on the intent letter field.
    /// </summary>
    /// <param name = "_sender">The <c>ProjProposalJour</c> record.</param>
    /// <param name = "_e">Event arguments</param>
    [FormControlEventHandler(formControlStr(ProjInvoiceProposalDetailV2, IntentLetter_IT_IntentLetterId_IT), FormControlEventType::Lookup)]
    public static void IntentLetter_IntentLetterId_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        if (FeatureStateProvider::isFeatureEnabled(IntentLettersFeature::instance()))
        {
            ProjProposalJour projProposalJour = _sender.dataSourceObject().cursor() as ProjProposalJour;

            if (projProposalJour)
            {
                CustIntentLetter_IT::lookupOpenIntentLetter_IT(_sender, projProposalJour.InvoiceAccount);
                // Do not call super to avoid another lookup form from <c>PurchTable</c>
                FormControlCancelableSuperEventArgs ce = _e as FormControlCancelableSuperEventArgs;

                if (ce)
                {
                    ce.CancelSuperCall();
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjInvoiceProposalDetailV2_TaxId_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs lookup for company tax registration numbers.
    /// </summary>
    /// <param name = "_sender">The event sender.</param>
    /// <param name = "_e">The event arguments.</param>
    [FormControlEventHandler(formControlStr(ProjInvoiceProposalDetailV2, TaxRegistrationNumber_TaxId), FormControlEventType::Lookup)]
    public static void ProjInvoiceProposalDetailV2_TaxId_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        ProjProposalJour projProposalJour = _sender.dataSourceObject().cursor() as ProjProposalJour;

        if (projProposalJour)
        {
            if (ProjInvoiceCompanyTaxRegistrationLookUpFlight::instance().isEnabled())
            {
                TaxInformation_IN::lookUpReferenceTaxRegistration(_sender, 0, CompanyInfo::current());
            }
            else
            {
                TaxInformation_IN::lookUpReferenceTaxRegistration(_sender);
            }

            FormControlCancelableSuperEventArgs ce = _e as FormControlCancelableSuperEventArgs;

            if (ce)
            {
                ce.CancelSuperCall();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjInvoiceProposalDetailV2_OnPostRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles initialization event of ProjInvoiceProposalDetailV2 form to control visibility of CFDI Period.
    /// </summary>
    /// <param name = "_sender">The event sender.</param>
    /// <param name = "e">The event arguments.</param>
    [FormEventHandler(formStr(ProjInvoiceProposalDetailV2), FormEventType::PostRun)]
    public static void ProjInvoiceProposalDetailV2_OnPostRun(xFormRun _sender, FormEventArgs e)
    {
        #ISOCountryRegionCodes

        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoMX]) & !_sender.isclosed())
        {
            FormRun formRun = _sender;
            FormDataSource projProposalJourDataSource = formRun.dataSource(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalJour));
            if (projProposalJourDataSource != null)
            {
                ProjProposalJour projProposalJour = projProposalJourDataSource.cursor() as ProjProposalJour;
                boolean mustUseCFDIGlobalPeriod = CFDISharedLogic_MX::mustInitCFDIEInvoicePeriod(projProposalJour.InvoiceAccount);
                formRun.dataSource(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalJour)).object(fieldNum(ProjProposalJour, CFDIEInvoicePeriod_MX)).visible(mustUseCFDIGlobalPeriod);
                formRun.dataSource(formDataSourceStr(ProjInvoiceProposalDetailV2, ProjProposalJour)).object(fieldNum(ProjProposalJour, CFDIEInvoicePeriod_MX)).mandatory(mustUseCFDIGlobalPeriod);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>