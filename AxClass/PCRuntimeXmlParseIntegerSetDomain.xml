<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PCRuntimeXmlParseIntegerSetDomain</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>PCRuntimeXmlParseIntegerSetDomain</c> class parses a runtime XML for enumeration domain.
/// </summary>
class PCRuntimeXmlParseIntegerSetDomain extends PCRuntimeXmlParseBase
{
    #PC

    PCRuntimeXmlParseIntegerSetDomainValue      runtimeXmlParseIntegerSetDomainValue;
    PCRuntimeCacheController                    runtimeCacheController;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCachedCandidate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if the integer set domain qualifies for being cached.
    /// </summary>
    /// <param name="_domainId">
    /// An integer set domain ID.
    /// </param>
    /// <returns>
    /// True if the integer set domain could potentially be cached; false, otherwise.
    /// </returns>
    protected boolean isCachedCandidate(PCName _domainId)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        runtimeXmlParseIntegerSetDomainValue  = PCRuntimeXmlParseIntegerSetDomainValue::construct();
        runtimeCacheController          = PCRuntimeCacheController::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeCacheController</Name>
				<Source><![CDATA[
    public PCRuntimeCacheController parmRuntimeCacheController(PCRuntimeCacheController _runtimeCacheController = runtimeCacheController)
    {
        runtimeCacheController = _runtimeCacheController;

        return runtimeCacheController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmRuntimeXmlParseIntegerSetDomainValue</Name>
				<Source><![CDATA[
    public PCRuntimeXmlParseIntegerSetDomainValue parmRuntimeXmlParseIntegerSetDomainValue(PCRuntimeXmlParseIntegerSetDomainValue _runtimeXmlParseIntegerSetDomainValue = runtimeXmlParseIntegerSetDomainValue)
    {
        runtimeXmlParseIntegerSetDomainValue = _runtimeXmlParseIntegerSetDomainValue;

        return runtimeXmlParseIntegerSetDomainValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parse</Name>
				<Source><![CDATA[
    public void parse(XmlElement _xmlElement, PCRuntimeInterface _runtimeParent)
    {
        PCRuntimeModel runtimeModel = _runtimeParent as PCRuntimeModel;

        this.parseIntegerSetDomainDetails(_xmlElement, runtimeModel);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseIntegerSetDomainDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses the details of the IntegerSet domain.
    /// </summary>
    /// <param name="_xmlElement">
    /// The xml element for the IntegerSet domain.
    /// </param>
    /// <param name="_runtimeModel">
    /// The runtime model data structure class.
    /// </param>
    /// <remarks>
    /// The result can be cached if <c>isCachedCandidate</c> returns true.
    /// </remarks>
    protected void parseIntegerSetDomainDetails(XmlElement _xmlElement, PCRuntimeModel _runtimeModel)
    {
        #define.IntegerSetDomainId('integerSetDomainId')
        #define.IntegerSetValueElement('Value')
        container packedIntegerSetDomain;

        PCRuntimeIntegerSetDomain runtimeIntegerSetDomain = PCRuntimeIntegerSetDomain::construct();

        runtimeIntegerSetDomain.parmIntegerSetDefinitionId(_xmlElement.getAttribute(#IntegerSetDomainId));

        _runtimeModel.addIntegerSetDomain(runtimeIntegerSetDomain);

        if (this.isCachedCandidate(runtimeIntegerSetDomain.parmIntegerSetDefinitionId()))
        {
            packedIntegerSetDomain = runtimeCacheController.getRuntimePackedClass(runtimeIntegerSetDomain.parmIntegerSetDefinitionId());

            if (packedIntegerSetDomain != conNull())
            {
                runtimeIntegerSetDomain.unpack(packedIntegerSetDomain);
            }
            else
            {
                this.parseXmlElementCollection(_xmlElement, #IntegerSetValueElement, runtimeXmlParseIntegerSetDomainValue, runtimeIntegerSetDomain);
                runtimeCacheController.createObjectEntry(runtimeIntegerSetDomain.parmIntegerSetDefinitionId(), runtimeIntegerSetDomain.pack());
            }
        }
        else
        {
            this.parseXmlElementCollection(_xmlElement, #IntegerSetValueElement, runtimeXmlParseIntegerSetDomainValue, runtimeIntegerSetDomain);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PCRuntimeXmlParseIntegerSetDomain construct()
    {
        return new PCRuntimeXmlParseIntegerSetDomain();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>