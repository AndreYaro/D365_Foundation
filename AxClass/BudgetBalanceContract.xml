<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetBalanceContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContract]
internal final class BudgetBalanceContract extends BudgetBalanceContractBase
{
    private DimensionHierarchyId dimensionHierarchyRecId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newForLedgerDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create <b>BudgetBalanceContract</b> with parameter values
    /// </summary>
    /// <param name = "_dimensionHierarchyRecId">RecId of DimensionHierarchy used for calculating balances</param>
    /// <param name = "_ledgerRecId">RecId of Ledger</param>
    /// <param name = "_fromDate">From date to check the records in given range.</param>
    /// <param name = "_toDate">To date to check the records in given range.</param>
    /// <returns> A new instance of the <c>BudgetBalanceContract</c> class.</returns>
    [Hookable(false)]
    public static BudgetBalanceContract newForLedgerDate(
        DimensionHierarchyId _dimensionHierarchyRecId,
        LedgerRecId _ledgerRecId,
        FromDate _fromDate,
        ToDate _toDate)
    {
        BudgetBalanceContract contract = new BudgetBalanceContract();
        contract.dimensionHierarchyRecId = _dimensionHierarchyRecId;
        contract.parmLedgerRecId(_ledgerRecId);
        contract.parmToDate(_toDate);
        contract.parmFromDate(_fromDate);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newForProcessContract</Name>
				<Source><![CDATA[
    internal static BudgetBalanceContract newForProcessContract(
        BudgetBalanceProcessContract _processContract,
        DimensionHierarchyId _dimensionHierarchyRecId)
    {
        BudgetBalanceContract contract = new BudgetBalanceContract();

        contract.parmLedgerRecId(_processContract.parmLedgerRecId());
        contract.parmFromDate(_processContract.parmFromDate());
        contract.parmToDate(_processContract.parmToDate());
        contract.parmIsUpdate(_processContract.parmIsUpdate());
        contract.parmDimensionHierarchyRecId(_dimensionHierarchyRecId);

        return contract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDimensionHierarchyRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the data contract parameter dimensionhierarchy record id.
    /// </summary>
    /// <param name="_dimensionHierarchyRecId">
    /// The new value of the data contract parameter dimensionhierarchy record id; optional.
    /// </param>
    /// <returns>
    /// The current value of data contract parameter dimensionhierarchy record id
    /// </returns>
    [DataMember, Hookable(false)]
    public DimensionHierarchyId parmDimensionHierarchyRecId(DimensionHierarchyId _dimensionHierarchyRecId = dimensionHierarchyRecId)
    {
        dimensionHierarchyRecId = _dimensionHierarchyRecId;
        return dimensionHierarchyRecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>