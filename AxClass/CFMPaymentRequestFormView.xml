<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestFormView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class controller for <c>CFMPaymentRequestFrom</c>.
/// Manages access to controls
/// </summary>
class CFMPaymentRequestFormView extends CFMPaymentRequestView
{
    boolean paymentRequestCreated;
    CFMPaymentRequestTable createdPaymentRequestTable;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new instance of the <c>CFMPaymentRequestFormView</c> class.
    /// </summary>
    /// <returns>
    ///    A new instance of the <c>CFMPaymentRequestFormView</c> class.
    /// </returns>
    static public CFMPaymentRequestFormView construct()
    {
        return new CFMPaymentRequestFormView();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFormRun</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>CFMPaymentRequestForm</c> class.
    /// </summary>
    /// <param name="_formRun">
    ///    A handle to the current payment request form.
    /// </param>
    /// <param name="_viewModel">
    /// Instance of the class <c>CFMPaymentRequestViewModel</c>
    /// </param>
    /// <returns>
    ///    A new instance of the <c>CFMPaymentRequestForm</c> class.
    /// </returns>
    static public CFMPaymentRequestFormView newFormRun(FormRun _formRun, CFMPaymentRequestViewModel _viewModel)
    {
        CFMPaymentRequestFormView paymentRequestFormView = CFMPaymentRequestFormView::construct();

        paymentRequestFormView.parmFormRun(_formRun);
        paymentRequestFormView.parmPaymentRequestViewModel(_viewModel);

        paymentRequestFormView.initialize();

        return paymentRequestFormView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPaymentRequestFormName</Name>
				<Source><![CDATA[
    protected str createPaymentRequestFormName()
    {
        return formStr(CFMCreatePaymentRequest);
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodDatasourceCreated</Name>
				<Source><![CDATA[
    public void formMethodDatasourceCreated()
    {
        if (paymentRequestCreated)
        {
            this.updateViewModelBuffer();
            paymentRequestViewModel.parmPaymentRequestTableDatasource().research(true);
            paymentRequestViewModel.parmPaymentRequestLineDatasource().research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>formMethodDataSourceCreatePre</Name>
				<Source><![CDATA[
    public boolean formMethodDataSourceCreatePre()
    {
        Args args = new Args();
        CFMPaymentRequestTable currentRecord = this.parmPaymentRequestViewModel().parmPaymentRequestTable();

        args.name(this.createForm());
        args.caller(this);
        FormRun paymentRequestCreateForm = classfactory.formRunClass(args);
        paymentRequestCreateForm.init();
        paymentRequestCreateForm.run();
        paymentRequestCreateForm.wait();

        if (paymentRequestCreateForm.closedOk())
        {
            paymentRequestCreated = true;
            if (formHasMethod(paymentRequestCreateForm, identifierStr(viewModel)))
            {
                Object formObject = paymentRequestCreateForm;
                CFMPaymentRequestViewModel createdViewModel = formObject.viewModel();
                createdPaymentRequestTable = createdViewModel.parmPaymentRequestTable();
            }
        }
        else
        {
            createdPaymentRequestTable = currentRecord;
            paymentRequestCreated = false;
        }

        return paymentRequestCreated;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModelViewEventHandler</Name>
				<Source><![CDATA[
    protected CFMPaymentRequestMVEventHandler getModelViewEventHandler()
    {
        return CFMPaymentRequestMVEvenHandlerPRForm::construct(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    protected void initialize()
    {
        this.initializeDataSources();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDataSources</Name>
				<Source><![CDATA[
    /// <summary>
    /// Intializes datasource of a form.
    /// </summary>
    protected void initializeDataSources()
    {
        Common originatorRecord = formRun.args().record();

        paymentRequestViewModel.configureDatasource(originatorRecord, formRun.args().caller());
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateViewModelBuffer</Name>
				<Source><![CDATA[
    private void updateViewModelBuffer()
    {
        this.parmPaymentRequestViewModel().parmPaymentRequestTable(createdPaymentRequestTable);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>