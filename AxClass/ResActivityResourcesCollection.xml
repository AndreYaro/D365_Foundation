<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResActivityResourcesCollection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Activity resources collection controller.
/// </summary>
public class ResActivityResourcesCollection extends ResResourceAvailabilityCollection implements IAVCollectionController
{
    private ActivityRecId currentActivity;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getCollectionQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the query for all resources of the activity
    /// </summary>
    /// <returns>Instance of query object</returns>
    public Query getCollectionQuery()
    {
        AvailabilityView avControl = this.control();
        ResAvailabilityViewContext context = avControl.controlContext();
        currentActivity = context.activity();

        Query query;
        if (ResUtil::isPerformanceEnhancementFeatureEnabled(true))
        {
            query = new Query(querystr(ResActivityResourcesQueryV2));

            QueryBuildDataSource dataSource = query.dataSourceName('ActivityResources');

            // set recipientCompany
            dataSource.rangeField(fieldNum(ResActivityResourceDetailViewV2, RecipientCompany))
                .value(queryValue(curExt()));
            // set activity
            dataSource.rangeField(fieldNum(ResActivityResourceDetailViewV2, Activity))
                .value(queryValue(currentActivity));
            dataSource.rangeField(fieldNum(ResActivityResourceDetailViewV2, EffectiveDate))
                .value(strfmt('..%1', queryValue(context.endDateTime())));
            dataSource.rangeField(fieldNum(ResActivityResourceDetailViewV2, ExpirationDate))
                .value(strfmt('%1..', queryValue(context.startDateTime())));
        }
        else
        {
            query = new Query(querystr(ResActivityResourcesQuery));

            QueryBuildDataSource dataSource = query.dataSourceName('ActivityResources');

            // set recipientCompany
            dataSource.rangeField(fieldNum(ResActivityResourceDetailView, RecipientCompany))
                .value(queryValue(curExt()));
            // set activity
            dataSource.rangeField(fieldNum(ResActivityResourceDetailView, Activity))
                .value(queryValue(currentActivity));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes common record to data contract instance.
    /// </summary>
    /// <param name = "_entity">Record instance.</param>
    /// <returns>Instance of <c>CollectionItemDataContract</c>.</returns>
    public CollectionItemDataContract resolveEntity(Common _entity)
    {
        List properties = new List(Types::Class);

        EntityFieldDataContract kvPair = EntityFieldDataContract::construct('Name', _entity.getFieldValue('Name'));
        properties.addEnd(kvPair);

        kvPair = EntityFieldDataContract::construct('Activity', currentActivity);
        properties.addEnd(kvPair);

        kvPair = EntityFieldDataContract::construct('Role', _entity.getFieldValue('SourceCompany'));
        properties.addEnd(kvPair);

        kvPair = EntityFieldDataContract::construct('IsGenericResource', _entity.getFieldValue('Generic'));
        properties.addEnd(kvPair);

        str collectionKey = this.buildCollectionItemKey(
            currentActivity,
            _entity.getFieldValue('Resource'),
            _entity.getFieldValue('ActivityResource'));

        CollectionItemDataContract resource = CollectionItemDataContract::construct();
        resource.CollectionKey(collectionKey);
        resource.Properties(properties);
        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parseResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parses resource record Id from the string argument.
    /// </summary>
    /// <param name = "_arguments">Arguments string.</param>
    /// <returns>Resource record Id.</returns>
    protected ResourceRecId parseResource(str _arguments)
    {
        ActivityRecId           activity;
        ResourceRecId           resource;
        Activityresourcerecid   activityResource;

        if (_arguments)
        {
            [activity, resource, activityResource] = str2con(_arguments, ResUtil::collectionItemDataDelimiter);
        }

        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes an instance of the activity resources collection controller.
    /// </summary>
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the activity resources collection controller.
    /// </summary>
    /// <returns>Instance of <c>ResActivityResourcesCollection</c>.</returns>
    public static IAVCollectionController construct()
    {
        IAVCollectionController controller = new ResActivityResourcesCollection();
        return controller;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>