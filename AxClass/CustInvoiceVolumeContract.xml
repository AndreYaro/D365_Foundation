<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceVolumeContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>CustInvoiceVolume</c> SSRS report
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>CustInvoiceVolume</c> SSRS Report.
/// </remarks>
[
DataContractAttribute,
SysOperationContractProcessingAttribute(classStr(CustInvoiceVolumeUIBuilder)),
SysOperationGroupAttribute('Criteria',"@SYS1046",'1')
]
public class CustInvoiceVolumeContract
    implements SysOperationValidatable, SysOperationInitializable
{
    AccountVATNum groupingBy;
    FromDate fromDate;
    ToDate toDate;
    AmountMST minimumAmount;
    boolean amountExclSalesTax;

    List billingClassification;
    NoYes inclTransWithNoBillingClass;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes data contract values.
    /// </summary>
    public void initialize()
    {
        billingClassification = new List(Types::String);

        if (!CustParameters::isBillingClassificationEnabled())
        {
            billingClassification.addEnd(SysLabel::labelId2String(literalStr("@GLS223107")));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAmountExclSalesTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter AmountExclSalesTax.
    /// </summary>
    /// <param name="_amountExclSalesTax">
    /// The new value of the datacontract parameter AmountExclSalesTax; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter AmountExclSalesTax
    /// </returns>
    [
        DataMemberAttribute('AmountExclSalesTax'),
        SysOperationLabelAttribute(literalstr("@SYS1019")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('5')
    ]
    public boolean parmAmountExclSalesTax(boolean _amountExclSalesTax = amountExclSalesTax)
    {
        amountExclSalesTax = _amountExclSalesTax;
        return amountExclSalesTax;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmBillingClassification</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('BillingClassification'),
        SysOperationLabelAttribute(literalStr("@SPS371")),
        SysOperationHelpTextAttribute(literalStr("@SPS677")),
        SysOperationDisplayOrderAttribute('0'),
        AifCollectionTypeAttribute('return', Types::String)
    ]
    public List parmBillingClassification(List _billingClassification = billingClassification)
    {
        billingClassification = _billingClassification;
        return billingClassification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFromDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter FromDate.
    /// </summary>
    /// <param name="_fromDate">
    /// The new value of the datacontract parameter FromDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter FromDate
    /// </returns>
    [
        DataMemberAttribute('FromDate'),
        SysOperationLabelAttribute(literalstr("@SYS5209")),
        SysOperationHelpTextAttribute(literalstr("@SYS4083")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public FromDate parmFromDate(FromDate _fromDate = fromDate)
    {
        fromDate = _fromDate;
        return fromDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGroupingBy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter GroupingBy.
    /// </summary>
    /// <param name="_groupingBy">
    /// The new value of the datacontract parameter GroupingBy; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter GroupingBy
    /// </returns>
    [
        DataMemberAttribute('GroupingBy'),
        SysOperationLabelAttribute(literalstr("@SYS55014")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public AccountVATNum parmGroupingBy(AccountVATNum _groupingBy = groupingBy)
    {
        groupingBy = _groupingBy;
        return groupingBy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInclTransWithNoBillingClass</Name>
				<Source><![CDATA[
        [
        DataMemberAttribute('InclTransWithNoBillingClass'),
        SysOperationLabelAttribute(literalStr("@SPS691")),
        SysOperationHelpTextAttribute(literalStr("@SPS1009")),
        SysOperationDisplayOrderAttribute('0')
    ]
    public NoYes parmInclTransWithNoBillingClass(NoYes _inclTransWithNoBillingClass = inclTransWithNoBillingClass)
    {
        inclTransWithNoBillingClass = _inclTransWithNoBillingClass;
        return inclTransWithNoBillingClass;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMinimumAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter MinimumAmount.
    /// </summary>
    /// <param name="_minimumAmount">
    /// The new value of the datacontract parameter MinimumAmount; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter MinimumAmount
    /// </returns>
    [
        DataMemberAttribute('MinimumAmount'),
        SysOperationLabelAttribute(literalstr("@SYS54978")),
        SysOperationHelpTextAttribute(literalstr("@SYS25221")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('4')
    ]
    public AmountMST parmMinimumAmount(AmountMST _minimumAmount = minimumAmount)
    {
        minimumAmount = _minimumAmount;
        return minimumAmount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmToDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter ToDate.
    /// </summary>
    /// <param name="_toDate">
    /// The new value of the datacontract parameter ToDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter ToDate
    /// </returns>
    [
        DataMemberAttribute('ToDate'),
        SysOperationLabelAttribute(literalstr("@SYS14656")),
        SysOperationHelpTextAttribute(literalstr("@SYS53942")),
        SysOperationGroupMemberAttribute('Criteria'),
        SysOperationDisplayOrderAttribute('3')
    ]
    public ToDate parmToDate(ToDate _toDate = toDate)
    {
        toDate = _toDate;
        return toDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the dialog values for errors.
    /// </summary>
    /// <returns>
    /// false if an error has occurred in the dialog values; otherwise, true .
    /// </returns>
    /// <remarks>
    /// The dialog values are handled through the contract.
    /// </remarks>
    public boolean validate()
    {
        return CustBillingClassificationReportManager::validate(billingClassification, inclTransWithNoBillingClass);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>