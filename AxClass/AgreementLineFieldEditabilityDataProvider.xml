<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgreementLineFieldEditabilityDataProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AgreementLineFieldEditabilityDataProvider</c> class is responsible
/// for providing data that is necessary for detremining editability of agreement line fields.
/// </summary>
class AgreementLineFieldEditabilityDataProvider
{
    // Input

    AgreementLine agreementLine;

    // Cached values (should only be accessed through lazy loading methods)

    AgreementHeaderFieldEditabilityDataProvider agreementHeaderDataProvider;
    UnknownNoYes                                isLineReleased = UnknownNoYes::Unknown;
    UnknownNoYes                                isCatchWeightItem = UnknownNoYes::Unknown;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newFromAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>AgreementLineFieldEditabilityDataProvider</c> class
    /// for the specified <c>AgreementLine</c> record.
    /// </summary>
    /// <param name = "_agreementLine">The <c>AgreementLine</c> record.</param>
    /// <returns>Creates a new instance of the <c>AgreementLineFieldEditabilityDataProvider</c> class.</returns>
    public static AgreementLineFieldEditabilityDataProvider newFromAgreementLine(AgreementLine _agreementLine)
    {
        if (!_agreementLine.Agreement || _agreementLine.IsDeleted) // if line got deleted
        {
            return AgreementLineDeletedFieldEditabilityDataProvider::newFromAgreementLine(_agreementLine);
        }
        else if (_agreementLine is AgreementLineQuantityCommitment)
        {
            return AgreementLineQuantityCommitmentFieldEditabilityDataProvider::newFromAgreementLine(_agreementLine);
        }
        else if (_agreementLine is AgreementLineVolumeCommitment)
        {
            return AgreementLineVolumeCommitmentFieldEditabilityDataProvider::newFromAgreementLine(_agreementLine);
        }

        throw error(Error::wrongUseOfFunction(funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>AgreementLine</c> record for which fields editability must be determined.
    /// </summary>
    /// <returns>The <c>AgreementLine</c> record for which fields editability must be determined.</returns>
    public AgreementLine parmAgreementLine()
    {
        return agreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeader</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>AgreementHeader</c> record for the agreement line.
    /// </summary>
    /// <returns>The <c>AgreementHeader</c> record for the agreement line.</returns>
    public AgreementHeader parmAgreementHeader()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().parmAgreementHeader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAgreementHeaderDefault</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>AgreementHeaderDefault</c> record for the agreement line.
    /// </summary>
    /// <returns>The <c>AgreementHeaderDefault</c> record for the agreement line.</returns>
    public AgreementHeaderDefault parmAgreementHeaderDefault()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().parmAgreementHeaderDefault();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsLineReleased</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the boolean value indicating whether the agreement line is released.
    /// </summary>
    /// <param name = "_isLineReleased">The boolean value indicating whether the agreement line is released.</param>
    /// <returns>true, if the agreement line is released; otherwise, false.</returns>
    public boolean parmIsLineReleased(boolean _isLineReleased = false)
    {
        boolean isSetter = !prmIsDefault(_isLineReleased);
        if (isSetter)
        {
            isLineReleased = this.booleanToUnknownNoYes(_isLineReleased);
        }
        else if (isLineReleased == UnknownNoYes::Unknown)
        {
            isLineReleased = this.booleanToUnknownNoYes(agreementLine.isReleased());
        }

        return isLineReleased == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsCatchWeightItem</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the agreement line is for a catch weight item.
    /// </summary>
    /// <returns>true, if the agreement line is for a catch weight item; otherwise, false.</returns>
    public boolean parmIsCatchWeightItem()
    {
        if (isCatchWeightItem == UnknownNoYes::Unknown)
        {
            isCatchWeightItem = this.booleanToUnknownNoYes(PdsCatchWeightItem::exist(agreementLine.ItemId));
        }

        return isCatchWeightItem == UnknownNoYes::Yes;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAgreementHeader</Name>
				<Source><![CDATA[
    protected AgreementHeader getAgreementHeader()
    {
        return agreementLine.agreementHeader();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmHeaderFieldsEditabilityDataProvider</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>AgreementHeaderFieldEditabilityDataProvider</c> object for the agreement line's header.
    /// </summary>
    /// <returns>The <c>AgreementHeaderFieldEditabilityDataProvider</c> object for the agreement line's header.</returns>
    public AgreementHeaderFieldEditabilityDataProvider parmHeaderFieldsEditabilityDataProvider()
    {
        if (!agreementHeaderDataProvider)
        {
            agreementHeaderDataProvider = AgreementHeaderFieldEditabilityDataProvider::newFromAgreementHeader(this.getAgreementHeader());
        }

        return agreementHeaderDataProvider;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCanBeIntercompanyAgreement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the agreement can be an intercompany agreement.
    /// </summary>
    /// <returns>true, if the agreement can be an intercompany agreement; otherwise, false.</returns>
    public boolean parmCanBeIntercompanyAgreement()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().parmCanBeIntercompanyAgreement();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntercompanyLinkExists</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether an intercompany link exists for the agreement.
    /// </summary>
    /// <returns>true, if the agreement can be an intercompany agreement; otherwise, false.</returns>
    public boolean parmIntercompanyLinkExists()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().parmIntercompanyLinkExists();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIntercompanyAgreementActionPolicy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>IntercompanyAgreementActionPolicy</c> record for the agreement.
    /// </summary>
    /// <returns>The <c>IntercompanyAgreementActionPolicy</c> record for the agreement.</returns>
    public IntercompanyAgreementActionPolicy parmIntercompanyAgreementActionPolicy()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().parmIntercompanyAgreementActionPolicy();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromAgreementLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the object based on the specified <c>AgreementLine</c> record.
    /// </summary>
    /// <param name = "_agreementLine">The <c>AgreementLine</c> record.</param>
    protected void initFromAgreementLine(AgreementLine _agreementLine)
    {
        agreementLine = _agreementLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static AgreementLineFieldEditabilityDataProvider construct()
    {
        return new AgreementLineFieldEditabilityDataProvider();
    }

]]></Source>
			</Method>
			<Method>
				<Name>booleanToUnknownNoYes</Name>
				<Source><![CDATA[
    protected UnknownNoYes booleanToUnknownNoYes(boolean _booleanValue)
    {
        return _booleanValue ? UnknownNoYes::Yes : UnknownNoYes::No;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditDiscount</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether discounts can be edited.
    /// </summary>
    /// <returns>
    ///    true if discounts can be edited; otherwise, false.
    /// </returns>
    public boolean canEditDiscount()
    {
        if (this.parmIsLineReleased())
        {
            return false;
        }

        if (this.parmCanBeIntercompanyAgreement() && this.parmIntercompanyLinkExists())
        {
            return this.parmIntercompanyAgreementActionPolicy().AllowDiscountEdit;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditPrice</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether prices can be edited.
    /// </summary>
    /// <returns>
    ///    true if prices can be edited; otherwise, false.
    /// </returns>
    public boolean canEditPrice()
    {
        if (this.parmIsLineReleased())
        {
            return false;
        }

        if (this.parmCanBeIntercompanyAgreement() && this.parmIntercompanyLinkExists())
        {
            return this.parmIntercompanyAgreementActionPolicy().AllowPriceEdit;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditIsPriceInformationMandatory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the fixed prices setting can be edited.
    /// </summary>
    /// <returns>
    /// true if the fixed prices setting can be edited; otherwise, false.
    /// </returns>
    public boolean canEditIsPriceInformationMandatory()
    {
        if (this.parmIsLineReleased())
        {
            return false;
        }

        if (this.parmCanBeIntercompanyAgreement() && this.parmIntercompanyLinkExists())
        {
            return this.parmIntercompanyAgreementActionPolicy().AllowPriceEdit;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditValidityPeriod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the validity period can be edited.
    /// </summary>
    /// <returns>
    /// true if the validity period can be edited on the agreement; otherwise, false
    /// </returns>
    public boolean canEditValidityPeriod()
    {
        return this.parmHeaderFieldsEditabilityDataProvider().canEditValidityPeriod();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditIsMaxEnforced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the "Max is enforced" flag can be edited.
    /// </summary>
    /// <returns>
    /// true if the "Max is enforced" flag can be edited; otherwise, false.
    /// </returns>
    public boolean canEditIsMaxEnforced()
    {
        return !this.parmIsLineReleased();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditItemId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether item number can be edited.
    /// </summary>
    /// <returns>
    ///    true if item number can be edited; otherwise, false.
    /// </returns>
    public boolean canEditItemId()
    {
        return agreementLine.canEditItemId();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditCategory</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether category can be edited.
    /// </summary>
    /// <returns>
    ///    true if category can be edited; otherwise, false.
    /// </returns>
    public boolean canEditCategory()
    {
        return agreementLine.canEditCategory();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditProjectId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether project ID can be edited.
    /// </summary>
    /// <returns>
    /// true if project ID can be edited; otherwise, false.
    /// </returns>
    public boolean canEditProjectId()
    {
        return !this.parmIsLineReleased() && this.parmAgreementHeaderDefault().Project;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditProjectFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether project related fields can be edited.
    /// </summary>
    /// <returns>
    /// true if project related fields can be edited; otherwise, false.
    /// </returns>
    public boolean canEditProjectFields()
    {
        return agreementLine.ProjectProjId && !this.parmIsLineReleased();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canEditInventoryDimensions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether inventory dimensions can be edited.
    /// </summary>
    /// <returns>
    /// true if inventory dimensions can be edited; otherwise, false.
    /// </returns>
    public boolean canEditInventoryDimensions()
    {
        return !this.parmIsLineReleased();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>