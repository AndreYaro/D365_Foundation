<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesTableSkipBusinessLogicContext</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///  The <c>SalesTableSkipBusinessLogicContext</c> class helps in transferring context across <c>SalesTable</c> table methods.
/// </summary>
internal final class SalesTableSkipBusinessLogicContext implements System.IDisposable
{
    private static SalesTableSkipBusinessLogicContext instance;
    private boolean skipUpdate;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dispose</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public void dispose()
    {
        instance = null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs a new instance of the class.
    /// </summary>
    /// <returns>A new instance of the class.</returns>
    [Hookable(false)]
    public static SalesTableSkipBusinessLogicContext construct()
    {
        if (instance == null)
        {
            instance = new SalesTableSkipBusinessLogicContext();
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>current</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the instance of the class.
    /// </summary>
    /// <returns>The instance of the class. If no instance is created null is returned.</returns>
    [Hookable(false)]
    public static SalesTableSkipBusinessLogicContext current()
    {
        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSkipUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Parameter that uses for the skipping business logic in the <c>update</c> method.
    /// </summary>
    /// <param name = "_skipUpdate">Indicates that business logic should be skipped in the <c>update</c> method.</param>
    /// <returns>The context indicating if business logic should be skipped.</returns>
    [Hookable(false)]
    public UnknownNoYes parmSkipUpdate(boolean _skipUpdate = skipUpdate)
    {
        skipUpdate = _skipUpdate;
        return skipUpdate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>