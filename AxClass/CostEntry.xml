<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostEntry</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostEntry</c> class implements cost accounting entries associated to an <c>CostEvent</c>.
/// </summary>
public class CostEntry extends CostEntryBase
{
    LedgerDimensionAccount      ledgerDimension, offsetLedgerDimension;
    LedgerPostingType           postingType, offSetPostingType;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionAccount parmLedgerDimension(LedgerDimensionAccount _ledgerDimension = ledgerDimension)
    {
        ledgerDimension = _ledgerDimension;

        return ledgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetLedgerDimension</Name>
				<Source><![CDATA[
    public LedgerDimensionAccount parmOffsetLedgerDimension(LedgerDimensionAccount _offsetLedgerDimension = offsetLedgerDimension)
    {
        offsetLedgerDimension = _offsetLedgerDimension;

        return offsetLedgerDimension;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOffsetPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmOffsetPostingType(LedgerPostingType _offsetPostingType = offsetPostingType)
    {
        offsetPostingType = _offsetPostingType;

        return offsetPostingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPostingType</Name>
				<Source><![CDATA[
    public LedgerPostingType parmPostingType(LedgerPostingType _postingType = postingType)
    {
        postingType = _postingType;

        return postingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    private static CostEntry construct()
    {
        return new CostEntry();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newCostEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CostEntry</c> class.
    /// </summary>
    /// <param name="_event">
    /// An instance of the <c>CostEvent</c> class associated with the entry.
    /// </param>
    /// <param name="_descriptor">
    /// An instance of the <c>CostEntryDescriptorBase</c> class associated with the entry.
    /// </param>
    /// <param name="_magnitude">
    /// The <c>CostMagnitude</c> for the entry.
    /// </param>
    /// <returns>
    /// An instance of the <c>CostEntry</c> class.
    /// </returns>
    public static CostEntry newCostEntry(
        CostEvent                   _event,
        CostProductCostDescriptor   _descriptor,
        CostMagnitude               _magnitude)
    {
        CostEntry   entry = CostEntry::construct();

        entry.parmEvent(_event);
        entry.parmDescriptor(_descriptor);
        entry.parmMagnitude(_magnitude);

        return entry;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromCostEntryTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CostEntry</c> class from a <c>costEntryTable</c> buffer.
    /// </summary>
    /// <param name="_costEntryTable">
    /// the <c>costEntryTable</c> buffer.
    /// </param>
    /// <returns>
    /// An instance of the <c>CostEntry</c> class.
    /// </returns>
    public static CostEntry newFromCostEntryTable(CostEntryTable _costEntryTable)
    {
        CostEvent event = CostEvent::newCostEventTable(CostEventTable::findRecId(_costEntryTable.CostEvent));
        CostProductCostDescriptor descriptor = CostProductCostDescriptor::newFromCostEntryTable(_costEntryTable);
        CostEntry costEntry = CostEntry::newCostEntry(event, descriptor, _costEntryTable.Magnitude);

        costEntry.parmPostingType(_costEntryTable.PostingType);
        costEntry.parmLedgerDimension(_costEntryTable.LedgerDimension);
        costEntry.parmOffsetPostingType(_costEntryTable.OffsetPostingType);
        costEntry.parmOffsetLedgerDimension(_costEntryTable.OffsetLedgerDimension);

        return costEntry;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>
