<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetStatementContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Data Contract class for <c>AssetStatement</c> SSRS report.
/// </summary>
/// <remarks>
/// This is the Data Contract class for the <c>AssetStatement</c> SSRS Report.
/// </remarks>
[
    DataContractAttribute,
    SysOperationGroupAttribute('Period', "@SYS40", '1'),
    SysOperationGroupAttribute('Currency', "@SYS129076", '2')
]
public class AssetStatementContract implements SysOperationValidatable
{
    StartDate startDate;
    EndDate endDate;
    LedgerCurrencySelection ledgerCurrencySelection;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmEndDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter EndDate.
    /// </summary>
    /// <param name="_endDate">
    /// The new value of the datacontract parameter EndDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter EndDate.
    /// </returns>
    [
        DataMemberAttribute('EndDate'),
        SysOperationLabelAttribute(literalStr("@SYS22882")),
        SysOperationHelpTextAttribute(literalStr("@SYS55096")),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('2')
    ]
    public EndDate parmEndDate(EndDate _endDate = endDate)
    {
        endDate = _endDate;
        return endDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or sets the value of the datacontract parameter StartDate.
    /// </summary>
    /// <param name="_startDate">
    /// The new value of the datacontract parameter StartDate; optional.
    /// </param>
    /// <returns>
    ///  The current value of datacontract parameter StartDate.
    /// </returns>
    [
        DataMemberAttribute('StartDate'),
        SysOperationLabelAttribute(literalStr("@SYS2168")),
        SysOperationHelpTextAttribute(literalStr("@SYS9930")),
        SysOperationGroupMemberAttribute('Period'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public StartDate parmStartDate(StartDate _startDate = startDate)
    {
        startDate = _startDate;
        return startDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCurrencySelection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets or Sets the <C>ledgerCurrencySelection</C> parameter.
    /// </summary>
    /// <param name="_ledgerCurrencySelection">
    /// The value to set.
    /// </param>
    /// <returns>
    /// The value of the <C>ledgerCurrencySelection</C> parameter.
    /// </returns>
    [
        DataMemberAttribute('CurrencySelection'),
        SysOperationLabelAttribute(literalstr("@SYS129076")),
        SysOperationHelpTextAttribute(literalstr("@FixedAssets:FA_Reports_CurrencySelectionText")),
        SysOperationGroupMemberAttribute('Currency'),
        SysOperationDisplayOrderAttribute('1')
    ]
    public LedgerCurrencySelection parmCurrencySelection(LedgerCurrencySelection _ledgerCurrencySelection = ledgerCurrencySelection)
    {
        ledgerCurrencySelection = _ledgerCurrencySelection;
        return ledgerCurrencySelection;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the parameters are valid.
    /// </summary>
    /// <returns>
    /// true if the parameters are valid; otherwise, false.
    /// </returns>
    public boolean validate()
    {
        boolean isValid = true;
        FiscalCalendarRecId calendarRecId = CompanyInfoHelper::fiscalCalendarRecId();

        if (this.parmStartDate() == dateNull())
        {
            isValid = checkFailed("@SYS31433");
        }

        if (this.parmEndDate() == dateNull())
        {
            isValid = checkFailed("@SYS30392");
        }

        if (isValid && this.parmStartDate() != LedgerFiscalCalendar::findOpeningPeriodStartDateByDate(calendarRecId, this.parmEndDate()))
        {
            isValid = checkFailed("@SYS77973");
        }

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>