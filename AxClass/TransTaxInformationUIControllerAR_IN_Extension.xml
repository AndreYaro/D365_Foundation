<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerAR_IN_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Accounts Receivable on new tax information UI and transaction update.
/// </summary>
[ExtensionOf(classstr(TransTaxInformationUIControllerAR))]
final class TransTaxInformationUIControllerAR_IN_Extension
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initAllCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes UI controls for Tax information form.
    /// </summary>
    protected void initAllCtrls()
    {
        next initAllCtrls();
        // VAT
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
        {
            transTaxInformationVATCtrl.parmVatCommodityCodeStrCtrl().registerOverrideMethod(methodStr(FormReferenceGroupControl, lookup), methodStr(TransTaxInformationUIControllerAR, lookupVatCommodityCode), this);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToExciseCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all Excise tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToExciseCtrls()
    {
        next setVisibleToExciseCtrls();
        
        transTaxInformationExciseCtrl.parmCENVATCreditAvailed().visible(false);
        transTaxInformationExciseCtrl.parmDisposalType().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToServiceTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all service tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToServiceTaxCtrls()
    {
        next setVisibleToServiceTaxCtrls();

        transTaxInformationServiceTaxCtrl.parmIsRecoverableServiceTax().visible(false);
        transTaxInformationServiceTaxCtrl.parmServiceTaxConsignmentNoteNum().visible(false);
        transTaxInformationServiceTaxCtrl.parmGTAServiceCategory().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToVATCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all VAT tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToVATCtrls()
    {
        next setVisibleToVATCtrls();

        transTaxInformationVATCtrl.parmVatGoodsTypeComboBox().visible(false);
        transTaxInformationVATCtrl.parmNonRecoverablePercentRealCtrl().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToWithholdTaxCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all withholding tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToWithholdTaxCtrls()
    {
        next setVisibleToWithholdTaxCtrls();

        transTaxInformationTaxWithholdingCtrl.parmSoftwareDeclReceivedCheckBox().visible(false);
        transTaxInformationTaxWithholdingCtrl.parmAcknowledgementNumberStrCtrl().visible(false);
        transTaxInformationTaxWithholdingCtrl.parmCountryRegionToRemittanceRefGroup().visible(false);
        transTaxInformationTaxWithholdingCtrl.parmNatureOfRemittanceRefGroup().visible(false);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustomsCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all customer tax controls on Tax information form.
    /// </summary>
    protected void setVisibleToCustomsCtrls()
    {
        next setVisibleToCustomsCtrls();
        transTaxInformationCustomsCtrl.parmCustomsTariffDirection().visible(false);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>