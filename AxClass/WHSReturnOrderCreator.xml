<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSReturnOrderCreator</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class WHSReturnOrderCreator
{
    private Map itemInventoryUnits = new Map(Types::String, Types::String);
    private Map lastReturnLineNumbers = new Map(Types::String, Types::Real);
    private Map returnDispositionCodes = new Map(Types::String, Types::String);

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createReturnHeader</Name>
				<Source><![CDATA[
    internal SalesTable createReturnHeader(CustVendAC _accountNum)
    {
        ttsbegin;
        SalesTable returnOrder;
        returnOrder.CustAccount = _accountNum;
        returnOrder.initFromCustTable();
        returnOrder.SalesId = NumberSeq::newGetNum(SalesParameters::numRefSalesId()).num();
        returnOrder.ReturnItemNum = NumberSeq::newGetNum(SalesParameters::numRefReturnItemNum()).num();
        returnOrder.SalesType = SalesType::ReturnItem;
        returnOrder.ReturnStatus = ReturnStatusHeader::Created;
        returnOrder.initValue(returnOrder.SalesType);

        if (!returnOrder.validateWrite())
        {
            throw error(strFmt("@WAX:WHSCannotWriteRecordInTable", tablePName(SalesTable)));
        }
        
        returnOrder.insert();
        ttscommit;
        
        return returnOrder;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createReturnLine</Name>
				<Source><![CDATA[
    internal SalesLine createReturnLine(WHSReturnOrderLineCreatorParameters _parameters)
    {
        ttsbegin;
        SalesLine returnLine;
        returnLine.initFromSalesTable(_parameters.parmReturnOrder());
        
        if (_parameters.parmSkipAssignInventTransId())
        {
            returnLine.InventTransId = _parameters.parmInventTransId();
        }
        returnLine.SkipAssignInventTransId = _parameters.parmSkipAssignInventTransId();

        returnLine.ReturnDispositionCodeId = this.returnDispositionCode(_parameters.parmDispositionCode());

        InventTable item = _parameters.parmItem();

        returnLine.ItemId = item.ItemId;
        returnLine.initFromInventTable(item);
        returnLine.InventDimId = _parameters.parmInventDimId();

        returnLine.SalesQty = _parameters.parmSalesQty();
        returnLine.QtyOrdered = returnLine.SalesQty;
        returnLine.ExpectedRetQty = returnLine.SalesQty;
        returnLine.SalesUnit = this.itemInventoryUnit(item);
        returnLine.ReturnStatus = ReturnStatusLine::Awaiting;
        returnLine.LineNum = this.nextReturnLineNumber(_parameters.parmReturnOrder().SalesId);
        if (!returnLine.validateWrite())
        {
            throw error(strFmt("@WAX:WHSCannotWriteRecordInTable", tablePName(SalesLine)));
        }

        returnLine.insert();
        ttscommit;

        return returnLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemInventoryUnit</Name>
				<Source><![CDATA[
    private UnitOfMeasureSymbol itemInventoryUnit(InventTable _item)
    {
        if (!itemInventoryUnits.exists(_item.ItemId))
        {
            UnitOfMeasureSymbol inventoryUnit = _item.inventUnitId();

            itemInventoryUnits.add(_item.ItemId, inventoryUnit);
        }

        return itemInventoryUnits.lookup(_item.ItemId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextReturnLineNumber</Name>
				<Source><![CDATA[
    private LineNum nextReturnLineNumber(SalesId _salesId)
    {
        LineNum lastLineNum = lastReturnLineNumbers.exists(_salesId) ? lastReturnLineNumbers.lookup(_salesId) : SalesLine::lastLineNum(_salesId);
        LineNum nextLineNum = lastLineNum + 1;

        lastReturnLineNumbers.add(_salesId, nextLineNum);

        return nextLineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnDispositionCode</Name>
				<Source><![CDATA[
    private ReturnDispositionCodeId returnDispositionCode(WHSDispositionCode _dispositionCode)
    {
        if (!returnDispositionCodes.exists(_dispositionCode))
        {
            ReturnDispositionCodeId returnDispositionCode = WHSDispositionTable::find(_dispositionCode).ReturnDispositionCodeId;

            returnDispositionCodes.add(_dispositionCode, returnDispositionCode);
        }

        return returnDispositionCodes.lookup(_dispositionCode);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>