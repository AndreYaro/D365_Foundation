<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BusinessDocChorusProProjectInvoiceSiretProviderBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// A project invoice based Siret provider for Chorus Pro integration.
/// </summary>
internal abstract class BusinessDocChorusProProjectInvoiceSiretProviderBase implements BusinessDocChorusProISiretProvider
{
    protected FormDataSource projProposalJourDataSource;
    protected ProjProposalJour projProposalJourTableRec;
    protected BusinessDocumentIMessageLogger messageLogger;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new(BusinessDocumentIMessageLogger _messageLogger)
    {
        messageLogger = _messageLogger;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustomerByFundingSource</Name>
				<Source><![CDATA[
    protected abstract CustTable getCustomerByFundingSource(ProjFundingSource _fundingSource)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRecord</Name>
				<Source><![CDATA[
    protected ProjProposalJour getRecord()
    {
        if (projProposalJourDataSource != null)
        {
            return projProposalJourDataSource.cursor();
        }
        return projProposalJourTableRec;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSiret</Name>
				<Source><![CDATA[
    public BusinessDocInvoiceAccountSiret_FR getSiret()
    {
        BusinessDocInvoiceAccountSiret_FR ret;

        ProjProposalJour projProposalJour = this.getRecord();
        if (projProposalJour.RecId == 0)
        {
            messageLogger.addError("@BusinessDocumentSubmissionService:ProjectProposalJournalNotSet");
            return ret;
        }
        
        ProjFundingSource fundingSource = ProjFundingSource::find(projProposalJour.FundingSource);
        if (fundingSource.RecId == 0)
        {
            messageLogger.addError("@BusinessDocumentSubmissionService:ProjectFundingSourceNotSet");
            return ret;
        }

        CustTable custTable = this.getCustomerByFundingSource(fundingSource);

        ret = TaxRegistration::getPrimaryRegistrationNumber(custTable, TaxRegistrationTypesList::SIRET);
        
        if (!ret)
        {
            ret = custTable.CompanyIdSiret;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>