<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GanttDataModification</Name>
	<SourceCode>
		<Declaration><![CDATA[
class GanttDataModification
{
    GanttTTSId              ttsId;
    GanttModificationId     modificationId;
    GanttModificationAction modificationAction;

    TableName               modifiedTableName;
    RecId                   modifiedRecId;
    Map                     mapModifiedFields;

    Map                     mapExtraModifiedFields;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSetModifiedFieldNames</Name>
				<Source><![CDATA[
    public Set getSetModifiedFieldNames()
    {
        Set             setModifiedFieldNames = new Set(Types::String);

        MapEnumerator   mapEnumerator;

        if (!this.parmMapModifiedFields())
        {
            return setModifiedFieldNames;
        }

        mapEnumerator = this.parmMapModifiedFields().getEnumerator();

        while (mapEnumerator && mapEnumerator.moveNext())
        {
            setModifiedFieldNames.add(mapEnumerator.current());
        }

        return setModifiedFieldNames;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertExtraModifiedField</Name>
				<Source><![CDATA[
    public void insertExtraModifiedField(FieldName  _fieldName,
                                         str        _strFieldValue,
                                         boolean    _updateIfExists = false)
    {
        void insertExtraField()
        {
            mapModifiedFields.insert(_fieldName, _strFieldValue);

            mapExtraModifiedFields.insert(_fieldName, _strFieldValue);
        }
        if (mapModifiedFields.exists(_fieldName))
        {
            if (_updateIfExists)
            {
                mapModifiedFields.remove(_fieldName);

                insertExtraField();
            }
        }
        else
        {
            insertExtraField();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInsideDatesInterval</Name>
				<Source><![CDATA[
    public boolean isInsideDatesInterval(FieldName  _fieldNameSchedFromDate,
                                         FieldName  _fieldNameSchedToDate,
                                         FromDate   _fromDate,
                                         ToDate     _toDate)
    {
        FromDate    modificationFromDate;
        ToDate      modificationToDate;
        if (mapModifiedFields == null || !mapModifiedFields.elements())
        {
            return true;
        }

        if (mapModifiedFields.exists(_fieldNameSchedFromDate))
        {
            modificationFromDate    = str2date(mapModifiedFields.lookup(_fieldNameSchedFromDate), GanttTableField::date2StrSequence());
        }

        if (mapModifiedFields.exists(_fieldNameSchedToDate))
        {
            modificationToDate      = str2date(mapModifiedFields.lookup(_fieldNameSchedToDate), GanttTableField::date2StrSequence());
        }

        if ((modificationFromDate    != dateNull()  &&  modificationToDate != dateNull()) &&
           (modificationFromDate    < _fromDate    ||  modificationToDate  > _toDate))
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedTableId</Name>
				<Source><![CDATA[
    public tableId modifiedTableId()
    {
        tableId modifiedTableId;
        if (!modifiedTableName)
        {
            error(strfmt("@SYS27147", classId2Name(classidget(this))));
        }

        modifiedTableId = tablename2id(modifiedTableName);

        return modifiedTableId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        mapModifiedFields       = new Map(Types::String, Types::String);
        mapExtraModifiedFields  = new Map(Types::String, Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMapExtraModifiedFields</Name>
				<Source><![CDATA[
    public Map parmMapExtraModifiedFields(Map _mapExtraModifiedFields = mapExtraModifiedFields)
    {
        mapExtraModifiedFields = _mapExtraModifiedFields;

        return mapExtraModifiedFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMapModifiedFields</Name>
				<Source><![CDATA[
    public Map parmMapModifiedFields(Map _mapModifiedFields = mapModifiedFields)
    {
        mapModifiedFields = _mapModifiedFields;

        return mapModifiedFields;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModificationAction</Name>
				<Source><![CDATA[
    public GanttModificationAction parmModificationAction(GanttModificationAction _modificationAction = modificationAction)
    {
        modificationAction = _modificationAction;

        return modificationAction;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModificationId</Name>
				<Source><![CDATA[
    public GanttModificationId parmModificationId(GanttModificationId _modificationId = modificationId)
    {
        modificationId = _modificationId;

        return modificationId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModifiedRecId</Name>
				<Source><![CDATA[
    public RecId parmModifiedRecId(RecId _modifiedRecId = modifiedRecId)
    {
        modifiedRecId = _modifiedRecId;

        return modifiedRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmModifiedTableName</Name>
				<Source><![CDATA[
    public TableName parmModifiedTableName(TableName _modifiedTableName = modifiedTableName)
    {
        modifiedTableName = _modifiedTableName;

        return modifiedTableName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTTSId</Name>
				<Source><![CDATA[
    public GanttTTSId parmTTSId(GanttTTSId _ttsId = ttsId)
    {
        ttsId = _ttsId;

        return ttsId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static GanttDataModification construct()
    {
        return new GanttDataModification();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newId</Name>
				<Source><![CDATA[
    public static GanttDataModification newId(GanttTTSId            _ttsId,
                                              GanttModificationId   _modificationId)
    {
        GanttDataModification ganttDataModification = GanttDataModification::construct();
        ganttDataModification.parmTTSId(_ttsId);
        ganttDataModification.parmModificationId(_modificationId);

        return ganttDataModification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newModification</Name>
				<Source><![CDATA[
    public static GanttDataModification newModification(GanttDataModification   _ganttDataModification,
                                                        Map                     _mapNewModifiedFields   = null)
    {
        GanttDataModification ganttDataModification = GanttDataModification::construct();
        ganttDataModification.parmTTSId(_ganttDataModification.parmTTSId());
        ganttDataModification.parmModificationId(_ganttDataModification.parmModificationId());
        ganttDataModification.parmModificationAction(_ganttDataModification.parmModificationAction());

        ganttDataModification.parmModifiedTableName(_ganttDataModification.parmModifiedTableName());
        ganttDataModification.parmModifiedRecId(_ganttDataModification.parmModifiedRecId());

        if (_mapNewModifiedFields == null)
        {
            ganttDataModification.parmMapModifiedFields(_ganttDataModification.parmMapModifiedFields());
        }
        else
        {
            ganttDataModification.parmMapModifiedFields(_mapNewModifiedFields);
        }

        return ganttDataModification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newModificationAction</Name>
				<Source><![CDATA[
    public static GanttDataModification newModificationAction(GanttModificationAction _modificationAction)
    {
        GanttDataModification ganttDataModification = GanttDataModification::construct();
        ganttDataModification.parmModificationAction(_modificationAction);

        return ganttDataModification;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newRecord</Name>
				<Source><![CDATA[
    public static GanttDataModification newRecord(Common    _record,
                                                  Set       _setFieldNames  = null) // if null - all fields
    {
        int                     i;
        DictTable               dictTable               = new DictTable(_record.TableId);
        GanttTableField         ganttTableField;
        Map                     mapModifiedFields       = new Map(Types::String, Types::String);
        GanttDataModification   ganttDataModification   = GanttDataModification::construct();
        if (!dictTable)
        {
            throw error(strfmt("@SYS27147", classstr(GanttDataModification)));
        }

        ganttDataModification.parmModifiedTableName(dictTable.name());
        ganttDataModification.parmModifiedRecId(_record.RecId);

        // create map of field values
        for (i=1; i<=dictTable.fieldCnt(); i++)
        {
            ganttTableField = GanttTableField::newFieldData(dictTable.id(), dictTable.fieldCnt2Id(i));

            if (_setFieldNames && !_setFieldNames.in(ganttTableField.name()))
            {
                continue;
            }

            if (!ganttTableField.isSystem())
            {
                mapModifiedFields.insert(ganttTableField.name(),
                                         ganttTableField.getFieldValueStr(_record));
            }
        }

        ganttDataModification.parmMapModifiedFields(mapModifiedFields);

        return ganttDataModification;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>