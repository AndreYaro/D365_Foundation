<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostReconciliationModel</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CostReconciliationModel</c> class models the cost reconciliation.
/// </summary>
public abstract class CostReconciliationModel
{
    date                                fromDate,
                                        toDate;

    CostAmount                          subLedgerBalance,
                                        generalLedgerBalance;

    CostStatementModel                  costStatementModel;
    CostReconciliationMethodStrategy    reconciliationMethodStrategy;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setDateRange</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a date range for the statement.
    /// </summary>
    /// <param name = "_fromDate">
    /// The from date.
    /// </param>
    /// <param name = "_toDate">
    /// The to date.
    /// </param>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public void setDateRange(date _fromDate, date _toDate)
    {
        fromDate = _fromDate;
        toDate = _toDate;

        this.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmGeneralLedgerBalance</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CostAmount parmGeneralLedgerBalance()
    {
        return generalLedgerBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSubLedgerBalance</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public CostAmount parmSubLedgerBalance()
    {
        return subLedgerBalance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the balances.
    /// </summary>
    private void update()
    {
        this.updateSubLedgerBalance();
        this.updateGeneralLedgerBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostStatementModel</Name>
				<Source><![CDATA[
    private CostStatementModel parmCostStatementModel(CostStatementModel _costStatementModel = costStatementModel)
    {
        costStatementModel = _costStatementModel;

        return costStatementModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCostReconciliationMethodStrategy</Name>
				<Source><![CDATA[
    private CostReconciliationMethodStrategy parmCostReconciliationMethodStrategy(CostReconciliationMethodStrategy _reconciliationMethodStrategy = reconciliationMethodStrategy)
    {
        reconciliationMethodStrategy = _reconciliationMethodStrategy;

        return reconciliationMethodStrategy;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSubLedgerBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the sub ledger balance.
    /// </summary>
    private void updateSubLedgerBalance()
    {
        costStatementModel.setDateRange(fromDate, toDate);
        subLedgerBalance = costStatementModel.parmEndingBalance();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateGeneralLedgerBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the general ledger balance.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    abstract protected void updateGeneralLedgerBalance()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>description</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a description of the reconciliation.
    /// </summary>
    /// <returns>
    /// A description of the reconciliation.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public str description()
    {
        return costStatementModel.description();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the <c>CostReconciliationModel</c> class.
    /// </summary>
    /// <param name = "_reconciliationType">The reconciliation type.</param>
    /// <returns>
    /// An instance of the <c>CostReconciliationModel</c> class.
    ///</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static CostReconciliationModel construct(CostReconciliationType _reconciliationType)
    {
        CostReconciliationModel     reconciliationModel;

        switch (_reconciliationType)
        {
            case CostReconciliationType::Inventory:
                reconciliationModel = new CostReconciliationModelInventory();
                reconciliationModel.parmCostStatementModel(CostInventoryStatementModel::construct());
                break;
            case CostReconciliationType::WIP:
                reconciliationModel = new CostReconciliationModelWIP();
                reconciliationModel.parmCostStatementModel(CostWIPStatementModel::construct());
                break;
            default:
        }
        reconciliationModel.parmCostReconciliationMethodStrategy(CostReconciliationMethodStrategy::newFromParameters());

        return reconciliationModel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected void new()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>