<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailStatementLedgerJournalHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>RetailStatementLedgerJournalHelper</c> class contains helpers for the statement posting.
/// </summary>
public final class RetailStatementLedgerJournalHelper
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ledgerJournalACType2LedgerBank</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts <c>LedgerJournalACType</c> enum value to <c>RetailLedgerBank</c> enum value.
    /// </summary>
    /// <param name="_ledgerJournalACType">
    /// The <c>LedgerJournalACType</c> enum value.
    /// </param>
    /// <returns>
    /// The <c>RetailLedgerBank</c> enum value.
    /// </returns>
    public static RetailLedgerBank ledgerJournalACType2LedgerBank(LedgerJournalACType _ledgerJournalACType)
    {
        switch (_ledgerJournalACType)
        {
            case LedgerJournalACType::Bank:
                return RetailLedgerBank::Bank;

            case LedgerJournalACType::RCash:
                return RetailLedgerBank::RCash;

            default:
                return RetailLedgerBank::Ledger;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerBank2LedgerJournalACType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts <c>RetailLedgerBank</c> enum value to <c>LedgerJournalACType</c> enum value.
    /// </summary>
    /// <param name="_ledgerBank">
    /// The <c>RetailLedgerBank</c> enum value.
    /// </param>
    /// <returns>
    /// The <c>LedgerJournalACType</c> enum value.
    /// </returns>
    public static LedgerJournalACType ledgerBank2LedgerJournalACType(RetailLedgerBank _ledgerBank)
    {
        switch (_ledgerBank)
        {
            case RetailLedgerBank::Bank:
                return LedgerJournalACType::Bank;

            case RetailLedgerBank::RCash:
                return LedgerJournalACType::RCash;

            default:
                return LedgerJournalACType::Ledger;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStoreTenderTypeAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the account type and number from the store tender type.
    /// </summary>
    /// <param name = "_storeId">The store id.</param>
    /// <param name = "_tenderTypeId">The tender type id.</param>
    /// <param name = "_cardTypeId">The card type id.</param>
    /// <returns>The account type and number.</returns>
    public static container getStoreTenderTypeAccount(
        RetailStoreId _storeId,
        RetailTenderTypeId _tenderTypeId,
        RetailCardTypeId _cardTypeId)
    {
        LedgerJournalACType             offsetAccountType;
        LedgerDimensionDefaultAccount   offsetAccountNum;

        RetailStoreTenderTypeTable         storeTenderTypeTable;
        RetailStoreTenderTypeCardTable     storeTenderTypeCardTable;

        storeTenderTypeTable = RetailStoreTenderTypeTable::find(RetailStoreTable::find(_storeId).RecId, _tenderTypeId);

        switch (storeTenderTypeTable.function)
        {
            case RetailTenderFunction::Customer:
                break;

            case RetailTenderFunction::Card:
                if (_cardTypeId)
                {
                    storeTenderTypeCardTable = RetailStoreTenderTypeCardTable::find(RetailStoreTable::find(_storeId).RecId, _tenderTypeId, _cardTypeId);
                    if (storeTenderTypeCardTable && storeTenderTypeCardTable.LedgerDimension)
                    {
                        offsetAccountType = (storeTenderTypeCardTable.accountType == RetailLedgerBank::Ledger) ? LedgerJournalACType::Ledger : LedgerJournalACType::Bank;
                        offsetAccountNum  = storeTenderTypeCardTable.LedgerDimension;
                        break;
                    }
                }

            default:
                offsetAccountType = RetailStatementLedgerJournalHelper::ledgerBank2LedgerJournalACType(storeTenderTypeTable.accountType);
                offsetAccountNum  = storeTenderTypeTable.LedgerDimension;
                break;
        }

        return [offsetAccountType, offsetAccountNum];
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>