<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>rDeferralsJournalAdd</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class rDeferralsJournalAdd extends RunBase
{
    LedgerJournalTable   ledgerJournalTable;

    RDeferralsTransDate  runDate;
    RDeferralsTransType  deferralsTransType;
    RDeferralsId         deferralsId;
    RDeferralsBookId     deferralsBookId;
    NoYes                correct;
    CorrectedPeriod_RU   correctedPeriod;

    DialogField dialogRunDate;
    DialogField dialogDeferralsTransType;
    DialogField dialogDeferralsId;
    DialogField dialogDeferralsBookId;
    DialogField dialogCorrect;
    DialogField dialogCorrectedPeriod;

    protected const Version CurrentVersion = 2;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addJournalLine</Name>
				<Source><![CDATA[
    private void addJournalLine(RDeferralsBookId _deferralsBookId)
    {
        RDeferralsProposal       rDeferralsProposal;
        RDeferralsBook           rDeferralsBook = RDeferralsBook::find(deferralsId, _deferralsBookId);

        if (! rDeferralsBook.RecId)
            return;

        switch(deferralsTransType)
        {
            case RDeferralsTransType::WritingOff:
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceRU00092, funcName());
                break;
            case RDeferralsTransType::Retired:
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceRU00093, funcName());
                break;
            default:
                break;
        }

        rDeferralsProposal = RDeferralsProposal::construct(deferralsTransType);
        rDeferralsProposal.initParameters(ledgerJournalTable.JournalNum, runDate, rDeferralsBook);

        if (correct)
        {
            rDeferralsProposal.parmCorrect(correct);
            rDeferralsProposal.parmCorrectedPeriod(correctedPeriod);
            rDeferralsProposal.initJournalCorrection();
        }

        rDeferralsProposal.createJournalLines();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Determines whether the class is shown in the list of <c>Journal</c> types.
    /// </summary>
    /// <returns>
    ///    true if the class is shown in the list of <c>Journal</c> types; otherwise, false.
    /// </returns>
    /// <remarks>
    ///    A class that can be used in a batch journal is a class in which the same parameters can be used
    ///    repeatedly. The dialog can be shown and the parameters can be changed but parameters of some
    ///    classes might build on data that is only valid for a short time. Not all classes can be run two
    ///    times with the same parameters. If the <c>canGoBatch</c> method returns false, this method will not
    ///    have any effect.
    /// </remarks>
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a class that contains the methods that are described by the <c>RunBaseDialogable</c>
    /// interface.
    /// </summary>
    /// <returns>
    /// A class that contains the methods that are described by the <c>RunBaseDialogable</c> interface.
    /// </returns>
    public Object dialog()
    {
        DialogRunbase dialog =  super();

        dialog.caption("@SYS52727");

        dialogRunDate            = dialog.addFieldValue(extendedTypeStr(RDeferralsTransDate), runDate);
        dialogDeferralsTransType = dialog.addFieldValue(enumStr(RDeferralsTransType), deferralsTransType);
        dialogDeferralsId        = dialog.addFieldValue(extendedTypeStr(RDeferralsId), deferralsId);
        dialogDeferralsBookId    = dialog.addFieldValue(extendedTypeStr(RDeferralsBookId), deferralsBookId);

        dialog.addGroup("@GLS105434");
        dialogCorrect            = dialog.addFieldValue(extendedTypeStr(NoYesId), NoYes::No, "@GLS111911");
        dialogCorrectedPeriod    = dialog.addFieldValue(extendedTypeStr(CorrectedPeriod_RU), dateNull());

        dialogRunDate.control().registerOverrideMethod(
            methodStr(FormStringControl, modified),
            methodStr(RDeferralsJournalAdd, dialogRunDate_modified),
            this);

        dialogDeferralsTransType.control().registerOverrideMethod(
            methodStr(FormComboBoxControl, modified),
            methodStr(RDeferralsJournalAdd, dialogDeferralsTransType_modified),
            this);

        dialogDeferralsId.control().registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(RDeferralsJournalAdd, dialogDeferralsId_lookup),
            this);
        dialogDeferralsId.control().registerOverrideMethod(
            methodStr(FormStringControl, jumpRef),
            methodStr(RDeferralsJournalAdd, dialogDeferralsId_jumpRef),
            this);
        dialogDeferralsId.control().registerOverrideMethod(
            methodStr(FormStringControl, modified),
            methodStr(RDeferralsJournalAdd, dialogDeferralsId_modified),
            this);

        dialogDeferralsBookId.control().registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(RDeferralsJournalAdd, dialogDeferralsBookId_lookup),
            this);
        dialogDeferralsBookId.control().registerOverrideMethod(
            methodStr(FormStringControl, jumpRef),
            methodStr(RDeferralsJournalAdd, dialogDeferralsBookId_jumpRef),
            this);
        dialogDeferralsBookId.control().registerOverrideMethod(
            methodStr(FormStringControl, modified),
            methodStr(RDeferralsJournalAdd, dialogDeferralsBookIdd_modified),
            this);

        dialogCorrect.control().registerOverrideMethod(
            methodStr(FormCheckBoxControl, modified),
            methodStr(RDeferralsJournalAdd, dialogCorrect_modified),
            this);

        this.setControl(dialogDeferralsId.control());

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsBookId_jumpRef</Name>
				<Source><![CDATA[
    private void dialogDeferralsBookId_jumpRef(FormStringControl _ctrl)
    {
        RDeferralsBookTable deferralsBookTable;
        Args                args = new Args();

        const str RDeferralsBookTable = 'RDeferralsBookTable';

        deferralsBookTable = RDeferralsBookTable::find(_ctrl.valueStr());
        args.record(deferralsBookTable);
        new MenuFunction(menuitemDisplayStr(RDeferralsBookTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsBookId_lookup</Name>
				<Source><![CDATA[
    private void dialogDeferralsBookId_lookup(FormStringControl _ctrl)
    {
         RDeferralsBook::lookupDeferrals(_ctrl, dialogDeferralsId.value(), dialogDeferralsTransType.value(), curext());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsBookIdd_modified</Name>
				<Source><![CDATA[
    private boolean dialogDeferralsBookIdd_modified(FormStringControl _ctrl)
    {
        boolean ret = _ctrl.modified();

        this.setControl(dialogDeferralsId.control());

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsId_jumpRef</Name>
				<Source><![CDATA[
    private void dialogDeferralsId_jumpRef(FormStringControl _ctrl)
    {
        RDeferralsTable deferralsTable;
        Args            args = new Args();

        const str RDeferralsTable = 'RDeferralsTable';

        deferralsTable = RDeferralsTable::find(_ctrl.valueStr());
        args.record(deferralsTable);
        new MenuFunction(menuitemDisplayStr(RDeferralsTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsId_lookup</Name>
				<Source><![CDATA[
    private void dialogDeferralsId_lookup(FormStringControl _ctrl)
    {
        RDeferralsTable::lookupDeferrals(_ctrl, dialogRunDate.value(), curext());
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsId_modified</Name>
				<Source><![CDATA[
    private boolean dialogDeferralsId_modified(FormStringControl _ctrl)
    {
        boolean ret = _ctrl.modified();

        FormStringControl controlDeferralsBookId = dialogDeferralsBookId.control();

        controlDeferralsBookId.text("");

        this.setControl(_ctrl);

        controlDeferralsBookId.update();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogDeferralsTransType_modified</Name>
				<Source><![CDATA[
    private boolean dialogDeferralsTransType_modified(FormComboBoxControl _ctrl)
    {
        boolean ret = _ctrl.modified();

        FormStringControl controlDefferalsId     = dialogDeferralsId.control();
        FormStringControl controlDeferralsBookId = dialogDeferralsBookId.control();

        controlDefferalsId.text("");
        controlDeferralsBookId.text("");

        this.setControl(controlDefferalsId);

        controlDefferalsId.update();
        controlDeferralsBookId.update();

        this.updateCorrectedPeriod();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogRunDate_modified</Name>
				<Source><![CDATA[
    private boolean dialogRunDate_modified(FormDateControl _ctrl)
    {
        boolean ret = _ctrl.modified();

        FormStringControl controlDefferalsId     = dialogDeferralsId.control();
        FormStringControl controlDeferralsBookId = dialogDeferralsBookId.control();

        controlDefferalsId.text("");
        controlDeferralsBookId.text("");

        this.setControl(controlDefferalsId);

        controlDefferalsId.update();
        controlDeferralsBookId.update();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    public boolean getFromDialog()
    {
        boolean ret = super();

        if (ret)
        {
            runDate            = dialogRunDate.value();
            deferralsTransType = dialogDeferralsTransType.value();
            deferralsId        = dialogDeferralsId.value();
            deferralsBookId    = dialogDeferralsBookId.value();
            correct            = dialogCorrect.value();
            correctedPeriod    = dialogCorrectedPeriod.value();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    public container pack()
    {
        return [CurrentVersion, runDate, deferralsTransType, deferralsId, deferralsBookId];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeferralsBookId</Name>
				<Source><![CDATA[
    public RDeferralsBookId parmDeferralsBookId(RDeferralsBookId     _deferralsBookId = deferralsBookId)
    {
        deferralsBookId = _deferralsBookId;

        return deferralsBookId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeferralsId</Name>
				<Source><![CDATA[
    public RDeferralsId parmDeferralsId(RDeferralsId _deferralsId = deferralsId)
    {
        deferralsId = _deferralsId;

        return deferralsId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeferralsTransDate</Name>
				<Source><![CDATA[
    public RDeferralsTransDate parmDeferralsTransDate(RDeferralsTransDate _runDate = runDate)
    {
        runDate = _runDate;

        return runDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDeferralsTransType</Name>
				<Source><![CDATA[
    public RDeferralsTransType parmDeferralsTransType(RDeferralsTransType _deferralsTransType = deferralsTransType)
    {
        deferralsTransType = _deferralsTransType;

        return deferralsTransType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerJournalTable</Name>
				<Source><![CDATA[
    public LedgerJournalTable parmLedgerJournalTable(LedgerJournalTable _ledgerJournalTable = ledgerJournalTable)
    {
        ledgerJournalTable = _ledgerJournalTable;

        return ledgerJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Contains the code that does the actual job of the class.
    /// </summary>
    public void run()
    {
        RDeferralsBook  deferralsBook;

        if (deferralsBookId)
        {
            this.addJournalLine(deferralsBookId);
        }
        else
        {
            while select DeferralsBookId from deferralsBook
                where deferralsBook.DeferralsId == deferralsId
            {
                this.addJournalLine(deferralsBook.DeferralsBookId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControl</Name>
				<Source><![CDATA[
    private void setControl(Object _controlDefferalsId)
    {
        FormBuildStringControl ctrl = _controlDefferalsId as FormBuildStringControl;

        if (ctrl)
        {
            dialogDeferralsBookId.allowEdit(ctrl.text() ? true : false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    public boolean unpack(container _packedClass)
    {
        Version version = RunBase::getVersion(_packedClass);
        switch (version)
        {
            case CurrentVersion :
                [version, runDate, deferralsTransType, deferralsId, deferralsBookId] = _packedClass;
                break;
            default :
                return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the entered dialog values.
    /// </summary>
    /// <param name="_calledFrom">
    /// An instance of the dialog.
    /// </param>
    /// <returns>
    /// true, if the validations are OK; otherwise, false.
    /// </returns>
    public boolean validate(Object _calledFrom = null)
    {
        boolean ret;

        ret = super(_calledFrom);

        if (!runDate)
        {
            ret = checkFailed(strFmt("@SYS116347", new DictType(extendedTypeNum(RDeferralsTransDate)).label()));
        }

        if (!deferralsId)
        {
            ret = checkFailed(strFmt("@SYS116347", new DictType(extendedTypeNum(RDeferralsId)).label()));
        }

        if (correct)
        {
            if (!correctedPeriod)
            {
                ret = checkFailed(strfmt("@SYS110217", "@GLS111794"));
            }

            if (ret && (runDate < correctedPeriod))
            {
                ret = checkFailed(strfmt("@SYS91558", "@SYS67", "@GLS111794"));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static RDeferralsJournalAdd construct()
    {
        return new RDeferralsJournalAdd();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructFromLedgerJournalTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of <c>RDeferralsJournalAdd</c> class using a record from <c>LedgerJournalTable</c> table
    /// </summary>
    /// <param name="_ledgerJournalTable">
    /// A record of <c>LedgerJournalTable</c> table.
    /// </param>
    /// <returns>
    /// An instance of <c>RDeferralsJournalAdd</c> class.
    /// </returns>
    public static RDeferralsJournalAdd constructFromLedgerJournalTable(LedgerJournalTable _ledgerJournalTable)
    {
        RDeferralsJournalAdd rDeferralsJournalAdd = RDeferralsJournalAdd::construct();

        rDeferralsJournalAdd.parmLedgerJournalTable(_ledgerJournalTable);

        return rDeferralsJournalAdd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        RDeferralsJournalAdd rDeferralsJournalAdd;

        if (_args.record() && _args.dataset() == tableNum(LedgerJournalTable))
        {
            rDeferralsJournalAdd = RDeferralsJournalAdd::constructFromLedgerJournalTable(_args.record());
        }
        else
        {
            throw error("@SYS18626");
        }

        if (rDeferralsJournalAdd.prompt())
        {
            rDeferralsJournalAdd.runOperation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialogCorrect_modified</Name>
				<Source><![CDATA[
    private boolean dialogCorrect_modified(FormCheckBoxControl _ctrl)
    {
        boolean ret = _ctrl.modified();

        if (ret)
        {
            this.updateCorrectedPeriod();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCorrect</Name>
				<Source><![CDATA[
    public NoYes parmCorrect(NoYes _correct = correct)
    {
        correct = _correct;

        return correct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCorrectedPeriod</Name>
				<Source><![CDATA[
    public CorrectedPeriod_RU parmCorrectedPeriod(CorrectedPeriod_RU _correctedPeriod = correctedPeriod)
    {
        correctedPeriod = _correctedPeriod;

        return correctedPeriod;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateCorrectedPeriod</Name>
				<Source><![CDATA[
    private void updateCorrectedPeriod()
    {
        boolean allowSetupCorrectedPeriod = dialogDeferralsTransType.value() != RAssetTransType::Depreciation;

        dialogCorrect.enabled(allowSetupCorrectedPeriod);

        if (!allowSetupCorrectedPeriod)
        {
            dialogCorrect.value(false);
        }

        dialogCorrectedPeriod.enabled(dialogCorrect.value());

        if (dialogCorrect.value())
        {
            dialogCorrectedPeriod.value(dialogRunDate.value());
        }
        else
        {
            dialogCorrectedPeriod.value(dateNull());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    protected boolean canRunInNewSession()
    {
        return false;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>