<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesInvoiceJournalPostBase_RU_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>SalesInvoiceJournalPostBase_RU_Extension</c> class contains Russian extension for the <c>SalesInvoiceJournalPostBase</c> class.
/// </summary>
[ExtensionOf(classStr(SalesInvoiceJournalPostBase))]
final class SalesInvoiceJournalPostBase_RU_Extension
{
    #ISOCountryRegionCodes
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeInventUpdForSalesInvoiceLine</Name>
				<Source><![CDATA[
    protected InventUpd_Financial initializeInventUpdForSalesInvoiceLine(
        InventMovement _inventMovement,
        SalesParmLine _salesParmLine,
        SalesParmSubLine _salesParmSubLine,
        InventDim _inventDim,
        InventDimParm _inventDimParm)
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU])
            && this.useInventOwnerIdRange_RU())
        {
            _inventDim.InventOwnerId_RU = _salesParmLine.InventOwnerId_RU;
            _inventDimParm.InventOwnerIdFlag_RU = NoYes::Yes;
        }

        InventUpd_Financial inventUpd_Financial = next initializeInventUpdForSalesInvoiceLine(_inventMovement, _salesParmLine, _salesParmSubLine, _inventDim, _inventDimParm);

        inventUpd_Financial.parmDocumentStornoId_RU(salesParmTable.DocumentStornoId_RU);
        inventUpd_Financial.parmNeedTransIdTransit_RU(salesParmTable.NeedTransIDTransit_RU);

        return inventUpd_Financial;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineStorno_RU</Name>
				<Source><![CDATA[
    internal boolean isLineStorno_RU()
    {
        if (FeatureStateProvider::isFeatureEnabled(SetInventTransStornoRUByLineFinancialPostingEnableFeature::instance()))
        {
            return custInvoiceTrans.qty < 0;
        }
        else
        {
            return this.creditNote();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>