<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CFMPaymentRequestSplitController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>CFMPaymentRequestSplitController</c> class is the controller for the <c>CFMPaymentRequestSplitService</c> service.
/// </summary>
class CFMPaymentRequestSplitController extends SysOperationServiceController implements BatchRetryable
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the <c>CFMPaymentRequestSplitController</c> class.
    /// </summary>
    /// <returns>
    /// A new instance of the <c>CFMPaymentRequestSplitController</c> class.
    /// </returns>
    public static CFMPaymentRequestSplitController construct()
    {
        SysOperationController controller = new CFMPaymentRequestSplitController(
            classstr(CFMPaymentRequestSplitService),
            methodstr(CFMPaymentRequestSplitService, split),
            SysOperationExecutionMode::Synchronous);

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        if (!_args || !_args.record() || _args.dataset() != tableNum(CFMPaymentRequestTable))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        CFMPaymentRequestSplitController::newFromPaymentRequestTable(_args.record()).startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromPaymentRequestTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of an <c>CFMPaymentRequestSplitController</c> class.
    /// </summary>
    /// <param name="_paymentRequestTable">
    /// The payment request to split.
    /// </param>
    /// <returns>
    /// A new instance of an <c>CFMPaymentRequestSplitController</c> class to split <paramref name="_paymentRequestTable"/>.
    /// </returns>
    public static CFMPaymentRequestSplitController newFromPaymentRequestTable(CFMPaymentRequestTable _paymentRequestTable)
    {
        CFMPaymentRequestSplitController paymentRequestSplitController = CFMPaymentRequestSplitController::construct();

        CFMPaymentRequestSplitContract dataContract = paymentRequestSplitController.getDataContractObject();
        dataContract.parmPaymentRequestRefRecId(_paymentRequestTable.RecId);

        return paymentRequestSplitController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canGoBatch</Name>
				<Source><![CDATA[
    public boolean canGoBatch()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCaption</Name>
				<Source><![CDATA[
    protected ClassDescription defaultCaption()
    {
        return "@Cashflowmanagement:SplitPaymentRequest";
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Specifies if the batch task is retryable for transient exceptions or not.
    /// </summary>
    /// <returns>
    /// If true is returned, the batch task is retryable, otherwise it is not.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable()
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>