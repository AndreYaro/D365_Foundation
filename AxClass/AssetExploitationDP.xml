<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetExploitationDP</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>AssetExploitationDP</c> class acts as the data provider for the <c>AssetExploitation</c>
/// report.
/// </summary>
[
    SRSReportQueryAttribute(queryStr(AssetExploitation)),
    SRSReportParameterAttribute(classStr(AssetExploitationContract))
]
public class AssetExploitationDP extends SrsReportDataProviderPreProcessTempDB
{
    AssetExploitationTmp assetExploitationTmp;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAssetExploitationTmp</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the data in the <c>AssetExploitationTmp</c> table.
    /// </summary>
    /// <returns>
    ///     The <c>AssetExploitationTmp</c> table.
    /// </returns>
    [
        SRSReportDataSetAttribute(tableStr(AssetExploitationTmp)),
		Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute
	]
    public AssetExploitationTmp getAssetExploitationTmp()
    {
        select assetExploitationTmp;
        return assetExploitationTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>processReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Processes the report business logic.
    /// </summary>
    /// <remarks>
    /// Provides the ability to write the report business logic. This method will be called by SSRS at
    /// runtime. The method should compute data and populate the data tables that will be returned to SSRS.
    /// </remarks>
    public void processReport()
    {
        QueryRun       queryRun;
        AssetTable     assetTable;
        AssetBook      assetBook;
        AssetGroup     assetGroup;

        queryRun = new QueryRun(this.parmQuery());

        while (queryRun.next())
        {
            assetBook      = queryRun.get(tableNum(AssetBook)) as AssetBook;
            assetTable     = queryRun.get(tableNum(AssetTable)) as AssetTable;
            assetGroup     = queryRun.get(tableNum(AssetGroup)) as AssetGroup;

            assetExploitationTmp.clear();

            assetExploitationTmp.AssetGroupName   = strFmt("@SYS76498", assetGroup.GroupId, assetGroup.Name);
            assetExploitationTmp.AcquisitionPrice = assetBook.AcquisitionPrice;
            assetExploitationTmp.AssetId          = assetBook.AssetId;
            assetExploitationTmp.AssetName        = assetTable.Name;
            assetExploitationTmp.Model            = assetTable.Model;
            assetExploitationTmp.Quantity         = assetTable.Quantity;
            assetExploitationTmp.SerialNum        = assetTable.SerialNum;

            assetExploitationTmp.insert();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>