<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankBridgedAutoClearInstrumentationLogger</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal final class BankBridgedAutoClearInstrumentationLogger
{
    private const str instrumentationNamespace = 'BankBridgedAutoClearing';

    private SysInstrumentationLogger instrumentationLogger;
    private BankBridgedAutoClearInstrumentationActivities activities;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new(str _name)
    {
        instrumentationLogger = SysInstrumentationLoggerFactory::CreateLogger(_name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityContext</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivityContext activityContext(SysInstrumentationActivity _activity)
    {
        return instrumentationLogger.activityContextWithCustomProperties(_activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initActivities</Name>
				<Source><![CDATA[
    internal BankBridgedAutoClearInstrumentationActivities initActivities()
    {
        if (!activities)
        {
            activities = BankBridgedAutoClearInstrumentationActivities::newFromLogger(this);
        }

        return activities;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activity</Name>
				<Source><![CDATA[
    final internal SysInstrumentationActivity activity(str _activityName)
    {
        return SysInstrumentationActivity::construct(_activityName, InstrumentationNamespace);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logInformation</Name>
				<Source><![CDATA[
    final internal void logInformation(str _message)
    {
        instrumentationLogger.logInformation(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logWarning</Name>
				<Source><![CDATA[
    final internal void logWarning(str _message)
    {
        instrumentationLogger.logWarning(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logError</Name>
				<Source><![CDATA[
    final internal void logError(str _message)
    {
        instrumentationLogger.logError(_message);
    }

]]></Source>
			</Method>
			<Method>
				<Name>logCallstack</Name>
				<Source><![CDATA[
    final internal void logCallstack(str _message = instrumentationNamespace)
    {
        SysInstrumentationEventDataJsonSerializer serializer = new SysInstrumentationEventDataJsonSerializer();
        serializer.setValue("@SYS14327", _message);
        serializer.setValue("@SYS65092", con2Str(xSession::xppCallStack()));

        instrumentationLogger.logInformation(serializer.toString());
    }

]]></Source>
			</Method>
			<Method>
				<Name>createLogger</Name>
				<Source><![CDATA[
    internal static BankBridgedAutoClearInstrumentationLogger createLogger(str _name)
    {
        return new BankBridgedAutoClearInstrumentationLogger(_name);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>