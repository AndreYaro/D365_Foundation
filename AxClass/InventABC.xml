<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventABC</Name>
	<SourceCode>
		<Declaration><![CDATA[
abstract class InventABC
{
    InventABCUpdate     abcUpdate;
    TransDate           fromDate;
    TransDate           toDate;
    InterestPct         interest;
    Percent             categoryA;
    Percent             categoryB;
    Percent             categoryC;
    TmpABC              tmpABC;
    Amount              totalAmount;
    boolean             updateInventTable;

    QueryRun            itemQueryRun;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calc</Name>
				<Source><![CDATA[
    public void calc()
    {
        Amount          lastAmount;
        ABC             category;
        ABC             lastCategory;

        setPrefix("@SYS19424");

        this.sumUpValue();

        if (!totalAmount)
        {
            if (abcUpdate.parmReportingMode())
            {
                return;
            }
            throw error(strFmt("@SCM:ABCClassificationTotalValueIsEqualToZero",CompanyInfoHelper::standardCurrency()));
        }

        setPrefix("@SYS14008");

        Amount accAmount = 0;
        Percent proportionBefore = 0;

        while select forupdate tmpABC
            order by Amount desc
        {
            accAmount += tmpABC.Amount;
            Percent proportion = 100 * accAmount / totalAmount;

            if (tmpABC.Amount == lastAmount)
            {
                category = lastCategory;
            }
            else
            {
                if (proportionBefore < categoryA)
                {
                    category = ABC::A;
                }
                else
                {
                    if (proportionBefore < categoryA + categoryB)
                    {
                        category = ABC::B;
                    }
                    else
                    {
                        category = ABC::C;
                    }
                }
            }

            if (updateInventTable)
            {
                InventTable inventTable = InventTable::findRecId(tmpABC.RefRecId, curext(), true);
                this.setCategory(inventTable,category);
                inventTable.update();
            }
            else
            {
                tmpABC.Value = category;
                tmpABC.update();
            }
            proportionBefore= proportion;

            lastAmount      = tmpABC.Amount;
            lastCategory    = category;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategory</Name>
				<Source><![CDATA[
    abstract protected ABC getCategory(InventTable _inventTable)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromInventABCUpdate</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes the instance with values from the instance of the <c>InventABCUpdate</c> class that
    ///    called this method.
    /// </summary>
    /// <param name="_abcUpdate">
    ///    The instance of the class that called this method.
    /// </param>
    protected void initFromInventABCUpdate(InventABCUpdate _abcUpdate)
    {
        abcUpdate           = _abcUpdate;
        fromDate            = abcUpdate.parmFromDate();
        toDate              = abcUpdate.parmToDate();
        categoryA           = abcUpdate.parmCategoryA();
        categoryB           = abcUpdate.parmCategoryB();
        categoryC           = abcUpdate.parmCategoryC();
        interest            = abcUpdate.parmInterest();
        tmpABC              = abcUpdate.parmTmpABC();
        updateInventTable   = abcUpdate.parmUpdateInventTable();
        itemQueryRun        = abcUpdate.queryRun();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveAmount</Name>
				<Source><![CDATA[
    protected void saveAmount(
        InventTable     _inventTable,
        Amount          _amount)
    {
        select tmpABC
            where tmpABC.RefRecId == _inventTable.RecId;

        tmpABC.RefRecId     = _inventTable.RecId;
        tmpABC.ItemGroupId  = _inventTable.itemGroupId();
        tmpABC.ItemId       = _inventTable.ItemId;
        tmpABC.Amount       = _amount;
        tmpABC.OldValue     = this.getCategory(_inventTable);
        tmpABC.ItemName     = _inventTable.itemName();
        tmpABC.write();
        totalAmount        += _amount;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCategory</Name>
				<Source><![CDATA[
    abstract protected void setCategory(
        InventTable     _inventTable,
        ABC             _category)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumUpValue</Name>
				<Source><![CDATA[
    abstract protected void sumUpValue()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventABCUpdate</Name>
				<Source><![CDATA[
    static public InventABC newFromInventABCUpdate(InventABCUpdate _abcUpdate)
    {
        InventABC   inventABC;

        if (! _abcUpdate)
        {
            throw error(strFmt("@SYS22533",classId2Name(classNum(InventABC)),classId2Name(classNum(InventABCUpdate))));
        }

        ABCModel model = _abcUpdate.parmModel();

        switch (model)
        {
            case ABCModel::Revenue  :
                inventABC = InventABC_Revenue::construct();
                break;
            case ABCModel::ContributionMargin:
                inventABC = InventABC_ContributionMargin::construct();
                break;
            case ABCModel::Value:
                inventABC = InventABC_InventValue::construct();
                break;
            case ABCModel::Link   :
                inventABC = InventABC_CarrCost::construct();
                break;
            default:
                InventABCModelFactoryAttribute attribute = new InventABCModelFactoryAttribute(model);
                inventABC                           = SysExtensionAppClassFactory::getClassFromSysAttribute(classStr(InventABC), attribute) as InventABC;
                if (!inventABC)
                {
                    throw error(strFmt("@SYS22532",model));
                }
        }
        inventABC.initFromInventABCUpdate(_abcUpdate);
        return inventABC;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>