<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdSlipController_TH</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>TaxWithholdSlipController_TH</c> is the controller class for the <c>TaxWithholdSlip_TH</c>
///    report.
/// </summary>
public class TaxWithholdSlipController_TH extends SrsReportRunController implements BatchRetryable
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inits the reprot
    /// </summary>
    /// <param name="_args">
    /// The args
    /// </param>
    public void init(Args _args)
    {
        this.parmReportName(ssrsReportStr(TaxWithholdSlip_TH, Report));
        this.parmShowDialog(false);
        this.parmArgs(_args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunModifyContract</Name>
				<Source><![CDATA[
    protected void preRunModifyContract()
    {
        TaxWithholdSlipContract_TH  taxWithholdSlipContract;

        taxWithholdSlipContract = this.parmReportContract().parmRdpContract() as TaxWithholdSlipContract_TH;
        taxWithholdSlipContract.parmLedgerJournalTransRecId(args.record().RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs the instance of the controller.
    /// </summary>
    /// <param name="_args">
    /// The args
    /// </param>
    /// <returns>
    /// The instance of the controller.
    /// </returns>
    public static TaxWithholdSlipController_TH construct(Args _args)
    {
        TaxWithholdSlipController_TH    controller;
        LedgerJournalTrans              ledgerJournalTrans;

        if (_args.dataset() == tableNum(LedgerJournalTrans))
        {
            ledgerJournalTrans = _args.record();

            if (ledgerJournalTrans.AccountType == LedgerJournalACType::Vend)
            {
                controller = new TaxWithholdSlipController_TH();
                controller.init(_args);
            }
        }

        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    public static void main(Args _args)
    {
        GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceTH00007, funcName());

        TaxWithholdSlipController_TH    controller;

        controller = TaxWithholdSlipController_TH::construct(_args);
        if (controller)
        {
            controller.startOperation();
        }
    }

]]></Source>
			</Method>
		<Method><Name>isRetryable</Name><Source><![CDATA[
    /// <summary>
    /// Controls whether the batch task should be retried in case of transient errors.
    /// </summary>
    /// <returns>
    /// Always returns false.
    /// </returns>
    [Hookable(false)]
    public final boolean isRetryable() 
    {
        return false;
    }
]]></Source></Method></Methods>
	</SourceCode>
</AxClass>