<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationDP_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classStr(SalesQuotationDP))]
public final class SalesQuotationDP_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeSalesQuotationDetailsTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills the <c>SalesQuotatiopDetailsTmp</c> table with details.
    /// </summary>
    /// <param name = "_custQuotationJour">A <c>CustQuotationJour</c> record that the header are created from.</param>
    /// <param name = "_custQuotationTrans">The <c>CustQuotationTrans</c> record that the line will be created from.</param>
    /// <param name = "_custFormletterDocument">A customer form setup.</param>
    protected SalesQuotationDetailsTmp initializeSalesQuotationDetailsTmp(
        CustQuotationJour _custQuotationJour,
        CustQuotationTrans _custQuotationTrans,
        CustFormletterDocument _custFormletterDocument)
    {
        SalesQuotationDetailsTmp salesQuotationTmp = next initializeSalesQuotationDetailsTmp(_custQuotationJour, _custQuotationTrans, _custFormletterDocument);

        if (conFind(FreeNotesOnDocumentsConstants::DocuOnFormularAllLine, _custFormletterDocument.DocuOnQuotation))
        {
            DocuRefSearch docuRefSearch = DocuRefSearch::newTypeIdAndRestriction(
                _custQuotationTrans,
                _custFormletterDocument.DocuTypeQuotation,
                DocuRestriction::External);

            if (docuRefSearch)
            {
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceIT00041, funcName());
            }

            salesQuotationTmp.Notes = Docu::concatDocuRefNotes(docuRefSearch);
        }

        return salesQuotationTmp;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeSalesQuotationHeaderTmp</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills the <c>SalesQuotationHeaderTmp</c> table with header details.
    /// </summary>
    /// <param name = "_custQuotationJour">The <c>CustQuotationJour</c> record to initialize the header from.</param>
    /// <param name = "_formLetterRemarks">A form note.</param>
    /// <param name = "_custFormletterDocument">A customer form setup.</param>
    /// <param name = "_custFormletterParameters">The parameters of the customer form setup.</param>
    /// <returns>The initialized <c>SalesQuotationHeaderTmp</c> record.</returns>
    protected SalesQuotationHeaderTmp initializeSalesQuotationHeaderTmp(
        CustQuotationJour _custQuotationJour,
        FormLetterRemarks _formLetterRemarks,
        CustFormletterDocument _custFormletterDocument,
        CustFormletterParameters _custFormletterParameters)
    {
        SalesQuotationHeaderTmp salesQuotationHeaderTmp = next initializeSalesQuotationHeaderTmp(_custQuotationJour, _formLetterRemarks, _custFormletterDocument, _custFormletterParameters);

        if (conFind(FreeNotesOnDocumentsConstants::DocuOnFormularAllHead, _custFormletterDocument.DocuOnQuotation))
        {
            DocuRefSearch docuRefSearch = DocuRefSearch::newTypeIdAndRestriction(
                _custQuotationJour,
                _custFormletterDocument.DocuTypeQuotation,
                DocuRestriction::External);

            if (docuRefSearch)
            {
                GlobalizationInstrumentationHelper::featureRun(GlobalizationConstants::FeatureReferenceIT00041, funcName());
            }

            salesQuotationHeaderTmp.DocuRefMainNotes = Docu::concatDocuRefNotes(docuRefSearch);
        }

        return salesQuotationHeaderTmp;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>