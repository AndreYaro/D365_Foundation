<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLCImportMarkupLookupController_SA</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///    The <c>BankLCImportMarkupLookupController_SA</c> class is used to construct a lookup controller for
///    <c>MarkupTable</c> table.
/// </summary>
class BankLCImportMarkupLookupController_SA
{
    boolean isForLC;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs a query object that will be used to retrieve from <c>MarkupTable</c> table.
    /// </summary>
    /// <returns>
    ///    The constructed query.
    /// </returns>
    private Query getQuery()
    {
        Query                   query;
        QueryBuildDataSource    queryBuildDataSource;
        QueryBuildRange         queryBuildRange;

        query                   = new Query();
        queryBuildDataSource    = SysQuery::findOrCreateDataSource(query, tablenum(MarkupTable));

        if (isForLC)
        {
            queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(MarkupTable, IsLetterOfCredit_SA));
            queryBuildRange.value(queryValue(NoYes::Yes));

            queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(MarkupTable, ModuleType));
            queryBuildRange.value(queryValue(ModuleInventCustVend::Vend));
        }
        else
        {
            queryBuildRange = SysQuery::findOrCreateRange(queryBuildDataSource, fieldnum(MarkupTable, IsLetterOfCredit_SA));
            queryBuildRange.value(queryValue(NoYes::No));
        }

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRef</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Jumps reference from a markup code.
    /// </summary>
    /// <param name="_markupCode">
    ///    The markup code from which to jump reference.
    /// </param>
    public void jumpRef(MarkupCode _markupCode)
    {
        Args            args;
        FormRun         formRun;

        args = new Args();

        args.parmEnumeration(MarkupModuleType::Vend);
        args.caller(this);

        if (_markupCode != '')
        {
            args.record(MarkupTable::find(MarkupModuleType::Vend,
                                            _markupCode));
        }

        new MenuFunction(menuitemDisplayStr(MarkupTable), MenuItemType::Display).run(args);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Look up the filter string from a form control.
    /// </summary>
    /// <param name="_formControl">
    /// The form control that runs the lookup.
    /// </param>
    /// <param name="_filterStr">
    /// The filter string.
    /// </param>
    public void lookup(FormControl _formControl, str _filterStr)
    {
        SysTableLookup sysTableLookup;

        sysTableLookup = SysTableLookup::newParameters(tablenum(MarkupTable), _formControl);
        sysTableLookup.addLookupfield(fieldnum(MarkupTable, MarkupCode), true);
        sysTableLookup.addLookupfield(fieldnum(MarkupTable, Txt));
        sysTableLookup.addLookupfield(fieldnum(MarkupTable, TaxItemGroup));
        sysTableLookup.parmQuery(this.getQuery());

        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsForLC</Name>
				<Source><![CDATA[
    public boolean parmIsForLC(boolean _isForLC = isForLC)
    {
        isForLC = _isForLC;
        return isForLC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Constructs a <c>BankLCImportMarkupLookupController_SA</c> object that has the parameter that
    ///    determines whether this is a lookup for a letter of credit.
    /// </summary>
    /// <param name="_isForLC">
    ///    A Boolean value that indicates whether this is for letter of credit.
    /// </param>
    /// <returns>
    ///    The constructed <c>BankLCImportMarkupLookupController_SA</c> instance.
    /// </returns>
    public static BankLCImportMarkupLookupController_SA construct(boolean _isForLC = true)
    {
        BankLCImportMarkupLookupController_SA bankLCImportMarkupLookupController;

        bankLCImportMarkupLookupController = new BankLCImportMarkupLookupController_SA();
        bankLCImportMarkupLookupController.parmIsForLC(_isForLC);

        return bankLCImportMarkupLookupController;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>