<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResActivitySelection</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Activity selection form controller class
/// </summary>
public class ResActivitySelection
{
    boolean showAllocation;
    boolean showProjects;
    real allocation;
    ActivityRecId activity;
    utcdatetime activityStart;
    utcdatetime activityEnd;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ShowAllocation</Name>
				<Source><![CDATA[
    public boolean ShowAllocation(boolean _showAllocation = showAllocation)
    {
        showAllocation = _showAllocation;
        return showAllocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ShowProjects</Name>
				<Source><![CDATA[
    public boolean ShowProjects(boolean _showProjects = showProjects)
    {
        showProjects = _showProjects;
        return showProjects;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Activity</Name>
				<Source><![CDATA[
    public ActivityRecId Activity(ActivityRecId _activity = activity)
    {
        activity = _activity;
        return activity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivityStart</Name>
				<Source><![CDATA[
    public utcdatetime ActivityStart(utcdatetime _activityStart = activityStart)
    {
        activityStart = _activityStart;
        return activityStart;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivityEnd</Name>
				<Source><![CDATA[
    public utcdatetime ActivityEnd(utcdatetime _activityEnd = activityEnd)
    {
        activityEnd = _activityEnd;
        return activityEnd;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Allocation</Name>
				<Source><![CDATA[
    public real Allocation(real _allocation = allocation)
    {
        allocation = _allocation;
        return allocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showForm</Name>
				<Source><![CDATA[
    public boolean showForm()
    {
        Args formArgs = new Args();
        formArgs.caller(this);

        new MenuFunction(menuitemdisplaystr(ProjActivitySelectionBook),
            MenuItemType::Display).run(formArgs);

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ProjActivitySelection_OnClosing</Name>
				<Source><![CDATA[
    /// <summary>
    /// Handles OnClosing event of ProjActivitySelection form
    /// </summary>
    [FormEventHandler(formstr(ProjActivitySelection), FormEventType::Closing)]
    public static void ProjActivitySelection_OnClosing(xFormRun sender, FormEventArgs e)
    {
        FormRun formRun = sender as FormRun;
        if (formRun.closedOk())
        {
            ResActivitySelection control = formRun.ActivitySelection();
            control.selectionsReady(control.Activity(), control.Allocation());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>selectionsReady</Name>
				<Source><![CDATA[
    delegate void selectionsReady(ActivityRecId _activity, real _allocation)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
        #ProjAvailabilityViewConstants

        Timezone tz = DateTimeUtil::getUserPreferredTimeZone();
        activityStart = DateTimeUtil::newDateTime(DateTimeUtil::getSystemDate(tz), 0);
        activityEnd = DateTimeUtil::maxValue();
        allocation = #FullCapacityAllocation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static ResActivitySelection construct()
    {
        ResActivitySelection selector = new ResActivitySelection();
        return selector;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>