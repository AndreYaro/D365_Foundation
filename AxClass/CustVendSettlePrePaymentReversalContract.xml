<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustVendSettlePrePaymentReversalContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The <c>CustVendSettlePrePaymentReversalContract</c> class will be used as the contract class which holds
///     the parameter values passed to the method <c>reversePrePaymentTaxCredit</c> of <c>CustVendSettle</c> class.
/// </summary>
public class CustVendSettlePrePaymentReversalContract
{
    private CustVendPrePaymentReversal prePaymentReversal;
    private CustVendTrans custVendTransPrepayment;
    private LedgerVoucher ledgerVoucher;
    private AmountCur settleAmountCurPrepayment;
    private AmountMST settleAmountMST;
    private AmountMSTSecondary settleAmountReporting;
    private CustVendTrans custVendTransOffset;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmPrePaymentReversal</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets a instance of <c>CustVendPrePaymentReversal</c> class.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     An instance of the <c>CustVendPrePaymentReversal</c> class.
    /// </param>
    /// <returns>
    ///     An instance of the <c>CustVendPrePaymentReversal</c> class.
    /// </returns>
    public CustVendPrePaymentReversal parmPrePaymentReversal(CustVendPrePaymentReversal _prePaymentReversal = prePaymentReversal)
    {
        prePaymentReversal = _prePaymentReversal;
        return prePaymentReversal;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendTransPrepayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the <c>CustVendTrans</c> record that is a prepayment.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The <c>CustVendTrans</c> record that is a prepayment.
    /// </param>
    /// <returns>
    ///     The <c>CustVendTrans</c> record that is a prepayment.
    /// </returns>
    public CustVendTrans parmCustVendTransPrepayment(CustVendTrans _custVendTransPrepayment = custVendTransPrepayment)
    {
        custVendTransPrepayment = _custVendTransPrepayment;
        return custVendTransPrepayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmLedgerVoucher</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the ledger voucher that is used to create the reverse tax transactions.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The ledger voucher that is used to create the reverse tax transactions.
    /// </param>
    /// <returns>
    ///     The ledger voucher that is used to create the reverse tax transactions.
    /// </returns>
    public LedgerVoucher parmLedgerVoucher(LedgerVoucher _ledgerVoucher = ledgerVoucher)
    {
        ledgerVoucher = _ledgerVoucher;
        return ledgerVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleAmountCurPrepayment</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the settlement amount settled of the prepayment transaction in transaction currency.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The settlement amount settled of the prepayment transaction in transaction currency.
    /// </param>
    /// <returns>
    ///     The settlement amount settled of the prepayment transaction in transaction currency.
    /// </returns>
    public AmountCur parmSettleAmountCurPrepayment(AmountCur _settleAmountCurPrepayment = settleAmountCurPrepayment)
    {
        settleAmountCurPrepayment = _settleAmountCurPrepayment;
        return settleAmountCurPrepayment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the settlement amount settled of the prepayment transaction in standard currency.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The settlement amount settled of the prepayment transaction in standard currency.
    /// </param>
    /// <returns>
    ///     The settlement amount settled of the prepayment transaction in standard currency.
    /// </returns>
    public AmountMST parmSettleAmountMST(AmountMST _settleAmountMST = settleAmountMST)
    {
        settleAmountMST = _settleAmountMST;
        return settleAmountMST;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSettleAmountReporting</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the settlement amount settled of the prepayment transaction in reporting currency.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The settlement amount settled of the prepayment transaction in reporting currency.
    /// </param>
    /// <returns>
    ///     The settlement amount settled of the prepayment transaction in reporting currency.
    /// </returns>
    public AmountMSTSecondary parmSettleAmountReporting(AmountMSTSecondary _settleAmountReporting = settleAmountReporting)
    {
        settleAmountReporting = _settleAmountReporting;
        return settleAmountReporting;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustVendTransOffset</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets or sets the offset <c>CustVendTrans</c> record.
    /// </summary>
    /// <param name = "_custVendTransOffset">
    ///     The offset <c>CustVendTrans</c> record.
    /// </param>
    /// <returns>
    ///     The offset <c>CustVendTrans</c> record.
    /// </returns>
    public CustVendTrans parmCustVendTransOffset(CustVendTrans _custVendTransOffset = custVendTransOffset)
    {
        custVendTransOffset = _custVendTransOffset;
        return custVendTransOffset;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of the <c>CustVendSettlePrePaymentReversalContract</c> class.
    /// </summary>
    /// <returns>
    ///     An instance of the <c>CustVendSettlePrePaymentReversalContract</c> class.
    /// </returns>
    public static CustVendSettlePrePaymentReversalContract construct()
    {
        return new CustVendSettlePrePaymentReversalContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>constructReversePrePaymentTaxCredit</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Creates an instance of the <c>CustVendSettlePrePaymentReversalContract</c> class.
    /// </summary>
    /// <param name = "_prePaymentReversal">
    ///     A instance of <c>CustVendPrePaymentReversal</c> class.
    /// </param>
    /// <param name = "_custVendTransPrepayment">
    ///     The <c>CustVendTrans</c> record that is a prepayment.
    /// </param>
    /// <param name = "_ledgerVoucher">
    ///     The ledger voucher that is used to create the reverse tax transactions.
    /// </param>
    /// <param name = "_settleAmountCurPrepayment">
    ///     The settlement amount settled of the prepayment transaction in transaction currency.
    /// </param>
    /// <param name = "_settleAmountMST">
    ///     The settlement amount settled of the prepayment transaction in standard currency.
    /// </param>
    /// <param name = "_settleAmountReporting">
    ///     The settlement amount settled of the prepayment transaction in reporting currency.
    /// </param>
    /// <param name = "_custVendTransOffset">
    ///     The offset <c>CustVendTrans</c> record.
    /// </param>
    /// <returns>
    ///     An instance of the <c>CustVendSettlePrePaymentReversalContract</c> class.
    /// </returns>
    public static CustVendSettlePrePaymentReversalContract constructReversePrePaymentTaxCredit(CustVendPrePaymentReversal _prePaymentReversal,
        CustVendTrans _custVendTransPrepayment,
        LedgerVoucher _ledgerVoucher,
        AmountCur _settleAmountCurPrepayment,
        AmountMST _settleAmountMST = 0,
        AmountMSTSecondary _settleAmountReporting = 0,
        CustVendTrans _custVendTransOffset = new DictTable(_custVendTransPrepayment.TableId).makeRecord())
    {
        CustVendSettlePrePaymentReversalContract    custVendSettlePrePaymentReversalContract = CustVendSettlePrePaymentReversalContract::construct();
        custVendSettlePrePaymentReversalContract.parmPrePaymentReversal(_prePaymentReversal);
        custVendSettlePrePaymentReversalContract.parmCustVendTransPrepayment(_custVendTransPrepayment);
        custVendSettlePrePaymentReversalContract.parmLedgerVoucher(_ledgerVoucher);
        custVendSettlePrePaymentReversalContract.parmSettleAmountCurPrepayment(_settleAmountCurPrepayment);
        custVendSettlePrePaymentReversalContract.parmSettleAmountMST(_settleAmountMST);
        custVendSettlePrePaymentReversalContract.parmSettleAmountReporting(_settleAmountReporting);
        custVendSettlePrePaymentReversalContract.parmCustVendTransOffset(_custVendTransPrepayment);

        return custVendSettlePrePaymentReversalContract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>