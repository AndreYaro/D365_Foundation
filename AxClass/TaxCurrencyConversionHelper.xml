<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxCurrencyConversionHelper</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxCurrencyConversionHelper</c> class helps on all currency conversion paths.
/// </summary>
public class TaxCurrencyConversionHelper
{
    private TaxCurrencyExchangeInformation exchangeInfomationAccounting;
    private TaxCurrencyExchangeInformation exchangeInfomationReporting;
    private ExchRate fixExchangeRateAccounting;
    private ExchRate fixExchangeRateReporting;
    private CurrencyCode transactionCurrency;
    private CurrencyCode taxCurrency;
    private CurrencyCode accountingCurrency;
    private CurrencyCode reportingCurrency;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(CurrencyCode _transactionCurrency, TransDate _date)
    {
        this.init(_transactionCurrency, _date);
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    private void init(CurrencyCode _transactionCurrency, TransDate _date)
    {
        Ledger ledger = Ledger::findByLegalEntity(CompanyInfo::current());
        this.setLedgerCurrencyCode(ledger);

        transactionCurrency = _transactionCurrency;
        exchangeInfomationAccounting = new TaxCurrencyExchangeInformation(_transactionCurrency, _date, ledger.DefaultExchangeRateType);
        if (ledger.ReportingCurrencyExchangeRateType)
        {
            exchangeInfomationReporting = new TaxCurrencyExchangeInformation(_transactionCurrency, _date, ledger.ReportingCurrencyExchangeRateType);
        }
        else
        {
            exchangeInfomationReporting = exchangeInfomationAccounting;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    public void setAccountingCurrencyFixedExchangeRate(ExchRate _fixedExchangeRate)
    {
        this.fixExchangeRateAccounting = _fixedExchangeRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    public void setReportingCurrencyFixedExchangeRate(ExchRate _fixedExchangeRate)
    {
        this.fixExchangeRateReporting = _fixedExchangeRate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setLedgerCurrencyCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the accounting currency code and reporting currency code by ledger.
    /// </summary>
    /// <param name = "_ledger">The ledger.</param>
    internal void setLedgerCurrencyCode(Ledger _ledger = null)
    {
        if (!_ledger)
        {
            _ledger = Ledger::findByLegalEntity(CompanyInfo::current());
        }
        this.accountingCurrency = _ledger.AccountingCurrency;
        this.reportingCurrency = _ledger.ReportingCurrency;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTaxCurrencyCode</Name>
				<Source><![CDATA[
    public void setTaxCurrencyCode(CurrencyCode _taxCurrency)
    {
        taxCurrency = _taxCurrency;
        exchangeInfomationAccounting.setTaxCurrencyCode(_taxCurrency);
        exchangeInfomationReporting.setTaxCurrencyCode(_taxCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransactionCurrencyCode</Name>
				<Source><![CDATA[
    public void setTransactionCurrencyCode(CurrencyCode _transactionCurrency)
    {
        transactionCurrency = _transactionCurrency;
        exchangeInfomationAccounting.setTransactionCurrencyCode(_transactionCurrency);
        exchangeInfomationReporting.setTransactionCurrencyCode(_transactionCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertTransactionToAccounting</Name>
				<Source><![CDATA[
    public Amount convertTransactionToAccounting(Amount _transactionAmount)
    {
        if (this.accountingCurrency == this.transactionCurrency)
        {
            return _transactionAmount;
        }

        CurrencyExchangeRate rate;
        if (this.fixExchangeRateAccounting)
        {
            rate = this.fixExchangeRateAccounting / 100;
        }
        else
        {
            rate = this.getExchRateTransactionToAccounting() / 100;
        }
        return _transactionAmount * rate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExchRateTransactionToAccounting</Name>
				<Source><![CDATA[
    internal CurrencyExchangeRate getExchRateTransactionToAccounting()
    {
        return exchangeInfomationAccounting.getExchangeRate(TaxCurrency::TransactionCurrency, TaxCurrency::AccountingCurrency);
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertAccountingToTax</Name>
				<Source><![CDATA[
    public Amount convertAccountingToTax(Amount _AccountingAmount)
    {
        if (this.accountingCurrency == this.taxCurrency)
        {
            return _AccountingAmount;
        }

        CurrencyExchangeRate rate = exchangeInfomationAccounting.getExchangeRate(TaxCurrency::AccountingCurrency, TaxCurrency::TaxCurrency) / 100;
        return _AccountingAmount * rate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertTransactionToReporting</Name>
				<Source><![CDATA[
    public Amount convertTransactionToReporting(Amount _transactionAmount)
    {
        if (!this.reportingCurrency)
        {
            // in case no reporting currency provided, the customer should have the transaction in one currency, then directly return transaction currency
            // but in GFM, it will directly return 0, then we should keep consistent with GFM, return 0
            return 0;
        }

        if (this.transactionCurrency == this.reportingCurrency)
        {
            return _transactionAmount;
        }

        CurrencyExchangeRate rate;
        if (this.fixExchangeRateReporting)
        {
            rate = this.fixExchangeRateReporting / 100;
        }
        else
        {
            rate = this.getExchRateTransactionToReporting() / 100;
        }
        return _transactionAmount * rate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExchRateTransactionToReporting</Name>
				<Source><![CDATA[
    internal CurrencyExchangeRate getExchRateTransactionToReporting()
    {
        return this.reportingCurrency ? exchangeInfomationReporting.getExchangeRate(TaxCurrency::TransactionCurrency, TaxCurrency::ReportingCurrency) : 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertReportingToTax</Name>
				<Source><![CDATA[
    public Amount convertReportingToTax(Amount _reportingAmount)
    {
        if (!this.reportingCurrency)
        {
            return 0;
        }

        if (this.reportingCurrency == this.taxCurrency)
        {
            return _reportingAmount;
        }

        CurrencyExchangeRate rate = exchangeInfomationReporting.getExchangeRate(TaxCurrency::ReportingCurrency, TaxCurrency::TaxCurrency) / 100;
        return _reportingAmount * rate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>convertTransactionToTax</Name>
				<Source><![CDATA[
    public Amount convertTransactionToTax(Amount _transactionAmount)
    {
        if (this.transactionCurrency == this.taxCurrency)
        {
            return _transactionAmount;
        }

        CurrencyExchangeRate rate = exchangeInfomationAccounting.getExchangeRate(TaxCurrency::TransactionCurrency, TaxCurrency::TaxCurrency) / 100;
        return _transactionAmount * rate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>