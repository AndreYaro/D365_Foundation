<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransOriginCreateContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>InventTransOriginCreateContract</c> class is the contract for creation of Inventory transactions originator records.
/// </summary>
public final class InventTransOriginCreateContract
{
    private InventTransId                        inventTransId;
    private ItemId                               itemId;
    private InventTransType                      referenceCategory;
    private InventTransRefId                     referenceId;
    private DirPartyRecId                        partyRecId;
    private InventDimId                          productDimensionId;
    private InventIsExcludedFromInventoryValue   isExcludedFromInventoryValue;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmInventTransId</Name>
				<Source><![CDATA[
    public InventTransId parmInventTransId(InventTransId _inventTransId = inventTransId)
    {
        inventTransId = _inventTransId;

        return inventTransId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmItemId</Name>
				<Source><![CDATA[
    public ItemId parmItemId(ItemId _itemId = itemId)
    {
        itemId = _itemId;

        return itemId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceCategory</Name>
				<Source><![CDATA[
    public InventTransType parmReferenceCategory(InventTransType _referenceCategory = referenceCategory)
    {
        referenceCategory = _referenceCategory;

        return referenceCategory;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReferenceId</Name>
				<Source><![CDATA[
    public InventTransRefId parmReferenceId(InventTransRefId _referenceId = referenceId)
    {
        referenceId = _referenceId;

        return referenceId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPartyRecId</Name>
				<Source><![CDATA[
    public DirPartyRecId parmPartyRecId(DirPartyRecId _partyRecId = partyRecId)
    {
        partyRecId = _partyRecId;

        return partyRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmProductDimensionId</Name>
				<Source><![CDATA[
    public InventDimId parmProductDimensionId(InventDimId _productDimensionId = productDimensionId)
    {
        productDimensionId = _productDimensionId;

        return productDimensionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsExcludedFromInventoryValue</Name>
				<Source><![CDATA[
    public InventIsExcludedFromInventoryValue parmIsExcludedFromInventoryValue(InventIsExcludedFromInventoryValue _isExcludedFromInventoryValue = isExcludedFromInventoryValue)
    {
        isExcludedFromInventoryValue = _isExcludedFromInventoryValue;

        return isExcludedFromInventoryValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    private void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the inventory transaction originator contract.
    /// </summary>
    /// <returns>An instance of the <c>InventTransOriginCreateContract</c> class.</returns>
    public static InventTransOriginCreateContract construct()
    {
        return new InventTransOriginCreateContract();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromMovement</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the inventory transaction originator contract from a inventory movement.
    /// </summary>
    /// <param name = "_inventMovement">The inventory movement.</param>
    /// <returns>An instance of the <c>InventTransOriginCreateContract</c> class.</returns>
    public static InventTransOriginCreateContract newFromMovement(InventMovement _inventMovement)
    {
        InventDim itemInventDim = _inventMovement.inventdim().data();

        itemInventDim.clearNotProductDim(_inventMovement.inventDimGroupSetup());

        InventTransOriginCreateContract originCreateContract = InventTransOriginCreateContract::construct();

        originCreateContract.parmInventTransId(_inventMovement.transId());
        originCreateContract.parmItemId(_inventMovement.itemId());
        originCreateContract.parmReferenceCategory(_inventMovement.transType());
        originCreateContract.parmReferenceId(_inventMovement.transRefId());
        originCreateContract.parmPartyRecId(_inventMovement.dirParty());
        originCreateContract.parmIsExcludedFromInventoryValue(_inventMovement.mustExcludeFromInventoryValue());
        originCreateContract.parmProductDimensionId(InventDim::findOrCreate(itemInventDim).InventDimId);

        return originCreateContract;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>