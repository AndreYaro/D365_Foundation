<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductPricesData</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>EcoResProductPricesData</c> class holds a product prices data.
/// </summary>
public class EcoResProductPricesData
{
    private Price purchasePrice;
    private Price salesPrice;
    private Price inventoryPrice;
    private EcoResProductIdentificationData identification;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>purchasePriceChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when item purchase price is changed.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <param name = "_purchasePrice">The new item purchase price.</param>
    delegate void purchasePriceChanged(EcoResProductIdentificationData _identification, Price _purchasePrice) {}

]]></Source>
			</Method>
			<Method>
				<Name>salesPriceChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when item sales price is changed.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <param name = "_salesPrice">The new item sales price.</param>
    delegate void salesPriceChanged(EcoResProductIdentificationData _identification, Price _salesPrice) {}

]]></Source>
			</Method>
			<Method>
				<Name>inventoryPriceChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Raised when item inventory price is changed.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <param name = "_inventoryPrice">The new item inventory price.</param>
    delegate void inventoryPriceChanged(EcoResProductIdentificationData _identification, Price _inventoryPrice) {}

]]></Source>
			</Method>
			<Method>
				<Name>parmPurchasePrice</Name>
				<Source><![CDATA[
    public Price parmPurchasePrice(Price _purchasePrice = purchasePrice)
    {
        if (purchasePrice != _purchasePrice)
        {
            purchasePrice = _purchasePrice;
            this.purchasePriceChanged(identification, purchasePrice);
        }

        return purchasePrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSalesPrice</Name>
				<Source><![CDATA[
    public Price parmSalesPrice(Price _salesPrice = salesPrice)
    {
        if (salesPrice != _salesPrice)
        {
            salesPrice = _salesPrice;
            this.salesPriceChanged(identification, salesPrice);
        }

        return salesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInventoryPrice</Name>
				<Source><![CDATA[
    public Price parmInventoryPrice(Price _inventoryPrice = inventoryPrice)
    {
        if (inventoryPrice != _inventoryPrice)
        {
            inventoryPrice = _inventoryPrice;
            this.inventoryPriceChanged(identification, inventoryPrice);
        }

        return inventoryPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructs an instance of the <c>EcoResProductPricesData</c> class.
    /// </summary>
    /// <param name = "_identification">The product identification.</param>
    /// <returns>An instance of the <c>EcoResProductPricesData</c> class.</returns>
    public static EcoResProductPricesData construct(EcoResProductIdentificationData _identification)
    {
        var data = new EcoResProductPricesData();
        data.init(_identification);
        return data;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    protected void init(EcoResProductIdentificationData _identification)
    {
        identification = _identification;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>