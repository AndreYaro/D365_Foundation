<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqActionApplyPurchaseOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class applies an action to a <c>ReqTrans</c> record which is a purchase order.
/// </summary>
[ReqRefTypeFactoryAttribute(ReqRefType::Purch)]
class ReqActionApplyPurchaseOrder extends ReqActionApplyToOrder
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>applyActionToReferencedOrder</Name>
				<Source><![CDATA[
    public void applyActionToReferencedOrder()
    {
        PurchLine   purchLine;
        PurchTable  purchTable;

        purchLine = PurchLine::findInventTransId(InventTransOrigin::find(reqTrans.InventTransOrigin).InventTransId, true);

        if (!purchLine.RecId)
        {
            throw error(strFmt("@SYS15741", reqTrans.RefId));
        }
        
        if (ReqActionApplyPurchaseOrderChangeManagementFeatureToggle::instance().isEnabled())
        {
            if (!purchLine.purchTable().canAutoUpdatePurchOrder())
            {
                throw error(strFmt("@SCM:ReqActionApplyPurchaseOrder_ChangeManagementError", purchLine.PurchId));
            }
        }
        else if (!purchLine.canAutoUpdatePurchLine())
        {
            throw error(strFmt("@SYS300246", purchLine.PurchId));
        }

        if (reqTrans.ActionType == ActionType::Cancel && reqTrans.Qty == purchLine.QtyOrdered)
        {
            if (!purchLine.validateDelete())
            {
                throw error("@SYS18447");
            }

            purchLine.delete(false);

            if (reqActionApply.parmDeleteEmptyPurchase())
            {
                // Delete the purchase order if there are not any lines left
                purchTable = PurchTable::find(purchLine.PurchId, true);
                if (!purchTable.existPurchLine())
                {
                    if (!purchTable.validateDelete())
                    {
                        throw error("@SYS18447");
                    }

                    purchTable.delete();
                }
            }
        }
        else
        {
            if (reqTrans.ActionDays != 0)
            {
                this.updatePurchLineDeliveryDate(purchLine);
            }

            if (reqTrans.ActionQtyAdd)
            {
                // The purchase quantity will be set based on the adjusted inventory quantity, since the action is in inventory unit
                purchLine.PurchQty = purchLine.unitConvertInvent2Purch(purchLine.QtyOrdered + reqTrans.ActionQtyAdd);
                purchLine.QtyOrdered = purchLine.QtyOrdered + reqTrans.ActionQtyAdd;
                purchLine.PdsCWQty += PdsCatchWeight::cwQty(purchLine.ItemId, reqTrans.ActionQtyAdd);

                PurchLine::modifyPurchQty(purchLine, purchLine.inventDim());

                InventMovement::bufferSetRemainQty(purchLine);
            }

            if (!purchLine.validateWrite())
            {
                throw error("@SYS18447");
            }

            purchLine.update();

            this.updateReqTrans();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePurchLineDeliveryDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the purchase line delivery date.
    /// </summary>
    /// <param name = "_purchLine">A <c>PurchLine</c> record.</param>
    protected void updatePurchLineDeliveryDate(PurchLine _purchLine)
    {
        _purchLine.DeliveryDate = reqTrans.ActionDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>