<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomerEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
class CustomerEntity extends DirParty
{
    CustTable               custTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initFromCustAdvanceInvoiceTable_CZ</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize from CustInvoiceTable record.
    /// </summary>
    /// <param name="_table">
    /// The CustInvoiceTable record used to initialize the customer.
    /// </param>
    void initFromCustAdvanceInvoiceTable_CZ(CzCustAdvanceInvoiceTable _table)
    {
        name                              = _table.Name;
        nameAlias                         = name;
        primaryPostalAddressLocationRecId = _table.location();
        custTable.OneTimeCustomer         = _table.OneTimeCustomer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>CustomerEntity</c> class from a <c>CustInvoiceTable</c> record.
    /// </summary>
    /// <param name="_custInvoiceTable">
    /// The <c>CustInvoiceTable</c> record that is used to initialize the <c>CustomerEntity</c> class.
    /// </param>
    void initFromCustInvoiceTable(CustInvoiceTable _custInvoiceTable)
    {
        name                              = _custInvoiceTable.Name;
        nameAlias                         = name;
        primaryPostalAddressLocationRecId = _custInvoiceTable.location();
        custTable.OneTimeCustomer         = _custInvoiceTable.OneTimeCustomer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>CustomerEntity</c> class by using a <c>CustTable</c> record.
    /// </summary>
    /// <param name="_custTable">
    /// The <c>CustTable</c> record to use to initialize the customer.
    /// </param>
    void initFromCustTable(CustTable _custTable = custTable)
    {
        custTable = _custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesQuotationTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize the class from a <c>SalesQuotationTable</c> record.
    /// </summary>
    /// <param name="_salesQuotationTable">
    /// The <c>SalesQuotationTable</c> record that is used to initialize the customer.
    /// </param>
    void initFromSalesQuotationTable(SalesQuotationTable _salesQuotationTable)
    {
        name                                = _salesQuotationTable.DeliveryName;
        nameAlias                           = name;
        primaryPostalAddressLocationRecId   = _salesQuotationTable.deliveryLocation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromSalesTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the class from a <c>SalesTable</c> record.
    /// </summary>
    /// <param name="_salesTable">
    /// The <c>SalesTable</c> record that is used to initialize the customer.
    /// </param>
    void initFromSalesTable(SalesTable _salesTable)
    {
        name                                = _salesTable.DeliveryName;
        custTable.OneTimeCustomer           = _salesTable.OneTimeCustomer;
        nameAlias                           = name;
        primaryPostalAddressLocationRecId   = _salesTable.deliveryLocation();
        [firstName, middleName, lastName]   = DirPerson::splitNameParts(name);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Inserts the customer entity to the database.
    /// </summary>
    void insert()
    {
        ttsbegin;
        super();
        custTable.Party = partyRecId;
        custTable.insert(this.type, name);
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Creates a new customer entity object that is initialized with the specified buffer.
    /// </summary>
    /// <param name="_common">
    ///    The record buffer to use to initialize the customer entity object.
    /// </param>
    /// <param name="_transDateTime">
    ///    The time of entity creation.
    /// </param>
    void new(Common _common, TransDateTime _transDateTime)
    {
        super(_common, _transDateTime);
        custTable = _common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Persist the changes to the customer record to the database.
    /// </summary>
    void update()
    {
        ttsbegin;
        super();
        if (custTable && custTable.selectForUpdate(true))
        {
            custTable.update();
        }
        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFromCustPrepaymentInvoiceTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize customer entity from <c>CustPrepaymentInvoiceTable</c> record.
    /// </summary>
    /// <param name = "_custPrepaymentInvoiceTable">The <c>CustPrepaymentInvoiceTable</c> record used to initialize the customer.</param>
    internal void initFromCustPrepaymentInvoiceTable(CustPrepaymentInvoiceTable _custPrepaymentInvoiceTable)
    {
        name = _custPrepaymentInvoiceTable.Name;
        nameAlias = name;
        primaryPostalAddressLocationRecId = _custPrepaymentInvoiceTable.location();
        custTable.OneTimeCustomer = _custPrepaymentInvoiceTable.OneTimeCustomer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>