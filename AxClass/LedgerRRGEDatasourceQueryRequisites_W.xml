<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerRRGEDatasourceQueryRequisites_W</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerRRGEDatasourceQueryRequisites_W extends LedgerRRGEDatasourceQuery_W
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findValue</Name>
				<Source><![CDATA[
    protected str findValue(int _fieldId, int _tableId = 1)
    {
        LedgerRRGEDatasourceField_W datasourceField;

        datasourceField = this.findField(_tableId, _fieldId);
        if (datasourceField && evaluator)
        {
            return evaluator.findPropertyValue(datasourceField.fieldName());
        }

        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialized</Name>
				<Source><![CDATA[
    public boolean initialized(int _tableId)
    {
        boolean ret;

        ret = super(_tableId);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initTables</Name>
				<Source><![CDATA[
    public void initTables()
    {
        LedgerRRGOperationTable_RU      operationTable;
        LedgerRRGESectionProperties_W   sectionProperty;

        super();

        this.addTable(1, "@LedgerRRG:LedgerRRG_Requisites");

        while select ConstantText, LineNum from operationTable
            where operationTable.CellTableId    == eQuery.TableId
               && operationTable.CellRecId      == eQuery.RecId
        {
            select firstonly Description from sectionProperty
                where sectionProperty.PropertyId == operationTable.ConstantText;

            this.addField(1, any2int(operationTable.LineNum), operationTable.ConstantText, sectionProperty.Description);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>next</Name>
				<Source><![CDATA[
    public boolean next(int _tableId)
    {
        if (!this.initialized(_tableId))
        {
            this.initTables();
            this.setInitialized(_tableId);
            return true;
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showNamesInLookup</Name>
				<Source><![CDATA[
    public boolean showNamesInLookup()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    static public LedgerRRGEDatasourceQueryRequisites_W construct()
    {
        return new LedgerRRGEDatasourceQueryRequisites_W();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>