<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TransTaxInformationUIControllerAR</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The UI controller class for controlling all Accounts Receivable on new tax information UI and transaction update.
/// </summary>
public class TransTaxInformationUIControllerAR extends TransTaxInformationUIController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>lookupVatCommodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the lookup method to VAT commodity code.
    /// </summary>
    /// <param name="_formReferenceControl">
    /// The form reference control.
    /// </param>
    protected void lookupVatCommodityCode(FormReferenceGroupControl _formReferenceControl)
    {
        Query                   query = new Query();
        SysReferenceTableLookup sysReferenceTableLookup;
        QueryBuildDataSource    queryBuildDataSource;

        sysReferenceTableLookup = SysReferenceTableLookup::newParameters(tableNum(TaxInventVATCommodityCode_IN), _formReferenceControl);
        sysReferenceTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, CommodityCode));
        sysReferenceTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, Description));
        sysReferenceTableLookup.addLookupfield(fieldNum(TaxInventVATCommodityCode_IN, LogisticsAddressStateId));

        queryBuildDataSource = query.addDataSource(tableNum(TaxInventVATCommodityCode_IN));
        queryBuildDataSource.addRange(fieldNum(TaxInventVATCommodityCode_IN, ItemId)).value(queryValue(this.parmTaxModelTaxable().getItemId()));
        sysReferenceTableLookup.parmQuery(query);

        sysReferenceTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedCompanyLocation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override the modified method to company location.
    /// </summary>
    /// <param name="_companyLocation">
    /// The form data source company location.
    /// </param>
    protected void modifiedCompanyLocation(FormDataObject _companyLocation)
    {
        ItemId  itemId;

        super(_companyLocation);

        itemId = this.parmTaxModelTaxable().getItemId();

        if (itemId)
        {
            transTaxInformation.VATCommodityCode = TaxInventVATCommodityCode_IN::findFromItemState(
                itemId,
                LogisticsLocationEntity::location2PostalAddress(transTaxInformation.CompanyLocation).State).RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setVisibleToCustTaxInfoCtrls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set visable or invisible to all customer tax information controls on Tax information form.
    /// </summary>
    protected void setVisibleToCustTaxInfoCtrls()
    {
        super();
        transTaxInformationCustTaxInfoCtrl.parmCustomerTaxInformation().visible(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get tax direction.
    /// </summary>
    /// <returns>
    /// The tax direction.
    /// </returns>
    protected TaxDirection getTaxDirection()
    {
        TaxDirection taxDirection;

        taxDirection = this.parmTaxModelTaxable().getQuantity() > 0 ? TaxDirection::OutgoingTax : TaxDirection::IncomingTax;

        return taxDirection;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>