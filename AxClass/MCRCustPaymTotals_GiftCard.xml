<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCustPaymTotals_GiftCard</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
///     The class <c>MCRCustPaymTotals_GiftCard</c> extends <c>MCRCustPaymTotals</c> object in order to invoke payments from a giftcard form.
/// </summary>
class MCRCustPaymTotals_GiftCard extends MCRCustPaymTotals
{
    RetailGiftCardTable retailGiftCardTable;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowEdit</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Determines whether a user can edit the payment or not.
    /// </summary>
    /// <returns>
    /// true.
    /// </returns>
    public  boolean allowEdit()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>calcInvoicePaymAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total payment amount.
    /// </summary>
    /// <param name="custInvoiceJour">
    /// Not used in this instance.
    /// </param>
    /// <returns>
    /// The total payment amount.
    /// </returns>
    protected AmountCur calcInvoicePaymAmount(CustInvoiceJour custInvoiceJour)
    {
        return this.getTotalPaymAmount();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the currency from the gift card record.
    /// </summary>
    /// <returns>
    /// The currency from the gift card record.
    /// </returns>
    public CurrencyCode getCurrency()
    {
        return retailGiftCardTable.CurrencyCode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimension</Name>
				<Source><![CDATA[
        public DimensionDefault getDimension()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInvoiceAccount</Name>
				<Source><![CDATA[
        public CustAccount getInvoiceAccount()
    {
        SalesLine   salesLine;
        AccountNum  invoiceAcct;
        RetailGiftCardTransactions retailGiftCardTransactions;

        select firstOnly MCRInvoiceAccount, MCRInventTransId from retailGiftCardTransactions
            order by RecId desc
            where retailGiftCardTransactions.cardNumber == retailGiftCardTable.entryId
                && (retailGiftCardTransactions.operation == RetailGiftCardOperation::AddTo
                || retailGiftCardTransactions.operation == RetailGiftCardOperation::Issue);

        if (retailGiftCardTransactions.MCRInvoiceAccount != "")
        {
            invoiceAcct = retailGiftCardTransactions.MCRInvoiceAccount;
        }
        else
        {
            salesLine = SalesLine::findInventTransId(retailGiftCardTransactions.MCRInventTransId);
            if (salesLine)
            {
                invoiceAcct = salesLine.CustAccount;
            }
        }
        return invoiceAcct;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrderID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the order ID associated with the payment.
    /// </summary>
    /// <returns>
    /// The order ID associated with the payment.
    /// </returns>
    public Num getOrderID()
    {
        MCRCustPaymTable    mcrCustPaymTable;

        mcrCustPaymTable = MCRCustPaymTable::findByRefRecIDRefTableID(retailGiftCardTable.RecId, retailGiftCardTable.TableId);

        return mcrCustPaymTable.displayOrderID();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPostingProfile</Name>
				<Source><![CDATA[
        public PostingProfile getPostingProfile(boolean _recalc = false)
    {
        return CustParameters::find().PrepaymentPostingProfile;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalDiscount</Name>
				<Source><![CDATA[
        protected AmountCur getTotalDiscount()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalInvoicedAmount</Name>
				<Source><![CDATA[
        public AmountCur getTotalInvoicedAmount()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTotalSalesAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the amount being added to the gift card.
    /// </summary>
    /// <returns>
    /// The amount being added to the gift card.
    /// </returns>
    public AmountCur getTotalSalesAmount()
    {
        container giftCardStatus = RetailTransactionService::getGiftCardBalance(retailGiftCardTable.entryId);

        if (conPeek(giftCardStatus, 1))
        {
            return conPeek(giftCardStatus, 4);
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates the <c>MCRCustPaymTotals</c> object using the passed in reference record ID.
    /// </summary>
    /// <param name="_refRecID">
    /// The reference record ID of the record the payment is associated with.
    /// </param>
    public void new(RecId _refRecID)
    {
        select retailGiftCardTable
            where retailGiftCardTable.RecId == _refRecID;

        super(tableNum(RetailGiftCardTable), retailGiftCardTable.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleBillUpFrontContChildren</Name>
				<Source><![CDATA[
        public void settleBillUpFrontContChildren()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleInstallmentsOrder</Name>
				<Source><![CDATA[
        protected void settleInstallmentsOrder(boolean _instalAdjs = false)
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settleOnAccountPayments</Name>
				<Source><![CDATA[
        public void settleOnAccountPayments()
    {
        throw error(strFmt("@MCR35608", funcName()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTransStatus</Name>
				<Source><![CDATA[
        public void setTransStatus()
    {
        // no code in super super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>