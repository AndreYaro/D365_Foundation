<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxModelDocLineJournalProjImpl_IN</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>TaxModelDocLineJournalCostImpl_IN</c> class is the implement of the tax model document line journal.
/// </summary>
[TaxModelDocumentLineAttribute(tableStr(LedgerJournalTrans_Project))]
public class TaxModelDocLineJournalProjImpl_IN extends TaxModelDocLineWithholdImpl_IN
{
    LedgerJournalTable ledgerJournalTable;
    LedgerJournalTrans ledgerJournalTrans;
    LedgerJournalTrans_Project ledgerJournalTrans_Project;
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Init the domain object.
    /// The method should only be called by the <c>TaxModelDocLineFactoryable_IN</c> classes.
    /// </summary>
    /// <param name="_documentLineMap">
    /// The document line buffer.
    /// </param>
    public void init(SalesPurchJournalLine _documentLineMap)
    {
        ledgerJournalTrans_Project  = _documentLineMap;
        ledgerJournalTrans          = ledgerJournalTrans_Project.ledgerJournalTrans();

        super(_documentLineMap);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>InventDimId</c> of the document line.
    /// </summary>
    /// <returns>
    /// The <c>InventDimId</c>
    /// </returns>
    public InventDimId getInventDimId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the transction company
    /// </summary>
    /// <returns>
    /// The transaction company
    /// </returns>
    public SelectableDataArea getTransactionCompany()
    {
        return ledgerJournalTrans.company;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxLogisticsPostalAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the tax <c>LogisticsPostalAddress</c> of this transaction document line.
    /// </summary>
    /// <returns>
    /// The tax <c>LogisticsPostalAddress</c>
    /// </returns>
    /// This method is used to init TransTaxInformation.CompanyLocation
    public LogisticsPostalAddress getTaxLogisticsPostalAddress(TransTaxInformationType_IN _type = TransTaxInformationType_IN::Normal)
    {
        CompanyInfo         companyInfoLoc;
        DirPartyLocation    dirPartyLocation;

        companyInfoLoc = CompanyInfo::findByCompany_IN(curExt());

        dirPartyLocation = DirPartyLocation::findPrimaryPartyLocation(companyInfoLoc.RecId);

        return LogisticsPostalAddress::findByLocation(dirPartyLocation.Location);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getItemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>ItemId</c> of the document line.
    /// </summary>
    /// <returns>
    /// The <c>ItemId</c>
    /// </returns>
    public ItemId getItemId()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCustTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>CustTable</c> based on the cust account on the transaction line.
    /// </summary>
    /// <returns>
    /// The <c>CustTable</c>
    /// </returns>
    public CustTable getCustTable()
    {
        CustTable   custTable;

        custTable = CustTable::find(ledgerJournalTrans.findProjTable().CustAccount);

        return custTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the unit of the item in this transaction document line.
    /// </summary>
    /// <returns>The unit of the item in this transaction line.</returns>
    public UnitOfMeasureSymbol getUnit()
    {
        return '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuantity</Name>
				<Source><![CDATA[
    public Qty getQuantity()
    {
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentInvoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction invoice date
    /// </summary>
    /// <returns>
    /// The transaction invoice date
    /// </returns>
    public InvoiceDate getDocumentInvoiceDate()
    {
        return ledgerJournalTrans.TransDate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Transaction document date
    /// </summary>
    /// <returns>
    /// The transaction document date
    /// </returns>
    public DocumentDate getDocumentDate()
    {
        return ledgerJournalTrans.DocumentDate;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>