<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventMov_Jour_TransferIssue</Name>
	<SourceCode>
		<Declaration><![CDATA[
class InventMov_Jour_TransferIssue extends InventMov_Jour_Transfer
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>newMovement_Orig</Name>
				<Source><![CDATA[
    public InventMovement newMovement_Orig()
    {
        if (!inventJournalTrans.RecId)
        {
            return null;
        }
        return new InventMov_Jour_TransferIssue(inventJournalTrans.orig(),inventType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferDirection</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the direction of the transfer movements.
    /// </summary>
    /// <returns>
    ///    The direction of the transfer movements.
    /// </returns>
    public InventDirection transferDirection()
    {
        return InventDirection::Issue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transferInventTransOriginId</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves the ID of the transfer counterpart inventory transaction originator that corresponds to
    ///    the movement.
    /// </summary>
    /// <returns>
    ///    The ID of the transfer counterpart inventory transaction originator that corresponds to the
    ///    movement.
    /// </returns>
    public InventTransOriginId transferInventTransOriginId()
    {
        return InventTransOrigin::findByInventTransId(inventJournalTrans.ToInventTransId).RecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initDimParmAutoReserv</Name>
				<Source><![CDATA[
    public InventDimParm initDimParmAutoReserv(InventDim _inventDimCriteria, InventDimParm _inventDimParm = null)
    {
        return _inventDimCriteria.toDimParm();
    }

]]></Source>
			</Method>
			<Method>
				<Name>transSign</Name>
				<Source><![CDATA[
    public Integer transSign()
    {
        return  -1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>newFromInventJournalTrans</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Initializes a new instance of the <c>InventMov_Jour_TransferIssue</c> class that is based on the
    ///    specified record.
    /// </summary>
    /// <param name="_inventJournalTrans">
    ///    The <c>InventJournalTrans</c> record for which the class is instantiated.
    /// </param>
    /// <returns>
    ///    An instance of the <c>InventMov_Jour_TransferIssue</c> class.
    /// </returns>
    public static InventMov_Jour_TransferIssue newFromInventJournalTrans(InventJournalTrans _inventJournalTrans)
    {
        if (_inventJournalTrans.isJournalLineOwnerEnabled())
        {
            return InventMov_Jour_TransferIssue_OwnerEnabled::newFromInventJournalTrans(_inventJournalTrans);
        }
        else
        {
            return new InventMov_Jour_TransferIssue(_inventJournalTrans);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>