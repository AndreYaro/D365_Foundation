<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimensionFocusForm_ApplicationSuite_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
public static class DimensionFocusForm_ApplicationSuite_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DimensionHierarchy_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables/disables simulation buttons depending on the initialization state.
    /// </summary>
    /// <param name = "_sender">The <c>DimensionHierarchy</c> datasource.</param>
    /// <param name = "_e">Event arguments.</param>
    /// <exception>Throws exception if <c>DimensionFocusBalanceInitializationState</c> has invalid value.</exception>
    [FormDataSourceEventHandler(formDataSourceStr(DimensionFocus, DimensionHierarchy), FormDataSourceEventType::Activated)]
    public static void DimensionHierarchy_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        if (FeatureStateProvider::isFeatureEnabled(GeneralLedgerSimulationsFeature::instance()))
        {
            FormFunctionButtonControl initializeRebuildBalancesSimButton = _sender.formRun().control(_sender.formRun().controlId(formControlStr(DimensionFocus, InitializeRebuildBalancesSimButton_IT)));
            FormCheckBoxControl dimensionHierarchy_FocusIsAutomaticUpdateSim = _sender.formRun().control(_sender.formRun().controlId(formControlStr(DimensionFocus, DimensionHierarchy_FocusIsAutomaticUpdateSim_IT)));

            if (FeatureStateProvider::isFeatureEnabled(GeneralLedgerBalanceFeature::instance()))
            {
                initializeRebuildBalancesSimButton.visible(false);
                dimensionHierarchy_FocusIsAutomaticUpdateSim.visible(false);
            }
            else
            {
                FormDataSource dimensionHierarchy_ds = _sender.formRun().dataSource(formDataSourceStr(DimensionFocus, DimensionHierarchy));
                dimensionHierarchy_ds.reread();

                DimensionHierarchy dimensionHierarchy = dimensionHierarchy_ds.cursor();
                DimensionFocusBalanceInitializationState initializationState = dimensionHierarchy.FocusStateSim_IT;

                switch (initializationState)
                {
                    case DimensionFocusBalanceInitializationState::NotInitialized:
                        initializeRebuildBalancesSimButton.text("@ExtendedItallianLocalization:InitializeSimulationBalances");
                        initializeRebuildBalancesSimButton.helpText("@SYS319185");
                        initializeRebuildBalancesSimButton.enabled(true);
                        break;

                    case DimensionFocusBalanceInitializationState::Initialized:
                        initializeRebuildBalancesSimButton.text("@ExtendedItallianLocalization:RebuildSimulationBalances");
                        initializeRebuildBalancesSimButton.helpText("@SYS319184");
                        initializeRebuildBalancesSimButton.enabled(true);
                        break;

                    case DimensionFocusBalanceInitializationState::InProcess:
                        initializeRebuildBalancesSimButton.text("@SYS319183");
                        initializeRebuildBalancesSimButton.helpText("@SYS319184");
                        initializeRebuildBalancesSimButton.enabled(false);
                        break;

                    default:
                        throw error(Error::wrongUseOfFunction(funcName()));
                }

                dimensionHierarchy_FocusIsAutomaticUpdateSim.enabled(initializationState == DimensionFocusBalanceInitializationState::Initialized);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>