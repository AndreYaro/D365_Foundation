<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPricingPropertyCustomerProvider</Name>
	<SourceCode>
		<Declaration><![CDATA[
using System.ComponentModel.Composition;
using System.Collections;
using CrtPricingPropertyDefinition = Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingPropertyDefinition;
using CrtSalesTransaction = Microsoft.Dynamics.Commerce.Runtime.DataModel.SalesTransaction;
using CrtPricingPropertyValueContext = Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingPropertyValueContext;
using CrtPricingPredefinedProperty = Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingPredefinedProperty;
using CrtPricingPropertyLevel = Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingPropertyLevel;
using CrtPricingPropertyType = Microsoft.Dynamics.Commerce.Runtime.DataModel.PricingPropertyType;

/// <summary>
/// The property provider for customer on the sales transaction.
/// </summary>
[ExportAttribute(identifierStr(Dynamics.AX.Application.RetailPricingPropertyValueProviderBase))]
internal final class RetailPricingPropertyCustomerProvider extends RetailPricingPropertyValueProviderBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>IsPropertySupported</Name>
				<Source><![CDATA[
    public boolean IsPropertySupported(CrtPricingPropertyDefinition definition)
    {
        return definition.get_PropertyType() == CrtPricingPropertyType::Predefined
            && definition.get_PropertyLevel() == CrtPricingPropertyLevel::Header
            && (definition.get_PredefinedProperty() == CrtPricingPredefinedProperty::Customer
             || definition.get_PredefinedProperty() == CrtPricingPredefinedProperty::CustomerGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>Resolve</Name>
				<Source><![CDATA[
    public void Resolve(CrtPricingPropertyValueContext valueContext, CrtSalesTransaction salesTransaction)
    {
        str customerId = salesTransaction.get_CustomerId();

        IEnumerator enumerator = valueContext.get_PricingProperties().GetEnumerator();
        while (enumerator.moveNext())
        {
            CrtPricingPropertyDefinition crtDefinition = enumerator.get_Current();
            if (this.IsPropertySupported(crtDefinition) && crtDefinition.get_PredefinedProperty() == CrtPricingPredefinedProperty::Customer)
            {
                valueContext.AddHeaderValue(crtDefinition, customerId);
                valueContext.Resolve(crtDefinition);
                break;
            }
        }

        enumerator = valueContext.get_PricingProperties().GetEnumerator();
        while (enumerator.moveNext())
        {
            CrtPricingPropertyDefinition crtDefinition = enumerator.get_Current();
            if (this.IsPropertySupported(crtDefinition) && crtDefinition.get_PredefinedProperty() == CrtPricingPredefinedProperty::CustomerGroup)
            {
                CustTable custTable = CustTable::find(customerId);
                valueContext.AddHeaderValue(crtDefinition, custTable.CustGroup);
                valueContext.Resolve(crtDefinition);
                break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>