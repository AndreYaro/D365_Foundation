<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchEditLinesForm_PackingSlip</Name>
	<SourceCode>
		<Declaration><![CDATA[
class       PurchEditLinesForm_PackingSlip
extends     PurchEditLinesForm
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>allowHeaderCreate</Name>
				<Source><![CDATA[
    public boolean allowHeaderCreate()
    {
        if (purchFormLetter.isEGAISPosting_RU())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowHeaderDelete</Name>
				<Source><![CDATA[
    public boolean allowHeaderDelete()
    {
        if (purchFormLetter.isEGAISPosting_RU())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankLCImportLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the Letter of Credit line field should be visible.
    /// </summary>
    /// <returns>
    /// true if the Letter of Credit line field should be visible; otherwise, false.
    /// </returns>
    public boolean bankLCImportLine()
    {
        return BankLCImportFeatureChecker::checkBankLCImportEnabled()
            && !purchFormLetter.proforma();
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAssetFieldsBeEdited</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the fixed asset fields can be edited.
    /// </summary>
    /// <param name="_parmTable">
    /// A table buffer that contains the current <c>PurchParmTable</c> or <c>VendInvoiceInfoTable</c> table
    /// values.
    /// </param>
    /// <param name="_parmLine">
    /// A table buffer that contains the current <c>PurchParmLine</c> or <c>VendInvoiceInfoLine</c> table
    /// values.
    /// </param>
    /// <returns>
    /// Always returns false.
    /// </returns>
    public boolean canAssetFieldsBeEdited(VendDocumentTableMap _parmTable, VendDocumentLineMap _parmLine)
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>classType</Name>
				<Source><![CDATA[
    public str  classType()
    {
        return "@SYS332892";
    }

]]></Source>
			</Method>
			<Method>
				<Name>correctEnabled_RU</Name>
				<Source><![CDATA[
    boolean correctEnabled_RU()
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return false;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>correctPhysical_RU</Name>
				<Source><![CDATA[
    boolean correctPhysical_RU()
    {
        if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
        {
            return true;
        }
        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateCaption</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Retrieves a String value that is used to set the label for the <c>TransDate</c> field of the
    ///    <c>PurchParmTable</c> table on the <c>PurchEditLines</c> form.
    /// </summary>
    /// <returns>
    ///    The String value that is used to set the label for the <c>TransDate</c> field of the
    ///    <c>PurchParmTable</c> table on the <c>PurchEditLines</c> form.
    /// </returns>

    public str dateCaption()
    {
        return "@SYS332891";
    }

]]></Source>
			</Method>
			<Method>
				<Name>editBankLCImportLine</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the Letter of Credit line field should be editable.
    /// </summary>
    /// <returns>
    /// true if the Letter of Credit line field should be editable; otherwise, false.
    /// </returns>
    public boolean editBankLCImportLine()
    {
        return purchTable && purchTable.isMarkedForBankLC();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDiscount</Name>
				<Source><![CDATA[
    public boolean  editDiscount()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editingCaption</Name>
				<Source><![CDATA[
    public str editingCaption()
    {
        return "@SYS332874";
    }

]]></Source>
			</Method>
			<Method>
				<Name>editMarkup</Name>
				<Source><![CDATA[
    public boolean  editMarkup()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editPrices</Name>
				<Source><![CDATA[
    public boolean  editPrices()
    {
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterButtonCaption</Name>
				<Source><![CDATA[
    public str  formLetterButtonCaption()
    {
        return "@SYS333836";
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterButtonCaptionCopy</Name>
				<Source><![CDATA[
    public str  formLetterButtonCaptionCopy()
    {
        return "@SYS332876";
    }

]]></Source>
			</Method>
			<Method>
				<Name>formLetterCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a String value that is used to set the caption for the <c>PrintFormLetter</c> field on
    /// the <c>PurchEditDocumentPrintSetup</c> dialog box.
    /// </summary>
    /// <returns>
    /// The String value that is used to set the caption for the <c>PrintFormLetter</c> field on the
    /// <c>PurchEditDocumentPrintSetup</c> dialog box.
    /// </returns>
    #ISOCountryRegionCodes
    /// <summary>
    ///    Retrieves a String value that is used to set the caption for the <c>PrintFormLetter</c> field on
    ///    the <c>PurchEditDocumentPrintSetup</c> dialog box.
    /// </summary>
    /// <returns>
    ///    The String value that is used to set the caption for the <c>PrintFormLetter</c> field on the
    ///    <c>PurchEditDocumentPrintSetup</c> dialog box.
    /// </returns>

    public str  formLetterCaption()
    {
        // <GEERU>
        return SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]) ? "@GLS107004" : "@SYS332877";
        // </GEERU>
    }

]]></Source>
			</Method>
			<Method>
				<Name>num</Name>
				<Source><![CDATA[
    public boolean num()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numAllowEdit</Name>
				<Source><![CDATA[
    public boolean numAllowEdit()
    {
        boolean ret;

        ret = super() && !purchFormLetter.proforma();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>numCaption</Name>
				<Source><![CDATA[
    public str numCaption()
    {
        return "@SYS333836";
    }

]]></Source>
			</Method>
			<Method>
				<Name>numHelpText</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a string value that is used to set the help text for the <c>Num</c> field in the
    /// <c>PurchEditLines</c> form.
    /// </summary>
    /// <returns>
    /// The string value that is used to set the help text.
    /// </returns>
    public str numHelpText()
    {
        return "@SYS342654";
    }

]]></Source>
			</Method>
			<Method>
				<Name>printSalesFormLetter</Name>
				<Source><![CDATA[
    public boolean  printSalesFormLetter()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setupBankLCImportLineController</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the <c>BankLCImportLineNumController</c> object to use for the <c>BankLCImportLine</c>
    /// field.
    /// </summary>
    public void setupBankLCImportLineController()
    {
        super();
        if (bankLCImportLineNumController)
        {
            bankLCImportLineNumController.parmAllowOpened(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDeviationQty_RU</Name>
				<Source><![CDATA[
    public boolean showDeviationQty_RU()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDocNumberingCode_LT</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is used to find if the Numbering Code field should be visible on the Purchase Packing Slip form.
    /// </summary>
    /// <param name="_parmId">
    /// ParmId of the Purchase order transaction.
    /// </param>
    /// <returns>
    /// True if there exists a PurchParmTable record with the given ParmId and has the DocRegister_LT field set.
    /// </returns>
    public boolean showDocNumberingCode_LT(ParmId _parmId)
    {
        PurchParmTable tmpParmTable;

        select firstonly RecId from tmpParmTable
            where tmpParmTable.ParmId == _parmId &&
                tmpParmTable.DocAutoNumbering_LT;

        return (tmpParmTable.RecId != 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInventLocationId_PL</Name>
				<Source><![CDATA[
    public boolean showInventLocationId_PL()
    {
        return PurchParameters::find().PackingSlipByInvent_PL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showInventProfileType_RU</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public boolean showInventProfileType_RU()
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showOfficials_RU</Name>
				<Source><![CDATA[
    public boolean showOfficials_RU()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showOffInventLocation_RU</Name>
				<Source><![CDATA[
    public boolean showOffInventLocation_RU()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPostingProfile_RU</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public boolean showPostingProfile_RU()
    {
        return SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPrinterSetting_RU</Name>
				<Source><![CDATA[
    #ISOCountryRegionCodes
    public boolean showPrinterSetting_RU()
    {
        return ! SysCountryRegionCode::isLegalEntityInCountryRegion([ #isoRU ]);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showPrintReimbursementSlip_RU</Name>
				<Source><![CDATA[
    public boolean showPrintReimbursementSlip_RU()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>specQtyAllowEdit</Name>
				<Source><![CDATA[
    public boolean specQtyAllowEdit()
    {
        if (purchFormLetter.wmsJournalTableDsIsSet() || 
            purchFormLetter.isEGAISPosting_RU())
        {
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumBy</Name>
				<Source><![CDATA[
    public AccountOrder sumBy()
    {
        if (purchFormLetter.isEGAISPosting_RU())
        {
            return AccountOrder::Account;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumByAllowEdit</Name>
				<Source><![CDATA[
    public boolean sumByAllowEdit()
    {
        if (purchFormLetter.isEGAISPosting_RU())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumNumCaption</Name>
				<Source><![CDATA[
    public str  sumNumCaption()
    {
        return "@SYS11549";
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    public boolean  transDate()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDateAllowEdit</Name>
				<Source><![CDATA[
    public boolean transDateAllowEdit()
    {
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    public static PurchEditLinesForm_PackingSlip construct()
    {
        return new PurchEditLinesForm_PackingSlip();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newVersioningUpdateType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new <c> PurchEditLinesForm_PackingSlip </c> object.
    /// </summary>
    /// <param name="_updateType">
    /// An update type; optional.
    /// </param>
    /// <returns>
    /// A <c>PurchEditLinesForm_PackingSlip</c> object.
    /// </returns>
    public static PurchEditLinesForm_PackingSlip newVersioningUpdateType(VersioningUpdateType _updateType = VersioningUpdateType::Initial)
    {
        switch (_updateType)
        {
            // <GEERU>
            case VersioningUpdateType::Correction:
                return PurchEditLinesForm_PackingSlipCorrection::construct();
            case VersioningUpdateType::Cancel:
                if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoRU]))
                    return PurchEditLinesForm_PackingSlipCancel::construct();
                else
                    return PurchEditLinesForm_PackingSlipCorrection::construct();
            // </GEERU>
            default:
                return PurchEditLinesForm_PackingSlip::construct();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>