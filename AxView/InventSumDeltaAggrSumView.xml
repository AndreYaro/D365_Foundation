<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSumDeltaAggrSumView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSumDeltaAggrSumView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>arrived</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str arrived()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Arrived));
    }

]]></Source>
			</Method>
			<Method>
				<Name>availOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str availOrdered()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, AvailOrdered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>availPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str availPhysical()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, AvailPhysical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deducted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str deducted()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Deducted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldLatestDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view where latest date is neede.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the <c>InventSum</c> AND <c>InventSumDeltaAggrView</c> field.
    /// </param>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>

    private static str fieldLatestDate(FieldName _fieldName)
    {
        TableName   viewName = tableStr(InventSumDeltaAggrSumView);
        str         fieldNameDelta = SysComputedColumn::returnField(viewName, identifierStr(InventSumDeltaAggrView), _fieldName);
        str         fieldNameSum   = SysComputedColumn::returnField(viewName, identifierStr(InventSum), _fieldName);

        return SysComputedColumn::if(SysComputedColumn::isNullExpression(fieldNameSum),
                fieldNameDelta,                                         // If InventSum is null then just return the delta value
                SysComputedColumn::if(SysComputedColumn::compareExpressions(fieldNameSum, '>', fieldNameDelta),
                fieldNameSum,       // If InventSum is has the latest date then return that
                fieldNameDelta)    // else use the value from InventSumDelta
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the specified column in the view.
    /// </summary>
    /// <param name="_fieldName">
    /// The name of the <c>InventSum</c> AND <c>InventSumDeltaAggrView</c> field.
    /// </param>
    /// <returns>
    /// A string to compute the specified column in the view.
    /// </returns>

    private static str fieldString(FieldName _fieldName)
    {
        TableName   viewName = tableStr(InventSumDeltaAggrSumView);
        str         fieldNameDelta = SysComputedColumn::returnField(viewName, identifierStr(InventSumDeltaAggrView), _fieldName);
        str         fieldNameSum   = SysComputedColumn::returnField(viewName, identifierStr(InventSum), _fieldName);

        return SysComputedColumn::if(SysComputedColumn::isNullExpression(fieldNameSum),
                fieldNameDelta,                                         // If InventSum is null then just return the delta value
                SysComputedColumn::add(fieldNameDelta, fieldNameSum));  // Add the values from InventSumDelta and InventSum
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastUpdDateExpected</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>

    public static str lastUpdDateExpected()
    {
        return InventSumDeltaAggrSumView::fieldLatestDate(fieldStr(InventSum, LastUpdDateExpected));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastUpdDatePhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>

    public static str lastUpdDatePhysical()
    {
        return InventSumDeltaAggrSumView::fieldLatestDate(fieldStr(InventSum, LastUpdDatePhysical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>onOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str onOrder()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, OnOrder));
    }

]]></Source>
			</Method>
			<Method>
				<Name>ordered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str ordered()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Ordered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWArrived</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWArrived()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWArrived));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWAvailOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWAvailOrdered()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWAvailOrdered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWAvailPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWAvailPhysical()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWAvailPhysical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWDeducted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWDeducted()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWDeducted));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWOnOrder</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWOnOrder()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWOnOrder));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWOrdered()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWOrdered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPhysicalInvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWPhysicalInvent()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWPhysicalInvent));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPicked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWPicked()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWPicked));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWPostedQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWPostedQty()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWPostedQty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQuotationIssue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWQuotationIssue()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWQuotationIssue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWQuotationReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWQuotationReceipt()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWQuotationReceipt));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWReceived</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWReceived()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWReceived));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWRegistered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWRegistered()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWRegistered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWReservOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWReservOrdered()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWReservOrdered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>pdsCWReservPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str pdsCWReservPhysical()
    {
        if (!#PdsCatchWeightEnabled)
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PdsCWReservPhysical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicalInvent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str physicalInvent()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PhysicalInvent));
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicalValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str physicalValue()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PhysicalValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>physicalValueSecCur_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str physicalValueSecCur_RU()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PhysicalValueSecCur_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>picked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str picked()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Picked));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str postedQty()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PostedQty));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str postedValue()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PostedValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postedValueSecCur_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str postedValueSecCur_RU()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, PostedValueSecCur_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>quotationIssue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str quotationIssue()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, QuotationIssue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>quotationReceipt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str quotationReceipt()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, QuotationReceipt));
    }

]]></Source>
			</Method>
			<Method>
				<Name>received</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str received()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Received));
    }

]]></Source>
			</Method>
			<Method>
				<Name>registered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str registered()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, Registered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reservOrdered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str reservOrdered()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, ReservOrdered));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reservPhysical</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the related column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the related column in the view.
    /// </returns>
    public static str reservPhysical()
    {
        return InventSumDeltaAggrSumView::fieldString(fieldStr(InventSum, ReservPhysical));
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddSumFields</Name>
				<Source><![CDATA[
    public static void queryAddSumFields(
        QueryBuildDataSource    _qbS,
        boolean                 _onlyAvail = false)
    {
        QueryBuildFieldList qbfl = _qbS.fields();
        Set                 fields  = new Set(Types::Integer);
        Counter     i;

        void addField(FieldId fieldId, SelectionField _fieldType = SelectionField::Sum)
        {
            if (!fields.in(fieldId))
            {
                qbfl.addField(fieldId, _fieldType);
            }
        }

        for (i=1;i<=qbfl.fieldCount();i++)
        {
            if (qbfl.fieldKind(i) == SelectionField::Sum || qbfl.fieldKind(i) == SelectionField::Min)
            {
                fields.add(qbfl.field(i));
            }
        }

        if (! _onlyAvail)
        {
            addField(fieldNum(InventSumDeltaAggrSumView,PostedQty));
            addField(fieldNum(InventSumDeltaAggrSumView,PostedValue));
            addField(fieldNum(InventSumDeltaAggrSumView,PhysicalValue));
            addField(fieldNum(InventSumDeltaAggrSumView,Deducted));
            addField(fieldNum(InventSumDeltaAggrSumView,Registered));
            addField(fieldNum(InventSumDeltaAggrSumView,Received));
            addField(fieldNum(InventSumDeltaAggrSumView,Picked));
            addField(fieldNum(InventSumDeltaAggrSumView,ReservPhysical));
            addField(fieldNum(InventSumDeltaAggrSumView,ReservOrdered));
            addField(fieldNum(InventSumDeltaAggrSumView,OnOrder));
            addField(fieldNum(InventSumDeltaAggrSumView,Ordered));
            addField(fieldNum(InventSumDeltaAggrSumView,Arrived));
            addField(fieldNum(InventSumDeltaAggrSumView,QuotationReceipt));
            addField(fieldNum(InventSumDeltaAggrSumView,QuotationIssue));
            addField(fieldNum(InventSumDeltaAggrSumView,PhysicalInvent));
            // <GEERU>
            addField(fieldNum(InventSumDeltaAggrSumView,PhysicalValueSecCur_RU));
            addField(fieldNum(InventSumDeltaAggrSumView,PostedValueSecCur_RU));
            // </GEERU>
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWPostedQty));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWDeducted));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWRegistered));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWReceived));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWPicked));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWReservPhysical));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWReservOrdered));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWOnOrder));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWOrdered));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWArrived));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWQuotationReceipt));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWQuotationIssue));
            addField(fieldNum(InventSumDeltaAggrSumView,PdsCWPhysicalInvent));
        }

        addField(fieldNum(InventSumDeltaAggrSumView,AvailPhysical));
        addField(fieldNum(InventSumDeltaAggrSumView,AvailOrdered));
        addField(fieldNum(InventSumDeltaAggrSumView,PdsCWAvailPhysical));
        addField(fieldNum(InventSumDeltaAggrSumView,PdsCWAvailOrdered));
        addField(fieldNum(InventSumDeltaAggrSumView,LastUpdDatePhysical), SelectionField::Max);
        addField(fieldNum(InventSumDeltaAggrSumView,LastUpdDateExpected), SelectionField::Min);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4000118</DeveloperDocumentation>
	<Label>@SYS4000117</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventDimId</TitleField2>
	<Query>InventSumDeltaAggrSum</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWQuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPicked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPhysicalInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Arrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Picked</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalInvent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Ordered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Deducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationIssue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationReceipt</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Received</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWArrived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWPostedQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWAvailPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWDeducted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOnOrder</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReceived</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWRegistered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservOrdered</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PdsCWReservPhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastUpdDateExpected</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>LastDate</Name>
			<Label>@SYS15992</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LastUpdDatePhysical</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastUpdDateExpected</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Value</Name>
			<Label>@SYS11762</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PhysicalValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedValueSecCur_RU</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventSumDeltaAggrView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventDimId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventSumDeltaAggrView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Arrived</Name>
			<ExtendedDataType>InventQtyArrived</ExtendedDataType>
			<ViewMethod>arrived</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TTSId</Name>
			<IsObsolete>Yes</IsObsolete>
			<DataField>TTSId</DataField>
			<DataSource>InventSumDeltaAggrView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SQLTransactionID</Name>
			<DataField>SQLTransactionID</DataField>
			<DataSource>InventSumDeltaAggrView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PostedQty</Name>
			<ExtendedDataType>InventQtyPosted</ExtendedDataType>
			<ViewMethod>postedQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AvailOrdered</Name>
			<ExtendedDataType>InventQtyAvailOrdered</ExtendedDataType>
			<ViewMethod>availOrdered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AvailPhysical</Name>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<ViewMethod>availPhysical</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Deducted</Name>
			<ExtendedDataType>InventQtyDeducted</ExtendedDataType>
			<ViewMethod>deducted</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>OnOrder</Name>
			<ExtendedDataType>InventQtyOnOrder</ExtendedDataType>
			<ViewMethod>onOrder</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Ordered</Name>
			<ExtendedDataType>InventQtyOrdered</ExtendedDataType>
			<ViewMethod>Ordered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PhysicalInvent</Name>
			<ExtendedDataType>InventQtyPhysicalOnhand</ExtendedDataType>
			<ViewMethod>physicalInvent</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PhysicalValue</Name>
			<ExtendedDataType>CostAmountPhysical</ExtendedDataType>
			<ViewMethod>physicalValue</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PhysicalValueSecCur_RU</Name>
			<ExtendedDataType>CostAmountPhysicalSecCur_RU</ExtendedDataType>
			<ViewMethod>physicalValueSecCur_RU</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Picked</Name>
			<ExtendedDataType>InventQtyPicked</ExtendedDataType>
			<ViewMethod>picked</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PostedValue</Name>
			<ExtendedDataType>CostAmountPosted</ExtendedDataType>
			<ViewMethod>postedValue</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PostedValueSecCur_RU</Name>
			<ExtendedDataType>CostAmountPostedSecCur_RU</ExtendedDataType>
			<ViewMethod>postedValueSecCur_RU</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>QuotationIssue</Name>
			<ExtendedDataType>InventQtyQuotationIssue</ExtendedDataType>
			<ViewMethod>quotationIssue</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>QuotationReceipt</Name>
			<ExtendedDataType>InventQtyQuotationReceipt</ExtendedDataType>
			<ViewMethod>quotationReceipt</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Received</Name>
			<ExtendedDataType>InventQtyReceived</ExtendedDataType>
			<ViewMethod>received</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Registered</Name>
			<ExtendedDataType>InventQtyRegistered</ExtendedDataType>
			<ViewMethod>registered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>ReservOrdered</Name>
			<ExtendedDataType>InventQtyReservOrdered</ExtendedDataType>
			<ViewMethod>reservOrdered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>ReservPhysical</Name>
			<ExtendedDataType>InventQtyReservPhysical</ExtendedDataType>
			<ViewMethod>reservPhysical</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWArrived</Name>
			<ExtendedDataType>PdsCWArrived</ExtendedDataType>
			<ViewMethod>pdsCWArrived</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWPostedQty</Name>
			<ExtendedDataType>PdsCWPostedQty</ExtendedDataType>
			<ViewMethod>pdsCWPostedQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWAvailOrdered</Name>
			<ExtendedDataType>PdsCWAvailOrdered</ExtendedDataType>
			<ViewMethod>pdsCWAvailOrdered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWAvailPhysical</Name>
			<ExtendedDataType>PdsCWAvailPhysical</ExtendedDataType>
			<ViewMethod>pdsCWAvailPhysical</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWDeducted</Name>
			<ExtendedDataType>PdsCWDeducted</ExtendedDataType>
			<ViewMethod>pdsCWDeducted</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWOnOrder</Name>
			<ExtendedDataType>PdsCWOnOrder</ExtendedDataType>
			<ViewMethod>pdsCWOnOrder</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWOrdered</Name>
			<ExtendedDataType>PdsCWOrdered</ExtendedDataType>
			<ViewMethod>pdsCWOrdered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWPhysicalInvent</Name>
			<ExtendedDataType>PdsCWPhysicalInvent</ExtendedDataType>
			<ViewMethod>pdsCWPhysicalInvent</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWPicked</Name>
			<ExtendedDataType>PdsCWPicked</ExtendedDataType>
			<ViewMethod>pdsCWPicked</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWQuotationIssue</Name>
			<ExtendedDataType>PdsCWQuotationIssue</ExtendedDataType>
			<ViewMethod>pdsCWQuotationIssue</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWQuotationReceipt</Name>
			<ExtendedDataType>PdsCWQuotationReceipt</ExtendedDataType>
			<ViewMethod>pdsCWQuotationReceipt</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWReceived</Name>
			<ExtendedDataType>PdsCWReceived</ExtendedDataType>
			<ViewMethod>pdsCWReceived</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWRegistered</Name>
			<ExtendedDataType>PdsCWRegistered</ExtendedDataType>
			<ViewMethod>pdsCWRegistered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWReservOrdered</Name>
			<ExtendedDataType>PdsCWReservOrdered</ExtendedDataType>
			<ViewMethod>pdsCWReservOrdered</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PdsCWReservPhysical</Name>
			<ExtendedDataType>PdsCWReservPhysical</ExtendedDataType>
			<ViewMethod>pdsCWReservPhysical</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>LastUpdDatePhysical</Name>
			<ExtendedDataType>DatePhysical</ExtendedDataType>
			<ViewMethod>lastUpdDatePhysical</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>LastUpdDateExpected</Name>
			<ExtendedDataType>DateExpected</ExtendedDataType>
			<ViewMethod>lastUpdDateExpected</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>