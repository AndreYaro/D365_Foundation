<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResReservationRollupView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResReservationRollupView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getLockedCapacity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets locked capacity by comparing booked and assigned capacity and take whichever on is higher.
    /// </summary>
    public static str getLockedCapacity()
    {
        return ResRollupUtil::getLockedCapacity(tableStr(ResReservationRollupView), identifierStr(ResReservationRollupTransitionView),
            fieldStr(ResReservationRollupTransitionView, BookedCapacity), fieldStr(ResReservationRollupTransitionView, AssignedCapacity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getHoursByCoverageTypeAndCommitType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get sum of hours by commit type.
    /// </summary>
    /// <param name = "_coverageType">Resource roll-ups coverage type.</param>
    /// <param name = "_commitType">Reservation commit type.</param>
    /// <param name = "_resource">Resource record ID.</param>
    /// <param name = "_activityResource">Activity resource record ID.</param>
    /// <param name = "_startTime">Start time.</param>
    /// <param name = "_endTime">End time.</param>
    /// <returns>Sum of locked hours by the specific arguments.</returns>
    public static Hours getHoursByCoverageTypeAndCommitType(ResRollupCoverage _coverageType, ResCommitType _commitType,
        ResourceRecId _resource, ActivityResourceRecId _activityResource, utcdatetime _startTime, utcdatetime _endTime)
    {
        Hours sumOfHours;

        ResReservationRollupView reservationRollupView;
        
        switch (_coverageType)
        {
            case ResRollupCoverage::Availability:
                if (_resource)
                {
                    //Get sum of locked capacity for the resource.
                    select sum(LockedCapacity) from reservationRollupView
                        where reservationRollupView.Resource == _resource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;
                }
                else
                {
                    //Get sum of locked capacity for the planned resource.
                    select sum(LockedCapacity) from reservationRollupView
                        where reservationRollupView.ActivityResource == _activityResource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;
                }
                sumOfHours = reservationRollupView.LockedCapacity;
                break;
            case ResRollupCoverage::Activity:
                if (_resource)
                {
                    //Get sum of locked capacity for the resource as a specific activity resource.
                    select sum(LockedCapacity) from reservationRollupView
                        where reservationRollupView.Resource == _resource
                            && reservationRollupView.ActivityResource == _activityResource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;
                }
                else
                {
                    //Get sum of locked capacity for the planned resource.
                    select sum(LockedCapacity) from reservationRollupView
                        where reservationRollupView.ActivityResource == _activityResource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;
                }
                sumOfHours = reservationRollupView.LockedCapacity;
                break;
            case ResRollupCoverage::Assignment:
                if (_resource)
                {
                    //Get difference between the total locked capacity for this resoruce 
                    //minus booked capacity for the specific activity resource
                    //plus assignment capacity for the specific activity resource.
                    select sum(LockedCapacity) from reservationRollupView
                        where reservationRollupView.Resource == _resource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;

                    Hours lockedCapacity = reservationRollupView.LockedCapacity;

                    select sum(BookedCapacity), sum(AssignedCapacity) from reservationRollupView
                        where reservationRollupView.Resource == _resource
                            && reservationRollupView.ActivityResource == _activityResource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;

                    sumOfHours = lockedCapacity - reservationRollupView.BookedCapacity + reservationRollupView.AssignedCapacity;
                }
                else
                {
                    //Get sum of assigned capacity for the planned resource.
                    select sum(AssignedCapacity) from reservationRollupView
                        where reservationRollupView.ActivityResource == _activityResource
                            && reservationRollupView.CommitType == _commitType
                            && reservationRollupView.Hour >= _startTime
                            && reservationRollupView.Hour <= _endTime;

                    sumOfHours = reservationRollupView.AssignedCapacity;
                }
                break;
        }

        return sumOfHours;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<Query>ResReservationRollupQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityCompany</Name>
			<DataField>ActivityCompany</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RootActivity</Name>
			<DataField>RootActivity</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityResource</Name>
			<DataField>ActivityResource</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RootTaskCollectionKey</Name>
			<DataField>RootTaskCollectionKey</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CommitType</Name>
			<DataField>CommitType</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Hour</Name>
			<DataField>Hour</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Day</Name>
			<DataField>Day</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Week</Name>
			<DataField>Week</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Month</Name>
			<DataField>Month</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Quarter</Name>
			<DataField>Quarter</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>HalfYear</Name>
			<DataField>HalfYear</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssignedCapacity</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>AssignedCapacity</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BookedCapacity</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>BookedCapacity</DataField>
			<DataSource>ResReservationRollupTransitionView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LockedCapacity</Name>
			<ViewMethod>getLockedCapacity</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>