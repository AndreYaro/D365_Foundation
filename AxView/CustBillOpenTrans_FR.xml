<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustBillOpenTrans_FR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustBillOpenTrans_FR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the find method of <c>CustBankAccount</c> and retrieves the table buffer by passing
    /// the <c>AccountNum</c> which inturn calls the name method to retrieve the name.
    /// </summary>
    /// <returns>
    /// <c>AccountName</c> of the customer.
    /// </returns>
    display AccountName accountName()
    {
        return CustTable::find(this.AccountNum).Name();
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountSpaced</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the str that contains the <c>RegistrationNum</c> and <c>AccountNum</c> values.
    /// </summary>
    /// <returns>
    /// String that has <c>RegistrationNum</c> and <c>AccountNum</c> values seperated with space.
    /// </returns>
    display FreeText accountSpaced()
    {
        #Define.delimiter(' ')

        CustBankAccount custBankAccount;
        custBankAccount = this.custBankAccount();
        return  substr(custBankAccount.RegistrationNum,1,5)+#delimiter+substr(custBankAccount.RegistrationNum,6,5)+#delimiter+substr(custBankAccount.AccountNum,1,11)+#delimiter+substr(custBankAccount.AccountNum,12,2);
    }

]]></Source>
			</Method>
			<Method>
				<Name>bankName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the name of the <c>CustBankAccount</c> table.
    /// </summary>
    /// <returns>
    /// Name of customer.
    /// </returns>
    display Name bankName()
    {
        return this.custBankAccount().Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>custBankAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calls the find method of <c>CustBankAccount</c> and retrieves the table buffer by passing
    /// <c>AccountNum</c> and <c>ThirdPartyBankAccountId</c>  as arguments in the method.
    /// </summary>
    /// <returns>
    /// <c>CustBankAccount</c> table buffer.
    /// </returns>
    public CustBankAccount custBankAccount()
    {
        return CustBankAccount::find(this.AccountNum, this.ThirdPartyBankAccountId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CustBillOfExchange</ConfigurationKey>
	<CountryRegionCodes>FR</CountryRegionCodes>
	<DeveloperDocumentation>@SYS317455</DeveloperDocumentation>
	<Label>@SYS97171</Label>
	<TitleField1>AccountNum</TitleField1>
	<TitleField2>BillOfExchangeID</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillOfExchangeID</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BillOfExchangeID</Name>
			<DataField>BillOfExchangeID</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentNum</Name>
			<DataField>DocumentNum</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustTranRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustTransOpenAccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AmountMST</Name>
			<DataField>AmountMST</DataField>
			<DataSource>CustTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DueDate</Name>
			<DataField>DueDate</DataField>
			<DataSource>CustTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>CustTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ThirdPartyBankAccountId</Name>
			<DataField>ThirdPartyBankAccountId</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PaymMode</Name>
			<DataField>PaymMode</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTransOpen</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTransOpen</Table>
						<DataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DueDate</Name>
								<Field>DueDate</Field>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<FetchMode>OneToN</FetchMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AccountNum</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>RecId</Name>
								<Field>RecId</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>BillOfExchangeID</Name>
						<Field>BillOfExchangeID</Field>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>