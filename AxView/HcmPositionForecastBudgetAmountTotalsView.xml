<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionForecastBudgetAmountTotalsView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmPositionForecastBudgetAmountTotalsView extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateTotalEarnings</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of all budget cost elements of type 'Earning' for a forecast position.
    /// </summary>
    /// <returns>
    /// A query string which computes the sum of cost elements of type 'Earning'.
    /// </returns>
    public static str calculateTotalEarnings()
    {
        return HcmPositionForecastBudgetAmountTotalsView::getSubqueryToCalculateSumByCostElementType(HcmBudgetCostElementType::Earning);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalBenefits</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of all budget cost elements of type 'Benefit' for a forecast position.
    /// </summary>
    /// <returns>
    /// A query string which computes the sum of cost elements of type 'Benefit'.
    /// </returns>
    public static str calculateTotalBenefits()
    {
        return HcmPositionForecastBudgetAmountTotalsView::getSubqueryToCalculateSumByCostElementType(HcmBudgetCostElementType::Benefit);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalTaxes</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of all budget cost elements of type 'Tax' for a forecast position.
    /// </summary>
    /// <returns>
    /// A query string which computes the sum of cost elements of type 'Tax'.
    /// </returns>
    public static str calculateTotalTaxes()
    {
        return HcmPositionForecastBudgetAmountTotalsView::getSubqueryToCalculateSumByCostElementType(HcmBudgetCostElementType::Tax);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculateTotalOther</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the sum of all budget cost elements of type 'Other' for a forecast position.
    /// </summary>
    /// <returns>
    /// A query string which computes the sum of cost elements of type 'Other'.
    /// </returns>
    public static str calculateTotalOther()
    {
        return HcmPositionForecastBudgetAmountTotalsView::getSubqueryToCalculateSumByCostElementType(HcmBudgetCostElementType::Other);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSubqueryToCalculateSumByCostElementType</Name>
				<Source><![CDATA[
    private static str getSubqueryToCalculateSumByCostElementType(HcmBudgetCostElementType _hcmBudgetCostElementType = HcmBudgetCostElementType::Other)
    {
        str fieldLineBudgetAmountCur               = SysDictTable::fieldnameSQL(tableNum(HcmPositionForecastBudgetAcctLine), fieldNum(HcmPositionForecastBudgetAcctLine, BudgetAmountCur), FieldNameGenerationMode::FieldList);
        str fieldLineCostElementType               = SysDictTable::fieldnameSQL(tableNum(HcmBudgetPurposeType), fieldNum(HcmBudgetPurposeType, costElementType), FieldNameGenerationMode::FieldList);
        str fieldLineBudgetPurposeTypeDetail       = SysDictTable::fieldnameSQL(tableNum(HcmPositionForecastBudgetAcctLine), fieldNum(HcmPositionForecastBudgetAcctLine, BudgetPurposeTypeDetail), FieldNameGenerationMode::FieldList);
        str fieldLineBudgetPurposeType             = SysDictTable::fieldnameSQL(tableNum(HcmBudgetPurposeTypeDetail), fieldNum(HcmBudgetPurposeTypeDetail, BudgetPurposeType), FieldNameGenerationMode::FieldList);
        str fieldLinePositionForecastScenario      = SysDictTable::fieldnameSQL(tableNum(HcmPositionForecastBudgetAcctLine), fieldNum(HcmPositionForecastBudgetAcctLine, PositionForecastScenario), FieldNameGenerationMode::FieldList);
        str tableHcmPositionForecastBudgetAcctLine = new SysDictTable(tableNum(HcmPositionForecastBudgetAcctLine)).name(DbBackend::Sql);
        str tableHcmBudgetPurposeTypeDetail        = new SysDictTable(tableNum(HcmBudgetPurposeTypeDetail)).name(DbBackend::Sql);
        str tableHcmBudgetPurposeType              = new SysDictTable(tableNum(HcmBudgetPurposeType)).name(DbBackend::Sql);

        // Sum the amount from all lines for the given Position Forecast scenario.
        return 'select isnull(sum(' + fieldLineBudgetAmountCur + '), 0.0) from ' + tableHcmPositionForecastBudgetAcctLine + ' FPBCE'
            + ' join ' + tableHcmBudgetPurposeTypeDetail
            + ' ON ' + tableHcmBudgetPurposeTypeDetail +'.RecId =' + ' FPBCE.' + fieldLineBudgetPurposeTypeDetail
            + ' join ' + tableHcmBudgetPurposeType + ' CE '
            + ' ON ' + 'CE.RecId = ' + tableHcmBudgetPurposeTypeDetail + '.' + fieldLineBudgetPurposeType
            + ' where CE.' + fieldLineCostElementType + ' = ' + int2Str(enum2int(_hcmBudgetCostElementType))
            + ' AND FPBCE.' + fieldLinePositionForecastScenario + ' = ' + SysComputedColumn::returnField(tableStr(HcmPositionForecastBudgetAmountTotalsView), identifierStr(HcmPositionForecastBudgetAcctLine), fieldStr(HcmPositionForecastBudgetAcctLine, PositionForecastScenario));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Query>HcmPositionForecastBudgetAmountTotalsQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PositionForecastScenario</Name>
			<DataField>PositionForecastScenario</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalEarnings</Name>
			<Label>@Budget:BudgetPlan_PositionForecasting_HcmPositionForecast_EarningsCost</Label>
			<ExtendedDataType>HcmBudgetAmountCur</ExtendedDataType>
			<ViewMethod>calculateTotalEarnings</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalBenefits</Name>
			<Label>@Budget:BudgetPlan_PositionForecasting_HcmPositionForecast_BenefitsCost</Label>
			<ExtendedDataType>HcmBudgetAmountCur</ExtendedDataType>
			<ViewMethod>calculateTotalBenefits</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalTaxes</Name>
			<Label>@Budget:BudgetPlan_PositionForecasting_HcmPositionForecast_TaxesCost</Label>
			<ExtendedDataType>HcmBudgetAmountCur</ExtendedDataType>
			<ViewMethod>calculateTotalTaxes</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalOthers</Name>
			<Label>@Budget:BudgetPlan_PositionForecasting_HcmPositionForecast_OtherCost</Label>
			<ExtendedDataType>HcmBudgetAmountCur</ExtendedDataType>
			<ViewMethod>calculateTotalOther</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>