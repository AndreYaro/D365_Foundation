<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchTableValidPeriodVersion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchTableValidPeriodVersion extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>ValidToDateTimeDefinition</Name>
				<Source><![CDATA[
    private static str ValidToDateTimeDefinition()
    {
        str nextVersionAlias = 'NextVersion';
        str purchTableVersionName = new DictTable(tableNum(PurchTableVersion)).name(DbBackend::Sql);
        str versionDateTimeName = new DictField(tableNum(PurchTableVersion), fieldnum(PurchTableVersion, VersionDateTime)).name(DbBackend::Sql);
        str purchIdName = new DictField(tableNum(PurchTableVersion), fieldnum(PurchTableVersion, PurchId)).name(DbBackend::Sql);
        str purchIdDataAreaIdName = new DictField(tableNum(PurchTableVersion), fieldnum(PurchTableVersion, PurchIdDataAreaId)).name(DbBackend::Sql);
        str partitionName = new DictField(tableNum(PurchTableVersion), fieldnum(PurchTableVersion, Partition)).name(DbBackend::Sql);

        str minVersionDateTime = SysComputedColumn::min(strfmt('%1.%2', nextVersionAlias, versionDateTimeName));

        str validToMinVersionDateTime = SysComputedColumn::getDateAdd('-1', minVersionDateTime, SysComputedColumnDatePart::Second);
        str validToMinVersionOrDateMaxDateTime = strfmt('ISNULL(%1, %2)', validToMinVersionDateTime, SysComputedColumn::returnLiteral(DateTimeUtil::maxValue()));

        str selectStr = strfmt(
            '(SELECT %1 FROM %2 %3 WHERE %3.%4 = %5 AND %3.%6 = %7 AND %3.%8 = %9 AND %3.%10 > %11)',
            validToMinVersionOrDateMaxDateTime, purchTableVersionName, nextVersionAlias,
            partitionName,
            SysComputedColumn::comparisonField(viewstr(PurchTableValidPeriodVersion), tablestr(PurchTableVersion), fieldStr(PurchTableVersion, Partition)),
            purchIdDataAreaIdName,
            SysComputedColumn::comparisonField(viewstr(PurchTableValidPeriodVersion), tablestr(PurchTableVersion), fieldStr(PurchTableVersion, PurchIdDataAreaId)),
            purchIdName,
            SysComputedColumn::comparisonField(viewstr(PurchTableValidPeriodVersion), tablestr(PurchTableVersion), fieldStr(PurchTableVersion, PurchId)),
            versionDateTimeName,
            SysComputedColumn::comparisonField(viewstr(PurchTableValidPeriodVersion), tablestr(PurchTableVersion), fieldStr(PurchTableVersion, VersionDateTime)));

        /*
        SELECT ISNULL(dateadd(second, -1, MIN(PriorVersion.versiondatetime)), GETUTCDATE())
        FROM PURCHTABLEVERSION NextVersion
        WHERE NextVersion.PARTITION = CurrentVersion.PARTITION
        AND NextVersion.PURCHIDDATAAREAID = CurrentVersion.PURCHIDDATAAREAID
        AND NextVersion.PURCHID = CurrentVersion.PURCHID
        AND NextVersion.VERSIONDATETIME > CurrentVersion.VERSIONDATETIME)
        */

        return selectStr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:PurchTableValidPeriodVersionDeveloperDocumentation</DeveloperDocumentation>
	<Label>@SCM:PurchTableValidPeriodVersionLabel</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>PurchId</TitleField1>
	<TitleField2>ValidFromDateTime</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsArchived</Name>
			<DataField>IsArchived</DataField>
			<DataSource>PurchTableVersion</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchId</Name>
			<DataField>PurchId</DataField>
			<DataSource>PurchTableVersion</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchIdDataAreaId</Name>
			<DataField>PurchIdDataAreaId</DataField>
			<DataSource>PurchTableVersion</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ValidFromDateTime</Name>
			<DataField>VersionDateTime</DataField>
			<DataSource>PurchTableVersion</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>ValidToDateTime</Name>
			<ExtendedDataType>ValidToDateTime</ExtendedDataType>
			<ViewMethod>ValidToDateTimeDefinition</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PurchTableVersion</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PurchTableVersion</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>