<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseReleaseInventTransferLine</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWarehouseReleaseInventTransferLine extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isFullTransferQuantityReleased</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string that represents a NoYes field that can be queried to determine if the transfer line has quantity that is not yet released.
    /// </summary>
    /// <returns>
    /// A string that represents a NoYes field that can be queried to determine if the transfer line has quantity that is not yet released.
    /// </returns>
    public static str isFullTransferQuantityReleased()
    {
        //we only want the extra fields if warehouse cw is used but we need to ensure we do not sync the view if pdsCW is off, which should never be the case when whsCW is on.
        if (isConfigurationkeyEnabled(configurationKeyNum(PDSCatchWeight))
            && isConfigurationkeyEnabled(configurationKeyNum(WHSCatchWeight)))

        {
            return WHSWarehouseReleaseInventTransferLine::isFullTransferQuantityReleasedCatchWeightVersion();
        }
        
        str transferQtyField = SysComputedColumn::returnField(
            viewstr(WHSWarehouseReleaseInventTransferLine),
            tableStr(InventTransferLine),
            fieldStr(InventTransferLine, QtyTransfer));

        str releasedQtyField = SysComputedColumn::returnField(
            viewstr(WHSWarehouseReleaseInventTransferLine),
            tableStr(WHSInventTransferLine),
            fieldStr(WHSInventTransferLine, ReleasedQty));

        //if releasedQty < qtyTransfer then we have something left to release
        str expression =  SysComputedColumn::if(
                            SysComputedColumn::compareExpressions(releasedQtyField, '<', transferQtyField),
                            SysComputedColumn::returnLiteral(NoYes::No), //something to release
                            SysComputedColumn::returnLiteral(NoYes::Yes));

        return expression;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFullTransferQuantityReleasedCatchWeightVersion</Name>
				<Source><![CDATA[
    private static str isFullTransferQuantityReleasedCatchWeightVersion()
    {
        str transferQtyField = SysComputedColumn::returnField(
            viewstr(WHSWarehouseReleaseInventTransferLine),
            tableStr(InventTransferLine),
            fieldStr(InventTransferLine, QtyTransfer));

        str transferCWQtyField = SysComputedColumn::returnField(
            viewstr(WHSWarehouseReleaseInventTransferLine),
            tableStr(InventTransferLine),
            fieldStr(InventTransferLine, PDSCWQtyTransfer));

        str releasedQtyField = SysComputedColumn::returnField(
            viewstr(WHSWarehouseReleaseInventTransferLine),
            tableStr(WHSInventTransferLine),
            fieldStr(WHSInventTransferLine, ReleasedQty));

        str nonCWItemCritera = SysComputedColumn::and2(SysComputedColumn::equalExpression(transferCWQtyField, '0'),
                                                    SysComputedColumn::compareExpressions(releasedQtyField, '<', transferQtyField));

        str cwItemCritera = SysComputedColumn::and2(SysComputedColumn::notEqualExpression(transferCWQtyField, '0'),
                                                    SysComputedColumn::compareExpressions(releasedQtyField, '<', transferCWQtyField));

        str nonCWORCWExpression = SysComputedColumn::or2(nonCWItemCritera, cwItemCritera);

        //if releasedQty < handlingQty (qtyTransfer or cwQtyTransfer) then we have something left to release
        str expression =  SysComputedColumn::if(
                            nonCWORCWExpression,
                            SysComputedColumn::returnLiteral(NoYes::No), //something to release
                            SysComputedColumn::returnLiteral(NoYes::Yes));

        return expression;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSAndTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSWarehouseReleaseInventTransferLineViewDeveloperDocumentation</DeveloperDocumentation>
	<Label>@WAX:WHSWarehouseReleaseInventTransferLineView</Label>
	<TitleField1>TransferId</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsFullTransferQuantityReleased</Name>
			<Label>@WAX:WHSWarehouseReleaseFullTransferQuantityReleased_Label</Label>
			<ViewMethod>isFullTransferQuantityReleased</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransferId</Name>
			<DataField>TransferId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventTransId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OutboundShipmentPolicy</Name>
			<DataField>OutboundShipmentPolicy</DataField>
			<DataSource>WHSInventTransferLine</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTransferLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTransferLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSInventTransferLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSInventTransferLine</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>recId</Field>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<RelatedField>InventTransferLine</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>