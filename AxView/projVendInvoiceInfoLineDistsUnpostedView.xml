<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>projVendInvoiceInfoLineDistsUnpostedView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class projVendInvoiceInfoLineDistsUnpostedView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>computeCostPrice</Name>
				<Source><![CDATA[
    public static str computeCostPrice()
    {
        TableName   viewName = tableStr(projVendInvoiceInfoLineDistsUnpostedView);
        str         dsName   = identifierStr(Dis);
    
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(projVendInvoiceInfoLineDistsUnpostedView::computeQuantity(), SysComputedColumn::returnLiteral(0)),
            SysComputedColumn::divide(
                SysComputedColumn::returnField(viewName,dsName,fieldStr(projVendInvoiceInfoLineDistsUnpostedView, TransactionCurrencyAmount)),
                projVendInvoiceInfoLineDistsUnpostedView::computeQuantity()),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeCostAmount</Name>
				<Source><![CDATA[
    private static str computeCostAmount()
    {
        return SysComputedColumn::returnField(
            tableStr(projVendInvoiceInfoLineDistsUnpostedView),
            identifierStr(Dis),
            fieldStr(projVendInvoiceInfoLineDistsUnpostedView, TransactionCurrencyAmount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeQuantity</Name>
				<Source><![CDATA[
    public static str computeQuantity()
    {
        return SysComputedColumn::multiply(
                    SysComputedColumn::returnField(tableStr(projVendInvoiceInfoLineDistsUnpostedView), identifierStr(Ln), fieldStr(VendInvoiceInfoLine, ReceiveNow)),
                    SysComputedColumn::returnField(tableStr(projVendInvoiceInfoLineDistsUnpostedView), identifierStr(Dis), fieldStr(AccountingDistribution, AllocationFactor)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeSalesPrice</Name>
				<Source><![CDATA[
    public static str computeSalesPrice()
    {
        TableName   viewName = tableStr(projVendInvoiceInfoLineDistsUnpostedView);
        str         dsName   = identifierStr(PrDis);
    
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(projVendInvoiceInfoLineDistsUnpostedView::computeQuantity(), SysComputedColumn::returnLiteral(0)),
            SysComputedColumn::divide(
                SysComputedColumn::returnField(viewName,dsName,fieldStr(projVendInvoiceInfoLineDistsUnpostedView, TransactionCurrencyAmount)),
                projVendInvoiceInfoLineDistsUnpostedView::computeQuantity()),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionOrigin</Name>
				<Source><![CDATA[
    public static str getTransactionOrigin()
    {
        return SysComputedColumn::returnLiteral(ProjOrigin::PurchaseOrder);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransType</Name>
				<Source><![CDATA[
    public static str getTransType()
    {
        TableName   viewName        = tableStr(projVendInvoiceInfoLineDistsUnpostedView);
        str         dsName          = tableStr(ProjCategory);
        Map         expressionMap   = new Map(Types::String, Types::String);
    
        expressionMap.insert(SysComputedColumn::returnLiteral(ProjCategoryType::Cost), SysComputedColumn::returnLiteral(ProjTransType::Cost));
        expressionMap.insert(SysComputedColumn::returnLiteral(ProjCategoryType::Hour), SysComputedColumn::returnLiteral(ProjTransType::Hour));
        expressionMap.insert(SysComputedColumn::returnLiteral(ProjCategoryType::Item), SysComputedColumn::returnLiteral(ProjTransType::Item));
    
        return SysComputedColumn::switch(SysComputedColumn::returnField(viewName, dsName, fieldStr(ProjCategory, CategoryType)),
                                         expressionMap,
                                         SysComputedColumn::returnLiteral(ProjTransType::Item));
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnBlankString</Name>
				<Source><![CDATA[
    public static str returnBlankString()
    {
        return SysComputedColumn::returnLiteral('');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS326445</DeveloperDocumentation>
	<Label>@SYS326444</Label>
	<TitleField1>TransId</TitleField1>
	<TitleField2>TransType</TitleField2>
	<Query>ProjVendInvoiceInfoLineDistsUnposted</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SubcontractLine</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<FeatureClass>ProjProjectOperationsSubcontractLineIntegrationToggle</FeatureClass>
			<ExtendedDataType>ProjSubcontractLine</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransType</Name>
			<ViewMethod>getTransType</ViewMethod>
			<EnumType>ProjTransType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>TransId</Name>
			<ExtendedDataType>TransactionID</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransactionOrigin</Name>
			<ViewMethod>getTransactionOrigin</ViewMethod>
			<EnumType>ProjOrigin</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CostPrice</Name>
			<ExtendedDataType>CostPrice</ExtendedDataType>
			<ViewMethod>computeCostPrice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>Currency</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>SalesPrice</Name>
			<ExtendedDataType>SalesPrice</ExtendedDataType>
			<ViewMethod>computeSalesPrice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingDate</Name>
			<DataField>AccountingDate</DataField>
			<DataSource>Dis</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProjTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CategoryId</Name>
			<DataField>CategoryId</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>Ln</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionCurrencyAmount</Name>
			<DataField>TransactionCurrencyAmount</DataField>
			<DataSource>PrDis</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>smmActivities</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LinePropertyId</Name>
			<DataField>LinePropertyId</DataField>
			<DataSource>ProjLineProperty</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendInvoiceInfoLineRecId</Name>
			<Label>@SYS15217</Label>
			<DataField>RecId</DataField>
			<DataSource>Ln</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Quantity</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<ViewMethod>computeQuantity</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjDataAreaId</Name>
			<DataField>dataAreaId</DataField>
			<DataSource>ProjTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceName</Name>
			<DataField>Name</DataField>
			<DataSource>R</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CostAmount</Name>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<ViewMethod>computeCostAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjFundingSource</Name>
			<DataField>ProjFundingSource</DataField>
			<DataSource>PrDis</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>