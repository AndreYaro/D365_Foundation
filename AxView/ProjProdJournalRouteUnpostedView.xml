<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProdJournalRouteUnpostedView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProdJournalRouteUnpostedView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>computeAmount</Name>
				<Source><![CDATA[
    public static str computeAmount()
    {
        TableName   viewName = identifierStr(projProdJournalRouteUnpostedView);

        return SysComputedColumn::multiply(
                    ProjProdJournalRouteUnpostedView::getQty(),
                    SysComputedColumn::returnField(viewName, tableStr(ProdJournalRouteProj), fieldStr(ProdJournalRouteProj, ProjSalesPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeCostAmount</Name>
				<Source><![CDATA[
    private static str computeCostAmount()
    {
        TableName   viewName = identifierStr(projProdJournalRouteUnpostedView);

        return SysComputedColumn::multiply(
            ProjProdJournalRouteUnpostedView::getQty(),
            ProjProdJournalRouteUnpostedView::getCostPrice());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCategoryId</Name>
				<Source><![CDATA[
    public static str getCategoryId()
    {
        TableName   viewName        = identifierStr(projProdJournalRouteUnpostedView);

        if (!isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRouteProj), fieldNum(ProdJournalRouteProj,TransType)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,CategoryHoursId)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,CategoryQtyId)).configurationKeyId()))
        {
            return SysComputedColumn::returnLiteral('');
        }
        else
        {
            return SysComputedColumn::if(
                        /*If ProdJournalRouteProj.TransType == ProdRouteTransType::Time*/
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonField(viewName,identifierStr(ProdJournalRouteProj),fieldStr(ProdJournalRouteProj,TransType)),
                            SysComputedColumn::comparisonLiteral(ProdRouteTransType::Time)),
                        /*Return ProdJournalRoute.CategoryHoursId*/
                        SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,CategoryHoursId)),
                        /*Else, ProdJournalRouteProj.TransType == ProdRouteTransType::Qty, so return ProdJournalRoute.CategoryQtyId */
                        SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,CategoryQtyId)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostPrice</Name>
				<Source><![CDATA[
    public static str getCostPrice()
    {
        TableName   viewName        = identifierStr(projProdJournalRouteUnpostedView);

        if (!isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRouteProj), fieldNum(ProdJournalRouteProj,TransType)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,HourPrice)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,QtyPrice)).configurationKeyId()))
        {
            return SysComputedColumn::returnLiteral(0);
        }
        else
        {
            return SysComputedColumn::if(
                        /*If ProdJournalRouteProj.TransType == ProdRouteTransType::Time*/
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonField(viewName,identifierStr(ProdJournalRouteProj),fieldStr(ProdJournalRouteProj,TransType)),
                            SysComputedColumn::comparisonLiteral(ProdRouteTransType::Time)),
                        /*Return ProdJournalRoute.HourPrice*/
                        SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,HourPrice)),
                        /*Else, ProdJournalRouteProj.TransType == ProdRouteTransType::Qty, so return ProdJournalTrans.QtyPrice*/
                        SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,QtyPrice)));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQty</Name>
				<Source><![CDATA[
    public static str getQty()
    {
        TableName   viewName        = identifierStr(projProdJournalRouteUnpostedView);

        if (!isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRouteProj), fieldNum(ProdJournalRouteProj,TransType)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,Hours)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,QtyGood)).configurationKeyId()) ||
            !isConfigurationkeyEnabled(new SysDictField(tableNum(ProdJournalRoute), fieldNum(ProdJournalRoute,QtyError)).configurationKeyId()))
        {
            return SysComputedColumn::returnLiteral(0);
        }
        else
        {
            return SysComputedColumn::if(
                        /*If ProdJournalRouteProj.TransType == ProdRouteTransType::Time*/
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonField(viewName,identifierStr(ProdJournalRouteProj),fieldStr(ProdJournalRouteProj,TransType)),
                            SysComputedColumn::comparisonLiteral(ProdRouteTransType::Time)),
                        /*Return ProdJournalRoute.Hours*/
                        SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,Hours)),
                        /*Else, ProdJournalRouteProj.TransType == ProdRouteTransType::Qty, so return ProdJournalTrans.QtyGood + ProdJournalTrans.QtyError*/
                        SysComputedColumn::add(
                            SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,QtyGood)),
                            SysComputedColumn::returnField(viewName,identifierStr(ProdJournalRoute),fieldStr(ProdJournalRoute,QtyError))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnBlankString</Name>
				<Source><![CDATA[
    public static str returnBlankString()
    {
        return SysComputedColumn::returnLiteral('');
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTransactionOrigin</Name>
				<Source><![CDATA[
    public static str showTransactionOrigin()
    {
        return SysComputedColumn::returnLiteral(ProjOrigin::ProductionConsumed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTransactionType</Name>
				<Source><![CDATA[
    public static str showTransactionType()
    {
        return SysComputedColumn::returnLiteral(ProjTransType::Hour);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS326435</DeveloperDocumentation>
	<Label>@SYS326434</Label>
	<TitleField1>TransId</TitleField1>
	<TitleField2>TransType</TitleField2>
	<Query>ProjProdJournalRouteUnposted</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SubcontractLine</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<FeatureClass>ProjProjectOperationsSubcontractLineIntegrationToggle</FeatureClass>
			<ExtendedDataType>ProjSubcontractLine</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransId</Name>
			<DataField>ProjTransId</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>ProjTransDate</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesPrice</Name>
			<DataField>ProjSalesPrice</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyId</Name>
			<DataField>ProjSalesCurrencyId</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LinePropertyId</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Amount</Name>
			<ExtendedDataType>Amount</ExtendedDataType>
			<ViewMethod>computeAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CategoryId</Name>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
			<ViewMethod>getCategoryId</ViewMethod>
			<StringSize>30</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CostPrice</Name>
			<ExtendedDataType>CostPrice</ExtendedDataType>
			<ViewMethod>getCostPrice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Qty</Name>
			<ExtendedDataType>Qty</ExtendedDataType>
			<ViewMethod>getQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransactionOrigin</Name>
			<ViewMethod>showTransactionOrigin</ViewMethod>
			<EnumType>ProjOrigin</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransType</Name>
			<ViewMethod>showTransactionType</ViewMethod>
			<EnumType>ProjTransType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProdJournalRouteProj</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostCurrencyCode</Name>
			<DataField>AccountingCurrency</DataField>
			<DataSource>Ledger</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceName</Name>
			<DataField>Name</DataField>
			<DataSource>Resource</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CostAmount</Name>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<ViewMethod>computeCostAmount</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>