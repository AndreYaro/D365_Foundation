<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>GeneralJournalWithTaxView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class GeneralJournalWithTaxView extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getGeneralJournalAccountEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the GeneralJournalAccountEntry record.
    /// </summary>
    /// <returns>
    /// A <c>GeneralJournalAccountEntry</c> record.
    /// </returns>
    public GeneralJournalAccountEntry getGeneralJournalAccountEntry()
    {
        return GeneralJournalAccountEntry::find(this.GeneralJournalAccountEntryRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getGeneralJournalEntry</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the GeneralJournalEntry record.
    /// </summary>
    /// <returns>
    /// A <c>GeneralJournalEntry</c> record.
    /// </returns>
    public GeneralJournalEntry getGeneralJournalEntry()
    {
        return GeneralJournalEntry::find(this.GeneralJournalEntryRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsReversed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks if current record is reversed
    /// </summary>
    /// <returns>
    /// Yes if record is reversed, 0 otherwise
    /// </returns>
    public static str getIsReversed()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        str transactionReversalReversedField = SysComputedColumn::comparisonField(viewName, identifierStr(TransactionReversalTrans), fieldStr(TransactionReversalTrans, Reversed));

        return SysComputedColumn::if(
                SysComputedColumn::equalExpression(transactionReversalReversedField, SysComputedColumn::comparisonLiteral(NoYes::Yes)),
                SysComputedColumn::returnLiteral(enum2int(NoYes::Yes)),
                SysComputedColumn::returnLiteral(enum2int(NoYes::No))
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreditAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets credit amount for current record in accounting currency
    /// </summary>
    /// <returns>
    /// Credit amount in accounting currency
    /// </returns>
    public static str getCreditAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
            SysComputedColumn::returnLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, AccountingCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDebitAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets debit amount for current record in accounting currency
    /// </summary>
    /// <returns>
    /// Debit amount in accounting currency
    /// </returns>
    public static str getDebitAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
                SysComputedColumn::returnLiteral(NoYes::No)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, AccountingCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreditReportingAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets credit amount for current record in reporting currency
    /// </summary>
    /// <returns>
    /// Credit amount in reporting currency
    /// </returns>
    public static str getCreditReportingAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
            SysComputedColumn::returnLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, ReportingCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDebitReportingAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets debit amount for current record in reporting currency
    /// </summary>
    /// <returns>
    /// Debit amount in reporting currency
    /// </returns>
    public static str getDebitReportingAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
                SysComputedColumn::returnLiteral(NoYes::No)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, ReportingCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCreditTransactionAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets credit amount for current record in transaction currency
    /// </summary>
    /// <returns>
    /// Credit amount in transaction currency
    /// </returns>
    public static str getCreditTransactionAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
            SysComputedColumn::returnLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, TransactionCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDebitTransactionAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets debit amount for current record in transaction currency
    /// </summary>
    /// <returns>
    /// Debit amount in transaction currency
    /// </returns>
    public static str getDebitTransactionAmount()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, isCredit)),
                SysComputedColumn::returnLiteral(NoYes::No)),
            SysComputedColumn::returnField(viewName, identifierStr(GeneralJournalAccountEntry) , fieldStr(GeneralJournalAccountEntry, TransactionCurrencyAmount)),
            SysComputedColumn::returnLiteral(0.00)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxTransRecId</Name>
				<Source><![CDATA[
    /// <summary>
    ///   Retrieves Rec Id for the related <c>TaxTrans</c> record.
    /// </summary>
    /// <returns>
    ///   The Record Id, if <c>TaxTrans</c> record exists; otherwise, 0.
    /// </returns>
    public static str getTaxTransRecId()
    {
        const TableName viewName = viewstr(GeneralJournalWithTaxView);

        str taxTransRecIdField = SysComputedColumn::comparisonField(viewName, identifierStr(TaxTrans), fieldStr(TaxTrans, RecId));

        return SysComputedColumn::if(
                SysComputedColumn::isNullExpression(taxTransRecIdField),
                SysComputedColumn::returnLiteral(0),
                SysComputedColumn::returnField(viewName, identifierStr(TaxTrans) , fieldStr(TaxTrans, RecId))
            );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<Label>@SYS132690</Label>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>GeneralJournalEntryJournalNumber</TitleField1>
	<TitleField2>GeneralJournalEntryAccountingDate</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryAccountingCurrencyAmount</Name>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryAllocationLevel</Name>
			<DataField>AllocationLevel</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryCreatedTransactionId</Name>
			<DataField>CreatedTransactionId</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryGeneralJournalEntry</Name>
			<DataField>GeneralJournalEntry</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryHistoricalExchangeRateDate</Name>
			<DataField>HistoricalExchangeRateDate</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryIsCorrection</Name>
			<DataField>IsCorrection</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryIsCredit</Name>
			<DataField>IsCredit</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryLedgerAccount</Name>
			<DataField>LedgerAccount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryLedgerDimension</Name>
			<DataField>LedgerDimension</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryMainAccount</Name>
			<DataField>MainAccount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryPaymentReference</Name>
			<DataField>PaymentReference</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryPostingType</Name>
			<DataField>PostingType</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryProjTableDataAreaId</Name>
			<DataField>ProjTableDataAreaId</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryReasonRef</Name>
			<DataField>ReasonRef</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryQuantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryProjId_SA</Name>
			<DataField>ProjId_SA</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryReportingCurrencyAmount</Name>
			<DataField>ReportingCurrencyAmount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryText</Name>
			<DataField>Text</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryTransactionCurrencyAmount</Name>
			<DataField>TransactionCurrencyAmount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalAccountEntryTransactionCurrencyCode</Name>
			<DataField>TransactionCurrencyCode</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryAccountingDate</Name>
			<DataField>AccountingDate</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryAcknowledgementDate</Name>
			<DataField>AcknowledgementDate</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryBudgetSourceLedgerEntryPosted</Name>
			<DataField>BudgetSourceLedgerEntryPosted</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryCreatedBy</Name>
			<DataField>CreatedBy</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryCreatedDateTime</Name>
			<DataField>CreatedDateTime</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryCreatedTransactionId</Name>
			<DataField>CreatedTransactionId</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryDocumentDate</Name>
			<DataField>DocumentDate</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryDocumentNumber</Name>
			<DataField>DocumentNumber</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryFiscalCalendarPeriod</Name>
			<DataField>FiscalCalendarPeriod</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryFiscalCalendarYear</Name>
			<DataField>FiscalCalendarYear</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryJournalCategory</Name>
			<DataField>JournalCategory</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryJournalNumber</Name>
			<DataField>JournalNumber</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryLedger</Name>
			<DataField>Ledger</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryLedgerEntryJournal</Name>
			<DataField>LedgerEntryJournal</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryLedgerPostingJournal</Name>
			<DataField>LedgerPostingJournal</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryLedgerPostingJournalDataAreaId</Name>
			<DataField>LedgerPostingJournalDataAreaId</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryPostingLayer</Name>
			<DataField>PostingLayer</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntryRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntrySubledgerVoucher</Name>
			<DataField>SubledgerVoucher</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GeneralJournalEntrySubledgerVoucherDataAreaId</Name>
			<DataField>SubledgerVoucherDataAreaId</DataField>
			<DataSource>GeneralJournalEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FiscalCalendarPeriodType</Name>
			<DataField>Type</DataField>
			<DataSource>FiscalCalendarPeriod</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>GeneralJournalAccountEntryIsReversed</Name>
			<ExtendedDataType>Reversed</ExtendedDataType>
			<ViewMethod>getIsReversed</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxCode</Name>
			<DataField>TaxCode</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxAmount</Name>
			<DataField>TaxAmount</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxAmountRep</Name>
			<DataField>TaxAmountRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxPeriod</Name>
			<DataField>TaxPeriod</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxInCostPriceMST</Name>
			<DataField>TaxInCostPriceMST</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransTaxInCostPriceRep</Name>
			<DataField>TaxInCostPriceRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryCreditTransactionCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getCreditTransactionAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryCreditAccountingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getCreditAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryDebitAccountingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getDebitAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryDebitReportingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getDebitReportingAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryCreditReportingCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getCreditReportingAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GeneralJournalAccountEntryDebitTransactionCurrencyAmount</Name>
			<ExtendedDataType>AmountMSTDebCred</ExtendedDataType>
			<ViewMethod>getDebitTransactionAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>TaxTransRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>getTaxTransRecId</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>GeneralJournalAccountEntry</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>GeneralJournalAccountEntry</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>GeneralJournalEntry</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>GeneralJournalEntry</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FiscalCalendarPeriod</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>FiscalCalendarPeriod</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>GeneralJournalEntry</JoinDataSource>
										<JoinRelationName>FiscalCalendarPeriod</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>GeneralJournalAccountEntry</JoinDataSource>
								<JoinRelationName>GeneralJournalEntry</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TransactionReversalTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TransactionReversalTrans</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TableId</Field>
								<JoinDataSource>GeneralJournalAccountEntry</JoinDataSource>
								<RelatedField>RefTableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RecId</Field>
								<JoinDataSource>GeneralJournalAccountEntry</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTransGeneralJournalAccountEntry</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTransGeneralJournalAccountEntry</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>TaxTrans</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>TaxTrans</Field>
										<JoinDataSource>TaxTransGeneralJournalAccountEntry</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TaxTransRelationship</Name>
								<Field>TaxTransRelationship</Field>
								<Value>2</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>GeneralJournalAccountEntry</JoinDataSource>
								<RelatedField>GeneralJournalAccountEntry</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>