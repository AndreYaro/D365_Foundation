<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JmgProdJobListView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JmgProdJobListView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>compDateTime</Name>
				<Source><![CDATA[
    private static str compDateTime(str _dateFieldName, str _timeFieldName)
    {
        return SysComputedColumn::getDateAdd(
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgJobTable_1),
                _timeFieldName),
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgJobTable_1),
                _dateFieldName),
            SysComputedColumnDatePart::Second
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>compFromDateTime</Name>
				<Source><![CDATA[
    private static str compFromDateTime()
    {
        return JmgProdJobListView::compDateTime(fieldStr(JmgJobTable, FromDate), fieldStr(JmgJobTable, FromTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>compToDateTime</Name>
				<Source><![CDATA[
    private static str compToDateTime()
    {
        return JmgProdJobListView::compDateTime(fieldStr(JmgJobTable, ToDate), fieldStr(JmgJobTable, ToTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastRegDateTimeMinusOneDay</Name>
				<Source><![CDATA[
    private static str lastRegDateTimeMinusOneDay()
    {
        return SysComputedColumn::getDateAdd(
            '-1',
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, RegDateTime)),
            SysComputedColumnDatePart::Day);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isJobCompletedInLastOneDay</Name>
				<Source><![CDATA[
    private static str isJobCompletedInLastOneDay()
    {
        return 'CASE WHEN ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgJobTable_1),
                fieldStr(JmgJobTable, ReportedFinished)) +
            ' = 1 AND ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, RegDateTime)) +
            ' > ' +
            SysComputedColumn::getDateAdd(
                '-1',
                SysComputedColumn::getCurrentUtcDate(),
                SysComputedColumnDatePart::Day) +
            ' THEN 1 ELSE 0 END';
    }

]]></Source>
			</Method>
			<Method>
				<Name>jobStatus</Name>
				<Source><![CDATA[
    private static str jobStatus()
    {
        return 'CASE WHEN ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgJobTable_1),
                fieldStr(JmgJobTable, ReportedFinished)) +
            ' = 1 THEN 3 WHEN ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, SumOfGoodItems)) +
            ' IS NULL THEN 0 WHEN ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, MatchRecIdStartStop)) +
            ' = 0 THEN 2 WHEN ' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, MatchRecIdStartStop)) +
            ' > 0 THEN 1 END';
    }

]]></Source>
			</Method>
			<Method>
				<Name>remainingQuantity</Name>
				<Source><![CDATA[
    private static str remainingQuantity()
    {
        return
             SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgJobTable_1),
                fieldStr(JmgJobTable, CalcQty)) +
            ' - isnull(' +
            SysComputedColumn::returnField(
                tableStr(JmgProdJobListView),
                identifierStr(JmgTermRegLastDateView_1),
                fieldStr(JmgTermRegLastDateView, SumOfGoodItems)) +
            ',0)';
    }

]]></Source>
			</Method>
			<Method>
				<Name>jobStatusImage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns an image representing the status of the job
    /// </summary>
    /// <param name = "_jobListView">Job for which status images should be returned</param>
    /// <returns>Image representing the status of the job</returns>
    /// <remarks>
    /// If status = In Progress, returns an image of the first worker on the job;
    /// if the worker does not have a picture, then the person symbol is returned
    /// If status = Stopped or Not Available, the corresponding symbol is returned
    /// For other statuses, an empty image is returned
    /// </remarks>
    [SysClientCacheDataMethodAttribute(true)]
    public display container jobStatusImage(JmgProdJobListView _jobListView)
    {
        container imgContainer = connull();

        var status = _jobListView.JobStatus;

        switch (status)
        {
            case JmgJobStatus::Created, JmgJobStatus::Completed, JmgJobStatus::Waiting:
                break;
            case JmgJobStatus::InProgress:
                {
                    HcmWorker hcmWorker;
                    JmgTermReg jmgTermReg;

                    select firstonly PersonnelNumber, RecId, Person
                    from  hcmWorker
                    join JobActive, JobId, Worker from jmgTermReg
                    where jmgTermReg.JobActive == NoYes::Yes  &&
                            jmgTermReg.JobId     == _jobListView.JobId  &&
                            hcmWorker.RecId      == jmgTermReg.Worker;

                    var personImage = HcmPersonImage::findByPerson(hcmWorker.Person);

                    if (personImage.RecId)
                    {
                        imgContainer = personImage.Image;
                    }
                    else
                    {
                        imgContainer = ImageReference::constructForSymbol(ImageReferenceSymbol::Person).pack();
                    }
                    break;
                }
            case JmgJobStatus::Started:
                imgContainer = ImageReference::constructForSymbol(ImageReferenceSymbol::Pause).pack();
                break;
            case JmgJobStatus::NotAvailable:
                imgContainer = imageReference::constructForSymbol(ImageReferenceSymbol::NotAvailable).pack();
        }

        return imgContainer;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>JmgJob</ConfigurationKey>
	<DeveloperDocumentation>@SYS4050057</DeveloperDocumentation>
	<Label>@SYS319934</Label>
	<TitleField1>JobId</TitleField1>
	<TitleField2>OprNum</TitleField2>
	<Query>JmgProdJobListQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JobId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OprNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>JobId</Name>
			<DataField>JobId</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ModuleRefId</Name>
			<DataField>ModuleRefId</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OprNum</Name>
			<DataField>OprNum</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CalcQty</Name>
			<DataField>CalcQty</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Locked</Name>
			<DataField>Locked</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PriorityResource</Name>
			<DataField>PriorityResource</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReportedFinished</Name>
			<DataField>ReportedFinished</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WrkCtrId</Name>
			<DataField>WrkCtrId</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceGroup</Name>
			<DataField>WrkCtrId</DataField>
			<DataSource>WrkCtrResourceGroup_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>FromDateTime</Name>
			<ExtendedDataType>JmgDateTime</ExtendedDataType>
			<ViewMethod>CompFromDateTime</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>ToDateTime</Name>
			<ExtendedDataType>JmgDateTime</ExtendedDataType>
			<ViewMethod>CompToDateTime</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FromDate</Name>
			<DataField>FromDate</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FromTime</Name>
			<DataField>FromTime</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ToDate</Name>
			<DataField>ToDate</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ToTime</Name>
			<DataField>ToTime</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SumOfGoodItems</Name>
			<DataField>SumOfGoodItems</DataField>
			<DataSource>JmgTermRegLastDateView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>RemaningQuantity</Name>
			<ExtendedDataType>JmgQtyRemaining</ExtendedDataType>
			<ViewMethod>RemainingQuantity</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>JobStatus</Name>
			<ViewMethod>JobStatus</ViewMethod>
			<EnumType>JmgJobStatus</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductName</Name>
			<DataField>ProductName</DataField>
			<DataSource>EcoResProductTranslations_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Type</Name>
			<DataField>Type</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>RouteOprTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OprId</Name>
			<DataField>OprId</DataField>
			<DataSource>RouteOprTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProdUnitId</Name>
			<DataField>ProdUnitId</DataField>
			<DataSource>WrkCtrResourceGroup_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Unit</Name>
			<DataField>Description</DataField>
			<DataSource>UnitOfMeasureTranslation_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>inventDimId</Name>
			<DataField>inventDimId</DataField>
			<DataSource>ProdTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LastRegDateTime</Name>
			<DataField>RegDateTime</DataField>
			<DataSource>JmgTermRegLastDateView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>LastRegDateTimeMinusOneDay</Name>
			<ExtendedDataType>JmgDateTime</ExtendedDataType>
			<ViewMethod>lastRegDateTimeMinusOneDay</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Priority</Name>
			<DataField>Priority</DataField>
			<DataSource>JmgJobTable_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Product</Name>
			<FeatureClass>EcoResProductTranslationFallbackFeature</FeatureClass>
			<DataField>Product</DataField>
			<DataSource>EcoResProductTranslations_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsJobCompletedInLastOneDay</Name>
			<ViewMethod>isJobCompletedInLastOneDay</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>