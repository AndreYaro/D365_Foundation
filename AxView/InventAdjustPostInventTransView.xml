<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventAdjustPostInventTransView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventAdjustPostInventTransView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventTrans</Name>
				<Source><![CDATA[
    /// <summary>
    /// Converts the <c>InventAdjustPostInventTransView</c> record to an <c>InventTrans</c> record.
    /// </summary>
    /// <returns>
    /// An <c>InventTrans</c> record.
    /// </returns>
    public InventTrans inventTrans()
    {
        InventTrans inventTrans;

        inventTrans.RecId = this.RecId;
        inventTrans.ProjId = this.ProjId;
        inventTrans.ProjAdjustRefId = this.ProjAdjustRefId;
        inventTrans.Voucher = this.Voucher;
        inventTrans.DateFinancial = this.DateFinancial;
        inventTrans.Storno_RU = this.Storno_RU;
        inventTrans.StornoPhysical_RU = this.StornoPhysical_RU;
        inventTrans.StatusIssue = this.StatusIssue;
        inventTrans.StatusReceipt = this.StatusReceipt;
        inventTrans.InventTransOrigin = this.ProjInventTransOrigin;
        inventTrans.Qty = this.SignQty;

        return inventTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>projInventTransOrigin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the <c>ProjInventTransOrigin</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>ProjInventTransOrigin</c> column in the view.
    /// </returns>
    public static str projInventTransOrigin()
    {
        TableName       viewName = tableStr(InventAdjustPostInventTransView);

        if (!isConfigurationkeyEnabled(new SysDictField(tableNum(InventTrans), fieldNum(InventTrans, ProjId)).configurationKeyId()))
        {
            return SysComputedColumn::returnLiteral('');
        }

        return SysComputedColumn::adjustString(viewName, fieldStr(InventAdjustPostInventTransView, ProjInventTransOrigin),
            SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(viewName, identifierStr(InventTrans), fieldStr(InventTrans, ProjId)),
                    SysComputedColumn::comparisonLiteral('')),
                SysComputedColumn::returnLiteral(''),
                SysComputedColumn::returnField(viewName, identifierStr(InventTrans),fieldStr(InventTrans, InventTransOrigin))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>signQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the <c>SignQty</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>SignQty</c> column in the view.
    /// </returns>
    public static str signQty()
    {
        TableName       viewName = tableStr(InventAdjustPostInventTransView);

        return SysComputedColumn::sign(SysComputedColumn::returnField(viewName, identifierStr(InventTrans), fieldStr(InventTrans, Qty)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4000383</DeveloperDocumentation>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjAdjustRefId</Name>
			<DataField>ProjAdjustRefId</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DateFinancial</Name>
			<DataField>DateFinancial</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>ProjInventTransOrigin</Name>
			<ExtendedDataType>InventTransOriginId</ExtendedDataType>
			<ViewMethod>projInventTransOrigin</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Storno_RU</Name>
			<DataField>Storno_RU</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StornoPhysical_RU</Name>
			<DataField>StornoPhysical_RU</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StatusIssue</Name>
			<DataField>StatusIssue</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StatusReceipt</Name>
			<DataField>StatusReceipt</DataField>
			<DataSource>InventTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>SignQty</Name>
			<ExtendedDataType>Sign</ExtendedDataType>
			<ViewMethod>signQty</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTrans</Table>
				<DataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>