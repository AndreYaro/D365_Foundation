<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustInvoiceTransTotalTaxAmountView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustInvoiceTransTotalTaxAmountView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>taxAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str taxAmountComputedColumnDefinition()
    {
        str invoiceLineTotalTaxAmount = CustInvoiceTransTotalTaxAmountView::invoiceLineTotalTaxAmount();
        str relatedChargesTotalTaxAmount = CustInvoiceTransTotalTaxAmountView::relatedChargesTotalTaxAmount();

        if (!isConfigurationkeyEnabled(configurationKeyNum(Markup)) 
            && CustInvoiceDbSyncFixForViewsWithMarkupKeyDisabledFlight::instance().isEnabled())
        {
            return SysComputedColumn::negative(
                SysComputedColumn::if(SysComputedColumn::isNullExpression(invoiceLineTotalTaxAmount),
                    queryValue(0),
                    invoiceLineTotalTaxAmount
                )
            );
        }
        else
        {
            return SysComputedColumn::negative
                // Add up taxes from invoice line and from related charges
                (SysComputedColumn::add(
                    SysComputedColumn::if(SysComputedColumn::isNullExpression(invoiceLineTotalTaxAmount),
                        queryValue(0),
                        invoiceLineTotalTaxAmount
                    ),
                    SysComputedColumn::if(SysComputedColumn::isNullExpression(relatedChargesTotalTaxAmount),
                        queryValue(0),
                        relatedChargesTotalTaxAmount
                    )
                ));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceLineTotalTaxAmount</Name>
				<Source><![CDATA[
    private static str invoiceLineTotalTaxAmount()
    {
        return SysComputedColumn::returnField(
            tableStr(CustInvoiceTransTotalTaxAmountView),
            identifierStr(CustInvoiceTransLineTaxAmountView),
            fieldStr(CustInvoiceTransLineTaxAmountView, LineTaxAmount));
    }

]]></Source>
			</Method>
			<Method>
				<Name>relatedChargesTotalTaxAmount</Name>
				<Source><![CDATA[
    private static str relatedChargesTotalTaxAmount()
    {
        if (!isConfigurationkeyEnabled(configurationKeyNum(Markup)) 
            && CustInvoiceDbSyncFixForViewsWithMarkupKeyDisabledFlight::instance().isEnabled())
        {
            return SysComputedColumn::returnLiteral(0);
        }

        return SysComputedColumn::returnField(
            tableStr(CustInvoiceTransTotalTaxAmountView),
            identifierStr(CustInvoiceTransLineChargesTaxAmountView),
            fieldStr(CustInvoiceTransLineChargesTaxAmountView, LineChargesTaxAmount));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:CustInvoiceTransTotalTaxAmountViewDevDoc</DeveloperDocumentation>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustInvoiceTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>CustInvoiceTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TaxAmount</Name>
			<ExtendedDataType>TaxRegulationAmountCur</ExtendedDataType>
			<ViewMethod>taxAmountComputedColumnDefinition</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustInvoiceTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustInvoiceTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceTransLineChargesTaxAmountView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceTransLineChargesTaxAmountView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>CustInvoiceTrans</JoinDataSource>
								<RelatedField>CustInvoiceTransRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceTransLineTaxAmountView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceTransLineTaxAmountView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>CustInvoiceTrans</JoinDataSource>
								<RelatedField>CustInvoiceTransRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>