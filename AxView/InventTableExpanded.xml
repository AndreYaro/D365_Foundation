<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTableExpanded</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTableExpanded extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that returns the name of the product.
    /// </summary>
    /// <returns>
    /// The name of the product.
    /// </returns>
    public static str productName()
    {
        TableName   viewName                    = identifierStr(InventTableExpanded);
        str         translatedNameField         = SysComputedColumn::returnField(viewName, identifierStr(EcoResProductTranslations), fieldStr(EcoResProductTranslations, ProductName));
        str         productDisplayNumberField   = SysComputedColumn::returnField(viewName, identifierStr(EcoResProduct), fieldStr(EcoResProduct, DisplayProductNumber));

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(translatedNameField),
            productDisplayNumberField,
            translatedNameField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>productSubtype</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that retrieves the subtype of a product.
    /// </summary>
    /// <returns>
    /// The <c>EcoResProductSubtype</c> value of the subtype.
    /// </returns>
    /// <remarks>
    /// The implementation is the same as the <c>EcoResProduct::productSubType</c> display method.
    /// </remarks>
    public static str productSubtype()
    {
        TableName       viewName                         = tableStr(InventTableExpanded);
        Map             comparisonExpressionMap          = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(EcoResProduct), fieldStr(EcoResProduct, InstanceRelationType)),
                SysComputedColumn::comparisonLiteral(tableNum(EcoResProductMaster))),
            SysComputedColumn::returnLiteral(enum2int(EcoResProductSubtype::ProductMaster)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(EcoResProduct), fieldStr(EcoResProduct, InstanceRelationType)),
                SysComputedColumn::comparisonLiteral(tableNum(EcoResDistinctProduct))),
            SysComputedColumn::returnLiteral(enum2int(EcoResProductSubtype::Product)));

        return SysComputedColumn::switch(
            '',
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>productSubtypeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that returns the subtype name of a product.
    /// </summary>
    /// <returns>
    /// The name of a product subtype table.
    /// </returns>
    public static str productSubtypeName()
    {
        TableName       viewName                         = tableStr(InventTableExpanded);
        Map             comparisonExpressionMap          = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(EcoResProduct), fieldStr(EcoResProduct, InstanceRelationType)),
                SysComputedColumn::comparisonLiteral(tableNum(EcoResProductMaster))),
            SysComputedColumn::returnLiteral(tableStr(EcoResProductMaster)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, identifierStr(EcoResProduct), fieldStr(EcoResProduct, InstanceRelationType)),
                SysComputedColumn::comparisonLiteral(tableNum(EcoResDistinctProduct))),
            SysComputedColumn::returnLiteral(tableStr(EcoResDistinctProduct)));

        return SysComputedColumn::switch(
            '',
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS320869</DeveloperDocumentation>
	<Label>@SYS340557</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>ProductName</TitleField2>
	<Query>InventTableExpanded</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSubtype</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayProductNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ABCContributionMargin</Name>
			<DataField>ABCContributionMargin</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ABCRevenue</Name>
			<DataField>ABCRevenue</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ABCTieUp</Name>
			<DataField>ABCTieUp</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ABCValue</Name>
			<DataField>ABCValue</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemGroupName</Name>
			<DataField>Name</DataField>
			<DataSource>InventItemGroup</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemGroupId</Name>
			<DataField>ItemGroupId</DataField>
			<DataSource>InventItemGroup</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemType</Name>
			<DataField>ItemType</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DisplayProductNumber</Name>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductType</Name>
			<DataField>ProductType</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CountryRegionId</Name>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsAddressCountryRegTranslFiltered</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ShortName</Name>
			<DataField>ShortName</DataField>
			<DataSource>LogisticsAddressCountryRegTranslFiltered</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>NameAlias</Name>
			<DataField>NameAlias</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PmfProductType</Name>
			<DataField>PmfProductType</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DefaultOrderType</Name>
			<DataField>DefaultOrderType</DataField>
			<DataSource>InventItemSetupSupplyType</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ProductSubtype</Name>
			<ViewMethod>productSubtype</ViewMethod>
			<EnumType>EcoResProductSubtype</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemBuyerGroupId</Name>
			<DataField>ItemBuyerGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StandardConfigId</Name>
			<DataField>StandardConfigId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StandardInventColorId</Name>
			<DataField>StandardInventColorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StandardInventVersionId</Name>
			<DataField>StandardInventVersionId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StandardInventSizeId</Name>
			<DataField>StandardInventSizeId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Count</Name>
			<Label>@SYS62581</Label>
			<DataField>RecId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PrimaryVendorId</Name>
			<DataField>PrimaryVendorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ProductName</Name>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
			<ViewMethod>productName</ViewMethod>
			<StringSize>60</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LogisticsAddressCountryRegion</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ProductSubtypeName</Name>
			<Label>@SYS314940</Label>
			<ExtendedDataType>TableName</ExtendedDataType>
			<ViewMethod>productSubtypeName</ViewMethod>
			<StringSize>40</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StandardInventStyleId</Name>
			<DataField>StandardInventStyleId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecIdCategory</Name>
			<Label>@RET5714</Label>
			<DataField>RecIdCategory</DataField>
			<DataSource>EcoResProductCategoryExpanded_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetGroupId_RU</Name>
			<DataField>AssetGroupId_RU</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Product</Name>
			<DataField>RecId</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Item</Name>
			<DataField>RecId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes>
		<AxViewIndex>
			<Name>SortIdx</Name>
			<Fields>
				<AxViewIndexField>
					<DataField>ItemId</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
		<AxViewIndex>
			<Name>NameAliasIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxViewIndexField>
					<DataField>NameAlias</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>