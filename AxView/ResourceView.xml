<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResourceView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResourceView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static ResourceView find(ResourceRecId _resourceRecId)
    {
        ResourceView resource;

        select firstonly resource
            where resource.RecId == _resourceRecId;

        return resource;
    }

]]></Source>
			</Method>
			<Method>
				<Name>countResourcesHaveNameInLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of resources that have the same name in a given company.
    /// </summary>
    /// <param name = "_resourceName">Name that is being searched.</param>
    /// <param name = "_companyId">DataAreaId of the company where the resources must be searched.</param>
    /// <returns>Number of resources that have the same name.</returns>
    internal static int countResourcesHaveNameInLegalEntity(ResResourceName _resourceName, DataAreaId _companyId = curExt())
    {
        ResourceView resource;

        if (_resourceName)
        {
            select count(RecId) from resource
                where resource.Name == _resourceName
                    && resource.ResourceCompanyId == _companyId;
        }

        return int642int(resource.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByNameLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a ResourceView given its name.
    /// </summary>
    /// <param name = "_resourceName">Name of the ResourceView that is being searched.</param>
    /// <param name = "_companyId">DataAreaId of the company where the resource must be searched.</param>
    /// <returns>ResourceView record related to the name.</returns>
    internal static ResourceView findByNameLegalEntity(ResResourceName _resourceName, DataAreaId _companyId = curExt())
    {
        ResourceView resource;

        if (_resourceName)
        {
            select firstonly resource
                where resource.Name == _resourceName
                    && resource.ResourceCompanyId == _companyId;
        }

        return resource;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>View of resources base on WrkCtrTable</DeveloperDocumentation>
	<FormRef>ResResourcesListPageMenuItem</FormRef>
	<Label>@SYS108497</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>Type</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCompanyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCompanyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Name</Name>
			<Label>@SYS34979</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>ResourceId</Name>
			<Label>@PSA1749</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ResourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<Label>@Res:ResourceName</Label>
			<DataField>Name</DataField>
			<DataSource>ResResourceWorkCenterView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceCompanyId</Name>
			<Label>@Res:ResourceLegalEntity</Label>
			<DataField>ResourceCompanyId</DataField>
			<DataSource>ResResourceWorkCenterView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceId</Name>
			<Label>@Res:ResourceId</Label>
			<DataField>ResourceId</DataField>
			<DataSource>ResResourceWorkCenterView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Type</Name>
			<DataField>Type</DataField>
			<DataSource>ResResourceWorkCenterView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Worker</Name>
			<DataField>Worker</DataField>
			<DataSource>ResResourceWorkCenterView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<AllowCrossCompany>Yes</AllowCrossCompany>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ResResourceWorkCenterView</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ResResourceWorkCenterView</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>