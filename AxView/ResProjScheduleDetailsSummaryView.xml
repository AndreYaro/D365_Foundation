<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResProjScheduleDetailsSummaryView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResProjScheduleDetailsSummaryView extends common
{
    #timeconstants

    #localmacro.makeHoursField
        SysComputedColumn::divide(
                SysComputedColumn::returnField(tableStr(ResProjScheduleDetailsSummaryView),
                tableStr(ResAssignAnalysisProjSummaryView),
                fieldStr(ResAssignAnalysisProjSummaryView, %1))
                ,
                SysComputedColumn::returnLiteral(#SecondsPerHour)
        );
    #endmacro

    #localmacro.makeTotalHoursField
        SysComputedColumn::divide(
            SysComputedColumn::add(
                SysComputedColumn::returnField(tableStr(ResProjScheduleDetailsSummaryView),
                tableStr(ResAssignAnalysisProjSummaryView),
                fieldStr(ResAssignAnalysisProjSummaryView, %1))
                ,
                SysComputedColumn::returnField(tableStr(ResProjScheduleDetailsSummaryView),
                tableStr(ResAssignAnalysisProjSummaryView),
                fieldStr(ResAssignAnalysisProjSummaryView, %2))
            )
        ,
            SysComputedColumn::returnLiteral(#SecondsPerHour)
        );
    #endmacro

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBookedCapacityHardHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing hard booked capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getBookedCapacityHardHours()
    {
        return #makeHoursField(BookedCapacityHard)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBookedCapacitySoftHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing soft booked capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getBookedCapacitySoftHours()
    {
        return #makeHoursField(BookedCapacitySoft)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBookedCapacityTotalHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing total hard and soft booked capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getBookedCapacityTotalHours()
    {
        return #makeTotalHoursField(BookedCapacityHard,BookedCapacitySoft)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssignedCapacityHardHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing hard assigned capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getAssignedCapacityHardHours()
    {
        return #makeHoursField(AssignedCapacityHard)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssignedCapacitySoftHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing soft assigned capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getAssignedCapacitySoftHours()
    {
        return #makeHoursField(AssignedCapacitySoft)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssignedCapacityTotalHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing total hard and soft assigned capacity in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getAssignedCapacityTotalHours()
    {
        return #makeTotalHoursField(AssignedCapacityHard,AssignedCapacitySoft)
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRemainingEfforHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL string for computing remaining effort in hours.
    /// </summary>
    /// <returns>SQL string</returns>
    public static str getRemainingEfforHours()
    {
        str tableResProjScheduleDetailsSummaryView = tableStr(ResProjScheduleDetailsSummaryView);
        str tableResAssignAnalysisProjSummaryView  = tableStr(ResAssignAnalysisProjSummaryView);

        str fieldBookedCapacityHard = SysComputedColumn::returnField(tableResProjScheduleDetailsSummaryView,
                                        tableResAssignAnalysisProjSummaryView,
                                        fieldStr(ResAssignAnalysisProjSummaryView, BookedCapacityHard));

        str fieldAssignedCapacityHard = SysComputedColumn::returnField(tableResProjScheduleDetailsSummaryView,
                                        tableResAssignAnalysisProjSummaryView,
                                        fieldStr(ResAssignAnalysisProjSummaryView, AssignedCapacityHard));

        return SysComputedColumn::divide(
                    SysComputedColumn::subtract(
                        SysComputedColumn::if(SysComputedColumn::isNullExpression(fieldBookedCapacityHard), SysComputedColumn::returnLiteral(0), fieldBookedCapacityHard)
                        ,
                        SysComputedColumn::if(SysComputedColumn::isNullExpression(fieldAssignedCapacityHard), SysComputedColumn::returnLiteral(0), fieldAssignedCapacityHard)
                    )
                ,
                SysComputedColumn::returnLiteral(#SecondsPerHour));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<Query>ResProjScheduleDetailsSummaryQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>BookedCapacityHardHours</Name>
			<Label>@GLS360187</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getBookedCapacityHardHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>BookedCapacitySoftHours</Name>
			<Label>@GLS360176</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getBookedCapacitySoftHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AssignedCapacityHardHours</Name>
			<Label>@SYS4009989</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getAssignedCapacityHardHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AssignedCapacitySoftHours</Name>
			<Label>@SYS4009990</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getAssignedCapacitySoftHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ResAssignAnalysisProjSummaryView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>BookedCapacityTotalHours</Name>
			<Label>@SYS4009488</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getBookedCapacityTotalHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AssignedCapacityTotalHours</Name>
			<Label>@SYS4009489</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getAssignedCapacityTotalHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>RemainingEffortHours</Name>
			<Label>@GLS360185</Label>
			<ExtendedDataType>Hours</ExtendedDataType>
			<ViewMethod>getRemainingEfforHours</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>