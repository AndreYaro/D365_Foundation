<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPaymentBIOpenTransactions</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendPaymentBIOpenTransactions extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>cashDiscAmountMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the cash discount amount in accounting currency.
    /// </summary>
    /// <returns>
    /// The computed column for the cash discount amount in accounting currency.
    /// </returns>
    public static str cashDiscAmountMST()
    {
        // VendTransCashDisc.CashDiscAmount * (ExchangeRateEffectiveViewMST.CROSSRATE / 100)

        return SysComputedColumn::multiply(
                SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTransOpen), fieldStr(VendTransOpenCashDisc, CashDiscAmountCur)),
                    SysComputedColumn::divide(
                        SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), 'ExchangeRateEffectiveViewMST', 'CrossRate'),
                        '100'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentHoldDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the payment hold date, if any.
    /// </summary>
    /// <returns>
    /// The computed column for the payment hold date.
    /// </returns>
    public static str paymentHoldDate()
    {
        // If the payment hold date is empty, treat it as maxDate
        str paymentHoldDateIfBlocked = SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTable), fieldStr(VendTable, BlockedReleaseDate)),
                ' = ',
                SysComputedColumn::returnLiteral(dateNull())),
            SysComputedColumn::returnLiteral(dateMax()),
            SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTable), fieldStr(VendTable, BlockedReleaseDate)));

        // If VendTable.Blocked = 2 or 3 (all or payment) use the hold date from the vendor
        str paymentHoldDate = SysComputedColumn::if(
            SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTable), fieldStr(VendTable, Blocked)) +
            ' in (' + int2str(enum2int(CustVendorBlocked::All)) + ',' + int2str(enum2int(CustVendorBlocked::Payment)) + ')',
            paymentHoldDateIfBlocked,
            SysComputedColumn::returnLiteral(dateNull()));
        
        // Use the larger of the vendor hold date and the invoice hold date
        return SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTrans), fieldStr(VendTrans, InvoiceReleaseDate)),
                ' > ',
                paymentHoldDate),
            SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTrans), fieldStr(VendTrans, InvoiceReleaseDate)),
            paymentHoldDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentBlocked</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get vendor blocked for payment status.
    /// </summary>
    /// <returns>
    /// The computed column for the vendor blocked for payment status.
    /// </returns>
    public static str paymentBlocked()
    {
        // If VendTable.Blocked = 2 or 3 (all or payment) return 1 (Yes), otherwise return 0 (No)
        return SysComputedColumn::if(
            SysComputedColumn::returnField(tableStr(VendPaymentBIOpenTransactions), identifierStr(VendTable), fieldStr(VendTable, Blocked)) +
            ' in (' + int2str(enum2int(CustVendorBlocked::All)) + ',' + int2str(enum2int(CustVendorBlocked::Payment)) + ')',
            '1',
            '0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorHoldReason</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the vendor hold reason code.
    /// </summary>
    /// <returns>
    /// The computed column for the vendor hold reason code.
    /// </returns>
    public static str vendorHoldReason()
    {
        // Using direct SQL in order to do a select 'firstonly'
        return '(SELECT top 1 VOHH.REASONCODE FROM VENDONHOLDHISTORY VOHH WHERE T1.PARTITION = VOHH.PARTITION AND T1.DATAAREAID = VOHH.DATAAREAID AND ' +
            'T1.ACCOUNTNUM = VOHH.VENDACCOUNT ORDER BY VOHH.RECID DESC)';
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<IsObsolete>Yes</IsObsolete>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Invoice</Name>
			<DataField>Invoice</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DueDate</Name>
			<DataField>DueDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AmountCur</Name>
			<DataField>AmountCur</DataField>
			<DataSource>VendTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CashDiscAmountCur</Name>
			<DataField>CashDiscAmountCur</DataField>
			<DataSource>VendTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AmountMST</Name>
			<DataField>AmountMST</DataField>
			<DataSource>VendTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CashDiscAmountMST</Name>
			<ViewMethod>cashDiscAmountMST</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrency</Name>
			<DataField>AccountingCurrency</DataField>
			<DataSource>Ledger</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SystemCurrencyCode</Name>
			<DataField>SystemCurrencyCode</DataField>
			<DataSource>SystemParameters</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Company</Name>
			<DataField>DataAreaId</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CashDiscDate</Name>
			<DataField>CashDiscDate</DataField>
			<DataSource>VendTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>PaymentHoldDate</Name>
			<ViewMethod>paymentHoldDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransType</Name>
			<DataField>TransType</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReasonRefRecId</Name>
			<DataField>ReasonRefRecId</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Party</Name>
			<DataField>Party</DataField>
			<DataSource>VendTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CashDiscCalculationDate</Name>
			<DataField>CashDiscCalculationDate</DataField>
			<DataSource>VendTransOpen</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReleaseDateComment</Name>
			<DataField>ReleaseDateComment</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>VendorHold</Name>
			<ViewMethod>paymentBlocked</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>VendorHoldReason</Name>
			<ViewMethod>vendorHoldReason</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrentDate</Name>
			<DataField>GregorianDate</DataField>
			<DataSource>ExchangeRateEffectiveViewMST</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTransOpen</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTransOpenCashDisc</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AmountMST</Name>
								<Field>AmountMST</Field>
								<Value>&lt; 0</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CompanyInfo</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>Ledger</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>Ledger</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>CompanyInfo</JoinDataSource>
										<RelatedField>PrimaryForLegalEntity</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>DataArea</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SystemParameters</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SystemParameters</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ExchangeRateEffectiveViewMST</Name>
								<DynamicFields>Yes</DynamicFields>
								<FirstOnly>Yes</FirstOnly>
								<Table>ExchangeRateEffectiveViewToday</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>CurrencyCode</Name>
										<Field>CurrencyCode</Field>
										<JoinDataSource>VendTrans</JoinDataSource>
										<RelatedField>FromCurrencyCode</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>AccountingCurrency</Name>
										<Field>AccountingCurrency</Field>
										<JoinDataSource>Ledger</JoinDataSource>
										<RelatedField>ToCurrencyCode</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>DefaultExchangeRateType</Field>
										<JoinDataSource>Ledger</JoinDataSource>
										<RelatedField>ExchangeRateType</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Partition</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>Partition</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>DirPartyTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirPartyTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>DirPartyTable_FK</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>