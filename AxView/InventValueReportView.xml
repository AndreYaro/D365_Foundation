<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventValueReportView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventValueReportView extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>statementLineCategoryLevel1</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the StatementLineCategoryLevel1 column in the view.
    /// </summary>
    /// <param name = "_branchNum">
    /// The branch number.
    /// </param>
    /// <returns>
    /// A string to compute the StatementLineCategoryLevel1 column in the view.
    /// </returns>
    public static str statementLineCategoryLevel1(int _branchNum)
    {
        var inventTransType2CostStatementLineCategoryLevel1Mapping = CostInventTransType2CostStatementLineCategoryLevel1Mapping::construct();

        return SysComputedColumn::switch(fieldStr(InventValueTransUnionAll, ReferenceCategory),
                                         inventTransType2CostStatementLineCategoryLevel1Mapping.getComparisionExpressionMap(),
                                         SysComputedColumn::returnLiteral(inventTransType2CostStatementLineCategoryLevel1Mapping.getDefaultValue()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>statementLineCategoryLevel2</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the StatementLineCategoryLevel2 column in the view.
    /// </summary>
    /// <param name = "_branchNum">
    /// The branch number.
    /// </param>
    /// <returns>
    /// A string to compute the StatementLineCategoryLevel2 column in the view.
    /// </returns>
    public static str statementLineCategoryLevel2(int _branchNum)
    {
        var inventTransType2CostStatementLineCategoryLevel2Mapping = CostInventTransType2CostStatementLineCategoryLevel2Mapping::construct();
        var offsetPostingType2CostStatementLineCategoryLevel2Mapping = CostOffsetPostingType2CostStatementLineCategoryLevel2Mapping::construct();

        return SysComputedColumn::if(SysComputedColumn::equalExpression(fieldStr(InventValueTransUnionAll, IsPosted),
                                                                        SysComputedColumn::returnLiteral(NoYes::Yes)),
                                     SysComputedColumn::switch(fieldStr(InventValueTransUnionAll, PostingTypeOffset),
                                                               offsetPostingType2CostStatementLineCategoryLevel2Mapping.getComparisionExpressionMap(),
                                                               SysComputedColumn::returnLiteral(offsetPostingType2CostStatementLineCategoryLevel2Mapping.getDefaultValue())),
                                     SysComputedColumn::switch(fieldStr(InventValueTransUnionAll, ReferenceCategory),
                                                               inventTransType2CostStatementLineCategoryLevel2Mapping.getComparisionExpressionMap(),
                                                               SysComputedColumn::returnLiteral(inventTransType2CostStatementLineCategoryLevel2Mapping.getDefaultValue())));
    }

]]></Source>
			</Method>
			<Method>
				<Name>statementLineCategoryLevel3</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the StatementLineCategoryLevel3 column in the view.
    /// </summary>
    /// <param name = "_branchNum">
    /// The branch number.
    /// </param>
    /// <returns>
    /// A string to compute the StatementLineCategoryLevel3 column in the view.
    /// </returns>
    public static str statementLineCategoryLevel3(int _branchNum)
    {
        var inventTransType2CostStatementLineCategoryLevel3Mapping = CostInventTransType2CostStatementLineCategoryLevel3Mapping::construct();

        return SysComputedColumn::switch(fieldStr(InventValueTransUnionAll, ReferenceCategory),
                                         inventTransType2CostStatementLineCategoryLevel3Mapping.getComparisionExpressionMap(),
                                         SysComputedColumn::returnLiteral(inventTransType2CostStatementLineCategoryLevel3Mapping.getDefaultValue()));
    }

]]></Source>
			</Method>
			<Method>
				<Name>statementType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the StatementType column in the view.
    /// </summary>
    /// <param name = "_branchNum">
    /// The branch number.
    /// </param>
    /// <returns>
    /// A string to compute the StatementType column in the view.
    /// </returns>
    public static str statementType(int _branchNum)
    {
        return SysComputedColumn::returnLiteral(CostStatementType::Inventory);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@FPK270111</DeveloperDocumentation>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<Visible>No</Visible>
	<Query>InventValueReportView</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Amount</Name>
			<DataField>Amount</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventDimId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventTransId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventTransPostingType</Name>
			<DataField>InventTransPostingType</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsPosted</Name>
			<DataField>IsPosted</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerDimension</Name>
			<DataField>LedgerDimension</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerDimensionOffset</Name>
			<DataField>LedgerDimensionOffset</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PostingType</Name>
			<DataField>PostingType</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PostingTypeOffset</Name>
			<DataField>PostingTypeOffset</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Reference</Name>
			<DataField>Reference</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReferenceCategory</Name>
			<DataField>ReferenceCategory</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransBeginTime</Name>
			<DataField>TransBeginTime</DataField>
			<DataSource>InventValueFinancialBalance_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>StatementLineCategoryLevel2</Name>
			<ViewMethod>statementLineCategoryLevel2</ViewMethod>
			<EnumType>CostStatementLineCategoryLevel2</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>StatementType</Name>
			<ViewMethod>statementType</ViewMethod>
			<EnumType>CostStatementType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>StatementLineCategoryLevel3</Name>
			<ViewMethod>statementLineCategoryLevel3</ViewMethod>
			<EnumType>CostStatementLineCategoryLevel3</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>StatementLineCategoryLevel1</Name>
			<ViewMethod>statementLineCategoryLevel1</ViewMethod>
			<EnumType>CostStatementLineCategoryLevel1</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings>
		<AxTableMapping>
			<MappingTable>CostInventoryStatementMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Amount</MapField>
					<MapFieldTo>Amount</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>Qty</MapField>
					<MapFieldTo>Qty</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatementLineCategoryLevel1</MapField>
					<MapFieldTo>StatementLineCategoryLevel1</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatementLineCategoryLevel2</MapField>
					<MapFieldTo>StatementLineCategoryLevel2</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatementLineCategoryLevel3</MapField>
					<MapFieldTo>StatementLineCategoryLevel3</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>StatementType</MapField>
					<MapFieldTo>StatementType</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransDate</MapField>
					<MapFieldTo>TransDate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>