<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustHierarchyNodeActiveView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustHierarchyNodeActiveView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isActiveColumn</Name>
				<Source><![CDATA[
    private static str isActiveColumn()
    {
        // CASE
        //  WHEN ((T3.VERSION >= T1.VERSIONADDED) AND T1.VERSIONREMOVED = 0) THEN 1
        //  WHEN (T1.VERSIONADDED > T1.VERSIONREMOVED) THEN 1
        //  ELSE 0
        // END

        str custHiearchyVersion_VersionField = SysComputedColumn::comparisonField(
            tableStr(CustHierarchyNodeActiveView),
            identifierStr(CustHierarchyVersion),
            fieldStr(CustHierarchyVersion, Version));

        str custHiearchyNode_VersionAddedField = SysComputedColumn::comparisonField(
            tableStr(CustHierarchyNodeActiveView),
            identifierStr(CustHierarchyNode),
            fieldStr(CustHierarchyNode, VersionAdded));

        str custHiearchyNode_VersionRemovedField = SysComputedColumn::comparisonField(
            tableStr(CustHierarchyNodeActiveView),
            identifierStr(CustHierarchyNode),
            fieldStr(CustHierarchyNode, VersionRemoved));

        str createdAndNeverDeletedExpr = SysComputedColumn::and2(
                SysComputedColumn::compareExpressions(custHiearchyVersion_VersionField, '>=', custHiearchyNode_VersionAddedField),
                SysComputedColumn::compareExpressions(custHiearchyNode_VersionRemovedField, '=', SysComputedColumn::comparisonLiteral(0))
            );

        str createdAndDeleteButStillActiveExpr = SysComputedColumn::compareExpressions(custHiearchyNode_VersionAddedField, '>', custHiearchyNode_VersionRemovedField);

        return strFmt(@'
CASE
    WHEN %1 THEN 1
    WHEN %2 THEN 1
    ELSE 0
END
', createdAndNeverDeletedExpr, createdAndDeleteButStillActiveExpr);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>NodeRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>CustHierarchyNode</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsActive</Name>
			<ViewMethod>isActiveColumn</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustHierarchyNode</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustHierarchyNode</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustHierarchy</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustHierarchy</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustHierarchyVersion</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustHierarchyVersion</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>IsActive</Name>
										<Field>IsActive</Field>
										<Value>1</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>