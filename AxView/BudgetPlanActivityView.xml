<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetPlanActivityView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetPlanActivityView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getAccountingCurrencyRevenueAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SQL for view definition for <c>AccountingCurrencyRevenueAmount</c> field.
    /// </summary>
    /// <returns>
    /// String value of SQL for view definition for <c>AccountingCurrencyRevenueAmount</c> field.
    /// </returns>
    private static str getAccountingCurrencyRevenueAmountSql()
    {
        DictView budgetPlanActivityView = new DictView(tableNum(BudgetPlanActivityView));

        DataSourceName budgetPlanLineDataSourceName = budgetPlanActivityView.query().dataSourceTable(tablenum(BudgetPlanLine)).name();

        str budgetClass = budgetPlanActivityView.computedColumnString(
                            budgetPlanLineDataSourceName,
                            fieldStr(BudgetPlanLine, BudgetClass),
                            FieldNameGenerationMode::WhereClause);

        str accountingCurrencyAmount = budgetPlanActivityView.computedColumnString(
                                            budgetPlanLineDataSourceName,
                                            fieldStr(BudgetPlanLine, AccountingCurrencyAmount),
                                            FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(budgetClass, SysComputedColumn::returnLiteral(BudgetClass::Revenue)),
                    SysComputedColumn::negative(accountingCurrencyAmount),
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyExpenseAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SQL for view definition for <c>TransactionCurrencyExpenseAmount</c> field.
    /// </summary>
    /// <returns>
    /// String value of SQL for view definition for <c>TransactionCurrencyExpenseAmount</c> field.
    /// </returns>
    private static str getTransactionCurrencyExpenseAmountSql()
    {
        DictView budgetPlanActivityView = new DictView(tableNum(BudgetPlanActivityView));

        DataSourceName budgetPlanLineDataSourceName = budgetPlanActivityView.query().dataSourceTable(tableNum(BudgetPlanLine)).name();

        str budgetClass = budgetPlanActivityView.computedColumnString(
                                budgetPlanLineDataSourceName,
                                fieldStr(BudgetPlanLine, BudgetClass),
                                FieldNameGenerationMode::WhereClause);

        str transactionCurrencyAmount = budgetPlanActivityView.computedColumnString(
                                            budgetPlanLineDataSourceName,
                                            fieldStr(BudgetPlanLine, TransactionCurrencyAmount),
                                            FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(budgetClass, SysComputedColumn::returnLiteral(BudgetClass::Expense)),
                    transactionCurrencyAmount,
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyRevenueAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SQL for view definition for <c>TransactionCurrencyRevenueAmount</c> field.
    /// </summary>
    /// <returns>
    /// String value of SQL for view definition for <c>TransactionCurrencyRevenueAmount</c> field.
    /// </returns>
    private static str getTransactionCurrencyRevenueAmountSql()
    {
        DictView budgetPlanActivityView = new DictView(tableNum(BudgetPlanActivityView));

        DataSourceName budgetPlanLineDataSourceName = budgetPlanActivityView.query().dataSourceTable(tablenum(BudgetPlanLine)).name();

        str budgetClass = budgetPlanActivityView.computedColumnString(
                                budgetPlanLineDataSourceName,
                                fieldStr(BudgetPlanLine, BudgetClass),
                                FieldNameGenerationMode::WhereClause);

        str transactionCurrencyAmount = budgetPlanActivityView.computedColumnString(
                                            budgetPlanLineDataSourceName,
                                            fieldStr(BudgetPlanLine, TransactionCurrencyAmount),
                                            FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(budgetClass, SysComputedColumn::returnLiteral(BudgetClass::Revenue)),
                    SysComputedColumn::negative(transactionCurrencyAmount),
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingCurrencyExpenseAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SQL for view definition for <c>AccountingCurrencyExpenseAmount</c> field.
    /// </summary>
    /// <returns>
    /// String value of SQL for view definition for <c>AccountingCurrencyExpenseAmount</c> field.
    /// </returns>
    private static str getAccountingCurrencyExpenseAmountSql()
    {
        DictView budgetPlanActivityView = new DictView(tableNum(BudgetPlanActivityView));

        DataSourceName budgetPlanLineDataSourceName = budgetPlanActivityView.query().dataSourceTable(tablenum(BudgetPlanLine)).name();

        str budgetClass = budgetPlanActivityView.computedColumnString(
                                budgetPlanLineDataSourceName,
                                fieldStr(BudgetPlanLine, BudgetClass),
                                FieldNameGenerationMode::WhereClause);

        str accountingCurrencyAmount = budgetPlanActivityView.computedColumnString(
                                            budgetPlanLineDataSourceName,
                                            fieldStr(BudgetPlanLine, AccountingCurrencyAmount),
                                            FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(budgetClass, SysComputedColumn::returnLiteral(BudgetClass::Expense)),
                    accountingCurrencyAmount,
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAnalysisCurrencyAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the SQL for view definition for <c>AnalysisCurrencyAmount</c> field.
    /// </summary>
    /// <returns>
    /// String value of SQL for view definition for <c>AnalysisCurrencyAmount</c> field.
    /// </returns>
    private static str getAnalysisCurrencyAmountSql()
    {
        return LedgerBIHelpers::calculateAnalysisCurrencyAmount(
            tableStr(BudgetPlanActivityView),
            tableStr(BudgetPlanLine),
            fieldStr(BudgetPlanLine, TransactionCurrencyAmount),
            fieldStr(BudgetPlanLine, TransactionCurrencyCode));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrencyAmount</Name>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReportingCurrencyAmount</Name>
			<DataField>ReportingCurrencyAmount</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionCurrencyAmount</Name>
			<DataField>TransactionCurrencyAmount</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AnalysisCurrencyAmount</Name>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<ViewMethod>getAnalysisCurrencyAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TransactionCurrencyExpenseAmount</Name>
			<Label>@Budget:BudgetAmountForBudgetTypeExpense</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getTransactionCurrencyExpenseAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TransactionCurrencyRevenueAmount</Name>
			<Label>@Budget:BudgetAmountForBudgetTypeRevenue</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getTransactionCurrencyRevenueAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AccountingCurrencyExpenseAmount</Name>
			<Label>@Budget:BudgetAmountExpenseTypeInAccountingCurrency</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getAccountingCurrencyExpenseAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AccountingCurrencyRevenueAmount</Name>
			<Label>@Budget:BudgetAmountRevenueTypeInAccountingCurrency</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getAccountingCurrencyRevenueAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionCurrencyCode</Name>
			<DataField>TransactionCurrencyCode</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionUnitPrice</Name>
			<DataField>TransactionUnitPrice</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Quantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetId</Name>
			<DataField>AssetId</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetClass</Name>
			<DataField>BudgetClass</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentNumber</Name>
			<DataField>DocumentNumber</DataField>
			<DataSource>BudgetPlanHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EffectiveDate</Name>
			<DataField>EffectiveDate</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsNewRequest</Name>
			<DataField>IsNewRequest</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsRecurring</Name>
			<DataField>IsRecurring</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Ledger</Name>
			<DataField>Ledger</DataField>
			<DataSource>BudgetPlanningProcess</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerDimension</Name>
			<DataField>LedgerDimension</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerGregorianDateId</Name>
			<DataField>LedgerGregorianDateId</DataField>
			<DataSource>FiscalPeriodDateView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>MainAccountRecId</Name>
			<DataField>MainAccount</DataField>
			<DataSource>DimensionAttributeValueCombination</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PositionId</Name>
			<DataField>PositionId</DataField>
			<DataSource>HcmPosition</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Process</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanningProcess</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjectId</Name>
			<DataField>ProjectId</DataField>
			<DataSource>BudgetPlanLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProposedAsset</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanProposedAsset</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProposedProject</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanProposedProject</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Scenario</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanScenario</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ScenarioAttribute</Name>
			<DataField>ScenarioAttribute</DataField>
			<DataSource>BudgetPlanningBIParameterDetail</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetingOrganization</Name>
			<DataField>Name</DataField>
			<DataSource>OMInternalOrganization</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetPlanningStage</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanningStage</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetPlanPreparer</Name>
			<DataField>Name</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetPlanPriority</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanPriority</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ParentBudgetPlanHeader</Name>
			<DataField>Name</DataField>
			<DataSource>ParentBudgetPlanHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PlanningUserGroup</Name>
			<DataField>PlanningUserGroup</DataField>
			<DataSource>BudgetPlanHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetPlanRank</Name>
			<DataField>Rank</DataField>
			<DataSource>BudgetPlanHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetPlanWorkflowStatus</Name>
			<DataField>WorkflowStatus</DataField>
			<DataSource>BudgetPlanHeader</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetPlanLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetPlanLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetPlanHeader</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetPlanHeader</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetPlanningProcess</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetPlanningProcess</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>FiscalPeriodDateView</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>FiscalPeriodDateView</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>ProcessLedger</Name>
												<Field>Ledger</Field>
												<JoinDataSource>BudgetPlanningProcess</JoinDataSource>
												<RelatedField>LedgerRecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>LineEffectiveDate</Name>
												<Field>EffectiveDate</Field>
												<JoinDataSource>BudgetPlanLine</JoinDataSource>
												<RelatedField>GregorianDate</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>BudgetPlanningBIParameter</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>BudgetPlanningBIParameter</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>ProcessParameter</Name>
												<Field>RecId</Field>
												<JoinDataSource>BudgetPlanningProcess</JoinDataSource>
												<RelatedField>Process</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>Ledger</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>Ledger</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>SystemParameters</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>SystemParameters</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>ExchangeRateEffectiveView</Name>
														<DynamicFields>Yes</DynamicFields>
														<FirstOnly>Yes</FirstOnly>
														<Table>ExchangeRateEffectiveView</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges>
															<AxQuerySimpleDataSourceRange>
																<Name>ValidFrom</Name>
																<Field>ValidFrom</Field>
																<Status>Locked</Status>
																<Value>(BudgetPlanLine.EffectiveDate &gt;= ExchangeRateEffectiveView.ValidFrom)</Value>
															</AxQuerySimpleDataSourceRange>
															<AxQuerySimpleDataSourceRange>
																<Name>ValidTo</Name>
																<Field>ValidTo</Field>
																<Status>Locked</Status>
																<Value>(BudgetPlanLine.EffectiveDate &lt;= ExchangeRateEffectiveView.ValidTo)</Value>
															</AxQuerySimpleDataSourceRange>
														</Ranges>
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>CurrencyCode</Name>
																<Field>TransactionCurrencyCode</Field>
																<JoinDataSource>BudgetPlanLine</JoinDataSource>
																<RelatedField>FromCurrencyCode</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>AccountingCurrency</Name>
																<Field>SystemCurrencyCode</Field>
																<JoinDataSource>SystemParameters</JoinDataSource>
																<RelatedField>ToCurrencyCode</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>DefaultExchangeRateType</Name>
																<Field>BudgetExchangeRateType</Field>
																<JoinDataSource>Ledger</JoinDataSource>
																<RelatedField>ExchangeRateType</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>LedgerPartition</Name>
														<Field>Partition</Field>
														<JoinDataSource>Ledger</JoinDataSource>
														<RelatedField>Partition</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>ProcessLedger</Name>
												<Field>Ledger</Field>
												<JoinDataSource>BudgetPlanningProcess</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HeaderProcess</Name>
										<Field>BudgetPlanningProcess</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>OMInternalOrganization</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>OMInternalOrganization</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BudgetingOrganization</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>Recid</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetPlanningStage</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetPlanningStage</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BudgetPlanningStage</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>Recid</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmWorker</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>HcmWorker</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>DirPartyTable</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>DirPartyTable</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>Person</Field>
												<JoinDataSource>HcmWorker</JoinDataSource>
												<RelatedField>Recid</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BudgetPlanPreparer</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>Recid</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetPlanPriority</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetPlanPriority</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BudgetPlanPriority</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>Recid</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ParentBudgetPlanHeader</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetPlanHeader</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ParentBudgetPlanHeader</Field>
										<JoinDataSource>BudgetPlanHeader</JoinDataSource>
										<RelatedField>Recid</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HeaderLine</Name>
								<Field>BudgetPlanHeader</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionAttributeValueCombination</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>DimensionAttributeValueCombination</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetPlanScenario</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetPlanScenario</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetPlanningBIParameterDetail</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetPlanningBIParameterDetail</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>BudgetPlanScenario</JoinDataSource>
										<RelatedField>Scenario</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>RecId</Field>
										<JoinDataSource>BudgetPlanningBIParameter</JoinDataSource>
										<RelatedField>BIParameter</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetPlanScenario</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetPlanProposedAsset</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetPlanProposedAsset</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProposedAsset</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetPlanProposedProject</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetPlanProposedProject</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProposedProject</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmPosition</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HcmPosition</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Position</Field>
								<JoinDataSource>BudgetPlanLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>