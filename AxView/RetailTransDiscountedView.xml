<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransDiscountedView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class contains two methods that calculate offer id and discount name on the fly
/// to handle the case when manual discount does not have offer id nor discount name.
/// If periodic discount exist, we use periodic offer id and discount name.
/// </summary>
public class RetailTransDiscountedView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>GenerateDiscountName</Name>
				<Source><![CDATA[
    ///<summary>
    /// Generate discount name.
    ///</summary>
    private static str GenerateDiscountName()
    {
        str discountName = SysComputedColumn::returnField(
            tableStr(RetailTransDiscountedView),
            identifierStr(RetailPeriodicDiscount),
            fieldStr(RetailPeriodicDiscount, Name)
        );

        // composing manual discount type
        DictEnum manualDiscountTypeEnum = new DictEnum(enumNum(RetailManualDiscountType));
        Map valuesMap = new Map(Types::String, Types::String);

        int enumIdx;
        for (enumIdx = 1; enumIdx <= manualDiscountTypeEnum.values(); enumIdx++)
        {
            RetailManualDiscountType cur = manualDiscountTypeEnum.index2Value(enumIdx);
            str key = int2Str(cur);
            str value;
            if (cur == RetailManualDiscountType::None)
            {
                value = discountName;
            }
            else
            {
                str manualDiscountName = manualDiscountTypeEnum.index2Label(enumIdx);
                value = SysComputedColumn::returnLiteral(manualDiscountName);
            }

            // enum value maps to enum label
            valuesMap.insert(key, value);
        }

        // default value -- this should not happen in any case
        str defaultDiscountName = SysComputedColumn::returnLiteral('default discount name');

        str manualDiscountTypeId = SysComputedColumn::returnField(
            tableStr(RetailTransDiscountedView),
            identifierStr(RetailTransactionDiscountTrans),
            fieldStr(RetailTransactionDiscountTrans, ManualDiscountType)
        );

        str calculatedDiscountName = SysComputedColumn::switch(manualDiscountTypeId, valuesMap, defaultDiscountName);

        return calculatedDiscountName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GenerateOfferId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generate discount offer id.
    /// </summary>
    private static str GenerateOfferId()
    {
        // periodic offer id
        str periodicOfferId = SysComputedColumn::returnField(
            tableStr(RetailTransDiscountedView),
            identifierStr(RetailTransactionDiscountTrans),
            fieldStr(RetailTransactionDiscountTrans, PeriodicDiscountOfferId)
        );

        // composing manual discount type
        DictEnum manualDiscountTypeEnum = new DictEnum(enumNum(RetailManualDiscountType));
        Map valuesMap = new Map(Types::String, Types::String);

        int enumIdx;
        for (enumIdx = 1; enumIdx <= manualDiscountTypeEnum.values(); enumIdx++)
        {
            RetailManualDiscountType cur = manualDiscountTypeEnum.index2Value(enumIdx);
            str key = int2Str(cur);
            str value;
            if (cur == RetailManualDiscountType::None)
            {
                value = periodicOfferId;
            }
            else
            {
                value = SysComputedColumn::returnLiteral(key);
            }

            // enum value maps to enum label
            valuesMap.insert(key, value);
        }

        // default value -- this should not happen in any case
        str defaultOfferId = SysComputedColumn::returnLiteral('default offer id');

        str manualDiscountTypeId = SysComputedColumn::returnField(
            tableStr(RetailTransDiscountedView),
            identifierStr(RetailTransactionDiscountTrans),
            fieldStr(RetailTransactionDiscountTrans, ManualDiscountType)
        );

        str calculatedOfferId = SysComputedColumn::switch(manualDiscountTypeId, valuesMap, defaultOfferId);

        return calculatedOfferId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Amount</Name>
			<DataField>Amount</DataField>
			<DataSource>RetailTransactionDiscountTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Channel</Name>
			<DataField>Channel</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CompanyId</Name>
			<DataField>CompanyId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemId</Name>
			<DataField>itemId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LineQty</Name>
			<DataField>LineQty</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>staffId</Name>
			<DataField>staffId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>terminalId</Name>
			<DataField>terminalId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionId</Name>
			<DataField>transactionId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>YearOffset</Name>
			<DataField>YearOffset</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>MonthGregorian</Name>
			<DataField>MonthGregorian</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>PeriodicDiscountOfferId</Name>
			<ExtendedDataType>RetailOfferIdEx3</ExtendedDataType>
			<ViewMethod>GenerateOfferId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>DiscountName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<ViewMethod>GenerateDiscountName</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DiscountRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>RetailPeriodicDiscount</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transDate</Name>
			<DataField>transDate</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemRecId</Name>
			<DataField>ItemRecId</DataField>
			<DataSource>RetailTransDetailsView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailTransactionDiscountTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailTransactionDiscountTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailTransDetailsView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailTransDetailsView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SaleLineNum</Field>
								<JoinDataSource>RetailTransactionDiscountTrans</JoinDataSource>
								<RelatedField>lineNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>TransactionId</Field>
								<JoinDataSource>RetailTransactionDiscountTrans</JoinDataSource>
								<RelatedField>transactionId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>StoreId</Field>
								<JoinDataSource>RetailTransactionDiscountTrans</JoinDataSource>
								<RelatedField>store</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation4</Name>
								<Field>TerminalId</Field>
								<JoinDataSource>RetailTransactionDiscountTrans</JoinDataSource>
								<RelatedField>terminalId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailPeriodicDiscount</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailPeriodicDiscount</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PeriodicDiscountOfferId</Field>
								<JoinDataSource>RetailTransactionDiscountTrans</JoinDataSource>
								<RelatedField>OfferId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>