<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlBudgetTransactionCategoryView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlBudgetTransactionCategoryView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getBudgetControlCategorySql</Name>
				<Source><![CDATA[
    private static str getBudgetControlCategorySql()
    {
        const int DefaultBudgetControlCategory = 0;
        const int ZeroTransactionCurrencyAmount = 0;
        TableName viewName = viewstr(BudgetControlBudgetTransactionCategoryView);
        TableName budgetTransactionLine = tableStr(BudgetTransactionLine);

        Map comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::Amendment), SysComputedColumn::returnLiteral(BudgetControlCategory::Amendment));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::CarryForwardBudget), SysComputedColumn::returnLiteral(BudgetControlCategory::CarryForwardBudget));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::Apportionment), SysComputedColumn::returnLiteral(BudgetControlCategory::Apportionment));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::PreliminaryBudget), SysComputedColumn::returnLiteral(BudgetControlCategory::PreliminaryBudget));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::OriginalBudget), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::Project), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::FixedAsset), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::FixedAsset_RU), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::SalesForecast), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::PurchForecast), SysComputedColumn::returnLiteral(BudgetControlCategory::Original));
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::PreEncumbrance), SysComputedColumn::returnLiteral(BudgetControlCategory::PreEncumbrance));

        str transactionCurrencyAmountField = SysComputedColumn::comparisonField(viewName, budgetTransactionLine, fieldStr(BudgetTransactionLine, TransactionCurrencyAmount));
        str transactionCurrencyAmountComparison = SysComputedColumn::compareExpressions(transactionCurrencyAmountField, '>=', SysComputedColumn::returnLiteral(ZeroTransactionCurrencyAmount));

        var encumbranceTransactionCurrencyAmount = SysComputedColumn::if(
            transactionCurrencyAmountComparison,
            SysComputedColumn::returnLiteral(BudgetControlCategory::Encumbrance),
            SysComputedColumn::returnLiteral(BudgetControlCategory::EncumbranceReduction)
        );

        var transferTransactionCurrencyAmount = SysComputedColumn::if(
            transactionCurrencyAmountComparison,
            SysComputedColumn::returnLiteral(BudgetControlCategory::TransferIn),
            SysComputedColumn::returnLiteral(BudgetControlCategory::TransferOut)
        );

        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::Encumbrance), encumbranceTransactionCurrencyAmount);
        comparisonExpressionMap.insert(SysComputedColumn::comparisonLiteral(BudgetTransactionType::Transfer), transferTransactionCurrencyAmount);

        str transactionTypeField = SysComputedColumn::comparisonField(viewName, tableStr(BudgetTransactionHeader), fieldStr(BudgetTransactionHeader, BudgetTransactionType));

        return SysComputedColumn::switch(transactionTypeField, comparisonExpressionMap, SysComputedColumn::returnLiteral(DefaultBudgetControlCategory));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsDraftSql</Name>
				<Source><![CDATA[
    private static str getIsDraftSql()
    {
        TableName viewName = viewstr(BudgetControlBudgetTransactionCategoryView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(BudgetTransactionHeader), fieldStr(BudgetTransactionHeader, TransactionStatus)),
                SysComputedColumn::comparisonLiteral(BudgetTransactionStatus::Draft)
            ),
            SysComputedColumn::returnLiteral(NoYes::Yes),
            SysComputedColumn::returnLiteral(NoYes::No)
        );
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBudgetSourceTrackingStatusSql</Name>
				<Source><![CDATA[
    private static str getBudgetSourceTrackingStatusSql()
    {
        TableName viewName = viewstr(BudgetControlBudgetTransactionCategoryView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(BudgetTransactionHeader), fieldStr(BudgetTransactionHeader, TransactionStatus)),
                SysComputedColumn::comparisonLiteral(BudgetTransactionStatus::Draft)
            ),
            SysComputedColumn::returnLiteral(BudgetSourceTrackingStatus::Draft),
            SysComputedColumn::returnLiteral(BudgetSourceTrackingStatus::Confirmed)
        );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@Budget:BudgetControlBudgetTransactionCategoryViewDocumentation</DeveloperDocumentation>
	<Label>@Budget:BudgetControlBudgetTransactionCategoryView</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visibility>Internal</Visibility>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionNumber</Name>
			<DataField>TransactionNumber</DataField>
			<DataSource>BudgetTransactionHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetTransactionHeader</Name>
			<DataField>RecId</DataField>
			<DataSource>BudgetTransactionHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionStatus</Name>
			<DataField>TransactionStatus</DataField>
			<DataSource>BudgetTransactionHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentDate</Name>
			<DataField>Date</DataField>
			<DataSource>BudgetTransactionHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PrimaryLedger</Name>
			<DataField>PrimaryLedger</DataField>
			<DataSource>BudgetTransactionHeader</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetTransactionLine</Name>
			<DataField>RecId</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionDate</Name>
			<DataField>Date</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>BudgetControlCategory</Name>
			<ViewMethod>getBudgetControlCategorySql</ViewMethod>
			<EnumType>BudgetControlCategory</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrencyAmount</Name>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>BudgetSourceTrackingStatus</Name>
			<ViewMethod>getBudgetSourceTrackingStatusSql</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsDraft</Name>
			<ViewMethod>getIsDraftSql</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetTransactionLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetTransactionLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetTransactionHeader</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetTransactionHeader</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>BudgetType</Name>
						<Field>BudgetType</Field>
						<Value>Expense</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>