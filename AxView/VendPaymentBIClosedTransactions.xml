<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPaymentBIClosedTransactions</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendPaymentBIClosedTransactions extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amountPaidLateCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the amount paid in transaction currency after the due date.
    /// </summary>
    /// <returns>
    /// The computed column for the amount paid late in transaction currency.
    /// </returns>
    public static str amountPaidLateCur()
    {
        return SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, LastSettleDate)),
                ' > ',
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, DueDate))),
            SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, AmountCur))),
            '0.0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountPaidLateMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the amount paid in accounting currency after the due date.
    /// </summary>
    /// <returns>
    /// The computed column for the amount paid late in accounting currency.
    /// </returns>
    public static str amountPaidLateMST()
    {
        return SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, LastSettleDate)),
                ' > ',
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, DueDate))),
            SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, AmountMST))),
            '0.0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountPaidOnTimeCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the amount paid in transaction currency before or on the due date.
    /// </summary>
    /// <returns>
    /// The computed column for the amount paid on time in transaction currency.
    /// </returns>
    public static str amountPaidOnTimeCur()
    {
        return SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, LastSettleDate)),
                ' <= ',
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, DueDate))),
            SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, AmountCur))),
            '0.0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountPaidOnTimeMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determine the amount paid in accounting currency before or on the due date.
    /// </summary>
    /// <returns>
    /// The computed column for the amount paid on time in accounting currency.
    /// </returns>
    public static str amountPaidOnTimeMST()
    {
        return SysComputedColumn::if(
            SysComputedColumn::compareExpressions(
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, LastSettleDate)),
                ' <= ',
                SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, DueDate))),
            SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendTrans), fieldStr(VendTrans, AmountMST))),
            '0.0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountLostCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the discount amount not taken in transaction currency.
    /// </summary>
    /// <returns>
    /// The computed column for the discount amount lost in transaction currency.
    /// </returns>
    /// <remarks>
    /// VendInvoiceJour.CashDisc is a positive amount.  VendSettlement.UtilizedCashDisc is a negative amount.
    /// </remarks>
    public static str discountLostCur()
    {
        return SysComputedColumn::add(
            SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendInvoiceJour), fieldStr(VendInvoiceJour, CashDisc)),
            SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendSettlement), fieldStr(VendSettlementSum, UtilizedCashDisc)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountLostMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the discount amount not taken in accounting currency.
    /// </summary>
    /// <returns>
    /// The computed column for the discount amount lost in accounting currency.
    /// </returns>
    public static str discountLostMST()
    {
        // (VendInvoiceJour.CashDisc + VendSettlement.UtilizedCashDisc) * (ExchangeRateEffectiveViewMST.CROSSRATE / 100)

        return SysComputedColumn::multiply(
                SysComputedColumn::add(
            SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendInvoiceJour), fieldStr(VendInvoiceJour, CashDisc)),
            SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendSettlement), fieldStr(VendSettlementSum, UtilizedCashDisc))),
                SysComputedColumn::divide(
                    SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(ExchangeRateEffectiveViewMST), fieldStr(ExchangeRateEffectiveViewToday, CrossRate)),
                    '100'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountTakenCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the discount amount taken in transaction currency.
    /// </summary>
    /// <returns>
    /// The computed column for the discount amount taken in transaction currency.
    /// </returns>
    public static str discountTakenCur()
    {
        // -VendSettlement.UtilizedCashDisc

        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendSettlement), fieldStr(VendSettlementSum, UtilizedCashDisc)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>discountTakenMST</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the discount amount taken in accounting currency.
    /// </summary>
    /// <returns>
    /// The computed column for the discount amount taken in accounting currency.
    /// </returns>
    public static str discountTakenMST()
    {
        // -VendSettlement.UtilizedCashDisc * (ExchangeRateEffectiveViewMST.CROSSRATE / 100)

        return SysComputedColumn::multiply(
                SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(VendSettlement), fieldStr(VendSettlementSum, UtilizedCashDisc))),
                    SysComputedColumn::divide(
                        SysComputedColumn::returnField(tableStr(VendPaymentBIClosedTransactions), identifierStr(ExchangeRateEffectiveViewMST), fieldStr(ExchangeRateEffectiveViewToday, CrossRate)),
                        '100'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>priorYear</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the date that is one year prior to today.
    /// </summary>
    /// <returns>Date one year prior to today.</returns>
    public static str priorYear()
    {
        return SysComputedColumn::getDateAdd(
            '-1',
            SysComputedColumn::returnField(
                tableStr(VendPaymentBIClosedTransactions),
                identifierStr(ExchangeRateEffectiveViewMST),
                fieldStr(ExchangeRateEffectiveViewToday, GregorianDate)),
            SysComputedColumnDatePart::Year);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<IsObsolete>Yes</IsObsolete>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Invoice</Name>
			<DataField>Invoice</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentDate</Name>
			<DataField>DocumentDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DiscountLostCur</Name>
			<ViewMethod>discountLostCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DiscountTakenCur</Name>
			<ViewMethod>discountTakenCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AmountPaidOnTimeCur</Name>
			<ViewMethod>amountPaidOnTimeCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AmountPaidLateCur</Name>
			<ViewMethod>amountPaidLateCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DiscountLostMST</Name>
			<ViewMethod>discountLostMST</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DiscountTakenMST</Name>
			<ViewMethod>discountTakenMST</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AmountPaidOnTimeMST</Name>
			<ViewMethod>amountPaidOnTimeMST</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AmountPaidLateMST</Name>
			<ViewMethod>amountPaidLateMST</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrency</Name>
			<DataField>AccountingCurrency</DataField>
			<DataSource>Ledger</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SystemCurrencyCode</Name>
			<DataField>SystemCurrencyCode</DataField>
			<DataSource>SystemParameters</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Company</Name>
			<DataField>DataAreaId</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LastSettleDate</Name>
			<DataField>LastSettleDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>PriorYear</Name>
			<ViewMethod>priorYear</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTransOpen</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTransOpen</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>NoExistsJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CompanyInfo</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>Ledger</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>Ledger</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>CompanyInfo</JoinDataSource>
										<RelatedField>PrimaryForLegalEntity</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>DataArea</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SystemParameters</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SystemParameters</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ExchangeRateEffectiveViewMST</Name>
								<DynamicFields>Yes</DynamicFields>
								<FirstOnly>Yes</FirstOnly>
								<Table>ExchangeRateEffectiveViewToday</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>CurrencyCode</Name>
										<Field>CurrencyCode</Field>
										<JoinDataSource>VendTrans</JoinDataSource>
										<RelatedField>FromCurrencyCode</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>AccountingCurrency</Name>
										<Field>AccountingCurrency</Field>
										<JoinDataSource>Ledger</JoinDataSource>
										<RelatedField>ToCurrencyCode</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>DefaultExchangeRateType</Field>
										<JoinDataSource>Ledger</JoinDataSource>
										<RelatedField>ExchangeRateType</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Partition</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>Partition</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>DirPartyTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirPartyTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>DirPartyTable_FK</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendSettlement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendSettlementSum</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>TransRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>AmountMST</Name>
						<Field>AmountMST</Field>
						<Value>&lt; 0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>