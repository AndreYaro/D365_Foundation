<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLGDocumentView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankLGDocumentView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayApplicantAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the address of the applicant of Letter of Guarantee for the current document.
    /// </summary>
    /// <returns>
    /// The address of the applicant.
    /// </returns>
    display LogisticsAddressing displayApplicantAddress()
    {
        return CompanyInfo::find().postalAddress().Address;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBeneficiaryAddress</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the address of the beneficiary of Letter of Guarantee for the current document.
    /// </summary>
    /// <returns>
    /// The address of the beneficiary.
    /// </returns>
    display LogisticsAddressing displayBeneficiaryAddress()
    {
        LogisticsAddressing logisticsAddressing;

        switch (this.AccountType)
        {
            case BankLGAccountType::Customer:
                logisticsAddressing = CustTable::find(this.RequestAccount).postalAddress().Address;
                break;
            case BankLGAccountType::Vendor:
                logisticsAddressing = VendTable::find(this.RequestAccount).postalAddress().Address;
                break;
            case BankLGAccountType::BusinessAccount:
                logisticsAddressing = smmBusRelTable::find(this.RequestAccount).postalAddress().Address;
                break;
        }

        return logisticsAddressing;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayBeneficiaryName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the name of the beneficiary of Letter of Guarantee for the current document.
    /// </summary>
    /// <returns>
    /// The name of the beneficiary.
    /// </returns>
    display DirPartyName displayBeneficiaryName()
    {
        DirPartyRecId   dirPartyRecId;

        switch (this.AccountType)
        {
            case BankLGAccountType::Customer:
                dirPartyRecId = CustTable::find(this.RequestAccount).Party;
                break;
            case BankLGAccountType::Vendor:
                dirPartyRecId = VendTable::find(this.RequestAccount).Party;
                break;
            case BankLGAccountType::BusinessAccount:
                dirPartyRecId = smmBusRelTable::find(this.RequestAccount).Party;
                break;
        }

        return DirPartyTable::findRec(dirPartyRecId).Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpToMainFormByOriginNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump to the main form according to OriginNum
    /// </summary>
    public void jumpToMainFormByOriginNum()
    {
        Args                args;
        BankLGDocumentMap   bankLGDocumentMap;
        MenuItemNameDisplay mainFormMenuItemNameDisplay;

        args = new Args();

        switch (this.OriginType)
        {
            case BankLGOriginType::Project:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(ProjTableAuto);
                break;
            case BankLGOriginType::ProjectQuotation:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(SalesQuotationProjTable);
                break;
            case BankLGOriginType::SalesQuotation:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(SalesQuotationTable);
                break;
            case BankLGOriginType::PurchaseOrder:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(PurchTable);
                break;
            case BankLGOriginType::SalesOrder:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(SalesTable);
                break;
        }

        bankLGDocumentMap = BankLGGuarantee::find(this.Guarantee).getOriginDocument();

        args.record(bankLGDocumentMap);

        if (mainFormMenuItemNameDisplay
                && args.record().RecId)
        {
            new MenuFunction(mainFormMenuItemNameDisplay, MenuItemType::Display).run(args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpToMainFormByRequestAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump to the main form according to RequestAccount
    /// </summary>
    public void jumpToMainFormByRequestAccount()
    {
        Args                args;
        BankLGDocumentMap   bankLGDocumentMap;
        MenuItemNameDisplay mainFormMenuItemNameDisplay;

        args = new Args();

        switch (this.AccountType)
        {
            case BankLGAccountType::BusinessAccount:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(smmBusRelTable);
                args.record(smmBusRelTable::find(this.RequestAccount));
                break;
            case BankLGAccountType::Customer:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(CustTable);
                args.record(CustTable::find(this.RequestAccount));
                break;
            case BankLGAccountType::Vendor:
                mainFormMenuItemNameDisplay = menuitemDisplayStr(VendTable);
                args.record(VendTable::find(this.RequestAccount));
                break;
        }

        if (mainFormMenuItemNameDisplay
                && args.record().RecId)
        {
            new MenuFunction(mainFormMenuItemNameDisplay, MenuItemType::Display).run(args);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS318013</DeveloperDocumentation>
	<Label>@SYS318008</Label>
	<TitleField1>OriginType</TitleField1>
	<TitleField2>OriginNum</TitleField2>
	<Query>BankLGDocument</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OriginNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Guarantee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountType</Name>
			<DataField>AccountType</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Guarantee</Name>
			<DataField>Guarantee</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OriginNum</Name>
			<Label>@SYS317929</Label>
			<DataField>DocumentId</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RequestAccount</Name>
			<Label>@SYS317983</Label>
			<DataField>OrderAccount</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OriginType</Name>
			<DataField>OriginType</DataField>
			<DataSource>BankLGCustomerSalesOrder</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>