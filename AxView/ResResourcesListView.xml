<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourcesListView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResResourcesListView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves sales price for current resource for the date specified.
    /// </summary>
    /// <param name = "_transDate">Sales price date.</param>
    /// <returns>Sales price for specified date.</returns>
    public SalesPrice getSalesPrice(TransDate _transDate)
    {
        return ResourceFacade::getSalesPrice(this.Resource, _transDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCostPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves cost price for the current resource for the date specified.
    /// </summary>
    /// <param name = "_transDate">Cost price date.</param>
    /// <returns>Cost price for the specified date.</returns>
    public CostPrice getCostPrice(TransDate _transDate)
    {
        return ResourceFacade::getCostPrice(this.Resource, _transDate, 0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves resource category for the current resource by the specified date time.
    /// </summary>
    /// <param name = "_dateTime">Lookup date time.</param>
    /// <returns>Resource category for the specified date time.</returns>
    public ResourceCategoryId getResourceCategoryId(utcdatetime _dateTime)
    {
        date targetDate = DateTimeUtil::date(DateTimeUtil::applyTimeZoneOffset(_dateTime, DatetimeUtil::getUserPreferredTimeZone()));

        ResourceResourceCategorySetup resourceCategorySetup;
        PSASchedRole roleTable;

        select ValidTimeState(targetDate, targetDate) ResourceCategory from resourceCategorySetup
            where resourceCategorySetup.Resource == this.Resource
        join RoleId from roleTable
            where roleTable.RecId == resourceCategorySetup.ResourceCategory;

        return roleTable.RoleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerTitleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves worker title ID for the current resource by the specified date time.
    /// </summary>
    /// <param name = "_dateTime">Lookup date time.</param>
    /// <returns>Worker resource title ID for the specified date time.</returns>
    public HcmTitleId getWorkerTitleId(utcdatetime _dateTime)
    {
        ResWorkerTitleView workerTitleView;

        select firstonly HcmTitleId from workerTitleView
            where workerTitleView.Resource == this.Resource
                && workerTitleView.ValidFrom <= _dateTime
                && workerTitleView.ValidTo >= _dateTime;

        return workerTitleView.HcmTitleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getIsSchedulable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get whether the resource is schedulable.
    /// </summary>
    public static str getIsSchedulable()
    {
        str calendar = SysComputedColumn::returnField(
            tableStr(ResResourcesListView),
            identifierStr(ResResourcesCalendarView),
            fieldStr(ResResourcesCalendarView, Calendar));

        str isSchedulable = SysComputedColumn::if(
            SysComputedColumn::isNullExpression(calendar), 
            SysComputedColumn::returnLiteral('0'), 
            SysComputedColumn::returnLiteral('1'));

        return isSchedulable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<TitleField1>ResourceName</TitleField1>
	<TitleField2>ResourceId</TitleField2>
	<Query>ResResourcesListQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceName</Name>
			<DataField>Name</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Worker</Name>
			<DataField>Worker</DataField>
			<DataSource>ResWorkerEmploymentTypeView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceType</Name>
			<DataField>Type</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceLegalEntity</Name>
			<DataField>SourceLegalEntity</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceCompany</Name>
			<DataField>SourceCompany</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecipientCompany</Name>
			<DataField>RecipientCompany</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EmploymentType</Name>
			<DataField>EmploymentType</DataField>
			<DataSource>ResWorkerEmploymentTypeView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceCalendarId</Name>
			<DataField>CalendarId</DataField>
			<DataSource>ResResourcesCalendarView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceCalendar</Name>
			<DataField>Calendar</DataField>
			<DataSource>ResResourcesCalendarView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PeriodCodeId</Name>
			<DataField>PeriodId</DataField>
			<DataSource>ProjPeriodTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Schedulable</Name>
			<Label>@Res:IsSchedulable</Label>
			<ViewMethod>getIsSchedulable</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EffectiveDate</Name>
			<DataField>EffectiveDate</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ExpirationDate</Name>
			<DataField>ExpirationDate</DataField>
			<DataSource>ResCompanyResourceView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<AllowCrossCompany>Yes</AllowCrossCompany>
		<DataSources />
	</ViewMetadata>
</AxView>