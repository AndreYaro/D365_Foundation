<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailLevelAwareAvailabilityView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailLevelAwareAvailabilityView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>physicalAvailableColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// The pysical available for the product.
    /// </summary>
    /// <returns>
    /// Returns the on hand quantity minus the level and buffer, if level configured. Otherwise on hand quantity minus the buffer.
    /// </returns>
    private static str physicalAvailableColumn()
    {
        DictView dictView = new DictView(tableNum(RetailLevelAwareAvailabilityView));
        str onHandQuantityName = dictView.computedColumnString(tableStr(InventWarehouseOnHandAggregatedView), fieldStr(InventWarehouseOnHandAggregatedView, AvailableOnHandQuantity),
            FieldNameGenerationMode::FieldList, true);

        str bufferName = dictView.computedColumnString(tableStr(RetailInventoryAvailabilityBufferInventUnitView), fieldStr(RetailInventoryAvailabilityBufferInventUnitView, InventUnitBuffer),
            FieldNameGenerationMode::FieldList, true);
        
        str levelUpperBound = dictView.computedColumnString(tableStr(RetailInventoryLevelProfileRange), fieldStr(RetailInventoryLevelProfileRange, UpperBoundInclusive),
            FieldNameGenerationMode::FieldList, true);

        str ret = strfmt('COALESCE(%1 - %2 - %3, %1 - %2)', onHandQuantityName, bufferName, levelUpperBound);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalAvailableColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// The total available for the product.
    /// </summary>
    /// <returns>
    /// Returns the on hand quantity minus the level and buffer, if level configured. Otherwise on hand quantity minus the buffer.
    /// </returns>
    private static str totalAvailableColumn()
    {
        DictView dictView = new DictView(tableNum(RetailLevelAwareAvailabilityView));
        str onHandQuantityName = dictView.computedColumnString(tableStr(InventWarehouseOnHandAggregatedView), fieldStr(InventWarehouseOnHandAggregatedView, TotalAvailableQuantity),
            FieldNameGenerationMode::FieldList, true);

        str bufferName = dictView.computedColumnString(tableStr(RetailInventoryAvailabilityBufferInventUnitView), fieldStr(RetailInventoryAvailabilityBufferInventUnitView, InventUnitBuffer),
            FieldNameGenerationMode::FieldList, true);
        
        str levelUpperBound = dictView.computedColumnString(tableStr(RetailInventoryLevelProfileRange), fieldStr(RetailInventoryLevelProfileRange, UpperBoundInclusive),
            FieldNameGenerationMode::FieldList, true);

        str ret = strfmt('COALESCE(%1 - %2 - %3, %1 - %2)', onHandQuantityName, bufferName, levelUpperBound);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemNumber</DataField>
			<DataSource>InventWarehouseOnHandAggregatedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PhysicalAvailable</Name>
			<ExtendedDataType>InventQtyAvailPhysical</ExtendedDataType>
			<ViewMethod>physicalAvailableColumn</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalAvailable</Name>
			<ExtendedDataType>InventQtyTotal</ExtendedDataType>
			<ViewMethod>totalAvailableColumn</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventLocationId</Name>
			<DataField>InventoryWarehouseId</DataField>
			<DataSource>InventWarehouseOnHandAggregatedView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventWarehouseOnHandAggregatedView</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventWarehouseOnHandAggregatedView</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailInventoryAvailabilityBufferInventUnitView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailInventoryAvailabilityBufferInventUnitView</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RetailInventoryLevelProfile</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>RetailInventoryLevelProfile</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>RetailInventoryLevelProfileRange</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>RetailInventoryLevelProfileRange</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ProfileId</Field>
												<JoinDataSource>RetailInventoryLevelProfile</JoinDataSource>
												<RelatedField>ProfileId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>LevelProfile</Field>
										<JoinDataSource>RetailInventoryAvailabilityBufferInventUnitView</JoinDataSource>
										<RelatedField>ProfileId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ItemNumber</Field>
								<JoinDataSource>InventWarehouseOnHandAggregatedView</JoinDataSource>
								<RelatedField>ItemId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>