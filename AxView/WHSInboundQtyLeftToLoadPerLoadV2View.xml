<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSInboundQtyLeftToLoadPerLoadV2View</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSInboundQtyLeftToLoadPerLoadV2View extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>QtyLeftToLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the <c>QtyLeftToLoad</c> computed column definition.
    /// </summary>
    /// <returns>
    /// The computed column definition.
    /// </returns>
    public static str QtyLeftToLoad()
    {        
        str totalHandlingQtyField = SysComputedColumn::comparisonField(tableStr(WHSInboundQtyLeftToLoadPerLoadV2View), tablestr(WHSInboundInventTransSumLoadQtyV2View), fieldStr(WHSInboundInventTransSumLoadQtyV2View, SumHandlingQty));
        str whsNonLoadMarkedReceiptUpdatedHandlingQtyField = SysComputedColumn::comparisonField(tableStr(WHSInboundQtyLeftToLoadPerLoadV2View), tableStr(WHSInboundInventTransSumLoadQtyV2View), fieldStr(WHSInboundInventTransSumLoadQtyV2View, SumWHSNonLoadMarkedReceiptUpdatedHandlingQty));
        str whsLoadMarkedReceiptUpdatedHandlingQtyField = SysComputedColumn::comparisonField(tableStr(WHSInboundQtyLeftToLoadPerLoadV2View), tableStr(WHSInboundInventTransSumLoadQtyV2View), fieldStr(WHSInboundInventTransSumLoadQtyV2View, SumWHSLoadMarkedReceiptUpdatedHandlingQty));
        str totalOnLoadQtyField = SysComputedColumn::comparisonField(tableStr(WHSInboundQtyLeftToLoadPerLoadV2View), tableStr(WHSInboundInventQtyOnLoadsView), fieldStr(WHSInboundInventQtyOnLoadsView, SumInventQty));

        str totalOnLoadQtyZeroIfNull = SysComputedColumn::if(SysComputedColumn::isNullExpression(totalOnLoadQtyField), SysComputedColumn::returnLiteral(0), totalOnLoadQtyField);

        str whsLoadMarkedPhysicalUpdatedHandlingQtyField = SysComputedColumn::comparisonField(tableStr(WHSInboundQtyLeftToLoadPerLoadV2View), tableStr(WHSInboundInventTransSumLoadQtyV2View), fieldStr(WHSInboundInventTransSumLoadQtyV2View, SumWHSLoadMarkedPhysicalUpdatedHandlingQty));
        totalOnLoadQtyZeroIfNull = SysComputedColumn::subtract(totalOnLoadQtyZeroIfNull, whsLoadMarkedPhysicalUpdatedHandlingQtyField);
      
        str largerOfLoadInventQtyOrLoadMarkedReceiptUpdatedHandlingQty = SysComputedColumn::if(
                                                                            SysComputedColumn::compareExpressions(whsLoadMarkedReceiptUpdatedHandlingQtyField, '>', totalOnLoadQtyZeroIfNull),
                                                                            whsLoadMarkedReceiptUpdatedHandlingQtyField,
                                                                            totalOnLoadQtyZeroIfNull);

        str qtyLeftToLoad = SysComputedColumn::subtract(
                                    SysComputedColumn::subtract(totalHandlingQtyField, 
                                                                largerOfLoadInventQtyOrLoadMarkedReceiptUpdatedHandlingQty),
                                    whsNonLoadMarkedReceiptUpdatedHandlingQtyField);

        return qtyLeftToLoad;                   
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventTransId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>WHSInboundInventTransSumLoadQtyV2View</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>QtyLeftToLoad</Name>
			<ViewMethod>QtyLeftToLoad</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LoadId</Name>
			<DataField>LoadId</DataField>
			<DataSource>WHSInboundInventTransSumLoadQtyV2View</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSInboundInventTransSumLoadQtyV2View</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSInboundInventTransSumLoadQtyV2View</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSInboundInventQtyOnLoadsView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSInboundInventQtyOnLoadsView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventTransId</Field>
								<JoinDataSource>WHSInboundInventTransSumLoadQtyV2View</JoinDataSource>
								<RelatedField>InventTransId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>LoadId</Field>
								<JoinDataSource>WHSInboundInventTransSumLoadQtyV2View</JoinDataSource>
								<RelatedField>LoadId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>