<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>FiscalCalendarFlattenedMonthlyView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>FiscalCalendarFlattenedMonthlyView</c> view provides access to the flattened fiscal calendar data aggregated by a month.
/// </summary>
public class FiscalCalendarFlattenedMonthlyView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>compMonthStartDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a SQL snippet for a period month start column.
    /// </summary>
    /// <returns>A SQL snippet that calculates start of a month for the current period row.</returns>
    private static server str compMonthStartDate()
    {
        DictView dictView = new DictView(tableNum(FiscalCalendarFlattenedMonthlyView));;
        Map switchMap = new Map(Types::String, Types::String);

        str yearNameColumn = dictView.computedColumnString(
            tableStr(FiscalCalendarFlattenedView),
            fieldStr(FiscalCalendarFlattenedView, YearName),
            FieldNameGenerationMode::FieldList,
            true);
        
        str yearFiscalPeriodStartDateColumn = dictView.computedColumnString(
            tableStr(FiscalCalendarFlattenedView),
            fieldStr(FiscalCalendarFlattenedView, FiscalPeriodStartDate),
            FieldNameGenerationMode::FieldList,
            true);
        
        str monthColumn = dictView.computedColumnString(
            tableStr(FiscalCalendarFlattenedView),
            fieldStr(FiscalCalendarFlattenedView, Month),
            FieldNameGenerationMode::FieldList,
            true);

        str minYear = int2Str(year(dateNull()));
        str maxYear = int2Str(year(dateMax()));

        // if the YearName value can be converted to an integer value between 1900 and 2154, use the YearName value
        // otherwise use the year value from the appropriate Fiscal Period
        str whenClause = 'LEN(' + yearNameColumn + ') = 4 AND TRY_CONVERT(INT, ' + yearNameColumn + ') BETWEEN ' + minYear + ' AND ' + maxYear + ' ';
        str thenClause = 'DATEFROMPARTS(CAST(' + yearNameColumn + ' AS INT), ' + monthColumn + ' + 1, 1) ';
        str elseClause = 'DATEFROMPARTS(CAST(YEAR(' + yearFiscalPeriodStartDateColumn + ') AS INT), ' + monthColumn + ' + 1, 1) ';

        switchMap.insert(whenClause, thenClause);

        // switch statement will return a SQL case statement in the format below:
        // CASE
        //     WHEN LEN(T1.YEARNAME) = 4 AND TRY_CONVERT(INT, T1.YEARNAME) BETWEEN 1900 AND 2154
        //         THEN DATEFROMPARTS(CAST(T1.YEARNAME AS INT), T1.MONTH + 1, 1)
        //         ELSE DATEFROMPARTS(CAST(YEAR(T1.FISCALPERIODSTARTDATE) AS INT), T1.MONTH + 1, 1)
        // END
        return SysComputedColumn::switch('', switchMap, elseClause);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@CostManagement:View_FiscalCalendarFlattenedMonthlyView</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CalendarId</Name>
			<DataField>CalendarId</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CalendarRecId</Name>
			<DataField>CalendarRecId</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Month</Name>
			<DataField>Month</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PeriodName</Name>
			<DataField>PeriodName</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PeriodOffset</Name>
			<DataField>PeriodOffset</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PeriodRecId</Name>
			<DataField>PeriodRecId</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Quarter</Name>
			<DataField>Quarter</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>YearName</Name>
			<DataField>YearName</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>QuarterOffset</Name>
			<DataField>QuarterOffset</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>YearOffset</Name>
			<DataField>YearOffset</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>MonthStartDate</Name>
			<ViewMethod>compMonthStartDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FiscalPeriodStartDate</Name>
			<DataField>FiscalPeriodStartDate</DataField>
			<DataSource>FiscalCalendarFlattenedView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>FiscalCalendarFlattenedView</Name>
				<Table>FiscalCalendarFlattenedView</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields>
					<AxQuerySimpleDataSourceField>
						<Name>CalendarId</Name>
						<Field>CalendarId</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>CalendarRecId</Name>
						<Field>CalendarRecId</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>Month</Name>
						<Field>Month</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>PeriodName</Name>
						<Field>PeriodName</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>PeriodOffset</Name>
						<Field>PeriodOffset</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>PeriodRecId</Name>
						<Field>PeriodRecId</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>Quarter</Name>
						<Field>Quarter</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>YearName</Name>
						<Field>YearName</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>QuarterOffset</Name>
						<Field>QuarterOffset</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>YearOffset</Name>
						<Field>YearOffset</Field>
					</AxQuerySimpleDataSourceField>
					<AxQuerySimpleDataSourceField>
						<Name>FiscalPeriodStartDate</Name>
						<Field>FiscalPeriodStartDate</Field>
					</AxQuerySimpleDataSourceField>
				</Fields>
				<Ranges />
				<GroupBy>
					<AxQuerySimpleGroupByField>
						<Name>CalendarId</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>CalendarId</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>CalendarRecId</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>CalendarRecId</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>Month</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>Month</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>PeriodName</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>PeriodName</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>PeriodOffset</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>PeriodOffset</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>PeriodRecId</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>PeriodRecId</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>Quarter</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>Quarter</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>YearName</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>YearName</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>QuarterOffset</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>QuarterOffset</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>YearOffset</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>YearOffset</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>FiscalPeriodStartDate</Name>
						<DataSource>FiscalCalendarFlattenedView</DataSource>
						<Field>FiscalPeriodStartDate</Field>
					</AxQuerySimpleGroupByField>
				</GroupBy>
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>