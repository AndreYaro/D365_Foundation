<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventDistinctProductExpanded</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventDistinctProductExpanded extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productDimensionFieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the field Id for a product dimension.
    /// </summary>
    /// <param name = "_inventProductDimension">A product dimension field.</param>
    /// <returns>Field Id on <c>InventDistinctProductExpanded</c> table.</returns>
    public static FieldId productDimensionFieldId(InventProductDimension _inventProductDimension)
    {
        return _inventProductDimension.fieldIdInTable(tableStr(InventDistinctProductExpanded));
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByInventDim</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns the record in the table.
    /// </summary>
    /// <param name="_itemId">
    /// The item id to use.
    /// </param>
    /// <param name="_inventDim">
    /// The inventory dimension record to use.
    /// </param>
    /// <returns>
    /// The record found.
    /// </returns>
    public static InventDistinctProductExpanded findByInventDim(ItemId _itemId, InventDim _inventDim)
    {
        Query query = new Query();       
       
        QueryBuildDataSource qbds = query.addDataSource(tableNum(InventDistinctProductExpanded));
        qbds.firstOnly(true);
        qbds.addRange(fieldNum(InventDistinctProductExpanded, itemId)).value(queryValue(_itemId));

        Enumerator enum = InventProductDimension::getEnumeratorForEnabledDimensions();
        while (enum.moveNext())
        {
            InventProductDimension productDim = enum.current() as InventProductDimension;
            FieldId localFieldId = InventDistinctProductExpanded::productDimensionFieldId(productDim);

            if (localFieldId)
            {
                FieldId inventDimFieldId = productDim.parmInventDimFieldId();
                qbds.addRange(localFieldId).value(queryValue(_inventDim.(inventDimFieldId)));
            }
        }
        
        InventDistinctProductExpanded inventDistinctProductExpanded;
        QueryRun queryRun = new QueryRun(query);
        if (queryRun.next())
        {
            inventDistinctProductExpanded = queryRun.get(tableNum(InventDistinctProductExpanded));
        }

        return inventDistinctProductExpanded;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addItemAndProductDimensionLinks</Name>
				<Source><![CDATA[
    /// <summary>
    /// Removes the already present links on the datasource and adds the <c>ItemId</c> and inventory product dimension links to the query build datasource reference provided.
    /// </summary>
    /// <param name = "_qbds">The query build datasource.</param>
    /// <param name = "_mainDsName">The main datasource name for the main datasource to be linked to.</param>
    /// <param name = "_mainDsitemField">The <c>ItemId</c> field id from the main datasource to be linked to.</param>
    /// <param name = "_inventDimDsName">The datasource name for the inventory dimensions table.</param>
    public static void addItemAndProductDimensionLinks(QueryBuildDataSource _qbds, DataSourceName _mainDsName, FieldId _mainDsitemField, DataSourceName _inventDimDsName)
    {
        _qbds.clearLinks();

        _qbds.addLink(_mainDsitemField, fieldNum(InventDistinctProductExpanded, ItemId), _mainDsName);
        _qbds.addLink(fieldNum(InventDim, DataAreaId), fieldNum(InventDistinctProductExpanded, DataAreaId), _inventDimDsName);

        Enumerator enum = InventProductDimension::getEnumeratorForEnabledDimensions();
        while (enum.moveNext())
        {
            InventProductDimension productDim = enum.current() as InventProductDimension;
            FieldId localFieldId = InventDistinctProductExpanded::productDimensionFieldId(productDim);
            if (localFieldId)
            {
                FieldId inventDimFieldId = productDim.parmInventDimFieldId();
                _qbds.addLink(inventDimFieldId, localFieldId, _inventDimDsName);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>prepareInventDistinctProductDatasource</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method either adds the necessary links on the caller datasource or disables it for performance improvement, based on the show products global parameter.
    /// </summary>
    /// <param name = "_prodNumControl">The product number control used on the caller form.</param>
    /// <param name = "_qbds">The query build datasource instance of <c>InventDistinctProductExpanded</c> view from the caller form.</param>
    /// <param name = "_mainDsName">The main datasource name for the main datasource to be linked to.</param>
    /// <param name = "_mainDsitemField">The <c>ItemId</c> field id from the main datasource to be linked to.</param>
    /// <param name = "_inventDimDsName">The datasource name for the inventory dimensions table.</param>
    /// <returns>A Boolean indicating whether the product number related functionality is enabled or not.</returns>
    public static boolean prepareInventDistinctProductDatasource(FormStringControl _prodNumControl, QueryBuildDataSource _qbds, DataSourceName _mainDsName, FieldId _mainDsitemField, DataSourceName _inventDimDsName)
    {
        var showProdNumber = EcoResProductParameters::find().ShowProductNumber;
        if (showProdNumber)
        {
            InventDistinctProductExpanded::addItemAndProductDimensionLinks(_qbds, _mainDsName, _mainDsitemField, _inventDimDsName);
        }
        else
        {
            _qbds.enabled(false);
        }

        _prodNumControl.visible(showProdNumber);

        return showProdNumber;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:DistinctProductsExpandedDevDoc</DeveloperDocumentation>
	<Label>@SCM:DistinctProductsExpanded</Label>
	<TableGroup>Main</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>DisplayProductNumber</TitleField2>
	<ReplacementKey>DisplayProductNumberIdx</ReplacementKey>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DisplayProductNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>configId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Product</Name>
			<DataField>Product</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventDimId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Level</Name>
			<DataField>Level</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PmfPlanningItemId</Name>
			<DataField>PmfPlanningItemId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PmfProductType</Name>
			<DataField>PmfProductType</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DisplayProductNumber</Name>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SearchName</Name>
			<DataField>SearchName</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DistinctProductDataAreaId</Name>
			<DataField>DataAreaId</DataField>
			<DataSource>InventDistinctProduct</DataSource>
		</AxViewField>
	</Fields>
	<Indexes>
		<AxViewIndex>
			<Name>DisplayProductNumberIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxViewIndexField>
					<DataField>DisplayProductNumber</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventDistinctProduct</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventDistinctProduct</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProduct</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResProduct</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>