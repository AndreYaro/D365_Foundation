<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductionFlowCosting2_Accounted</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanProductionFlowCosting2_Accounted extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>addToComparisonMap</Name>
				<Source><![CDATA[
        private static void addToComparisonMap(
        Map                 _comparisonExpressionMap,
        LedgerPostingType   _postingType,
        CostClassification  _costClassification
        )
    {
        _comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(tableStr(LeanProductionFlowCosting2_Accounted), tableStr(GeneralJournalAccountEntry), fieldStr(GeneralJournalAccountEntry, PostingType)),
                SysComputedColumn::comparisonLiteral(enum2int(_postingType))),
            SysComputedColumn::returnLiteral(enum2int(_costClassification)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>costClassification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the cost classification.
    /// </summary>
    /// <returns>
    /// The string holding the <c>CostClassification</c> enum value.
    /// </returns>
    public static str costClassification()
    {
        Map             comparisonExpressionMap          = SysComputedColumn::comparisionExpressionMap();

        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdReceipt, CostClassification::COGM);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdIssue, CostClassification::Material);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::IndirectAbsorption, CostClassification::Indirect);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdWrkCtrIssue, CostClassification::Labor);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdLeanWIPServiceReceipt, CostClassification::Outsourcing);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdStdCostProductionVariance, CostClassification::PriceVariance);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdStdCostQuantityVariance, CostClassification::QuantityVariance);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdStdCostSubstitutionVariance, CostClassification::SubstitutionVariance);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::InventStdCostRoundingVariance, CostClassification::RoundingVariance);
        LeanProductionFlowCosting2_Accounted::addToComparisonMap(comparisonExpressionMap, LedgerPostingType::ProdStdCostLotSizeVariance, CostClassification::LotSizeVariance);

        return SysComputedColumn::switch(
            '',
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>realizedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the realized cost amount.
    /// </summary>
    /// <returns>
    /// The string holding 0 as the realized amount is always zero in this case.
    /// </returns>
    public static str realizedAmount()
    {
        return int2str(0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS4009392</DeveloperDocumentation>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransRefId</Name>
			<DataField>TransRefId</DataField>
			<DataSource>LeanProductionFlowCosting_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PostingType</Name>
			<DataField>PostingType</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountedAmount</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>GeneralJournalAccountEntry</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>CostClassification</Name>
			<ViewMethod>costClassification</ViewMethod>
			<EnumType>CostClassification</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>RealizedAmount</Name>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<ViewMethod>RealizedAmount</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LeanProductionFlowCosting_1</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LeanProductionFlowCosting</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>GeneralJournalEntry_1</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>GeneralJournalEntry</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>GeneralJournalAccountEntry</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>GeneralJournalAccountEntry</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>PostingType</Name>
										<Field>PostingType</Field>
										<Value>Indirect absorption, Production issue, Production receipt, Production - resource issue, Lean service WIP receipt, Production price variance, Production lot size variance, Production quantity variance, Production substitution variance, Rounding variance</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<FetchMode>OneToN</FetchMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>RecId</Name>
										<Field>RecId</Field>
										<JoinDataSource>GeneralJournalEntry_1</JoinDataSource>
										<RelatedField>GeneralJournalEntry</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Voucher</Name>
								<Field>Voucher</Field>
								<JoinDataSource>LeanProductionFlowCosting_1</JoinDataSource>
								<RelatedField>SubledgerVoucher</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy>
					<AxQuerySimpleGroupByField>
						<Name>TransRefId</Name>
						<DataSource>LeanProductionFlowCosting_1</DataSource>
						<Field>TransRefId</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>PostingType</Name>
						<DataSource>GeneralJournalAccountEntry</DataSource>
						<Field>PostingType</Field>
					</AxQuerySimpleGroupByField>
				</GroupBy>
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>