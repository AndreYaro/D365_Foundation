<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqItemTableInventDimFlags</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqItemTableInventDimFlags extends common
{
    // The field names of the view must correspond to the field names of InventDimParm
    #InventDimDevelop

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>configIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str configIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, ConfigId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventBatchIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventBatchIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventBatchId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventColorIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventColorIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventColorId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventGtdidFlagRuColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventGtdidFlagRuColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventGTDId_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventLocationIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventLocationIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventLocationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventOwnerIdFlagRuColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventOwnerIdFlagRuColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventOwnerId_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventProfileIdFlagRuColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventProfileIdFlagRuColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventProfileId_RU));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSerialIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventSerialIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventSerialId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSiteIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventSiteIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventSiteId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventSizeIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventSizeIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventSizeId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventStatusFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventStatusFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventStatusId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventStyleIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventStyleIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventStyleId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventVersionIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventVersionIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventVersionId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>licensePlateFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str licensePlateFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, LicensePlateId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>wmslocationIdFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str wmslocationIdFlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, WMSLocationId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension1FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension1FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension2FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension2FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension2));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension3FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension3FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension3));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension4FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension4FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension4));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension5FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension5FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension5));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension6FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension6FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension6));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension7FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension7FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension7));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension8FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension8FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension8));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension9FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension9FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension9));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension10FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension10FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension10));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension11FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension11FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension11));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimension12FlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimension12FlagColumnDefinition()
    {
        return ReqItemTableInventDimFlags::inventDimFlagColumnDefinition(fieldStr(InventDim, InventDimension12));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimFlagColumnDefinition</Name>
				<Source><![CDATA[
    private static str inventDimFlagColumnDefinition(FieldName _inventDimFieldName)
    {
        str inventDimFieldExpression = SysComputedColumn::returnField(tablestr(ReqItemTableInventDimFlags), tablestr(InventDim), _inventDimFieldName);

        str isDimFieldBlankExpression = ReqItemTableInventDimFlags::setIsDimFieldBlankExpression(_inventDimFieldName, inventDimFieldExpression);
        str isDimFieldNullExpression = SysComputedColumn::isNullExpression(inventDimFieldExpression);

        return SysComputedColumn::if(
            SysComputedColumn::or2(isDimFieldBlankExpression, isDimFieldNullExpression),
            SysComputedColumn::returnLiteral(NoYes::No),
            SysComputedColumn::returnLiteral(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIsDimFieldBlankExpression</Name>
				<Source><![CDATA[
    private static str setIsDimFieldBlankExpression(FieldName _inventDimFieldName, str _inventDimFieldExpression)
    {
        FieldId fieldId = fieldName2Id(tableNum(InventDim), _inventDimFieldName);
        str emptyFieldQueryValue = InventDim::emptyDimFieldQueryValue(fieldId);
        return SysComputedColumn::equalExpression(_inventDimFieldExpression, emptyFieldQueryValue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>ReqItemTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ConfigIdFlag</Name>
			<ExtendedDataType>EcoResConfigurationFlag</ExtendedDataType>
			<ViewMethod>configIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventBatchIdFlag</Name>
			<ExtendedDataType>InventBatchIdFlag</ExtendedDataType>
			<ViewMethod>inventBatchIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventColorIdFlag</Name>
			<ExtendedDataType>EcoResColorFlag</ExtendedDataType>
			<ViewMethod>inventColorIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventGTDIdFlag_RU</Name>
			<ExtendedDataType>InventGTDIdFlag_RU</ExtendedDataType>
			<ViewMethod>inventGtdidFlagRuColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventLocationIdFlag</Name>
			<ExtendedDataType>InventLocationIdFlag</ExtendedDataType>
			<ViewMethod>inventLocationIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventOwnerIdFlag_RU</Name>
			<ExtendedDataType>InventOwnerIdFlag</ExtendedDataType>
			<ViewMethod>inventOwnerIdFlagRuColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventProfileIdFlag_RU</Name>
			<ExtendedDataType>InventProfileIdFlag_RU</ExtendedDataType>
			<ViewMethod>inventProfileIdFlagRuColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventSerialIdFlag</Name>
			<ExtendedDataType>InventSerialIdFlag</ExtendedDataType>
			<ViewMethod>inventSerialIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventSiteIdFlag</Name>
			<ExtendedDataType>InventSiteIdFlag</ExtendedDataType>
			<ViewMethod>inventSiteIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventSizeIdFlag</Name>
			<ExtendedDataType>EcoResSizeFlag</ExtendedDataType>
			<ViewMethod>inventSizeIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventStatusFlag</Name>
			<ExtendedDataType>WHSInventStatusFlag</ExtendedDataType>
			<ViewMethod>inventStatusFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventStyleIdFlag</Name>
			<ExtendedDataType>EcoResStyleFlag</ExtendedDataType>
			<ViewMethod>inventStyleIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventVersionIdFlag</Name>
			<ExtendedDataType>EcoResVersionFlag</ExtendedDataType>
			<ViewMethod>inventVersionIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>LicensePlateFlag</Name>
			<ExtendedDataType>WHSLicensePlateFlag</ExtendedDataType>
			<ViewMethod>licensePlateFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>WMSLocationIdFlag</Name>
			<ExtendedDataType>WMSLocationIdFlag</ExtendedDataType>
			<ViewMethod>wmslocationIdFlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension1Flag</Name>
			<ExtendedDataType>InventDimension1Flag</ExtendedDataType>
			<ViewMethod>inventDimension1FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension2Flag</Name>
			<ExtendedDataType>InventDimension2Flag</ExtendedDataType>
			<ViewMethod>inventDimension2FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension3Flag</Name>
			<ExtendedDataType>InventDimension3Flag</ExtendedDataType>
			<ViewMethod>inventDimension3FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension4Flag</Name>
			<ExtendedDataType>InventDimension4Flag</ExtendedDataType>
			<ViewMethod>inventDimension4FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension5Flag</Name>
			<ExtendedDataType>InventDimension5Flag</ExtendedDataType>
			<ViewMethod>inventDimension5FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension6Flag</Name>
			<ExtendedDataType>InventDimension6Flag</ExtendedDataType>
			<ViewMethod>inventDimension6FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension7Flag</Name>
			<ExtendedDataType>InventDimension7Flag</ExtendedDataType>
			<ViewMethod>inventDimension7FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension8Flag</Name>
			<ExtendedDataType>InventDimension8Flag</ExtendedDataType>
			<ViewMethod>inventDimension8FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension9Flag</Name>
			<ExtendedDataType>InventDimension9Flag</ExtendedDataType>
			<ViewMethod>inventDimension9FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension10Flag</Name>
			<ExtendedDataType>InventDimension10Flag</ExtendedDataType>
			<ViewMethod>inventDimension10FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension11Flag</Name>
			<ExtendedDataType>InventDimension11Flag</ExtendedDataType>
			<ViewMethod>inventDimension11FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventDimension12Flag</Name>
			<ExtendedDataType>InventDimension12Flag</ExtendedDataType>
			<ViewMethod>inventDimension12FlagColumnDefinition</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ReqItemTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ReqItemTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>ReqItemTable</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>
