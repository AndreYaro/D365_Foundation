<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DirPartyListPageView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DirPartyListPageView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dirPartyIsApplicant</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is an applicant.
    /// </summary>
    /// <returns>
    /// true if the party is an applicant; otherwise, false.
    /// </returns>
    public static str dirPartyIsApplicant()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), identifierstr(DirPartyViewApplicant), identifierstr(Party))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsCostCenter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is a cost center.
    /// </summary>
    /// <returns>
    /// true if the party is a cost center; otherwise, false.
    /// </returns>
    public static str dirPartyIsCostCenter()
    {
        str viewName = tablestr(DirPartyListPageView);
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), tablestr(OMOperatingUnit)+'_CostCenter', identifierstr(RecId))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsDepartment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is a department.
    /// </summary>
    /// <returns>
    /// true if the party is a department; otherwise, false.
    /// </returns>
    public static str dirPartyIsDepartment()
    {
        str viewName = tablestr(DirPartyListPageView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), tablestr(OMOperatingUnit)+'_Department', identifierstr(RecId))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsOperatingUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is an operating unit.
    /// </summary>
    /// <returns>
    /// true if the party is an operating unit; otherwise, false.
    /// </returns>
    public static str dirPartyIsOperatingUnit()
    {
        str viewName = tablestr(DirPartyListPageView);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), tablestr(OMOperatingUnit), identifierstr(RecId))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsProspectiveVendor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is an prospective vendor.
    /// </summary>
    /// <returns>
    /// true if the party is a prospective vendor; otherwise, false.
    /// </returns>
    public static str dirPartyIsProspectiveVendor()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                strfmt('COUNT(%1)',
                    SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), identifierstr(DirPartyViewVendRequest), identifierstr(Party))),
                    SysComputedColumn::comparisonLiteral(0)),
                SysComputedColumn::returnLiteral(0),
                SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsUser</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is a user.
    /// </summary>
    /// <returns>
    /// true if the party is a user; otherwise, false.
    /// </returns>
    public static str dirPartyIsUser()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), identifierstr(DirPartyViewUser), identifierstr(Party))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dirPartyIsWorker</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines whether the party is a worker.
    /// </summary>
    /// <returns>
    /// true if the party is a worker; otherwise, false.
    /// </returns>
    public static str dirPartyIsWorker()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
            strfmt('COUNT(%1)', SysComputedColumn::comparisonField(identifierstr(DirPartyListPageView), identifierstr(DirPartyViewWorker), identifierstr(Party))),
            SysComputedColumn::comparisonLiteral(0)), SysComputedColumn::returnLiteral(0), SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>type</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a computed column for the party type.
    /// </summary>
    /// <returns>
    /// A value of the party type field string.
    /// </returns>
    public static str type()
    {
        return DirPartyNameView::getType(tableStr(DirPartyListPageView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates the query for the <c>GlobalAddressBookListPage</c> and <c>DirPartyLookup</c> forms.
    /// </summary>
    /// <param name="_formQuery">
    /// The query of the form.
    /// </param>
    /// <param name="_dirPartyRoleView">
    /// An enumeration that determines which role of the <c>dirParty</c> table can be selected in the query.
    /// </param>
    /// <param name="_dirPartyLookupEntitiesFilter">
    /// An object of the <c>DirPartyLookupEntitiesFilter</c> class.
    /// </param>
    /// <returns>
    /// The query object that contains query according to the specified argument.
    /// </returns>
    public static Query updateQuery(Query _formQuery, DirPartyRoleView _dirPartyRoleView, dirPartyLookupEntitiesFilter _dirPartyLookupEntitiesFilter = dirPartyLookupEntitiesFilter::generateDirPartyLookupEntitiesFilter() )
    {
        Query                   query;
        str                     range, rangeToAdd;
        str                     listPageViewTableName;
        QueryBuildDataSource    qbdsDirPartyListPageView,qbdsDirPartyView;
        QueryBuildRange         qbrBusRel, qbrCust, qbrCompetitor, qbrContact, qbrWorker, qbrVend, qbrVendRequest,qbrDataAreaId;

        query = _formQuery;

        qbdsDirPartyListPageView = query.dataSourceTable(tablenum(DirPartyListPageView));

        qbrBusRel = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsBusRel));
        qbrCompetitor = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsCompetitor));
        qbrContact = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsContactPerson));
        qbrCust = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsCustomer));
        qbrWorker = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsWorker));
        qbrVend = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsVendor));
        qbrVendRequest = qbdsDirPartyListPageView.addRange(fieldnum(DirPartyListPageView, IsProspectiveVendor));

        qbrBusRel.value(SysQuery::valueEmptyString());
        qbrContact.value(SysQuery::valueEmptyString());
        qbrCompetitor.value(SysQuery::valueEmptyString());
        qbrCust.value(SysQuery::valueEmptyString());
        qbrWorker.value(SysQuery::valueEmptyString());
        qbrVend.value(SysQuery::valueEmptyString());
        switch (_dirPartyRoleView)
        {
            case DirPartyRoleView::BusinessRelationsOnly :
                qbrBusRel.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::CompetitorsOnly :
                qbrCompetitor.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ContactsOnly :
                qbrContact.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::CustomersOnly :
                qbrCust.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::EmployeesOnly :
                qbrWorker.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::VendorsOnly :
                qbrVend.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ProspectiveVendorsOnly :
                qbrVendRequest.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ExclusiveBusRelAndCustomer :
                qbrBusRel.value(SysQuery::value(NoYes::Yes));
                qbrCust.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ExclusiveBusRelAndVendor :
                qbrBusRel.value(SysQuery::value(NoYes::Yes));
                qbrVend.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ExclusiveCustomerAndEmployee :
                qbrCust.value(SysQuery::value(NoYes::Yes));
                qbrWorker.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ExclusiveCustomerAndVendor :
                qbrCust.value(SysQuery::value(NoYes::Yes));
                qbrVend.value(SysQuery::value(NoYes::Yes));
                break;

            case DirPartyRoleView::ExclusiveEmployeeAndVendor :
                qbrWorker.value(SysQuery::value(NoYes::Yes));
                qbrVend.value(SysQuery::value(NoYes::Yes));
                break;

            default : // ALL
                qbrBusRel.value(SysQuery::valueUnlimited());
                qbrContact.value(SysQuery::valueUnlimited());
                qbrCompetitor.value(SysQuery::valueUnlimited());
                qbrCust.value(SysQuery::valueUnlimited());
                qbrWorker.value(SysQuery::valueUnlimited());
                qbrVend.value(SysQuery::valueUnlimited());
                qbrVendRequest.value(SysQuery::valueUnlimited());

                if (!_dirPartyLookupEntitiesFilter.parmDisableAllEntityTypeFilters())
                {
                    qbdsDirPartyView = query.dataSourceTable(tablenum(DirPartyView));
                    qbrDataAreaId = qbdsDirPartyView.addRange(fieldnum(DirPartyView, DataArea));
                    qbrDataAreaId.value(queryValue(_dirPartyLookupEntitiesFilter.parmDataAreaId()));
                    listPageViewTableName = _formQuery.dataSourceTable(tablenum(DirPartyListPageView)).name();

                    if (_dirPartyLookupEntitiesFilter.parmFilterBusinessRelations() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsBusRel)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterBusinessRelations()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    if (_dirPartyLookupEntitiesFilter.parmFilterContacts() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsContactPerson)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterContacts()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    if (_dirPartyLookupEntitiesFilter.parmFilterCompetitors() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsCompetitor)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterCompetitors()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    if (_dirPartyLookupEntitiesFilter.parmFilterCustomers() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsCustomer)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterCustomers()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    if (_dirPartyLookupEntitiesFilter.parmFilterEmployees() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsWorker)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterEmployees()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    if (_dirPartyLookupEntitiesFilter.parmFilterVendors() != FilterStatus::Undefined)
                    {
                        rangeToAdd = strfmt('((%1 == %2))', (listPageViewTableName + '.' + fieldstr(DirPartyListPageView, IsVendor)), enum2int(_dirPartyLookupEntitiesFilter.parmFilterVendors()));
                        range = (range ? strfmt('%1 || %2', range, rangeToAdd) : rangeToAdd);
                    }
                    qbrBusRel.value('(' + range + ')');
                }
                break;
        }

        return query;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS324677</DeveloperDocumentation>
	<Label>@SYS305465</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>Party</TitleField2>
	<Query>DirPartyListPage</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCustomer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsVendor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsBusRel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsContactPerson</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCompetitor</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsLegalEntity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProspectiveVendor</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Party</Name>
			<Label>@SYS126057</Label>
			<DataField>RecId</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CompetitorCount</Name>
			<ConfigurationKey>SmmSM</ConfigurationKey>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewCompetitor</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewCust</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewVend</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BusRelCount</Name>
			<ConfigurationKey>SmmSM</ConfigurationKey>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewBusRel</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ContactPersonCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewContactPerson</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EmplCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewWorker</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsCustomer</Name>
			<Label>@SYS24704</Label>
			<Method>dirPartyIsCustomer</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsVendor</Name>
			<Label>@SYS8079</Label>
			<Method>dirPartyIsVendor</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsBusRel</Name>
			<ConfigurationKey>SmmSM</ConfigurationKey>
			<Label>@SYS80084</Label>
			<Method>dirPartyIsBusRel</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsContactPerson</Name>
			<Label>@SYS60248</Label>
			<Method>dirPartyIsContact</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsCompetitor</Name>
			<ConfigurationKey>SmmSM</ConfigurationKey>
			<Label>@SYS79821</Label>
			<Method>dirPartyIsCompetitor</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InstanceRelationType</Name>
			<Label>@SYS133857</Label>
			<DataField>InstanceRelationType</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsLegalEntity</Name>
			<Label>@SYS129100</Label>
			<Method>dirPartyIsLegalEntity</Method>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsOperatingUnit</Name>
			<Label>@SYS130618</Label>
			<ViewMethod>dirpartyisoperatingUnit</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<Label>@SYS7399</Label>
			<DataField>Name</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsCostCenter</Name>
			<Label>@SYS40859</Label>
			<ViewMethod>dirPartyIsCostCenter</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsApplicant</Name>
			<Label>@SYS30003</Label>
			<ViewMethod>dirPartyIsApplicant</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsUser</Name>
			<Label>@SYS324675</Label>
			<ViewMethod>dirPartyIsUser</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsWorker</Name>
			<Label>@SYS305602</Label>
			<ViewMethod>dirPartyIsWorker</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>NameAlias</Name>
			<DataField>NameAlias</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>KnownAs</Name>
			<DataField>KnownAs</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendRequestCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>Party</DataField>
			<DataSource>DirPartyViewVendRequest</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsProspectiveVendor</Name>
			<Label>@SYS311040</Label>
			<ViewMethod>dirPartyIsProspectiveVendor</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsDepartment</Name>
			<Label>@SYS90025</Label>
			<ViewMethod>dirPartyIsDepartment</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Type</Name>
			<ViewMethod>type</ViewMethod>
			<EnumType>DirPartyType</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<IsObsolete>Yes</IsObsolete>
		<DataSources />
	</ViewMetadata>
</AxView>