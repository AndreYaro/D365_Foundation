<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductTranslationFallbackView</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class EcoResProductTranslationFallbackView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that returns the name of the product.
    /// </summary>
    /// <returns>
    /// The name of the product.
    /// </returns>
    [Hookable(false)]
    public static str productName()
    {
        TableName   viewName                    = tableStr(EcoResProductTranslationFallbackView);
        str         translatedNameField         = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslation), fieldStr(EcoResProductTranslation, Name));
        str         nameField                   = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslationSystemFallbackView), fieldStr(EcoResProductTranslationSystemFallbackView, Name));

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(translatedNameField),
            nameField,
            translatedNameField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>productDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that returns the description of the product.
    /// </summary>
    /// <returns>
    /// The description of the product.
    /// </returns>
    [Hookable(false)]
    public static str productDescription()
    {
        TableName   viewName                    = tableStr(EcoResProductTranslationFallbackView);
        str         translatedDescriptionField  = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslation), fieldStr(EcoResProductTranslation, Description));
        str         descriptionField            = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslationSystemFallbackView), fieldStr(EcoResProductTranslationSystemFallbackView, Description));

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(translatedDescriptionField),
            descriptionField,
            translatedDescriptionField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ecoResProductTranslationRecIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a computed column that returns the RecId of the product translation (EcoResProductTranslation) if it exists for a specific language, else the system language
    /// translation.
    /// </summary>
    /// <returns>
    /// The RecId of the product translation if it exists, else the translation RecId of the system language is returned.
    /// </returns>
    [Hookable(false)]
    public static str ecoResProductTranslationRecIdDefinition()
    {
        TableName   viewName              = tableStr(EcoResProductTranslationFallbackView);
        str         translatedRecIdField  = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslation), fieldStr(EcoResProductTranslation, RecId));
        str         recIdField            = SysComputedColumn::returnField(viewName, tableStr(EcoResProductTranslationSystemFallbackView), fieldStr(EcoResProductTranslationSystemFallbackView, EcoResProductTranslationRecId));

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(translatedRecIdField),
            recIdField,
            translatedRecIdField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findTranslationByLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>EcoResProductTranslation</c> record based on the language ID.
    /// </summary>
    /// <param name = "_product"> The product.</param>
    /// <param name = "_languageId"> The language ID. </param>
    /// <returns> A product translation record based on the language ID; otherwise, the system language product translation record is returned.</returns>
    [Hookable(false)]
    public static EcoResProductTranslation findTranslationByLanguage(EcoResProductRecId _product, LanguageId  _languageId)
    {
        EcoResProductTranslationFallbackView fallbackView;
        select firstonly EcoResProductTranslationRecId from fallbackView 
            where fallbackView.Product == _product && fallbackView.LanguageId == _languageId;
         
        EcoResProductTranslation translation;
        select firstonly translation where translation.RecId == fallbackView.EcoResProductTranslationRecId;

        return translation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFallbackTranslationByLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the <c>EcoResProductTranslationFallbackView</c> record based on the language ID
    /// </summary>
    /// <param name = "_product"> The product.</param>
    /// <param name = "_languageId"> The language ID. </param>
    /// <returns> A <c>EcoResProductTranslationFallbackView</c> record.</returns>
    [Hookable(false)]
    public static EcoResProductTranslationFallbackView findFallbackTranslationByLanguage(EcoResProductRecId _product, LanguageId  _languageId)
    {
        EcoResProductTranslationFallbackView fallbackView;
        select firstonly fallbackView
            where fallbackView.Product == _product && fallbackView.LanguageId == _languageId;

        return fallbackView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryAddFallbackTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Links the <c>EcoResProductTranslationFallbackView</c> view to the parent table of the query.
    /// </summary>
    /// <param name = "_query"> The query passed from a form where product translations are used. </param>
    /// <param name = "_parentTableId"> The parent form data source table ID to join the <c>EcoResProductTranslationFallbackView</c> view. </param>
    [Hookable(false)]   
    public static void queryAddFallbackTranslation(Query _query, TableId _parentTableId)
    {
        QueryBuildDataSource qbdsFallbackTranslation = _query.dataSourceTable(tableNum(EcoResProductTranslationFallbackView));

        if ((_parentTableId != tableNum(EcoResProduct) && 
            _parentTableId != tableNum(InventTable) && 
            _parentTableId != tableNum(EcoResProductRelationTable) &&
            _parentTableId != tableNum(EcoResDistinctProductVariant) &&
            _parentTableId != tableNum(EcoResDistinctProduct) &&
            _parentTableId != tableNum(InventItemDimTmpFilter)) ||
            !qbdsFallbackTranslation)
        {
            throw error(strFmt("@SYS19306",funcName()));
        }

        _query.forceNestedLoop(true);
        switch(_parentTableId)
        {
            case tableNum(EcoResProduct):
                qbdsFallbackTranslation.addLink(fieldNum(EcoResProduct, RecId), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
            case tableNum(EcoResDistinctProductVariant):
                qbdsFallbackTranslation.addLink(fieldNum(EcoResProduct, RecId), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
            case tableNum(EcoResDistinctProduct):
                qbdsFallbackTranslation.addLink(fieldNum(EcoResProduct, RecId), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
            case tableNum(EcoResProductRelationTable):
                qbdsFallbackTranslation.addLink(fieldNum(EcoResProductRelationTable, Product2), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
            case tableNum(InventTable):
                qbdsFallbackTranslation.addLink(fieldNum(InventTable, Product), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
            case tableNum(InventItemDimTmpFilter):
                qbdsFallbackTranslation.addLink(fieldNum(InventItemDimTmpFilter, Product), fieldNum(EcoResProductTranslationFallbackView, Product));
                break;
        }

        qbdsFallbackTranslation.addRange(fieldNum(EcoResProductTranslationFallbackView, LanguageId)).value(EcoResProductParametersFallbackLanguage::getSelectedFallbackLanguage());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:EcoResProductTranslationFallbackViewDev</DeveloperDocumentation>
	<Label>@SCM:EcoResProductTranslationFallbackView</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>Product</TitleField1>
	<TitleField2>LanguageId</TitleField2>
	<Query>EcoResProductTranslationFallbackViewQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>EcoResProductTranslationRecId</Name>
			<ViewMethod>ecoResProductTranslationRecIdDefinition</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SystemLanguageId</Name>
			<DataField>SystemLanguageId</DataField>
			<DataSource>EcoResProductTranslationSystemFallbackView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Product</Name>
			<DataField>Product</DataField>
			<DataSource>EcoResProductTranslationSystemFallbackView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SystemName</Name>
			<Label>@SCM:EcoResSystemProductName</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResProductTranslationSystemFallbackView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LanguageId</Name>
			<DataField>LanguageId</DataField>
			<DataSource>LanguageTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SystemDescription</Name>
			<Label>@SCM:EcoResSystemDescription</Label>
			<DataField>Description</DataField>
			<DataSource>EcoResProductTranslationSystemFallbackView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Name</Name>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
			<ViewMethod>productName</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Description</Name>
			<ExtendedDataType>EcoResDescription</ExtendedDataType>
			<ViewMethod>productDescription</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>