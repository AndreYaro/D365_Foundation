<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetTransactionLineView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetTransactionLineView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getTransactionCurrencyExpenseAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the SQL for view definition for TransactionCurrencyExpenseAmount field.
    /// </summary>
    /// <returns>
    ///     String value of SQL for view definition for TransactionCurrencyExpenseAmount field.
    /// </returns>
    private static str getTransactionCurrencyExpenseAmountSql()
    {
        DictView budgetTransactionLineView = new DictView(tableNum(BudgetTransactionLineView));

        str budgetTransactionLineDSName = budgetTransactionLineView.query().dataSourceTable(tablenum(BudgetTransactionLine)).name();

        str budgetType = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, BudgetType), FieldNameGenerationMode::WhereClause);
        str transactionCurrencyAmount = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, TransactionCurrencyAmount), FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(budgetType, SysComputedColumn::returnLiteral(BudgetType::Expense)),
            transactionCurrencyAmount,
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionCurrencyRevenueAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the SQL for view definition for TransactionCurrencyRevenueAmount field.
    /// </summary>
    /// <returns>
    ///     String value of SQL for view definition for TransactionCurrencyRevenueAmount field.
    /// </returns>
    private static str getTransactionCurrencyRevenueAmountSql()
    {
        DictView budgetTransactionLineView = new DictView(tableNum(BudgetTransactionLineView));

        str budgetTransactionLineDSName = budgetTransactionLineView.query().dataSourceTable(tablenum(BudgetTransactionLine)).name();

        str budgetType = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, BudgetType), FieldNameGenerationMode::WhereClause);
        str transactionCurrencyAmount = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, TransactionCurrencyAmount), FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(budgetType, SysComputedColumn::returnLiteral(BudgetType::Revenue)),
            SysComputedColumn::negative(transactionCurrencyAmount),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingCurrencyExpenseAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the SQL for view definition for AccountingCurrencyExpenseAmount field.
    /// </summary>
    /// <returns>
    ///     String value of SQL for view definition for AccountingCurrencyExpenseAmount field.
    /// </returns>
    private static str getAccountingCurrencyExpenseAmountSql()
    {
        DictView budgetTransactionLineView = new DictView(tableNum(BudgetTransactionLineView));

        str budgetTransactionLineDSName = budgetTransactionLineView.query().dataSourceTable(tablenum(BudgetTransactionLine)).name();

        str budgetType = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, BudgetType), FieldNameGenerationMode::WhereClause);
        str accountingCurrencyAmount = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, AccountingCurrencyAmount), FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(budgetType, SysComputedColumn::returnLiteral(BudgetType::Expense)),
            accountingCurrencyAmount,
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccountingCurrencyRevenueAmountSql</Name>
				<Source><![CDATA[
    /// <summary>
    ///     Gets the SQL for view definition for AccountingCurrencyRevenueAmount field.
    /// </summary>
    /// <returns>
    ///     String value of SQL for view definition for AccountingCurrencyRevenueAmount field.
    /// </returns>
    private static str getAccountingCurrencyRevenueAmountSql()
    {
        DictView budgetTransactionLineView = new DictView(tableNum(BudgetTransactionLineView));

        str budgetTransactionLineDSName = budgetTransactionLineView.query().dataSourceTable(tablenum(BudgetTransactionLine)).name();

        str budgetType = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, BudgetType), FieldNameGenerationMode::WhereClause);
        str accountingCurrencyAmount = budgetTransactionLineView.computedColumnString(budgetTransactionLineDSName, fieldStr(BudgetTransactionLine, AccountingCurrencyAmount), FieldNameGenerationMode::WhereClause);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(budgetType, SysComputedColumn::returnLiteral(BudgetType::Revenue)),
            SysComputedColumn::negative(accountingCurrencyAmount),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@SYS127777</Label>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetTransactionHeader</Name>
			<DataField>BudgetTransactionHeader</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionDate</Name>
			<DataField>Date</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerDimension</Name>
			<DataField>LedgerDimension</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionCurrency</Name>
			<DataField>TransactionCurrency</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TransactionCurrencyExpenseAmount</Name>
			<Label>@SYS305529</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getTransactionCurrencyExpenseAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TransactionCurrencyRevenueAmount</Name>
			<Label>@SYS305530</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>getTransactionCurrencyRevenueAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AccountingCurrencyExpenseAmount</Name>
			<Label>@SYS305531</Label>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<ViewMethod>getAccountingCurrencyExpenseAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AccountingCurrencyRevenueAmount</Name>
			<Label>@SYS305532</Label>
			<ExtendedDataType>AmountMST</ExtendedDataType>
			<ViewMethod>getAccountingCurrencyRevenueAmountSql</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionCurrencyAmount</Name>
			<DataField>TransactionCurrencyAmount</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrencyAmount</Name>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BudgetType</Name>
			<DataField>BudgetType</DataField>
			<DataSource>BudgetTransactionLine</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetTransactionLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetTransactionLine</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>