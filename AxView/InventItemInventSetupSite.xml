<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventItemInventSetupSite</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventItemInventSetupSite extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>stoppedCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines that stopped is coming from either the site specific when override is set or the default when override is not set.
    /// </summary>
    /// <returns>Stopped flag</returns>
    public static str stoppedCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupSiteSpecific), fieldStr(InventItemInventSetupWithDim, Override)),
                                               SysComputedColumn::comparisonLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupSiteSpecific), fieldStr(InventItemInventSetupWithDim, Stopped)),
            SysComputedColumn::returnField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupDefault), fieldStr(InventItemInventSetupWithDim, Stopped))
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>leadTimeCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines that LeadTime is coming from either the site specific when override is set or the default when override is not set.
    /// </summary>
    /// <returns>LeadTime value</returns>
    public static str leadTimeCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupSiteSpecific), fieldStr(InventItemInventSetupWithDim, Override)),
                                               SysComputedColumn::comparisonLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupSiteSpecific), fieldStr(InventItemInventSetupWithDim, LeadTime)),
            SysComputedColumn::returnField(tableStr(InventItemInventSetupSite), identifierStr(InventItemInventSetupDefault), fieldStr(InventItemInventSetupWithDim, LeadTime))
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentDatePlusLeadTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the current date plus lead time.
    /// </summary>
    /// <returns>Current date plus lead time.</returns>
    public static str currentDatePlusLeadTime()
    {
        return SysComputedColumn::getDateAdd(
                    SysComputedColumn::comparisonField(
                            literalStr(InventItemInventSetupSite),
                            literalStr(InventItemInventSetupDefault),
                            fieldStr(InventItemInventSetupWithDim, LeadTime)),
                    SysComputedColumn::getCurrentDate());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SCM:DefaultOrderSettingsPerSite</DeveloperDocumentation>
	<Tags>Obsolete</Tags>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventItemInventSetupDefault</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SiteId</Name>
			<DataField>SiteId</DataField>
			<DataSource>InventSite</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Stopped</Name>
			<ViewMethod>stoppedCalc</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>LeadTime</Name>
			<ExtendedDataType>LeadTimeInventDefault</ExtendedDataType>
			<ViewMethod>leadTimeCalc</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>CurrentDatePlusLeadTime</Name>
			<ViewMethod>currentDatePlusLeadTime</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventItemInventSetupDefault</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventItemInventSetupWithDim</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventSite</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventSite</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventItemInventSetupSiteSpecific</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventItemInventSetupWithDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>Override</Name>
										<Field>Override</Field>
										<Value>1</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ItemId</Field>
										<JoinDataSource>InventItemInventSetupDefault</JoinDataSource>
										<RelatedField>ItemId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>SiteId</Field>
										<JoinDataSource>InventSite</JoinDataSource>
										<RelatedField>InventSiteId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>InventItemInventSetupDefault</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>InventSiteId</Name>
						<Field>InventSiteId</Field>
						<Value>""</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>