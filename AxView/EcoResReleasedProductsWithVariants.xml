<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResReleasedProductsWithVariants</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResReleasedProductsWithVariants extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>searchNameCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the search name from either the variant (if exists) or the product.
    /// </summary>
    /// <returns>Stopped flag</returns>
    static str searchNameCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductDistinctProductVariant), fieldStr(EcoResProduct, SearchName)),
                                              SysComputedColumn::comparisonLiteral('')),

            SysComputedColumn::returnField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductDistinctProductVariant), fieldStr(EcoResProduct, SearchName)),
            SysComputedColumn::returnField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductInventTable), fieldStr(EcoResProduct, SearchName))
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>productCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product RecId from either the variant (if exists) or the item.
    /// </summary>
    /// <returns>Product RecId.</returns>
    static str productCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductDistinctProductVariant), fieldStr(EcoResProduct, RecId)),
                SysComputedColumn::comparisonLiteral(0)),

            SysComputedColumn::returnField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductDistinctProductVariant), fieldStr(EcoResProduct, RecId)),
            SysComputedColumn::returnField(tableStr(EcoResReleasedProductsWithVariants), identifierStr(EcoResProductInventTable), fieldStr(EcoResProduct, RecId))
            );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SCM:ReleasedProductsWithVariants</DeveloperDocumentation>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PmfProductType</Name>
			<DataField>PmfProductType</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductType</Name>
			<DataField>ProductType</DataField>
			<DataSource>EcoResProductInventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BOMUnitId</Name>
			<DataField>BOMUnitId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemGroupId</Name>
			<DataField>ItemGroupId</DataField>
			<DataSource>InventItemGroupItem</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductSearchName</Name>
			<DataField>SearchName</DataField>
			<DataSource>EcoResProductInventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VariantSearchName</Name>
			<DataField>SearchName</DataField>
			<DataSource>EcoResProductDistinctProductVariant</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventDimId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventDimCombination</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SearchName</Name>
			<ExtendedDataType>EcoResProductSearchName</ExtendedDataType>
			<ViewMethod>searchNameCalc</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Phantom</Name>
			<DataField>Phantom</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>Product</Name>
			<ExtendedDataType>EcoResProductRecId</ExtendedDataType>
			<ViewMethod>productCalc</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReleasedProduct</Name>
			<DataField>Product</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventItemGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventItemGroupItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProductInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResProduct</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResProduct</Name>
								<JoinRelationName>EcoResProduct</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDimCombination</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventDimCombination</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductDistinctProductVariant</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResProduct</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResDistinctProductVariant</Name>
										<JoinRelationName>EcoResDistinctProductVariant</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Item</Name>
								<JoinRelationName>Item</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>