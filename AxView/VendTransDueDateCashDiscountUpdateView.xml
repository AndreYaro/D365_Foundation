<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendTransDueDateCashDiscountUpdateView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendTransDueDateCashDiscountUpdateView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findForVendTrans</Name>
				<Source><![CDATA[
    public static VendTransDueDateCashDiscountUpdateView findForVendTrans(VendTrans _vendTrans)
    {
        VendTransDueDateCashDiscountUpdateView updateView;

        select firstonly updateView
            where updateView.VendTransRecId == _vendTrans.RecId;

        return updateView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentTerms</Name>
				<Source><![CDATA[
    public static str getPaymentTerms()
    {
        TableName viewName = viewstr(VendTransDueDateCashDiscountUpdateView);
        Map transTypeComparisonMap = SysComputedColumn::comparisionExpressionMap();

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Purch),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(VendInvoiceJour),
                fieldStr(VendInvoiceJour, Payment)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Vend),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(LedgerJournalTrans),
                fieldStr(LedgerJournalTrans, Payment)));

        return SysComputedColumn::switch(
            SysComputedColumn::comparisonField(
                viewName,
                identifierStr(VendTrans),
                fieldStr(VendTrans, TransType)),
            transTypeComparisonMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseDate</Name>
				<Source><![CDATA[
    public static str getBaseDate()
    {
        TableName viewName = viewstr(VendTransDueDateCashDiscountUpdateView);
        Map transTypeComparisonMap = SysComputedColumn::comparisionExpressionMap();

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Vend),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(LedgerJournalTrans),
                fieldStr(LedgerJournalTrans, CashDiscBaseDate)));

        return SysComputedColumn::switch(
            SysComputedColumn::comparisonField(
                viewName,
                identifierStr(VendTrans),
                fieldStr(VendTrans, TransType)),
            transTypeComparisonMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransType</Name>
			<DataField>TransType</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>VendTransPaymentTerms</Name>
			<ViewMethod>getPaymentTerms</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>VendTransBaseDate</Name>
			<ViewMethod>getBaseDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendorInvoicePaymentTerms</Name>
			<DataField>Payment</DataField>
			<DataSource>VendInvoiceJour</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendorInvoiceJournalPaymentTerms</Name>
			<DataField>Payment</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendorInvoiceJournalBaseDate</Name>
			<DataField>CashDiscBaseDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Voucher</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>LedgerVoucher</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1Copy1</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>InvoiceAccount</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1Copy1Copy1</Name>
								<Field>TransDate</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>InvoiceDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerJournalTrans</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendTrans</JoinDataSource>
								<RelatedField>VendTransId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>TransType</Name>
						<Field>TransType</Field>
						<Value>((TransType == LedgerTransType::Vend) || (TransType == LedgerTransType::Purch))</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>