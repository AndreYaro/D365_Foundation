<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResResourceAnalysisDayViewV2</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResResourceAnalysisDayViewV2 extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getResourceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource category record ID.
    /// </summary>
    /// <returns>Resource category record ID as string.</returns>
    private static str getResourceCategory()
    {
        str resourceDefaultResourceCategory = SysComputedColumn::returnField(
            tableStr  (ResResourceAnalysisDayViewV2),
            identifierStr (ResResourceCategoryView),
            fieldStr (ResResourceCategoryView, ResourceCategory));

        //If resource has no record on ResourceResourceCategorySetup table, then this
        //field will show the default team member rec ID.
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(resourceDefaultResourceCategory),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (DefaultResourceCategory), fieldStr (PSASchedRole, RecId)),
            SysComputedColumn::returnField(tableStr(ResResourceAnalysisDayViewV2),
                identifierStr (ResResourceCategoryView), fieldStr (ResResourceCategoryView, ResourceCategory)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource category ID.
    /// </summary>
    /// <returns>Resource category ID.</returns>
    private static str getResourceCategoryId()
    {
        str resourceDefaultResourceCategory = SysComputedColumn::returnField(
            tableStr (ResResourceAnalysisDayViewV2),
            identifierStr (ResResourceCategoryView),
            fieldStr (ResResourceCategoryView, ResourceCategory));

        //If resource has no record on ResourceResourceCategorySetup table, then this
        //field will show the default team member ID.
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(resourceDefaultResourceCategory),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (DefaultResourceCategory), fieldStr(PSASchedRole, RoleId)),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (ResResourceCategoryView), fieldStr (ResResourceCategoryView, ResourceCategoryId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceCategoryDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource category description.
    /// </summary>
    /// <returns>Resource category description.</returns>
    private static str getResourceCategoryDescription()
    {
        str resourceDefaultResourceCategory = SysComputedColumn::returnField(
            tableStr (ResResourceAnalysisDayViewV2),
            identifierStr (ResResourceCategoryView),
            fieldStr (ResResourceCategoryView, ResourceCategory));

        //If resource has no record on ResourceResourceCategorySetup table, then this
        //field will show the default team member Description.
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(resourceDefaultResourceCategory),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (DefaultResourceCategory), fieldStr(PSASchedRole, Description)),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (ResourceRole), fieldStr (PSASchedRole, Description)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRoleEffectiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource role effective date.
    /// </summary>
    /// <returns>Resource role effective date in string.</returns>
    private static str getRoleEffectiveDate()
    {
        str resourceDefaultResourceCategory = SysComputedColumn::returnField(
            tableStr (ResResourceAnalysisDayViewV2),
            identifierStr (ResResourceCategoryView),
            fieldStr (ResResourceCategoryView, ResourceCategory));

        //If resource has no record on ResourceResourceCategorySetup table, then this
        //field will show dateNull()
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(resourceDefaultResourceCategory),
            SysComputedColumn::returnLiteral(dateNull()),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (ResResourceCategoryView), fieldStr (ResResourceCategoryView, ValidFrom)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRoleExpirationDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource role expiration date.
    /// </summary>
    /// <returns>Resource role expiration date in string.</returns>
    private static str getRoleExpirationDate()
    {
        str resourceDefaultResourceCategory = SysComputedColumn::returnField(
            tableStr (ResResourceAnalysisDayViewV2),
            identifierStr (ResResourceCategoryView),
            fieldStr (ResResourceCategoryView, ResourceCategory));

        //If resource has no record on ResourceResourceCategorySetup table, then this
        //field will show dateMaxl()
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(resourceDefaultResourceCategory),
            SysComputedColumn::returnLiteral(dateMax()),
            SysComputedColumn::returnField(tableStr (ResResourceAnalysisDayViewV2),
                identifierStr (ResResourceCategoryView), fieldStr (ResResourceCategoryView, ValidTo)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LegalEntity</Name>
			<DataField>LegalEntity</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecipientCompany</Name>
			<DataField>RecipientCompany</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceCompany</Name>
			<DataField>SourceCompany</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Capacity</Name>
			<DataField>Capacity</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>HardAssigned</Name>
			<DataField>HardAssigned</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>HardBooked</Name>
			<DataField>HardBooked</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>HardLocked</Name>
			<DataField>HardLocked</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SoftLocked</Name>
			<DataField>SoftLocked</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Timeframe</Name>
			<DataField>Timeframe</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EffectiveDate</Name>
			<DataField>EffectiveDate</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ExpirationDate</Name>
			<DataField>ExpirationDate</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Calendar</Name>
			<DataField>Calendar</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ResourceCategoryId</Name>
			<ExtendedDataType>PSASchedRoleId</ExtendedDataType>
			<ViewMethod>getResourceCategoryId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>ResourceCategory</Name>
			<ExtendedDataType>ResourceCategoryRecId</ExtendedDataType>
			<ViewMethod>getResourceCategory</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ResourceCategoryDescription</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<ViewMethod>getResourceCategoryDescription</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>RoleEffectiveDate</Name>
			<Label>@Res:RoleEffectiveDate</Label>
			<ViewMethod>getRoleEffectiveDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>RoleExpirationDate</Name>
			<Label>@Res:RoleExpirationDate</Label>
			<ViewMethod>getRoleExpirationDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceName</Name>
			<DataField>ResourceName</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Remaining</Name>
			<DataField>Remaining</DataField>
			<DataSource>ResCapacityUtilizationDayViewV2</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ResCapacityUtilizationDayViewV2</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ResCapacityUtilizationDayViewV2</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ResResourceCategoryView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ResResourceCategoryView</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ResourceRole</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PSASchedRole</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ResourceCategory</Field>
										<JoinDataSource>ResResourceCategoryView</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ValidTo</Name>
								<Field>ValidTo</Field>
								<Value>(ResCapacityUtilizationDayViewV2.Timeframe &lt;= ValidTo)</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>ValidFrom</Name>
								<Field>ValidFrom</Field>
								<Value>(ResCapacityUtilizationDayViewV2.Timeframe &gt;= ValidFrom)</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Resource</Field>
								<JoinDataSource>ResCapacityUtilizationDayViewV2</JoinDataSource>
								<RelatedField>Resource</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RecipientCompany</Field>
								<JoinDataSource>ResCapacityUtilizationDayViewV2</JoinDataSource>
								<RelatedField>RecipientCompany</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultResourceCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PSASchedRole</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DefaultResourceCategory</Name>
								<Field>DefaultResourceCategory</Field>
								<Value>FalseTrue::True</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecipientCompany</Field>
								<JoinDataSource>ResCapacityUtilizationDayViewV2</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>