<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityCDSView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductEntityCDSView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productNumberCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the product number, which is the product variant's display number if the record has a value.
    /// Otherwise the product number is the display product number of the distinct product.
    /// </summary>
    /// <returns>The product number.</returns>
    /// <remarks>Even though the <c>EcoResProductCategory</c> associates categories with distinct products or product master (and not
    /// distinct product variants), the current entity needs to have the view of all distinct product variants that are associated through
    /// their master to a category.</remarks>
    public static str productNumberCalc()
    {
        str entityStr = tableStr(EcoResProductCDSCategoryAssignmentEntity);

        str productVariantNumberFieldName = fieldStr(EcoResProductCDSCategoryView, ProductVariantNumber);
        str productNumberFieldName = fieldStr(EcoResProductCDSCategoryView, ProductNumber);

        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(entityStr, identifierStr(EcoResProductCDSCategoryView), productVariantNumberFieldName),
                                                  SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnField(entityStr, identifierStr(EcoResProductCDSCategoryView), productVariantNumberFieldName),
            SysComputedColumn::returnField(entityStr, identifierStr(EcoResProductCDSCategoryView), productNumberFieldName));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<Label>@SCM:EcoResProductEntityCDSView</Label>
	<TitleField1>ProductNumber</TitleField1>
	<TitleField2>Category</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ProductNumber</Name>
			<ExtendedDataType>EcoResProductDisplayProductNumber</ExtendedDataType>
			<ViewMethod>productNumberCalc</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Category</Name>
			<DataField>Category</DataField>
			<DataSource>EcoResProductCDSCategoryView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes>
		<AxViewIndex>
			<Name>ProductIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxViewIndexField>
					<DataField>ProductNumber</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResProductCDSCategoryView</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResProductCDSCategoryView</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>