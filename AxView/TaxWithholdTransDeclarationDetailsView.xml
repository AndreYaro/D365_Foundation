<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxWithholdTransDeclarationDetailsView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxWithholdTransDeclarationDetailsView extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the invoice date.
    /// </summary>
    /// <returns>A calculated field expression; the invoice date.</returns>
    private static str invoiceDate()
    {
        List comparisonExpressionList = new List(Types::Container);

        TableName viewName = tableStr(TaxWithholdTransDeclarationDetailsView);
        str custInvoiceDateField = SysComputedColumn::returnField(viewName, 'CustTrans_Inv', fieldStr(CustTrans, TransDate));
        str vendInvoiceDateField = SysComputedColumn::returnField(viewName, 'VendTrans_Inv', fieldStr(VendTrans, TransDate));

        str emptyDateLiteral = SysComputedColumn::comparisonLiteral(dateNull());

        //cust invoice
        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(custInvoiceDateField, Types::Date),
            custInvoiceDateField]);

        //vend invoice
        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(vendInvoiceDateField, Types::Date),
            vendInvoiceDateField]);

        return ViewComputedColumnUtil::switchStrictOrder('', comparisonExpressionList, emptyDateLiteral);
    }

]]></Source>
			</Method>
			<Method>
				<Name>counterpartyParty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates counterparty record id from DirParty table.
    /// </summary>
    /// <returns>A calculated field expression; party record id</returns>
    private static str counterpartyParty()
    {
        TableName viewName = tableStr(TaxWithholdTransDeclarationDetailsView);

        List expressionList = SysComputedColumn::comparisionExpressionList();

        //master data
        expressionList.addEnd(SysComputedColumn::returnField(viewName, 'CustTable_Inv', fieldStr(CustTable, Party)));
        expressionList.addEnd(SysComputedColumn::returnField(viewName, 'VendTable_Inv', fieldStr(VendTable, Party)));

        return ViewComputedColumnUtil::isNotEmptyOrNullSwitch(expressionList, Types::Int64);
    }

]]></Source>
			</Method>
			<Method>
				<Name>paymentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the payment date.
    /// </summary>
    /// <returns>A calculated field expression; the payment date.</returns>
    private static str paymentDate()
    {
        List comparisonExpressionList = new List(Types::Container);

        TableName viewName = tableStr(TaxWithholdTransDeclarationDetailsView);
        str custPaymentDateField = SysComputedColumn::returnField(viewName, 'CustTrans_Paym', fieldStr(CustTrans, TransDate));
        str vendPaymentDateField = SysComputedColumn::returnField(viewName, 'VendTrans_Paym', fieldStr(VendTrans, TransDate));

        str emptyDateLiteral = SysComputedColumn::comparisonLiteral(dateNull());

        //cust invoice
        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(custPaymentDateField, Types::Date),
            custPaymentDateField]);

        //vend invoice
        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(vendPaymentDateField, Types::Date),
            vendPaymentDateField]);

        return ViewComputedColumnUtil::switchStrictOrder('', comparisonExpressionList, emptyDateLiteral);
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxWithholdTransDirection</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the WHT transaction direction - Output or Input.
    /// </summary>
    /// <returns>A calculated field expression; the enum WHTOperationDirection value.</returns>
    private static str taxWithholdTransDirection()
    {
        TableName viewName = tableStr(TaxWithholdTransDeclarationDetailsView);
        str custTransRecId = SysComputedColumn::returnField(viewName, 'CustTrans_Inv', fieldStr(CustTrans, RecId));
        str vendTransRecId = SysComputedColumn::returnField(viewName, 'VendTrans_Inv', fieldStr(VendTrans, RecId));

        List comparisonExpressionList = new List(Types::Container);
        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(custTransRecId, Types::String),
            SysComputedColumn::comparisonLiteral(enum2int(WHTOperationDirection::Input))]);

        comparisonExpressionList.addEnd([
            ViewComputedColumnUtil::isNotEmptyOrNull(vendTransRecId, Types::String),
            SysComputedColumn::comparisonLiteral(enum2int(WHTOperationDirection::Output))]);

        return ViewComputedColumnUtil::switchStrictOrder(
            '',
            comparisonExpressionList,
            SysComputedColumn::nullExpression());
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdPeriod</Name>
			<DataField>TaxWithholdPeriod</DataField>
			<DataSource>TaxWithholdPeriodHead_TH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBranchCode</Name>
			<DataField>Code</DataField>
			<DataSource>TaxBranchDimensionAttributeValueSetItemView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBranchName</Name>
			<DataField>Name</DataField>
			<DataSource>TaxBranchDimensionAttributeValueSetItemView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBranchHeadOffice</Name>
			<DataField>HeadOffice</DataField>
			<DataSource>TaxBranchDimensionAttributeValueSetItemView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TaxWithholdTransDirection</Name>
			<ViewMethod>taxWithholdTransDirection</ViewMethod>
			<EnumType>WHTOperationDirection</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdCode</Name>
			<DataField>TaxWithholdCode</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdGroup</Name>
			<DataField>TaxWithholdGroup</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdItemGroup</Name>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>TaxWithholdItemGroupHeading_TH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdRate</Name>
			<DataField>TaxWithholdValue</DataField>
			<DataSource>TaxWithholdData</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdRevenueCode</Name>
			<DataField>TaxWithholdRevenueCode</DataField>
			<DataSource>TaxWithholdRevenueTable_TH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdRevenueDesc</Name>
			<DataField>Description</DataField>
			<DataSource>TaxWithholdRevenueTable_TH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerJournalTrans</Name>
			<DataField>LedgerJournalTrans</DataField>
			<DataSource>TaxWithholdTransExtensionTH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceNumber</Name>
			<DataField>Invoice</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceVoucher</Name>
			<DataField>VoucherInvoice</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>InvoiceDate</Name>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
			<ViewMethod>invoiceDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceReceiptNumber</Name>
			<DataField>ReceiptNumber</DataField>
			<DataSource>TaxWithholdTransExtensionTH</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PaymentVoucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>PaymentDate</Name>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
			<ViewMethod>paymentDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdSlipNum</Name>
			<DataField>TaxWithholdSlipNum_TH</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SettlementVoucher</Name>
			<DataField>SettlementVoucher</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>CounterpartyParty</Name>
			<Label>@TaxDeclarationDetails:CounterpartyPartyRecordID</Label>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<ViewMethod>counterpartyParty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdCurrency</Name>
			<DataField>TaxWithholdCurrency</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdBaseAmount</Name>
			<DataField>TaxWithholdBaseAmount</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdAmount</Name>
			<DataField>TaxWithholdAmount</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTaxWithholdAmount</Name>
			<DataField>TaxTaxWithholdAmount</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdExemptedAmount</Name>
			<DataField>TaxExemptedAmount</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceCurrency</Name>
			<DataField>InvoiceCurrency</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GrossAmountInvCur</Name>
			<DataField>InvoiceAmount</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Settled</Name>
			<DataField>Settled</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdVendorType_TH</Name>
			<DataField>TaxWithholdVendorType_TH</DataField>
			<DataSource>VendTable_Inv</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>GrossAmountInTaxWithholdCur</Name>
			<DataField>InvoiceAmountInTaxWithholdCur</DataField>
			<DataSource>TaxWithholdTrans</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TaxWithholdTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TaxWithholdTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxWithholdData</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>TaxWithholdData</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdPeriodHead_TH</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdPeriodHead_TH</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdGroupHeading</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdGroupHeading</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdItemGroupHeading_TH</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdItemGroupHeading_TH</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxWithholdRevenueTable_TH</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>TaxWithholdRevenueTable_TH</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdTransExtensionTH</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxWithholdTransExtensionTH</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LedgerJournalTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>LedgerJournalTrans</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>TaxBranchDimensionAttributeValueSetItemView</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>TaxBranchDimensionAttributeValueSetItemView</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>DefaultDimension</Field>
												<JoinDataSource>LedgerJournalTrans</JoinDataSource>
												<RelatedField>DimensionAttributeValueSet</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTrans_Inv</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>VendTable_Inv</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>VendTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>VendTransInvoiceId</Field>
								<JoinDataSource>TaxWithholdTrans</JoinDataSource>
								<JoinRelationName>VendTransInvoice</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTrans_Paym</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendTrans</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>VendTransPaymId</Field>
								<JoinDataSource>TaxWithholdTrans</JoinDataSource>
								<JoinRelationName>VendTransPaym</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTrans_Inv</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustTable_Inv</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustTransInvoiceId</Field>
								<JoinDataSource>TaxWithholdTrans</JoinDataSource>
								<JoinRelationName>CustTrans</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTrans_Paym</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTrans</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustTransPaymId</Field>
								<JoinDataSource>TaxWithholdTrans</JoinDataSource>
								<JoinRelationName>CustTrans_CustTransPaymId</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>