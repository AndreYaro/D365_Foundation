<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankLGSalesQuotation</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankLGSalesQuotation extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountType</Name>
				<Source><![CDATA[
        public static str accountType()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(
                    tablestr(BankLGSalesQuotation),
                    identifierstr(SalesQuotationTable),
                    fieldstr(SalesQuotationTable, CustAccount)),
                SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnLiteral(BankLGAccountType::BusinessAccount),
            SysComputedColumn::returnLiteral(BankLGAccountType::Customer));
    }

]]></Source>
			</Method>
			<Method>
				<Name>orderAccount</Name>
				<Source><![CDATA[
        public static str orderAccount()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(
                    tablestr(BankLGSalesQuotation),
                    identifierstr(SalesQuotationTable),
                    fieldstr(SalesQuotationTable, CustAccount)),
                SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnField(
                tablestr(BankLGSalesQuotation),
                identifierstr(SalesQuotationTable),
                fieldstr(SalesQuotationTable, BusRelAccount)),
            SysComputedColumn::returnField(
                tablestr(BankLGSalesQuotation),
                identifierstr(SalesQuotationTable),
                fieldstr(SalesQuotationTable, CustAccount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>originType</Name>
				<Source><![CDATA[
        public static str originType()
    {
        Map     comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(QuotationType::Sales),
            SysComputedColumn::returnLiteral(BankLGOriginType::SalesQuotation));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(QuotationType::Project),
            SysComputedColumn::returnLiteral(BankLGOriginType::ProjectQuotation));

        return SysComputedColumn::switch(
                    SysComputedColumn::comparisonField(
                        tablestr(BankLGSalesQuotation),
                        identifierstr(SalesQuotationTable),
                        fieldstr(SalesQuotationTable, QuotationType)),
                    comparisonExpressionMap,
                    SysComputedColumn::returnLiteral(BankLGOriginType::None));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankDocument</ConfigurationKey>
	<DeveloperDocumentation>@SYS318010</DeveloperDocumentation>
	<Label>@SYS80163</Label>
	<TitleField1>DocumentId</TitleField1>
	<TitleField2>CurrencyCode</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DocumentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OriginType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Guarantee</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Guarantee</Name>
			<DataField>Guarantee</DataField>
			<DataSource>BankLGGuaranteeSalesQuotation</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentId</Name>
			<DataField>SalesQuotation</DataField>
			<DataSource>BankLGGuaranteeSalesQuotation</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>OrderAccount</Name>
			<ConfigurationKey>SmmCRM</ConfigurationKey>
			<ExtendedDataType>ExternalAccount</ExtendedDataType>
			<ViewMethod>orderAccount</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>AccountType</Name>
			<ViewMethod>accountType</ViewMethod>
			<EnumType>BankLGAccountType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>OriginType</Name>
			<ViewMethod>originType</ViewMethod>
			<EnumType>BankLGOriginType</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BankLGGuaranteeSalesQuotation</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BankLGGuaranteeSalesQuotation</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesQuotationTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SalesQuotationTable</Table>
						<DataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Relation</Name>
								<JoinDataSource>BankLGGuaranteeSalesQuotation</JoinDataSource>
								<JoinRelationName>SalesQuotationTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>