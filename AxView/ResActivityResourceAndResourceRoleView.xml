<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResActivityResourceAndResourceRoleView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResActivityResourceAndResourceRoleView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getValidFromDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get resource valid from date.
    /// </summary>
    /// <returns>Valid from date in string.</returns>
    private static str getValidFromDateTime()
    {
        str activityResourceRecId = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResAssignmentResourcesViewV2),
            fieldStr(ResAssignmentResourcesViewV2, ActivityResource));

        str defaultRoleRecId = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResResourceCategoryView),
            fieldStr(ResResourceCategoryView, RecId));

        str defaultRoleValidFrom = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResResourceCategoryView),
            fieldStr(ResResourceCategoryView, ValidFrom));

        str minDateTime = '\'' + AVUtil::getDateTimeStr(DateTimeUtil::minValue()) + '\'';

        List listConditions = new List(Types::String);

        listConditions.addEnd(SysComputedColumn::equalExpression(
            activityResourceRecId,
            SysComputedColumn::comparisonLiteral(0)));

        listConditions.addEnd(SysComputedColumn::notEqualExpression(
            defaultRoleRecId,
            SysComputedColumn::comparisonLiteral(0)));

        return SysComputedColumn::if(SysComputedColumn::and(listConditions), defaultRoleValidFrom, minDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getValidToDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get resource valid to date.
    /// </summary>
    /// <returns>Valid to date in string.</returns>
    private static str getValidToDateTime()
    {
        str activityResourceRecId = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResAssignmentResourcesViewV2),
            fieldStr(ResAssignmentResourcesViewV2, ActivityResource));

        str defaultRoleRecId = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResResourceCategoryView),
            fieldStr(ResResourceCategoryView, RecId));

        str defaultRoleValidTo = SysComputedColumn::returnField(
            tableStr(ResActivityResourceAndResourceRoleView),
            identifierstr(ResResourceCategoryView),
            fieldStr(ResResourceCategoryView, ValidTo));

        str maxDateTime = '\'' + AVUtil::getDateTimeStr(DateTimeUtil::maxValue())  + '\'';

        List listConditions = new List(Types::String);

        listConditions.addEnd(SysComputedColumn::equalExpression(
            activityResourceRecId,
            SysComputedColumn::comparisonLiteral(0)));

        listConditions.addEnd(SysComputedColumn::notEqualExpression(
            defaultRoleRecId,
            SysComputedColumn::comparisonLiteral(0)));

        return SysComputedColumn::if(SysComputedColumn::and(listConditions), 
            strFmt('CAST(FLOOR(CAST(%1 as FLOAT)) as DateTime) + \' 23:59:59.000\'', defaultRoleValidTo),
            maxDateTime);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResourceCategoryId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get resource role ID.
    /// </summary>
    /// <returns>Resource role ID.</returns>
    private static str getResourceCategoryId()
    {
        str activityResourceRoleId = SysComputedColumn::returnField(
                tableStr(ResActivityResourceAndResourceRoleView),
                identifierstr(PSASchedRole),
                fieldStr(PSASchedRole, RoleId));

        str defaultResourceRoleId = SysComputedColumn::returnField(
                tableStr(ResActivityResourceAndResourceRoleView),
                identifierstr(ResResourceCategoryView),
                fieldStr(ResResourceCategoryView, ResourceCategoryId));

        str partition = int642Str(getCurrentPartitionRecId());
            
        str resourceSourceCompanyId = SysComputedColumn::returnField(
                tableStr(ResActivityResourceAndResourceRoleView),
                identifierstr(ResAssignmentResourcesViewV2),
                fieldStr(ResAssignmentResourcesViewV2, SourceCompany));
        
        str isTrue = int2Str(enum2int(NoYes::Yes));

        return strFmt(
            @'CASE WHEN %1 is NULL AND %2 is NULL THEN 
            (select RoleId from PSASchedRole where Partition = %3 and DataAreaId = %4 and DefaultResourceCategory = %5)
            WHEN %1 is NULL THEN %2
            ELSE %1 END',
            activityResourceRoleId,
            defaultResourceRoleId,
            partition,
            resourceSourceCompanyId,
            isTrue);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Query>ResActivityResourceAndResourceRoleQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityResource</Name>
			<DataField>ActivityResource</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Generic</Name>
			<DataField>Generic</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecipientCompany</Name>
			<DataField>RecipientCompany</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceCompany</Name>
			<DataField>SourceCompany</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceLegalEntity</Name>
			<DataField>SourceLegalEntity</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Type</Name>
			<DataField>Type</DataField>
			<DataSource>ResAssignmentResourcesViewV2</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>ValidFromDateTime</Name>
			<ExtendedDataType>ValidFromDateTime</ExtendedDataType>
			<ViewMethod>getValidFromDateTime</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>ValidToDateTime</Name>
			<ExtendedDataType>ValidToDateTime</ExtendedDataType>
			<ViewMethod>getValidToDateTime</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ResourceCategoryId</Name>
			<ExtendedDataType>PSASchedRoleId</ExtendedDataType>
			<ViewMethod>getResourceCategoryId</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>