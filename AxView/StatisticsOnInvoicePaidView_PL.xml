<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>StatisticsOnInvoicePaidView_PL</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class StatisticsOnInvoicePaidView_PL extends common
{
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>custVendGroup</Name>
				<Source><![CDATA[
    private static str custVendGroup()
    {
        TableName viewName = tableStr(StatisticsOnInvoicePaidView_PL);
        str dataSourceName = identifierStr(StatisticsOnInvoicePaymentScheduleView);
        str type = SysComputedColumn::returnField(
            viewName,
            dataSourceName,
            fieldStr(StatisticsOnInvoicePaymentScheduleView, Type));

        str vendGroup = SysComputedColumn::returnField(
            viewName,
            dataSourceName,
            fieldStr(StatisticsOnInvoicePaymentScheduleView, VendGroupId));

        str custGroup = SysComputedColumn::returnField(
            viewName,
            dataSourceName,
            fieldStr(StatisticsOnInvoicePaymentScheduleView, CustGroupId));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(type, SysComputedColumn::comparisonLiteral(LedgerJournalACType::Vend)),
            vendGroup,
            custGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDateMaxDueDateEndYearDiff</Name>
				<Source><![CDATA[
    private static str transDateMaxDueDateEndYearDiff()
    {
        TableName viewName = tableStr(StatisticsOnInvoicePaidView_PL);
        str dataSourceName = identifierStr(StatisticsOnInvoicePaymentScheduleView);
        str dueDate = SysComputedColumn::returnField(
            viewName,
            dataSourceName,
            fieldStr(StatisticsOnInvoicePaymentScheduleView, DueDate));

        str field = SysComputedColumn::returnField(
            viewName,
            dataSourceName,
            fieldStr(StatisticsOnInvoicePaymentScheduleView, TransDate));

        return SysComputedColumn::if(
            SysComputedColumn::or2(
                SysComputedColumn::equalExpression(dueDate, SysComputedColumn::returnLiteral(dateNull())),
                SysComputedColumn::equalExpression(field, SysComputedColumn::returnLiteral(dateNull()))),
            SysComputedColumn::nullExpression(),
            SysComputedColumn::if(
                SysComputedColumn::compareExpressions(field, '>', strFmt('DATEFROMPARTS(YEAR(%1),12,31)', dueDate)),
                SysComputedColumn::getDateDiff(dueDate, strFmt('DATEFROMPARTS(YEAR(%1),12,31)', dueDate)),
                SysComputedColumn::getDateDiff(dueDate, field)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountZero</Name>
				<Source><![CDATA[
    private static str amountZero()
    {
        return SysComputedColumn::returnLiteral(0.00);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateNull</Name>
				<Source><![CDATA[
    private static str dateNull()
    {
        return SysComputedColumn::returnLiteral(dateNull());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getReportDate</Name>
				<Source><![CDATA[
    private static str getReportDate()
    {
        str invoiceDate = SysComputedColumn::returnField(
            tableStr(StatisticsOnInvoicePaidView_PL),
            identifierStr(StatisticsOnInvoicePaymentScheduleView),
            fieldStr(StatisticsOnInvoicePaymentScheduleView, InvoiceDate));

        str documentDate = SysComputedColumn::returnField(
            tableStr(StatisticsOnInvoicePaidView_PL),
            identifierStr(StatisticsOnInvoicePaymentScheduleView),
            fieldStr(StatisticsOnInvoicePaymentScheduleView, DocumentDate));

        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(
                documentDate,
                SysComputedColumn::returnLiteral(dateNull())),
            documentDate,
            invoiceDate);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>PL</CountryRegionCodes>
	<DeveloperDocumentation>@StatisticsOnInvoicesReport:PaymentTermReportPaidInvoicesDevDoc</DeveloperDocumentation>
	<Label>@StatisticsOnInvoicesReport:PaymentTermReportPaidInvoices</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>InvoiceId</TitleField1>
	<TitleField2>InvoiceDate</TitleField2>
	<Visibility>Internal</Visibility>
	<AosAuthorization>Read</AosAuthorization>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceId</Name>
			<DataField>InvoiceId</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceVoucher</Name>
			<DataField>InvoiceVoucher</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SettlementDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PostingProfile</Name>
			<DataField>PostingProfile</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DueDate</Name>
			<DataField>DueDate</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceDate</Name>
			<DataField>InvoiceDate</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Amount</Name>
			<DataField>PaymentAmountAccounting</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>TransDateDueDateDiff</Name>
			<Label>@SYS4006472</Label>
			<ViewMethod>transDateMaxDueDateEndYearDiff</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceAccount</Name>
			<DataField>InvoiceAccount</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>AmountZero</Name>
			<ViewMethod>amountZero</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>InvoiceAmount</Name>
			<ViewMethod>amountZero</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>ReportDate</Name>
			<ViewMethod>getReportDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DocumentDate</Name>
			<DataField>DocumentDate</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerJournalACType</Name>
			<DataField>Type</DataField>
			<DataSource>StatisticsOnInvoicePaymentScheduleView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CustVendGroupId</Name>
			<ViewMethod>custVendGroup</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>StatisticsOnInvoicePaymentScheduleView</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>StatisticsOnInvoicePaymentScheduleView</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>