<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductionFlowCosting1_Variance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanProductionFlowCosting1_Variance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>costClassification</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the cost classification.
    /// </summary>
    /// <returns>
    /// The string holding the <c>CostClassification</c> enum value.
    /// </returns>
    public static str costClassification()
    {
        TableName       viewName                         = tableStr(LeanProductionFlowCosting1_Variance);
        Map             comparisonExpressionMap          = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(InventCostTransVariance), fieldStr(InventCostTransVariance, VarianceType)),
                SysComputedColumn::comparisonLiteral(enum2int(InventCostVarianceType::ProdPrice))),
            SysComputedColumn::returnLiteral(enum2int(CostClassification::PriceVariance)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(InventCostTransVariance), fieldStr(InventCostTransVariance, VarianceType)),
                SysComputedColumn::comparisonLiteral(enum2int(InventCostVarianceType::Quantity))),
            SysComputedColumn::returnLiteral(enum2int(CostClassification::QuantityVariance)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(InventCostTransVariance), fieldStr(InventCostTransVariance, VarianceType)),
                SysComputedColumn::comparisonLiteral(enum2int(InventCostVarianceType::Substitution))),
            SysComputedColumn::returnLiteral(enum2int(CostClassification::SubstitutionVariance)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(InventCostTransVariance), fieldStr(InventCostTransVariance, VarianceType)),
                SysComputedColumn::comparisonLiteral(enum2int(InventCostVarianceType::LotSize))),
            SysComputedColumn::returnLiteral(enum2int(CostClassification::LotSizeVariance)));

        comparisonExpressionMap.insert(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(viewName, tableStr(InventCostTransVariance), fieldStr(InventCostTransVariance, VarianceType)),
                SysComputedColumn::comparisonLiteral(enum2int(InventCostVarianceType::Rounding))),
            SysComputedColumn::returnLiteral(enum2int(CostClassification::RoundingVariance)));

        return SysComputedColumn::switch(
            '',
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SYS4009394</DeveloperDocumentation>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransRefId</Name>
			<DataField>TransRefId</DataField>
			<DataSource>Costing</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Amount</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>CostAmount</DataField>
			<DataSource>InventCostTransVariance</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>CostClassification</Name>
			<ViewMethod>costClassification</ViewMethod>
			<EnumType>CostClassification</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VarianceType</Name>
			<DataField>VarianceType</DataField>
			<DataSource>InventCostTransVariance</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>Costing</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LeanProductionFlowCosting</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Reference</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LeanProductionFlowReference</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PlanReference</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PlanReference</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CostTrans</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>InventCostTrans</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>InventCostTransVariance</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>InventCostTransVariance</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges>
													<AxQuerySimpleDataSourceRange>
														<Name>Split</Name>
														<Field>Split</Field>
														<Value>No</Value>
													</AxQuerySimpleDataSourceRange>
												</Ranges>
												<FetchMode>OneToN</FetchMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>RecId</Name>
														<Field>RecId</Field>
														<JoinDataSource>CostTrans</JoinDataSource>
														<RelatedField>InventCostTransRefRecId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>CostTransRefType</Name>
												<Field>CostTransRefType</Field>
												<Value>ProductionFlow</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>CostTransState</Name>
												<Field>CostTransState</Field>
												<Value>Financial</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<FetchMode>OneToN</FetchMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>Voucher</Name>
												<Field>Voucher</Field>
												<JoinDataSource>Costing</JoinDataSource>
												<RelatedField>Voucher</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>PlanName</Name>
												<Field>PlanName</Field>
												<JoinDataSource>PlanReference</JoinDataSource>
												<RelatedField>TransRefId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<FetchMode>OneToN</FetchMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>PlanReference</Name>
										<Field>PlanReference</Field>
										<JoinDataSource>Reference</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>LeanProductionFlowReference</Name>
								<Field>LeanProductionFlowReference</Field>
								<JoinDataSource>Costing</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy>
					<AxQuerySimpleGroupByField>
						<Name>TransRefId</Name>
						<DataSource>Costing</DataSource>
						<Field>TransRefId</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>VarianceType</Name>
						<DataSource>InventCostTransVariance</DataSource>
						<Field>VarianceType</Field>
					</AxQuerySimpleGroupByField>
				</GroupBy>
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>