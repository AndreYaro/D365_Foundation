<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransDeclarationDetailsNoAdjustmentView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxTransDeclarationDetailsNoAdjustmentView extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCreditNote</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the credit note flag to the view transaction based on the data of the current tax transaction's original document.
    /// </summary>
    /// <returns>A calculated field expression; returns 'Yes' if the view transaction's original document belongs to the credit note; 'No' otherwise.</returns>
    private static str isCreditNote()
    {
        return TaxTransDeclarationViewHelper::isCreditNote(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxTransCreditNote</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the credit note flag to the view transaction based on the data of the current tax transaction.
    /// </summary>
    /// <returns>A calculated field expression; returns 'Yes' if the tax transaction belongs to the credit note; 'No' otherwise.</returns>
    private static str isTaxTransCreditNote()
    {
        return TaxTransDeclarationViewHelper::isTaxTransCreditNote(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the invoice number found in cust/vend/ledger transaction.
    /// </summary>
    /// <returns>A calculated field expression; the invoice number.</returns>
    private static str invoice()
    {
        return TaxTransDeclarationViewHelper::invoice(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settledInvoice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the invoice which has been settled by the current settlment transaction (if the tax trans belongs to such transaction)
    /// </summary>
    /// <returns>A calculated field expression; the settled invoice number.</returns>
    private static str settledInvoice()
    {
        return TaxTransDeclarationViewHelper::settledInvoice(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settledInvoiceTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines TransDate of any TaxTrans record related to the invoice which has been settled by the current settlment transaction (if the tax trans belongs to such transaction)
    /// </summary>
    /// <returns>A calculated field expression; TransDate of TaxTrans related to the settled invoice.</returns>
    private static str settledInvoiceTransDate()
    {
        return TaxTransDeclarationViewHelper::settledInvoiceTransDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settledInvoiceVatDueDate_W</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines VatDueDate_W of any TaxTrans record related to the invoice which has been settled by the current settlment transaction (if the tax trans belongs to such transaction)
    /// </summary>
    /// <returns>A calculated field expression; VatDueDate_W of TaxTrans related to the settled invoice.</returns>
    private static str settledInvoiceVatDueDate_W()
    {
        return TaxTransDeclarationViewHelper::settledInvoiceVatDueDate_W(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settledInvoiceInvoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines InvoiceDate of any TaxTrans record related to the invoice which has been settled by the current settlment transaction (if the tax trans belongs to such transaction)
    /// </summary>
    /// <returns>A calculated field expression; InvoiceDate of TaxTrans related to the settled invoice.</returns>
    private static str settledInvoiceInvoiceDate()
    {
        return TaxTransDeclarationViewHelper::settledInvoiceInvoiceDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>settledInvoiceDocumentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines DocumentDate of any TaxTrans record related to the invoice which has been settled by the current settlment transaction (if the tax trans belongs to such transaction)
    /// </summary>
    /// <returns>A calculated field expression; DocumentDate of TaxTrans related to the settled invoice.</returns>
    private static str settledInvoiceDocumentDate()
    {
        return TaxTransDeclarationViewHelper::settledInvoiceDocumentDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the document number found in cust/vend/ledger transaction or in a linked document.
    /// </summary>
    /// <returns>A calculated field expression; the document number.</returns>
    private static str documentNum()
    {
        return TaxTransDeclarationViewHelper::documentNum(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the document type which the tax transaction is linked to.
    /// </summary>
    /// <returns>A calculated field expression; the value of <c>TaxDeclarationDocumentType</c> type.</returns>
    private static str documentType()
    {
        return TaxTransDeclarationViewHelper::documentType(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the invoice date.
    /// </summary>
    /// <returns>A calculated field expression; the invoice date.</returns>
    private static str invoiceDate()
    {
        return TaxTransDeclarationViewHelper::invoiceDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the document date.
    /// </summary>
    /// <returns>A calculated field expression; the document date.</returns>
    private static str documentDate()
    {
        return TaxTransDeclarationViewHelper::documentDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax amount in accounting currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax amount.</returns>
    private static str deductibleTaxAmount()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxAmount(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax amount in tax currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax amount.</returns>
    private static str deductibleTaxAmountCur()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxAmountRep</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax amount in reporting currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax amount.</returns>
    private static str deductibleTaxAmountRep()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxAmountRep(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleSourceTaxAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax amount.</returns>
    private static str deductibleSourceTaxAmountCur()
    {
        return TaxTransDeclarationViewHelper::deductibleSourceTaxAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleSourceTaxAmountCurRegulated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates adjusted deductible tax amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the adjusted deductible tax amount.</returns>
    private static str deductibleSourceTaxAmountCurRegulated()
    {
        return TaxTransDeclarationViewHelper::deductibleSourceTaxAmountCurRegulated(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax base amount in accounting currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax base amount.</returns>
    private static str deductibleTaxBaseAmount()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxBaseAmount(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxBaseAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax base amount in tax currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax base amount.</returns>
    private static str deductibleTaxBaseAmountCur()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxBaseAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleTaxBaseAmountRep</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax base amount in reporting currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax base amount.</returns>
    private static str deductibleTaxBaseAmountRep()
    {
        return TaxTransDeclarationViewHelper::deductibleTaxBaseAmountRep(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleSourceTaxBaseAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates deductible tax base amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the deductible tax base amount.</returns>
    private static str deductibleSourceTaxBaseAmountCur()
    {
        return TaxTransDeclarationViewHelper::deductibleSourceTaxBaseAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deductibleSourceTaxBaseAmountCurRegulated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates adjusted deductible tax base amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the adjusted deductible tax base amount.</returns>
    private static str deductibleSourceTaxBaseAmountCurRegulated()
    {
        return TaxTransDeclarationViewHelper::deductibleSourceTaxBaseAmountCurRegulated(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonDeductibleTaxBaseAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates non-deductible tax base amount in accounting currency.
    /// </summary>
    /// <returns>A calculated field expression; the non-deductible tax base amount.</returns>
    private static str nonDeductibleTaxBaseAmount()
    {
        return TaxTransDeclarationViewHelper::nonDeductibleTaxBaseAmount(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonDeductibleTaxBaseAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates non-deductible tax base amount in tax currency.
    /// </summary>
    /// <returns>A calculated field expression; the non-deductible tax base amount.</returns>
    private static str nonDeductibleTaxBaseAmountCur()
    {
        return TaxTransDeclarationViewHelper::nonDeductibleTaxBaseAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonDeductibleTaxBaseAmountRep</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates non-deductible tax base amount in reporting currency.
    /// </summary>
    /// <returns>A calculated field expression; the non-deductible tax base amount.</returns>
    private static str nonDeductibleTaxBaseAmountRep()
    {
        return TaxTransDeclarationViewHelper::nonDeductibleTaxBaseAmountRep(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonDeductibleSourceTaxBaseAmountCur</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates non-deductible tax base amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the non-deductible tax base amount.</returns>
    private static str nonDeductibleSourceTaxBaseAmountCur()
    {
        return TaxTransDeclarationViewHelper::nonDeductibleSourceTaxBaseAmountCur(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>nonDeductibleSourceTaxBaseAmountCurRegulated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates adjusted non-deductible tax base amount in transaction currency.
    /// </summary>
    /// <returns>A calculated field expression; the adjusted non-deductible tax base amount.</returns>
    private static str nonDeductibleSourceTaxBaseAmountCurRegulated()
    {
        return TaxTransDeclarationViewHelper::nonDeductibleSourceTaxBaseAmountCurRegulated(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>counterpartyParty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates counterparty record id from DirParty table.
    /// </summary>
    /// <returns>A calculated field expression; party record id</returns>
    private static str counterpartyParty()
    {
        return TaxTransDeclarationViewHelper::counterpartyParty(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>counterpartyVATNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Takes VAT number from customer or vendor card.
    /// </summary>
    /// <returns>A calculated field expression; the VAT number.</returns>
    private static str counterpartyVATNum()
    {
        return TaxTransDeclarationViewHelper::counterpartyVATNum(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentTaxRegistrationNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches registration num from document.
    /// </summary>
    /// <returns>A calculated field expression; the tax registration number.</returns>
    private static str documentTaxRegistrationNum()
    {
        return TaxTransDeclarationViewHelper::documentTaxRegistrationNum(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>commodityCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches commodity code from the document line.
    /// </summary>
    /// <returns>A calculated field expression; the commodity code.</returns>
    private static str commodityCode()
    {
        return TaxTransDeclarationViewHelper::commodityCode(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>commodityDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches commodity code description for the commodity code from the document line.
    /// </summary>
    /// <returns>A calculated field expression; the commodity code description.</returns>
    private static str commodityDescription()
    {
        return TaxTransDeclarationViewHelper::commodityDescription(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reverseChargeCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches reverse charge code from the document line.
    /// </summary>
    /// <returns>A calculated field expression; the reverse charge code.</returns>
    private static str reverseChargeCode()
    {
        return TaxTransDeclarationViewHelper::reverseChargeCode(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the itemId found in customer/vendor/project transaction.
    /// </summary>
    /// <returns>A calculated field expression; the item ID.</returns>
    private static str itemId()
    {
        return TaxTransDeclarationViewHelper::itemId(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the inventory dimension of itemId found in customer/vendor/project transaction.
    /// </summary>
    /// <returns>A calculated field expression; the inventory dimension.</returns>
    private static str inventDimId()
    {
        return TaxTransDeclarationViewHelper::inventDimId(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitOfMeasure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the unit of measure of item found in customer/vendor/project transaction.
    /// </summary>
    /// <returns>A calculated field expression; the unit of measure of item.</returns>
    private static str unitOfMeasure()
    {
        return TaxTransDeclarationViewHelper::unitOfMeasure(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the unit price of item found in customer/vendor/project transaction.
    /// </summary>
    /// <returns>A calculated field expression; the unit price of item.</returns>
    private static str unitPrice()
    {
        return TaxTransDeclarationViewHelper::unitPrice(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>quantity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the quantity of item found in customer/vendor/project transaction.
    /// </summary>
    /// <returns>A calculated field expression; the quantity of found item.</returns>
    private static str quantity()
    {
        return TaxTransDeclarationViewHelper::quantity(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxInvoiceSalesId_ID</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fetches a tax invoice serial number found in customer/project journal.
    /// </summary>
    /// <returns>A calculated field expression; the tax invoice serial number.</returns>
    private static str taxInvoiceSalesId_ID()
    {
        return TaxTransDeclarationViewHelper::taxInvoiceSalesId_ID(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceJourRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates an invoice journal rec id.
    /// </summary>
    /// <returns>A calculated field expression; the invoice journal rec id</returns>
    private static str invoiceJourRecId()
    {
        return TaxTransDeclarationViewHelper::invoiceJourRecId(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>invoiceJourTableId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates an invoice journal table id.
    /// </summary>
    /// <returns>A calculated field expression; the invoice journal table id</returns>
    private static str invoiceJourTableId()
    {
        return TaxTransDeclarationViewHelper::invoiceJourTableId(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>origInvoiceTransRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates an original invoice trans rec id.
    /// </summary>
    /// <returns>A calculated field expression; the original invoice trans rec id</returns>
    private static str origInvoiceTransRecId()
    {
        return TaxTransDeclarationViewHelper::origInvoiceTransRecId(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>adjustmentVoucherTransDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the trans date of tax trans adjustment voucher.
    /// </summary>
    /// <returns>A calculated field expression; the trans date of tax trans adjustment voucher..</returns>
    private static str adjustmentVoucherTransDate()
    {
        return TaxTransDeclarationViewHelper::adjustmentVoucherTransDate(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingClassifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the reporting classifier.
    /// </summary>
    /// <returns>A calculated field expression; the reporting classifier.</returns>
    private static str reportingClassifier()
    {
        return TaxTransDeclarationViewHelper::reportingClassifier(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmountSign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the tax amounts sign due to the tax direction.
    /// </summary>
    /// <returns>A calculated field expression; the tax amounts sign.</returns>
    private static str taxAmountSign()
    {
        return TaxTransDeclarationViewHelper::taxAmountSign(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxOriginInt</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the integer representation of the tax transaction origin.
    /// </summary>
    /// <returns>A calculated field expression; the tax transaction origin.</returns>
    private static str taxOriginInt()
    {
        return TaxTransDeclarationViewHelper::taxOriginInt(tableStr(TaxTransDeclarationDetailsNoAdjustmentView));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@TaxDeclarationDetails:TaxTransDeclarationDetailsDevDoc</DeveloperDocumentation>
	<Label>@TaxDeclarationDetails:TaxDeclarationDetails</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxPeriod</Name>
			<DataField>TaxPeriod</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxRepCounter</Name>
			<DataField>TaxRepCounter</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsCreditNote</Name>
			<HelpText>@TaxDeclarationDetails:OriginalDocumentIsCreditNoteHelpText</HelpText>
			<Label>@TaxDeclarationDetails:OriginalDocumentIsCreditNote</Label>
			<ViewMethod>isCreditNote</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsTaxTransCreditNote</Name>
			<HelpText>@TaxDeclarationDetails:TaxTransactionIsCreditNoteHelpText</HelpText>
			<Label>@TaxDeclarationDetails:TaxTransactionIsCreditNote</Label>
			<ViewMethod>isTaxTransCreditNote</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxCode</Name>
			<DataField>TaxCode</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxGroup</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VatDueDate_W</Name>
			<DataField>VatDueDate_W</DataField>
			<DataSource>TaxTrans_W</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxCountryRegionType</Name>
			<DataField>TaxCountryRegionType</DataField>
			<DataSource>TaxTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EUSalesListType</Name>
			<DataField>EUSalesListType</DataField>
			<DataSource>TaxItemGroupHeading</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxDirection</Name>
			<DataField>TaxDirection</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReverseCharge_W</Name>
			<DataField>ReverseCharge_W</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IntracomVAT</Name>
			<DataField>IntracomVAT</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmount</Name>
			<DataField>TaxAmount</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmountCur</Name>
			<Label>@TaxDeclarationDetails:SalesTaxAmountCurrency</Label>
			<DataField>TaxAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmountRep</Name>
			<DataField>TaxAmountRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPrice</Name>
			<DataField>TaxInCostPrice</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceCur</Name>
			<DataField>TaxInCostPriceCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceRep</Name>
			<DataField>TaxInCostPriceRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmount</Name>
			<Label>@SYS323805</Label>
			<DataField>TaxBaseAmount</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:TaxBaseCurrency</Label>
			<DataField>TaxBaseAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmountRep</Name>
			<DataField>TaxBaseAmountRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleSourceTaxAmountCur</Name>
			<Label>@TaxDeclarationDetails:DeductibleSourceTaxAmountCur</Label>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<ViewMethod>deductibleSourceTaxAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleSourceTaxAmountCurRegulated</Name>
			<Label>@TaxDeclarationDetails:DeductibleSourceTaxAmountCurRegulated</Label>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<ViewMethod>deductibleSourceTaxAmountCurRegulated</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxAmount</Name>
			<Label>@TaxDeclarationDetails:DeductibleSalesTax</Label>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<ViewMethod>deductibleTaxAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxAmountCur</Name>
			<Label>@TaxDeclarationDetails:DeductibleSalesTaxCurrency</Label>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<ViewMethod>deductibleTaxAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxAmountRep</Name>
			<Label>@TaxDeclarationDetails:DeductibleSalesTaxReporting</Label>
			<ExtendedDataType>TaxAmountCur</ExtendedDataType>
			<ViewMethod>deductibleTaxAmountRep</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleSourceTaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:DeductibleSourceTaxBaseAmountCur</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>deductibleSourceTaxBaseAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleSourceTaxBaseAmountCurRegulated</Name>
			<Label>@TaxDeclarationDetails:DeductibleSourceTaxBaseAmountCurRegulated</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>deductibleSourceTaxBaseAmountCurRegulated</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxBaseAmount</Name>
			<Label>@TaxDeclarationDetails:DeductibleTaxBase</Label>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<ViewMethod>deductibleTaxBaseAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:DeductibleTaxBaseCurrency</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>deductibleTaxBaseAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>DeductibleTaxBaseAmountRep</Name>
			<Label>@TaxDeclarationDetails:DeductibleTaxBaseReporting</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>deductibleTaxBaseAmountRep</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NonDeductibleSourceTaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:NonDeductibleSourceTaxBaseAmountCur</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>nonDeductibleSourceTaxBaseAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NonDeductibleSourceTaxBaseAmountCurRegulated</Name>
			<Label>@TaxDeclarationDetails:NonDeductibleSourceTaxBaseAmountCurRegulated</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>nonDeductibleSourceTaxBaseAmountCurRegulated</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NonDeductibleTaxBaseAmount</Name>
			<Label>@TaxDeclarationDetails:NonDeductibleTaxBase</Label>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<ViewMethod>nonDeductibleTaxBaseAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NonDeductibleTaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:NonDeductibleTaxBaseCurrency</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>nonDeductibleTaxBaseAmountCur</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NonDeductibleTaxBaseAmountRep</Name>
			<Label>@TaxDeclarationDetails:NonDeductibleTaxBaseReporting</Label>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>nonDeductibleTaxBaseAmountRep</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxRate</Name>
			<DataField>TaxValue</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxExemptPct</Name>
			<DataField>VATExemptPct</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Invoice</Name>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<ViewMethod>invoice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SettledInvoice</Name>
			<Label>@SYS92435</Label>
			<ExtendedDataType>InvoiceId</ExtendedDataType>
			<ViewMethod>settledInvoice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>DocumentNum</Name>
			<ExtendedDataType>DocumentNum</ExtendedDataType>
			<ViewMethod>documentNum</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>InvoiceDate</Name>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
			<ViewMethod>invoiceDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>DocumentDate</Name>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<ViewMethod>documentDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>DocumentType</Name>
			<ViewMethod>documentType</ViewMethod>
			<EnumType>TaxDeclarationDocumentType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>DocumentTaxRegistrationNum</Name>
			<Label>@TaxDeclarationDetails:TaxRegistrationNumberOnDocument</Label>
			<ExtendedDataType>TaxRegistrationNumber</ExtendedDataType>
			<ViewMethod>documentTaxRegistrationNum</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LegalEntityParty</Name>
			<Label>@TaxDeclarationDetails:LegalEntityPartyRecordID</Label>
			<DataField>RecId</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>CounterpartyParty</Name>
			<Label>@TaxDeclarationDetails:CounterpartyPartyRecordID</Label>
			<ExtendedDataType>DirPartyRecId</ExtendedDataType>
			<ViewMethod>counterpartyParty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CounterpartyVATNum</Name>
			<ExtendedDataType>VATNum</ExtendedDataType>
			<ViewMethod>counterpartyVATNum</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CommodityCode</Name>
			<ConfigurationKey>ForeignTrade</ConfigurationKey>
			<Label>@SYS8067</Label>
			<ExtendedDataType>EcoResCategoryCommodityCode</ExtendedDataType>
			<ViewMethod>commodityCode</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CommodityDescription</Name>
			<ConfigurationKey>ForeignTrade</ConfigurationKey>
			<Label>@SYS27180</Label>
			<ExtendedDataType>EcoResCategoryName</ExtendedDataType>
			<ViewMethod>commodityDescription</ViewMethod>
			<StringSize>254</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ReverseChargeCode</Name>
			<ConfigurationKey>LogisticsBasic</ConfigurationKey>
			<Label>@TaxDeclarationDetails:ReverseChargeGroup</Label>
			<ExtendedDataType>ReverseChargeItemGroupName_W</ExtendedDataType>
			<ViewMethod>reverseChargeCode</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxExemptCode</Name>
			<DataField>ExemptCode</DataField>
			<DataSource>TaxExemptCodeTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxExemptCodeDescription</Name>
			<Label>@TaxDeclarationDetails:ExemptCodeDescription</Label>
			<DataField>Description</DataField>
			<DataSource>TaxExemptCodeTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ExemptTax</Name>
			<DataField>ExemptTax</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ItemId</Name>
			<Label>@SYS12836</Label>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<ViewMethod>itemId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>InventDimId</Name>
			<Label>@SYS54831</Label>
			<ExtendedDataType>InventDimId</ExtendedDataType>
			<ViewMethod>inventDimId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>UnitOfMeasure</Name>
			<Label>@SYS190430</Label>
			<ExtendedDataType>UnitOfMeasureSymbol</ExtendedDataType>
			<ViewMethod>unitOfMeasure</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>UnitPrice</Name>
			<Label>@SYS23884</Label>
			<ExtendedDataType>PriceCur</ExtendedDataType>
			<ViewMethod>unitPrice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Quantity</Name>
			<Label>@SYS102891</Label>
			<ExtendedDataType>SalesInvoicedQty</ExtendedDataType>
			<ViewMethod>quantity</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>TaxInvoiceSalesId_ID</Name>
			<ExtendedDataType>TaxInvoiceSalesId</ExtendedDataType>
			<ViewMethod>taxInvoiceSalesId_ID</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>InvoiceJourRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>invoiceJourRecId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>InvoiceJourTableId</Name>
			<ExtendedDataType>RefTableId</ExtendedDataType>
			<ViewMethod>invoiceJourTableId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Reason</Name>
			<DataField>Reason</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReasonComment</Name>
			<DataField>ReasonComment</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VendorVATDate</Name>
			<FeatureClass>VendorVATDateFeature</FeatureClass>
			<DataField>VendorVATDate</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceRecId</Name>
			<DataField>SourceRecId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceTableId</Name>
			<DataField>SourceTableId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceCurrencyCode</Name>
			<DataField>SourceCurrencyCode</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceBaseAmountCur</Name>
			<DataField>SourceBaseAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceBaseAmountCurRegulated</Name>
			<DataField>SourceBaseAmountCurRegulated</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceRegulateAmountCur</Name>
			<DataField>SourceRegulateAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceTaxAmountCur</Name>
			<DataField>SourceTaxAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceMST</Name>
			<DataField>TaxInCostPriceMST</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>OrigInvoiceTransRecId</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>origInvoiceTransRecId</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>SettledInvoiceTransDate</Name>
			<ExtendedDataType>TransDate</ExtendedDataType>
			<ViewMethod>settledInvoiceTransDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>SettledInvoiceVatDueDate_W</Name>
			<ExtendedDataType>VatDueDate_W</ExtendedDataType>
			<ViewMethod>settledInvoiceVatDueDate_W</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>SettledInvoiceInvoiceDate</Name>
			<ExtendedDataType>InvoiceDate</ExtendedDataType>
			<ViewMethod>settledInvoiceInvoiceDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>SettledInvoiceDocumentDate</Name>
			<ExtendedDataType>DocumentDate</ExtendedDataType>
			<ViewMethod>settledInvoiceDocumentDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SettledInvoiceVendorVATDate</Name>
			<DataField>VendorVATDate</DataField>
			<DataSource>TaxTrans_SettledVendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ReportingClassifier</Name>
			<ViewMethod>reportingClassifier</ViewMethod>
			<EnumType>TaxTransReportingClassifier</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Source</Name>
			<DataField>Source</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxOrigin</Name>
			<DataField>TaxOrigin</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EmptyTaxBaseForOutgoingTax_W</Name>
			<DataField>EmptyTaxBaseForOutgoingTax_W</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>TaxAmountSign</Name>
			<ExtendedDataType>Sign</ExtendedDataType>
			<ViewMethod>taxAmountSign</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>TaxOriginInt</Name>
			<ViewMethod>taxOriginInt</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<AllowCrossCompany>Yes</AllowCrossCompany>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TaxTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TaxTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTrans_Reporting</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTrans_Reporting</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>VendTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>VendTrans</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CzTaxDocumentLink_Vend</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CzTaxDocumentLink</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>CzTaxDocumentTable_Vend</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>CzTaxDocumentTable</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>CzTaxCreditMemo_Vend</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>CzTaxCreditMemo</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>VendTable</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>VendTable</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>VendInvoiceIntrastat</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>VendInvoiceIntrastat</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>IntrastatCommodity_VendIntrastat</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>EcoResCategory</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<DerivedTable>EcoResCategory</DerivedTable>
														<Field>IntrastatCommodity</Field>
														<JoinDataSource>VendInvoiceIntrastat</JoinDataSource>
														<JoinDerivedTable>VendInvoiceIntrastat</JoinDerivedTable>
														<RelatedField>Recid</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>VendSettlement</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>VendSettlement</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>VendTrans_SettledInvoice</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>VendTrans</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>TaxTrans_SettledVendTrans</Name>
														<DynamicFields>Yes</DynamicFields>
														<FirstOnly>Yes</FirstOnly>
														<Table>TaxTransVoucherDatesView</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>Voucher</Field>
																<JoinDataSource>VendTrans_SettledInvoice</JoinDataSource>
																<JoinDerivedTable>VendTrans</JoinDerivedTable>
																<RelatedField>Voucher</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>TransDate</Field>
																<JoinDataSource>VendTrans_SettledInvoice</JoinDataSource>
																<JoinDerivedTable>VendTrans</JoinDerivedTable>
																<RelatedField>TransDate</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<DerivedTable>VendTrans</DerivedTable>
														<Field>OffsetRecId</Field>
														<JoinDataSource>VendSettlement</JoinDataSource>
														<JoinDerivedTable>VendSettlement</JoinDerivedTable>
														<RelatedField>RecId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<DerivedTable>VendSettlement</DerivedTable>
												<Field>RecId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<JoinDerivedTable>VendTrans</JoinDerivedTable>
												<RelatedField>TransRecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy1</Name>
												<DerivedTable>VendSettlement</DerivedTable>
												<Field>TransDate</Field>
												<JoinDataSource>TaxTrans</JoinDataSource>
												<JoinDerivedTable>TaxTrans</JoinDerivedTable>
												<RelatedField>TransDate</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy2</Name>
												<DerivedTable>VendSettlement</DerivedTable>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<JoinDerivedTable>VendTrans</JoinDerivedTable>
												<RelatedField>TransCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy3</Name>
												<DerivedTable>VendSettlement</DerivedTable>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<JoinDerivedTable>VendTrans</JoinDerivedTable>
												<RelatedField>OffsetCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy3Copy1</Name>
												<DerivedTable>VendSettlement</DerivedTable>
												<Field>Voucher</Field>
												<JoinDataSource>TaxTrans</JoinDataSource>
												<JoinDerivedTable>TaxTrans</JoinDerivedTable>
												<RelatedField>SettlementVoucher</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>VendSettlement_Prepayment</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>VendSettlement</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>VendTrans_Prepayment</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>VendTrans</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>TaxTrans_SettledPrepayment</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>TaxTransVoucherDatesView</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>Voucher</Field>
																<JoinDataSource>VendTrans_Prepayment</JoinDataSource>
																<RelatedField>Voucher</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>TransDate</Field>
																<JoinDataSource>VendTrans_Prepayment</JoinDataSource>
																<RelatedField>TransDate</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>OffsetRecId</Field>
														<JoinDataSource>VendSettlement_Prepayment</JoinDataSource>
														<RelatedField>RecId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>TransType</Name>
												<Field>TransType</Field>
												<Value>33</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>RecId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<RelatedField>TransRecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>TransDate</Field>
												<JoinDataSource>TaxTrans</JoinDataSource>
												<RelatedField>TransDate</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation3</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<RelatedField>TransCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation4</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendTrans</JoinDataSource>
												<RelatedField>OffsetCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTrans_W</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTrans_W</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxGroupData</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxGroupData</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxExemptCodeTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>TaxExemptCodeTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>TaxGroupData</DerivedTable>
								<Field>TaxCode</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TaxCode</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>TaxGroupData</DerivedTable>
								<Field>TaxGroup</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TaxGroup</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxItemGroupHeading</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxItemGroupHeading</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerJournalTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustTrans_LedgerJournalTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustTrans</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CustSettlement_LedgerJournalTrans</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CustSettlement</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>CustTrans_SettledInvoice_LedgerJournalTrans</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>CustTrans</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>TaxTrans_SettledCustTrans_LedgerJournalTrans</Name>
														<DynamicFields>Yes</DynamicFields>
														<FirstOnly>Yes</FirstOnly>
														<Table>TaxTransVoucherDatesView</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>Voucher</Field>
																<JoinDataSource>CustTrans_SettledInvoice_LedgerJournalTrans</JoinDataSource>
																<JoinDerivedTable>CustTrans</JoinDerivedTable>
																<RelatedField>Voucher</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>TransDate</Field>
																<JoinDataSource>CustTrans_SettledInvoice_LedgerJournalTrans</JoinDataSource>
																<JoinDerivedTable>CustTrans</JoinDerivedTable>
																<RelatedField>TransDate</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<DerivedTable>CustTrans</DerivedTable>
														<Field>OffsetRecId</Field>
														<JoinDataSource>CustSettlement_LedgerJournalTrans</JoinDataSource>
														<JoinDerivedTable>CustSettlement</JoinDerivedTable>
														<RelatedField>RecId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<DerivedTable>CustSettlement</DerivedTable>
												<Field>RecId</Field>
												<JoinDataSource>CustTrans_LedgerJournalTrans</JoinDataSource>
												<JoinDerivedTable>CustTrans</JoinDerivedTable>
												<RelatedField>TransRecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy1</Name>
												<DerivedTable>CustSettlement</DerivedTable>
												<Field>TransDate</Field>
												<JoinDataSource>TaxTrans</JoinDataSource>
												<JoinDerivedTable>TaxTrans</JoinDerivedTable>
												<RelatedField>TransDate</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy2</Name>
												<DerivedTable>CustSettlement</DerivedTable>
												<Field>DataAreaId</Field>
												<JoinDataSource>CustTrans_LedgerJournalTrans</JoinDataSource>
												<JoinDerivedTable>CustTrans</JoinDerivedTable>
												<RelatedField>TransCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy3</Name>
												<DerivedTable>CustSettlement</DerivedTable>
												<Field>DataAreaId</Field>
												<JoinDataSource>CustTrans_LedgerJournalTrans</JoinDataSource>
												<JoinDerivedTable>CustTrans</JoinDerivedTable>
												<RelatedField>OffsetCompany</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy3Copy1</Name>
												<DerivedTable>CustSettlement</DerivedTable>
												<Field>Voucher</Field>
												<JoinDataSource>TaxTrans</JoinDataSource>
												<JoinDerivedTable>TaxTrans</JoinDerivedTable>
												<RelatedField>SettlementVoucher</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CustTable_LedgerJournalTrans</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CustTable</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>CustTrans</DerivedTable>
										<Field>Voucher</Field>
										<JoinDataSource>LedgerJournalTrans</JoinDataSource>
										<JoinDerivedTable>LedgerJournalTrans</JoinDerivedTable>
										<RelatedField>Voucher</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<DerivedTable>CustTrans</DerivedTable>
										<Field>TransDate</Field>
										<JoinDataSource>LedgerJournalTrans</JoinDataSource>
										<JoinDerivedTable>LedgerJournalTrans</JoinDerivedTable>
										<RelatedField>TransDate</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LedgerJournalTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>LedgerJournalTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>LedgerJournalTrans</DerivedTable>
								<Field>SourceRecId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>LedgerJournalTrans</DerivedTable>
								<Field>SourceTableId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTrans_Source</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustSettlement</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustSettlement</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CustTrans_SettledInvoice</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CustTrans</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>TaxTrans_SettledCustTrans</Name>
												<DynamicFields>Yes</DynamicFields>
												<FirstOnly>Yes</FirstOnly>
												<Table>TaxTransVoucherDatesView</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>Voucher</Field>
														<JoinDataSource>CustTrans_SettledInvoice</JoinDataSource>
														<JoinDerivedTable>CustTrans</JoinDerivedTable>
														<RelatedField>Voucher</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>TransDate</Field>
														<JoinDataSource>CustTrans_SettledInvoice</JoinDataSource>
														<JoinDerivedTable>CustTrans</JoinDerivedTable>
														<RelatedField>TransDate</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<DerivedTable>CustTrans</DerivedTable>
												<Field>OffsetRecId</Field>
												<JoinDataSource>CustSettlement</JoinDataSource>
												<JoinDerivedTable>CustSettlement</JoinDerivedTable>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>CustSettlement</DerivedTable>
										<Field>RecId</Field>
										<JoinDataSource>CustTrans_Source</JoinDataSource>
										<JoinDerivedTable>CustTrans</JoinDerivedTable>
										<RelatedField>TransRecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy1</Name>
										<DerivedTable>CustSettlement</DerivedTable>
										<Field>TransDate</Field>
										<JoinDataSource>TaxTrans</JoinDataSource>
										<JoinDerivedTable>TaxTrans</JoinDerivedTable>
										<RelatedField>TransDate</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy2</Name>
										<DerivedTable>CustSettlement</DerivedTable>
										<Field>DataAreaId</Field>
										<JoinDataSource>CustTrans_Source</JoinDataSource>
										<JoinDerivedTable>CustTrans</JoinDerivedTable>
										<RelatedField>TransCompany</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy3</Name>
										<DerivedTable>CustSettlement</DerivedTable>
										<Field>DataAreaId</Field>
										<JoinDataSource>CustTrans_Source</JoinDataSource>
										<JoinDerivedTable>CustTrans</JoinDerivedTable>
										<RelatedField>OffsetCompany</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy3Copy1</Name>
										<DerivedTable>CustSettlement</DerivedTable>
										<Field>Voucher</Field>
										<JoinDataSource>TaxTrans</JoinDataSource>
										<JoinDerivedTable>TaxTrans</JoinDerivedTable>
										<RelatedField>SettlementVoucher</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustTable_Source</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>CustTrans</DerivedTable>
								<Field>SourceRecId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>CustTrans</DerivedTable>
								<Field>SourceTableId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>IntrastatCommodity_CustTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResCategory</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>EcoResCategory</DerivedTable>
										<Field>IntrastatCommodity</Field>
										<JoinDataSource>CustInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventItemGroupItem_CustTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventItemGroupItem</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Sales_Table</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Sales_Table</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Sales</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Table</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ItemId</Field>
												<JoinDataSource>CustInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
												<RelatedField>ItemId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>CustInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Sales_Group</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Sales_Group</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Group</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Sales</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ItemGroupId</Field>
												<JoinDataSource>InventItemGroupItem_CustTrans</JoinDataSource>
												<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
												<RelatedField>ItemGroupId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>ItemDataAreaId</Field>
												<JoinDataSource>InventItemGroupItem_CustTrans</JoinDataSource>
												<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Sales_Category</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Sales_Category</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Sales</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Category</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>SalesCategory</Field>
												<JoinDataSource>CustInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
												<RelatedField>EcoResCategoryId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>CustInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Sales_All</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Sales_All</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Sales</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::All</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>CustInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>InventItemGroupItem</DerivedTable>
										<Field>ItemId</Field>
										<JoinDataSource>CustInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
										<RelatedField>ItemId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy1</Name>
										<DerivedTable>InventItemGroupItem</DerivedTable>
										<Field>DataAreaId</Field>
										<JoinDataSource>CustInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>CustInvoiceTrans</JoinDerivedTable>
										<RelatedField>ItemDataAreaId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustInvoiceTrans_W</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustInvoiceTrans_W</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>CustInvoiceTrans</JoinDataSource>
										<RelatedField>CustInvoiceTrans</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>CustInvoiceTrans</DerivedTable>
								<Field>SourceRecId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>CustInvoiceTrans</DerivedTable>
								<Field>SourceTableId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjInvoiceItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProjInvoiceItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>IntrastatCommodity_ProjTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResCategory</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>EcoResCategory</DerivedTable>
										<Field>IntrastatCommodity</Field>
										<JoinDataSource>ProjInvoiceItem</JoinDataSource>
										<JoinDerivedTable>ProjInvoiceItem</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesLine_ProjItem</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>SalesLine</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>InventItemGroupItem_ProjItem</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>InventItemGroupItem</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroupData_Proj_Table</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroupData_W</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>ReverseChargeItemGroup_Proj_Table</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>ReverseChargeItemGroup_W</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges>
													<AxQuerySimpleDataSourceRange>
														<Name>PurchSales</Name>
														<Field>PurchSales</Field>
														<Value>ReverseChargePurchSales_W::Sales</Value>
													</AxQuerySimpleDataSourceRange>
													<AxQuerySimpleDataSourceRange>
														<Name>ItemCode</Name>
														<Field>ItemCode</Field>
														<Value>TableGroupCategoryAll::Table</Value>
													</AxQuerySimpleDataSourceRange>
												</Ranges>
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>ItemId</Field>
														<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
														<JoinDerivedTable>SalesLine</JoinDerivedTable>
														<RelatedField>ItemId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>DataAreaId</Field>
														<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
														<JoinDerivedTable>SalesLine</JoinDerivedTable>
														<RelatedField>DataAreaId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroupData_Proj_Group</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroupData_W</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>ReverseChargeItemGroup_Proj_Group</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>ReverseChargeItemGroup_W</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges>
													<AxQuerySimpleDataSourceRange>
														<Name>ItemCode</Name>
														<Field>ItemCode</Field>
														<Value>TableGroupCategoryAll::Group</Value>
													</AxQuerySimpleDataSourceRange>
													<AxQuerySimpleDataSourceRange>
														<Name>PurchSales</Name>
														<Field>PurchSales</Field>
														<Value>ReverseChargePurchSales_W::Sales</Value>
													</AxQuerySimpleDataSourceRange>
												</Ranges>
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>ItemGroupId</Field>
														<JoinDataSource>InventItemGroupItem_ProjItem</JoinDataSource>
														<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
														<RelatedField>ItemGroupId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>ItemDataAreaId</Field>
														<JoinDataSource>InventItemGroupItem_ProjItem</JoinDataSource>
														<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
														<RelatedField>DataAreaId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroupData_Proj_Category</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroupData_W</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>ReverseChargeItemGroup_Proj_Category</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>ReverseChargeItemGroup_W</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges>
													<AxQuerySimpleDataSourceRange>
														<Name>PurchSales</Name>
														<Field>PurchSales</Field>
														<Value>ReverseChargePurchSales_W::Sales</Value>
													</AxQuerySimpleDataSourceRange>
													<AxQuerySimpleDataSourceRange>
														<Name>ItemCode</Name>
														<Field>ItemCode</Field>
														<Value>TableGroupCategoryAll::Category</Value>
													</AxQuerySimpleDataSourceRange>
												</Ranges>
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>SalesCategory</Field>
														<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
														<JoinDerivedTable>SalesLine</JoinDerivedTable>
														<RelatedField>EcoResCategoryId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>DataAreaId</Field>
														<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
														<JoinDerivedTable>SalesLine</JoinDerivedTable>
														<RelatedField>DataAreaId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroupData_Proj_All</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroupData_W</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>ReverseChargeItemGroup_Proj_All</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>ReverseChargeItemGroup_W</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges>
													<AxQuerySimpleDataSourceRange>
														<Name>PurchSales</Name>
														<Field>PurchSales</Field>
														<Value>ReverseChargePurchSales_W::Sales</Value>
													</AxQuerySimpleDataSourceRange>
													<AxQuerySimpleDataSourceRange>
														<Name>ItemCode</Name>
														<Field>ItemCode</Field>
														<Value>TableGroupCategoryAll::All</Value>
													</AxQuerySimpleDataSourceRange>
												</Ranges>
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>DataAreaId</Field>
														<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
														<JoinDerivedTable>SalesLine</JoinDerivedTable>
														<RelatedField>DataAreaId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<DerivedTable>InventItemGroupItem</DerivedTable>
												<Field>ItemId</Field>
												<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
												<JoinDerivedTable>SalesLine</JoinDerivedTable>
												<RelatedField>ItemId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1Copy1</Name>
												<DerivedTable>InventItemGroupItem</DerivedTable>
												<Field>DataAreaId</Field>
												<JoinDataSource>SalesLine_ProjItem</JoinDataSource>
												<JoinDerivedTable>SalesLine</JoinDerivedTable>
												<RelatedField>ItemDataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<DerivedTable>SalesLine</DerivedTable>
										<Field>ProjTransId</Field>
										<JoinDataSource>ProjInvoiceItem</JoinDataSource>
										<JoinDerivedTable>ProjInvoiceItem</JoinDerivedTable>
										<RelatedField>ProjTransId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>ProjInvoiceItem</DerivedTable>
								<Field>SourceRecId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>ProjInvoiceItem</DerivedTable>
								<Field>SourceTableId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>IntrastatCommodity_VendTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResCategory</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>EcoResCategory</DerivedTable>
										<Field>IntrastatCommodity</Field>
										<JoinDataSource>VendInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventItemGroupItem_VendTrans</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventItemGroupItem</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Purch_Table</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Purch_Table</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Purch</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Table</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ItemId</Field>
												<JoinDataSource>VendInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
												<RelatedField>ItemId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Purch_Group</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Purch_Group</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Group</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Purch</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ItemGroupId</Field>
												<JoinDataSource>InventItemGroupItem_VendTrans</JoinDataSource>
												<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
												<RelatedField>ItemGroupId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>ItemDataAreaId</Field>
												<JoinDataSource>InventItemGroupItem_VendTrans</JoinDataSource>
												<JoinDerivedTable>InventItemGroupItem</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Purch_Category</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Purch_Category</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Purch</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::Category</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ProcurementCategory</Field>
												<JoinDataSource>VendInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
												<RelatedField>EcoResCategoryId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>ReverseChargeItemGroupData_Purch_All</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>ReverseChargeItemGroupData_W</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>ReverseChargeItemGroup_Purch_All</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>ReverseChargeItemGroup_W</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges>
											<AxQuerySimpleDataSourceRange>
												<Name>PurchSales</Name>
												<Field>PurchSales</Field>
												<Value>ReverseChargePurchSales_W::Purch</Value>
											</AxQuerySimpleDataSourceRange>
											<AxQuerySimpleDataSourceRange>
												<Name>ItemCode</Name>
												<Field>ItemCode</Field>
												<Value>TableGroupCategoryAll::All</Value>
											</AxQuerySimpleDataSourceRange>
										</Ranges>
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>DataAreaId</Field>
												<JoinDataSource>VendInvoiceTrans</JoinDataSource>
												<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>InventItemGroupItem</DerivedTable>
										<Field>ItemId</Field>
										<JoinDataSource>VendInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
										<RelatedField>ItemId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy1</Name>
										<DerivedTable>InventItemGroupItem</DerivedTable>
										<Field>DataAreaId</Field>
										<JoinDataSource>VendInvoiceTrans</JoinDataSource>
										<JoinDerivedTable>VendInvoiceTrans</JoinDerivedTable>
										<RelatedField>ItemDataAreaId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>VendInvoiceTrans</DerivedTable>
								<Field>SourceRecId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>VendInvoiceTrans</DerivedTable>
								<Field>SourceTableId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProjInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceJour</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TaxOriginAndLedgerJournalType</Name>
								<DerivedTable>VendInvoiceJour</DerivedTable>
								<Field>RecId</Field>
								<Value>(((TaxTrans.TaxOrigin == TaxOrigin::Tax) || ((TaxTrans_Reporting.IsTransactionReversal == TaxTransDeclarationDetailsUtil::isTransactionReversal()) &amp;&amp; (TaxTrans.TaxOrigin == TaxOrigin::TaxReversed))) &amp;&amp; ((TaxTrans_Reporting.LedgerJournalType != LedgerJournalType::PurchaseLedger) &amp;&amp; (TaxTrans_Reporting.LedgerJournalType != LedgerJournalType::Approval) || (TaxTrans.SourceTableId != (TaxTransDeclarationDetailsUtil::ledgerJournalTransTableId()))))</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CompanyInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1Copy1</Name>
								<DerivedTable>CompanyInfo</DerivedTable>
								<Field>DataAreaId</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>DataArea</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTransferJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTransferJour</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxRegistration</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>TaxRegistration</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>DirPartyLocation</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>DirPartyLocation</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>TaxRegistration</DerivedTable>
										<Field>PartyTaxID</Field>
										<JoinDataSource>InventTransferJour</JoinDataSource>
										<JoinDerivedTable>InventTransferJour</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventTransferJourLine</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InventTransferJourLine</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>IntrastatCommodity_TransferJourLine</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResCategory</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<DerivedTable>EcoResCategory</DerivedTable>
												<Field>IntrastatCommodity</Field>
												<JoinDataSource>InventTransferJourLine</JoinDataSource>
												<JoinDerivedTable>InventTransferJourLine</JoinDerivedTable>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>SourceRecId</Field>
										<JoinDataSource>TaxTrans</JoinDataSource>
										<JoinDerivedTable>TaxTrans</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>SourceTableId</Field>
										<JoinDataSource>TaxTrans</JoinDataSource>
										<JoinDerivedTable>TaxTrans</JoinDerivedTable>
										<RelatedField>TableId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation3</Name>
										<Field>VoucherId</Field>
										<JoinDataSource>InventTransferJour</JoinDataSource>
										<RelatedField>VoucherId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation4</Name>
										<Field>TransferId</Field>
										<JoinDataSource>InventTransferJour</JoinDataSource>
										<RelatedField>TransferId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>Shipment</Name>
								<Field>UpdateType</Field>
								<Value>InventTransferUpdateType::Shipment</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>Receive</Name>
								<Field>UpdateType</Field>
								<Value>InventTransferUpdateType::Receive</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<DerivedTable>InventTransferJour</DerivedTable>
								<Field>TransDate</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TransDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<DerivedTable>InventTransferJour</DerivedTable>
								<Field>Voucher</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>VoucherId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PurchLine</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PurchTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations />
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTransView</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustTransView</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustTrans_Tax</Name>
								<DynamicFields>Yes</DynamicFields>
								<FirstOnly>Yes</FirstOnly>
								<Table>CustTrans</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CzTaxDocumentLink_Cust</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CzTaxDocumentLink</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>CzTaxDocumentTable_Cust</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>CzTaxDocumentTable</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>CzTaxCreditMemo_Cust</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>CzTaxCreditMemo</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<UseRelations>Yes</UseRelations>
														<Relations />
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations />
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>CustTable_Tax</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>CustTable</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations />
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>TaxOrigin</Name>
										<DerivedTable>CustTrans</DerivedTable>
										<Field>RecId</Field>
										<Value>(TaxTrans.TaxOrigin == TaxOrigin::Tax) || (TaxTrans.TaxOrigin == TaxOrigin::TaxReversed)</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<DerivedTable>CustTrans</DerivedTable>
										<Field>MaxRecId</Field>
										<JoinDataSource>CustTransView</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TransDate</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>TransDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>Voucher</Field>
								<JoinDataSource>TaxTrans</JoinDataSource>
								<JoinDerivedTable>TaxTrans</JoinDerivedTable>
								<RelatedField>Voucher</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Source</Name>
						<Field>Source</Field>
						<Value>!TaxModuleType::Tax</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>