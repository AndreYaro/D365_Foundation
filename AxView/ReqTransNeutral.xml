<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqTransNeutral</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The <c>ReqTransNeutral</c> view computes total quantity of transactions in a group 
/// to check whether the total quantity of the receipts equals the total quantity of the issues in the group. 
/// Based on this information a decision can be made to delete the transactions from the group.
/// </summary>
public class ReqTransNeutral extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fieldExpression</Name>
				<Source><![CDATA[
    private static str fieldExpression(FieldName _fieldName)
    {
        return SysComputedColumn::returnField(tablestr(ReqTransNeutral), tablestr(ReqTransNeutralBase), _fieldName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>neutralGroupFieldsExpression</Name>
				<Source><![CDATA[
    private static str neutralGroupFieldsExpression()
    {
        str partitionColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, Partition));
        str dataAreaIdColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, DataAreaId));
        str planVersionColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, PlanVersion));
        str refTypeGroupColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, RefTypeGroup));
        str refIdColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, RefId));
        str itemIdColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, ItemId));
        str covInventDimIdColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, CovInventDimId));
        str reqDateDlvOrigColumn = ReqTransNeutral::fieldExpression(fieldstr(ReqTransNeutralBase, ReqDateDlvOrig));

        return strFmt('%1, %2, %3, %4, %5, %6, %7, %8',
            partitionColumn,
            dataAreaIdColumn,
            planVersionColumn,
            refTypeGroupColumn,
            refIdColumn,
            itemIdColumn,
            covInventDimIdColumn,
            reqDateDlvOrigColumn);
    }

]]></Source>
			</Method>
			<Method>
				<Name>aggregateExpressionOverNeutralGroup</Name>
				<Source><![CDATA[
    private static str aggregateExpressionOverNeutralGroup(str _aggregateFunctionExpression, FieldName _aggregatedFieldName)
    {
        str fieldExpression = ReqTransNeutral::fieldExpression(_aggregatedFieldName);
        str neutralGroupFields = ReqTransNeutral::neutralGroupFieldsExpression();
        
        return strFmt('%1(%2) OVER (PARTITION BY %3)', _aggregateFunctionExpression, fieldExpression, neutralGroupFields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sumQtyInNeutralGroupColumnDefinition</Name>
				<Source><![CDATA[
    private static str sumQtyInNeutralGroupColumnDefinition()
    {
        return ReqTransNeutral::aggregateExpressionOverNeutralGroup('SUM', fieldstr(ReqTransNeutralBase, Qty));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SCMPlanning:ReqTransNeutral_DevDocumentation</DeveloperDocumentation>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PlanVersion</Name>
			<DataField>PlanVersion</DataField>
			<DataSource>ReqTransNeutralBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>ReqTransNeutralBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RefType</Name>
			<DataField>RefType</DataField>
			<DataSource>ReqTransNeutralBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Level</Name>
			<DataField>Level</DataField>
			<DataSource>ReqTransNeutralBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>SumQtyInNeutralGroup</Name>
			<ExtendedDataType>ReqQty</ExtendedDataType>
			<ViewMethod>sumQtyInNeutralGroupColumnDefinition</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ReqTransNeutralBase</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ReqTransNeutralBase</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>NotMarkedExternally</Name>
						<Field>IsMarkedExternally</Field>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>