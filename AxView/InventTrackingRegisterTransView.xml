<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTrackingRegisterTransView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTrackingRegisterTransView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds an expression to compute the column indicating whether the serial number was registered successfully.
    /// </summary>
    /// <returns>
    /// An expression to compute the registered column.
    /// </returns>
    public static str registered()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(
                SysComputedColumn::comparisonField(tableStr(InventTrackingRegisterTransView), literalStr(InventDim_1), fieldStr(InventDim, InventSerialId)),
                SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnLiteral(InventTrackingRegisterTransRegStatus::OK),
            SysComputedColumn::returnLiteral(InventTrackingRegisterTransRegStatus::NotReadable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>serialNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds an expression to compute the serial number column.
    /// </summary>
    /// <returns>
    /// An expression to compute the serial number column.
    /// </returns>
    public static str serialNumber()
    {
        str field = SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(
                SysComputedColumn::comparisonField(tableStr(InventTrackingRegisterTransView), literalStr(InventDim_1), fieldStr(InventDim, InventSerialId)),
                SysComputedColumn::comparisonLiteral('')),
                SysComputedColumn::returnField(tableStr(InventTrackingRegisterTransView), literalStr(InventDim_1), fieldStr(InventDim, InventSerialId)),
                SysComputedColumn::returnLiteral('-'));
        return field;
    }

]]></Source>
			</Method>
			<Method>
				<Name>statusIssue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds an expression to compute the issue status column.
    /// </summary>
    /// <returns>
    /// An expression to compute the issue status column.
    /// </returns>
    public static str statusIssue()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(
                SysComputedColumn::comparisonField(tableStr(InventTrackingRegisterTransView), literalStr(InventTrackingRegisterTrans_1), fieldStr(InventTrackingRegisterTrans, FinancialRefRecId)),
                SysComputedColumn::comparisonLiteral(0)),
            SysComputedColumn::returnLiteral(StatusIssue::Sold),

            SysComputedColumn::if(
                SysComputedColumn::notEqualExpression(
                    SysComputedColumn::comparisonField(tableStr(InventTrackingRegisterTransView), literalStr(InventTrackingRegisterTrans_1), fieldStr(InventTrackingRegisterTrans, PhysicalRefRecId)),
                    SysComputedColumn::comparisonLiteral(0)),
                SysComputedColumn::returnLiteral(StatusIssue::Deducted),

                SysComputedColumn::returnLiteral(StatusIssue::None))
           );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS4030026</DeveloperDocumentation>
	<Label>@SYS9516</Label>
	<TitleField1>InventSerialId</TitleField1>
	<TitleField2>Registered</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>InventSerialId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>serialStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Registered</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>InventSerialId</Name>
			<ExtendedDataType>InventSerialId</ExtendedDataType>
			<ViewMethod>serialNumber</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>serialStatus</Name>
			<ViewMethod>statusIssue</ViewMethod>
			<EnumType>StatusIssue</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Registered</Name>
			<ViewMethod>registered</ViewMethod>
			<EnumType>InventTrackingRegisterTransRegStatus</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventTransOrigin</Name>
			<DataField>InventTransOrigin</DataField>
			<DataSource>InventTrackingRegisterTrans_1</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTrackingRegisterTrans_1</Name>
				<DynamicFields>Yes</DynamicFields>
				<Label>@SYS9516</Label>
				<Table>InventTrackingRegisterTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim_1</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Relation</Name>
								<JoinDataSource>InventTrackingRegisterTrans_1</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>RecId</Name>
						<DataSource>InventTrackingRegisterTrans_1</DataSource>
						<Field>RecId</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>