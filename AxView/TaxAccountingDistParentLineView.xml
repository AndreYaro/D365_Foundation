<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxAccountingDistParentLineView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxAccountingDistParentLineView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>IsDuplicateLine</Name>
				<Source><![CDATA[
    private static str IsDuplicateLine()
    {
        #define.ViewName(TaxAccountingDistParentLineView)
        #define.AccountingDistributionDataSourceName('AccountingDistribution_Child')
        #define.SubledgerAccountingDistributionDataSourceName('SubledgerJournalAccountEntryDistribution')

        #define.FieldTransactionCurrencyAmount('TransactionCurrencyAmount')
        #define.FieldAcountingCurrencyAmount('AccountingCurrencyAmount')

        str transactionCurrencyAmount, accountingCurrencyAmount;

        DictView dictAccountDistView = new DictView(tableNum(#ViewName));

        transactionCurrencyAmount = dictAccountDistView.computedColumnString(#AccountingDistributionDataSourceName, #FieldTransactionCurrencyAmount, FieldNameGenerationMode::FieldList, true);
        accountingCurrencyAmount = dictAccountDistView.computedColumnString(#SubledgerAccountingDistributionDataSourceName, #FieldAcountingCurrencyAmount, FieldNameGenerationMode::FieldList, true);

        return SysComputedColumn::if ( '(' + transactionCurrencyAmount + ' > 0 and ' + accountingCurrencyAmount + ' < 0 )'
                                        + 'or' +
                                        '(' + transactionCurrencyAmount + ' < 0 and ' + accountingCurrencyAmount + ' > 0 )', '1', '0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>ParentLedgerDimension</Name>
				<Source><![CDATA[
    private static str ParentLedgerDimension()
    {
        #define.ViewName(TaxAccountingDistParentLineView)
        #define.ChildDataSourceName('AccountingDistribution_Child')
        #define.ParentDataSourceName('AccountingDistribution_Parent')
        #define.GrandParentDataSourceName('AccountingDistribution_GrandParent')

        #define.FieldMonetaryAmount('MonetaryAmount')
        #define.FieldLedgerDimension('LedgerDimension')

        str monetaryAmount, parentLedgerDimension, grandParentLedgerDimension, taxVariance;

        DictView dictAccountDistView = new DictView(tableNum(#ViewName));

        monetaryAmount = dictAccountDistView.computedColumnString(#ChildDataSourceName, #FieldMonetaryAmount, FieldNameGenerationMode::FieldList, true);
        parentLedgerDimension = dictAccountDistView.computedColumnString(#ParentDataSourceName, #FieldLedgerDimension, FieldNameGenerationMode::FieldList, true);
        grandParentLedgerDimension = dictAccountDistView.computedColumnString(#GrandParentDataSourceName, #FieldLedgerDimension, FieldNameGenerationMode::FieldList, true);
        taxVariance = int2str(enum2int(monetaryAmount::TaxVariance));

        return SysComputedColumn::if (SysComputedColumn::equalExpression (monetaryAmount, taxVariance),
            grandParentLedgerDimension,
            parentLedgerDimension);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SYS342294</DeveloperDocumentation>
	<Label>@SYS331305</Label>
	<TitleField1>SourceDocumentLine</TitleField1>
	<TitleField2>ParentDistributionLedgerDimension</TitleField2>
	<Query>TaxAccountingDistParentLineQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SourceDocumentLine</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ParentDistributionLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingCurrencyAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IgnoreRecord</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceDocumentLine</Name>
			<DataField>SourceDocumentLine</DataField>
			<DataSource>AccountingDistribution_Child</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>ParentDistributionLedgerDimension</Name>
			<ViewMethod>ParentLedgerDimension</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountingCurrencyAmount</Name>
			<DataField>AccountingCurrencyAmount</DataField>
			<DataSource>SubledgerJournalAccountEntryDistribution</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IgnoreRecord</Name>
			<ViewMethod>IsDuplicateLine</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>MonetaryAmount</Name>
			<DataField>MonetaryAmount</DataField>
			<DataSource>AccountingDistribution_Child</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SubledgerJournalAccountEntry</Name>
			<DataField>SubledgerJournalAccountEntry</DataField>
			<DataSource>SubledgerJournalAccountEntryDistribution</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>