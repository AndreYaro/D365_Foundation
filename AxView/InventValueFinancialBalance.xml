<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventValueFinancialBalance</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventValueFinancialBalance extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>amount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>Amount</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>Amount</c> column in the view.
    /// </returns>
    public static str amount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(InventValueFinancialBalance), identifierStr(InventSum), fieldStr(InventSum, PostedValue)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>InventTransId</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>InventTransId</c> column in the view.
    /// </returns>
    public static str inventTransId()
    {
        return SysComputedColumn::adjustString(tableStr(InventValueFinancialBalance), fieldStr(InventValueFinancialBalance, InventTransId), SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventTransPostingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>InventTransPostingType</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>InventTransPostingType</c> column in the view.
    /// </returns>
    public static str inventTransPostingType()
    {
        return SysComputedColumn::returnLiteral(InventTransPostingType::Financial);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPosted</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>IsPosted</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>IsPosted</c> column in the view.
    /// </returns>
    public static str isPosted()
    {
        return SysComputedColumn::returnLiteral(NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>LedgerDimension</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>LedgerDimension</c> column in the view.
    /// </returns>
    public static str ledgerDimension()
    {
        return SysComputedColumn::returnLiteral(0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ledgerDimensionOffset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>LedgerDimensionOffset</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>LedgerDimensionOffset</c> column in the view.
    /// </returns>
    public static str ledgerDimensionOffset()
    {
        return SysComputedColumn::returnLiteral(0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the <c>PostingType</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>PostingType</c> column in the view.
    /// </returns>
    public static str postingType()
    {
        return SysComputedColumn::returnLiteral(LedgerPostingType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postingTypeOffset</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the <c>PostingTypeOffset</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>PostingTypeOffset</c> column in the view.
    /// </returns>
    public static str postingTypeOffset()
    {
        return SysComputedColumn::returnLiteral(LedgerPostingType::None);
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieve the string to compute the <c>Qty</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>Qty</c> column in the view.
    /// </returns>
    public static str qty()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(InventValueFinancialBalance), identifierStr(InventSum), fieldStr(InventSum, PostedQty)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reference</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>Reference</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>Reference</c> in the view.
    /// </returns>
    public static str reference()
    {
        return SysComputedColumn::adjustString(tableStr(InventValueFinancialBalance), fieldStr(InventValueFinancialBalance, Reference), SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceCategory</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>ReferenceCategory</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>ReferenceCategory</c> column in the view.
    /// </returns>
    public static str referenceCategory()
    {
        return SysComputedColumn::returnLiteral(InventTransType::SummedUp);
    }

]]></Source>
			</Method>
			<Method>
				<Name>transBeginTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>TransBeginTime</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>TransBeginTime</c> column in the view.
    /// </returns>
    public static str transBeginTime()
    {
        return SysComputedColumn::returnLiteral(DateTimeUtil::maxValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>transDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>TransDate</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>TransDate</c> column in the view.
    /// </returns>
    public static str transDate()
    {
        return SysComputedColumn::returnLiteral(dateMax());
    }

]]></Source>
			</Method>
			<Method>
				<Name>voucher</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the string to compute the <c>Voucher</c> column in the view.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>Voucher</c> column in the view.
    /// </returns>
    public static str voucher()
    {
        return SysComputedColumn::adjustString(tableStr(InventValueFinancialBalance), fieldStr(InventValueFinancialBalance, Voucher), SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@FPK270104</DeveloperDocumentation>
	<TableGroup>Transaction</TableGroup>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>InventTransId</TitleField2>
	<Visible>No</Visible>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Qty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventDimId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Voucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReferenceCategory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventTransPostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPosted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerDimensionOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingTypeOffset</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Reference</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Qty</Name>
			<ExtendedDataType>InventQty</ExtendedDataType>
			<ViewMethod>qty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Amount</Name>
			<ExtendedDataType>CostAmountPosted</ExtendedDataType>
			<ViewMethod>amount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventSum</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventDimId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventSum</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Voucher</Name>
			<ExtendedDataType>Voucher</ExtendedDataType>
			<ViewMethod>voucher</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>TransDate</Name>
			<ExtendedDataType>DatePosted</ExtendedDataType>
			<ViewMethod>transDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>InventTransId</Name>
			<ExtendedDataType>InventTransId</ExtendedDataType>
			<ViewMethod>inventTransId</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ReferenceCategory</Name>
			<ViewMethod>referenceCategory</ViewMethod>
			<EnumType>InventTransType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>InventTransPostingType</Name>
			<ViewMethod>inventtranspostingType</ViewMethod>
			<EnumType>InventTransPostingType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsPosted</Name>
			<ViewMethod>isposted</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>PostingType</Name>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<ViewMethod>postingType</ViewMethod>
			<EnumType>LedgerPostingType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>PostingTypeOffset</Name>
			<ExtendedDataType>InventPostingType</ExtendedDataType>
			<ViewMethod>postingTypeOffset</ViewMethod>
			<EnumType>LedgerPostingType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Reference</Name>
			<ExtendedDataType>InventTransRefId</ExtendedDataType>
			<ViewMethod>Reference</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>LedgerDimension</Name>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<ViewMethod>ledgerDimension</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>LedgerDimensionOffset</Name>
			<ExtendedDataType>LedgerDimensionAccount</ExtendedDataType>
			<ViewMethod>ledgerDimensionOffset</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>TransBeginTime</Name>
			<ExtendedDataType>TransBeginTime</ExtendedDataType>
			<ViewMethod>transBeginTime</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventSum</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventSum</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Closed</Name>
						<Field>Closed</Field>
						<Status>Locked</Status>
						<Value>No</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>IsExcludedFromInventoryValue</Name>
						<Field>IsExcludedFromInventoryValue</Field>
						<Status>Locked</Status>
						<Value>No</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>