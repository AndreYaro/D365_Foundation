<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjLedgerJournalTransUnpostedView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjLedgerJournalTransUnpostedView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>computeAmount</Name>
				<Source><![CDATA[
    public static str computeAmount()
    {
        TableName   viewName = tableStr(projLedgerJournalTransUnpostedView);
        str         dsName   = tableStr(LedgerJournalTrans_Project);

        return SysComputedColumn::multiply(
                    SysComputedColumn::returnField(viewName,dsName,fieldStr(projLedgerJournalTransUnpostedView, Qty)),
                    SysComputedColumn::returnField(viewName,dsName,fieldStr(projLedgerJournalTransUnpostedView, SalesPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeCostAmount</Name>
				<Source><![CDATA[
    private static str computeCostAmount()
    {
        TableName   viewName = tableStr(projLedgerJournalTransUnpostedView);
        str         dsName   = tableStr(LedgerJournalTrans_Project);

        return SysComputedColumn::multiply(
                    SysComputedColumn::returnField(viewName, dsName, fieldStr(projLedgerJournalTransUnpostedView, Qty)),
                    SysComputedColumn::returnField(viewName, dsName, fieldStr(projLedgerJournalTransUnpostedView, CostPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProjId</Name>
				<Source><![CDATA[
    public static str getProjId()
    {
        TableName   viewName = identifierStr(projLedgerJournalTransUnpostedView);
        str         dsName   = identifierStr(LedgerJournalTrans_Project);

        return SysComputedColumn::returnField(viewName,dsName,identifierStr(ProjId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransactionOrigin</Name>
				<Source><![CDATA[
    public static str getTransactionOrigin()
    {
        TableName   viewName = identifierStr(projLedgerJournalTransUnpostedView);
        str         dsName   = identifierStr(LedgerJournalTable);
        Map         comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerJournalType::Daily),
            SysComputedColumn::returnLiteral(ProjOrigin::GeneralJournal));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerJournalType::Approval),
            SysComputedColumn::returnLiteral(ProjOrigin::InvoiceApprovalJournal));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerJournalType::Cost),
            SysComputedColumn::returnLiteral(ProjOrigin::CostJournal));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerJournalType::VendInvoiceRegister),
            SysComputedColumn::returnLiteral(ProjOrigin::InvoiceJournal));

        return SysComputedColumn::switch(
                    SysComputedColumn::comparisonField(viewName,dsName,identifierStr(JournalType)),
                    comparisonExpressionMap,
                    SysComputedColumn::returnLiteral(ProjOrigin::GeneralJournal));

    }

]]></Source>
			</Method>
			<Method>
				<Name>getTransDataAreaId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a string for the <c>dataAreaId</c> of an unposted transaction.
    /// </summary>
    /// <returns>
    /// Data area Id string.
    /// </returns>
    public static str getTransDataAreaId()
    {
        TableName   viewName = identifierStr(projLedgerJournalTransUnpostedView);
        str         dsName   = identifierStr(LedgerJournalTrans_Project);

        return SysComputedColumn::returnField(viewName, dsName, identifierStr(dataAreaId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnBlankString</Name>
				<Source><![CDATA[
    public static str returnBlankString()
    {
        return SysComputedColumn::returnLiteral('');
    }

]]></Source>
			</Method>
			<Method>
				<Name>showTransactionType</Name>
				<Source><![CDATA[
    public static str showTransactionType()
    {
        return SysComputedColumn::returnLiteral(ProjTransType::Cost);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS326431</DeveloperDocumentation>
	<Label>@SYS326430</Label>
	<TitleField1>TransId</TitleField1>
	<TitleField2>TransType</TitleField2>
	<Query>ProjLedgerJournalTransUnposted</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionOrigin</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Amount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SubcontractLine</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<FeatureClass>ProjProjectOperationsSubcontractLineIntegrationToggle</FeatureClass>
			<ExtendedDataType>ProjSubcontractLine</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransType</Name>
			<ViewMethod>showTransactionType</ViewMethod>
			<EnumType>ProjTransType</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>TransactionOrigin</Name>
			<ViewMethod>getTransactionOrigin</ViewMethod>
			<EnumType>ProjOrigin</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyId</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<DataField>SalesCurrencyId</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Amount</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>Amount</ExtendedDataType>
			<ViewMethod>computeAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostPrice</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<DataField>CostPrice</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesPrice</Name>
			<DataField>SalesPrice</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CategoryId</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<DataField>CategoryId</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LinePropertyId</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<DataField>LinePropertyId</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransId</Name>
			<DataField>TransId</DataField>
			<DataSource>LedgerJournalTrans_Project</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ProjId</Name>
			<ExtendedDataType>ProjId</ExtendedDataType>
			<ViewMethod>getProjId</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ItemId</Name>
			<ExtendedDataType>ItemId</ExtendedDataType>
			<ViewMethod>returnBlankString</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>TransDataAreaId</Name>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
			<ViewMethod>getTransDataAreaId</ViewMethod>
			<StringSize>4</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostCurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceName</Name>
			<DataField>Name</DataField>
			<DataSource>Resource</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>CostAmount</Name>
			<ConfigurationKey>Project</ConfigurationKey>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<ViewMethod>computeCostAmount</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>