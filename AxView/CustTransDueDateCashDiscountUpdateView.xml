<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustTransDueDateCashDiscountUpdateView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustTransDueDateCashDiscountUpdateView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findFromCustTrans</Name>
				<Source><![CDATA[
    public static CustTransDueDateCashDiscountUpdateView findFromCustTrans(CustTrans _custTrans)
    {
        CustTransDueDateCashDiscountUpdateView updateView;

        select firstonly updateView
            where updateView.CustTransRecId == _custTrans.RecId;

        return updateView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getPaymentTerms</Name>
				<Source><![CDATA[
    public static str getPaymentTerms()
    {
        TableName viewName = viewstr(CustTransDueDateCashDiscountUpdateView);
        Map transTypeComparisonMap = SysComputedColumn::comparisionExpressionMap();

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Cust),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(CustInvoiceTable),
                fieldStr(CustInvoiceTable, Payment)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Payment),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(LedgerJournalTrans),
                fieldStr(LedgerJournalTrans, Payment)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Sales),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(SalesTable),
                fieldStr(SalesTable, Payment)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::CollectionLetter),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(CustCollectionLetterJour),
                fieldStr(CustCollectionLetterJour, PaymTermId)));

        return SysComputedColumn::switch(
            SysComputedColumn::comparisonField(
                viewName,
                identifierStr(CustTrans),
                fieldStr(CustTrans, TransType)),
            transTypeComparisonMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBaseDate</Name>
				<Source><![CDATA[
    public static str getBaseDate()
    {
        TableName viewName = viewstr(CustTransDueDateCashDiscountUpdateView);
        Map transTypeComparisonMap = SysComputedColumn::comparisionExpressionMap();

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Cust),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(CustInvoiceTable),
                fieldStr(CustInvoiceTable, CashDiscBaseDate)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Payment),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(LedgerJournalTrans),
                fieldStr(LedgerJournalTrans, CashDiscBaseDate)));

        transTypeComparisonMap.insert(
            SysComputedColumn::comparisonLiteral(LedgerTransType::Sales),
            SysComputedColumn::returnField(
                viewName,
                identifierStr(SalesTable),
                fieldStr(SalesTable, CashDiscBaseDate)));

        return SysComputedColumn::switch(
            SysComputedColumn::comparisonField(
                viewName,
                identifierStr(CustTrans),
                fieldStr(CustTrans, TransType)),
            transTypeComparisonMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CustTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>CustTransPayment</Name>
			<ViewMethod>getPaymentTerms</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>CustTransBaseDate</Name>
			<ViewMethod>getBaseDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransType</Name>
			<DataField>TransType</DataField>
			<DataSource>CustTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FreeTextInvoiceBaseDate</Name>
			<DataField>CashDiscBaseDate</DataField>
			<DataSource>CustInvoiceTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>FreeTextInvoicePayment</Name>
			<DataField>Payment</DataField>
			<DataSource>CustInvoiceTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerJournalTransBaseDate</Name>
			<DataField>CashDiscBaseDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LedgerJournalTransPayment</Name>
			<DataField>Payment</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesOrderPayment</Name>
			<DataField>Payment</DataField>
			<DataSource>SalesTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesOrderBaseDate</Name>
			<DataField>CashDiscBaseDate</DataField>
			<DataSource>SalesTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CollectionLetterPayment</Name>
			<DataField>PaymTermId</DataField>
			<DataSource>CustCollectionLetterJour</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>Posted</Name>
								<Field>Posted</Field>
								<Value>NoYes::Yes</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>OrderAccount</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>Invoice</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>InvoiceId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>TransDate</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>InvoiceDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerJournalTrans</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>CustTransId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustInvoiceJour</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustInvoiceJour</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>SalesTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>SalesId</Field>
										<JoinDataSource>CustInvoiceJour</JoinDataSource>
										<RelatedField>SalesId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>SalesType</Field>
										<JoinDataSource>CustInvoiceJour</JoinDataSource>
										<RelatedField>SalesType</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Invoice</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>InvoiceId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>TransDate</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>InvoiceDate</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>AccountNum</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>InvoiceAccount</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustCollectionLetterTrans</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustCollectionLetterTrans</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CustCollectionLetterJour</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>CustCollectionLetterJour</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>AccountNum</Field>
										<JoinDataSource>CustCollectionLetterTrans</JoinDataSource>
										<RelatedField>AccountNum</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>CollectionLetterNum</Field>
										<JoinDataSource>CustCollectionLetterTrans</JoinDataSource>
										<RelatedField>CollectionLetterNum</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>CustTrans</JoinDataSource>
								<RelatedField>CustTransId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>TransType</Name>
						<Field>TransType</Field>
						<Value>((TransType == LedgerTransType::Cust) || (TransType == LedgerTransType::Payment) || (TransType == LedgerTransType::Sales) || (TransType == LedgerTransType::CollectionLetter))</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>