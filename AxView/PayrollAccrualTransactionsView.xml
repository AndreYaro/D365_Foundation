<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollAccrualTransactionsView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PayrollAccrualTransactionsView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>displayTotalAvailableHours</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the computed total available hours for a single record or transaction.
    /// </summary>
    /// <returns>
    /// The total available hours.
    /// </returns>
    public static str displayTotalAvailableHours(int branchNum)
    {
        return (SysComputedColumn::returnField(tableStr(PayrollAccrualTransactionsView), tableStr(PayrollWorkerAccrualAdjustmentView), fieldStr(PayrollWorkerAccrualAdjustmentView, CarryOver)) + '+' +
            SysComputedColumn::returnField(tableStr(PayrollAccrualTransactionsView), tableStr(PayrollWorkerAccrualAdjustmentView), fieldStr(PayrollWorkerAccrualAdjustmentView, Accrued))) + '-' +
        (SysComputedColumn::returnField(tableStr(PayrollAccrualTransactionsView), tableStr(PayrollWorkerAccrualAdjustmentView), fieldStr(PayrollWorkerAccrualAdjustmentView, Used)) + '-' +
            SysComputedColumn::returnField(tableStr(PayrollAccrualTransactionsView), tableStr(PayrollWorkerAccrualAdjustmentView), fieldStr(PayrollWorkerAccrualAdjustmentView, PendingUsage)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAccrualIdToolTip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the tooltip text for AccrualId field of <c>PayrollAccrual</c> table.
    /// </summary>
    /// <param name="_payrollAccrualRecId">
    /// The RecId field of <c>PayrollAccrual</c> table.
    /// </param>
    /// <returns>
    /// Tooltip text for AccrualId field
    /// </returns>
    public static str getAccrualIdToolTip(PayrollAccrualRecId _payrollAccrualRecId)
    {
        return PayrollAccrual::find(_payrollAccrualRecId).toolTipField(fieldNum(PayrollAccrual, AccrualId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualAccruedBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total hours accrued sum from the <c>PayrollAccrualTransactionsView</c> view.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// Sum of Accrued hours.
    /// </returns>
    public static PayrollAccrualTotalAccruedHours getWorkerEnrolledAccrualAccruedBalance(
    PayrollWorkerEnrolledAccrualRecId   _workerEnrolledAccrualRecId,
    date                                _accrualYearStartDate,
    date                                _accrualYearEndDate)
    {
        return PayrollAccrualTransactionsView::getWorkerEnrolledAccrualBalances(_workerEnrolledAccrualRecId,
                                                                                    _accrualYearStartDate,
                                                                                    _accrualYearEndDate).Accrued;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualAvailableBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total hours available sum from the <c>PayrollAccrualTransactionsView</c> view.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// Sum of available hours.
    /// </returns>
    public static PayrollAccrualTotalAvailableHours getWorkerEnrolledAccrualAvailableBalance(
    PayrollWorkerEnrolledAccrualRecId   _workerEnrolledAccrualRecId,
    date                                _accrualYearStartDate,
    date                                _accrualYearEndDate)
    {
        PayrollAccrualTransactionsView  payrollAccrualTransactionsView;

        payrollAccrualTransactionsView = PayrollAccrualTransactionsView::getWorkerEnrolledAccrualBalances(_workerEnrolledAccrualRecId,
                                                                                                            _accrualYearStartDate,
                                                                                                            _accrualYearEndDate);

        return ((payrollAccrualTransactionsView.CarryOver + payrollAccrualTransactionsView.Accrued) - (payrollAccrualTransactionsView.Used + payrollAccrualTransactionsView.PendingUsage));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualBalances</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a record in the <c>PayrollAccrualTransactionsView</c> view based on <c>PayrollWorkerEnrolledAccrual</c> table fields values.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// A record from <c>PayrollAccrualTransactionsView</c> view.
    /// </returns>
    public static PayrollAccrualTransactionsView getWorkerEnrolledAccrualBalances(
    PayrollWorkerEnrolledAccrualRecId   _workerEnrolledAccrualRecId,
    date                                _accrualYearStartDate,
    date                                _accrualYearEndDate)
    {
        PayrollAccrualTransactionsView  payrollAccrualTransactionsView;

        select sum(Accrued), sum(CarryOver), sum(Used), sum(PendingUsage) from payrollAccrualTransactionsView
            where payrollAccrualTransactionsView.WorkerEnrolledAccrual ==  _workerEnrolledAccrualRecId &&
                  payrollAccrualTransactionsView.TransDate >= _accrualYearStartDate &&
                  payrollAccrualTransactionsView.TransDate <= _accrualYearEndDate;

        return payrollAccrualTransactionsView;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualCarryOverBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total hours carry over sum from the <c>PayrollAccrualTransactionsView</c> view.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// Sum of Carry over hours.
    /// </returns>
    public static PayrollAccrualCarriedOverHours getWorkerEnrolledAccrualCarryOverBalance(
    PayrollWorkerEnrolledAccrualRecId   _workerEnrolledAccrualRecId,
    date                                _accrualYearStartDate,
    date                                _accrualYearEndDate)
    {
        return PayrollAccrualTransactionsView::getWorkerEnrolledAccrualBalances(_workerEnrolledAccrualRecId,
                                                                                    _accrualYearStartDate,
                                                                                    _accrualYearEndDate).CarryOver;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualPendingUsageBal</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total hours pending usage sum from the <c>PayrollAccrualTransactionsView</c> view.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// Sum of pening usage hours.
    /// </returns>
    public static PayrollAccrualUsedHours getWorkerEnrolledAccrualPendingUsageBal(
    PayrollWorkerEnrolledAccrualRecId   _workerEnrolledAccrualRecId,
    date                                _accrualYearStartDate,
    date                                _accrualYearEndDate)
    {
        return PayrollAccrualTransactionsView::getWorkerEnrolledAccrualBalances(_workerEnrolledAccrualRecId,
                                                                                    _accrualYearStartDate,
                                                                                    _accrualYearEndDate).PendingUsage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerEnrolledAccrualUsedBalance</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the total hours used sum from the <c>PayrollAccrualTransactionsView</c> view.
    /// </summary>
    /// <param name="_workerEnrolledAccrualRecId">
    /// The RecId field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearStartDate">
    /// The AccrualYearStartDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <param name="_accrualYearEndDate">
    /// The AccrualYearEndDate field of <c>PayrollWorkerEnrolledAccrual</c> table.
    /// </param>
    /// <returns>
    /// Sum of used hours.
    /// </returns>
    public static PayrollAccrualTotalUsedHours getWorkerEnrolledAccrualUsedBalance(
    PayrollWorkerEnrolledAccrualRecId _workerEnrolledAccrualRecId,
    date _accrualYearStartDate,
    date _accrualYearEndDate)
    {
        return PayrollAccrualTransactionsView::getWorkerEnrolledAccrualBalances(_workerEnrolledAccrualRecId,
                                                                                    _accrualYearStartDate,
                                                                                    _accrualYearEndDate).Used;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerNameToolTip</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the tooltip text for Worker name.
    /// </summary>
    /// <param name="_workerRecId">
    /// The RecId field of <c>HcmWorker</c> table.
    /// </param>
    /// <returns>
    /// Tooltip text for Worker name.
    /// </returns>
    public static str getWorkerNameToolTip(HcmWorkerRecId _workerRecId)
    {
        HcmWorker hcmWorker;

        hcmWorker = HcmWorker::find(_workerRecId);

        return strFmt("@SYS26868", hcmWorker.name(), hcmWorker.PersonnelNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>TestMethod</Name>
				<Source><![CDATA[
    private void TestMethod()
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PayrollAdministration</ConfigurationKey>
	<DeveloperDocumentation>@Payroll:ThePayrollaccrualtransactionsviewViewContainsTheCombinedPayr</DeveloperDocumentation>
	<Label>@Payroll:PayrollAccrualTransactionView</Label>
	<TitleField1>AccrualId</TitleField1>
	<TitleField2>WorkerName</TitleField2>
	<Query>PayrollAccrualTransactionsQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccrualId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@SYS50012</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WorkerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccrualId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CarryOver</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Accrued</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Used</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransSource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreatedByUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CreateDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ManualTransComments</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Accrual</Name>
			<DataField>Accrual</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccrualId</Name>
			<Label>@Payroll:BenefitAccrualPlan</Label>
			<DataField>AccrualId</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Accrued</Name>
			<Label>@Payroll:AmountAccrued1</Label>
			<DataField>Accrued</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CarryOver</Name>
			<Label>@Payroll:AmountCarriedForward</Label>
			<DataField>CarryOver</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CreatedByUserId</Name>
			<Label>@SYS2192</Label>
			<DataField>CreatedByUserId</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<Label>@SYS67</Label>
			<DataField>TransDate</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransSource</Name>
			<Label>@SYS11258</Label>
			<DataField>TransSource</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Used</Name>
			<Label>@SYS313714</Label>
			<DataField>Used</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Worker</Name>
			<DataField>Worker</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WorkerEnrolledAccrual</Name>
			<DataField>WorkerEnrolledAccrual</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WorkerName</Name>
			<Label>@SYS305602</Label>
			<DataField>WorkerName</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ManualTransComments</Name>
			<Label>@SYS53151</Label>
			<DataField>ManualTransComments</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PendingUsage</Name>
			<DataField>PendingUsage</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsPendingUsage</Name>
			<DataField>IsPendingUsage</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EarningCode</Name>
			<DataField>EarningCode</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TotalAvailableHours</Name>
			<ExtendedDataType>PayrollAccrualTotalAvailableHours</ExtendedDataType>
			<ViewMethod>displayTotalAvailableHours</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CreateDateTime</Name>
			<Label>@SYS59617</Label>
			<DataField>CreateDateTime</DataField>
			<DataSource>PayrollWorkerAccrualAdjustmentView</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<QueryType>Union</QueryType>
		<DataSources />
	</ViewMetadata>
</AxView>