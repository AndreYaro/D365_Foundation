<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPrepayOpen</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchPrepayOpen extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>unpaidPrepaymentAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the SQL string that creates the column which calculates the Unpaid prepayment amount for a given prepayment.
    /// </summary>
    public static str unpaidPrepaymentAmount()
    {
        /*
        Actual SQL generated by the code below for reference

        ABS(
            ((SUM(T1.AmountCur)) + (ISNULL(SUM(T1.TaxWithholdAmountCur), 0))) -
            (SUM(
                (T1.SettleAmountCur) +
                (CASE
                    WHEN (T1.SettleAmountCur IS NULL) OR (T1.SettleAmountCur = 0) OR (T1.TaxWithholdAmountCur IS NULL) OR (T1.TaxWithholdAmountCur = 0) THEN 0
                    ELSE (T1.TaxWithholdAmountCur) * ((T1.SettleAmountCur) / (T1.AmountCur))
                END)
            ))
           )
        */
        const str t1PrefixWithReplacement = 'T1.%1';
        const str 1 zeroAsAString = '0';

        str amountCurFieldString = strFmt(t1PrefixWithReplacement, fieldStr(PurchPrepayOpenBase, AmountCur));
        str settleAmountCurFieldString = strFmt(t1PrefixWithReplacement, fieldStr(PurchPrepayOpenBase, SettleAmountCur));
        str taxWithholdAmountCurFieldString = strFmt(t1PrefixWithReplacement, fieldStr(PurchPrepayOpenBase, TaxWithholdAmountCur));

        str amountCurSum = SysComputedColumn::sum(amountCurFieldString);
        str taxWithholdSum = SysComputedColumn::sum(taxWithholdAmountCurFieldString);
        str isNullTaxWithhold = strFmt('ISNULL(%1, %2)', taxWithholdSum, zeroAsAString);

        str sumAmountCurTaxWithhold = SysComputedColumn::add(amountCurSum, isNullTaxWithhold);

        str settleAmountCurIsNull = SysComputedColumn::isNullExpression(settleAmountCurFieldString);
        str settleAmountCurIsZero = SysComputedColumn::equalExpression(settleAmountCurFieldString, zeroAsAString);
        str taxWithholdIsNull = SysComputedColumn::isNullExpression(taxWithholdAmountCurFieldString);
        str taxWithholdIsZero = SysComputedColumn::equalExpression(taxWithholdAmountCurFieldString, zeroAsAString);

        List orList = new List(Types::String);
        orList.addEnd(settleAmountCurIsNull);
        orList.addEnd(settleAmountCurIsZero);
        orList.addEnd(taxWithholdIsNull);
        orList.addEnd(taxWithholdIsZero);

        str whenInternals = SysComputedColumn::or(orList);

        str elseInternals = SysComputedColumn::multiply(taxWithholdAmountCurFieldString,
                                SysComputedColumn::divide(settleAmountCurFieldString, amountCurFieldString));

        str caseStatement = SysComputedColumn::if(whenInternals, zeroAsAString, elseInternals);

        str settleAmountCurPlusCase = SysComputedColumn::add(settleAmountCurFieldString, caseStatement);

        str sumSettleAmountCurPlusCase = SysComputedColumn::sum(settleAmountCurPlusCase);

        str formulaBeforeAbs = SysComputedColumn::subtract(sumAmountCurTaxWithhold, sumSettleAmountCurPlusCase);

        return SysComputedColumn::abs(SysComputedColumn::subtract(sumAmountCurTaxWithhold, sumSettleAmountCurPlusCase));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@AccountsPayable:OpenPrepayments</Label>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrderAccount</Name>
			<DataField>OrderAccount</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchName</Name>
			<DataField>PurchName</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchId</Name>
			<DataField>PurchId</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Currency</Name>
			<DataField>Currency</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AmountCur</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>AmountCur</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PrepayApplicationRemaining</Name>
			<HelpText>@AccountsPayable:UnpostedPaidAmountToolTip</HelpText>
			<Label>@AccountsPayable:UnpostedPaidAmount</Label>
			<DataField>PrepayApplicationRemaining</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PrepayAvailable</Name>
			<Label>@AccountsPayable:RemainingAmountToInvoice</Label>
			<DataField>PrepayAvailableComputed</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PrepayLimit</Name>
			<Label>@AccountsPayable:PrepaymentAmount</Label>
			<DataField>PrepayLimit</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SettleAmountCur</Name>
			<Aggregation>Sum</Aggregation>
			<DataField>SettleAmountCur</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxWithholdAmountCur</Name>
			<DataField>TaxWithholdAmountCur</DataField>
			<DataSource>PurchPrepayOpenBase</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>UnpaidPrepaymentAmount</Name>
			<Label>@AccountsPayable:UnpaidPrepaymentAmount</Label>
			<ExtendedDataType>AmountCur</ExtendedDataType>
			<ViewMethod>unpaidPrepaymentAmount</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PurchPrepayOpenBase</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PurchPrepayOpenBase</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField2</Name>
						<DataSource>PurchPrepayOpenBase</DataSource>
						<Field>OrderAccount</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField1</Name>
						<DataSource>PurchPrepayOpenBase</DataSource>
						<Field>PurchId</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>