<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CostMonthlyInventoryCostObjectCacheKPIView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CostMonthlyInventoryCostObjectCacheKPIView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>inventoryAccuracy</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a literal expression that computes the inventory accuracy.
    /// </summary>
    private static str inventoryAccuracy()
    {
        TableName       viewName = tableStr(CostMonthlyInventoryCostObjectCacheKPIView);

        str costOfDisposedMaterialsInCounting = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, CostOfDisposedMaterialsInCounting));
        str endingBalance = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, EndingBalance));

        return SysComputedColumn::if(
                    SysComputedColumn::compareExpressions(
                        SysComputedColumn::comparisonField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, EndingBalance)),
                        '<=',
                        SysComputedColumn::comparisonLiteral(0)),
                    SysComputedColumn::if(SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(ViewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, CostOfDisposedMaterialsInCounting)),
                                                                             SysComputedColumn::returnLiteral(0)),
                                          SysComputedColumn::returnLiteral(1),
                                          SysComputedColumn::returnLiteral(0)),
                    SysComputedColumn::if(SysComputedColumn::compareExpressions(
                                          SysComputedColumn::comparisonField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, EndingBalance)),
                                          '>',
                                          SysComputedColumn::abs(SysComputedColumn::comparisonField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, CostOfDisposedMaterialsInCounting)))),
                                          SysComputedColumn::subtract(SysComputedColumn::returnLiteral(1),
                                                SysComputedColumn::divide(SysComputedColumn::abs(costOfDisposedMaterialsInCounting),
                                                                          endingBalance)),
                                          SysComputedColumn::returnLiteral(0)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryTurn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a literal expression that computes the inventory turn.
    /// </summary>
    private static str inventoryTurn()
    {
        TableName       viewName = tableStr(CostMonthlyInventoryCostObjectCacheKPIView);

        str endingBalance = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, EndingBalance));
        str netChange = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, NetChange));
        str costOfConsumedMaterials = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, CostOfConsumedMaterials));
        str costOfSoldMaterials = SysComputedColumn::returnField(viewName, identifierStr(CostMonthlyInventoryCostObjectCache), fieldStr(CostMonthlyInventoryCostObjectCache, CostOfSoldMaterials));
        str costOfMaterial = SysComputedColumn::negative(SysComputedColumn::add(CostOfConsumedMaterials, CostOfSoldMaterials));
        str beginingBalance = SysComputedColumn::subtract(endingBalance, netChange);
        str averageBalance = SysComputedColumn::divide(SysComputedColumn::add(beginingBalance, endingBalance), SysComputedColumn::returnLiteral(2));

        return SysComputedColumn::if(
            SysComputedColumn::and2(SysComputedColumn::compareExpressions(averageBalance, '>=', SysComputedColumn::returnLiteral(0.01)),
                                    SysComputedColumn::compareExpressions(CostOfMaterial, '>', SysComputedColumn::returnLiteral(0))),
                    SysComputedColumn::divide(costOfMaterial, averageBalance),
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@CostManagement:CostMonthlyInventoryCostObjectCacheKPIView_DeveloperDoc</DeveloperDocumentation>
	<Label>@CostManagement:CostMonthlyInventoryCostObjectCacheKPIView_ViewName</Label>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ConfigId</Name>
			<DataField>ConfigId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ColorId</Name>
			<DataField>ColorId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SizeId</Name>
			<DataField>SizeId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StyleId</Name>
			<DataField>StyleId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SiteId</Name>
			<DataField>SiteId</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfProcuredMaterials</Name>
			<DataField>CostOfProcuredMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfManufacturedMaterials</Name>
			<DataField>CostOfManufacturedMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfDisposedMaterials</Name>
			<DataField>CostOfDisposedMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfDisposedMaterialsInCounting</Name>
			<DataField>CostOfDisposedMaterialsInCounting</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfTransferedMaterials</Name>
			<DataField>CostOfTransferedMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfConsumedMaterials</Name>
			<DataField>CostOfConsumedMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostOfSoldMaterials</Name>
			<DataField>CostOfSoldMaterials</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>NetChange</Name>
			<DataField>NetChange</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>EndingBalance</Name>
			<DataField>EndingBalance</DataField>
			<DataSource>CostMonthlyInventoryCostObjectCache</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>InventoryAccuracy</Name>
			<ExtendedDataType>CostInventoryAccuracy</ExtendedDataType>
			<ViewMethod>inventoryAccuracy</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>InventoryTurn</Name>
			<ExtendedDataType>CostInventoryTurn</ExtendedDataType>
			<ViewMethod>inventoryTurn</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CostMonthlyInventoryCostObjectCache</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CostMonthlyInventoryCostObjectCache</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>