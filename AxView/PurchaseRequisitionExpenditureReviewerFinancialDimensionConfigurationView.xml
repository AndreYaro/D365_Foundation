<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView extends common
{   
    #define.organizationConfigurationView(1)
    #define.projectConfigurationView(2)

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>accountingDistributionType</Name>
				<Source><![CDATA[
    private static str accountingDistributionType(int _branch)
    {
        str         computedColumnStr;
        DictView    dictView;

        switch (_branch)
        {
            case #organizationConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView), 
                    fieldstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView, AccountingDistributionType));
                break;

            case #projectConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView, AccountingDistributionType));
                break;

            default:
                break;
        }

        return computedColumnStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>financialDimensionName</Name>
				<Source><![CDATA[
    private static str financialDimensionName(int _branch)
    {
        str         computedColumnStr;
        DictView    dictView;

        switch (_branch)
        {
            case #organizationConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView, FinancialDimensionName));
                break;

            case #projectConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView, FinancialDimensionName));
                break;

            default:
                break;
        }

        return computedColumnStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>legalEntityId</Name>
				<Source><![CDATA[
    private static str legalEntityId(int _branch)
    {
        str         computedColumnStr;
        DictView    dictView;

        switch (_branch)
        {
            case #organizationConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView, LegalEntityId));
                break;

            case #projectConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView, LegalEntityId));
                break;

            default:
                break;
        }

        return computedColumnStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>reviewer</Name>
				<Source><![CDATA[
    private static str reviewer(int _branch)
    {
        str         computedColumnStr;
        DictView    dictView;

        switch (_branch)
        {
            case #organizationConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView, Reviewer));
                break;

            case #projectConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView, Reviewer));
                break;

            default:
                break;
        }

        return computedColumnStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>financialDimensionActive</Name>
				<Source><![CDATA[
    private static str financialDimensionActive(int _branch)
    {
        str         computedColumnStr;
        DictView    dictView;

        switch (_branch)
        {
            case #organizationConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerOrgFinancialDimensionConfigurationView, FinancialDimensionActive));
                break;

            case #projectConfigurationView:
                dictView = new DictView(tablenum(PurchaseRequisitionExpenditureReviewerFinancialDimensionConfigurationView));
                computedColumnStr = dictView.computedColumnString(identifierstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView),
                    fieldstr(PurchaseRequisitionExpenditureReviewerProjectFinancialDimensionConfigurationView, FinancialDimensionActive));
                break;

            default:
                break;
        }

        return computedColumnStr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Query>PurchRequisitionExpenditureReviewerFinancialDimensionConfigurationQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>AccountingDistributionType</Name>
			<ViewMethod>accountingDistributionType</ViewMethod>
			<StringSize>20</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>FinancialDimensionName</Name>
			<ViewMethod>financialDimensionName</ViewMethod>
			<StringSize>60</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>LegalEntityId</Name>
			<ViewMethod>legalEntityId</ViewMethod>
			<StringSize>4</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Reviewer</Name>
			<ViewMethod>reviewer</ViewMethod>
			<StringSize>60</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>FinancialDimensionActive</Name>
			<ViewMethod>financialDimensionActive</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>