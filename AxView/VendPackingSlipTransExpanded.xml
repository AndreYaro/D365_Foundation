<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendPackingSlipTransExpanded</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendPackingSlipTransExpanded extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>daysDelayed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a derived column for the <c>DaysDelayed</c> view column.
    /// </summary>
    /// <returns>
    /// The SQL statement which defines the <c>DaysDelayed</c> view column.
    /// </returns>
    public static str daysDelayed()
    {
        TableName   viewName = tableStr(VendPackingSlipTransExpanded);
        str         dataSourceName = identifierStr(VendPackingSlipTrans);
        str         field1 = SysComputedColumn::comparisonField(
                                    viewName,
                                    dataSourceName,
                                    fieldStr(VendPackingSlipTransExpanded, PurchaseLineExpectedDeliveryDate));

        str         field2 = SysComputedColumn::comparisonField(
                                    viewName,
                                    dataSourceName,
                                    fieldStr(VendPackingSlipTransExpanded, DeliveryDate));

        return SysComputedColumn::getDateDiffWithFallbackToZero(field1, field2, SysComputedColumnDatePart::Day);
    }

]]></Source>
			</Method>
			<Method>
				<Name>daysDelayedLeft</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a SQL statement that calculates the number of days a receipt is late after subtracting
    /// all its weeks of delay.
    /// </summary>
    /// <returns>
    /// A SQL statement.
    /// </returns>
    private static str daysDelayedLeft()
    {
        #timeConstants

        return VendPackingSlipTransExpanded::daysDelayed() + ' % ' + SysComputedColumn::returnLiteral(#daysPerWeek);
    }

]]></Source>
			</Method>
			<Method>
				<Name>daysEarly</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a derived column for the <c>DaysEarly</c> view column.
    /// </summary>
    /// <returns>
    /// The T-SQL statement which defines the <c>DaysEarly</c> view column.
    /// </returns>
    public static str daysEarly()
    {
        TableName   viewName = tableStr(VendPackingSlipTransExpanded);
        str         dataSourceName = identifierStr(VendPackingSlipTrans);
        str         field1 = SysComputedColumn::comparisonField(
                                    viewName,
                                    dataSourceName,
                                    fieldStr(VendPackingSlipTransExpanded, PurchaseLineExpectedDeliveryDate));

        str         field2 = SysComputedColumn::comparisonField(
                                    viewName,
                                    dataSourceName,
                                    fieldStr(VendPackingSlipTransExpanded, DeliveryDate));

        return SysComputedColumn::getDateDiffWithFallbackToZero(field2, field1, SysComputedColumnDatePart::Day);
    }

]]></Source>
			</Method>
			<Method>
				<Name>delayed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a derived column for the universal transaction line category.
    /// </summary>
    /// <returns>
    /// A string defining the computed column t-sql.
    /// </returns>
    public static str delayed()
    {
        Map         switchMap = new Map(Types::String, Types::String);
        TableName   viewName = tableStr(VendPackingSlipTransExpanded);
        str         dataSourceName = identifierStr(VendPackingSlipTrans);

        switchMap.insert(VendPackingSlipTransExpanded::createComparison(viewName, dataSourceName, ' < '),
                         SysComputedColumn::returnLiteral(VendPackingSlipTransTimeStatus::Late));

        switchMap.insert(VendPackingSlipTransExpanded::createComparison(viewName, dataSourceName, ' > '),
                         SysComputedColumn::returnLiteral(VendPackingSlipTransTimeStatus::Early));

        return SysComputedColumn::switch('',
                                         switchMap,
                                         SysComputedColumn::returnLiteral(VendPackingSlipTransTimeStatus::OnTime));
    }

]]></Source>
			</Method>
			<Method>
				<Name>procurementCategoryCurrent</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a derived column for the universal transaction line category.
    /// </summary>
    /// <returns>
    /// The item transaction if the product is currently assigned to a category; otherwise, the procurement
    /// category stored on the transaction line.
    /// </returns>
    public static str procurementCategoryCurrent()
    {
        return SysComputedColumn::currentItemProductCategory(tableStr(VendPackingSlipTransExpanded),
                                                             identifierStr(VendPackingSlipTrans),
                                                             fieldStr(VendPackingSlipTrans, ItemId),
                                                             fieldStr(VendPackingSlipTrans, ProcurementCategory),
                                                             identifierStr(EcoResProductCategoryExpanded),
                                                             fieldStr(EcoResProductCategoryExpanded, RecIdCategory));
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalWeeksDelayed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines a derived column for the <c>TotalWeeksDelayed</c> view column.
    /// </summary>
    /// <returns>
    /// The T-SQL statement which defines the <c>TotalWeeksDelayed</c> view column.
    /// </returns>
    public static str totalWeeksDelayed()
    {
        Map  switchMap = new Map(Types::String, Types::String);

        switchMap.insert(
            SysComputedColumn::compareExpressions(
                VendPackingSlipTransExpanded::daysDelayedLeft(),
                ' > ',
                SysComputedColumn::comparisonLiteral(0)),
            SysComputedColumn::returnLiteral(1));

        return SysComputedColumn::add(
                VendPackingSlipTransExpanded::weeksDelayed(),
                SysComputedColumn::switch('', switchMap, SysComputedColumn::returnLiteral(0)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>weeksDelayed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a T-SQL statement that calculates number of weeks a receipt was delayed.
    /// </summary>
    /// <returns>
    /// A T-SQL statement.
    /// </returns>
    private static str weeksDelayed()
    {
        #timeConstants

        return SysComputedColumn::divide(
                VendPackingSlipTransExpanded::daysDelayed(),
                SysComputedColumn::returnLiteral(#daysPerWeek));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceivedCompleteInFullComputedColumn</Name>
				<Source><![CDATA[
    private static str isReceivedCompleteInFullComputedColumn()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(SysComputedColumn::returnField(tableStr(VendPackingSlipTransExpanded), identifierStr(VendPackingSlipTrans), fieldStr(VendPackingSlipTrans, Remain)), SysComputedColumn::returnLiteral(0)),
                    // If RaminingPurchaseQuantity
                    SysComputedColumn::returnLiteral(NoYes::Yes),
                    // Else
                    SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceivedCompleteOnTimeComputedColumn</Name>
				<Source><![CDATA[
    private static str isReceivedCompleteOnTimeComputedColumn()
    {
        TableName   viewName = tableStr(VendPackingSlipTransExpanded);
        str         dataSourceName = identifierStr(VendPackingSlipTrans);

        return SysComputedColumn::if(
                    VendPackingSlipTransExpanded::createComparison(viewName, dataSourceName, ' >= '),
                SysComputedColumn::returnLiteral(NoYes::Yes),
                SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isReceivedCompleteOnTimeInFullComputedColumn</Name>
				<Source><![CDATA[
    private static str isReceivedCompleteOnTimeInFullComputedColumn()
    {
        TableName   viewName = tableStr(VendPackingSlipTransExpanded);
        str         dataSourceName = identifierStr(VendPackingSlipTrans);

        return SysComputedColumn::if(
                SysComputedColumn::and2(
                    VendPackingSlipTransExpanded::createComparison(viewName, dataSourceName, ' >= '),
                    SysComputedColumn::equalExpression(SysComputedColumn::returnField(tableStr(VendPackingSlipTransExpanded), identifierStr(VendPackingSlipTrans), fieldStr(VendPackingSlipTrans, Remain)), SysComputedColumn::returnLiteral(0))),
                SysComputedColumn::returnLiteral(NoYes::Yes),
                SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createComparison</Name>
				<Source><![CDATA[
    private static str createComparison(TableName _viewName, str _dataSourceName, str _operator)
    {
        return SysComputedColumn::compareExpressions(
                                        SysComputedColumn::comparisonField(_viewName,
                                                                           _dataSourceName,
                                                                           fieldStr(VendPackingSlipTransExpanded, PurchaseLineExpectedDeliveryDate)),
                                        _operator,
                                        SysComputedColumn::comparisonField(_viewName,
                                                                           _dataSourceName,
                                                                           fieldStr(VendPackingSlipTransExpanded, DeliveryDate)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS322188</DeveloperDocumentation>
	<Label>@SYS315016</Label>
	<TitleField1>ItemId</TitleField1>
	<TitleField2>RecId</TitleField2>
	<Query>VendPackingSlipTransExpanded</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventQty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementCategoryCurrent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryUnitId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProcurementCategory</Name>
			<DataField>ProcurementCategory</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ValueMST</Name>
			<DataField>ValueMST</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventQty</Name>
			<DataField>InventQty</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>configId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventLocationId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductCategory</Name>
			<Label>@SYS39775</Label>
			<DataField>RecIdCategory</DataField>
			<DataSource>EcoResProductCategoryExpanded</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DeliveryPostalAddress</Name>
			<DataField>DeliveryPostalAddress</DataField>
			<DataSource>VendPackingSlipJour</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceAccount</Name>
			<DataField>InvoiceAccount</DataField>
			<DataSource>VendPackingSlipJour</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OrderAccount</Name>
			<DataField>OrderAccount</DataField>
			<DataSource>VendPackingSlipJour</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DeliveryDate</Name>
			<DataField>DeliveryDate</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchaseLineExpectedDeliveryDate</Name>
			<DataField>PurchaseLineExpectedDeliveryDate</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>ProcurementCategoryCurrent</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>procurementCategoryCurrent</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Delayed</Name>
			<ViewMethod>delayed</ViewMethod>
			<EnumType>VendPackingSlipTransTimeStatus</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>DaysDelayed</Name>
			<ExtendedDataType>DaysDelayed</ExtendedDataType>
			<ViewMethod>daysDelayed</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StockedProduct</Name>
			<DataField>StockedProduct</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PurchUnit</Name>
			<DataField>PurchUnit</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>WorkerPurchaser</Name>
			<DataField>WorkerPurchaser</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>DaysEarly</Name>
			<ExtendedDataType>DaysEarly</ExtendedDataType>
			<ViewMethod>daysEarly</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemBuyerGroupId</Name>
			<DataField>ItemBuyerGroupId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>WeeksDelayed</Name>
			<ViewMethod>totalWeeksDelayed</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventoryUnitId</Name>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RemainingPurchaseQuantity</Name>
			<DataField>Remain</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsReceivedCompleteInFull</Name>
			<ExtendedDataType>VendSupplyRiskReceivedCompleteInFull</ExtendedDataType>
			<ViewMethod>isReceivedCompleteInFullComputedColumn</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsReceivedCompleteOnTimeInFull</Name>
			<ExtendedDataType>VendSupplyRiskReceivedCompleteOnTimeInFull</ExtendedDataType>
			<ViewMethod>isReceivedCompleteOnTimeInFullComputedColumn</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProductReceiptDate</Name>
			<DataField>InventDate</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsReceivedCompleteOnTime</Name>
			<ExtendedDataType>VendSupplyRiskReceivedCompleteOnTime</ExtendedDataType>
			<ViewMethod>isReceivedCompleteOnTimeComputedColumn</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LineDescription</Name>
			<DataField>Name</DataField>
			<DataSource>VendPackingSlipTrans</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>