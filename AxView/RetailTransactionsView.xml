<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionsView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This view contains all the sales entries.
/// We can use this view to filter voided transactions and price overriden transactions by adding filters to
/// entryStatus, transactionStatus (for voided transactions) and priceChange (for price overrides).
/// This class contains format changing methods.
/// </summary>
public class RetailTransactionsView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>LineNetAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Negates netAmount in RetailTransactionSalesTrans
    /// </summary>
    /// <returns>
    /// A string sql expression that negates netAmount in RetailTransactionSalesTrans
    /// </returns>
    public static str LineNetAmount()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, netAmount)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>LineNetAmountInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate netAmountInclTax in RetailTransactionSalesTrans
    /// </summary>
    /// <returns>
    /// A string sql expression that calculate netAmountInclTax in RetailTransactionSalesTrans
    /// </returns>
    public static str LineNetAmountInclTax()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, netAmountInclTax)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>LineQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Negates qty in RetailTransactionSalesTrans
    /// </summary>
    /// <returns>
    /// A string sql expression that negates qty in RetailTransactionSalesTrans
    /// </returns>
    public static str LineQty()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, qty)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>LineTaxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Negates taxAmount in RetailTransactionSalesTrans
    /// </summary>
    /// <returns>
    /// A string sql expression that negates taxAmount in RetailTransactionSalesTrans
    /// </returns>
    public static str LineTaxAmount()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, taxAmount)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>GrossAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Negates grossAmount in RetailTransactionTable
    /// </summary>
    /// <returns>
    /// A string sql expression that negates grossAmount in RetailTransactionSalesTrans
    /// </returns>
    public static str GrossAmount()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionTable),
            fieldStr(RetailTransactionTable, grossAmount)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>NetAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Negates netAmount in RetailTransactionTable
    /// </summary>
    /// <returns>
    /// A string sql expression that negates netAmount in RetailTransactionSalesTrans
    /// </returns>
    public static str NetAmount()
    {
        str expr = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionTable),
            fieldStr(RetailTransactionTable, netAmount)
        );

        str neg = SysComputedColumn::negative(expr);

        return neg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsTransactionOrLineVoided</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a value indicating if the line or the transaction for the line was voided.
    /// </summary>
    /// <returns>
    /// A string sql expression that computes if the line or the transaction was voided.
    /// </returns>
    public static str IsTransactionOrLineVoided()
    {
        str transactionEntryStatus = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionTable),
            fieldStr(RetailTransactionTable, entryStatus)
        );

        str lineTransactionStatus = SysComputedColumn::returnField(
            tableStr(RetailTransactionsView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, transactionStatus)
        );

        str voidCondition = SysComputedColumn::or2( SysComputedColumn::equalExpression(transactionEntryStatus,  SysComputedColumn::returnLiteral(1)),
                                                    SysComputedColumn::equalExpression(lineTransactionStatus, SysComputedColumn::returnLiteral(1)));

        return SysComputedColumn::if( voidCondition, SysComputedColumn::returnLiteral(NoYes::Yes), SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>staffId</Name>
			<DataField>staffId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>terminalId</Name>
			<DataField>terminalId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Channel</Name>
			<DataField>RetailChannelId</DataField>
			<DataSource>RetailChannelTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transDate</Name>
			<DataField>transDate</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionId</Name>
			<DataField>transactionId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionStatus</Name>
			<DataField>transactionStatus</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemId</Name>
			<DataField>itemId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>priceChange</Name>
			<DataField>priceChange</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>entryStatus</Name>
			<DataField>entryStatus</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>type</Name>
			<DataField>type</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>custAccount</Name>
			<DataField>custAccount</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>numberOfItemLines</Name>
			<DataField>numberOfItemLines</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>originalPrice</Name>
			<DataField>originalPrice</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>price</Name>
			<DataField>price</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>paymentAmount</Name>
			<DataField>paymentAmount</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LineNetAmount</Name>
			<ViewMethod>LineNetAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LineNetAmountInclTax</Name>
			<ViewMethod>LineNetAmountInclTax</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LineQty</Name>
			<ViewMethod>LineQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LineTaxAmount</Name>
			<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
			<ViewMethod>LineTaxAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>GrossAmount</Name>
			<ViewMethod>GrossAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>NetAmount</Name>
			<ViewMethod>NetAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CompanyId</Name>
			<DataField>DataAreaId</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>MonthGregorian</Name>
			<DataField>MonthGregorian</DataField>
			<DataSource>BICalendarOffsetsDimension</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>YearOffset</Name>
			<DataField>YearOffset</DataField>
			<DataSource>BICalendarOffsetsDimension</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>lineNum</Name>
			<DataField>lineNum</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>store</Name>
			<DataField>store</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsTransactionOrLineVoided</Name>
			<ViewMethod>IsTransactionOrLineVoided</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>InventTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailTransactionSalesTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailTransactionSalesTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailTransactionTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailTransactionTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BICalendarOffsetsDimension</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BICalendarOffsetsDimension</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>transDate</Field>
										<JoinDataSource>RetailTransactionTable</JoinDataSource>
										<RelatedField>Date_</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>type</Name>
								<Field>type</Field>
								<Value>Sales, CustomerOrder, PendingSalesOrder</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>transactionId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>transactionId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>store</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>store</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>terminalId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>terminal</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailChannelTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailChannelTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Channel</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>itemId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>ItemId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>