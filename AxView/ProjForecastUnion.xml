<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjForecastUnion</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjForecastUnion extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        Common commonForecast;
        commonForecast = ProjForecastUnion::getForecast(this);
        if (commonForecast.validateDelete())
        {
            ttsbegin;
            commonForecast.selectForUpdate(true);
            commonForecast.delete();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays quantity value as string
    /// </summary>
    /// <returns>
    /// The string representation of quantity
    /// </returns>
    public display QtyString displayQty()
    {
        QtyString qty;

        switch (this.ProjTransType)
        {
            case ProjTransType::Revenue:
                qty = '';
                break;
            default:
                qty = strFmt('%1', this.Qty);
                break;
        }

        return qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalCostPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns cost price multiplied by quantity for the current forecast record.
    /// </summary>
    /// <returns>
    /// Cost line amount.
    /// </returns>
    public display LineAmount displayTotalCostPrice()
    {
        return this.CostPrice*this.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>displayTotalSalesPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns sales price multiplied by quantity for the current forecast record.
    /// </summary>
    /// <returns>
    /// Sales line amount.
    /// </returns>
    public display LineAmount displayTotalSalesPrice()
    {
        return this.SalesPrice*this.Qty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getForecast</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a specific forecast record based on the <c>ProjForecastUnion</c>'s <c>ProjTransType</c>.
    /// </summary>
    /// <param name="_projForecastUnion">
    /// A ProjForecastUnion buffer
    /// </param>
    /// <returns>
    /// The corresponding forecast record
    /// </returns>
    public static Common getForecast(ProjForecastUnion _projForecastUnion)
    {

        ForecastSales forecastSales;
        Common        common = _projForecastUnion;

        switch (_projForecastUnion.ProjTransType)
        {
            case ProjTransType::Cost:
                common =  ProjForecastCost::find(_projForecastUnion.TransId);
                break;

            case ProjTransType::Revenue:
                common =  ProjForecastRevenue::find(_projForecastUnion.TransId);
                break;

            case ProjTransType::Hour:
                common =  ProjForecastEmpl::findRecId(_projForecastUnion.RecId);
                break;

            case ProjTransType::Item:
                select firstonly * from forecastSales where forecastSales.RecId == _projForecastUnion.RecId;
                common =  forecastSales;
                break;

            case ProjTransType::OnAccount:
                common =  ProjForecastOnAcc::find(_projForecastUnion.TransId);
                break;

            default :
                EventHandlerResult eventResult = new EventHandlerResult();
                ProjForecastUnion::runFromTransactionTypeDelegate(_projForecastUnion.ProjTransType, common, eventResult);
                      
                if (!eventResult.hasResult())
                {
                    throw error(Error::wrongUseOfFunction(funcName()));
                }
                else
                {
                    common = eventResult.Result();
                }
                break;
        }

        return common;
    }

]]></Source>
			</Method>
			<Method>
				<Name>runFromTransactionTypeDelegate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate to be called in the default case within the getForecast() method to return specific forecast record for custom transaction types.
    /// </summary>
    /// <param name = "_projTransType">The transaction type used for execution.</param>
    /// <param name = "_common">The table buffer used for the forecasting.</param>
    /// <param name = "_result">The <c>EventHandlerResult</c> instance to be assigned to prior to exiting the method once the work is completed.</param>
    static delegate void runFromTransactionTypeDelegate(ProjTransType _projTransType, Common _common, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@SYS329855</DeveloperDocumentation>
	<Label>@SYS102639</Label>
	<TitleField1>ModelId</TitleField1>
	<TitleField2>SchedFromDate</TitleField2>
	<Query>ProjForecastUnion</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ModelId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransId</Name>
			<DataField>TransId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CategoryId</Name>
			<DataField>CategoryId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ModelId</Name>
			<DataField>ModelId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SchedFromDate</Name>
			<DataField>SchedFromDate</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjTransType</Name>
			<DataField>ProjTransType</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Active</Name>
			<DataField>Active</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ProjForecastBudgetType</Name>
			<DataField>ProjForecastBudgetType</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LinePropertyId</Name>
			<DataField>LinePropertyId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Txt</Name>
			<DataField>Txt</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyId</Name>
			<DataField>CurrencyId</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CostPrice</Name>
			<DataField>CostPrice</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesPrice</Name>
			<DataField>SalesPrice</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceCategory</Name>
			<DataField>ResourceCategory</DataField>
			<DataSource>ProjForecastEmplView_1</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>