<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendLedgerBalance_FR</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendLedgerBalance_FR extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>balancePerDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates vendor starting balance on the date specified in the <paramRef name="_calcDate"/>.
    /// </summary>
    /// <param name = "_calcDate">The starting date of the reporting period.</param>
    /// <returns>The table buffer <c>VendTrans</c> with filled starting balance in transaction curency in the field AmountCur
    /// and starting balance in accounting currency in the field AmountMST.</returns>
    public VendTrans balancePerDate(TransDate _calcDate)
    {
        VendTrans vendTrans;

        select sum(AmountCur), sum(AmountMST) from vendTrans
            where vendTrans.AccountNum      == this.AccountNum
                && vendTrans.PostingProfile == this.PostingProfile
                && vendTrans.CurrencyCode   == this.CurrencyCode
                && vendTrans.TransDate      < _calcDate;

        return vendTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deCompAuxLib</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the party name from a transaction.
    /// </summary>
    /// <returns>
    /// The party name from the transaction.
    /// </returns>
    /// <remarks>
    /// This method is used for Data Export for France.
    /// </remarks>
    public display VendName deCompAuxLib()
    {
        DirPartyTable partyTable;
        VendTable     vendTable;

        select firstonly Party from vendTable
            where vendTable.AccountNum == this.AccountNum
        join Name from partyTable
            where partyTable.RecId == vendTable.Party;

        return partyTable.Name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deLedgerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays Ledger account in a format for GDPdU export.
    /// </summary>
    /// <returns>
    /// The ledger account if it doesn't have financial dimensions set,
    /// otherwise ledger account with financial dimensions split by dimensions separator.
    /// </returns>
    /// <remarks>
    /// This method is used for Data Export for France.
    /// </remarks>
    public display LedgerAccount deLedgerAccount()
    {
        return LedgerDimensionFacade::getMainAccountIdFromLedgerDimension(
            VendLedgerAccounts::summaryLedgerDimension(this.AccountNum, this.PostingProfile, false));
    }

]]></Source>
			</Method>
			<Method>
				<Name>deLedgerAccountName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays Ledger account name in a format for GDPdU export.
    /// </summary>
    /// <returns>
    /// The ledger account name.
    /// </returns>
    /// <remarks>
    /// This method is used for Data Export for France.
    /// </remarks>
    public display AccountName deLedgerAccountName()
    {
        return MainAccount::findByMainAccountId(this.deLedgerAccount()).Name;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>FR</CountryRegionCodes>
	<DeveloperDocumentation>@FECDataExport:VendLedgerBalance_FRDevDoc</DeveloperDocumentation>
	<Label>@SYS149495</Label>
	<SingularLabel>@SYS16706</SingularLabel>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>AccountNum</TitleField1>
	<TitleField2>PostingProfile</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>PostingProfile</Name>
			<DataField>PostingProfile</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecIdCount</Name>
			<Aggregation>Count</Aggregation>
			<DataField>RecId</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>VendTrans</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendTrans</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy>
					<AxQuerySimpleGroupByField>
						<Name>QueryGroupByField1</Name>
						<DataSource>VendTrans</DataSource>
						<Field>AccountNum</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>QueryGroupByField2</Name>
						<DataSource>VendTrans</DataSource>
						<Field>PostingProfile</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>QueryGroupByField3</Name>
						<DataSource>VendTrans</DataSource>
						<Field>CurrencyCode</Field>
					</AxQuerySimpleGroupByField>
				</GroupBy>
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>