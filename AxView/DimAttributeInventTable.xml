<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DimAttributeInventTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DimensionCanCopyValuesOnCreateAttribute]
public class DimAttributeInventTable extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>registerDimensionEnabledTypeIdentifier</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Registers this view ID as a dimension enabled type identifier.
    /// </summary>
    [SubscribesTo(classstr(DimensionEnabledType), delegatestr(DimensionEnabledType, registerDimensionEnabledTypeIdentifiersDelegate))]
    public static void registerDimensionEnabledTypeIdentifier(DimensionIEnabledType _dimensionEnabledType)
    {
        _dimensionEnabledType.registerViewIdentifier(tablestr(DimAttributeInventTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>localizedName</Name>
				<Source><![CDATA[
    /// <summary>
    ///    Gets the localized name of the current item.
    /// </summary>
    /// <returns>
    ///    The localized name of the current item if a localization exists; otherwise, the invariant name.
    /// </returns>
    public display Name localizedName()
    {
        Name name;
        LanguageId languageId;

        if (this.Key)
        {
            languageId = DimensionCache::currentDimensionValueLanguageId();
            if (languageId)
            {
                // Try to find a translation for the current user language.
                name = DimAttributeInventTable::getLocalizedName(this.Key, languageId);
            }
        }

        if (!name)
        {
            // Translation was not found, fall back to the invariant name.
            name = this.Name;
        }

        return name;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDimensionValueTranslationContract</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the <c>DimensionValueTranslationContract</c> associated with this dimension enabled type view.
    /// </summary>
    /// <returns>
    /// The <c>DimensionValueTranslationContract</c> associated with this dimension enabled type view.
    /// </returns>
    public static DimensionValueTranslationContract getDimensionValueTranslationContract()
    {
        // Either the x++ method or the view is used to return the localized name
        DimensionValueTranslationContract dimValueTranslationContract =
            DimensionValueTranslationContract::newForTranslationMethodAndView(
                tablestr(DimAttrTranslInventTable),
                fieldStr(DimAttrTranslInventTable, Key),
                fieldStr(DimAttrTranslInventTable, Value),
                fieldStr(DimAttrTranslInventTable, Name),
                fieldStr(DimAttrTranslInventTable, TranslatedName),
                fieldStr(DimAttrTranslInventTable, LanguageId),
                fieldStr(DimAttrTranslInventTable, SystemLanguageId));
        return dimValueTranslationContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedDimFocusNameDefaultDescSQL</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the direct SQL query used to obtain translated name associated with the item dimension attribute for the languge specified.
    /// </summary>
    /// <param name="_dimensionAttributeRecId">
    /// The record ID of the dimension attribute representing the item for which to generate the query criteria.
    /// </param>
    /// <param name="_dimensionFocusNameTmpInstanceName">
    /// The name of the dimension focus instance for which to generate the query criteria.
    /// </param>
    /// <param name="_languageId">
    /// The language for which to generate the query criteria.
    /// </param>
    /// <returns>
    /// The direct SQL query.
    /// </returns>
    /// <remarks>
    /// The format of the SQL is dependent on its usage by the <c>DimensionFocusNameTmp</c> table. It is not usable
    /// outside of that context.
    /// </remarks>
    public static str getLocalizedDimFocusNameDefaultDescSQL(
        DimensionAttributeRecId _dimensionAttributeRecId,
        TableName               _dimensionFocusNameTmpInstanceName,
        LanguageId              _languageId)
    {
        str sql;
        RecId currentPartition = getcurrentpartitionrecid();
        LanguageId languageId = DimensionCache::currentDimensionValueLanguageId();

        if (languageId)
        {
            sql += '(SELECT ISNULL(ERPT.NAME, ERP.DISPLAYPRODUCTNUMBER)\n';
            sql += 'FROM DIMENSIONATTRIBUTELEVELVALUEVIEW as DALVV\n';
            sql += 'JOIN INVENTTABLE as IT on DALVV.ENTITYINSTANCE = IT.RECID\n';
            sql += 'Left Outer JOIN ECORESPRODUCTTRANSLATION as ERPT on IT.PRODUCT = ERPT.PRODUCT\n';
            sql += 'JOIN ECORESPRODUCT as ERP on IT.PRODUCT = ERP.RECID\n';
            sql += 'JOIN ' + _dimensionFocusNameTmpInstanceName + ' as tmp\n';
            sql += 'on DALVV.VALUECOMBINATIONRECID = tmp.LEDGERDIMENSION\n';
            sql += strFmt('WHERE DALVV.DIMENSIONATTRIBUTE = %1\n', _dimensionAttributeRecId);
            sql += strFmt('AND DALVV.PARTITION = %1\n',  currentPartition);
            sql += strFmt('AND IT.PARTITION = %1\n',  currentPartition);
            sql += strFmt('AND ERPT.LANGUAGEID = \'%1\'\n', languageId);
            sql += strFmt('AND ERPT.PARTITION = %1\n', currentPartition);
            sql += strFmt('AND ERP.PARTITION = %1)\n', currentPartition);
        }

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedDimFocusNameDescSQL</Name>
				<Source><![CDATA[
	/// <summary>
	/// Gets the direct SQL query used to obtain translated name associated with the item dimension attribute for the languge specified.
	/// </summary>
	/// <param name="_dimensionAttributeRecId">
	/// The record ID of the dimension attribute representing the item for which to generate the query criteria.
	/// </param>
	/// <param name="_dimensionFocusNameTmpInstanceName">
	/// The name of the dimension focus instance for which to generate the query criteria.
	/// </param>
	/// <param name="_languageId">
	/// The language for which to generate the query criteria.
	/// </param>
	/// <returns>
	/// The direct SQL query.
	/// </returns>
	/// <remarks>
	/// The format of the SQL is dependent on its usage by the <c>DimensionFocusNameTmp</c> table. It is not usable
	/// outside of that context.
	/// </remarks>
	public static str getLocalizedDimFocusNameDescSQL(
	    DimensionAttributeRecId _dimensionAttributeRecId,
	    TableName               _dimensionFocusNameTmpInstanceName,
	    LanguageId              _languageId)
	{
	    LanguageId languageId;
	    RecId currentPartition = getcurrentpartitionrecid();
	
	    str sql;
	
	    languageId = DimensionCache::currentDimensionValueLanguageId();
	
	    if (languageId)
	    {
	        sql += '(SELECT ISNULL(ERPT.NAME, ERP.DISPLAYPRODUCTNUMBER)\n';
	        sql += 'FROM DIMENSIONATTRIBUTELEVELVALUEVIEW as DALVV\n';
	        sql += 'JOIN INVENTTABLE as IT on DALVV.ENTITYINSTANCE = IT.RECID\n';
	        sql += 'Left Outer JOIN ECORESPRODUCTTRANSLATION as ERPT on IT.PRODUCT = ERPT.PRODUCT\n';
	        sql += 'JOIN ECORESPRODUCT as ERP on IT.PRODUCT = ERP.RECID\n';
            sql += 'JOIN ' + _dimensionFocusNameTmpInstanceName + ' as tmp\n';
	        sql += 'on DALVV.VALUECOMBINATIONRECID = tmp.LEDGERDIMENSION\n';
	        sql += strFmt('WHERE DALVV.DIMENSIONATTRIBUTE = %1\n', _dimensionAttributeRecId);
	        sql += strFmt('AND DALVV.PARTITION = %1\n',  currentPartition);
	        sql += strFmt('AND IT.PARTITION = %1\n',  currentPartition);
	        sql += strFmt('AND ERPT.LANGUAGEID = \'%1\'\n', languageId);
	        sql += strFmt('AND ERPT.PARTITION = %1\n', currentPartition);
	        sql += strFmt('AND ERP.PARTITION = %1)\n', currentPartition);
	    }
	
	    return sql;
	}

]]></Source>
			</Method>
			<Method>
				<Name>getLocalizedName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the translated name associated with the item for the languge specified.
    /// </summary>
    /// <param name="_key">
    /// The record ID of the item.
    /// </param>
    /// <param name="_languageId">
    /// The value of the <c>LanguageId</c>.
    /// </param>
    /// <returns>
    /// The translated name associated with the item.
    /// </returns>
    public static Name getLocalizedName(RefRecId _key, LanguageId _languageId)
    {
        InventTable inventTable;

        select firstOnly Product from inventTable
            where inventTable.RecId == _key;

        return inventTable.productName(_languageId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SYS344935</DeveloperDocumentation>
	<FormRef>EcoResProductDetailsExtended</FormRef>
	<Label>@SYS343377</Label>
	<SingularLabel>@SYS343378</SingularLabel>
	<TitleField1>Value</TitleField1>
	<TitleField2>Name</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Key</Name>
			<DataField>RecId</DataField>
			<DataSource>BackingEntity</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Value</Name>
			<DataField>ItemId</DataField>
			<DataSource>BackingEntity</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>NameAlias</DataField>
			<DataSource>BackingEntity</DataSource>
		</AxViewField>
	</Fields>
	<Indexes>
		<AxViewIndex>
			<Name>ValueIdx</Name>
			<Fields>
				<AxViewIndexField>
					<DataField>Value</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
		<AxViewIndex>
			<Name>NameIdx</Name>
			<AllowDuplicates>Yes</AllowDuplicates>
			<Fields>
				<AxViewIndexField>
					<DataField>Name</DataField>
				</AxViewIndexField>
			</Fields>
		</AxViewIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BackingEntity</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>