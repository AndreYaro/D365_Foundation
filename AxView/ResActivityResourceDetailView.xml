<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResActivityResourceDetailView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResActivityResourceDetailView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getResourceName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource name.
    /// </summary>
    public static str getResourceName()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activityResourceName = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Name));

        str companyResourceName = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ResCompanyResourceSchedulableView),
            fieldStr(ResCompanyResourceSchedulableView, Name));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            activityResourceName,
            companyResourceName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEffectiveDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource effective date.
    /// </summary>
    public static str getEffectiveDate()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activityEffectiveDate = SysComputedColumn::returnLiteral(dateNull());

        str companyEffectiveDate = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ResCompanyResourceSchedulableView),
            fieldStr(ResCompanyResourceSchedulableView, EffectiveDate));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            activityEffectiveDate,
            companyEffectiveDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExpirationDate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource expiration date.
    /// </summary>
    public static str getExpirationDate()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activityExpirationDate = SysComputedColumn::returnLiteral(dateMax());

        str companyExpirationDate = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ResCompanyResourceSchedulableView),
            fieldStr(ResCompanyResourceSchedulableView, ExpirationDate));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            activityExpirationDate,
            companyExpirationDate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceCompany</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource source company.
    /// </summary>
    public static str getSourceCompany()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activitySourceCompany = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, DataAreaID));

        str companySourceCompany = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ResCompanyResourceSchedulableView),
            fieldStr(ResCompanyResourceSchedulableView, SourceCompany));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            activitySourceCompany,
            companySourceCompany);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceLegalEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource source legal entity.
    /// </summary>
    public static str getSourceLegalEntity()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activitySourceLegalEntity = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(CompanyInfo),
            fieldStr(CompanyInfo, RecId));

        str companySourceLegalEntity = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ResCompanyResourceSchedulableView),
            fieldStr(ResCompanyResourceSchedulableView, SourceLegalEntity));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            activitySourceLegalEntity,
            companySourceLegalEntity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultActivity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets resource default activity.
    /// </summary>
    public static str getDefaultActivity()
    {
        return SysComputedColumn::returnLiteral(0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isGenericResource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines generic resource.
    /// </summary>
    public static str isGenericResource()
    {
        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierstr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(resource, SysComputedColumn::returnLiteral(0)),
            SysComputedColumn::returnLiteral(1),
            SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getActivityResourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets activity resource identifier.
    /// </summary>
    public static str getActivityResourceId()
    {
        str activity = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierStr(ActivityTeam),
            fieldStr(ResActivityResourceView, Activity));

        str resource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierStr(ActivityTeam),
            fieldStr(ResActivityResourceView, Resource));

        str activityResource = SysComputedColumn::returnField(
            tableStr(ResActivityResourceDetailView),
            identifierStr(ActivityTeam),
            fieldStr(ResActivityResourceView, RecId));

        return strFmt(ResUtil::activityResourceIdFormat,
            SysComputedColumn::cast(activity, 'nvarchar'),
            SysComputedColumn::cast(resource, 'nvarchar'),
            SysComputedColumn::cast(activityResource, 'nvarchar'));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<TableGroup>Transaction</TableGroup>
	<Query>ResActivityResourceDetailQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Activity</Name>
			<DataField>Activity</DataField>
			<DataSource>ActivityTeam</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Resource</Name>
			<DataField>Resource</DataField>
			<DataSource>ActivityTeam</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ActivityResource</Name>
			<DataField>ActivityResource</DataField>
			<DataSource>ActivityTeam</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>ActivityResourceId</Name>
			<ExtendedDataType>ResActivityResourceId</ExtendedDataType>
			<ViewMethod>getActivityResourceId</ViewMethod>
			<StringSize>60</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>EffectiveDate</Name>
			<ExtendedDataType>ValidFromDateTime</ExtendedDataType>
			<ViewMethod>getEffectiveDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>ExpirationDate</Name>
			<ExtendedDataType>ValidToDateTime</ExtendedDataType>
			<ViewMethod>getExpirationDate</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RecipientCompany</Name>
			<DataField>DataAreaId</DataField>
			<DataSource>ActivityTeam</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>SourceCompany</Name>
			<ExtendedDataType>SelectableDataArea</ExtendedDataType>
			<ViewMethod>getSourceCompany</ViewMethod>
			<StringSize>4</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>SourceLegalEntity</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>getSourceLegalEntity</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>Name</Name>
			<ExtendedDataType>WrkCtrName</ExtendedDataType>
			<ViewMethod>getResourceName</ViewMethod>
			<StringSize>60</StringSize>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ResCompanyResourceSchedulableView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Type</Name>
			<DataField>Type</DataField>
			<DataSource>ResCompanyResourceSchedulableView</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>Generic</Name>
			<ViewMethod>isGenericResource</ViewMethod>
			<EnumType>NoYesBlank</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt64">
			<Name>DefaultActivity</Name>
			<ExtendedDataType>RefRecId</ExtendedDataType>
			<ViewMethod>getDefaultActivity</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>