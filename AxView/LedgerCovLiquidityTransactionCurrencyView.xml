<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovLiquidityTransactionCurrencyView</Name>
	<SourceCode>
		<Declaration><![CDATA[
internal class LedgerCovLiquidityTransactionCurrencyView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>balanceSQL</Name>
				<Source><![CDATA[
    private static str balanceSQL()
    {
        /*
            SELECT SUM(LC.AMOUNTCUR)
            FROM LEDGERCOV LC,
                LEDGERLIQUIDITY LL
            WHERE LC.PARTITION = T1.PARTITION
                AND LC.DATAAREAID = T1.DATAAREAID
                AND LC.BANKACCOUNT = T1.BANKACCOUNT
                AND LC.CURRENCYCODE = T1.CURRENCYCODE
                AND LC.TRANSDATE <= T1.TRANSDATE
                AND LL.PARTITION = LC.PARTITION
                AND LL.DATAAREAID = LC.DATAAREAID
                AND LL.MAINACCOUNT = LC.MAINACCOUNT
        */

        str sql = strFmt(@'
            SELECT SUM(LC.%1)
            FROM %2 LC,
                %3 LL
            WHERE LC.%4 = T1.%4
                AND LC.%5 = T1.%5
                AND LC.%6 = T1.%6
                AND LC.%7 = T1.%7
                AND LC.%8 <= T1.%8
                AND LL.%9 = LC.%4
                AND LL.%10 = LC.%5
                AND LL.%11 = LC.%12
            ',
            fieldStr(LedgerCov, AmountCur),
            tableStr(LedgerCov),
            tableStr(LedgerLiquidity),
            fieldStr(LedgerCov, Partition),
            fieldStr(LedgerCov, DataAreaId),
            fieldStr(LedgerCov, BankAccount),
            fieldStr(LedgerCov, CurrencyCode),
            fieldStr(LedgerCov, TransDate),
            fieldStr(LedgerLiquidity, Partition),
            fieldStr(LedgerLiquidity, DataAreaId),
            fieldStr(LedgerLiquidity, MainAccount),
            fieldStr(LedgerCov, MainAccount));

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountSQL</Name>
				<Source><![CDATA[
    private static str amountSQL()
    {
        /*
            SELECT SUM(LC.AMOUNTCUR)
            FROM LEDGERCOV LC,
                LEDGERLIQUIDITY LL
            WHERE LC.PARTITION = T1.PARTITION
                AND LC.DATAAREAID = T1.DATAAREAID
                AND LC.BANKACCOUNT = T1.BANKACCOUNT
                AND LC.CURRENCYCODE = T1.CURRENCYCODE
                AND LC.TRANSDATE = T1.TRANSDATE
                AND LC.ISBEGINNINGBALANCE = 0
                AND LL.PARTITION = LC.PARTITION
                AND LL.DATAAREAID = LC.DATAAREAID
                AND LL.MAINACCOUNT = LC.MAINACCOUNT
        */

        str sql = strFmt(@'
            SELECT SUM(LC.%1)
            FROM %2 LC,
                %3 LL
            WHERE LC.%4 = T1.%4
                AND LC.%5 = T1.%5
                AND LC.%6 = T1.%6
                AND LC.%7 = T1.%7
                AND LC.%8 = T1.%8
                AND LC.%9 = 0
                AND LL.%10 = LC.%4
                AND LL.%11 = LC.%5
                AND LL.%12 = LC.%13
            ',
            fieldStr(LedgerCov, AmountCur),
            tableStr(LedgerCov),
            tableStr(LedgerLiquidity),
            fieldStr(LedgerCov, Partition),
            fieldStr(LedgerCov, DataAreaId),
            fieldStr(LedgerCov, BankAccount),
            fieldStr(LedgerCov, CurrencyCode),
            fieldStr(LedgerCov, TransDate),
            fieldStr(LedgerCov, IsBeginningBalance),
            fieldStr(LedgerLiquidity, Partition),
            fieldStr(LedgerLiquidity, DataAreaId),
            fieldStr(LedgerLiquidity, MainAccount),
            fieldStr(LedgerCov, MainAccount));

        return sql;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
	<Label>@CashManagement:CashBankMgmt_CashFlow_MessageDeveloper_LedgerCovLiquidityTransactionCurrencyEnterpriseEntity</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>LedgerCov</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LedgerCov</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BankAccount</Name>
			<DataField>BankAccount</DataField>
			<DataSource>LedgerCov</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>Amount</Name>
			<ViewMethod>amountSQL</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>BalanceAmount</Name>
			<ViewMethod>balanceSQL</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerCov</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerCov</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerLiquidity</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerLiquidity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>MainAccount</Field>
								<JoinDataSource>LedgerCov</JoinDataSource>
								<RelatedField>MainAccount</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy>
					<AxQuerySimpleGroupByField>
						<Name>TransDate</Name>
						<DataSource>LedgerCov</DataSource>
						<Field>TransDate</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>CurrencyCode</Name>
						<DataSource>LedgerCov</DataSource>
						<Field>CurrencyCode</Field>
					</AxQuerySimpleGroupByField>
					<AxQuerySimpleGroupByField>
						<Name>BankAccount</Name>
						<DataSource>LedgerCov</DataSource>
						<Field>BankAccount</Field>
					</AxQuerySimpleGroupByField>
				</GroupBy>
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>