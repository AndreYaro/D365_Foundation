<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetBasis</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetBasis extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>acquisitionValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Acquisition value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Acquisition value of the current record.
    /// </returns>
    display AssetAcquisitionValue acquisitionValue()
    {
        AssetSumCalc    assetSumCalc;

        assetSumCalc = AssetSumCalc_Trans::newAssetYear(this.AssetBook_AssetId, this.BookId);
        return assetSumCalc.acquisitionValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>acquisitionValueReporting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Acquisition reporting value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Acquisition reporting value of the current record.
    /// </returns>
    display AssetAcquisitionValue acquisitionValueReporting()
    {
        AssetSumCalc assetSumCalc = AssetSumCalc_Trans::newAssetYearByCurrency(this.AssetBook_AssetId, this.BookId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), AssetYear::All, AssetSumCalcType::Reporting);

        return assetSumCalc.acquisitionValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bonusValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Bonus value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Bonus value of the current record.
    /// </returns>
    display AssetBonusValue bonusValue()
    {
        AssetSumCalc    assetSumCalc;
        assetSumCalc = AssetSumCalc_Trans::newAssetYear(this.AssetBook_AssetId, this.BookId);
        return assetSumCalc.bonusDepreciationValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>bonusValueReporting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Bonus reporting value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Bonus reporting value of the current record.
    /// </returns>
    display AssetBonusValue bonusValueReporting()
    {
        AssetSumCalc assetSumCalc = AssetSumCalc_Trans::newAssetYearByCurrency(this.AssetBook_AssetId, this.BookId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), AssetYear::All, AssetSumCalcType::Reporting);

        return assetSumCalc.bonusDepreciationValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>netBookValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Netbook value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Netbook value of the current record.
    /// </returns>
    display AssetNetBookValue netBookValue()
    {
        AssetSumCalc    assetSumCalc;
        assetSumCalc = AssetSumCalc_Trans::newAssetYear(this.AssetBook_AssetId, this.BookId);
        return  assetSumCalc.netBookValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>netBookValueReporting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Netbook reporting value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Netbook reporting value of the current record.
    /// </returns>
    display AssetNetBookValue netBookValueReporting()
    {
        AssetSumCalc assetSumCalc = AssetSumCalc_Trans::newAssetYearByCurrency(this.AssetBook_AssetId, this.BookId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), AssetYear::All, AssetSumCalcType::Reporting);

        return assetSumCalc.netBookValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeUpDownAdjValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Misc value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Misc value of the current record.
    /// </returns>
    display AssetMiscAdjustments writeUpDownAdjValue()
    {
        AssetSumCalc    assetSumCalc;
        assetSumCalc = AssetSumCalc_Trans::newAssetYear(this.AssetBook_AssetId, this.BookId);
        return (assetSumCalc.acquisitionAdjValue() +
                assetSumCalc.writeUpDownAdjValue() +
                assetSumCalc.revaluationValue() +
                assetSumCalc.capitalReserveTransferValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeUpDownAdjValueReporting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the Misc reporting value for the current record in AssetBasis view.
    /// </summary>
    /// <returns>
    /// The Misc reporting value of the current record.
    /// </returns>
    display AssetMiscAdjustments writeUpDownAdjValueReporting()
    {
        AssetSumCalc assetSumCalc = AssetSumCalc_Trans::newAssetYearByCurrency(this.AssetBook_AssetId, this.BookId, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()), AssetYear::All, AssetSumCalcType::Reporting);
        
        return (assetSumCalc.acquisitionAdjValue() +
                assetSumCalc.writeUpDownAdjValue() +
                assetSumCalc.revaluationValue() +
                assetSumCalc.capitalReserveTransferValue());
    }

]]></Source>
			</Method>
			<Method>
				<Name>showReportingCurrency</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method to control the visibility of reporting currency amount column in AssetBasis report.
    /// </summary>
    /// <returns>
    /// Returns true, if the current ledger's reporting currency is not same as accounting currency else false.
    /// </returns>
    public display boolean showReportingCurrency()
    {
        boolean showReportingCurrency = false;

        if (Ledger::reportingCurrency() && Ledger::reportingCurrency() != Ledger::accountingCurrency())
        {
            showReportingCurrency = true;
        }

        return showReportingCurrency;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<DeveloperDocumentation>@SYS330846</DeveloperDocumentation>
	<Label>@SYS96923</Label>
	<TitleField1>Name</TitleField1>
	<TitleField2>BookId</TitleField2>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BookId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetBook_AssetId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsedFromDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTable_AssetId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>AssetTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>BookId</Name>
			<DataField>BookId</DataField>
			<DataSource>AssetBook</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetGroupId</Name>
			<DataField>AssetGroup</DataField>
			<DataSource>AssetBook</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetBook_AssetId</Name>
			<DataField>AssetId</DataField>
			<DataSource>AssetBook</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>UsedFromDate</Name>
			<DataField>UsedFromDate</DataField>
			<DataSource>AssetBook</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetGroup</Name>
			<DataField>AssetGroup</DataField>
			<DataSource>AssetTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>AssetTable_AssetId</Name>
			<DataField>AssetId</DataField>
			<DataSource>AssetTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>AssetTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>AssetTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetBook</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetBook</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>BookId</Name>
								<Field>BookId</Field>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>UsedFromDate</Name>
								<Field>UsedFromDate</Field>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<FetchMode>OneToN</FetchMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Relation</Name>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetTable_AssertId</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>AssetGroup</Name>
						<Field>AssetGroup</Field>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>AssetId</Name>
						<Field>AssetId</Field>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>AssetGroup</Name>
						<DataSource>AssetTable</DataSource>
						<Field>AssetGroup</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>AssetId</Name>
						<DataSource>AssetTable</DataSource>
						<Field>AssetId</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>