<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTerminalDeviceView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTerminalDeviceView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>DeviceIdComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves value for retail device's device identifier computed column used by <c>RetailTerminalDeviceView</c>.
    /// </summary>
    /// <returns>The string value for the computed column query.</returns>
    private static str DeviceIdComputedColumn()
    {
        #define.ViewName('RetailTerminalDeviceView')
        #define.DataSourceNameRetailDevice('RetailDevice')
        #define.FieldNameDeviceId('DeviceId')

        str columnQuery, deviceId;
        DictView dictView;

        dictView = new DictView(tableNum(#ViewName));
        deviceId = dictView.computedColumnString(
            #DataSourceNameRetailDevice,
            #FieldNameDeviceId,
            FieldNameGenerationMode::FieldList,
            true);

        columnQuery = strFmt("ISNULL(%1, '')", deviceId);

        return columnQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>DeviceTypeComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves value for retail device's type computed column used by <c>RetailTerminalDeviceView</c>.
    /// </summary>
    /// <returns>The string value for the computed column query.</returns>
    private static str DeviceTypeComputedColumn()
    {
        #define.ViewName('RetailTerminalDeviceView')
        #define.DataSourceNameRetailDeviceTypes('RetailDeviceTypes')
        #define.FieldNameDeviceType('Type')

        str columnQuery, deviceType;
        DictView dictView;

        dictView = new DictView(tableNum(#ViewName));
        deviceType = dictView.computedColumnString(
            #DataSourceNameRetailDeviceTypes,
            #FieldNameDeviceType,
            FieldNameGenerationMode::FieldList,
            true);

        columnQuery = strFmt('ISNULL(%1, %2)', deviceType, enum2int(RetailDeviceTypeBase::None));

        return columnQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivationStatusValueComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves value for retail device activation status value computed column used by <c>RetailTerminalDeviceView</c>.
    /// </summary>
    /// <returns>The string value for the computed column query.</returns>
    private static str ActivationStatusValueComputedColumn()
    {
        #define.ViewName('RetailTerminalDeviceView')
        #define.DataSourceNameRetailDevice('RetailDevice')
        #define.FieldNameActivationStatus('ActivationStatus')
        #define.undefinedActivationStatusValue(-1);

        str columnQuery, activationStatus;
        DictView dictView;

        dictView = new DictView(tableNum(#ViewName));
        activationStatus = dictView.computedColumnString(
            #DataSourceNameRetailDevice,
            #FieldNameActivationStatus,
            FieldNameGenerationMode::FieldList,
            true);

        columnQuery = strFmt('ISNULL(%1, %2)', activationStatus, #undefinedActivationStatusValue);

        return columnQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ActivationAvailabilityStatusComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves value for retail terminal's activation availability status computed column
    /// used by <c>RetailTerminalDeviceView</c> to sort for terminal's activation availability.
    /// </summary>
    /// <returns>The string value for the computed column query.</returns>
    private static str ActivationAvailabilityStatusComputedColumn()
    {
        #define.ViewName('RetailTerminalDeviceView')
        #define.DataSourceNameRetailDevice('RetailDevice')
        #define.FieldNameActivationStatus('ActivationStatus')

        str columnQuery, activationStatus;
        DictView dictView;

        dictView = new DictView(tableNum(#ViewName));
        activationStatus = dictView.computedColumnString(
            #DataSourceNameRetailDevice,
            #FieldNameActivationStatus,
            FieldNameGenerationMode::FieldList,
            true);

            columnQuery = strFmt('CASE %1', activationStatus)
            + strFmt(' WHEN %1 THEN %2 ', enum2int(RetailDeviceActivationStatusBase::Pending), enum2int(RetailDeviceActivationAvailabilityStatusBase::Pending))
            + strFmt(' WHEN %1 THEN %2 ', enum2int(RetailDeviceActivationStatusBase::Deactivated), enum2int(RetailDeviceActivationAvailabilityStatusBase::Deactivated))
            + strFmt(' WHEN %1 THEN %2 ', enum2int(RetailDeviceActivationStatusBase::Activated), enum2int(RetailDeviceActivationAvailabilityStatusBase::Activated))
            + strFmt(' WHEN %1 THEN %2 ', enum2int(RetailDeviceActivationStatusBase::Disabled), enum2int(RetailDeviceActivationAvailabilityStatusBase::Disabled))
            + strFmt(' ELSE %1 END', enum2int(RetailDeviceActivationAvailabilityStatusBase::NotAssociated));

        return columnQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@Retail:RetailTerminalDeviceView</Label>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TerminalId</Name>
			<DataField>terminalId</DataField>
			<DataSource>RetailTerminalTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Name</Name>
			<DataField>name</DataField>
			<DataSource>RetailTerminalTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>StoreRecId</Name>
			<DataField>StoreRecId</DataField>
			<DataSource>RetailTerminalTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedString">
			<Name>DeviceId</Name>
			<ExtendedDataType>RetailDeviceId</ExtendedDataType>
			<ViewMethod>DeviceIdComputedColumn</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>DeviceType</Name>
			<ViewMethod>DeviceTypeComputedColumn</ViewMethod>
			<EnumType>RetailDeviceTypeBase</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>ActivationStatusValue</Name>
			<ViewMethod>ActivationStatusValueComputedColumn</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ActivationAvailabilityStatus</Name>
			<ExtendedDataType>RetailDeviceActivationAvailabilityStatus</ExtendedDataType>
			<ViewMethod>ActivationAvailabilityStatusComputedColumn</ViewMethod>
			<EnumType>RetailDeviceActivationAvailabilityStatusBase</EnumType>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailTerminalTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailTerminalTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailDevice</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailDevice</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RetailDeviceTypes</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>RetailDeviceTypes</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Type</Field>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>terminalId</Field>
								<RelatedField>Terminal</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>