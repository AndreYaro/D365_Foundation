<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerCovAvgInvoicedSalesOrderLineDeliveryView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerCovAvgInvoicedSalesOrderLineDeliveryView extends common
{
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>computeDeliveryDate</Name>
				<Source><![CDATA[
    private static str computeDeliveryDate()
    {
        str salesTableShippingDateRequested = SysComputedColumn::if(
            LedgerCovAvgInvoicedSalesOrderLineDeliveryView::dateNullComparison(tableStr(SalesTable), fieldStr(SalesTable, ShippingDateRequested)),
            SysComputedColumn::returnField(tableStr(LedgerCovAvgInvoicedSalesOrderLineDeliveryView), tableStr(SalesTable), fieldStr(SalesTable, ShippingDateRequested)),
            SysComputedColumn::returnLiteral(dateNull()));

        str salesLineShippingDateRequested = SysComputedColumn::if(
            LedgerCovAvgInvoicedSalesOrderLineDeliveryView::dateNullComparison(tableStr(SalesLine), fieldStr(SalesLine, ShippingDateRequested)),
            SysComputedColumn::returnField(tableStr(LedgerCovAvgInvoicedSalesOrderLineDeliveryView), tableStr(SalesLine), fieldStr(SalesLine, ShippingDateRequested)),
            salesTableShippingDateRequested);

        str salesTableConfirmed = SysComputedColumn::if(
            LedgerCovAvgInvoicedSalesOrderLineDeliveryView::dateNullComparison(tableStr(SalesTable), fieldStr(SalesTable, ShippingDateConfirmed)),
            SysComputedColumn::returnField(tableStr(LedgerCovAvgInvoicedSalesOrderLineDeliveryView), tableStr(SalesTable), fieldStr(SalesTable, ShippingDateConfirmed)),
            salesLineShippingDateRequested);

        return SysComputedColumn::if(
            LedgerCovAvgInvoicedSalesOrderLineDeliveryView::dateNullComparison(tableStr(SalesLine), fieldStr(SalesLine, ShippingDateConfirmed)),
            SysComputedColumn::returnField(tableStr(LedgerCovAvgInvoicedSalesOrderLineDeliveryView), tableStr(SalesLine), fieldStr(SalesLine, ShippingDateConfirmed)),
            salesTableConfirmed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>dateNullComparison</Name>
				<Source><![CDATA[
    private static str dateNullComparison(str _dataSourceName, str _dataSourceDateField)
    {
        return SysComputedColumn::compareExpressions(
            SysComputedColumn::comparisonField(
                tableStr(LedgerCovAvgInvoicedSalesOrderLineDeliveryView), _dataSourceName, _dataSourceDateField),
                    '!=',
                SysComputedColumn::comparisonLiteral(dateNull()));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CashFlowForecasting</ConfigurationKey>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InvoiceAccount</Name>
			<DataField>InvoiceAccount</DataField>
			<DataSource>SalesTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesId</Name>
			<DataField>SalesId</DataField>
			<DataSource>SalesLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LineNum</Name>
			<DataField>LineNum</DataField>
			<DataSource>SalesLine</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedDate">
			<Name>DeliveryDate</Name>
			<ExtendedDataType>SalesShippingDate</ExtendedDataType>
			<ViewMethod>computeDeliveryDate</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SalesTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesId</Field>
								<JoinDataSource>SalesLine</JoinDataSource>
								<RelatedField>SalesId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>SalesStatus</Name>
						<Field>SalesStatus</Field>
						<Value>Invoiced</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>