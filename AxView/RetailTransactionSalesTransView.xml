<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailTransactionSalesTransView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailTransactionSalesTransView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>costAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of cost amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str costAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, costAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>custDiscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of customer discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str custDiscAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, custDiscAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>discAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str discAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, discAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>hour</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an addition expression of hour.
    /// </summary>
    /// <returns>
    /// A string expression formatted as an addition of the 2 expressions.
    /// </returns>
    public static str hour()
    {
        return SysComputedColumn::add(SysComputedColumn::divide(SysComputedColumn::returnField(
                                        tableStr(RetailTransactionSalesTransView), identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, TransTime)), SysComputedColumn::returnLiteral(3600)),
                                        SysComputedColumn::returnLiteral(1));
    }

]]></Source>
			</Method>
			<Method>
				<Name>lineDscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression line discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str lineDscAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, lineDscAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>loyaltyDiscAmount_RU</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression loyalty discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str loyaltyDiscAmount_RU()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, LoyaltyDiscAmount_RU)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of net amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str netAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, netAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>netAmountInclTax</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression net amount include tax.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str netAmountInclTax()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, netAmountInclTax)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>netPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str netPrice()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, netPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>periodicDiscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression prive discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str periodicDiscAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, periodicDiscAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>price</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of price.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str price()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, price)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>qty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of quantity.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str qty()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, qty)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of return quantity.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str returnQty()
    {
        str quantity = SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, qty));
        str compareExpression = SysComputedColumn::compareExpressions(quantity , ">", "0");

        return SysComputedColumn::if(compareExpression, quantity, "0");
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of tax amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str taxAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, taxAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalDiscAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression total discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str totalDiscAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, totalDiscAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>totalRoundedAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression total rounded amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str totalRoundedAmount()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, totalRoundedAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of unit price.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str unitPrice()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, unitPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>unitQty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of unit quantity.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str unitQty()
    {
        return SysComputedColumn::negative(SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, unitQty)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>returnTransaction</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of unit quantity.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str returnTransaction()
    {
        str quantity = SysComputedColumn::returnField(tableStr(RetailTransactionSalesTransView),
                                        identifierStr(RetailTransactionSalesTrans),
                                        fieldStr(RetailTransactionSalesTrans, qty));
        str compareExpression = SysComputedColumn::compareExpressions(quantity, "<", "0");
        str ifExpression = SysComputedColumn::if(compareExpression, "0", "1");

        return ifExpression;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceOverridePercentage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a negative numeric expression of customer discount amount.
    /// </summary>
    /// <returns>
    /// A string expression that contains a negative numeric expression.
    /// </returns>
    public static str priceOverridePercentage()
    {
        str isPriceOverride = SysComputedColumn::returnField(
            tableStr(RetailTransactionSalesTransView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, priceChange));
        str productPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, price));
        str productOriginalPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice));

        // Override Total per unit is defined as price - originalPrice.
        str overrideTotalPerUnit = SysComputedColumn::subtract(productPrice, productOriginalPrice);

        // Override percent is defined as Override Total per unit / original price per unit.
        str  overridePercent = SysComputedColumn::divide(overrideTotalPerUnit, productOriginalPrice);

        str compareExpression = SysComputedColumn::compareExpressions(isPriceOverride, "=", "1");

        //If priceChange = 1 return overrideTotal, else return 0
        return SysComputedColumn::if(compareExpression,
                            overridePercent,
                            "0");
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceOverrideAmount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a numeric expression for price override percentage.
    /// </summary>
    /// <returns>
    /// A string expression that gives a numeric expression for price override percentage.
    /// </returns>
    public static str priceOverrideAmount()
    {
        str isPriceOverride = SysComputedColumn::returnField(
            tableStr(RetailTransactionSalesTransView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, priceChange));
        str productPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, price));
        str productOriginalPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice));
        str lineQuantity = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, qty));
        str lineQuantityAbsolute = SysComputedColumn::abs(lineQuantity);

        // Override Total per unit is defined as price - originalPrice.
        str overrideTotalPerUnit = SysComputedColumn::subtract(productPrice, productOriginalPrice);

        // Override Total is defined as (price - originalPrice) * abs(qty).
        str OverrideTotal = SysComputedColumn::multiply(overrideTotalPerUnit, lineQuantityAbsolute);

        str compareExpression = SysComputedColumn::compareExpressions(isPriceOverride, "=", "1");

        //If priceChange = 1 return overrideTotal, else return 0
        str ifExpression = SysComputedColumn::if(compareExpression,
                            OverrideTotal,
                            "0");

        return ifExpression;
    }

]]></Source>
			</Method>
			<Method>
				<Name>priceBeforeOverride</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a numeric expression for line price before applying override.
    /// </summary>
    /// <returns>
    /// A string expression that gives a numeric expression for line price before applying override.
    /// </returns>
    public static str priceBeforeOverride()
    {
        str isPriceOverride = SysComputedColumn::returnField(
                tableStr(RetailTransactionSalesTransView),
                identifierStr(RetailTransactionSalesTrans),
                fieldStr(RetailTransactionSalesTrans, priceChange));
        str productOriginalPrice = SysComputedColumn::returnField(
                    tableStr(RetailPriceOverridesReportView),
                    identifierStr(RetailTransactionSalesTrans),
                    fieldStr(RetailTransactionSalesTrans, originalPrice));
        str lineQuantity = SysComputedColumn::multiply(SysComputedColumn::returnField(
                    tableStr(RetailPriceOverridesReportView),
                    identifierStr(RetailTransactionSalesTrans),
                    fieldStr(RetailTransactionSalesTrans, qty)), "-1");

        // Price before override id defined as originalPrice * qty.
        str priceBeforeOverride = SysComputedColumn::multiply(productOriginalPrice, lineQuantity);

        str compareExpression = SysComputedColumn::compareExpressions(isPriceOverride, "=", "1");

        // If priceChange = 1 return priceBeforeOverride, else return 0
        str ifExpression = SysComputedColumn::if(compareExpression,
                                    priceBeforeOverride,
                                    "0");

        return ifExpression;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@RET4040191</DeveloperDocumentation>
	<Label>@RET3214</Label>
	<TitleField1>transactionId</TitleField1>
	<TitleField2>lineNum</TitleField2>
	<Query>RetailTransactionSalesTransQuery</Query>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>transactionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>lineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>receiptId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>itemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>transDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>barcode</Name>
			<DataField>barcode</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>CategoryId</Name>
			<DataField>CategoryId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>comment</Name>
			<DataField>comment</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>counter</Name>
			<DataField>counter</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>currency</Name>
			<DataField>currency</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>custAccount</Name>
			<DataField>custAccount</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>custInvoiceDiscAmount</Name>
			<DataField>custInvoiceDiscAmount</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DefaultDimension</Name>
			<DataField>DefaultDimension</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>discAmountFromStdPrice</Name>
			<DataField>discAmountFromStdPrice</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>discGroupId</Name>
			<DataField>discGroupId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>discOfferId</Name>
			<DataField>discOfferId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DiscountAmountForPrinting</Name>
			<DataField>DiscountAmountForPrinting</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>DlvMode</Name>
			<DataField>DlvMode</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>giftcard</Name>
			<DataField>giftcard</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>infocodeDiscAmount</Name>
			<DataField>infocodeDiscAmount</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventBatchId</Name>
			<DataField>InventBatchId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>inventDimId</Name>
			<DataField>inventDimId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventLocationId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventSerialId</Name>
			<DataField>InventSerialId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>InventSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>inventStatusSales</Name>
			<DataField>inventStatusSales</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>inventTransId</Name>
			<DataField>inventTransId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemCorrectedLine</Name>
			<DataField>itemCorrectedLine</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemId</Name>
			<DataField>itemId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemIdScanned</Name>
			<DataField>itemIdScanned</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemPostingGroup</Name>
			<DataField>itemPostingGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>keyboardItemEntry</Name>
			<DataField>keyboardItemEntry</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>lineNum</Name>
			<DataField>lineNum</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>lineWasDiscounted</Name>
			<DataField>lineWasDiscounted</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>linkedItemNotOriginal</Name>
			<DataField>linkedItemNotOriginal</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ListingId</Name>
			<DataField>ListingId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LogisticsPostalAddress</Name>
			<DataField>LogisticsPostalAddress</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>originalOfLinkedItemList</Name>
			<DataField>originalOfLinkedItemList</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OriginalTaxGroup</Name>
			<DataField>OriginalTaxGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>OriginalTaxItemGroup</Name>
			<DataField>OriginalTaxItemGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>periodicDiscGroup</Name>
			<DataField>periodicDiscGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>periodicDiscType</Name>
			<DataField>periodicDiscType</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>prescriptionId</Name>
			<DataField>prescriptionId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>priceChange</Name>
			<DataField>priceChange</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>priceInBarcode</Name>
			<DataField>priceInBarcode</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>pumpId</Name>
			<DataField>pumpId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>purchId</Name>
			<DataField>purchId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReceiptDateRequested</Name>
			<DataField>ReceiptDateRequested</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>receiptId</Name>
			<DataField>receiptId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>replicated</Name>
			<DataField>replicated</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>replicationCounterFromOrigin</Name>
			<DataField>replicationCounterFromOrigin</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>returnNoSale</Name>
			<DataField>returnNoSale</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>returnTransactionId</Name>
			<DataField>returnTransactionId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>RFIDTagId</Name>
			<IsObsolete>Yes</IsObsolete>
			<DataField>RFIDTagId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>scaleItem</Name>
			<DataField>scaleItem</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>section</Name>
			<DataField>section</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>shelf</Name>
			<DataField>shelf</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>shift</Name>
			<DataField>shift</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>shiftDate</Name>
			<DataField>shiftDate</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ShippingDateRequested</Name>
			<DataField>ShippingDateRequested</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>staffId</Name>
			<DataField>staffId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>statementCode</Name>
			<DataField>statementCode</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>statementId</Name>
			<DataField>statementId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>stdNetPrice</Name>
			<DataField>stdNetPrice</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>store</Name>
			<DataField>store</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>taxGroup</Name>
			<DataField>taxGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>terminalId</Name>
			<DataField>terminalId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>totalDiscInfoCodeLineNum</Name>
			<DataField>totalDiscInfoCodeLineNum</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>totalDiscPct</Name>
			<DataField>totalDiscPct</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionCode</Name>
			<DataField>transactionCode</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionId</Name>
			<DataField>transactionId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionStatus</Name>
			<DataField>transactionStatus</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transDate</Name>
			<DataField>transDate</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transTime</Name>
			<DataField>transTime</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>unit</Name>
			<DataField>unit</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>variantId</Name>
			<DataField>variantId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>weightItem</Name>
			<DataField>weightItem</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>weightManuallyEntered</Name>
			<DataField>weightManuallyEntered</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>Hour</Name>
			<ExtendedDataType>RetailHourOfDay</ExtendedDataType>
			<ViewMethod>hour</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>unitQty</Name>
			<Label>@SYS23426</Label>
			<ExtendedDataType>UnitQty</ExtendedDataType>
			<ViewMethod>unitQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>costAmount</Name>
			<Label>@SYS41302</Label>
			<ExtendedDataType>CostAmount</ExtendedDataType>
			<ViewMethod>costAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>custDiscAmount</Name>
			<Label>@RET4320</Label>
			<ExtendedDataType>RetailCustDiscAmount</ExtendedDataType>
			<ViewMethod>custDiscAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>discAmount</Name>
			<Label>@SYS10946</Label>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<ViewMethod>discAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>lineDscAmount</Name>
			<Label>@RET3457</Label>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<ViewMethod>lineDscAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>netAmount</Name>
			<Label>@RET3488</Label>
			<ExtendedDataType>RetailNetAmount</ExtendedDataType>
			<ViewMethod>netamount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>netAmountInclTax</Name>
			<ExtendedDataType>RetailNetAmountInclTax</ExtendedDataType>
			<ViewMethod>netamountinclTax</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>netPrice</Name>
			<Label>@RET3489</Label>
			<ExtendedDataType>RetailNetPrice</ExtendedDataType>
			<ViewMethod>netprice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>periodicDiscAmount</Name>
			<Label>@RET3310</Label>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<ViewMethod>periodicDiscAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>price</Name>
			<Label>@SYS11865</Label>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>price</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>qty</Name>
			<Label>@RET4160562</Label>
			<ExtendedDataType>Qty</ExtendedDataType>
			<ViewMethod>qty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>returnQty</Name>
			<Label>@SYS107029</Label>
			<ExtendedDataType>Qty</ExtendedDataType>
			<ViewMethod>returnQty</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>taxAmount</Name>
			<Label>@RET4940</Label>
			<ExtendedDataType>TaxAmount</ExtendedDataType>
			<ViewMethod>taxAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>totalDiscAmount</Name>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<ViewMethod>totaldiscAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>totalRoundedAmount</Name>
			<Label>@RET3567</Label>
			<ExtendedDataType>RetailRoundedAmount</ExtendedDataType>
			<ViewMethod>totalroundedAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>unitPrice</Name>
			<Label>@SYS23884</Label>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>unitprice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Channel</Name>
			<DataField>Channel</DataField>
			<DataSource>RetailTransactionTableView_1</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>LoyaltyDiscAmount_RU</Name>
			<ExtendedDataType>DiscAmount</ExtendedDataType>
			<ViewMethod>loyaltyDiscAmount_RU</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>LoyaltyDiscPct_RU</Name>
			<DataField>LoyaltyDiscPct_RU</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>returnTransaction</Name>
			<ViewMethod>returnTransaction</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PriceOverridePercentage</Name>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>priceOverridePercentage</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>PriceOverrideAmount</Name>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>priceOverrideAmount</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>priceBeforeOverride</Name>
			<ViewMethod>priceBeforeOverride</ViewMethod>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources />
	</ViewMetadata>
</AxView>