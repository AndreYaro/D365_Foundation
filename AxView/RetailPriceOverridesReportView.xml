<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPriceOverridesReportView</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This <c>RetailPriceOverridesReportView</c> view is the datasource for the
/// retail price overrides report.
/// </summary>
public class RetailPriceOverridesReportView extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>OverrideTotal</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for computing the Override total column.
    /// </summary>
    /// <returns>overrideTotal value for the row.</returns>
    public static str OverrideTotal()
    {
        str productPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, price));
        str productOriginalPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice));
        str lineQuantity = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, qty));
        str lineQuantityAbsolute = SysComputedColumn::abs(lineQuantity);

        // Override Total per unit is defined as price - originalPrice.
        str overrideTotalPerUnit = SysComputedColumn::subtract(productPrice, productOriginalPrice);

        // Override Total is defined as (price - originalPrice) * abs(qty).
        return SysComputedColumn::multiply(overrideTotalPerUnit, lineQuantityAbsolute);
    }

]]></Source>
			</Method>
			<Method>
				<Name>OverridePricePerUnit</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for computing the override total per unit column.
    /// </summary>
    /// <returns>overrideTotal value for the row.</returns>
    public static str OverridePricePerUnit()
    {
        str productPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, price));
        str productOriginalPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice));

        // Override Total per unit is defined as price - originalPrice.
        return SysComputedColumn::subtract(productPrice, productOriginalPrice);
    }

]]></Source>
			</Method>
			<Method>
				<Name>OverridePercentage</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for getting the Override Percentage column.
    /// </summary>
    /// <returns>overridePercentage value for the row.</returns>
    public static str OverridePercentage()
    {
        str price = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, price));
        str originalPrice = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice));

        //if originalPrice = 0,
        //then return the override percentage computed as '1'(In SSRS will change to '(N/A)'),
        //else return the override percentage computed as (price - originalPrice)/originalPrice.
        return SysComputedColumn::if(
                SysComputedColumn::equalExpression(originalPrice,'0'),
                '1',
                SysComputedColumn::divide(
                    SysComputedColumn::subtract(price, originalPrice),
                    originalPrice)
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>TransDateTime</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for computing the transaction date time.
    /// </summary>
    /// <returns>transaction datetime value for the row.</returns>
    public static str TransDateTime()
    {
        // This is computed by adding the transDate and transTime fields
        str transDatePart = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, transDate));
        str transTimePart = SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, transTime));
        return  SysComputedColumn::getDateAdd(transTimePart, transDatePart, SysComputedColumnDatePart::Second);
    }

]]></Source>
			</Method>
			<Method>
				<Name>OriginalPrice</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for getting the absolute value of original price column.
    /// </summary>
    /// <returns>Absolute value of original price column for the row.</returns>
    public static str OriginalPrice()
    {
        return SysComputedColumn::abs(
        SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, originalPrice)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>OriginalPriceAbsolute</Name>
				<Source><![CDATA[
    /// <summary>
    /// This is the view method for getting the absolute value of net amount column.
    /// </summary>
    /// <returns>Absolute value of net amount column for the row.</returns>
    public static str OriginalPriceAbsolute()
    {
        return SysComputedColumn::abs(
        SysComputedColumn::returnField(
            tableStr(RetailPriceOverridesReportView),
            identifierStr(RetailTransactionSalesTrans),
            fieldStr(RetailTransactionSalesTrans, netAmount)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>employeeId</Name>
			<Label>@Retail:OverridesReportEmployeeId</Label>
			<DataField>staffId</DataField>
			<DataSource>RetailStaffTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>employeeName</Name>
			<Label>@Retail:OverridesReportEmployeeName</Label>
			<DataField>nameOnReceipt</DataField>
			<DataSource>RetailStaffTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transactionId</Name>
			<Label>@Retail:OverridesReportTransactionId</Label>
			<DataField>transactionId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>transDate</Name>
			<Label>@Retail:OverridesReportDate</Label>
			<DataField>transDate</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>itemId</Name>
			<Label>@Retail:RetailReportProductNumberColumn</Label>
			<DataField>itemId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>categoryName</Name>
			<Label>@Retail:ReportCategoryColumn</Label>
			<DataField>Name</DataField>
			<DataSource>RetailCategoryExpanded</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>qty</Name>
			<Label>@Retail:RetailReportQuantity</Label>
			<DataField>qty</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>originalPrice</Name>
			<Label>@Retail:OverridesReportOriginalPrice</Label>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>OriginalPrice</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>overridePricePerUnit</Name>
			<Label>@Retail:ReportOverridePricePerUnit</Label>
			<ExtendedDataType>Price</ExtendedDataType>
			<ViewMethod>OverridePricePerUnit</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>price</Name>
			<Label>@Retail:ReportNetPricePerUnitColumn</Label>
			<DataField>price</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>overridePercentage</Name>
			<Label>@Retail:OverridesReportOverridePercentage</Label>
			<ExtendedDataType>RetailPercent</ExtendedDataType>
			<ViewMethod>OverridePercentage</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>overrideTotal</Name>
			<Label>@Retail:OverridesReportOverrideTotal</Label>
			<ViewMethod>OverrideTotal</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>netAmountAbsolute</Name>
			<Label>@Retail:OverridesReportNetPrice</Label>
			<ViewMethod>OriginalPriceAbsolute</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>store</Name>
			<DataField>store</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedUtcDateTime">
			<Name>transDateTime</Name>
			<ExtendedDataType>TransDateTime</ExtendedDataType>
			<ViewMethod>TransDateTime</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>productName</Name>
			<Label>@Retail:ReportProductName</Label>
			<DataField>ProductName</DataField>
			<DataSource>InventTableExpanded</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>terminalId</Name>
			<DataField>terminalId</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>channel</Name>
			<DataField>Channel</DataField>
			<DataSource>RetailTransactionSalesTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransactionType</Name>
			<DataField>type</DataField>
			<DataSource>RetailTransactionTable</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SalesOrderSalesStatus</Name>
			<DataField>SalesStatus</DataField>
			<DataSource>SalesTable</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailTransactionSalesTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailTransactionSalesTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailStaffTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailStaffTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>staffId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>staffId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableExpanded</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableExpanded</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RetailCategoryExpanded</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>RetailCategoryExpanded</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecIdCategory</Field>
										<JoinDataSource>InventTableExpanded</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>itemId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>ItemId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailTransactionTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailTransactionTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>SalesTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>salesOrderId</Field>
										<JoinDataSource>RetailTransactionTable</JoinDataSource>
										<RelatedField>SalesId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>type</Name>
								<Field>type</Field>
								<Value>Sales</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>entryStatus</Name>
								<Field>entryStatus</Field>
								<Value>!1</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>transactionId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>transactionId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>store</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>store</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<Field>terminalId</Field>
								<JoinDataSource>RetailTransactionSalesTrans</JoinDataSource>
								<RelatedField>terminal</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>priceChange</Name>
						<Field>priceChange</Field>
						<Value>1</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>transactionStatus</Name>
						<Field>transactionStatus</Field>
						<Value>!1</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>