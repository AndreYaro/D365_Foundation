<?xml version="1.0" encoding="utf-8"?>
<AxView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxTransDeclarationView</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxTransDeclarationView extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>isCreditNote</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the credit note flag to the view transaction based on the data of the current tax transaction's original document.
    /// </summary>
    /// <returns>A calculated field expression; returns 'Yes' if the view transaction's original document belongs to the credit note; 'No' otherwise.</returns>
    private static str isCreditNote()
    {
        return TaxTransDeclarationViewHelper::isCreditNote(tableStr(TaxTransDeclarationView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isTaxTransCreditNote</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns the credit note flag to the view transaction based on the data of the current tax transaction.
    /// </summary>
    /// <returns>A calculated field expression; returns 'Yes' if the tax transaction belongs to the credit note; 'No' otherwise.</returns>
    private static str isTaxTransCreditNote()
    {
        return TaxTransDeclarationViewHelper::isTaxTransCreditNote(tableStr(TaxTransDeclarationView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>reportingClassifier</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the reporting classifier.
    /// </summary>
    /// <returns>A calculated field expression; the reporting classifier.</returns>
    private static str reportingClassifier()
    {
        return TaxTransDeclarationViewHelper::reportingClassifier(tableStr(TaxTransDeclarationView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxAmountSign</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the tax amounts sign due to the tax direction.
    /// </summary>
    /// <returns>A calculated field expression; the tax amounts sign.</returns>
    private static str taxAmountSign()
    {
        return TaxTransDeclarationViewHelper::taxAmountSign(tableStr(TaxTransDeclarationView));
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBaseAmountNormalized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the tax base amount normalized value.
    /// </summary>
    /// <returns>A calculated field expression; the tax base amount normalized value.</returns>
    private static str taxBaseAmountNormalized()
    {
        return SysComputedColumn::if(SysComputedColumn::and(TaxTransDeclarationView::getExpListConditionForTaxBaseAmountNormalized()),
            SysComputedColumn::returnLiteral(0),
            SysComputedColumn::returnField(tableStr(TaxTransDeclarationView), TaxTransDeclarationDetailsViewConstants::DSTaxTrans, fieldStr(TaxTrans, TaxBaseAmount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExpListConditionForTaxBaseAmountNormalized</Name>
				<Source><![CDATA[
    private static List getExpListConditionForTaxBaseAmountNormalized()
    {
        TableName viewName = tableStr(TaxTransDeclarationView);
        str taxDirectionField = SysComputedColumn::comparisonField(viewName, TaxTransDeclarationDetailsViewConstants::DSTaxTrans, fieldStr(TaxTrans, TaxDirection));
        str reverseChargeField = SysComputedColumn::comparisonField(viewName, TaxTransDeclarationDetailsViewConstants::DSTaxTrans, fieldStr(TaxTrans, ReverseCharge_W));
        str emptyTaxBaseForOutgoingTaxField = SysComputedColumn::comparisonField(viewName, TaxTransDeclarationDetailsViewConstants::DSTaxTrans, fieldStr(TaxTrans, EmptyTaxBaseForOutgoingTax_W));
        str taxTableNegativeTaxField = SysComputedColumn::comparisonField(viewName, TaxTransDeclarationDetailsViewConstants::DSTaxTable, fieldStr(TaxTable, NegativeTax));
        
        List expListAND = SysComputedColumn::comparisionExpressionList();
        expListAND.addEnd(SysComputedColumn::equalExpression(reverseChargeField, SysComputedColumn::comparisonLiteral(NoYes::Yes)));
        expListAND.addEnd(SysComputedColumn::or2(
            SysComputedColumn::equalExpression(taxDirectionField, SysComputedColumn::comparisonLiteral(TaxDirection::OutgoingTax)),
            SysComputedColumn::equalExpression(taxDirectionField, SysComputedColumn::comparisonLiteral(TaxDirection::OutgoingTax_W))));
        expListAND.addEnd(SysComputedColumn::equalExpression(taxTableNegativeTaxField, SysComputedColumn::comparisonLiteral(NoYes::Yes)));
        expListAND.addEnd(SysComputedColumn::equalExpression(emptyTaxBaseForOutgoingTaxField, SysComputedColumn::comparisonLiteral(NoYes::Yes)));

        return expListAND;
    }

]]></Source>
			</Method>
			<Method>
				<Name>taxBaseAmountCurNormalized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defines the tax base current amount normalized value.
    /// </summary>
    /// <returns>A calculated field expression; the tax base amount current normalized value.</returns>
    private static str taxBaseAmountCurNormalized()
    {
        return SysComputedColumn::if(SysComputedColumn::and(TaxTransDeclarationView::getExpListConditionForTaxBaseAmountNormalized()),
            SysComputedColumn::returnLiteral(0),
            SysComputedColumn::returnField(tableStr(TaxTransDeclarationView), TaxTransDeclarationDetailsViewConstants::DSTaxTrans, fieldStr(TaxTrans, TaxBaseAmountCur)));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<DeveloperDocumentation>@TaxDeclarationDetails:TaxTransDeclarationDetailsDevDoc</DeveloperDocumentation>
	<Label>@TaxDeclarationDetails:TaxDeclarationDetails</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxTransRecId</Name>
			<DataField>RecId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxPeriod</Name>
			<DataField>TaxPeriod</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxRepCounter</Name>
			<DataField>TaxRepCounter</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsCreditNote</Name>
			<HelpText>@TaxDeclarationDetails:OriginalDocumentIsCreditNoteHelpText</HelpText>
			<Label>@TaxDeclarationDetails:OriginalDocumentIsCreditNote</Label>
			<ViewMethod>isCreditNote</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>IsTaxTransCreditNote</Name>
			<HelpText>@TaxDeclarationDetails:TaxTransactionIsCreditNoteHelpText</HelpText>
			<Label>@TaxDeclarationDetails:TaxTransactionIsCreditNote</Label>
			<ViewMethod>isTaxTransCreditNote</ViewMethod>
			<EnumType>NoYes</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxCode</Name>
			<DataField>TaxCode</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxGroup</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TransDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VatDueDate_W</Name>
			<DataField>VatDueDate_W</DataField>
			<DataSource>TaxTrans_W</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxDirection</Name>
			<DataField>TaxDirection</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IntracomVAT</Name>
			<DataField>IntracomVAT</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmount</Name>
			<DataField>TaxAmount</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmountCur</Name>
			<Label>@TaxDeclarationDetails:SalesTaxAmountCurrency</Label>
			<DataField>TaxAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxAmountRep</Name>
			<DataField>TaxAmountRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPrice</Name>
			<DataField>TaxInCostPrice</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceCur</Name>
			<DataField>TaxInCostPriceCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceRep</Name>
			<DataField>TaxInCostPriceRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmount</Name>
			<Label>@SYS323805</Label>
			<DataField>TaxBaseAmount</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmountCur</Name>
			<Label>@TaxDeclarationDetails:TaxBaseCurrency</Label>
			<DataField>TaxBaseAmountCur</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseAmountRep</Name>
			<DataField>TaxBaseAmountRep</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>Reason</Name>
			<DataField>Reason</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>ReasonComment</Name>
			<DataField>ReasonComment</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceRecId</Name>
			<DataField>SourceRecId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>SourceTableId</Name>
			<DataField>SourceTableId</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxInCostPriceMST</Name>
			<DataField>TaxInCostPriceMST</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedEnum">
			<Name>ReportingClassifier</Name>
			<ViewMethod>reportingClassifier</ViewMethod>
			<EnumType>TaxTransReportingClassifier</EnumType>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxValue</Name>
			<DataField>TaxValue</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>VATExemptPct</Name>
			<DataField>VATExemptPct</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedInt">
			<Name>TaxAmountSign</Name>
			<ExtendedDataType>Sign</ExtendedDataType>
			<ViewMethod>taxAmountSign</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TaxBaseAmountCurNormalized</Name>
			<ExtendedDataType>TaxBaseCur</ExtendedDataType>
			<ViewMethod>taxBaseAmountCurNormalized</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldComputedReal">
			<Name>TaxBaseAmountNormalized</Name>
			<ExtendedDataType>TaxBase</ExtendedDataType>
			<ViewMethod>taxBaseAmountNormalized</ViewMethod>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>TaxBaseQty</Name>
			<DataField>TaxBaseQty</DataField>
			<DataSource>TaxTrans</DataSource>
		</AxViewField>
		<AxViewField xmlns=""
			i:type="AxViewFieldBound">
			<Name>IsReversedOnSameDate</Name>
			<DataField>IsReversedOnSameDate</DataField>
			<DataSource>TaxTrans_Reporting</DataSource>
		</AxViewField>
	</Fields>
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods />
		</SourceCode>
		<AllowCrossCompany>Yes</AllowCrossCompany>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TaxTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TaxTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTrans_Reporting</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTrans_Reporting</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTrans_W</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTrans_W</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations />
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Source</Name>
						<Field>Source</Field>
						<Value>!TaxModuleType::Tax</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxView>