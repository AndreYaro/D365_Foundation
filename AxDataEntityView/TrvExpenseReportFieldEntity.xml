<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TrvExpenseReportFieldEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TrvExpenseReportFieldEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set RefTableId and RefFieldId according to the table and field name.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    /// <param name = "_dataSourceCtx">Data source context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TrvExpenseReportFieldEntity, TrvAdminCustomFields))
        {
            this.RefTableId = tableName2Id(this.TableName);
            if (this.FieldName)
            {
                this.RefFieldId = fieldName2Id(this.RefTableId, this.FieldName);
            }
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>computedTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computed column for table name.
    /// </summary>
    private static str computedTableName()
    {
        str tableName = ' CASE ' + SysComputedColumn::returnField(tablestr(TrvExpenseReportFieldEntity),tablestr(TrvAdminCustomFields),fieldstr(TrvAdminCustomFields, RefTableId))  +
            ' WHEN ' + int2str(tableNum(TrvExpTable)) + " THEN '" + tableStr(TrvExpTable) + "' " +
            ' WHEN ' + int2str(tableNum(TrvExpTrans)) + " THEN '" + tableStr(TrvExpTrans) + "' " +
            ' WHEN ' + int2str(tableNum(TrvEnhancedCarRentalData)) + " THEN '" + tableStr(TrvEnhancedCarRentalData) + "' " +
            ' WHEN ' + int2str(tableNum(TrvEnhancedItineraryData)) + " THEN '" + tableStr(TrvEnhancedItineraryData) + "' " +
            ' WHEN ' + int2str(tableNum(TrvEnhancedHotelData)) + " THEN '" + tableStr(TrvEnhancedHotelData) + "' " +
            ' WHEN ' + int2str(tableNum(TrvEnhancedTripLegDetail)) + " THEN '" + tableStr(TrvEnhancedTripLegDetail) + "' " +
            " ELSE 'Invalid' END ";

        return tableName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>computedFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computed column for field name.
    /// </summary>
    private static str computedFieldName()
    {
        str fieldName = "select Name from TABLEFIELDIDTABLE TFID where TFID.TABLEID = " +
            SysComputedColumn::returnField(tablestr(TrvExpenseReportFieldEntity),tablestr(TrvAdminCustomFields),fieldstr(TrvAdminCustomFields, RefTableId)) +
            " AND TFID.ID = " +
            SysComputedColumn::returnField(tablestr(TrvExpenseReportFieldEntity),tablestr(TrvAdminCustomFields),fieldstr(TrvAdminCustomFields, RefFieldId));

		// Return an empty string instead of null when the field name is empty, happens when we have a method name.
        str fieldNameExpression = "SELECT CASE WHEN EXISTS(" + fieldName + ") THEN (" + fieldName + ") ELSE '' END AS NAME";

        return fieldNameExpression;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Trv</ConfigurationKey>
	<Label>@SYS118146</Label>
	<Tags>Display fields</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TrvExpenseReportFieldStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>TravelAndExpense</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ExpenseReportFields</PublicCollectionName>
	<PublicEntityName>ExpenseReportField</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LegalEntity</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MethodName</Name>
			<Label>@SYS330806</Label>
			<DataField>MethodName</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RefFieldId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RefFieldId</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RefTableId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RefTableId</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShowInForm</Name>
			<DataField>ShowInForm</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Visibility</Name>
			<DataField>Visibility</DataField>
			<DataSource>TrvAdminCustomFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>TableName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ComputedFieldMethod>computedTableName</ComputedFieldMethod>
			<ExtendedDataType>TableName</ExtendedDataType>
			<StringSize>81</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>FieldName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ComputedFieldMethod>computedFieldName</ComputedFieldMethod>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<StringSize>40</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TableName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>FieldName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>MethodName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TrvAdminCustomFields</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TrvAdminCustomFields</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CompanyInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>CompanyInfo</Name>
								<JoinRelationName>CompanyInfo</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>