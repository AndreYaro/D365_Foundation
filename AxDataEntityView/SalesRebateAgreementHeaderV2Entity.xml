<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesRebateAgreementHeaderV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesRebateAgreementHeaderV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.skipDataSourceValidateField(fieldNum(SalesRebateAgreementHeaderV2Entity, RebateAgreementId), true);

        // Approving requires an action in the UI. The entity allows these fields to be imported.
        this.skipDataSourceValidateField(fieldNum(SalesRebateAgreementHeaderV2Entity, ApprovalStatus), true);
        this.skipDataSourceValidateField(fieldNum(SalesRebateAgreementHeaderV2Entity, ValidatedBy), true);
        this.skipDataSourceValidateField(fieldNum(SalesRebateAgreementHeaderV2Entity, IsValidated), true);

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        // Set the correct inventDimId on the table buffer.
                        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                        _dataSourceCtx.setBuffer(inventDim);
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        PdsRebateAgreement      agreement;
        HcmPersonnelNumberId    workerPersonnelNumber;
        boolean                 validated;
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement):
                agreement = _dataSourceCtx.getBuffer();
                validated = this.IsValidated;
                // Store the worker personnel number before calling super because it might be blanked
                workerPersonnelNumber = this.ValidatingWorkerPersonnelNumber;
                if (validated && !agreement.checkIfLineExists())
                {
                    agreement.invalidateRebateAgreement(false);
                }
                _dataSourceCtx.skipDefaultRow(true);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement))
        {
            if (validated && workerPersonnelNumber && agreement.checkIfLineExists())
            {
                agreement.validateAgreement(workerPersonnelNumber);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        PdsRebateAgreement agreement;
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, InventDim):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;
            case dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement):
                if (this.IsValidated || this.ValidatedBy || this.ApprovalStatus != TAMCustRebateApprovalStatus::NotSubmitted)
                {
                    agreement = _dataSourceCtx.getBuffer();
                    agreement.invalidateRebateAgreement(false);
                }
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement))
        {
            // Need to re-apply inventory dimensions as defaulting logic may have changed them:
            this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(InventDim::find(agreement.inventDimId));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemCode</Name>
				<Source><![CDATA[
    private void defaultItemCode()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(SalesRebateAgreementHeaderV2Entity, ItemNumber)))
            {
                this.ItemCode = PdsRebateItemCode::Table;
            }
        }
        else if (this.SalesRebateProductGroupId)
        {
            if (this.isFieldSet(fieldNum(SalesRebateAgreementHeaderV2Entity, SalesRebateProductGroupId)))
            {
                this.ItemCode = PdsRebateItemCode::GroupId;
            }
        }
        else if (this.IsProductSelectionUsed)
        {
            if (this.isFieldSet(fieldNum(SalesRebateAgreementHeaderV2Entity, IsProductSelectionUsed)))
            {
                this.ItemCode = PdsRebateItemCode::Selection;
            }
        }
        else
        {
            this.ItemCode = PdsRebateItemCode::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemRelation</Name>
				<Source><![CDATA[
    private void defaultItemRelation()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(SalesRebateAgreementHeaderV2Entity, ItemNumber)))
            {
                this.ItemRelation = this.ItemNumber;
            }
        }
        else if (this.SalesRebateProductGroupId)
        {
            if (this.isFieldSet(fieldNum(SalesRebateAgreementHeaderV2Entity, SalesRebateProductGroupId)))
            {
                this.ItemRelation = this.SalesRebateProductGroupId;
            }
        }
        else
        {
            this.ItemRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesRebateAgreementHeaderV2Entity, ItemCode):
                this.defaultItemCode();
                break;
            case fieldNum(SalesRebateAgreementHeaderV2Entity, ItemRelation):
                this.defaultItemRelation();
                break;
        }

        this.CustTableGroupAllCustomerRelationExpansionMapping::defaultMappedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.CustTableGroupAllCustomerRelationExpansionMapping::mappedValidateWrite() && ret;

        if (PdsRebate::find(this.RebateProgramId).PdsRebateProgramType != PdsRebateProgramType::Rebate)
        {
            ret = checkFailed(strFmt("@MCR:CustomerRebateAgreementHeaderWrongType", PdsRebateProgramType::Rebate));
        }

        if (this.ItemCode != PdsRebateItemCode::Table
            && (this.ProductConfigurationId
                || this.ProductColorId
                || this.ProductSizeId
                || this.ProductVersionId
                || this.ProductStyleId))
        {
            ret = checkFailed("@MCR:CustomerRebateAgreementHeaderDimensionsNotAllowed");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(SalesRebateAgreementHeaderV2Entity, ItemCode),
                [fieldNum(SalesRebateAgreementHeaderV2Entity, ItemNumber), fieldNum(SalesRebateAgreementHeaderV2Entity, SalesRebateProductGroupId)]],
            [fieldNum(SalesRebateAgreementHeaderV2Entity, ItemRelation),
                [fieldNum(SalesRebateAgreementHeaderV2Entity, ItemNumber), fieldNum(SalesRebateAgreementHeaderV2Entity, SalesRebateProductGroupId)]],
            this.CustTableGroupAllCustomerRelationExpansionMapping::relationControllingCodeDefaultingDependencies(),
            this.CustTableGroupAllCustomerRelationExpansionMapping::codeControlledRelationDefaultingDependencies()
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>ItemNumber</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>ItemNumber</c> column in the entity.
    /// </returns>
    private static str itemNumberComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(SalesRebateAgreementHeaderV2Entity),
            dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement),
            fieldStr(PdsRebateAgreement, PdsItemRebateCode),
            PdsRebateItemCode::Table,
            fieldStr(PdsRebateAgreement, PdsItemRebateRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesRebateProductGroupIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>SalesRebateProductGroupId</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>SalesRebateProductGroupId</c> column in the entity.
    /// </returns>
    private static str salesRebateProductGroupIdComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(SalesRebateAgreementHeaderV2Entity),
            dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement),
            fieldStr(PdsRebateAgreement, PdsItemRebateCode),
            PdsRebateItemCode::GroupId,
            fieldStr(PdsRebateAgreement, PdsItemRebateRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductSelectionUsedComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>IsProductSelectionUsed</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>IsProductSelectionUsed</c> column in the entity.
    /// </returns>
    private static str isProductSelectionUsedComputedColumnDefinition()
    {
        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::returnLiteral(PdsRebateItemCode::Selection),
                        SysComputedColumn::comparisonField(tableStr(SalesRebateAgreementHeaderV2Entity), dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement), fieldStr(PdsRebateAgreement, PdsItemRebateCode))),
                    SysComputedColumn::returnLiteral(NoYes::Yes),
                    SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>CustomerAccountNumber</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>CustomerAccountNumber</c> column in the entity.
    /// </returns>
    private static str customerNumberComputedColumnDefinition()
    {
        return CustTableGroupAllCustomerRelationExpansionMapping::tableCategoryIdDefinition(tableStr(SalesRebateAgreementHeaderV2Entity),
                                                                                            dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesRebateCustomerGroupIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>SalesRebateCustomerGroupId</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>SalesRebateCustomerGroupId</c> column in the entity.
    /// </returns>
    private static str salesRebateCustomerGroupIdComputedColumnDefinition()
    {
        return CustTableGroupAllCustomerRelationExpansionMapping::groupCategoryIdDefinition(tableStr(SalesRebateAgreementHeaderV2Entity),
                                                                                            dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProductUnitSymbolExactComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>IsProductUnitSymbolExact</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>IsProductUnitSymbolExact</c> column in the entity.
    /// </returns>
    private static str isProductUnitSymbolExactComputedColumnDefinition()
    {
        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::returnLiteral(PdsRebateUOMOption::ExactMatch),
                        SysComputedColumn::comparisonField(tableStr(SalesRebateAgreementHeaderV2Entity), dataEntityDataSourceStr(SalesRebateAgreementHeaderV2Entity, PdsRebateAgreement), fieldStr(PdsRebateAgreement, RebateUOMOption))),
                    SysComputedColumn::returnLiteral(NoYes::Yes),
                    SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsRebate</ConfigurationKey>
	<DeveloperDocumentation>@MCR:CustomerRebateAgreementHeaderV2DeveloperDocumentation</DeveloperDocumentation>
	<FormRef>PdsRebateAgreements</FormRef>
	<Label>@MCR:CustomerRebateAgreementHeaderV2</Label>
	<Tags>Rebates</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesRebateAgreementHeaderV2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>SalesRebateAgreementHeadersV2</PublicCollectionName>
	<PublicEntityName>SalesRebateAgreementHeaderV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductUnitSymbolType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RebateProgramId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductUnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumSalesQuantityQualifyingRebate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTaxable</Name>
			<DataField>IsTaxable</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccrualMainAccountId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>LedgerDimension</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Note</Name>
			<DataField>Note</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpenseMainAccountId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>OffsetLedgerDimension</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsApprovalRequired</Name>
			<DataField>PdsApprovalRequired</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCumulationMethod</Name>
			<DataField>PdsCumulateSalesBy</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PdsCustRebateCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsCustRebateCode</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PdsCustRebateRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsCustRebateRelation</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsItemRebateCode</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsItemRebateRelation</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentType</Name>
			<DataField>PdsPaymtType</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateBreakBasis</Name>
			<DataField>PdsRebateLineBreakType</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumSalesAmountQualifyingRebate</Name>
			<DataField>PdsRebateMinAmt</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumSalesQuantityQualifyingRebate</Name>
			<DataField>PdsRebateMinQty</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineAmountBasis</Name>
			<DataField>PdsRebateTakenFrom</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductUnitSymbol</Name>
			<Mandatory>No</Mandatory>
			<DataField>PdsRebateUnit</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductUnitSymbolType</Name>
			<DataField>PdsUnitType</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CalculationSearchDateType</Name>
			<DataField>RebateCalcDateType</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>RebateCurrency</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCumulationMethodCustomizedPeriodType</Name>
			<DataField>RebateCustomizedPeriodType</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsGenericCurrencySearchEnabled</Name>
			<DataField>RebateGenericCurrency</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductUnitSymbolOption</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RebateUOMOption</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovalStatus</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>TAMCustRebateApprovalStatus</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsValidated</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Validated</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFrom</Name>
			<DataField>ValidFrom</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidTo</Name>
			<DataField>ValidTo</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidatedBy</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Verifier</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidatingWorkerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@PDS1418</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>Verifier</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccrualMainAccountIdDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@PDS1901</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>AccrualMainAccountIdDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpenseMainAccountIdDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@PDS1903</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>ExpenseMainAccountIdDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateProgramId</Name>
			<DataField>PdsRebateType</DataField>
			<DataSource>PdsRebate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualifyingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualifyingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ItemNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SalesRebateProductGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesRebateProductGroupIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsItemRebateGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SalesRebateCustomerGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesRebateCustomerGroupIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsCustRebateGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsProductUnitSymbolExact</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsProductUnitSymbolExactComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsProductSelectionUsed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isProductSelectionUsedComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateAgreementId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>RebateAgreementId</DataField>
			<DataSource>PdsRebateAgreement</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RebateAgreementId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>QualifyingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>QualifyingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustTableGroupAllCustomerRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CustomerCodeControlledRelation</MapField>
					<MapFieldTo>PdsCustRebateRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomerGroupId</MapField>
					<MapFieldTo>SalesRebateCustomerGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomerId</MapField>
					<MapFieldTo>CustomerAccountNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RelationControllingCustomerCode</MapField>
					<MapFieldTo>PdsCustRebateCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AccrualMainAccountIdCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>AccrualMainAccountId</Name>
					<Field>AccrualMainAccountId</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ExpenseMainAccountIdCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ExpenseMainAccountId</Name>
					<Field>ExpenseMainAccountId</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PdsRebateAgreement</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PdsRebateAgreement</Table>
				<ValidTimeStateUpdate>Correction</ValidTimeStateUpdate>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Verifier</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Verifier</Name>
								<JoinRelationName>HcmWorker</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccrualMainAccountIdDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AccrualMainAccountIdDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>PdsRebateAgreement</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ExpenseMainAccountIdDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ExpenseMainAccountIdDAVC</Name>
								<Field>OffsetLedgerDimension</Field>
								<JoinDataSource>PdsRebateAgreement</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsRebate</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PdsRebate</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PdsRebateType</Field>
								<JoinDataSource>PdsRebateAgreement</JoinDataSource>
								<RelatedField>PdsRebateType</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>PdsRebateAgreement</JoinDataSource>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>PdsRebateProgramType</Name>
						<Field>PdsRebateProgramType</Field>
						<Status>Hidden</Status>
						<Value>Rebate</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>