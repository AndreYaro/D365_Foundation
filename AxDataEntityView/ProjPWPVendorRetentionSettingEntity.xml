<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjPWPVendorRetentionSettingEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjPWPVendorRetentionSettingEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>vendorIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str vendorIdComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjPWPVendorRetentionSettingEntity),
            dataEntityDataSourceStr(ProjPWPVendorRetentionSettingEntity, ProjPWPVendorRetentionSetting),
            fieldStr(ProjPWPVendorRetentionSetting, AccountCode),
            TableGroupAll::Table,
            fieldStr(ProjPWPVendorRetentionSetting, VendorRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str vendorGroupComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjPWPVendorRetentionSettingEntity),
            dataEntityDataSourceStr(ProjPWPVendorRetentionSettingEntity, ProjPWPVendorRetentionSetting),
            fieldStr(ProjPWPVendorRetentionSetting, AccountCode),
            TableGroupAll::GroupId,
            fieldStr(ProjPWPVendorRetentionSetting, VendorRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAccountCode</Name>
				<Source><![CDATA[
    private void defaultAccountCode()
    {
        if (this.VendorId)
        {
            if (this.isFieldSet(fieldNum(ProjPWPVendorRetentionSettingEntity, VendorId)))
            {
                this.AccountCode = TableGroupAll::Table;
            }
        }
        else if (this.VendorGroup)
        {
            if (this.isFieldSet(fieldNum(ProjPWPVendorRetentionSettingEntity, VendorGroup)))
            {
                this.AccountCode = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.AccountCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultVendorRelation</Name>
				<Source><![CDATA[
    private void defaultVendorRelation()
    {
        if (this.VendorId)
        {
            if (this.isFieldSet(fieldNum(ProjPWPVendorRetentionSettingEntity, VendorId)))
            {
                this.VendorRelation = this.VendorId;
            }
        }
        else if (this.VendorGroup)
        {
            if (this.isFieldSet(fieldNum(ProjPWPVendorRetentionSettingEntity, VendorGroup)))
            {
                this.VendorRelation = this.VendorGroup;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(ProjPWPVendorRetentionSettingEntity, AccountCode),
                [fieldNum(ProjPWPVendorRetentionSettingEntity, VendorId), fieldNum(ProjPWPVendorRetentionSettingEntity, VendorGroup)]],
            [fieldNum(ProjPWPVendorRetentionSettingEntity, VendorRelation),
                [fieldNum(ProjPWPVendorRetentionSettingEntity, VendorId), fieldNum(ProjPWPVendorRetentionSettingEntity, VendorGroup)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjPWPVendorRetentionSettingEntity, AccountCode):
                this.defaultAccountCode();
                break;
            case fieldNum(ProjPWPVendorRetentionSettingEntity, VendorRelation):
                this.defaultVendorRelation();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.VendorId && this.VendorGroup)
            {
                ret = checkFailed("@Proj:EntityVendorAndGroupSpecifiedError");
            }

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<Label>@Proj:ProjPWPVendorRetentionSettings</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjPWPVendorRetentionSettingStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PWPVendorRetentionSettings</PublicCollectionName>
	<PublicEntityName>PWPVendorRetentionSetting</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountCode</Name>
			<AccessModifier>Private</AccessModifier>
			<Label>@SYS12243</Label>
			<DataField>AccountCode</DataField>
			<DataSource>ProjPWPVendorRetentionSetting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjId</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProjPWPVendorRetentionSetting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PwpThresholdPercent</Name>
			<Label>@PSA11212</Label>
			<DataField>PwpThresholdPercent</DataField>
			<DataSource>ProjPWPVendorRetentionSetting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RuleId</Name>
			<Label>@PSA11202</Label>
			<DataField>RuleId</DataField>
			<DataSource>ProjPWPVendorRetentionSetting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<Label>@PSA11211</Label>
			<DataField>VendorRelation</DataField>
			<DataSource>ProjPWPVendorRetentionSetting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS14048</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>vendorIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorGroup</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS3815</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>vendorGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>VendGroupId</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorGroup</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjPWPVendorRetentionSetting</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjPWPVendorRetentionSetting</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>