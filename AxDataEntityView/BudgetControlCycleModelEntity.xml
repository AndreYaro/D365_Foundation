<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlCycleModelEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlCycleModelEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setEnityOfficeMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the Office menu options for the entity when the <c>setEntityOfficeMenuOptionDelegate</c> delegate in the <c>BudgetControlConfigurationEntityHelper</c> class is called.
    /// </summary>
    /// <param name="_entityOfficeMenuOption">
    /// The <c>BudgetControlConfigurationEntityOfficeMenuOption</c> instance for the entity.
    /// </param>
    [SubscribesTo(classstr(BudgetControlConfigurationEntityHelper), delegatestr(BudgetControlConfigurationEntityHelper, setEntityOfficeMenuOptionDelegate))]
    public static void setEnityOfficeMenuOption(BudgetControlConfigurationEntityOfficeMenuOption _entityOfficeMenuOption)
    {
        if (_entityOfficeMenuOption.parmEntityName() == tableStr(BudgetControlCycleModelEntity))
        {
            _entityOfficeMenuOption.parmLegalEntityIdFieldName(fieldStr(BudgetControlCycleModelEntity, LegalEntityId));
            _entityOfficeMenuOption.parmStatusFieldName(fieldStr(BudgetControlCycleModelEntity, Status));
            _entityOfficeMenuOption.parmDisplayFieldGroupName(tableFieldGroupStr(BudgetControlCycleModelEntity, AutoReport));
            _entityOfficeMenuOption.parmDisplayName("@Budget:ControlCycleModelEntityOfficeExportDisplayValue");
            _entityOfficeMenuOption.parmDataAreaIdFieldName(fieldStr(BudgetControlCycleModelEntity, DataAreaId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BudgetControlBudgetCycle draftBudgetControlBudgetCycle = this.getDraftBudgetControlBudgetCycle(this.BudgetCycle, this.LegalEntityId);

        if (draftBudgetControlBudgetCycle.validateDelete())
        {
            draftBudgetControlBudgetCycle.delete();
        }
        else
        {
            // The validation will log errors, throw an exception to stop the delete.
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertRecord</Name>
				<Source><![CDATA[
    public void upsertRecord()
    {
        ttsbegin;

        BudgetCycleTimeSpan budgetCycleTimeSpan = BudgetControlConfigurationEntityHelper::getBudgetCycleTimeSpan(this.BudgetCycleTimeSpanName, this.BudgetCycleTimeSpanFiscalCalendarId);
        BudgetCycle budgetCycle = BudgetCycle::findByNameAndTimeSpan(this.BudgetCycleName, budgetCycleTimeSpan.RecId);

        BudgetControlBudgetCycle draftBudgetControlBudgetCycle = this.getDraftBudgetControlBudgetCycle(budgetCycle.RecId, this.LegalEntityId);

        if (!draftBudgetControlBudgetCycle)
        {
            BudgetControlConfiguration draftControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

            draftBudgetControlBudgetCycle.BudgetControlConfiguration = draftControlConfiguration.RecId;
        }

        draftBudgetControlBudgetCycle.BudgetCycle = budgetCycle.RecId;
        draftBudgetControlBudgetCycle.BudgetModelId = this.BudgetModelId;
        draftBudgetControlBudgetCycle.BudgetModelDataAreaId = this.LegalEntityId;
        draftBudgetControlBudgetCycle.BudgetModelSubModelId = this.BudgetModelId;
        draftBudgetControlBudgetCycle.BudgetModelType = HeadingSub::Heading;

        if (draftBudgetControlBudgetCycle.validateBudgetModel() &&
            draftBudgetControlBudgetCycle.vaidateBudgetCycle() &&
            draftBudgetControlBudgetCycle.validateWrite())
        {
            if (!draftBudgetControlBudgetCycle)
            {
                draftBudgetControlBudgetCycle.insert();
            }
            else
            {
                draftBudgetControlBudgetCycle.update();
            }
        }
        else
        {
            // The validation will log errors, throw an exception to stop the delete.
            throw Exception::Error;
        }

        // The entity keys and the company context field may not be correct for the changes or current context.
        // Set the entity instance to the saved data.
        BudgetControlCycleModelEntity entity;

        // Set the current company context to match the primary company context set on the entity.
        changecompany(this.LegalEntityId)
        {
            // Select the entity record based on the key.
            select * from entity
                where entity.Status == BudgetControlConfigurationStatus::Draft
                    && entity.BudgetCycleName == this.BudgetCycleName
                    && entity.BudgetCycleTimeSpanName == this.BudgetCycleTimeSpanName
                    && entity.BudgetCycleTimeSpanFiscalCalendarId == this.BudgetCycleTimeSpanFiscalCalendarId;
        }

        this.data(entity);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftBudgetControlBudgetCycle</Name>
				<Source><![CDATA[
    private BudgetControlBudgetCycle getDraftBudgetControlBudgetCycle(BudgetCycleRecId _budgetCycleRecId, LegalEntityDataAreaId _legalEntityId)
    {
        BudgetControlConfiguration draftControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(_legalEntityId);

        BudgetControlBudgetCycle draftBudgetControlBudgetCycle;

        select firstonly forupdate * from draftBudgetControlBudgetCycle
            where draftBudgetControlBudgetCycle.BudgetControlConfiguration == draftControlConfiguration.RecId
                && draftBudgetControlBudgetCycle.BudgetCycle == _budgetCycleRecId;

        return draftBudgetControlBudgetCycle;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupBudgetModelId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of budget model IDs.
    /// </summary>
    /// <param name="_entityFields">
    /// The <c>Array</c> of entity fields values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// The serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of budget model IDs.
    /// </returns>
    [SysODataActionAttribute("BudgetControlCycleModelEntityBudgetModelIdLookup", false),
     SysODataCollectionAttribute("_fields", Types::String),
     SysODataFieldLookupAttribute("BudgetModelId")]
    public static str lookupBudgetModelId(Array _fields)
    {
        List lookupList = new List(Types::String);

        LegalEntityDataAreaId legalEntityId = BudgetEntityHelper::getLegalEntityIdFromOfficeAppCustomLookupFields(
            tableStr(BudgetControlCycleModelEntity),
            fieldStr(BudgetControlCycleModelEntity, LegalEntityId),
            _fields);

        changecompany(legalEntityId)
        {
            BudgetModelEntity budgetModelEntity;

            while select budgetModel from budgetModelEntity
            {
                lookupList.addEnd(budgetModelEntity.BudgetModel);
            }
        }

        return BudgetEntityHelper::getSerializedOfficeAppCustomLookupListResult(lookupList);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetControlCycleModelEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlConfiguration</FormRef>
	<Label>@Budget:BudgetControlCycleModelEntity</Label>
	<Tags>Budget control setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BudgetControlCycleModelStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>Budgeting</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BudgetControlCycleModels</PublicCollectionName>
	<PublicEntityName>BudgetControlCycleModel</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetCycleTimeSpanName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetCycleTimeSpanFiscalCalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetCycleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetModelId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetModelId</Name>
			<DataField>BudgetModelId</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetControlConfiguration</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<DataField>BudgetControlConfiguration</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetCycle</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetCycle</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>LegalEntityId</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetCycleTimeSpanName</Name>
			<DataField>BudgetCycleTimeSpanName</DataField>
			<DataSource>BudgetCycleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetCycleName</Name>
			<DataField>BudgetCycleName</DataField>
			<DataSource>BudgetCycleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>StartDate</DataField>
			<DataSource>BudgetCycleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>EndDate</DataField>
			<DataSource>BudgetCycleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Status</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseBy</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetCycleTimeSpanFiscalCalendarId</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@Budget:BudgetCycleTimeSpanFiscalCalendar</Label>
			<DataField>FiscalCalendar</DataField>
			<DataSource>BudgetCycleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetModelType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetModelType</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetModelSubModelId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetModelSubModelId</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetModelDataAreaId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<DataField>BudgetModelDataAreaId</DataField>
			<DataSource>BudgetControlBudgetCycle</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Status</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetCycleName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetCycleTimeSpanName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetCycleTimeSpanFiscalCalendarId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BudgetControlConfigurationEntity</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>BudgetControlConfigurationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurations</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlCycleModelConfiguration</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlConfigurationEntity_LegalEntityId</Name>
					<Field>LegalEntityId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlConfigurationEntity_Status</Name>
					<Field>Status</Field>
					<RelatedField>Status</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BudgetCycleEntity</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>BudgetCycleEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetCycles</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlCycleModelBudgetCycle</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetCycleEntity_BudgetCycleTimeSpanName</Name>
					<Field>BudgetCycleTimeSpanName</Field>
					<RelatedField>BudgetCycleTimeSpanName</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetCycleEntity_FiscalCalendar</Name>
					<Field>BudgetCycleTimeSpanFiscalCalendarId</Field>
					<RelatedField>FiscalCalendar</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetCycleEntity_BudgetCycleName</Name>
					<Field>BudgetCycleName</Field>
					<RelatedField>BudgetCycleName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetControlBudgetCycle</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetControlBudgetCycle</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetControlConfigurationEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetControlConfigurationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetControlConfiguration</Field>
								<JoinDataSource>BudgetControlBudgetCycle</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetCycleEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetCycleEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetCycle</Field>
								<JoinDataSource>BudgetControlBudgetCycle</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField1</Name>
						<DataSource>BudgetControlConfigurationEntity</DataSource>
						<Field>LegalEntityId</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField2</Name>
						<DataSource>BudgetControlConfigurationEntity</DataSource>
						<Field>Status</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>