<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>InventItemPendingPriceEntity</Name>
  <SourceCode>
    <Declaration><![CDATA[
public class InventItemPendingPriceEntity extends common
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>mapEntityToDataSource</Name>
        <Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // Skip read-only fields
        this.skipDataSourceValidateField(fieldNum(InventItemPendingPriceEntity, ProductUnitSymbol), true);

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventItemPendingPriceEntity, InventItemPriceSim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        // Set the correct inventDimId on the table buffer.
                        InventItemPriceSim itemPriceSim = _dataSourceCtx.getBuffer();
                        itemPriceSim.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

                        if (!itemPriceSim.FromDate)
                        {
                            itemPriceSim.defaultField(fieldNum(InventItemPriceSim, FromDate));
                        }

                        // Default read-only fields
                        itemPriceSim.defaultField(fieldNum(InventItemPriceSim, UnitId));
                        break;
                }
                break;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>findEntityDataSource</Name>
        <Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventItemPendingPriceEntity, InventDim):
                var priceContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventItemPendingPriceEntity, InventItemPriceSim));
                InventItemPriceSim itemPriceSim = priceContext.getBuffer();

                ret = InventDim::find(itemPriceSim.InventDimId);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>updateEntityDataSource</Name>
        <Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventItemPendingPriceEntity, InventItemPriceSim))
            {
                // Need to re-apply inventory dimensions as defaulting logic may have changed them:
                InventItemPriceSim itemPriceSim = _dataSourceCtx.getBuffer();
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(itemPriceSim.inventDim());
            }
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>insertEntityDataSource</Name>
        <Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventItemPendingPriceEntity, InventItemPriceSim))
            {
                // Need to re-apply inventory dimensions as defaulting logic may have changed them:
                InventItemPriceSim itemPriceSim = _dataSourceCtx.getBuffer();
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(itemPriceSim.inventDim());
            }
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultProductSiteId</Name>
        <Source><![CDATA[
    private void defaultProductSiteId()
    {
        if (!this.PriceSiteId
            && this.CostingVersionId)
        {
            this.PriceSiteId = this.getExtensionCostingVersion().InventSiteId;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultField</Name>
        <Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(InventItemPendingPriceEntity, PriceSiteId):
                this.defaultProductSiteId();
                break;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>getExtensionCostingVersion</Name>
        <Source><![CDATA[
    private CostingVersion getExtensionCostingVersion()
    {
        return CostingVersion::find(this.CostingVersionId);
    }

]]></Source>
      </Method>
      <Method>
        <Name>getDefaultingDependencies</Name>
        <Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldnum (InventItemPendingPriceEntity, PriceSiteId), [fieldnum (InventItemPendingPriceEntity, CostingVersionId)]]
        ];
    }

]]></Source>
      </Method>
      <Method>
        <Name>getExtension</Name>
        <Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
      </Method>
      <Method>
        <Name>validateWrite</Name>
        <Source><![CDATA[
    /// <summary>
    /// Validate when a invent item pending price is saved.
    /// </summary>
    /// <returns>True if the validation is good, otherwise is false.</returns>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (ret)
        {
            if (this.PriceSiteId && !InventSite::find(this.PriceSiteId))
            {
                ret = checkFailed(strfmt("@SYS111931", this.PriceSiteId));
            }
        }
    
        return ret;
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
  <ConfigurationKey>LogisticsBasic</ConfigurationKey>
  <DeveloperDocumentation>@SCM:DevDocItemPendingPrice</DeveloperDocumentation>
  <FormRef>InventItemPrice</FormRef>
  <Label>@SYS108619</Label>
  <IsObsolete>Yes</IsObsolete>
  <Tags>Prices</Tags>
  <DataManagementEnabled>Yes</DataManagementEnabled>
  <DataManagementStagingTable>InventItemPendingPriceStaging</DataManagementStagingTable>
  <IsPublic>Yes</IsPublic>
  <Modules>InventoryAndWarehouseManagement</Modules>
  <PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
  <PrimaryKey>EntityKey</PrimaryKey>
  <PublicCollectionName>InventItemPendingPrices</PublicCollectionName>
  <PublicEntityName>InventItemPendingPrice</PublicEntityName>
  <DeleteActions />
  <FieldGroups>
    <AxTableFieldGroup>
      <Name>AutoReport</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoLookup</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoIdentification</Name>
      <AutoPopulate>Yes</AutoPopulate>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoSummary</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoBrowse</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>ExportToExcel</Name>
      <Fields>
        <AxTableFieldGroupField>
          <DataField>CostingVersionId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>PriceType</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>FromDate</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ItemNumber</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>PriceSiteId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ProductConfigurationId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ProductColorId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ProductSizeId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ProductStyleId</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>Price</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>PriceQuantity</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>ProductUnitSymbol</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>FixedPriceCharges</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>PriceChargesQuantity</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>IsPriceIncludingCharges</DataField>
        </AxTableFieldGroupField>
        <AxTableFieldGroupField>
          <DataField>DataAreaId</DataField>
        </AxTableFieldGroupField>
      </Fields>
    </AxTableFieldGroup>
  </FieldGroups>
  <Fields>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>FromDate</Name>
      <Mandatory>No</Mandatory>
      <DataField>FromDate</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ItemNumber</Name>
      <DataField>ItemId</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>FixedPriceCharges</Name>
      <DataField>Markup</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>Price</Name>
      <DataField>Price</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>IsPriceIncludingCharges</Name>
      <DataField>PriceAllocateMarkup</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>PriceChargesQuantity</Name>
      <DataField>PriceQty</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>PriceType</Name>
      <DataField>PriceType</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>PriceQuantity</Name>
      <DataField>PriceUnit</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductUnitSymbol</Name>
      <DataField>UnitID</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>CostingVersionId</Name>
      <DataField>VersionId</DataField>
      <DataSource>InventItemPriceSim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>PriceSiteId</Name>
      <DataField>InventSiteId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductConfigurationId</Name>
      <DataField>configId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductColorId</Name>
      <DataField>InventColorId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductSizeId</Name>
      <DataField>InventSizeId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductStyleId</Name>
      <DataField>InventStyleId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
  </Fields>
  <Keys>
    <AxDataEntityViewKey>
      <Name>EntityKey</Name>
      <Fields>
        <AxDataEntityViewKeyField>
          <DataField>ItemNumber</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>CostingVersionId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>FromDate</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>PriceType</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>PriceSiteId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductConfigurationId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductColorId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductSizeId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductStyleId</DataField>
        </AxDataEntityViewKeyField>
      </Fields>
    </AxDataEntityViewKey>
  </Keys>
  <Mappings>
    <AxTableMapping>
      <MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
      <Connections>
        <AxTableMappingConnection>
          <MapField>configId</MapField>
          <MapFieldTo>ProductConfigurationId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>inventBatchId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventColorId</MapField>
          <MapFieldTo>ProductColorId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventGTDId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventLocationId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventOwnerId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventProfileId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>inventSerialId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventSiteId</MapField>
          <MapFieldTo>PriceSiteId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventSizeId</MapField>
          <MapFieldTo>ProductSizeId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventStatusId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventStyleId</MapField>
          <MapFieldTo>ProductStyleId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>LicensePlateId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>wMSLocationId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>wMSPalletId</MapField>
        </AxTableMappingConnection>
      </Connections>
    </AxTableMapping>
  </Mappings>
  <Ranges />
  <Relations />
  <StateMachines />
  <ViewMetadata>
    <Name>Metadata</Name>
    <SourceCode>
      <Methods>
        <Method>
          <Name>classDeclaration</Name>
          <Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
        </Method>
      </Methods>
    </SourceCode>
    <DataSources>
      <AxQuerySimpleRootDataSource>
        <Name>InventItemPriceSim</Name>
        <DynamicFields>Yes</DynamicFields>
        <Table>InventItemPriceSim</Table>
        <DataSources>
          <AxQuerySimpleEmbeddedDataSource>
            <Name>InventDim</Name>
            <DynamicFields>Yes</DynamicFields>
            <IsReadOnly>Yes</IsReadOnly>
            <Table>InventDim</Table>
            <DataSources />
            <DerivedDataSources />
            <Fields />
            <Ranges />
            <UseRelations>Yes</UseRelations>
            <Relations>
              <AxQuerySimpleDataSourceRelation>
                <Name>InventDim</Name>
                <JoinRelationName>InventDim</JoinRelationName>
              </AxQuerySimpleDataSourceRelation>
            </Relations>
          </AxQuerySimpleEmbeddedDataSource>
        </DataSources>
        <DerivedDataSources />
        <Fields />
        <Ranges />
        <GroupBy />
        <Having />
        <OrderBy />
      </AxQuerySimpleRootDataSource>
    </DataSources>
  </ViewMetadata>
</AxDataEntityView>