<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSShipConsolidationPolicyV3Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSShipConsolidationPolicyV3Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(WHSShipConsolidationPolicyV3Entity, WHSShipConsolidationPolicy):
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSShipConsolidationPolicyV3Entity, ShipConsolidationPolicyQuery), fieldNum(WHSShipConsolidationPolicy, ShipConsolidationPolicyQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSShipConsolidationPolicyV3Entity, ShipConsolidationPolicyQueryJson), fieldNum(WHSShipConsolidationPolicy, ShipConsolidationPolicyQuery));
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.ShipConsolidationPolicyQuery)
        {
            QueryRun queryRun = new QueryRun(this.ShipConsolidationPolicyQuery);
            this.ShipConsolidationPolicyQueryJson = new SysQuery(queryRun.query()).toJson();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSShipConsolidationPolicyV3Entity, WHSShipConsolidationPolicy))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Insert);

            if (this.ShipConsolidationPolicyQueryJson)
            {
                this.validateQueryStructure(_dataSourceCtx);
            }
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSShipConsolidationPolicyV3Entity, WHSShipConsolidationPolicy))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Update);

            if (this.ShipConsolidationPolicyQueryJson)
            {
                this.validateQueryStructure(_dataSourceCtx);
            }
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    private void initializeQuery(DataEntityDataSourceRuntimeContext _dataSourceCtx, DataEntityDatabaseOperation _databaseOperation)
    {
        WHSShipConsolidationPolicy shipConsolidationPolicy = _dataSourceCtx.getBuffer();

        switch (_databaseOperation)
        {
            case DataEntityDatabaseOperation::Insert:
                if (this.ShipConsolidationPolicyQueryJson)
                {
                    this.initializeQueryFromJson(shipConsolidationPolicy);
                }
                else
                {
                    this.initializeDefaultQuery(shipConsolidationPolicy);
                }
                break;
            case DataEntityDatabaseOperation::Update:
                if (this.ShipConsolidationPolicyQueryJson)
                {
                    this.initializeQueryFromJson(shipConsolidationPolicy);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQueryFromJson</Name>
				<Source><![CDATA[
    private void initializeQueryFromJson(WHSShipConsolidationPolicy _shipConsolidationPolicy)
    {
        Query deserializedQuery = SysQuery::newFromJson(this.ShipConsolidationPolicyQueryJson);
        QueryRun queryRun = new QueryRun(deserializedQuery);
        
        _shipConsolidationPolicy.ShipConsolidationPolicyQuery = queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDefaultQuery</Name>
				<Source><![CDATA[
    private void initializeDefaultQuery(WHSShipConsolidationPolicy _shipConsolidationPolicy)
    {
        _shipConsolidationPolicy.initCriteriaQueryFromPolicyType(_shipConsolidationPolicy.ShipConsolidationPolicyType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQueryStructure</Name>
				<Source><![CDATA[
    private void validateQueryStructure(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Query actualQuery = SysQuery::newFromJson(this.ShipConsolidationPolicyQueryJson);
        Query expectedQuery = this.defaultExpectedQuery(_dataSourceCtx.getBuffer());

        if (!WHSQueryInitializer::initializeDataSource(expectedQuery.dataSourceNo(1), actualQuery.dataSourceNo(1)))
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpectedQuery</Name>
				<Source><![CDATA[
    private Query defaultExpectedQuery(WHSShipConsolidationPolicy _shipConsolidationPolicy)
    {
        WHSShipConsolidationPolicy shipConsolidationPolicy;

        buf2Buf(_shipConsolidationPolicy, shipConsolidationPolicy);

        shipConsolidationPolicy.ShipConsolidationPolicyQuery = conNull();
        shipConsolidationPolicy.initCriteriaQueryFromPolicyType(shipConsolidationPolicy.ShipConsolidationPolicyType);
        
        return new QueryRun(shipConsolidationPolicy.ShipConsolidationPolicyQuery).query();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>WHSShipConsolidationPolicy</FormRef>
	<Label>@WAX:WHSShipConsolidationPolicyV3EntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSShipConsolidationPolicyV3Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ShipConsolidationPoliciesV3</PublicCollectionName>
	<PublicEntityName>ShipConsolidationPolicyV3</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipConsolidationPolicyName</Name>
			<DataField>ShipConsolidationPolicyName</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipConsolidationPolicyType</Name>
			<DataField>ShipConsolidationPolicyType</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipConsolidationPolicySeqNum</Name>
			<DataField>ShipConsolidationPolicySeqNum</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipConsolidationPolicyQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>ShipConsolidationPolicyQuery</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipConsolidationPolicyDesc</Name>
			<DataField>ShipConsolidationPolicyDesc</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Valid</Name>
			<DataField>Valid</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsolidateWithExistingShipments</Name>
			<DataField>ConsolidateWithExistingShipments</DataField>
			<DataSource>WHSShipConsolidationPolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ShipConsolidationPolicyQueryJson</Name>
			<Label>@WAX:ShipConsolidationPolicyQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ShipConsolidationPolicyType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ShipConsolidationPolicyName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSShipConsolidationPolicy</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSShipConsolidationPolicy</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>