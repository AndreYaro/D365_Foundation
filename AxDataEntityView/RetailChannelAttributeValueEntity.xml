<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailChannelAttributeValueEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailChannelAttributeValueEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        RetailChannelTable  retailChannelTable;
        EcoResTextValue ecoResTextValue;
        EcoResAttributeValue   ecoResAttributeValue;
        EcoResValue ecoResValue = this.findEcoResValue();

        super();

        if (!ecoResValue.RecId)
        {
            EcoResAttributeType ecoResAttributeType = EcoResAttributeType::findByName(this.AttributeTypeName);
            RecId ecoResValueRecId = this.insertEcoResValue(ecoResAttributeType.DataType);
            ecoResValue = EcoResValue::find(ecoResValueRecId);

            // Find RetailChannelInstanceValue
            RetailChannelInstanceValue  retailChannelInstanceValue = this.findRetailChannelInstanceValue();

            // Insert RetailChannelInstanceValue for current channel.
            if (!retailChannelInstanceValue.RecId)
            {
                select firstonly RecId from retailChannelTable where retailChannelTable.RetailChannelId == this.RetailChannelId;
                retailChannelInstanceValue.Channel = retailChannelTable.RecId;
                retailChannelInstanceValue.insert();
            }

            // Insert EcoResAttributeValue.
            ecoResAttributeValue.Value = ecoResValue.RecId;
            ecoResAttributeValue.InstanceValue = retailChannelInstanceValue.RecId;
            ecoResAttributeValue.Attribute = this.findEcoResAttribute().RecId;
            ecoResAttributeValue.insert();
        }
        else
        {
            // Updates EcoResValue for specified attribute data type.
            ttsbegin;
            EcoResAttributeType ecoResAttributeType = EcoResAttributeType::findByName(this.AttributeTypeName);
            this.updateEcoResValue(ecoResValue, ecoResAttributeType.DataType);
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEcoResAttribute</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Finds the specified record in the <c>EcoResAttribute</c> table.
    /// </summary>
    /// <returns>The specified record in the <c>EcoResAttribute</c> table; otherwise, an empty record.</returns>
    private EcoResAttribute findEcoResAttribute()
    {
        return EcoResAttribute::findByName(this.AttributeName, EcoResAttributeType::findByName(this.AttributeTypeName).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findRetailChannelInstanceValue</Name>
				<Source><![CDATA[
    /// <summary>
   ///  Finds the specified record in the <c>RetailChannelInstanceValue</c> table.
   /// </summary>
   /// <returns>The specified record in the <c>RetailChannelInstanceValue</c> table; otherwise, an empty record.</returns>
    private RetailChannelInstanceValue findRetailChannelInstanceValue()
    {
        RetailChannelTable retailChannelTable;
        RetailChannelInstanceValue retailChannelInstanceValue;

        // Find retailChannelInstanceValue.
        select firstonly retailChannelInstanceValue
            join retailChannelTable
            where retailChannelTable.RetailChannelId == this.RetailChannelId
                && retailChannelTable.RecId == retailChannelInstanceValue.Channel;

        return retailChannelInstanceValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEcoResValue</Name>
				<Source><![CDATA[
    /// <summary>
   /// Finds the specified record in the <c>EcoResValue</c> table.
   /// </summary>
    /// <returns>The specified record in the <c>EcoResValue</c> table; otherwise, an empty record.</returns>
    private EcoResValue findEcoResValue()
    {
        EcoResValue ecoResValue;
        EcoResAttributeGroupAttribute ecoResAttributeGroupAttribute;
        EcoResAttributeGroup ecoResAttributeGroup;
        RecId ecoResAttributeRecId = this.findEcoResAttribute().RecId;

        select firstOnly ecoResAttributeGroupAttribute
            where ecoResAttributeGroupAttribute.Attribute == ecoResAttributeRecId
                && ecoResAttributeGroupAttribute.AttributeGroup == EcoResAttributeGroup::findByName(this.AttributeGroupName).RecId;

        EcoResAttributeValue ecoResAttributeValue = EcoResAttributeValue::findOrCreateDefault(this.findRetailChannelInstanceValue().RecId, ecoResAttributeRecId, ecoResAttributeGroupAttribute);

        return EcoResValue::find(ecoResAttributeValue.Value);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = ret && this.validateAttributeType();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates attribute type.
    /// </summary>
    /// <returns>true if attribute type is not reference; otherwise, false.</returns>
    protected boolean validateAttributeType()
    {
        boolean ret = true;
        EcoResAttributeType attributeType = EcoResAttributeType::findByName(this.AttributeTypeName);
        if (attributeType.DataType == AttributeDataType::Reference)
        {
            ret = checkfailed("@SCM:ReferenceTypeIsNotSupported");
        }

        // Validates currency code.
        if (ret && attributeType.DataType == AttributeDataType::Currency)
        {
            if (!Currency::find(this.CurrencyCode))
            {
                ret = checkFailed("@SYS1458", this.CurrencyCode);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEcoResValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts EcoResValue for specified attribute data type.
    /// </summary>
    /// <param name = "_dataType">Attribute data type.</param>
    protected RecId insertEcoResValue(AttributeDataType _dataType)
    {
        EcoResTextValue ecoResTextValue;
        EcoResCurrencyValue  ecoResCurrencyValue;
        EcoResDateTimeValue ecoResDateTimeValue;
        EcoResFloatValue ecoResFloatValue;
        EcoResIntValue ecoResIntValue;
        EcoResBooleanValue ecoResBooleanValue;
        RecId ecoResValueRecId;

        switch (_dataType)
        {
            case AttributeDataType::Currency:
                ecoResCurrencyValue.CurrencyValue = this.CurrencyValue;
                ecoResCurrencyValue.CurrencyCode = this.CurrencyCode;
                ecoResCurrencyValue.insert();
                ecoResValueRecId = ecoResCurrencyValue.RecId;
                break;

            case AttributeDataType::DateTime:
                ecoResDateTimeValue.DateTimeValue = this.DateTimeValue;
                ecoResDateTimeValue.insert();
                ecoResValueRecId = ecoResDateTimeValue.RecId;
                break;

            case AttributeDataType::Decimal:
                ecoResFloatValue.FloatValue = this.DecimalValue;
                ecoResFloatValue.insert();
                ecoResValueRecId = ecoResFloatValue.RecId;
                break;

            case AttributeDataType::Integer:
                ecoResIntValue.IntValue = this.IntegerValue;
                ecoResIntValue.insert();
                ecoResValueRecId = ecoResIntValue.RecId;
                break;

            case AttributeDataType::Text:
                ecoResTextValue.TextValue = this.TextValue;
                ecoResTextValue.insert();
                ecoResValueRecId = ecoResTextValue.RecId;
                break;

            case AttributeDataType::TrueFalse:
                ecoResBooleanValue.BooleanValue = this.BooleanValue;
                ecoResBooleanValue.insert();
                ecoResValueRecId = ecoResBooleanValue.RecId;
                break;
        }

        return ecoResValueRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEcoResValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates EcoResValue for specified attribute data type.
    /// </summary>
    /// <param name = "ecoResValue">The record in the <c>EcoResValue</c> table.</param>
    /// <param name = "_dataType">Attribute data type.</param>
    protected void updateEcoResValue(EcoResValue ecoResValue, AttributeDataType _dataType)
    {
        EcoResTextValue ecoResTextValue;
        EcoResCurrencyValue  ecoResCurrencyValue;
        EcoResDateTimeValue ecoResDateTimeValue;
        EcoResFloatValue ecoResFloatValue;
        EcoResIntValue ecoResIntValue;
        EcoResBooleanValue ecoResBooleanValue;

        switch (_dataType)
        {
            case AttributeDataType::Currency:
                ecoResCurrencyValue = EcoResCurrencyValue::find(ecoResValue.RecId, true);
                ecoResCurrencyValue.CurrencyValue = this.CurrencyValue;
                ecoResCurrencyValue.CurrencyCode = this.CurrencyCode;
                ecoResCurrencyValue.update();
                break;

            case AttributeDataType::DateTime:
                ecoResDateTimeValue = EcoResDateTimeValue::find(ecoResValue.RecId, true);
                ecoResDateTimeValue.DateTimeValue = this.DateTimeValue;
                ecoResDateTimeValue.update();
                break;

            case AttributeDataType::Decimal:
                ecoResFloatValue = EcoResFloatValue::find(ecoResValue.RecId, true);
                ecoResFloatValue.FloatValue = this.DecimalValue;
                ecoResFloatValue.update();
                break;

            case AttributeDataType::Integer:
                ecoResIntValue = EcoResIntValue::find(ecoResValue.RecId, true);
                ecoResIntValue.IntValue = this.IntegerValue;
                ecoResIntValue.update();
                break;

            case AttributeDataType::Text:
                ecoResTextValue = EcoResTextValue::find(ecoResValue.RecId, true);
                ecoResTextValue.TextValue = this.TextValue;
                ecoResTextValue.update();
                break;

            case AttributeDataType::TrueFalse:
                ecoResBooleanValue = EcoResBooleanValue::find(ecoResValue.RecId, true);
                ecoResBooleanValue.BooleanValue = this.BooleanValue;
                ecoResBooleanValue.update();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Exposes the change tracking query.
    /// </summary>
    /// <returns>The change tracking query.</returns>
    public static Query defaultCTQuery()
    {
        Query ctQuery = new Query();

        QueryBuildDataSource qbdsRetailChannelTable = ctQuery.addDataSource(tableNum(RetailChannelTable));

        QueryBuildDataSource qbdsRetailChannelAttributeGroup = qbdsRetailChannelTable.addDataSource(tableNum(RetailChannelAttributeGroup));
        qbdsRetailChannelAttributeGroup.joinMode(JoinMode::InnerJoin);
        qbdsRetailChannelAttributeGroup.fetchMode(QueryFetchMode::One2One);
        qbdsRetailChannelAttributeGroup.addLink(fieldNum(RetailChannelTable, RecId), fieldNum(RetailChannelAttributeGroup, Channel), qbdsRetailChannelTable.name());

        QueryBuildDataSource qbdsEcoResAttributeGroupAttribute = qbdsRetailChannelAttributeGroup.addDataSource(tableNum(EcoResAttributeGroupAttribute));
        qbdsEcoResAttributeGroupAttribute.joinMode(JoinMode::InnerJoin);
        qbdsEcoResAttributeGroupAttribute.fetchMode(QueryFetchMode::One2One);
        qbdsEcoResAttributeGroupAttribute.addLink(fieldNum(RetailChannelAttributeGroup, AttributeGroup), fieldNum(EcoResAttributeGroupAttribute, AttributeGroup), qbdsRetailChannelAttributeGroup.name());

        QueryBuildDataSource qbdsEcoResAttribute = qbdsEcoResAttributeGroupAttribute.addDataSource(tableNum(EcoResAttribute));
        qbdsEcoResAttribute.joinMode(JoinMode::InnerJoin);
        qbdsEcoResAttribute.fetchMode(QueryFetchMode::One2One);
        qbdsEcoResAttribute.addLink(fieldNum(EcoResAttributeGroupAttribute, Attribute), fieldNum(EcoResAttribute, RecId), qbdsEcoResAttributeGroupAttribute.name());

        QueryBuildDataSource qbdsRetailChannelInstanceValue = qbdsEcoResAttribute.addDataSource(tableNum(RetailChannelInstanceValue));
        qbdsRetailChannelInstanceValue.joinMode(JoinMode::InnerJoin);
        qbdsRetailChannelInstanceValue.fetchMode(QueryFetchMode::One2One);
        qbdsRetailChannelInstanceValue.addLink(fieldNum(RetailChannelTable, RecId), fieldNum(RetailChannelInstanceValue, Channel), qbdsEcoResAttribute.name());

        QueryBuildDataSource qbdsEcoResAttributeValue = qbdsRetailChannelInstanceValue.addDataSource(tableNum(EcoResAttributeValue));
        qbdsEcoResAttributeValue.joinMode(JoinMode::InnerJoin);
        qbdsEcoResAttributeValue.fetchMode(QueryFetchMode::One2One);
        qbdsEcoResAttributeValue.addLink(fieldNum(RetailChannelInstanceValue, RecId), fieldNum(EcoResAttributeValue, InstanceValue), qbdsRetailChannelInstanceValue.name());
        qbdsEcoResAttributeValue.addLink(fieldNum(EcoResAttribute, RecId), fieldNum(EcoResAttributeValue, Attribute), qbdsRetailChannelInstanceValue.name());

        QueryBuildDataSource qbdsEcoResValue = qbdsEcoResAttributeValue.addDataSource(tableNum(EcoResValue));
        qbdsEcoResValue.joinMode(JoinMode::InnerJoin);
        qbdsEcoResValue.fetchMode(QueryFetchMode::One2One);
        qbdsEcoResValue.relations(true);

        QueryBuildDataSource EcoResAttributeType = qbdsRetailChannelInstanceValue.addDataSource(tableNum(EcoResAttributeType));
        EcoResAttributeType.joinMode(JoinMode::InnerJoin);
        EcoResAttributeType.fetchMode(QueryFetchMode::One2One);
        EcoResAttributeType.addLink(fieldNum(EcoResAttribute, AttributeType), fieldNum(EcoResAttributeType, RecId));
        
        QueryBuildDataSource qbdsEcoResAttrbiuteGroup = qbdsRetailChannelAttributeGroup.addDataSource(tableNum(EcoResAttributeGroup));
        qbdsEcoResAttrbiuteGroup.joinMode(JoinMode::InnerJoin);
        qbdsEcoResAttrbiuteGroup.fetchMode(QueryFetchMode::One2One);
        qbdsEcoResAttrbiuteGroup.relations(true);
        
        return ctQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        throw error ("@RETAIL:DataEntityForInsertOnly");
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RETAIL:ChannelAttributeValueEntity</Label>
	<Tags>Channel profile</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailChannelAttributeValueStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ChannelManagement</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailChannelAttributeValues</PublicCollectionName>
	<PublicEntityName>RetailChannelAttributeValue</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RetailChannelId</Name>
			<DataField>RetailChannelId</DataField>
			<DataSource>RetailChannelTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeGroupName</Name>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeName</Name>
			<DataField>Name</DataField>
			<DataSource>EcoResAttribute</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeTypeName</Name>
			<Label>@SCM:AttributeType</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyCode</DataField>
			<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyValue</Name>
			<DataField>CurrencyValue</DataField>
			<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BooleanValue</Name>
			<DataField>BooleanValue</DataField>
			<DataSource>EcoResValue_EcoResBooleanValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DateTimeValue</Name>
			<DataField>DateTimeValue</DataField>
			<DataSource>EcoResValue_EcoResDateTimeValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecimalValue</Name>
			<DataField>FloatValue</DataField>
			<DataSource>EcoResValue_EcoResFloatValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntegerValue</Name>
			<DataField>IntValue</DataField>
			<DataSource>EcoResValue_EcoResIntValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TextValue</Name>
			<DataField>TextValue</DataField>
			<DataSource>EcoResValue_EcoResTextValue</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RetailChannelId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeGroupName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeTypeName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailChannelTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<IsReadOnly>Yes</IsReadOnly>
				<Table>RetailChannelTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailChannelAttributeGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RetailChannelAttributeGroup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResAttributeGroupAttribute</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResAttributeGroupAttribute</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResAttribute</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResAttribute</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>RetailChannelInstanceValue</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>RetailChannelInstanceValue</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResAttributeValue</Name>
														<DynamicFields>Yes</DynamicFields>
														<Table>EcoResAttributeValue</Table>
														<DataSources>
															<AxQuerySimpleEmbeddedDataSource>
																<Name>EcoResValue</Name>
																<DynamicFields>Yes</DynamicFields>
																<Table>EcoResValue</Table>
																<DataSources />
																<DerivedDataSources>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResTextValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResTextValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResReferenceValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResReferenceValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResFloatValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResFloatValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResIntValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResIntValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResCurrencyValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResCurrencyValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResDateTimeValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResDateTimeValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																	<AxQuerySimpleDerivedDataSource>
																		<Name>EcoResValue_EcoResBooleanValue</Name>
																		<DynamicFields>Yes</DynamicFields>
																		<Table>EcoResBooleanValue</Table>
																		<DataSources />
																		<DerivedDataSources />
																		<Fields />
																		<Ranges />
																	</AxQuerySimpleDerivedDataSource>
																</DerivedDataSources>
																<Fields />
																<Ranges />
																<Relations>
																	<AxQuerySimpleDataSourceRelation>
																		<Name>QueryDataSourceRelation1</Name>
																		<JoinDataSource>EcoResAttributeValue</JoinDataSource>
																		<JoinRelationName>Value</JoinRelationName>
																	</AxQuerySimpleDataSourceRelation>
																</Relations>
															</AxQuerySimpleEmbeddedDataSource>
														</DataSources>
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>RecId</Field>
																<JoinDataSource>RetailChannelInstanceValue</JoinDataSource>
																<RelatedField>InstanceValue</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>RecId</Field>
																<JoinDataSource>EcoResAttribute</JoinDataSource>
																<RelatedField>Attribute</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResAttributeType</Name>
														<DynamicFields>Yes</DynamicFields>
														<IsReadOnly>Yes</IsReadOnly>
														<Table>EcoResAttributeType</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>AttributeType</Field>
																<JoinDataSource>EcoResAttribute</JoinDataSource>
																<RelatedField>RecId</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>RecId</Field>
														<JoinDataSource>RetailChannelTable</JoinDataSource>
														<RelatedField>Channel</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>Attribute</Field>
												<JoinDataSource>EcoResAttributeGroupAttribute</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>AttributeGroup</Field>
										<JoinDataSource>RetailChannelAttributeGroup</JoinDataSource>
										<RelatedField>AttributeGroup</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResAttributeGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResAttributeGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>AttributeGroup</Field>
										<JoinDataSource>RetailChannelAttributeGroup</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>Modifier</Name>
								<Field>Modifier</Field>
								<Value>Channel</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>RetailChannelTable</JoinDataSource>
								<RelatedField>Channel</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources>
					<AxQuerySimpleDerivedDataSource>
						<Name>RetailChannelTable_RetailDirectSalesChannel</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailDirectSalesChannel</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
					<AxQuerySimpleDerivedDataSource>
						<Name>RetailChannelTable_RetailMCRChannelTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailMCRChannelTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
					<AxQuerySimpleDerivedDataSource>
						<Name>RetailChannelTable_RetailOnlineChannelTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailOnlineChannelTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
					<AxQuerySimpleDerivedDataSource>
						<Name>RetailChannelTable_RetailStoreTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailStoreTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
				</DerivedDataSources>
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>