<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SMAServiceBillOfMaterialTemplateEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SMAServiceBillOfMaterialTemplateEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                [fieldNum(SMAServiceBillOfMaterialTemplateEntity, BOMCopyRefId), this.BOMCopyRefIdDefaultingDependencies()],
                [fieldNum(SMAServiceBillOfMaterialTemplateEntity, BOMCopyRefType), this.BOMCopyRefTypeDefaultingDependencies()]
               ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOMCopyRefIdDefaultingDependencies</Name>
				<Source><![CDATA[
    private container BOMCopyRefIdDefaultingDependencies()
    {
        return this.BOMReferenceDefaultingDependencies();
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOMCopyRefTypeDefaultingDependencies</Name>
				<Source><![CDATA[
    private container BOMCopyRefTypeDefaultingDependencies()
    {
        return this.BOMReferenceDefaultingDependencies();
    }

]]></Source>
			</Method>
			<Method>
				<Name>BOMReferenceDefaultingDependencies</Name>
				<Source><![CDATA[
    private container BOMReferenceDefaultingDependencies()
    {
        return [fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber),
                fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId),
                fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SMAServiceBillOfMaterialTemplateEntity, BOMCopyRefId):
                this.defaultBOMCopyRefId();
                break;

            case fieldNum(SMAServiceBillOfMaterialTemplateEntity, BOMCopyRefType):
                this.defaultBOMCopyRefType();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMCopyRefId</Name>
				<Source><![CDATA[
    private void defaultBOMCopyRefId()
    {
        if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber))  ||
            this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId))                  ||
            this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)))
        {
            if (this.SourceProductionOrderNumber)
            {
                if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber)))
                {
                    this.BOMCopyRefId = this.SourceProductionOrderNumber;
                }
            }
            else
            {
                if (this.SourceBOMId)
                {
                    if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId)))
                    {
                        this.BOMCopyRefId = this.SourceBOMId;
                    }
                }
                else
                {
                    if (this.SourceServiceBOMTemplateId)
                    {
                        if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)))
                        {
                            this.BOMCopyRefId = this.SourceServiceBOMTemplateId;
                        }
                    }
                    else
                    {
                        this.BOMCopyRefId = '';
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBOMCopyRefType</Name>
				<Source><![CDATA[
    private void defaultBOMCopyRefType()
    {
        if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber))  ||
            this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId))                  ||
            this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)))
        {
            if (this.SourceProductionOrderNumber)
            {
                if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber)))
                {
                    this.BOMCopyRefType = SMABOMCopyRefType::Production;
                }
            }
            else
            {
                if (this.SourceBOMId)
                {
                    if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId)))
                    {
                        this.BOMCopyRefType = SMABOMCopyRefType::BOM;
                    }
                }
                else
                {
                    if (this.SourceServiceBOMTemplateId)
                    {
                        if (this.isFieldSet(fieldNum(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)))
                        {
                            this.BOMCopyRefType = SMABOMCopyRefType::TemplateBOM;
                        }
                    }
                    else
                    {
                        this.BOMCopyRefType = SMABOMCopyRefType::Manual;
                    }
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.validateSource() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSource</Name>
				<Source><![CDATA[
    private boolean validateSource()
    {
        boolean ret                             = true;
        int     sourceFieldsSpecified   = 0;

        if (this.SourceProductionOrderNumber)
        {
            sourceFieldsSpecified++;
        }

        if (this.SourceBOMId)
        {
            sourceFieldsSpecified++;
        }

        if (this.SourceServiceBOMTemplateId)
        {
            sourceFieldsSpecified++;
        }

        if (sourceFieldsSpecified > 1)
        {
            ret = checkFailed(strFmt("@ServiceManagement:EntityAtMostOneOfThreeSpecifiedError",
                                    fieldPName(SMAServiceBillOfMaterialTemplateEntity, SourceProductionOrderNumber),
                                    fieldPName(SMAServiceBillOfMaterialTemplateEntity, SourceBOMId),
                                    fieldPName(SMAServiceBillOfMaterialTemplateEntity, SourceServiceBOMTemplateId)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SMAServiceBillOfMaterialTemplateEntity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        // Set the correct inventDimId on the table buffer.
                        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                        _dataSourceCtx.setBuffer(inventDim);
                        break;
                }
                break;

            default:
                super(_entityCtx, _dataSourceCtx);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapInventDim</Name>
				<Source><![CDATA[
    private void mapInventDim(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(SMAServiceBillOfMaterialTemplateEntity, SMATemplateBOMTable))
        {
            // Need to re-apply inventory dimensions as defaulting logic may have changed them.
            SMATemplateBOMTable smaTemplateBOMTable = _dataSourceCtx.getBuffer();
            this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(smaTemplateBOMTable.inventDim());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.skipDataSourceValidateField(fieldNum(SMAServiceBillOfMaterialTemplateEntity, ItemNumber),true);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(SMAServiceBillOfMaterialTemplateEntity, InventDim))
        {
            // Read only datasource was handled by mapEntityToDataSource(...)
            return true;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            this.mapInventDim(_dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(SMAServiceBillOfMaterialTemplateEntity, InventDim))
        {
            // Read only datasource was handled by mapEntityToDataSource(...)
            return true;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            this.mapInventDim(_dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceProductionOrderNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the SourceProductionOrderNumber computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the SourceProductionOrderNumber field.
    /// </returns>
    static private str sourceProductionOrderNumberDefinition()
    {
        return SMAServiceBillOfMaterialTemplateEntity::sourceIdDefinition(SMABOMCopyRefType::Production);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceBOMIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the SourceBOMId computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the SourceBOMId field.
    /// </returns>
    static private str sourceBOMIdDefinition()
    {
        return SMAServiceBillOfMaterialTemplateEntity::sourceIdDefinition(SMABOMCopyRefType::BOM);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceServiceBOMTemplateIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the SourceServiceBOMTemplateId computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the SourceServiceBOMTemplateId field.
    /// </returns>
    static private str sourceServiceBOMTemplateIdDefinition()
    {
        return SMAServiceBillOfMaterialTemplateEntity::sourceIdDefinition(SMABOMCopyRefType::TemplateBOM);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves a string defining how to compute a computed field based on the parameter.
    /// </summary>
    /// <param name = "_BOMCopyRefType">
    /// The <c>SMABOMCopyRefType</c> value to retrieve a string for.
    /// </param>
    /// <returns>
    /// A string to compute a field
    /// </returns>
    static private str sourceIdDefinition(SMABOMCopyRefType _BOMCopyRefType)
    {
        return SysComputedColumn::codeDependentRelation(tableStr(SMAServiceBillOfMaterialTemplateEntity),
                                                        dataEntityDataSourceStr(SMAServiceBillOfMaterialTemplateEntity, SMATemplateBOMTable),
                                                        fieldStr(SMATemplateBOMTable, BOMCopyRefType),
                                                        _BOMCopyRefType,
                                                        fieldStr(SMATemplateBOMTable, BOMCopyRefId),
                                                        '');
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SMABom</ConfigurationKey>
	<DeveloperDocumentation>@ServiceManagement:ServiceBillOfMaterialTemplateEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>SMATemplatebomTable</FormRef>
	<Label>@SYS89149</Label>
	<Tags>Service agreement</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SMAServiceBillOfMaterialTemplateStaging</DataManagementStagingTable>
	<Modules>ServiceManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMId</Name>
			<DataField>TemplateBOMId</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMName</Name>
			<DataField>Name</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFromDate</Name>
			<DataField>FromDate</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidToDate</Name>
			<DataField>ToDate</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActiveSourceDate</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>BOMDate</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMCopyRefId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BOMCopyRefId</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMCopyRefType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BOMCopyRefType</DataField>
			<DataSource>SMATemplateBOMTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceProductionOrderNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>SMA</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceProductionOrderNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>ProdId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceBOMId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>SMA</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceBOMIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>BOMId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceServiceBOMTemplateId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>SMA</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceServiceBOMTemplateIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>SMATemplateBOMId</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>BOMId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SMATemplateBOMTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SMATemplateBOMTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>SMATemplateBOMTable</JoinDataSource>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>