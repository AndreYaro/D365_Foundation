<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmLeadEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmLeadEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query leadQuery = new Query();

        var leadTableDS = leadQuery.addDataSource(tableNum(smmLeadTable));
        
        var workerDS = leadTableDS.addDataSource(tableNum(HcmWorker));
        workerDS.joinMode(JoinMode::OuterJoin);
        workerDS.addLink(fieldNum(smmLeadTable, ClosedByWorker), fieldNum(HcmWorker, RecId));

        var openedByWorkerDS = leadTableDS.addDataSource(tableNum(HcmWorker));
        openedByWorkerDS.joinMode(JoinMode::OuterJoin);
        openedByWorkerDS.addLink(fieldNum(smmLeadTable, OpenedByWorker), fieldNum(HcmWorker, RecId));

        var ownerWorkerDS = leadTableDS.addDataSource(tableNum(HcmWorker));
        ownerWorkerDS.joinMode(JoinMode::OuterJoin);
        ownerWorkerDS.addLink(fieldNum(smmLeadTable, OwnerWorker), fieldNum(HcmWorker, RecId));

        var dirPartyDS = leadTableDS.addDataSource(tableNum(DirPartyTable));
        dirPartyDS.joinMode(JoinMode::OuterJoin);
        dirPartyDS.addLink(fieldNum(smmLeadTable, Party), fieldNum(DirPartyTable, RecId));

        return leadQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmLeadEntity, smmLeadTable) && this.LeadSourceTypeId)
        {
            smmSourceTypeTable smmSourceTypeTable = smmSourceTypeTable::find(this.LeadSourceTypeId);

            this.SourceRefTableId = smmSourceType::type2TableId(smmSourceTypeTable.Type);

            FieldId sourceIdField = this.getSourceIdField();
            if (sourceIdField && this.SourceRefTableId && this.(sourceIdField))
            {
                this.SourceRefRecId = smmLeadEntity::findSourceRefRecId(this.(sourceIdField), this.SourceRefTableId);
            }
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.validateSourceId();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSourceIdField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the relevant source ID field number for the current source type. E.g.
    ///     SourceType == 'Customer' -> fieldNum(smmLeadEntity, CustomerSourceId)
    /// </summary>
    /// <returns>The field ID that satisfies the restrictions defined in the summary.</returns>
    private FieldId getSourceIdField()
    {
        smmSourceTypeTable smmSourceTypeTable;
        FieldId            sourceIdField;

        if (this.LeadSourceTypeId)
        {
            smmSourceTypeTable = smmSourceTypeTable::find(this.LeadSourceTypeId);
        }

        if (smmSourceTypeTable.RecId)
        {
            sourceIdField = smmLeadEntity::sourceType2FieldId(smmSourceTypeTable.Type);
        }
        else
        {
            sourceIdField = 0;
        }

        return sourceIdField;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates that no source ID field other than the relevant field to the current source type (see getSourceIdField())
    /// has data.
    /// </summary>
    /// <returns>true if the record was validated and false otherwise.</returns>
    private boolean validateSourceId()
    {
        FieldId  expectedSourceIdField = this.getSourceIdField();
        boolean  ret                   = true;

        // For each source type:
        //     find the corresponding field id in the entity (e.g. SmmSourceTypeList::Vendor -> VendorSourceId)
        //     if the current entity field has data when it's not the expected one (e.g. SourceWorkerPersonnelNumber is filled when LeadSourceTypeId is Vendor)
        //         throw a validation error
        DictEnum dictEnum = DictEnum::newFromName(enumStr(SmmSourceTypeList));
        Enumerator enum = dictEnum.getEnumerator();

        while (enum.moveNext())
        {
            SmmSourceTypeList currentSourceType    = enum.current();
            FieldId           currentSourceFieldId = smmLeadEntity::sourceType2FieldId(currentSourceType);

            if (currentSourceFieldId == 0 || currentSourceFieldId == expectedSourceIdField)
            {
                continue;
            }

            if (this.(currentSourceFieldId) != '')
            {
                ret = ret && checkFailed(strfmt("@SalesAndMarketing:FieldShouldNotBeFilledError",
                    fieldId2PName(tableNum(smmLeadEntity), currentSourceFieldId),
                    fieldId2PName(tableNum(smmLeadEntity), fieldNum(smmLeadEntity, LeadSourceTypeId)),
                    this.LeadSourceTypeId));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceActivityNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceActivityNumber field.
    /// </summary>
    /// <returns>The computed column definition for the SourceActivityNumber field.</returns>
    private static str sourceActivityNumberDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Activity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>userDefinedSourceIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the UserDefinedSourceId field.
    /// </summary>
    /// <returns>The computed column definition for the UserDefinedSourceId field.</returns>
    private static str userDefinedSourceIdDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::UserDefined);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceVendorAccountNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceVendorAccountNumber field.
    /// </summary>
    /// <returns>The computed column definition for the SourceVendorAccountNumber field.</returns>
    private static str sourceVendorAccountNumberDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Vendor);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceWorkerPersonnelNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceWorkerPersonnelNumber field.
    /// </summary>
    /// <returns>The computed column definition for the SourceWorkerPersonnelNumber field.</returns>
    private static str sourceWorkerPersonnelNumberDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Employee);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceCampaignIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceCampaignId field.
    /// </summary>
    /// <returns>The computed column definition for the SourceCampaignId field.</returns>
    private static str sourceCampaignIdDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Campaign);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceProspectIdDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceProspectId field.
    /// </summary>
    /// <returns>The computed column definition for the SourceProspectId field.</returns>
    private static str sourceProspectIdDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Prospect);
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceCustomerAccountNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for the SourceCustomerAccountNumber field.
    /// </summary>
    /// <returns>The computed column definition for the SourceCustomerAccountNumber field.</returns>
    private static str sourceCustomerAccountNumberDefinition()
    {
        return smmLeadEntity::generateComputedSourceColumn(SmmSourceTypeList::Customer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateComputedSourceColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates the computed column definition for a given source type.
    /// </summary>
    /// <param name = "sourceType">The desired source type.</param>
    /// <returns>
    ///     Sample generated code for sourceType == SourceTypeList::Employee. Table ID may vary.
    ///
    ///     CASE WHEN ((T1.SOURCEREFRECID) != (0)) AND (T1.SOURCEREFTABLEID = 5255)
    ///     THEN
    ///         (SELECT PersonnelNumber FROM HcmWorker WHERE RECID = T1.SOURCEREFRECID)
    ///     ELSE
    ///         ''
    ///     END
    ///</returns>
    private static str generateComputedSourceColumn(SmmSourceTypeList sourceType)
    {
        TableId sourceTableId = smmSourceType::type2TableId(sourceType);
        FieldName sourceFieldName = smmSourceType::tableId2FieldName(sourceTableId);

        str sourceRefTableIdFieldName = SysComputedColumn::returnField(
            tablestr(smmLeadEntity),
            dataEntityDataSourceStr(smmLeadEntity, smmLeadTable),
            fieldstr(smmLeadTable, SourceRefTableId));

        str sourceRefRecIdFieldName = SysComputedColumn::returnField(
            tablestr(smmLeadEntity),
            dataEntityDataSourceStr(smmLeadEntity, smmLeadTable),
            fieldstr(smmLeadTable, SourceRefRecId));

        str templateQuery = '(SELECT %1 FROM %2 WHERE RECID = ' + sourceRefRecIdFieldName + ')';

        str sourceRefRecIdNotEqualZero = SysComputedColumn::notEqualExpression(sourceRefRecIdFieldName, SysComputedColumn::returnLiteral(0));
        str sourceRefTableIdEqualsSourceTableId = SysComputedColumn::equalExpression(sourceRefTableIdFieldName, SysComputedColumn::returnLiteral(sourceTableId));

        return SysComputedColumn::if(
            SysComputedColumn::and2(sourceRefRecIdNotEqualZero, sourceRefTableIdEqualsSourceTableId),
            strFmt(templateQuery, sourceFieldName, tableId2Name(sourceTableId)),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds and returns a view buffer for the smmLeadEntity with a matching LeadId provided.
    /// </summary>
    /// <param name = "_leadId">The desired lead ID</param>
    /// <param name = "_forupdate">true if the record should be selected for update, false otherwise. Default false.</param>
    /// <returns>A view buffer for the smmLeadEntity with a matching LeadId provided.</returns>
    public static smmLeadEntity find(smmLeadId _leadId, boolean _forupdate = false)
    {
        smmLeadEntity smmLeadEntity = null;

        if (_leadId)
        {
            smmLeadEntity.selectForUpdate(_forupdate);

            select firstonly smmLeadEntity where smmLeadEntity.LeadId == _leadId;
        }

        return smmLeadEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>sourceType2FieldId</Name>
				<Source><![CDATA[
    /// <summary>
    /// For a given source type, returns the relevant field ID in the data entity.
    /// </summary>
    /// <param name = "sourceType">The source type that the desired field should relate.</param>
    /// <returns>The relevant field ID in the data entity. E.g. sourceType == 'Customer' -> fieldNum(smmLeadEntity, SourceCustomerAccountNumber)</returns>
    public static FieldId sourceType2FieldId(SmmSourceTypeList sourceType)
    {
        switch (sourceType)
        {
            case SmmSourceTypeList::Campaign    :
                return fieldNum(smmLeadEntity, SourceCampaignId);

            case SmmSourceTypeList::Customer    :
                return fieldNum(smmLeadEntity, SourceCustomerAccountNumber);

            case SmmSourceTypeList::Employee    :
                return fieldNum(smmLeadEntity, SourceWorkerPersonnelNumber);

            case SmmSourceTypeList::Vendor      :
                return fieldNum(smmLeadEntity, SourceVendorAccountNumber);

            case SmmSourceTypeList::Prospect    :
                return fieldNum(smmLeadEntity, SourceProspectId);

            case SmmSourceTypeList::UserDefined :
                return fieldNum(smmLeadEntity, UserDefinedSourceId);

            case SmmSourceTypeList::Activity    :
                return fieldNum(smmLeadEntity, SourceActivityNumber);
        }
        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSourceRefRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// For a given natural key sourceId and the table ID for the table that contains a record with such natural key,
    /// returns the <c>RecId</c> of the record that satisfies:
    ///     record.TableId == sourceRefTableId
    ///     record.(smmSourceType::tableId2FieldId(sourceRefTableId)) == sourceId
    /// </summary>
    /// <param name = "sourceId">The natural key of the record.</param>
    /// <param name = "sourceRefTableId">The table ID of the table that contais the record.</param>
    /// <returns>The <c>RecId</c> of the record that satisfies the restrictions defined in the summary.</returns>
    private static RefRecId findSourceRefRecId(anytype sourceId, TableId sourceRefTableId)
    {
        Common    source;
        DictTable dictTable = new DictTable(sourceRefTableId);
        FieldId   fieldId   = smmSourceType::tableId2FieldId(sourceRefTableId);

        source = dictTable.makeRecord();
        select firstonly RecId from source where source.(fieldId) == sourceId;

        return source.RecId;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmLead</ConfigurationKey>
	<DeveloperDocumentation>@SalesAndMarketing:LeadEntityDevDoc</DeveloperDocumentation>
	<FormRef>smmLeadTable</FormRef>
	<Label>@SYS103010</Label>
	<Tags>Leads</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>smmLeadStaging</DataManagementStagingTable>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadId</Name>
			<DataField>LeadId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Comments</Name>
			<DataField>SourceDescription</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Memo</Name>
			<DataField>LeadDescription</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadResponsiblePersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_Owner</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadPartyNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PartyNumber</DataField>
			<DataSource>DirPartyTable_Party</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadPriorityCode</Name>
			<DataField>Priority</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadQualifyingProcessName</Name>
			<DataField>ProcessName</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadRatingId</Name>
			<DataField>Rating</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadClosingPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_ClosedBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadClosedDate</Name>
			<DataField>DateClose</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadOpeningPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_OpenedBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadOpenedDate</Name>
			<DataField>DateOpen</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadClosedOpportunityReasonCode</Name>
			<DataField>ReasonId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnitId</Name>
			<DataField>SalesUnitId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadStatus</Name>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Status</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Subject</Name>
			<DataField>Subject</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadTypeId</Name>
			<DataField>TypeId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceRefRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SourceRefRecId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceRefTableId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SourceRefTableId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeadSourceTypeId</Name>
			<DataField>SourceTypeId</DataField>
			<DataSource>smmLeadTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceActivityNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceActivityNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>smmActivityNumber</ExtendedDataType>
			<StringSize>50</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceCampaignId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceCampaignIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>smmCampaignId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceCustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceCustomerAccountNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceProspectId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceProspectIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>smmBusRelAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceVendorAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceVendorAccountNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>VendAccount</ExtendedDataType>
			<StringSize>20</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SourceWorkerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>sourceWorkerPersonnelNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>HcmPersonnelNumberId</ExtendedDataType>
			<StringSize>25</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>UserDefinedSourceId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>userDefinedSourceIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>smmSourceName</ExtendedDataType>
			<StringSize>60</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LeadId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>smmLeadTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>smmLeadTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_ClosedBy</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ClosedByWorker</Field>
								<JoinDataSource>smmLeadTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_OpenedBy</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OpenedByWorker</Field>
								<JoinDataSource>smmLeadTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_Owner</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OwnerWorker</Field>
								<JoinDataSource>smmLeadTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DirPartyTable_Party</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DirPartyTable</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>DirPartyTable_Party_DirOrganizationBase</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirOrganizationBase</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>DirPartyTable_Party_OMInternalOrganization</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>OMInternalOrganization</Table>
										<DataSources />
										<DerivedDataSources>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_Party_CompanyInfo</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>CompanyInfo</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_Party_OMOperatingUnit</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>OMOperatingUnit</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_Party_OMTeam</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>OMTeam</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
										</DerivedDataSources>
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>DirPartyTable_Party_DirOrganization</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>DirOrganization</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>DirPartyTable_Party_DirPerson</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirPerson</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Party</Field>
								<JoinDataSource>smmLeadTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>