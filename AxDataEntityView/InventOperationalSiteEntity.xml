<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventOperationalSiteEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventOperationalSiteEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(InventOperationalSiteEntity, InventSiteDefaultDimension),
                [
                    fieldNum(InventOperationalSiteEntity, DefaultFinancialDimensionValue)
                ]
            ]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventOperationalSiteEntity, InventSiteDefaultDimension):
                if (this.DefaultFinancialDimensionValue)
                {
                    this.defaultInventSiteDefaultDimension();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventSiteDefaultDimension</Name>
				<Source><![CDATA[
    private void defaultInventSiteDefaultDimension()
    {
        // Manually propagate FK to dimension value attribute set item.
        // This is required because the framework will not propagate the FK automatically
        // due to multiple child data sources.
        InventParameters inventParameters = InventParameters::find();
        DimensionAttribute dimensionAttribute = inventParameters.siteDimensionAttribute();

        if (dimensionAttribute.RecId != 0)
        {
            DimensionAttributeValueSetItem dimensionAttributeValueSetItem;
            DimensionAttributeValue dimensionAttributeValue;

            dimensionAttributeValue = DimensionAttributeValue::findByDimensionAttributeAndValue(
                dimensionAttribute, 
                this.DefaultFinancialDimensionValue,
                false,      // SelectForUpdate=false
                true);      // Create if it does not yet exist

            if (dimensionAttributeValue.RecId != 0)
            {
                // This value set does not exist, so it must be persisted
                DimensionAttributeValueSetStorage storage = new DimensionAttributeValueSetStorage();
                storage.addItem(dimensionAttributeValue);
                                                          
                this.InventSiteDefaultDimension = storage.save();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            // Ensure that if a dimension value was specified, the FK for it was defaulted:
            if (this.DefaultFinancialDimensionValue && !this.InventSiteDefaultDimension)
            {
                ret = checkFailed(strFmt("@SCM:InventSiteDimensionAttributeInvalid", this.DefaultFinancialDimensionValue));
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventOperationalSiteEntity, DimensionAttributeValueSetItem)
            && this.InventSiteDefaultDimension != 0)
        {
            DimensionAttributeValueSetItem dimensionAttributeValueSetItem;
            select firstonly1 * from dimensionAttributeValueSetItem
                where dimensionAttributeValueSetItem.DimensionAttributeValueSet == this.InventSiteDefaultDimension
                && dimensionAttributeValueSetItem.DisplayValue == this.DefaultFinancialDimensionValue;

            ret = dimensionAttributeValueSetItem;
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            this.changeDataSourceSaveOperation(_dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeDataSourceSaveOperation</Name>
				<Source><![CDATA[
    private void changeDataSourceSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventOperationalSiteEntity, InventOperationalSitePostalAddressEntity):
                this.changeOperationalSitePostalAddressSaveOperation(_dataSourceCtx);
                break;

            case dataEntityDataSourceStr(InventOperationalSiteEntity, FiscalEstablishmentInventSite):
                this.changeFiscalEstablishmentInventSiteSaveOperation(_dataSourceCtx);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.forceDataSourceSaveOperation(_dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventOperationalSiteEntity, ReqSitePolicy) && isConfigurationkeyEnabled(configurationKeyNum(Req)))
        {
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.forceDataSourceSaveOperation(_dataSourceCtx);

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>forceDataSourceSaveOperation</Name>
				<Source><![CDATA[
    private void forceDataSourceSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // The framework might change the datasource operation to None for the address, although it has been explicitly set to Insert or Update.
        // Logic is implemented to force the operation to be changed, if necessary
        if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::None &&
            _dataSourceCtx.name() == dataEntityDataSourceStr(InventOperationalSiteEntity, InventOperationalSitePostalAddressEntity))
        {
            this.changeOperationalSitePostalAddressSaveOperation(_dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeOperationalSitePostalAddressSaveOperation</Name>
				<Source><![CDATA[
    private void changeOperationalSitePostalAddressSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.changeOptionalDataSourceSaveOperation(_dataSourceCtx, this.IsPrimaryAddressAssigned, this.orig().IsPrimaryAddressAssigned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeFiscalEstablishmentInventSiteSaveOperation</Name>
				<Source><![CDATA[
    private void changeFiscalEstablishmentInventSiteSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.changeOptionalDataSourceSaveOperation(_dataSourceCtx, this.FiscalEstablishmentId!= '', this.orig().FiscalEstablishmentId != '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeOptionalDataSourceSaveOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the save operation of the datasources depending on the provided current and original values.
    /// </summary>
    /// <param name = "_dataSourceCtx">
    /// A DataSourceContext
    /// </param>
    /// <param name = "_currentHasValue">
    /// A Boolean value that indicates whether the current datasource must be saved.
    /// </param>
    /// <param name = "_originalHasValue">
    /// A Boolean value that indicates whether the current datasource was originally saved.
    /// </param>
    private void changeOptionalDataSourceSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx, boolean _currentHasValue, boolean _originalHasValue)
    {
        if (_currentHasValue)
        {
            if (_originalHasValue)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            }
            else
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
            }
        }
        else
        {
            if (_originalHasValue)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
            }
            else
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrimaryAddressAssignedDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the string defining how to compute the IsPrimaryAddressAssigned computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsPrimaryAddressAssigned field.
    /// </returns>
    static private str isPrimaryAddressAssignedDefinition()
    {
        return InventOperationalSiteEntity::recIdIsNullBooleanTransformationDefinition(dataEntityDataSourceStr(InventOperationalSiteEntity, InventOperationalSitePostalAddressEntity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>recIdIsNullBooleanTransformationDefinition</Name>
				<Source><![CDATA[
    static private str recIdIsNullBooleanTransformationDefinition(DataSourceName _dataSourceName)
    {
        TableName   entityName = tableStr(InventOperationalSiteEntity);

        return SysComputedColumn::if(
                    SysComputedColumn::isNullExpression(
                        SysComputedColumn::comparisonField(entityName, _dataSourceName, fieldStr(Common, RecId))),
                            SysComputedColumn::returnLiteral(NoYes::No),
                            SysComputedColumn::returnLiteral(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityDataSourceToFieldMapping</Name>
				<Source><![CDATA[
    public static container getEntityDataSourceToFieldMapping(container mapping)
    {
        mapping += [[tablestr(InventOperationalSiteEntity), tablenum(InventSiteLogisticsLocation), fieldstr(InventOperationalSiteEntity, InventSiteRecId)],
            [identifierstr(InventOperationalSiteEntity1), tablenum(LogisticsPostalAddress), fieldstr(InventOperationalSiteEntity, AddressRecordId)]];
        return mapping;
 
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:InventOperationalSiteEntityDevDoc</DeveloperDocumentation>
	<FormRef>InventSite</FormRef>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SYS103214</Label>
	<Tags>Site setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventOperationalSiteStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>OperationalSites</PublicCollectionName>
	<PublicEntityName>OperationalSite</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxBranchCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishmentId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SiteName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SiteId</Name>
			<DataField>SiteId</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SiteName</Name>
			<DataField>Name</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SiteTimezone</Name>
			<DataField>Timezone</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderEntryDeadlineGroupId</Name>
			<DataField>OrderEntryDeadlineGroupId</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillMasterPlannedIntraSiteMovementsUseTransferJournals</Name>
			<DataField>UseTransferJournals</DataField>
			<DataSource>ReqSitePolicy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultInventoryStatusId</Name>
			<DataField>DefaultInventStatusId</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsReceivingWarehouseOverrideAllowed</Name>
			<DataField>IsReceivingWarehouseOverrideAllowed</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventSiteDefaultDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>InventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultFinancialDimensionValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionAttributeValueSetItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishmentId</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Mandatory>No</Mandatory>
			<DataField>FiscalEstablishmentId</DataField>
			<DataSource>FiscalEstablishment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishment</Name>
			<AccessModifier>Private</AccessModifier>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<DataField>FiscalEstablishment_BR</DataField>
			<DataSource>FiscalEstablishmentInventSite</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressDescription</Name>
			<Label>@SCM:InventSiteOperationalEntityPrimaryAddressName</Label>
			<Mandatory>No</Mandatory>
			<DataField>AddressDescription</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCity</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressCity</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCityInKana</Name>
			<DataField>AddressCityInKana</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountryRegionId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressCountryRegionId</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountyId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressCountyId</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressDistrictName</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressDistrictName</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLatitude</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressLatitude</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocationRoles</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressLocationRoles</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocationSalesTaxGroupCode</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressLocationSalesTaxGroupCode</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLongitude</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressLongitude</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStateId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressStateId</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreet</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressStreet</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreetInKana</Name>
			<DataField>AddressStreetInKana</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreetNumber</Name>
			<DataField>AddressStreetNumber</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressTimeZone</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:InventSiteOperationalEntityPrimaryAddressTimezone</Label>
			<Mandatory>No</Mandatory>
			<DataField>AddressTimeZone</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressZipCode</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressZipCode</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressPostBox</Name>
			<DataField>AddressPostBox</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressBuildingCompliment</Name>
			<DataField>AddressBuildingCompliment</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedPrimaryAddress</Name>
			<Mandatory>No</Mandatory>
			<DataField>FormattedAddress</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsPrimaryAddressAssigned</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isPrimaryAddressAssignedDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventAddressAssigned</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxBranchCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>Code</DataField>
			<DataSource>TaxBranch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventSiteRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>InventSiteRecId</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AddressRecordId</DataField>
			<DataSource>InventOperationalSitePostalAddressEntity</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>SiteId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>FiscalEstablishment</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>FiscalEstablishmentEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>FiscalEstablishmentId</Field>
					<RelatedField>FiscalEstablishmentId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DefaultDimension</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OperationalSites</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DimensionSetEntity_RecordId</Name>
					<Field>InventSiteDefaultDimension</Field>
					<RelatedField>RecordId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>DimensionSetKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultInventoryStatus</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSInventoryStatusEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DefaultInventoryStatus</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OperationalSites</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSInventoryStatusEntity_StatusId</Name>
					<Field>DefaultInventoryStatusId</Field>
					<RelatedField>StatusId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>TaxBranch</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>TaxBranchEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>TaxBranch</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OperationalSites</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>TaxBranchEntity_Code</Name>
					<Field>TaxBranchCode</Field>
					<RelatedField>Code</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>OrderEntryDeadlineGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOrderEntryDeadlineGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>OrderEntryDeadlineGroup</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>OperationalSites</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventOrderEntryDeadlineGroupEntity_GroupId</Name>
					<Field>OrderEntryDeadlineGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventSite</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventSite</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReqSitePolicy</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ReqSitePolicy</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Site</Name>
								<JoinRelationName>Site</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionAttributeValueSetItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionAttributeValueSetItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>InventSite</JoinDataSource>
								<RelatedField>DimensionAttributeValueSet</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FiscalEstablishmentInventSite</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>FiscalEstablishmentInventSite_BR</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FiscalEstablishment</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>FiscalEstablishment_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>FiscalEstablishment_BR</Field>
										<JoinDataSource>FiscalEstablishmentInventSite</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SiteId</Field>
								<JoinDataSource>InventSite</JoinDataSource>
								<RelatedField>InventSite</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventOperationalSitePostalAddressEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventOperationalSitePostalAddressEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPrimaryAddress</Name>
								<Field>IsPrimaryAddress</Field>
								<Status>Locked</Status>
								<Value>1</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SiteId</Field>
								<JoinDataSource>InventSite</JoinDataSource>
								<RelatedField>OperationalSiteId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>InventSite</JoinDataSource>
								<RelatedField>OperationalSiteLegalEntityId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxBranch</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>TaxBranch</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>TaxBranch</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>