<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LogisticsAddressEnterpriseZipCodeJapanEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LogisticsAddressEnterpriseZipCodeJapanEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        RecId                   stateRecId;
        RecId                   cityRecId;
        LogisticsAddressZipCode logisticsAddressZipCodeDB;
        LogisticsAddressZipCode logisticsAddressZipCodeCopy;
        container               streetbuilding;

        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(LogisticsAddressEnterpriseZipCodeJapanEntity, LogisticsAddressZipCode):
                _dataSourceCtx.skipDataMethods(false);

                this.CountryRegionId = LogisticsAddressZipcodeEntityHelper_JP::findJapanLogisticsAddressCountryRegionId();

                [stateRecId, cityRecId] = LogisticsAddressZipcodeEntityHelper_JP::findOrCreateLogisticsAddressStateAndCity(this.KanjiCity, this.KanjiPrefecture, this.CountryRegionId, '');

                this.CityRecId = cityRecId;

                if (this.KanjiStreet && this.KanjiEnterpriseName)
                {
                    this.StreetName = this.KanjiStreet +', '+ this.KanjiEnterpriseName;
                }
                else
                {
                    this.StreetName = this.KanjiStreet + this.KanjiEnterpriseName;
                }

                while select logisticsAddressZipCodeDB
                    where logisticsAddressZipCodeDB.ZipCode == this.IndividualEnterpriseBuildingNumber
                {
                    streetbuilding = list2Con(strSplit(logisticsAddressZipCodeDB.StreetName, ', '));

                    if (conFind(streetbuilding, this.KanjiEnterpriseName))
                    {
                        logisticsAddressZipCodeCopy = logisticsAddressZipCodeDB;
                        break;
                    }
                }

                if (logisticsAddressZipCodeCopy.RecId != 0)
                {
                    logisticsAddressZipCodeCopy.selectforupdate(true);
                    this.skipDataSourceValidateField(fieldnum(LogisticsAddressEnterpriseZipCodeJapanEntity, IndividualEnterpriseBuildingNumber), true);

                    _dataSourceCtx.setBuffer(logisticsAddressZipCodeCopy);
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::update);
                }
                else
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
                }
                break;
            default:
                break;
        }
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>JP</CountryRegionCodes>
	<FormRef>LogisticsAddressZipCodes</FormRef>
	<Label>@JapanEnterPrisePostalCodeImport:ZIP_Postal_Code_Japan_Enterprise</Label>
	<Tags>GAB</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>LogisticsAddressEnterpriseZipCodeJapanStaging</DataManagementStagingTable>
	<Modules>GAB</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KanjiCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CityRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CityRecId</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CountryRegionId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KanjiDistrict</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KanjiPrefecture</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StreetName</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>StreetName</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IndividualEnterpriseBuildingNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>KanjiEnterpriseName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<IsComputedField>No</IsComputedField>
			<StringSize>160</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>KanjiStreet</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
			<StringSize>124</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>IndividualEnterpriseBuildingNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>KanjiEnterpriseName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LogisticsAddressZipCode</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LogisticsAddressZipCode</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>