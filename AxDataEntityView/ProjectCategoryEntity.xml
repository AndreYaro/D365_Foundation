<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectCategoryEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjectCategoryEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        if (!this.TransactionType)
        {
            this.TransactionType = ProjCategoryGroup::find(this.CategoryGroup).CategoryType;
        }
        this.skipDataSourceValidateField(fieldNum(ProjectCategoryEntity, TransactionType), true);

        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the entity to the backing datasources.
    /// </summary>
    /// <param name = "entityCtx">The context of the entity.</param>
    /// <param name = "dataSourceCtx">The context of the datasource being mapped.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
           if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjectCategoryEntity, CategoryEntity))
            {
                // Find shared category entity if it already exists
                SharedCategoryEntity sharedCategoryEntity;
                select firstOnly RecId from sharedCategoryEntity
                    where sharedCategoryEntity.CategoryId == this.Category
                    && sharedCategoryEntity.UseInProject == NoYes::Yes;

                // Throw error if shared category entity does not exist or if the UseInProject value is false
                if (!sharedCategoryEntity)
                {
                    throw Error("@Proj:SharedCategoryNotFound");
                }

                CategoryEntity categoryEntity;

                // Ensuring only fields in the selection list should be accessed for read-only data source.
                categoryEntity.checkInvalidFieldAccess(true);
        
                // Find the category entity if it already exists
                select firstOnly forUpdate categoryEntity
                    where categoryEntity.CategoryId == this.Category;

                if (!categoryEntity)
                {
                    ttsbegin;
                    // Create category entity if it does not exist
                    categoryEntity.CategoryId = this.Category;
                    categoryEntity.CategoryName = this.CategoryName;
                    categoryEntity.UseInProject = NoYes::Yes;
                    categoryEntity.UseInProduction = sharedCategoryEntity.UseInProduction;
                    categoryEntity.UseInExpense = sharedCategoryEntity.UseInExpense;
                    categoryEntity.insert();
                    ttscommit;
                }
                else if (categoryEntity.UseInProject == NoYes::No)
                {
                    ttsbegin;
                    // Update category entity if it exists and UseInProject value is false
                    categoryEntity.UseInProject = NoYes::Yes;
                    categoryEntity.update();
                    ttscommit;
                }

                _dataSourceCtx.setBuffer(categoryEntity);
            }
        }
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ProjCategory</FormRef>
	<Label>@SYS6114</Label>
	<Tags>Required setup; Categories</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjectCategoryStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectCategoryEntities</PublicCollectionName>
	<PublicEntityName>ProjectCategoryEntity</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Category</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemSalesTaxGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Worker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Estimate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Subscription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IndirectCostComponent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerPaymentRetention</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActiveInJournals</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemWithholdingTaxGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalInformationServiceCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActiveInJournals</Name>
			<DataField>Active</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryGroup</Name>
			<DataField>CategoryGroupId</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Category</Name>
			<DataField>CategoryId</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>CategoryType</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryName</Name>
			<DataField>Name</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Worker</Name>
			<Label>@Proj:CategoryWorkerOption</Label>
			<DataField>ProjCategoryEmplOption</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerPaymentRetention</Name>
			<DataField>PSACustPaymentRetention</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IndirectCostComponent</Name>
			<Label>@Proj:CategoryIndirectCost</Label>
			<DataField>PSAIndirectComponent</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Estimate</Name>
			<Label>@Proj:CategoryEstimates</Label>
			<DataField>SetupEstimate</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Subscription</Name>
			<Label>@Proj:CategorySubscription</Label>
			<DataField>SetupSubscription</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemSalesTaxGroup</Name>
			<DataField>TaxItemGroupId</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Absence</Name>
			<Label>@Proj:CategoryAbsence</Label>
			<DataField>TsAbsence</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalInformationServiceCode</Name>
			<DataField>TaxServiceCodeId_BR</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemWithholdingTaxGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxWithholdItemGroupHeading_TH</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemWithholdingTaxGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>TaxWithholdItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxRateTypeName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@TaxInfoManagement:TaxRateType</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>TaxRateType</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>Category</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjCategory</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjCategory</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CategoryEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CategoryEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CategoryId</Field>
								<JoinDataSource>ProjCategory</JoinDataSource>
								<RelatedField>CategoryId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdItemGroupHeading</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>TaxWithholdItemGroupHeading_TH</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TaxWithholdItemGroupHeading_TH</Field>
								<JoinDataSource>ProjCategory</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxRateType</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>TaxRateType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TaxRateType</Field>
								<JoinDataSource>ProjCategory</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>