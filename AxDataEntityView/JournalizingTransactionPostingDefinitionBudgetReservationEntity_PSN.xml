<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN extends common
{   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>assignBudgetReservationTypeFromTypeCodeTableAll</Name>
				<Source><![CDATA[
    /// <summary>
    /// Assigns a value to <c>BudgetReservationType</c> field of the entity, based on the budget reservation type code value.
    /// </summary>
    private void assignBudgetReservationTypeFromTypeCodeTableAll()
    {
        switch (this.BudgetReservationTypeCode)
        {
            case TableAll::All:
                this.BudgetReservationType = 0;
                break;

            case TableAll::Table:
                this.BudgetReservationType = BudgetReservationType_PSN::findByName(this.BudgetReservationTypeName).RecId;
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>computeBudgetReservationTypeName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Evaluates the value to be assigned to the syscomputational column budget reservation type name.
    /// </summary>
    /// <returns>
    /// The <c>Name</c> field from <c>BudgetReservationType_PSN</c> table if record is present, otherwise empty string.
    /// </returns>
    private static str computeBudgetReservationTypeName()
    {
        return SysComputedColumn::if
            (
                SysComputedColumn::isNullExpression // if is Null
                (
                    SysComputedColumn::comparisonField
                    (
                        tableStr(JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN),
                        dataEntityDataSourceStr(JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN, BudgetReservationType),
                        fieldStr(BudgetReservationType_PSN, Name)
                    )
                ),
                SysComputedColumn::returnLiteral(''), // then return literal blank
                SysComputedColumn::returnField // else return field value
                (
                    tableStr(JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN),
                    dataEntityDataSourceStr(JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN, BudgetReservationType),
                    fieldStr(BudgetReservationType_PSN, Name)
                )
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates whether the posting definition is associated to budget reservation module.
    /// </summary>
    /// <returns>
    /// true if the validation passes, otherwise false.
    /// </returns>
    public boolean validateWrite()
    {
        return super() && JournalizingDefinition::checkExistJournalizingDefinitionByModule(this.PostingDefinition, JournalizingDefinitionModuleId::BudgetReservation_PSN);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            this.assignBudgetReservationTypeFromTypeCodeTableAll();
            
            if (!(_dataSourceCtx.name() == dataentitydatasourcestr(JournalizingTransactionPostingDefinitionBudgetReservationEntity_PSN, BudgetReservationType)
                && this.BudgetReservationTypeName == ''))
            {
                super(_entityCtx, _dataSourceCtx);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
	<FormRef>JournalizingDefinitionTrans</FormRef>
	<Label>@Budgeting_BudgetReservationPS:JournalizingDefinitionBudgetReservation</Label>
	<Tags>Posting setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>JournalizingTransactionPostingDefinitionBudgetReservationStaging_PSN</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>GeneralLedger</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>TransactionPostingDefinitionBudgetReservations</PublicCollectionName>
	<PublicEntityName>TransactionPostingDefinitionBudgetReservation</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationJournalizingType</Name>
			<DataField>BudgetReservationJournalizingType</DataField>
			<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationTypeCode</Name>
			<DataField>BudgetReservationTypeCode</DataField>
			<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetReservationType</DataField>
			<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingDefinitionRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>JournalizingDefinition</DataField>
			<DataSource>JournalizingDefinitionBudgetReservation_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingDefinition</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>JournalizingDefinitionCode</DataField>
			<DataSource>JournalizingDefinition</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>BudgetReservationTypeName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>computeBudgetReservationTypeName</ComputedFieldMethod>
			<StringSize>60</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>BudgetReservationTypeName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetReservationJournalizingType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetReservationTypeCode</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>JournalizingDefinitionBudgetReservation_PSN</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>JournalizingDefinitionBudgetReservation_PSN</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetReservationType</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetReservationType_PSN</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BudgetReservationType</Name>
								<JoinRelationName>BudgetReservationType_PSN</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>JournalizingDefinition</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>JournalizingDefinition</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>JournalizingDefinition</Name>
								<JoinRelationName>JournalizingDefinition</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>