<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceHeaderEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendorInvoiceHeaderEntity extends common
{
    #ISOCountryRegionCodes

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method checks if there is an existing <c>VendInvoiceInfoSubTable</c> record, if not we create one
    /// and initialize the DocumentOrigin field of the <c>VendInvoiceInfoTable</c> record.
    /// </summary>
    /// <param name = "_entityCtx"></param>
    /// <param name = "_dataSourceCtx"></param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            switch (_dataSourceCtx.name())
            {
                case dataentitydatasourcestr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                    VendInvoiceInfoTable vendInvoiceInfoTable = _dataSourceCtx.getBuffer();
                    vendInvoiceInfoTable.DocumentOrigin = DocumentOrigin::Service;
					this.VendorInvoiceReviewStatus = VendInvoiceRequestStatus::Draft;
                    break;
            }        
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;

        //Specify the origin of this Invoice
        vendInvoiceInfoTable.DocumentOrigin = DocumentOrigin::Service;

        if (!VendInvoiceImportWithPONumberFlight::instance().isEnabled())
        {
            this.PurchaseOrderNumber = '';
            vendInvoiceInfoTable.PurchId = '';
        }
		
        //Set the currency if it's not set by the user
        if (!this.Currency)
        {
            //Set needed fields to allow currency defaulting to work properly
            vendInvoiceInfoTable.InvoiceAccount = this.InvoiceAccount;
            vendInvoiceInfoTable.PurchId = this.PurchaseOrderNumber;

            vendInvoiceInfoTable.defaultField(fieldnum(VendInvoiceInfoTable, CurrencyCode));
            this.Currency = vendInvoiceInfoTable.CurrencyCode;
        }

        //Set the TableRefid on the Invoice
        if (!this.HeaderReference)
        {
            vendInvoiceInfoTable.defaultField(fieldnum(VendInvoiceInfoTable, TableRefId));
            this.HeaderReference = vendInvoiceInfoTable.TableRefId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                _dataSourceCtx.skipDefaultRow(true);
                this.resolveFinTags(_entityCtx, _dataSourceCtx);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        this.createInvoiceLines(_dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logDocumentHistory</Name>
				<Source><![CDATA[
    private static void logDocumentHistory(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        DocumentEventRequestDocumentsTmp documentEventRequestTmp;
        VendInvoiceInfoTable existingVendInvoiceInfoTable;
        VendorInvoiceHeaderStaging vendorInvoiceHeaderStaging;

        insert_recordset documentEventRequestTmp (SourceRecId)
            select RecId from vendorInvoiceHeaderStaging
                where vendorInvoiceHeaderStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && vendorInvoiceHeaderStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                    && vendorInvoiceHeaderStaging.TransferStatus == DMFTransferStatus::NotStarted
                notexists join existingVendInvoiceInfoTable
                where vendorInvoiceHeaderStaging.HeaderReference == existingVendInvoiceInfoTable.TableRefId;

        select firstonly RecId from documentEventRequestTmp;

        if (documentEventRequestTmp.RecId != 0)
        {
            //log all headers of the current imported data management framework execution Id to staging table as Failed
            DocumentEventLogRequest logRequest = new DocumentEventLogRequest();
            logRequest.eventEnumId = enumNum(VendInvoiceImportEvent);
            logRequest.eventEnumValue = VendInvoiceImportEvent::Failed;
            logRequest.sourceTableId = tableNum(VendorInvoiceHeaderStaging);
            logRequest.sourceRecId = 0;
            logRequest.requestDocumentsTmp = documentEventRequestTmp;

            DocumentEventLog::logDocumentEvent(logRequest);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>VendorInvoiceHeaderStaging</c> table after population.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    /// <remarks>This method is called automatically by the data management framework.</remarks>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        if (VendAutomateVendorInvoicesFeature::isEnabled())
        {
            VendorInvoiceHeaderEntity::logDocumentHistory(_dmfDefinitionGroupExecution);
        }

        VendorInvoiceHeaderStaging headerStaging;
        VendInvoiceInfoTable existingVendInvoiceInfoTable;
        TradeLineRefId newHeaderReferenceFromMap;
        Map headerReferenceMap = new Map(Types::String, Types::String);

        while select HeaderReference from headerStaging
            group by HeaderReference
            where headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                && headerStaging.TransferStatus == DMFTransferStatus::NotStarted
            notexists join existingVendInvoiceInfoTable
                where headerStaging.HeaderReference == existingVendInvoiceInfoTable.TableRefId
        {
            headerReferenceMap.insert(headerStaging.HeaderReference, formletterParmData::getNewTableRefId());
        }

        ttsbegin;

        while select forupdate headerStaging
            where headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                && headerStaging.TransferStatus == DMFTransferStatus::NotStarted
        {
            if (headerReferenceMap.exists(headerStaging.HeaderReference))
            {
                newHeaderReferenceFromMap = headerReferenceMap.lookup(headerStaging.HeaderReference);

                headerStaging.HeaderReferenceOld = headerStaging.HeaderReference;
                headerStaging.HeaderReference = newHeaderReferenceFromMap;
                headerStaging.update();
            }
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.setReportingCurrencyFixedExchangeRate();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.setReportingCurrencyFixedExchangeRate();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    private void setReportingCurrencyFixedExchangeRate()
    {
        this.CustVendReportingCurrencyFixedExchangeRate::setReportingCurrencyFixedExchangeRate(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes additional data processing after import to target finished.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    /// <remarks>This method is called automatically by the data management framework.</remarks>
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        //Data management framework will only call this method if there were records that were successfully transferred to Target.
        if (VendAutomateVendorInvoicesFeature::isEnabled())
        {
            const int MaxRetryAttempts = 5;
            int backOffWait = RandomGenerate::construct().randomInt(50, 1000);

            VendInvoiceInfoTable vendInvoiceInfoTable;
            VendorInvoiceHeaderStaging headerStaging;
            DocumentEventLog documentEventLog;

            try
            {
                ttsbegin;

                update_recordset documentEventLog
                    setting SourceTableId = tableNum(VendInvoiceInfoTable),
                            SourceRecId = vendInvoiceInfoTable.RecId,
                            EventEnumValue = VendInvoiceImportEvent::Succeeded
                    join headerStaging
                    where headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                        && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                        && headerStaging.TransferStatus == DMFTransferStatus::Completed
                        && documentEventLog.SourceRecId == headerStaging.RecId
                        && documentEventLog.SourceTableId == tableNum(VendorInvoiceHeaderStaging)
                    join vendInvoiceInfoTable
                    where vendInvoiceInfoTable.TableRefId == headerStaging.HeaderReference;

                ttscommit;
            }
            catch (Exception::Deadlock)
            {
                var currentRetryCount = xSession::currentRetryCount();

                if (currentRetryCount >= MaxRetryAttempts)
                {
                    throw Exception::Deadlock;
                }
                else
                {
                    sleep(currentRetryCount * backOffWait);
                    retry;
                }
            }
            catch (Exception::UpdateConflict)
            {
                var currentRetryCount = xSession::currentRetryCount();

                if (appl.ttsLevel() == 0)
                {
                    if (currentRetryCount >= MaxRetryAttempts)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        sleep(currentRetryCount * backOffWait);
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
                        
        ret = ret && this.validateHeaderReference();

        if (ret && InvoiceImportAutomationCreateInvoiceLinesSetupFlight::instance().isEnabled())
        {
            ret = this.validateAutomationCreateInvoiceLinesSetup();
        }

        if (ret && this.VendorInvoiceType == PurchInvoiceType::VendorAdvance && this.HeaderOnlyImport == NoYes::Yes)
        {
            ret = this.validateCreatePrepaymentInvoice();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCreatePrepaymentInvoice</Name>
				<Source><![CDATA[
    private boolean validateCreatePrepaymentInvoice()
    {
        boolean ret = true;

        if (!this.RecId)
        {
            if (SysCountryRegionCode::isLegalEntityInCountryRegion([#isoIN]))
            {
                throw error("@AccountsPayable:VendAdvaceInvoiceNotSupportIndia");
            }

            if (LedgerParameters::find().JournalizingDefinitionEnableValue)
            {
                ret = checkFailed("@AccountsPayable:VendInvoiceValidationPostingDefinitionEnabled");
            }

            if (VendAdvanceInvoice::isDeactivated())
            {
                ret = checkFailed("@AccountsPayable:VendInvoiceValidationPrepaymentDectivated");
            }

            if (!this.PurchIdRange)
            {
                ret = checkFailed(strFmt("@SYS110217", "@AccountsPayable:PurchIdRange"));
            }
            else
            {
                PurchTable purchTable= purchTable::find(this.PurchIdRange);
                if (!purchTable)
                {
                    ret = checkFailed(strFmt("@SYS15741", this.PurchIdRange));
                }
                else
                {
                    if (purchTable.ProjId)
                    {
                        ret = checkFailed(strFmt("@AccountsPayable:VendAdvaceInvoiceNotSupportProject", purchTable.PurchId));
                    }
                    if (ret && purchTable.PurchaseType != PurchaseType::Purch)
                    {
                        ret = checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationInvalidPurchaseOrderType", purchTable.PurchId));
                    }

                    if (ret && VendInvoiceTrans::existForPurchId(purchTable.PurchId))
                    {
                        ret = checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationPostedStandardInvoice", purchTable.PurchId));
                    }

                    if (ret && VendInvoiceInfoLine::existPendingPrepayInvoice(purchTable.PurchId))
                    {
                        ret = checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationExistingPrepaymentInvoice", purchTable.PurchId));
                    }

                    if (ret)
                    {
                        PurchPrepayTable purchPrepayTable = PurchPrepayTable::findPurchId(purchTable.PurchId);
                        if (purchPrepayTable)
                        {
                            AmountCur prepayInvoiceAmount = purchPrepayTable.PrepayAvailable - purchPrepayTable.amountPrepayPending();
                            if (purchPrepayTable.PrepayAvailable < 0.01 || prepayInvoiceAmount < 0.0)
                            {
                                ret = checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationRemainAmountLessThanZero", purchTable.PurchId));
                            }
                        }
                        else
                        {
                            ret = checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationNoPrepayment", purchTable.PurchId));
                        }
                    }
                }

            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateHeaderReference</Name>
				<Source><![CDATA[
    private boolean validateHeaderReference()
    {
        VendInvoiceInfoTable vendInvoiceInfoTable;

        select RecId from vendInvoiceInfoTable
            where vendInvoiceInfoTable.ParmJobStatus == ParmJobStatus::Executed
                && vendInvoiceInfoTable.TableRefId == this.HeaderReference;

        if (vendInvoiceInfoTable.RecId)
        {
            checkFailed(strFmt("@AccountsPayable:VendInvoiceValidationHeaderReferenceInUse", this.HeaderReference));
            return false;
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAutomationCreateInvoiceLinesSetup</Name>
				<Source><![CDATA[
    private boolean validateAutomationCreateInvoiceLinesSetup()
    {
        if (this.HeaderOnlyImport == NoYes::Yes && VendParameters::find().AutomationCreateInvoiceLines != NoYes::Yes)
        {
            checkFailed("@AccountsPayable:VendInvoiceValidationAutomaticallyCreateInvoiceLinesCheck");
            return false;
        }
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createInvoiceLines</Name>
				<Source><![CDATA[
    private void createInvoiceLines(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                if (this.HeaderOnlyImport == NoYes::Yes
                    && VendParameters::find().AutomationCreateInvoiceLines == NoYes::Yes)
                {
                    if (this.VendorInvoiceType == PurchInvoiceType::VendorAdvance && this.PurchIdRange)
                    {
                        ttsbegin;
                        VendInvoiceAutomationCreateLines::createAdvance(this.HeaderReference, this.PurchIdRange, this.ImportedAmount);
                        ttscommit;
                    }
                    else if (this.PurchIdRange || this.PackingslipRange)
                    {
                        ttsbegin;
                        VendInvoiceAutomationCreateLines::create(this.HeaderReference, this.PurchIdRange, this.PackingslipRange);
                        ttscommit;
                    }
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                this.resolveFinTags(_entityCtx, _dataSourceCtx);
                break;
        }
    
		if (VendInvoiceAutomationCreateAndPostInvoiceRegisterFeature::isEnabled())
        {
            this.createAndPostInvoiceRegister(_dataSourceCtx);
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        this.createInvoiceLines(_dataSourceCtx);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInvoiceForInvoiceRegister</Name>
				<Source><![CDATA[
    private container validateInvoiceForInvoiceRegister()
    {
        if (this.ImportedAmount == 0 || this.ImportedSalesTax == 0)
        {
            return [false, checkFailed("@AccountsPayable:ImportedAmountAndSalesTaxValidation")];
        }
        TaxGroupJournal taxGroup = vendTable::find(this.InvoiceAccount).TaxGroup;
        
        if (this.SalesTaxGroup && this.SalesTaxGroup != taxGroup)
        {
            return [false, checkFailed("@AccountsPayable:TaxGroupAndVendorTaxGroupValidation")];
        }
        if (!this.ApprovedBy && !HcmWorker::userId2Worker(curUserId()))
        {
            return [false, checkFailed(strFmt("@AccountsPayable:CurrentUserWorkerValidation", curUserId()))];
        }
        LedgerJournalName ledgerJournalName = VendinvoiceCreateAndPostInvoiceRegister::getFirstJournalNameForType(LedgerJournalType::PurchaseLedger);
        if (!ledgerJournalName)
        {
            return [false, checkFailed(strFmt("@AccountsPayable:JournalNameShouldExistsValidation", LedgerJournalType::PurchaseLedger))];
        }
        else if (ledgerJournalName.ApproveActive || ledgerJournalName.WorkflowApproval)
        {
            return [false, checkFailed("@AccountsPayable:ApprovalProcessActiveValidation")];
        }
        return [true];
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAndPostInvoiceRegister</Name>
				<Source><![CDATA[
    private void createAndPostInvoiceRegister(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        LedgerJournalTransRefRecId invoicePoolRecId;
        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                if (this.VendorInvoiceType == PurchInvoiceType::InvoicePool)
                {
                    VendInvoiceInfoTable buffer = _dataSourceCtx.getBuffer();
                    if (buffer.InvoiceType == PurchInvoiceType::InvoicePool)
                    {
                        container retContainer = this.validateInvoiceForInvoiceRegister();
                        if (conLen(retContainer) == 2)
                        {
                            throw Error(conPeek(retContainer, 1));
                        }
                    }
                    LedgerJournalTable ledgerJournalTable = VendinvoiceCreateAndPostInvoiceRegister::createAndPostInvoiceRegister(buffer);

                    invoicePoolRecId = VendinvoiceCreateAndPostInvoiceRegister::getInvoicePoolRecId(ledgerJournalTable);
                    buffer.PoolRecId = invoicePoolRecId;
                    buffer.Ordering = DocumentStatus::ApproveJournal;
                    buffer.VendInvoiceSaveStatus = VendInvoiceSaveStatus::Pending;
                    buffer.InvoiceType = PurchInvoiceType::Standard;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveFinTags</Name>
				<Source><![CDATA[
    private void resolveFinTags(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        VendInvoiceInfoTable vendInvoiceInfoTable = _dataSourceCtx.getBuffer();
        if (FinTagConfiguration::isFinTagConfigurationSet(vendInvoiceInfoTable.DataAreaId) && PurchaseOrderFinTagFeature::isEnabled())
        {
            VendorInvoiceHeaderEntity entity = _entityCtx.getEntityRecord();
            vendInvoiceInfoTable.FinTag = FinTagResolver::resolve(entity.FinTagDisplayValue, vendInvoiceInfoTable.DataAreaId);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:VendInvoiceHeaderEntityDeveloperDocumentation</DeveloperDocumentation>
	<Label>@AccountsPayable:VendorInvoiceHeaderEntity</Label>
	<Tags>Invoice</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>VendorInvoiceHeaderStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsPayable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>VendorInvoiceHeaders</PublicCollectionName>
	<PublicEntityName>VendorInvoiceHeader</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GSTImportDeclarationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceSeries</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UUID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAccount</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingProfile</Name>
			<DataField>PostingProfile</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorAccount</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>OrderAccount</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TemplateId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountingDistributionTemplate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsApproved</Name>
			<DataField>Approved</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovedBy</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Approver</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipmentNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BankLCImportLine</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsBatch</Name>
			<DataField>BatchAdministration</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscount</Name>
			<DataField>CashDisc</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscountCode</Name>
			<DataField>CashDiscCode</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscountDate</Name>
			<DataField>CashDiscDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DiscountPercentage</Name>
			<DataField>CashDiscPercent</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CountyOrigDest</Name>
			<DataField>CountyOrigDest</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Currency</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Dimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryName</Name>
			<DataField>DeliveryName</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceDescription</Name>
			<DataField>Description</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceDate</Name>
			<DataField>DocumentDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentNumber</Name>
			<DataField>DocumentNum</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDateTime</Name>
			<DataField>EndDateTime</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscount</Name>
			<DataField>EndDisc</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnterpriseNumber</Name>
			<DataField>EnterpriseNumber</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ErrorInvalidDistribution</Name>
			<DataField>ErrorInvalidDistribution</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Triangulation</Name>
			<DataField>EUROTriangulation</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExchangeRate</Name>
			<DataField>ExchRate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SecondaryExchangeRate</Name>
			<DataField>ExchRateSecondary</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DueDate</Name>
			<DataField>FixedDueDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedRate</Name>
			<DataField>FixedExchRate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsOnHold</Name>
			<DataField>Hold</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IgnoreCalculatedSalesTax</Name>
			<DataField>IgnoreCalculatedSalesTax</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPricesIncludeSalesTax</Name>
			<DataField>InclTax</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Warehouse</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Site</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAccount</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>InvoiceAccount</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoicePaymentReleaseDate</Name>
			<DataField>InvoiceReleaseDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceRoundOff</Name>
			<DataField>InvoiceRoundOff</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorInvoiceType</Name>
			<DataField>InvoiceType</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ListCode</Name>
			<DataField>ListCode</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Log</Name>
			<DataField>Log</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChargesGroup</Name>
			<DataField>MarkupGroup</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MatchStatus</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>MatchStatus</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Num</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NumberSequenceGroup</Name>
			<DataField>NumberSequenceGroup</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TermsOfPayment</Name>
			<DataField>Payment</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentSchedule</Name>
			<DataField>PaymentSched</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentId</Name>
			<DataField>PaymId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MethodOfPayment</Name>
			<DataField>PaymMode</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentSpecification</Name>
			<DataField>PaymSpec</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Port</Name>
			<DataField>Port</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorName</Name>
			<DataField>PurchName</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Recalculation</Name>
			<DataField>ReCalculate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReleaseDateComment</Name>
			<DataField>ReleaseDateComment</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemittanceLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RemittanceLocation</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorInvoiceReviewStatus</Name>
			<DataField>RequestStatus</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SettleVoucher</Name>
			<DataField>SettleVoucher</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDateTime</Name>
			<DataField>StartDateTime</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StatisticsProcedure</Name>
			<DataField>StatProcId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditCorrection</Name>
			<DataField>Storno</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderReference</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@SYS129060</Label>
			<DataField>TableRefId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroup</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxRounding</Name>
			<DataField>TaxRoundOff</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionCode</Name>
			<DataField>TransactionCode</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Date</Name>
			<Label>@AccountsPayable:PostingDate</Label>
			<DataField>TransDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transport</Name>
			<DataField>Transport</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransportationDetails</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TransportationDocument</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovePostingWithMatchingDiscrepancies</Name>
			<DataField>VarianceApproved</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VarianceApprovedDateTime</Name>
			<DataField>VarianceApprovedDateTime</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VarianceApprovedBy</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>VarianceApprover</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Comment</Name>
			<DataField>VarianceComment</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxExemptNumber</Name>
			<DataField>VATNum</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccount</Name>
			<DataField>VendBankAccountID</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceGroup</Name>
			<DataField>VendInvoiceGroup</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorRequestedWorkerEmail</Name>
			<DataField>VendorRequestedWorkerEmail</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentGroupCode</Name>
			<DataField>VendPaymentGroup</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApproverPersonnelNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VariancePersonnelNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>VarianceHcmWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrderNumber</Name>
			<DataField>PurchId</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UUID</Name>
			<DataField>CFDIUUID_MX</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceSeries</Name>
			<DataField>InvoiceSeries_MX</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GSTInvoiceType</Name>
			<DataField>InvoiceType_MY</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GSTImportDeclarationNumber</Name>
			<DataField>TaxGSTImportDeclarationNo_MY</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankConstantSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>ConstantSymbol</DataField>
			<DataSource>BankConstantSymbol</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankSpecificSymbol</Name>
			<DataField>SpecificSymbol</DataField>
			<DataSource>VendInvoiceInfoTableSymbol</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorPaymentFinancialInterestCode</Name>
			<DataField>VendInterestSetup_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorPaymentFineCode</Name>
			<DataField>VendFineSetup_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsFinalUser</Name>
			<DataField>VendFinalUser_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CTeType</Name>
			<DataField>TypeOfCTe_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ServiceCodeOnDeliveryAddress</Name>
			<DataField>ServiceCodeOnDlvAddress_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPurchOperationTypeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SalesPurchOperationType_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalOperationPresenceType</Name>
			<DataField>PresenceType_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ImportDeclarationRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ImportDeclaration_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentTypeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FiscalDocumentType_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentSpecie</Name>
			<DataField>FiscalDocumentSpecie_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentSeries</Name>
			<DataField>FiscalDocumentSeries_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentModel</Name>
			<DataField>FiscalDocumentModel_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsElectronicInvoiceForService</Name>
			<DataField>ElectronicInvoice_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryTransportBrand</Name>
			<DataField>DlvTransportBrand_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryStateRegistered</Name>
			<DataField>DlvStateRegistered_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPackingName</Name>
			<DataField>DlvPackingName_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryVehicleNumber</Name>
			<DataField>DlvNoOfCarrier_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryFreightChargeTerms</Name>
			<DataField>DlvFreightType_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CFPSCode</Name>
			<DataField>CFPSId_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FreightedBy</Name>
			<DataField>BOLFreightedBy_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CarrierName</Name>
			<DataField>BOLCarrierName_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccessKey</Name>
			<DataField>AccessKey_BR</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentTypeId</Name>
			<DataField>FiscalDocumentTypeId</DataField>
			<DataSource>FiscalDocumentType_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishmentRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FiscalEstablishment_BR</DataField>
			<DataSource>FiscalDocumentType_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishmentId</Name>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Mandatory>No</Mandatory>
			<DataField>FiscalEstablishmentId</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalDocumentOperationTypeId</Name>
			<DataField>OperationTypeID</DataField>
			<DataSource>SalesPurchOperationType_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ImportDeclarationNumber</Name>
			<DataField>DINumber</DataField>
			<DataSource>PurchImportDeclaration_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchReceiptDate_W</Name>
			<DataField>PurchReceiptDate_W</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrencyExchangeRate</Name>
			<Label>@GeneralLedger:ReportingCurrencyFixedExchangeRate</Label>
			<DataField>ReportingCurrencyExchangeRate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ImportedAmount</Name>
			<DataField>ImportedAmount</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceReceivedDate</Name>
			<DataField>ReceivedDate</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ImportedSalesTax</Name>
			<DataField>ImportedSalesTax</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BusinessDocumentSubmissionId_W</Name>
			<DataField>BusinessDocumentSubmissionId_W</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>PurchIdRange</Name>
			<Label>@AccountsPayable:PurchIdRange</Label>
			<ExtendedDataType>PurchIdRange</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>HeaderOnlyImport</Name>
			<Label>@AccountsPayable:HeaderOnlyImport</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>PackingslipRange</Name>
			<Label>@AccountsPayable:PackingslipRange</Label>
			<ExtendedDataType>Range</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideSalesTax</Name>
			<DataField>OverrideSalesTax</DataField>
			<DataSource>VendInvoiceInfoTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceUUID</Name>
			<CountryRegionCodes>PL</CountryRegionCodes>
			<DataField>SubmissionUUID_W</DataField>
			<DataSource>VendInvoiceInfoTable_W</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FinTagDisplayValue</Name>
			<FeatureClass>PurchaseOrderFinTagFeature</FeatureClass>
			<DataField>DisplayValue</DataField>
			<DataSource>FinTag</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>HeaderReference</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustVendReportingCurrencyFixedExchangeRate</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ExchangeRate</MapField>
					<MapFieldTo>ExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReportingCurrencyExchangeRate</MapField>
					<MapFieldTo>ReportingCurrencyExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Dimension</Name>
					<Field>Dimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendInvoiceInfoTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendInvoiceInfoTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmWorker</Name>
								<JoinRelationName>HcmWorker</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VarianceHcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmWorker1</Name>
								<JoinRelationName>HcmWorkerOfVarianceApprover</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>VendInvoiceInfoTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceInfoTable_W</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceInfoTable_W</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FiscalDocumentType_BR</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>FiscalDocumentType_BR</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>FiscalEstablishment_BR</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>FiscalEstablishment_BR</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>FiscalEstablishment_BR</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>FiscalDocumentType_BR</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesPurchOperationType_BR</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>SalesPurchOperationType_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>SalesPurchOperationType_BR</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchImportDeclaration_BR</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>PurchImportDeclaration_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>PurchImportDeclaration_BR</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendInvoiceInfoTable</JoinDataSource>
								<RelatedField>VendInvoiceInfoTable</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceInfoTableSymbol</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>VendInvoiceInfoTableSymbol</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BankConstantSymbol</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>BankConstantSymbol</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BankConstantSymbol</Field>
										<JoinDataSource>VendInvoiceInfoTableSymbol</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>VendInvoiceInfoTable</JoinDataSource>
								<RelatedField>VendInvoiceInfoTable</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FinTag</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FinTag</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>FinTag</Field>
								<JoinDataSource>VendInvoiceInfoTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>ParmJobStatus</Name>
						<Field>ParmJobStatus</Field>
						<Value>ContainErrors, Waiting</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>