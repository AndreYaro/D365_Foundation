<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResStorageDimensionGroupEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResStorageDimensionGroupEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>dataSourceDimensionFieldId</Name>
				<Source><![CDATA[
    private FieldId dataSourceDimensionFieldId(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Site):
                return fieldNum(InventDim, InventSiteId);
            case dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Warehouse):
                return fieldNum(InventDim, InventLocationId);
            case dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Location):
                return fieldNum(InventDim, WMSLocationId);
            case dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Status):
                return fieldNum(InventDim, InventStatusId);
            case dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_LicensePlate):
                return fieldNum(InventDim, LicensePlateId);
        }

        return 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshFieldSetupDataSources</Name>
				<Source><![CDATA[
    private void refreshFieldSetupDataSources(DataEntityRuntimeContext _entityCtx)
    {
        this.refreshDataSourceBuffer(_entityCtx, _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Site)));
        this.refreshDataSourceBuffer(_entityCtx, _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Warehouse)));
        this.refreshDataSourceBuffer(_entityCtx, _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Location)));
        this.refreshDataSourceBuffer(_entityCtx, _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_Status)));
        this.refreshDataSourceBuffer(_entityCtx, _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroupFldSetup_LicensePlate)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshDataSourceBuffer</Name>
				<Source><![CDATA[
    private void refreshDataSourceBuffer(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        FieldId fieldId = this.dataSourceDimensionFieldId(_dataSourceCtx);
        EcoResStorageDimensionGroupFldSetup fieldSetup = EcoResStorageDimensionGroupFldSetup::findByDimensionGroupFieldId(this.RecId, fieldId, true);

        Debug::assert(fieldSetup.RecId != 0);

        _dataSourceCtx.setBuffer(fieldSetup);
        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
        this.fromViewDataSource(_dataSourceCtx.id(), fieldSetup);
        this.mapEntityToDataSource(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.getBuffer().TableId == tableNum(EcoResStorageDimensionGroupFldSetup))
        {
            EcoResStorageDimensionGroupFldSetup buffer = _dataSourceCtx.getBuffer();
            buffer.DimensionFieldId = this.dataSourceDimensionFieldId(_dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroup))
        {
            this.refreshFieldSetupDataSources(_entityCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(EcoResStorageDimensionGroupEntity, EcoResStorageDimensionGroup))
        {
            this.refreshFieldSetupDataSources(_entityCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:DevDocEcoResStorageDimensionGroupEntity</DeveloperDocumentation>
	<FormRef>EcoResStorageDimensionGroup</FormRef>
	<Label>@SYS312259</Label>
	<Tags>Dimension groups</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EcoResStorageDimensionGroupStaging</DataManagementStagingTable>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupName</Name>
			<DataField>Name</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupDescription</Name>
			<DataField>Description</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsWarehouseMandatory</Name>
			<DataField>IsWarehouseMandatoryEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsWarehousePrimaryStorageDimension</Name>
			<DataField>IsWarehousePrimaryStockingEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreAdvancedWarehouseManagementProcessesEnabled</Name>
			<DataField>IsWarehouseWHSEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPurchasePriceSearchUseSite</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsPurchasePriceBySite</Label>
			<DataField>IsPurchPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Site</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSalesPriceSearchUseSite</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsSalesPriceBySite</Label>
			<DataField>IsSalesPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Site</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCoveragePlanningUseWarehouse</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsCoveragePlanEnabledForWarehouse</Label>
			<DataField>IsCoveragePlanByDimensionEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Warehouse</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsFinancialInventoryEnabledForWarehouse</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsFinancialInventoryEnabledForWarehouse</Label>
			<DataField>IsFinancialInventoryEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Warehouse</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPhysicalInventoryEnabledForWarehouse</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsPhysicalInventoryEnabledForWarehouse</Label>
			<DataField>IsPhysicalInventoryEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Warehouse</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPurchasePriceSearchUseWarehouse</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsPurchasePriceByWarehouse</Label>
			<DataField>IsPurchPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Warehouse</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSalesPriceSearchUseWarehouse</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsSalesPriceByWarehouse</Label>
			<DataField>IsSalesPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Warehouse</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsLocationActive</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsLocationActive</Label>
			<DataField>IsActive</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Location</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsBlankIssueAllowedForLocation</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsBlankIssueAllowedForLocation</Label>
			<DataField>IsAllowBlankIssueEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Location</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsBlankReceiptAllowedForLocation</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsBlankReceiptAllowedForLocation</Label>
			<DataField>IsAllowBlankReceiptEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Location</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCoveragePlanningUseLocation</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsCoveragePlanEnabledForLocation</Label>
			<DataField>IsCoveragePlanByDimensionEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Location</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPhysicalInventoryEnabledForLocation</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsPhysicalInventoryEnabledForLocation</Label>
			<DataField>IsPhysicalInventoryEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Location</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCoveragePlanningUseInventoryStatus</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsCoveragePlanEnabledForInventoryStatus</Label>
			<DataField>IsCoveragePlanByDimensionEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Status</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPurchasePriceSearchUseInventoryStatus</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsPurchasePriceByInventoryStatus</Label>
			<DataField>IsPurchPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Status</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSalesPriceSearchUseInventoryStatus</Name>
			<Label>@SCM:EcoResStorageDimensionGroupEntityIsSalesPriceByInventoryStatus</Label>
			<DataField>IsSalesPriceSearchEnabled</DataField>
			<DataSource>EcoResStorageDimensionGroupFldSetup_Status</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>GroupName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResStorageDimensionGroup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResStorageDimensionGroup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupFldSetup_Site</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupFldSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DimensionFieldId</Name>
								<Field>DimensionFieldId</Field>
								<Value>(EcoResDimensionGroupEntityHelper::productDimensionRangeSite())</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupFldSetup_Warehouse</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupFldSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DimensionFieldId</Name>
								<Field>DimensionFieldId</Field>
								<Value>(EcoResDimensionGroupEntityHelper::productDimensionRangeWarehouse())</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupFldSetup_Location</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupFldSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DimensionFieldId</Name>
								<Field>DimensionFieldId</Field>
								<Value>(EcoResDimensionGroupEntityHelper::productDimensionRangeLocation())</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupFldSetup_Status</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupFldSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DimensionFieldId</Name>
								<Field>DimensionFieldId</Field>
								<Value>(EcoResDimensionGroupEntityHelper::productDimensionRangeStatus())</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupFldSetup_LicensePlate</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupFldSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>DimensionFieldId</Name>
								<Field>DimensionFieldId</Field>
								<Value>(EcoResDimensionGroupEntityHelper::productDimensionRangeLicensePlate())</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>