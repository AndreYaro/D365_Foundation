<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>VendorInvoiceSubLineV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class VendorInvoiceSubLineV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method matches the <c>VendInvoiceInfoSubline</c> record against the existing packing slip
    /// if no duplicate packing slips are allowed.
    /// </summary>
    /// <param name = "_entityCtx">The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            switch (_dataSourceCtx.name())
            {
                case dataentitydatasourcestr(VendorInvoiceSubLineV2Entity, VendInvoiceInfoSubLine): 
                    VendPackingSlipTrans vendPackingSlipTrans;
                    VendInvoiceInfoSubLine vendInvoiceInfoSubLine = _dataSourceCtx.getBuffer();
                        
                    select count(RecId) from vendPackingSlipTrans
                        where vendPackingSlipTrans.PackingSlipId == this.ProductReceiptNumber
                            && vendPackingSlipTrans.OrigPurchId == this.PurchaseOrder
                            && vendPackingSlipTrans.PurchaseLineLineNumber == this.PurchaseOrderLineNumber;
                    if (vendPackingSlipTrans.RecId == 1)
                    {
                        this.setRecordsVendInvoiceInfoSubLine(vendInvoiceInfoSubLine);
                    }
                    break;

                case dataentitydatasourcestr(VendorInvoiceHeaderEntity, VendInvoiceInfoTable):
                    _dataSourceCtx.setDataSaved(true);
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    break;
            }
        }
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRecordsVendInvoiceInfoSubLine</Name>
				<Source><![CDATA[
    private void setRecordsVendInvoiceInfoSubLine(VendInvoiceInfoSubLine _vendInvoiceInfoSubLine)
    {
        VendPackingSlipTrans vendorPackingSlipTrans;

        select firstonly * from vendorPackingSlipTrans
            where vendorPackingSlipTrans.PackingSlipId == this.ProductReceiptNumber
            && vendorPackingSlipTrans.OrigPurchId == this.PurchaseOrder
            && vendorPackingSlipTrans.PurchaseLineLineNumber == this.PurchaseOrderLineNumber;

        if (vendorPackingSlipTrans.Recid)
        {
            _vendInvoiceInfoSubLine.InventNow = vendorPackingSlipTrans.InventQty;
            _vendInvoiceInfoSubLine.JournalRefRecId = vendorPackingSlipTrans.RecId;
            _vendInvoiceInfoSubLine.JournalRefTableId = tableNum(VendPackingSlipTrans);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {

        Common ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(VendorInvoiceSubLineV2Entity, VendInvoiceInfoLine):
                if (!ret)
                {
                    VendInvoiceInfoLine vendInvoiceInfoLine;

                    select firstonly * from vendInvoiceInfoLine
                                    where vendInvoiceInfoLine.TableRefId == this.InvoiceLineReference
                                    && vendInvoiceInfoLine.InvoiceLineNum == this.InvoiceLineNumber
                                    && vendInvoiceInfoLine.OrigPurchId == this.PurchaseOrder;

                    ret = VendInvoiceInfoLine;
                }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the <c>VendorInvoiceSubLineV2Staging</c> table after population.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    /// <remarks>This method is called automatically by the data management framework.</remarks>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        VendorInvoiceHeaderStaging headerStaging;
        VendorInvoiceSubLineV2Staging subLineStaging;

        update_recordset subLineStaging
            setting InvoiceLineReference = headerStaging.HeaderReference
            join HeaderReference from headerStaging
                where subLineStaging.InvoiceLineReference == headerStaging.HeaderReferenceOld
                    && subLineStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && subLineStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                    && headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                    && subLineStaging.TransferStatus == DMFTransferStatus::NotStarted;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:VendInvoiceSubLineEntityDeveloperDocumentation</DeveloperDocumentation>
	<Label>@AccountsPayable:VendorInvoiceSubLineV2Entity</Label>
	<Tags>Invoice</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>VendorInvoiceSubLineV2Staging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsPayable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>InvoiceSubLinesV2</PublicCollectionName>
	<PublicEntityName>InvoiceSubLineV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductReceiptNumber</Name>
			<DataField>DocumentId</DataField>
			<DataSource>VendInvoiceInfoSubLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceLineReference</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>TableRefId</DataField>
			<DataSource>VendInvoiceInfoLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseQuantity</Name>
			<DataField>ReceiveNow</DataField>
			<DataSource>VendInvoiceInfoSubLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrder</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>OrigPurchId</DataField>
			<DataSource>VendInvoiceInfoLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceLineNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>InvoiceLineNum</DataField>
			<DataSource>VendInvoiceInfoLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOrderLineNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PurchaseLineLineNumber</DataField>
			<DataSource>VendInvoiceInfoLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProductReceiptNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InvoiceLineReference</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PurchaseOrder</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InvoiceLineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>VendorInvoiceLineEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>VendorInvoiceLineEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>InvoiceLineReference</Field>
					<RelatedField>HeaderReference</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>InvoiceLineNumber</Field>
					<RelatedField>InvoiceLineNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField3</Name>
					<Field>PurchaseOrder</Field>
					<RelatedField>PurchaseOrder</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[

[Query]
public class Metadata extends QueryRun
{
}

]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>VendInvoiceInfoSubLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>VendInvoiceInfoSubLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendInvoiceInfoLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>VendInvoiceInfoLine</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>VendInvoiceInfoTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>VendInvoiceInfoTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>ParmJobStatus</Name>
										<Field>ParmJobStatus</Field>
										<Value>ContainErrors, Waiting</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>TableRefId</Field>
										<JoinDataSource>VendInvoiceInfoLine</JoinDataSource>
										<RelatedField>TableRefId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LineRefRecid</Field>
								<JoinDataSource>VendInvoiceInfoSubLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>