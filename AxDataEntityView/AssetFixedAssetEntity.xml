<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AssetFixedAssetEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AssetFixedAssetEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>overrideDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides the datasource of <c>AssetFixedAssetEntity</c>.
    /// </summary>
    /// <returns>
    /// Returns true,if the data source of AssetFixedAssetEntity is overrided else returns false.
    /// </returns>
    [Wrappable(true)]
    protected final boolean overrideDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            switch (_dataSourceCtx.name())
            {
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetSorting1):
                    if (this.SortField1Id == ''
                        && this.SortField1Description == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetSorting2):
                    if (this.SortField2Id == ''
                        && this.SortField2Description == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetSorting3):
                    if (this.SortField3Id == ''
                        && this.SortField3Description == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetActivityCode):
                    if (this.ActivityCode == ''
                        && this.ActivityCodeDescription == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetPropertyGroup):
                    if (this.PropertyGroupId == ''
                        && this.PropertyGroupDescription == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetCondition):
                    if (this.AssetConditionId == ''
                        && this.AssetConditionDescription == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetLocation):
                    if (this.AssetLocationId == ''
                        && this.AssetLocationName == '')
                    {
                        ret = true;
                    }
                    break;
                case dataentitydatasourcestr(AssetFixedAssetEntity, AssetMajorType):
                    if (this.MajorTypeId == ''
                        && this.MajorTypeDescription == '')
                    {
                        ret = true;
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = this.overrideDataSource(_entityCtx, _dataSourceCtx);

        if (!ret)
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = this.overrideDataSource(_entityCtx, _dataSourceCtx);

        if (!ret)
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preTargetProcessSetBased</Name>
				<Source><![CDATA[
    public static void preTargetProcessSetBased(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        AssetFixedAssetEntityLog entityLog;

        ttsbegin;

        AssetFixedAssetEntity::performSetBasedValidationOfAssetGroup(_dmfDefinitionGroupExecution, entityLog);
        AssetFixedAssetEntity::performSetBasedValidationOfFixedAssetNumber(_dmfDefinitionGroupExecution, entityLog);
        AssetFixedAssetEntity::performSetBasedValidationOfSorting(_dmfDefinitionGroupExecution, entityLog);
        AssetFixedAssetEntity::writeErrorsToDMFLog(entityLog);

        ttscommit;

        AssetFixedAssetStaging staging;
        AssetFixedAssetStagingMap::performSetBasedUpdateOfFixedAssetNumber(_dmfDefinitionGroupExecution, staging);
        AssetFixedAssetEntity::performSetBasedUpdateOfBarcodes(_dmfDefinitionGroupExecution);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildEntityLogInsertObject</Name>
				<Source><![CDATA[
    private static SysDaInsertObject buildEntityLogInsertObject(AssetFixedAssetEntityLog _entityLog)
    {
        SysDaInsertObject insertEntityLogObject = new SysDaInsertObject(_entityLog);

        insertEntityLogObject.fields()
            .add(fieldStr(AssetFixedAssetEntityLog, AssetFixedAssetEntityRecId))
            .add(fieldStr(AssetFixedAssetEntityLog, ErrorMessage))
            .add(fieldStr(AssetFixedAssetEntityLog, FieldName));

        return insertEntityLogObject;
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildStagingValidationQuery</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildStagingValidationQuery(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, str _error, FieldName _fieldName)
    {
        AssetFixedAssetStaging staging;

        SysDaQueryObject stagingQuery = new SysDaQueryObject(staging);

        stagingQuery.projection()
            .Add(fieldStr(AssetFixedAssetStaging, RecId))
            .AddValue(_error)
            .AddValue(_fieldName);

        stagingQuery.WhereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(staging, fieldStr(AssetFixedAssetStaging, DefinitionGroup)),
                new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, DefinitionGroup)))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(staging, fieldStr(AssetFixedAssetStaging, ExecutionId)),
                    new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, ExecutionId))))
            .and(new SysDaGreaterThanExpression(
                    new SysDaFieldExpression(staging, _fieldName),
                    new SysDaValueExpression('')))
            .and(new SysDaOrExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(staging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::NotStarted)),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(staging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::Validated)))));

        return stagingQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performSetBasedValidationOfSorting</Name>
				<Source><![CDATA[
    private static void performSetBasedValidationOfSorting(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, AssetFixedAssetEntityLog _entityLog)
    {
        str error = "@FixedAssetEntity:FixedAssets_MessageError_DuplicateSortingKey";
        FieldName fieldName = fieldStr(AssetFixedAssetStaging, SortField3Description);

        _entityLog.skipDataMethods(true);

        SysDaInsertObject insertEntityLogObject = AssetFixedAssetEntity::buildEntityLogInsertObject(_entityLog);

        SysDaQueryObject stagingQuery = AssetFixedAssetEntity::buildStagingValidationQuery(_dmfDefinitionGroupExecution, error, fieldName);

        stagingQuery.joinClause(SysDaJoinKind::InnerJoin, AssetFixedAssetEntity::buildSortingValidationQuery(_dmfDefinitionGroupExecution, stagingQuery.table()));

        AssetFixedAssetEntity::executeInsertStatement(insertEntityLogObject, stagingQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildSortingValidationQuery</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildSortingValidationQuery(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, AssetFixedAssetStaging _staging)
    {
        AssetFixedAssetStaging fixedAssetStaging;

        SysDaQueryObject fixedAssetStagingQuery = new SysDaQueryObject(fixedAssetStaging);

        fixedAssetStagingQuery.WhereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, DefinitionGroup)),
                new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, DefinitionGroup)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, ExecutionId)),
                new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, ExecutionId))))
            .and(new SysDaOrExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::NotStarted)),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::Validated))))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, SortField3Id)),
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, SortField3Id))))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, SortField3Sorting)),
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, SortField3Sorting))))
            .and(new SysDaNotEqualsExpression(
                    new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, SortField3Description)),
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, SortField3Description)))));

        return fixedAssetStagingQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performSetBasedValidationOfFixedAssetNumber</Name>
				<Source><![CDATA[
    private static void performSetBasedValidationOfFixedAssetNumber(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, AssetFixedAssetEntityLog _entityLog)
    {
        str error = "@FixedAssetEntity:FA_ErrorMessage_AssetIdExist";
        FieldName fieldName = fieldStr(AssetFixedAssetStaging, FixedAssetNumber);

        _entityLog.skipDataMethods(true);

        SysDaInsertObject insertEntityLogObject = AssetFixedAssetEntity::buildEntityLogInsertObject(_entityLog);

        SysDaQueryObject stagingQuery = AssetFixedAssetEntity::buildStagingValidationQuery(_dmfDefinitionGroupExecution, error, fieldName);

        stagingQuery.joinClause(SysDaJoinKind::InnerJoin, AssetFixedAssetEntity::buildAssetNumberValidationQuery(_dmfDefinitionGroupExecution, stagingQuery.table()));

        AssetFixedAssetEntity::executeInsertStatement(insertEntityLogObject, stagingQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAssetNumberValidationQuery</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildAssetNumberValidationQuery(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, AssetFixedAssetStaging _staging)
    {
        AssetFixedAssetStaging fixedAssetStaging;

        SysDaQueryObject fixedAssetStagingQuery = new SysDaQueryObject(fixedAssetStaging);

        fixedAssetStagingQuery.WhereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, DefinitionGroup)),
                new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, DefinitionGroup)))
            .and(new SysDaEqualsExpression(
                new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, ExecutionId)),
                new SysDaFieldExpression(_dmfDefinitionGroupExecution, fieldStr(DMFDefinitionGroupExecution, ExecutionId))))
            .and(new SysDaOrExpression(
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::NotStarted)),
                new SysDaEqualsExpression(
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, TransferStatus)),
                    new SysDaValueExpression(DMFTransferStatus::Validated))))
            .and(new SysDaNotEqualsExpression(
                    new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, RecId)),
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, RecId))))
            .and(new SysDaEqualsExpression(
                    new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, FixedAssetNumber)),
                    new SysDaFieldExpression(fixedAssetStaging, fieldStr(AssetFixedAssetStaging, FixedAssetNumber)))));

        return fixedAssetStagingQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performSetBasedValidationOfAssetGroup</Name>
				<Source><![CDATA[
    private static void performSetBasedValidationOfAssetGroup(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution, AssetFixedAssetEntityLog _entityLog)
    {
        str error = "@FixedAssets:FA_ErrorMessage_AssetGroupDoesNotExist";
        FieldName fieldName = fieldStr(AssetFixedAssetStaging, FixedAssetGroupId);

        _entityLog.skipDataMethods(true);

        SysDaInsertObject insertEntityLogObject = AssetFixedAssetEntity::buildEntityLogInsertObject(_entityLog);

        SysDaQueryObject stagingQuery = AssetFixedAssetEntity::buildStagingValidationQuery(_dmfDefinitionGroupExecution, error, fieldName);

        stagingQuery.joinClause(SysDaJoinKind::NotExistsJoin, AssetFixedAssetEntity::buildAssetGroupValidationQuery(stagingQuery.table()));

        AssetFixedAssetEntity::executeInsertStatement(insertEntityLogObject, stagingQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildAssetGroupValidationQuery</Name>
				<Source><![CDATA[
    private static SysDaQueryObject buildAssetGroupValidationQuery(AssetFixedAssetStaging _staging)
    {
        AssetGroup assetGroup;

        SysDaQueryObject assetGroupQuery = new SysDaQueryObject(assetGroup);

        assetGroupQuery.WhereClause(
            new SysDaEqualsExpression(
                new SysDaFieldExpression(assetGroup, fieldStr(AssetGroup, GroupId)),
                new SysDaFieldExpression(_staging, fieldStr(AssetFixedAssetStaging, FixedAssetGroupId))));

        return assetGroupQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeInsertStatement</Name>
				<Source><![CDATA[
    private static void executeInsertStatement(SysDaInsertObject _insertObject, SysDaQueryObject _query)
    {
        _insertObject.query(_query);

        SysDaInsertStatement insertStmt = new SysDaInsertStatement();
        insertStmt.insert(_insertObject);
    }

]]></Source>
			</Method>
			<Method>
				<Name>writeErrorsToDMFLog</Name>
				<Source><![CDATA[
    private static void writeErrorsToDMFLog(AssetFixedAssetEntityLog _entityLog)
    {
        AssetFixedAssetStaging staging;
        staging.skipDataMethods(true);

        // mark records as errors
        update_recordset staging
            setting TransferStatus = DMFTransferStatus::Error
            exists join _entityLog
                where staging.RecId == _entityLog.AssetFixedAssetEntityRecId;

        // write errors to DMF validation log
        TableName tableName = tableStr(AssetFixedAssetStaging);
        TableName entityName = new DictDataEntity(tableNum(AssetFixedAssetEntity)).label();
        DMFSourceTarget sourceTarget = DMFSourceTarget::Target;

        DMFStagingValidationLog log;
        log.skipDataMethods(true);

        insert_recordset log (DefinitionGroupName, ExecutionId, StagingRecId, StagingTableName, SourceTarget, EntityName, ErrorMessage, StagingColumnName)
            select DefinitionGroup, ExecutionId, RecId, tableName, sourceTarget, entityName from staging
            join ErrorMessage, FieldName from _entityLog
                where staging.RecId == _entityLog.AssetFixedAssetEntityRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>performSetBasedUpdateOfBarcodes</Name>
				<Source><![CDATA[
    private static void performSetBasedUpdateOfBarcodes(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        if (AssetParameters::find().BarcodeEqualsAssetNumber)
        {
            AssetFixedAssetStaging staging;

            staging.skipDataMethods(true);

            update_recordset staging
                setting BarCode = staging.FixedAssetNumber
                where staging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                   && staging.ExecutionId     == _dmfDefinitionGroupExecution.ExecutionId
                   && (staging.TransferStatus == DMFTransferStatus::NotStarted || staging.TransferStatus == DMFTransferStatus::Validated)
                   && !staging.BarCode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getResponsibleName</Name>
				<Source><![CDATA[
    private static str getResponsibleName()
    {
        return AssetFixedAssetEntity::getWorkerName(dataEntityDataSourceStr(AssetFixedAssetEntity, HcmWorkerResponsible));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContactName</Name>
				<Source><![CDATA[
    private static str getContactName()
    {
        return AssetFixedAssetEntity::getWorkerName(dataEntityDataSourceStr(AssetFixedAssetEntity, HcmWorkerContact));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getWorkerName</Name>
				<Source><![CDATA[
    private static str getWorkerName(DataSourceName _workerDataSource)
    {
        str sql = strFmt('SELECT %1 FROM %2 WHERE %3 = %4',
            new DictField(tableNum(DirPerson), fieldNum(DirPerson, Name)).name(DbBackend::Sql),
            new DictTable(tableNum(DirPerson)).name(DbBackend::Sql),
            new DictField(tableNum(DirPerson), fieldNum(DirPerson, RecId)).name(DbBackend::Sql),
            SysComputedColumn::returnField(
                tableStr(AssetFixedAssetEntity),
                _workerDataSource,
                fieldStr(HcmWorker, Person)));

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        AssetFixedAssetEntityNumberSeqHandler::enableNumberSequenceControl(this);

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Asset</ConfigurationKey>
	<FormRef>AssetTableDetails</FormRef>
	<Label>@SYS12578</Label>
	<Tags>Fixed assets</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>AssetFixedAssetStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>FixedAssets</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>FixedAssets</PublicCollectionName>
	<PublicEntityName>FixedAsset</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FixedAssetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Name</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAssetGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Type</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResponsiblePersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResponsibleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcceleratedDepGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcceleratedDepreciationFixedAssetEquipmentGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetClassification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeferredType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationRateDenominator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExceptionTaxationRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSecondHand</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssetTypeOfMajorType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>NameOfTheLender</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsRented</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Resource</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceTypeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PhysicalAssetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LongTermReceivableTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OutgoingICMS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ICMSCreditInstallments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferredFromInventory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCodeForCOFINS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCreditsInstallments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCodeForPIS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FiscalEstablishmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcquisitionPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AcquisitionDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Agent</Name>
			<DataField>InsuranceAgent</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetActivityCode</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AssetActivityCode</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>AssetActivityCode</DataField>
			<DataSource>AssetActivityCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityCodeDescription</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetActivityCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetConditionId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Condition</DataField>
			<DataSource>AssetCondition</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetConditionDescription</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetCondition</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BarCode</Name>
			<DataField>Barcode</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Comments</Name>
			<DataField>Notes</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Contact</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerContactName</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ContactName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@FixedAssets:FA_EntityField_ContactPerson</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>getContactName</ComputedFieldMethod>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorkerContact</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Department</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Department</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DepartmentOperatingUnitNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>OMOperatingUnitNumber</DataField>
			<DataSource>OMOperatingUnit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DepartmentSearchName</Name>
			<DataField>NameAlias</DataField>
			<DataSource>OMOperatingUnit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DisposalRestrictions</Name>
			<DataField>DisposalRestriction</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentLocation</Name>
			<DataField>Documents</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetGroupId</Name>
			<DataField>AssetGroup</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>AssetId</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GISReferenceNumber</Name>
			<DataField>GISReferenceNumber</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GuaranteeDate</Name>
			<DataField>GuaranteeDate</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Information1</Name>
			<DataField>MaintenanceInfo1</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Information2</Name>
			<DataField>MaintenanceInfo2</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Information3</Name>
			<DataField>MaintenanceInfo3</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InsuranceDate1</Name>
			<DataField>InsuranceDate1</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InsuranceDate2</Name>
			<DataField>InsuranceDate2</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InsuranceVendor</Name>
			<DataField>InsuranceVendor</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InsuredAtFairMarketValue</Name>
			<DataField>InsuredAtMarketValue</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InsuredValue</Name>
			<DataField>InsuredValue</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastPeriodicValueCostUpdate</Name>
			<DataField>LastFactorUpdateDate</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastMaintenance</Name>
			<DataField>LastMaintenance</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeaseNote</Name>
			<DataField>Lease</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Location</DataField>
			<DataSource>AssetLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetLocationName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>AssetLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LocationId</Name>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LocationMemo</Name>
			<DataField>LocationMemo</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MajorTypeId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>MajorType</DataField>
			<DataSource>AssetMajorType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MajorTypeDescription</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetMajorType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Make</Name>
			<DataField>Make</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MissingAsset</Name>
			<DataField>IsMissing</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Model</Name>
			<DataField>Model</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ModelYear</Name>
			<DataField>ModelYear</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NextMaintenance</Name>
			<DataField>NextMaintenance</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ParcelID</Name>
			<DataField>ParcelId</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalInventory</Name>
			<DataField>PhysicalInventory</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PolicyAmount</Name>
			<DataField>PolicyAmount</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PolicyExpirationDate</Name>
			<DataField>PolicyExpiration</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PolicyNumber</Name>
			<DataField>InsurancePolicyNum</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PropertyGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AssetPropertyGroup</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PropertyGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AssetPropertyGroup</DataField>
			<DataSource>AssetPropertyGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PropertyGroupDescription</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetPropertyGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PropertyType</Name>
			<DataField>PropertyType</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Reference</Name>
			<DataField>Reference</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplacementCost</Name>
			<DataField>AssetReplaceCost</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Responsible</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerResponsible</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ResponsibleName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SYS67464</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>getResponsibleName</ComputedFieldMethod>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResponsiblePersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorkerResponsible</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RoomNumber</Name>
			<DataField>RoomNumber</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SearchName</Name>
			<DataField>NameAlias</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SerialNumber</Name>
			<DataField>SerialNum</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField1Id</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortingId</DataField>
			<DataSource>AssetSorting1</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField1Sorting</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortCode</DataField>
			<DataSource>AssetSorting1</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField1Description</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetSorting1</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField2Id</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortingId</DataField>
			<DataSource>AssetSorting2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField2Sorting</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortCode</DataField>
			<DataSource>AssetSorting2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField2Description</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetSorting2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField3Id</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortingId</DataField>
			<DataSource>AssetSorting3</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField3Sorting</Name>
			<Mandatory>No</Mandatory>
			<DataField>SortCode</DataField>
			<DataSource>AssetSorting3</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortField3Description</Name>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>AssetSorting3</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalInformation1</Name>
			<DataField>TechInfo1</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalInformation2</Name>
			<DataField>TechInfo2</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalInformation3</Name>
			<DataField>TechInfo3</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Titleholder</Name>
			<DataField>TitleHolder</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Type</Name>
			<DataField>AssetType</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCost</Name>
			<DataField>UnitCost</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitOfMeasure</Name>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AcceleratedDepGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AcceleratedDepGroup_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AcceleratedDepreciationFixedAssetEquipmentGroupId</Name>
			<Mandatory>No</Mandatory>
			<DataField>GroupId</DataField>
			<DataSource>AssetAcceleratedDepGroup_JP</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetClassification</Name>
			<DataField>AssetClassification_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExceptionTaxationCode</Name>
			<DataField>ExceptionTaxationCode_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeferredType</Name>
			<DataField>AssetDeferredType_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExceptionTaxationRateDenominator</Name>
			<Label>@SYP4860922</Label>
			<DataField>ExceptionTaxationRateDenominator_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExceptionTaxationRate</Name>
			<Label>@SYP4860920</Label>
			<DataField>ExceptionTaxationRate_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSecondHand</Name>
			<DataField>IsSecondHand_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetTypeOfMajorType</Name>
			<DataField>AssetType_JP</DataField>
			<DataSource>AssetMajorType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NameOfTheLender</Name>
			<DataField>LenderName_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRented</Name>
			<DataField>IsRented_JP</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Resource</Name>
			<CountryRegionCodes>JP</CountryRegionCodes>
			<Mandatory>No</Mandatory>
			<DataField>WrkCtrId</DataField>
			<DataSource>WrkCtrTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalAssetNumber</Name>
			<DataField>PhysicalAssetNumber_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LongTermReceivableTax</Name>
			<DataField>PISCOFINSReceivableLongTerm_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OutgoingICMS</Name>
			<DataField>TaxICMSOutgoing_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ICMSCreditInstallments</Name>
			<DataField>ICMSCreditInstallments_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferredFromInventory</Name>
			<DataField>TransferredFromInventory_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxationCodeForCOFINS</Name>
			<DataField>COFINSTaxationCode_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AppropriationMethod</Name>
			<DataField>PISCOFINSAppropriationMethod_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetCreditGroup</Name>
			<DataField>PISCOFINSCreditGroup_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxCreditsInstallments</Name>
			<DataField>PISCOFINSCreditInstallments_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxCreditPurpose</Name>
			<DataField>PISCOFINSCreditPurpose_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxationCodeForPIS</Name>
			<DataField>PISTaxationCode_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishmentId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>FiscalEstablishmentId</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalEstablishment_BR</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FiscalEstablishment_BR</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssetSourceType_CN</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AssetSourceType_CN</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceTypeId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>SourceTypeId</DataField>
			<DataSource>AssetSourceType_CN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAssetId</Name>
			<DataField>MainAssetId</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AcquisitionDate</Name>
			<DataField>AcquisitionDate_W</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AcquisitionPrice</Name>
			<DataField>AcquisitionPrice_W</DataField>
			<DataSource>AssetTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>FixedAssetNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AssetGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>AssetGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetFixedAssetGroup</RelatedDataEntityRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>AssetGroupAsset</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>FixedAssetGroupId</Field>
					<RelatedField>FixedAssetGroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AssetLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>AssetLocationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetFixedAssetLocation</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LocationFixedAsset</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>AssetLocationId</Field>
					<RelatedField>LocationId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WorkerResponsible</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmWorkerEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AssetFixedAssetWorkerResponsible</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WorkerResponsibleFixedAsset</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ResponsiblePersonnelNumber</Field>
					<RelatedField>PersonnelNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>AssetTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>AssetTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetActivityCode</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetActivityCode</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AssetActivityCode</Name>
								<JoinRelationName>AssetActivityCode</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetPropertyGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetPropertyGroup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AssetPropertyGroup</Name>
								<JoinRelationName>AssetPropertyGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorkerResponsible</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>WorkerResponsible</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorkerContact</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>WorkerContactName</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetAcceleratedDepGroup_JP</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AssetAcceleratedDepGroup_JP</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AssetAcceleratedDepGroup_JP</Name>
								<JoinRelationName>AssetAcceleratedDepGroup_JP</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetCondition</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetCondition</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AssetCondition</Name>
								<Field>Condition</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetCondition</JoinRelationName>
								<RelatedField>Condition</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetMajorType</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetMajorType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>MajorType</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<RelatedField>MajorType</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetSorting1</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetSorting</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AssetSortCode</Name>
								<Field>SortCode</Field>
								<Value>Sorting1</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SortingId</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetSorting</JoinRelationName>
								<RelatedField>SortingId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetSorting2</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetSorting</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AssetSortCode</Name>
								<Field>SortCode</Field>
								<Value>Sorting2</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SortingId2</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetSorting_SortingId2</JoinRelationName>
								<RelatedField>SortingId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetSorting3</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetSorting</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AssetSortCode</Name>
								<Field>SortCode</Field>
								<Value>Sorting3</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SortingId3</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetSorting_SortingId3</JoinRelationName>
								<RelatedField>SortingId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>OMOperatingUnit</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>OMOperatingUnit</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>OMOperatingUnit</Name>
								<Field>Department</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>OMOperatingUnit</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetLocation</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AssetLocation</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsLocation</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsLocation</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>LogisticsLocation</Field>
										<JoinDataSource>AssetLocation</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AssetLocation</Name>
								<Field>Location</Field>
								<JoinDerivedTable>AssetTable</JoinDerivedTable>
								<JoinRelationName>AssetLocation</JoinRelationName>
								<RelatedField>Location</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>WrkCtrTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WrkCtrTable</Name>
								<Field>WrkCtrId_JP</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>WrkCtrTable</JoinRelationName>
								<RelatedField>WrkCtrId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FiscalEstablishment_BR</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FiscalEstablishment_BR</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>FiscalEstablishment_BR</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetSourceType_CN</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AssetSourceType_CN</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AssetSourceType_CN</Field>
								<JoinDataSource>AssetTable</JoinDataSource>
								<JoinRelationName>AssetSourceType_CN</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>