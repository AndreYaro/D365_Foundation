<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmContactPersonCDSV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmContactPersonCDSV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query contactPersonCDSQuery = new Query();
        
        var contactPersonDS = contactPersonCDSQuery.addDataSource(tableNum(ContactPerson));
        smmContactPersonV2Entity::addChangeTrackingDataSourcesForContactPersonChildren(contactPersonDS);

        return contactPersonCDSQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>associatedContactNumberDefinition</Name>
				<Source><![CDATA[
    protected static str associatedContactNumberDefinition()
    {
        str contactPersonCDSV2EntityName = dataentityviewstr(smmContactPersonCDSV2Entity);

        return SysComputedColumn::if(
            smmContactPersonCDSV2Entity::isProspectComparison(contactPersonCDSV2EntityName),
            SysComputedColumn::returnField(
                contactPersonCDSV2EntityName,
                dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmBusRelTable),
                fieldStr(smmBusRelTable, BusRelAccount)),
            SysComputedColumn::if(
                smmContactPersonCDSV2Entity::isCustomerComparison(contactPersonCDSV2EntityName),
                SysComputedColumn::returnField(
                    contactPersonCDSV2EntityName,
                    dataEntityDataSourceStr(smmContactPersonCDSV2Entity, CustTable),
                    fieldStr(CustTable, AccountNum)),
                SysComputedColumn::if(
                    smmContactPersonCDSV2Entity::isContactPersonComparison(contactPersonCDSV2EntityName),
                    SysComputedColumn::returnField(
                        contactPersonCDSV2EntityName,
                        dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmContactPersonV2Entity),
                        fieldStr(smmContactPersonV2Entity, AssociatedPartyNumber)),
                    SysComputedColumn::returnField(
                        contactPersonCDSV2EntityName,
                        dataEntityDataSourceStr(smmContactPersonCDSV2Entity, VendTable),
                        fieldStr(VendTable, AccountNum)))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>associatedContactTypeDefinition</Name>
				<Source><![CDATA[
    protected static str associatedContactTypeDefinition()
    {
        str contactPersonCDSV2EntityName = dataentityviewstr(smmContactPersonCDSV2Entity);

        return SysComputedColumn::if(
            smmContactPersonCDSV2Entity::isProspectComparison(contactPersonCDSV2EntityName),
            SysComputedColumn::returnLiteral(smmContactPersonCDSAssociatedContactType::Prospect),
            SysComputedColumn::if(
                smmContactPersonCDSV2Entity::isCustomerComparison(contactPersonCDSV2EntityName),
                SysComputedColumn::returnLiteral(smmContactPersonCDSAssociatedContactType::Customer),
                SysComputedColumn::if(
                    smmContactPersonCDSV2Entity::isContactPersonComparison(contactPersonCDSV2EntityName),
                    SysComputedColumn::returnLiteral(smmContactPersonCDSAssociatedContactType::Contact),
                    SysComputedColumn::if(
                        SysComputedColumn::isNotNullExpression(SysComputedColumn::comparisonField(
                            contactPersonCDSV2EntityName,
                            dataEntityDataSourceStr(smmContactPersonCDSV2Entity, VendTable),
                            fieldStr(VendTable, AccountNum))),
                        SysComputedColumn::returnLiteral(smmContactPersonCDSAssociatedContactType::Vendor),
                        SysComputedColumn::returnLiteral(smmContactPersonCDSAssociatedContactType::NotSupported)))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isProspectComparison</Name>
				<Source><![CDATA[
    private static str isProspectComparison(str _contactPersonCDSV2EntityName)
    {
        return  SysComputedColumn::and2(
            SysComputedColumn::isNotNullExpression(SysComputedColumn::comparisonField(
                _contactPersonCDSV2EntityName,
                dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmBusRelTable),
                fieldStr(smmBusRelTable, BusRelAccount))),
            SysComputedColumn::EqualExpression(
                SysComputedColumn::returnLiteral(''),
                SysComputedColumn::comparisonField(
                    _contactPersonCDSV2EntityName,
                    dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmContactPersonV2Entity),
                    fieldStr(smmContactPersonV2Entity, CustAccount))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCustomerComparison</Name>
				<Source><![CDATA[
    private static str isCustomerComparison(str _contactPersonCDSV2EntityName)
    {
        return SysComputedColumn::isNotNullExpression(SysComputedColumn::comparisonField(
            _contactPersonCDSV2EntityName,
            dataEntityDataSourceStr(smmContactPersonCDSV2Entity, CustTable),
            fieldStr(CustTable, AccountNum)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isContactPersonComparison</Name>
				<Source><![CDATA[
    private static str isContactPersonComparison(str _contactPersonCDSV2EntityName)
    {
        return SysComputedColumn::isNotNullExpression(SysComputedColumn::comparisonField(
            _contactPersonCDSV2EntityName,
            dataEntityDataSourceStr(smmContactPersonCDSV2Entity, ContactPerson),
            fieldStr(ContactPerson, ContactPersonId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmContactPersonV2Entity)
            && (this.isFieldSet(fieldNum(smmContactPersonCDSV2Entity, AssociatedContactNumber))
                || this.isFieldSet(fieldNum(smmContactPersonCDSV2Entity, AssociatedContactType))))
        {
            this.AssociatedPartyNumber = this.getAssociatedPartyNumber(this.AssociatedContactType, this.AssociatedContactNumber);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociatedPartyNumber</Name>
				<Source><![CDATA[
    protected DirPartyNumber getAssociatedPartyNumber(smmContactPersonCDSAssociatedContactType _associatedContactType, smmContactPersonCDSAssociatedContactNumber _associatedContactNumber)
    {
        DirPartyNumber associatedPartyNumber;

        switch (_associatedContactType)
        {
            case smmContactPersonCDSAssociatedContactType::Customer:
                associatedPartyNumber = this.getAssociatedPartyNumberForCustomer(this.AssociatedContactNumber);
                break;

            case smmContactPersonCDSAssociatedContactType::Vendor:
                associatedPartyNumber = this.getAssociatedPartyNumberForVendor(this.AssociatedContactNumber);
                break;

            case smmContactPersonCDSAssociatedContactType::Contact:
                associatedPartyNumber = this.getAssociatedPartyNumberForContactPerson(this.AssociatedContactNumber);
                break;

            case smmContactPersonCDSAssociatedContactType::Prospect:
                associatedPartyNumber = this.getAssociatedPartyNumberForProspect(this.AssociatedContactNumber);
                break;
        }

        return associatedPartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociatedPartyNumberForCustomer</Name>
				<Source><![CDATA[
    private DirPartyNumber getAssociatedPartyNumberForCustomer(CustAccount _customerAccountNumber)
    {
        DirPartyTable dirPartyTable;
        CustTable custTable;

        select firstonly PartyNumber from dirPartyTable
            exists join custTable
            where dirPartyTable.RecId == custTable.Party
                && custTable.AccountNum == _customerAccountNumber;

        return dirPartyTable.PartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociatedPartyNumberForVendor</Name>
				<Source><![CDATA[
    private DirPartyNumber getAssociatedPartyNumberForVendor(VendAccount _vendorAccountNumber)
    {
        DirPartyTable dirPartyTable;
        VendTable vendTable;

        select firstonly PartyNumber from dirPartyTable
            exists join vendTable
            where dirPartyTable.RecId == vendTable.Party
                && vendTable.AccountNum == _vendorAccountNumber;

        return dirPartyTable.PartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociatedPartyNumberForProspect</Name>
				<Source><![CDATA[
    private DirPartyNumber getAssociatedPartyNumberForProspect(smmBusRelAccount _prospectAccountNumber)
    {
        DirPartyTable dirPartyTable;
        smmBusRelTable smmBusRelTable;

        select firstonly PartyNumber from dirPartyTable
            exists join smmBusRelTable
            where dirPartyTable.RecId == smmBusRelTable.Party
                && smmBusRelTable.BusRelAccount == _prospectAccountNumber;

        return dirPartyTable.PartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAssociatedPartyNumberForContactPerson</Name>
				<Source><![CDATA[
    private DirPartyNumber getAssociatedPartyNumberForContactPerson(DirPartyNumber _contactPersonPartyNumber)
    {
        return _contactPersonPartyNumber;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityDataSourceToFieldMapping</Name>
				<Source><![CDATA[
    public static container getEntityDataSourceToFieldMapping(container mapping)
    {
        // Any adjustments to this mapping can impact the logic in the IBusinessEventsTableToEntityRecordIdSelector implementations.
        // Verify any changes made against those implementations as they may have a dependency on the context provided.
        mapping += [[tablestr(DirPartyBaseEntity), tablenum(LogisticsPostalAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryPostalAddressRecId)],
                    [identifierStr(DirPartyBaseEntity), tablenum(DirPartyTable), fieldstr(smmContactPersonCDSV2Entity, PrimaryAddressLocation)],
                    [identifierStr(DirPartyBaseEntity1), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactEmailRecordId)],
                    [identifierStr(DirPartyBaseEntity2), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactFaxRecordId)],
                    [identifierStr(DirPartyBaseEntity3), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactPhoneRecordId)],
                    [identifierStr(DirPartyBaseEntity4), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactFacebookRecordId)],
                    [identifierStr(DirPartyBaseEntity5), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactTwitterRecordId)],
                    [identifierStr(DirPartyBaseEntity6), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactURLRecordId)],
                    [identifierStr(DirPartyBaseEntity7), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactLinkedInRecordId)],
                    [identifierStr(DirPartyBaseEntity8), tablenum(LogisticsElectronicAddress), fieldstr(smmContactPersonCDSV2Entity, PrimaryContactTelexRecordId)],
                    [identifierStr(DirPartyBaseEntity9), tablenum(DirPartyTable), fieldstr(smmContactPersonCDSV2Entity, PartyRecordId)]];

        return mapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrided the method to skip the number sequence validation for ContactPersonID field to allow creation of contacts from CDS in FO with a different number format
    /// </summary>
    /// <param name = "_entityCtx">Entity runtime context</param>
    /// <param name = "_dataSourceCtx">Entity data source runtime context</param>
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(smmContactPersonCDSV2Entity, smmContactPersonV2Entity):
                if (this.ContactPersonId)
                {
                    _dataSourceCtx.getBuffer().skipNumberSequenceCheck(true);
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<DeveloperDocumentation>@SalesAndMarketing:Developer_smmContactPersonCDSV2Entity</DeveloperDocumentation>
	<FormRef>ContactPerson</FormRef>
	<Label>@SalesAndMarketing:DataEntity_smmContactPersonCDSV2Entity</Label>
	<Tags>Common data service Contacts</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>smmContactPersonCDSV2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CDSContactPersonsV2</PublicCollectionName>
	<PublicEntityName>CDSContactPersonV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContactPersonPartyNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BirthDay</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BirthMonth</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BirthYear</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressCountryRegionISOCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressLocationRoles</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmploymentDepartment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Notes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Gender</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FirstName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GovernmentIdentificationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsReceivingDirectMail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaritalStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MiddleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonPartyType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryEmailAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryPhoneNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryFacebook</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryLinkedIn</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryTwitter</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryFaxNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DecisionMakingRoleCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EmploymentProfession</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInactive</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LastName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrimaryURL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonResponsiblePersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsContactPersonExternallyMaintained</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SpouseName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssociatedContactType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssociatedContactNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonPartyNumber</Name>
			<DataField>ContactPersonPartyNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssociatedPartyNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AssociatedPartyNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthDay</Name>
			<DataField>BirthDay</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthMonth</Name>
			<DataField>BirthMonth</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthYear</Name>
			<DataField>BirthYear</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCity</Name>
			<DataField>PrimaryAddressCity</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>PrimaryAddressCountryRegionId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountryRegionISOCode</Name>
			<DataField>PrimaryAddressCountryRegionISOCode</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountyId</Name>
			<DataField>PrimaryAddressCountyId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressDescription</Name>
			<DataField>PrimaryAddressDescription</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocationRoles</Name>
			<DataField>PrimaryAddressLocationRoles</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStateId</Name>
			<DataField>PrimaryAddressStateId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreet</Name>
			<DataField>PrimaryAddressStreet</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreetNumber</Name>
			<DataField>PrimaryAddressStreetNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressZipCode</Name>
			<DataField>PrimaryAddressZipCode</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentDepartment</Name>
			<DataField>EmploymentDepartment</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Notes</Name>
			<DataField>Notes</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Gender</Name>
			<DataField>Gender</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FirstName</Name>
			<DataField>FirstName</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GovernmentIdentificationNumber</Name>
			<DataField>GovernmentIdentificationNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsReceivingDirectMail</Name>
			<DataField>IsReceivingDirectMail</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaritalStatus</Name>
			<DataField>MaritalStatus</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MiddleName</Name>
			<DataField>MiddleName</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonPartyType</Name>
			<DataField>ContactPersonPartyType</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryEmailAddress</Name>
			<DataField>PrimaryEmailAddress</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPhoneNumber</Name>
			<DataField>PrimaryPhoneNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFaxNumber</Name>
			<DataField>PrimaryFaxNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFacebook</Name>
			<DataField>PrimaryFacebook</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryLinkedIn</Name>
			<DataField>PrimaryLinkedIn</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTwitter</Name>
			<DataField>PrimaryTwitter</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecisionMakingRoleCode</Name>
			<DataField>DecisionMakingRoleCode</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentProfession</Name>
			<DataField>EmploymentProfession</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInactive</Name>
			<DataField>IsInactive</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastName</Name>
			<DataField>LastName</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryURL</Name>
			<DataField>PrimaryURL</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonResponsiblePersonnelNumber</Name>
			<DataField>ContactPersonResponsiblePersonnelNumber</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsContactPersonExternallyMaintained</Name>
			<DataField>IsContactPersonExternallyMaintained</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SpouseName</Name>
			<DataField>SpouseName</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>AssociatedContactType</Name>
			<ComputedFieldMethod>associatedContactTypeDefinition</ComputedFieldMethod>
			<EnumType>smmContactPersonCDSAssociatedContactType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>AssociatedContactNumber</Name>
			<ComputedFieldMethod>associatedContactNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>smmContactPersonCDSAssociatedContactNumber</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonId</Name>
			<Mandatory>No</Mandatory>
			<DataField>ContactPersonId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPostalAddressRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryPostalAddressRecId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactEmailRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactEmailRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactFaxRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactFaxRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactLinkedInRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactLinkedInRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactTwitterRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactTwitterRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactFacebookRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactFacebookRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactPhoneRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactPhoneRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactTelexRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactTelexRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactURLRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactURLRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocation</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryAddressLocation</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PartyRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PartyRecordId</DataField>
			<DataSource>smmContactPersonV2Entity</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ContactPersonPartyNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AssociatedContactType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AssociatedContactNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
		<AxDataEntityViewKey>
			<Name>ContactPersonIdKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ContactPersonId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>CDSParty</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>DirPartyCDSEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Party</RelatedDataEntityRole>
			<Role>ContactPerson</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ContactPersonPartyNumber</Field>
					<RelatedField>PartyNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>smmContactPersonV2Entity</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>smmContactPersonV2Entity</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>ContactForParty</Field>
								<JoinDataSource>smmContactPersonV2Entity</JoinDataSource>
								<RelatedField>Party</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>VendTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>VendTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>ContactForParty</Field>
								<JoinDataSource>smmContactPersonV2Entity</JoinDataSource>
								<RelatedField>Party</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ContactPerson</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ContactPerson</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>ContactForParty</Field>
								<JoinDataSource>smmContactPersonV2Entity</JoinDataSource>
								<RelatedField>Party</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>smmBusRelTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>smmBusRelTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ContactForParty</Field>
								<JoinDataSource>smmContactPersonV2Entity</JoinDataSource>
								<RelatedField>Party</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>