<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventProductSpecificOrderSettingsV3Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventProductSpecificOrderSettingsV3Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventDim):
                _dataSourceCtx.setBuffer(this.getOrCreateInventDim());
                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, DefaultInventDim):
                if (this.IsDefaultInventoryStorageDimensionOverridden || this.isDefaultSetup())
                {
                    _dataSourceCtx.setBuffer(this.getOrCreateLocationDim(this.InventorySiteId, this.InventoryWarehouseId));
                }
                else
                {
                    _dataSourceCtx.setBuffer(this.inventDimDefaultFromDefault(InventItemOrderSetupType::Invent));
                }

                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, PurchDefaultInventDim):
                if (this.IsDefaultProcurementStorageDimensionOverridden || this.isDefaultSetup())
                {
                    _dataSourceCtx.setBuffer(this.getOrCreateLocationDim(this.ProcurementSiteId, this.ProcurementWarehouseId));
                }
                else
                {
                    _dataSourceCtx.setBuffer(this.inventDimDefaultFromDefault(InventItemOrderSetupType::Purch));
                }

                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, SalesDefaultInventDim):
                if (this.IsDefaultSalesStorageDimensionOverridden || this.isDefaultSetup())
                {
                    _dataSourceCtx.setBuffer(this.getOrCreateLocationDim(this.SalesSiteId, this.SalesWarehouseId));
                }
                else
                {
                    _dataSourceCtx.setBuffer(this.inventDimDefaultFromDefault(InventItemOrderSetupType::Sales));
                }

                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemInventSetup):
                InventItemInventSetup inventSetup = _dataSourceCtx.getBuffer();

                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    inventSetup.InventDimId = this.getOrCreateInventDim().InventDimId;
                    inventSetup.ItemId      = this.ItemNumber;
                    inventSetup.Sequence    = this.OrderSettingsRank;
                }

                boolean isDefaultInventSetup = inventSetup.isDefault();

                if (isDefaultInventSetup)
                {
                    inventSetup.OverrideDefaultStorageDimensions = NoYes::No;
                }
                else if (!isDefaultInventSetup && !inventSetup.OverrideDefaultStorageDimensions)
                {
                    inventSetup.InventItemOrderSetupMap::initInventDimDefaultFromDefault(inventSetup.inventDim());
                }

                if (this.AreInventoryDefaultOrderSettingsOverridden)
                {
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryOrderPromisingMethod)))
                    {
                        inventSetup.DeliveryDateControlType = this.InventoryOrderPromisingMethod;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryATPDelayedDemandOffsetDays)))
                    {
                        inventSetup.ATPApplyDemandTimeFence = this.InventoryATPDelayedDemandOffsetDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryATPDelayedSupplyOffsetDays)))
                    {
                        inventSetup.ATPApplySupplyTimeFence = this.InventoryATPDelayedSupplyOffsetDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryATPBackwardDemandTimeFenceDays)))
                    {
                        inventSetup.ATPBackwardDemandTimeFence = this.InventoryATPBackwardDemandTimeFenceDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryATPBackwardSupplyTimeFenceDays)))
                    {
                        inventSetup.ATPBackwardSupplyTimeFence = this.InventoryATPBackwardSupplyTimeFenceDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsInventoryATPIncludingPlannedOrders)))
                    {
                        inventSetup.ATPInclPlannedOrders = this.IsInventoryATPIncludingPlannedOrders;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryATPTimeFenceDays)))
                    {
                        inventSetup.ATPTimeFence = this.InventoryATPTimeFenceDays;
                    }
                }

                if(this.AreInventoryDefaultOrderSettingsOverridden || isDefaultInventSetup)
                {
                    if(this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsInventoryUsingWorkingDays)))
                    {
                        inventSetup.CalendarDays = this.IsInventoryUsingWorkingDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MaximumInventoryOrderQuantity)))
                    {
                        inventSetup.HighestQty = this.MaximumInventoryOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MinimumInventoryOrderQuantity)))
                    {
                        inventSetup.LowestQty = this.MinimumInventoryOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, StandardInventoryOrderQuantity)))
                    {
                        inventSetup.StandardQty = this.StandardInventoryOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryQuantityMultiples)))
                    {
                        inventSetup.MultipleQty = this.InventoryQuantityMultiples;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsInventoryProcessingStopped)))
                    {
                        inventSetup.Stopped = this.IsInventoryProcessingStopped;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, InventoryLeadTimeDays)))
                    {
                        inventSetup.LeadTime = this.InventoryLeadTimeDays;
                    }
                }

                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemPurchSetup):
                InventItemPurchSetup purchSetup = _dataSourceCtx.getBuffer();

                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    purchSetup.InventDimId = this.getOrCreateInventDim().InventDimId;
                }
                
                boolean isDefaultProcurementSetup = purchSetup.isDefault();

                if (isDefaultProcurementSetup)
                {
                    purchSetup.OverrideDefaultStorageDimensions = NoYes::No;
                }
                else if (!isDefaultProcurementSetup && !purchSetup.OverrideDefaultStorageDimensions)
                {
                    purchSetup.InventItemOrderSetupMap::initInventDimDefaultFromDefault(purchSetup.inventDim());
                }

                if(this.AreProcurementDefaultOrderSettingsOverridden || isDefaultProcurementSetup)
                {
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsProcurementUsingWorkingDays)))
                    {
                        purchSetup.CalendarDays = this.IsProcurementUsingWorkingDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MaximumProcurementOrderQuantity)))
                    {
                        purchSetup.HighestQty = this.MaximumProcurementOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MinimumProcurementOrderQuantity)))
                    {
                        purchSetup.LowestQty = this.MinimumProcurementOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, StandardProcurementOrderQuantity)))
                    {
                        purchSetup.StandardQty = this.StandardProcurementOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, ProcurementQuantityMultiples)))
                    {
                        purchSetup.MultipleQty = this.ProcurementQuantityMultiples;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsProcurementProcessingstopped)))
                    {
                        purchSetup.Stopped = this.IsProcurementProcessingstopped;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, ProcurementLeadTimeDays)))
                    {
                        purchSetup.LeadTime = this.ProcurementLeadTimeDays;
                    }
                }

                break;
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemSalesSetup):
                InventItemSalesSetup salesSetup = _dataSourceCtx.getBuffer();

                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    salesSetup.InventDimId  = this.getOrCreateInventDim().InventDimId;
                    salesSetup.ItemId       = this.ItemNumber;
                    salesSetup.Sequence     = this.OrderSettingsRank;
                }

                boolean isDefaultSalesSetup = salesSetup.isDefault();

                if (isDefaultSalesSetup)
                {
                    salesSetup.OverrideDefaultStorageDimensions = NoYes::No;
                }
                else if (!isDefaultSalesSetup && !salesSetup.OverrideDefaultStorageDimensions)
                {
                    salesSetup.InventItemOrderSetupMap::initInventDimDefaultFromDefault(salesSetup.inventDim());
                }

                if (this.AreSalesDefaultOrderSettingsOverridden)
                {
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesOrderPromisingMethod)))
                    {
                        salesSetup.DeliveryDateControlType = this.SalesOrderPromisingMethod;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesATPDelayedDemandOffsetDays)))
                    {
                        salesSetup.ATPApplyDemandTimeFence = this.SalesATPDelayedDemandOffsetDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesATPDelayedSupplyOffsetDays)))
                    {
                        salesSetup.ATPApplySupplyTimeFence = this.SalesATPDelayedSupplyOffsetDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesATPBackwardDemandTimeFenceDays)))
                    {
                        salesSetup.ATPBackwardDemandTimeFence = this.SalesATPBackwardDemandTimeFenceDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesATPBackwardSupplyTimeFenceDays)))
                    {
                        salesSetup.ATPBackwardSupplyTimeFence = this.SalesATPBackwardSupplyTimeFenceDays;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsSalesATPIncludingPlannedOrders)))
                    {
                        salesSetup.ATPInclPlannedOrders = this.IsSalesATPIncludingPlannedOrders;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesATPTimeFenceDays)))
                    {
                        salesSetup.ATPTimeFence = this.SalesATPTimeFenceDays;
                    }
                }
                
                if(this.AreSalesDefaultOrderSettingsOverridden || isDefaultSalesSetup)
                {
                    if(this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MaximumSalesOrderQuantity)))
                    {
                        salesSetup.HighestQty = this.MaximumSalesOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, MinimumSalesOrderQuantity)))
                    {
                        salesSetup.LowestQty = this.MinimumSalesOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, StandardSalesOrderQuantity)))
                    {
                        salesSetup.StandardQty = this.StandardSalesOrderQuantity;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesQuantityMultiples)))
                    {
                        salesSetup.MultipleQty = this.SalesQuantityMultiples;
                    }
                    if (this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsSalesProcessingStopped)))
                    {
                        salesSetup.Stopped = this.IsSalesProcessingStopped;
                    }

                    if (salesSetup.isDefault() && this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, IsSalesLeadTimeOverridden)))
                    {
                        salesSetup.OverrideSalesLeadTime = this.IsSalesLeadTimeOverridden;
                    }

                    if((!isDefaultSalesSetup || salesSetup.OverrideSalesLeadTime) && this.isFieldSet(fieldNum(InventProductSpecificOrderSettingsV3Entity, SalesLeadTimeDays)))
                    {
                        salesSetup.LeadTime = this.SalesLeadTimeDays;
                    }
                }

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventDim):
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, DefaultInventDim):
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, PurchDefaultInventDim):
            case dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, SalesDefaultInventDim):
                // Read only datasource was handled by mapEntityToDataSource(...)
                return true;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static Query defaultCTQuery()
    {
        Query inventItemInventSetupQuery = new Query();

        var inventItemInventSetupDS = inventItemInventSetupQuery.addDataSource(tableNum(InventItemInventSetup));
  
        // InventDim should not change.
        
        var inventItemPurchSetupDS = inventItemInventSetupDS.addDataSource(tableNum(InventItemPurchSetup));
        inventItemPurchSetupDS.addLink(fieldNum(InventItemInventSetup, ItemId), fieldNum(InventItemPurchSetup, ItemId));
        inventItemPurchSetupDS.addLink(fieldNum(InventItemInventSetup, InventDimId), fieldNum(InventItemPurchSetup, InventDimId));
        inventItemPurchSetupDS.joinMode(JoinMode::InnerJoin);
        inventItemPurchSetupDS.fetchMode(QueryFetchMode::One2One);

        var inventItemSalesSetupDS = inventItemInventSetupDS.addDataSource(tableNum(InventItemSalesSetup));
        inventItemSalesSetupDS.addLink(fieldNum(InventItemInventSetup, ItemId), fieldNum(InventItemSalesSetup, ItemId));
        inventItemSalesSetupDS.addLink(fieldNum(InventItemInventSetup, InventDimId), fieldNum(InventItemSalesSetup, InventDimId));
        inventItemSalesSetupDS.joinMode(JoinMode::InnerJoin);
        inventItemSalesSetupDS.fetchMode(QueryFetchMode::One2One);

        return inventItemInventSetupQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateInventDim</Name>
				<Source><![CDATA[
    private InventDim getOrCreateInventDim()
    {
        InventDim inventDim = InventProductDimension::createInventDimFromTable(this);
        inventDim.InventSiteId = this.OperationalSiteId;

        this.validateInventoryDimensions(inventDim);

        inventDim = InventDim::findOrCreate(inventDim);

        //FieldState is set to 'Set' to avoid the framework in thinking that the mandatory field site is not set by the user.
        inventDim.fieldState(fieldNum(InventDim, InventSiteId), FieldState::Set);
        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOrCreateLocationDim</Name>
				<Source><![CDATA[
    private InventDim getOrCreateLocationDim(InventSiteId _siteId, InventLocationId _locationId)
    {
        InventDim inventDim;
        InventDim.InventSiteId = _siteId;
        inventDim.InventLocationId = _locationId;

        this.validateInventoryDimensions(inventDim);

        inventDim = InventDim::findOrCreate(inventDim);
        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventoryDimensions</Name>
				<Source><![CDATA[
    private void validateInventoryDimensions(InventDim _inventDim)
    {
        Set allowEmptyFields = new Set(Types::Integer);
        allowEmptyFields.add(-1);
        if (!_inventDim.checkDimFieldsValid(this.ItemNumber, InventDim::findOrCreateBlank(), true, allowEmptyFields, true))
        {
            throw error("@SYS304643");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStoppedForSalesDefinition</Name>
				<Source><![CDATA[
    private static str isStoppedForSalesDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, Stopped),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsSalesProcessingStopped));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesLeadTimeDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesLeadTimeDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, LeadTime),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesLeadTimeDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesQuantityMultiplesDefinition</Name>
				<Source><![CDATA[
    private static str salesQuantityMultiplesDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, MultipleQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesQuantityMultiples));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumSalesOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str maximumSalesOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, HighestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MaximumSalesOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumSalesOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str minimumSalesOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, LowestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MinimumSalesOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardSalesOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str standardSalesOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, StandardQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, StandardSalesOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderPromisingMethodDefinition</Name>
				<Source><![CDATA[
    private static str salesOrderPromisingMethodDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, DeliveryDateControlType),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesOrderPromisingMethod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPDelayedDemandOffsetDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesATPDelayedDemandOffsetDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPApplyDemandTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesATPDelayedDemandOffsetDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPDelayedSupplyOffsetDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesATPDelayedSupplyOffsetDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPApplySupplyTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesATPDelayedSupplyOffsetDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPBackwardDemandTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesATPBackwardDemandTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPBackwardDemandTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesATPBackwardDemandTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPBackwardSupplyTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesATPBackwardSupplyTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPBackwardSupplyTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesATPBackwardSupplyTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSalesATPIncludingPlannedOrdersDefinition</Name>
				<Source><![CDATA[
    private static str isSalesATPIncludingPlannedOrdersDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPInclPlannedOrders),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsSalesATPIncludingPlannedOrders));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesATPTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str salesATPTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::salesDefaulting(
            fieldStr(InventItemSalesSetup, ATPTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, SalesATPTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStoppedForProcurementDefinition</Name>
				<Source><![CDATA[
    private static str isStoppedForProcurementDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, Stopped),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsProcurementProcessingstopped));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useWorkingDaysForProcurementDefinition</Name>
				<Source><![CDATA[
    private static str useWorkingDaysForProcurementDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, CalendarDays),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsProcurementUsingWorkingDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>procurementLeadTimeDaysDefinition</Name>
				<Source><![CDATA[
    private static str procurementLeadTimeDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, LeadTime),
            fieldStr(InventProductDefaultOrderSettingsEntity, ProcurementLeadTimeDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>procurementQuantityMultiplesDefinition</Name>
				<Source><![CDATA[
    private static str procurementQuantityMultiplesDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, MultipleQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, ProcurementQuantityMultiples));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumProcurementOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str maximumProcurementOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, HighestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MaximumProcurementOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumProcurementOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str minimumProcurementOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, LowestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MinimumProcurementOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardProcurementOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str standardProcurementOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::procurementDefaulting(
            fieldStr(InventItemPurchSetup, StandardQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, StandardProcurementOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStoppedForInventoryDefinition</Name>
				<Source><![CDATA[
    private static str isStoppedForInventoryDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, Stopped),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsInventoryProcessingStopped));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryLeadTimeDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryLeadTimeDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, LeadTime),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryLeadTimeDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryQuantityMultiplesDefinition</Name>
				<Source><![CDATA[
    private static str inventoryQuantityMultiplesDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, MultipleQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryQuantityMultiples));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumInventoryOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str maximumInventoryOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, HighestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MaximumInventoryOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumInventoryOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str minimumInventoryOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, LowestQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, MinimumInventoryOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>standardInventoryOrderQuantityDefinition</Name>
				<Source><![CDATA[
    private static str standardInventoryOrderQuantityDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, StandardQty),
            fieldStr(InventProductDefaultOrderSettingsEntity, StandardInventoryOrderQuantity));
    }

]]></Source>
			</Method>
			<Method>
				<Name>useWorkingDaysForInventoryDefinition</Name>
				<Source><![CDATA[
    private static str useWorkingDaysForInventoryDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, CalendarDays),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsInventoryUsingWorkingDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryOrderPromisingMethodDefinition</Name>
				<Source><![CDATA[
    private static str inventoryOrderPromisingMethodDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, DeliveryDateControlType),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryOrderPromisingMethod));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryATPDelayedDemandOffsetDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryATPDelayedDemandOffsetDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPApplyDemandTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryATPDelayedDemandOffsetDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryATPDelayedSupplyOffsetDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryATPDelayedSupplyOffsetDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPApplySupplyTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryATPDelayedSupplyOffsetDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryATPBackwardDemandTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryATPBackwardDemandTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPBackwardDemandTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryATPBackwardDemandTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryATPBackwardSupplyTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryATPBackwardSupplyTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPBackwardSupplyTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryATPBackwardSupplyTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isInventoryATPIncludingPlannedOrdersDefinition</Name>
				<Source><![CDATA[
    private static str isInventoryATPIncludingPlannedOrdersDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPInclPlannedOrders),
            fieldStr(InventProductDefaultOrderSettingsEntity, IsInventoryATPIncludingPlannedOrders));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryATPTimeFenceDaysDefinition</Name>
				<Source><![CDATA[
    private static str inventoryATPTimeFenceDaysDefinition()
    {
        return InventProductSpecificOrderSettingsV3Entity::inventoryDefaulting(
            fieldStr(InventItemInventSetup, ATPTimeFence),
            fieldStr(InventProductDefaultOrderSettingsEntity, InventoryATPTimeFenceDays));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventoryDefaulting</Name>
				<Source><![CDATA[
    private static str inventoryDefaulting(FieldName _inventoryFieldName, FieldName _defaultFieldName)
    {
        return InventProductSpecificOrderSettingsV3Entity::fieldDefaulting(
            dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemInventSetup),
            _inventoryFieldName,
            _defaultFieldName,
            fieldStr(InventItemInventSetup, Override));
    }

]]></Source>
			</Method>
			<Method>
				<Name>procurementDefaulting</Name>
				<Source><![CDATA[
    private static str procurementDefaulting(FieldName _procurementFieldName, FieldName _defaultFieldName)
    {
        return InventProductSpecificOrderSettingsV3Entity::fieldDefaulting(
            dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemPurchSetup),
            _procurementFieldName,
            _defaultFieldName,
            fieldStr(InventItemPurchSetup, Override));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesDefaulting</Name>
				<Source><![CDATA[
    private static str salesDefaulting(FieldName _salesFieldName, FieldName _defaultFieldName)
    {
        return InventProductSpecificOrderSettingsV3Entity::fieldDefaulting(
            dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventItemSalesSetup),
            _salesFieldName,
            _defaultFieldName,
            fieldStr(InventItemSalesSetup, Override));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldDefaulting</Name>
				<Source><![CDATA[
    private static str fieldDefaulting(
        DataSourceName _sourceDataSourceName,
        FieldName _sourceFieldName,
        FieldName _defaultFieldName,
        FieldName _overrideFieldName)
    {
        TableName entityName = tablestr(InventProductSpecificOrderSettingsV3Entity);

        str overrideFieldExpression = SysComputedColumn::returnField(
                                        entityName,
                                        _sourceDataSourceName,
                                        _overrideFieldName);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(overrideFieldExpression, SysComputedColumn::returnLiteral(NoYes::Yes)),
            SysComputedColumn::returnField(
                    entityName,
                    _sourceDataSourceName,
                    _sourceFieldName),
            SysComputedColumn::returnField(
                    entityName,
                    dataEntityDataSourceStr(InventProductSpecificOrderSettingsV3Entity, InventProductDefaultOrderSettingsEntity),
                    _defaultFieldName));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDefaultSetup</Name>
				<Source><![CDATA[
    private boolean isDefaultSetup()
    {
        return this.getOrCreateInventDim().inventDimId == InventDim::inventDimIdBlank();
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventDimDefaultFromDefault</Name>
				<Source><![CDATA[
    private InventDim inventDimDefaultFromDefault(InventItemOrderSetupType _inventItemOrderSetupType)
    {
        InventItemOrderSetupMap defaultSetting = InventItemOrderSetupMap::findDefault(this.ItemNumber, _inventItemOrderSetupType);
        InventDim inventDimDefault = defaultSetting.inventDimDefault();

        if (this.OperationalSiteId != '' && this.OperationalSiteId != inventDimDefault.InventSiteId)
        {
            inventDimDefault = InventDim::findOrCreateBlank();
        } 

        return inventDimDefault;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:InventProductDefaultOrderSettingsEntityV3DevDoc</DeveloperDocumentation>
	<FormRef>InventItemOrderSetup</FormRef>
	<Label>@SCM:Entity_Title_ProductSpecificDefaultOrderSettingsV3</Label>
	<Tags>Order setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventProductSpecificOrderSettingsV3Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProductSpecificOrderSettingsV3</PublicCollectionName>
	<PublicEntityName>ProductSpecificOrderSettingV3</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OperationalSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderSettingsRank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventorySiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreInventoryDefaultOrderSettingsOverridden</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryOrderPromisingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryATPDelayedDemandOffsetDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryATPDelayedSupplyOffsetDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryATPBackwardDemandTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryATPBackwardSupplyTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInventoryATPIncludingPlannedOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryATPTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInventoryUsingWorkingDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryLeadTimeDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumInventoryOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumInventoryOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StandardInventoryOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryQuantityMultiples</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInventoryProcessingStopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInventoryWarehouseMandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreProcurementDefaultOrderSettingsOverridden</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProcurementProcessingstopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProcurementUsingWorkingDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementQuantityMultiples</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumProcurementOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumProcurementOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StandardProcurementOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementLeadTimeDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProcurementWarehouseMandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreSalesDefaultOrderSettingsOverridden</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderPromisingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesATPDelayedDemandOffsetDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesATPDelayedSupplyOffsetDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesATPBackwardDemandTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesATPBackwardSupplyTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesATPIncludingPlannedOrders</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesATPTimeFenceDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesProcessingStopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuantityMultiples</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumSalesOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumSalesOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StandardSalesOrderQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesLeadTimeDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesWarehouseMandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesSiteMandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInventorySiteMandatory</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsProcurementSiteMandatory</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderSettingsRank</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Sequence</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OperationalSiteId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ConfigId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreInventoryDefaultOrderSettingsOverridden</Name>
			<DataField>Override</DataField>
			<DataSource>InventItemInventSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>InventoryOrderPromisingMethod</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryOrderPromisingMethodDefinition</ComputedFieldMethod>
			<EnumType>SalesDeliveryDateControlType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryATPDelayedDemandOffsetDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryATPDelayedDemandOffsetDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPApplyDemandTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryATPDelayedSupplyOffsetDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryATPDelayedSupplyOffsetDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPApplySupplyTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryATPBackwardDemandTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryATPBackwardDemandTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPBackwardDemandTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryATPBackwardSupplyTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryATPBackwardSupplyTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPBackwardSupplyTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsInventoryATPIncludingPlannedOrders</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isInventoryATPIncludingPlannedOrdersDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPInclPlannedOrders</ExtendedDataType>
			<EnumType>boolean</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryATPTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryATPTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsInventoryUsingWorkingDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>useWorkingDaysForInventoryDefinition</ComputedFieldMethod>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>InventoryLeadTimeDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryLeadTimeDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>LeadTimeInventDefault</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumInventoryOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumInventoryOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyHighest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumInventoryOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumInventoryOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyLowest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>StandardInventoryOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>standardInventoryOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyStandard</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>InventoryQuantityMultiples</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventoryQuantityMultiplesDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyMultiples</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsInventoryProcessingStopped</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isStoppedForInventoryDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemStopped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>DefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInventoryWarehouseMandatory</Name>
			<DataField>MandatoryInventLocation</DataField>
			<DataSource>InventItemInventSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreProcurementDefaultOrderSettingsOverridden</Name>
			<DataField>Override</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsProcurementProcessingstopped</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isStoppedForProcurementDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemStopped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsProcurementUsingWorkingDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>useWorkingDaysForProcurementDefinition</ComputedFieldMethod>
			<ExtendedDataType>CalendarDays</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>ProcurementQuantityMultiples</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>procurementQuantityMultiplesDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyMultiples</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumProcurementOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumProcurementOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyHighest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumProcurementOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumProcurementOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyLowest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>StandardProcurementOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>standardProcurementOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyStandard</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>ProcurementLeadTimeDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>procurementLeadTimeDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>LeadTimeInventDefault</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProcurementWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>PurchDefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsProcurementWarehouseMandatory</Name>
			<DataField>MandatoryInventLocation</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreSalesDefaultOrderSettingsOverridden</Name>
			<DataField>Override</DataField>
			<DataSource>InventItemSalesSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SalesOrderPromisingMethod</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesOrderPromisingMethodDefinition</ComputedFieldMethod>
			<EnumType>SalesDeliveryDateControlType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesATPDelayedDemandOffsetDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesATPDelayedDemandOffsetDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPApplyDemandTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesATPDelayedSupplyOffsetDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesATPDelayedSupplyOffsetDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPApplySupplyTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesATPBackwardDemandTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesATPBackwardDemandTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPBackwardDemandTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesATPBackwardSupplyTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesATPBackwardSupplyTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPBackwardSupplyTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsSalesATPIncludingPlannedOrders</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isSalesATPIncludingPlannedOrdersDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPInclPlannedOrders</ExtendedDataType>
			<EnumType>boolean</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesATPTimeFenceDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesATPTimeFenceDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>SalesATPTimeFence</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsSalesProcessingStopped</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isStoppedForSalesDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemStopped</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>SalesQuantityMultiples</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesQuantityMultiplesDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyMultiples</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumSalesOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumSalesOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyHighest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumSalesOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumSalesOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyLowest</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>StandardSalesOrderQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>standardSalesOrderQuantityDefinition</ComputedFieldMethod>
			<ExtendedDataType>QtyStandard</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>SalesLeadTimeDays</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesLeadTimeDaysDefinition</ComputedFieldMethod>
			<ExtendedDataType>LeadTimeInventDefault</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>SalesDefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesWarehouseMandatory</Name>
			<DataField>MandatoryInventLocation</DataField>
			<DataSource>InventItemSalesSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesSiteMandatory</Name>
			<DataField>MandatoryInventSite</DataField>
			<DataSource>InventItemSalesSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>SalesDefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProcurementSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>PurchDefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInventorySiteMandatory</Name>
			<DataField>MandatoryInventSite</DataField>
			<DataSource>InventItemInventSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventorySiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>DefaultInventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsProcurementSiteMandatory</Name>
			<DataField>MandatoryInventSite</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesLeadTimeOverridden</Name>
			<DataField>OverrideSalesLeadTime</DataField>
			<DataSource>InventItemSalesSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDefaultProcurementStorageDimensionOverridden</Name>
			<DataField>OverrideDefaultStorageDimensions</DataField>
			<DataSource>InventItemPurchSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDefaultSalesStorageDimensionOverridden</Name>
			<DataField>OverrideDefaultStorageDimensions</DataField>
			<DataSource>InventItemSalesSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDefaultInventoryStorageDimensionOverridden</Name>
			<DataField>OverrideDefaultStorageDimensions</DataField>
			<DataSource>InventItemInventSetup</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OperationalSiteId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductConfigurationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductColorId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductSizeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductStyleId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductVersionId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReleasedProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReleasedProductV2</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResReleasedProductV2Entity_ItemNumber</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductColor</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductColorEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductColor</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductColorEntity_ColorId</Name>
					<Field>ProductColorId</Field>
					<RelatedField>ColorId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductColorKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductConfiguration</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductConfigurationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductConfiguration</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductConfigurationEntity_ConfigurationId</Name>
					<Field>ProductConfigurationId</Field>
					<RelatedField>ConfigurationId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductSize</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductSizeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductSize</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductSizeEntity_SizeId</Name>
					<Field>ProductSizeId</Field>
					<RelatedField>SizeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductSizeKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductStyle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductStyleEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductStyle</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductStyleEntity_StyleId</Name>
					<Field>ProductStyleId</Field>
					<RelatedField>StyleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductStyleKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductVersion</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductVersionEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductVersion</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResProductVersionEntity_VersionId</Name>
					<Field>ProductVersionId</Field>
					<RelatedField>VersionId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductVersionKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>OperationalSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOperationalSiteEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>OperationalSite</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>OperationalSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SalesSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOperationalSiteEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SalesSite</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>SalesSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SalesWarehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SalesWarehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>SalesWarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProcurementSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOperationalSiteEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProcurementSite</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProcurementSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProcurementWarehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProcurementWarehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>ProcurementWarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InventorySite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOperationalSiteEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>InventorySite</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>InventorySiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InventoryWarehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>InventoryWarehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>InventoryWarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DVReleasedProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductDVEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DVReleasedProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProductSpecificOrderSettingsV3</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResReleasedProductDVEntity_ItemNumber</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventItemInventSetup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventItemInventSetup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultInventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>DefaultInventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventItemPurchSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventItemPurchSetup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchDefaultInventDim</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>InventItemPurchSetup</JoinDataSource>
										<JoinRelationName>DefaultInventDim</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>InventItemPurchSetup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventItemSalesSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventItemSalesSetup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesDefaultInventDim</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDim</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>InventItemSalesSetup</JoinDataSource>
										<JoinRelationName>DefaultInventDim</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<JoinRelationName>InventItemSalesSetup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventProductDefaultOrderSettingsEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventProductDefaultOrderSettingsEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ItemId</Field>
								<JoinDataSource>InventItemInventSetup</JoinDataSource>
								<RelatedField>ItemNumber</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>