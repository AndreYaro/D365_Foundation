<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailRecoListProductsEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailRecoListProductsEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds out the product number based the element Id. Product number is computed field.
    /// </summary>
    /// <returns>Returns the Product number.</returns>
    private static str productNumber()
    {
        SysDictTable dictTableProduct = new SysDictTable(tableNum(EcoResProduct));

        return strFmt('SELECT %2 FROM %1 WHERE %1.%3 = %4',
            dictTableProduct.name(DbBackend::Sql),
            dictTableProduct.fieldName(fieldNum(EcoResProduct, DisplayProductNumber), DbBackend::Sql),
            dictTableProduct.fieldName(fieldNum(EcoResProduct, RecId), DbBackend::Sql),
            SysComputedColumn::returnField(tablestr(RetailRecoListProductsEntity),
                                            dataEntityDataSourceStr(RetailRecoListProductsEntity, RetailRecoListElementsTable),
                                            fieldstr(RetailRecoListElementsTable, ElementId)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the entity to datasource.
    /// </summary>
    /// <param name = "_entityCtx">The <c>DataEntityRuntimeContext</c> object.</param>
    /// <param name = "_dataSourceCtx">The <c>DataEntityDataSourceRuntimeContext</c> object.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailRecoListProductsEntity, RetailRecoListElementsTable))
        {
            this.ElementId = int642Str(EcoResProduct::findByDisplayProductNumber(this.ProductNumber).RecId);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Validates entity field.
    /// </summary>
    /// <param name = "_fieldIdToCheck">The field Id.</param>
    /// <returns>True, if validation is successful, otherwise false.</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(RetailRecoListProductsEntity, ProductNumber):
                if (this.ElementType == RetailRecoListElementTypeBase::Product)
                {
                    EcoResProduct ecoResProduct;

                    select firstonly RecId from ecoResProduct
                        where ecoResProduct.DisplayProductNumber == this.ProductNumber;

                    if (!ecoResProduct.RecId)
                    {
                        ret = false;

                        // ElementId is a private field, we fill value init using ProductNumber,
                        // If ProductNumber is incorrect then elementId will be empty.
                        error(strFmt("@Retail:RetailRecoListProductsEntityProductNumberNotFoundError", this.ProductNumber));
                    }
                }
                break;
            case fieldNum(RetailRecoListProductsEntity, ElementType):
                if (this.ElementType != RetailRecoListElementTypeBase::Product)
                {
                    ret = false;

                    error("@Retail:RetailRecoListSupportProductRecommendationsError");
                }
                break;
            default:
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailRecoListProductsStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailRecoListElements</PublicCollectionName>
	<PublicEntityName>RetailRecoListElements</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ListId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ListId</DataField>
			<DataSource>RetailRecoListElementsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ElementType</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ElementType</DataField>
			<DataSource>RetailRecoListElementsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ElementId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>ElementId</DataField>
			<DataSource>RetailRecoListElementsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DisplayOrder</Name>
			<DataField>DisplayOrder</DataField>
			<DataSource>RetailRecoListElementsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductNumber</Name>
			<Label>@SYS133863</Label>
			<Mandatory>Yes</Mandatory>
			<ComputedFieldMethod>productNumber</ComputedFieldMethod>
			<StringSize>254</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ListId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ElementType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailRecoListElementsTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailRecoListElementsTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>ElementType</Name>
						<Field>ElementType</Field>
						<Value>Product</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>