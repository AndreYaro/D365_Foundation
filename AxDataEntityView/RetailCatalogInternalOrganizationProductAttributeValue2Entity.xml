<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCatalogInternalOrganizationProductAttributeValue2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// <class>RetailCatalogInternalOrganizationProductAttributeValue2Entity</class> is a data entity which deals with product enrichment. It allows for overridding product attribute values for each internal organization in a catalog.
/// </summary>
public class RetailCatalogInternalOrganizationProductAttributeValue2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override is needed to initialize EcoResValue buffer since EcoResValue is an abstract type. Based on attribute being inserted/updated, the concrete type is initialized.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    /// <param name = "_dataSourceCtx">Datasource context.</param>
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResValue)
            && _dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            EcoResAttribute attribute = EcoResAttribute::findByNameTypeModifier(this.AttributeName, EcoResAttributeType::findByName(this.AttributeTypeName).RecId, EcoResAttributeModifier::Catalog);
            _dataSourceCtx.setBuffer(EcoResValue::makeRecord(attribute.getActualDataType()));
        }
        else
        {
            super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override is needed to manually populate EcoResAttribute and RetailCatalogInternalOrgProductAttribute data sources, since the associated table/view does not have an index.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    /// <param name = "_dataSourceCtx">Datasource context.</param>
    /// <returns>True if successfull; Otherwise, false.</returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (!ret)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResAttribute))
            {
                EcoResAttribute attribute = _dataSourceCtx.getBuffer();
                ret = EcoResAttribute::findByNameTypeModifier(attribute.Name, attribute.AttributeType, EcoResAttributeModifier::Catalog);
            }
            else if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, RetailCatalogInternalOrgProductAttribute))
            {
                RetailCatalogInternalOrgProductAttribute catalogInternalOrgProductAttribute = _dataSourceCtx.getBuffer();
                ret = RetailCatalogInternalOrgProductAttribute::find(catalogInternalOrgProductAttribute.CatalogProduct, catalogInternalOrgProductAttribute.InternalOrganization, catalogInternalOrgProductAttribute.Attribute);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override is needed to associate the unit of measure from AttributeType to EcoResValue. Also, validation is done for bounded and enumerated attributes.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    /// <param name = "_dataSourceCtx">Datasource context.</param>
    /// <returns>True if successfull; Otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResValue))
        {
            EcoResValue value = _dataSourceCtx.getBuffer();

            if (value is EcoResIntValue || value is EcoResFloatValue)
            {
                EcoResAttributeType attributeType =  _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResAttributeType)).getBuffer();
                EcoResAttributeTypeUnitOfMeasure attributeTypeUnitOfMeasure = EcoResAttributeTypeUnitOfMeasure::findByAttributeType(attributeType);

                if (value is EcoResIntValue)
                {
                    EcoResIntValue intValue = value as EcoResIntValue;
                    intValue.IntUnitOfMeasure = attributeTypeUnitOfMeasure.DefaultUnitOfMeasure;
                }
                else if (value is EcoResFloatValue)
                {
                    EcoResFloatValue floatValue = value as EcoResFloatValue;
                    floatValue.FloatUnitOfMeasure = attributeTypeUnitOfMeasure.DefaultUnitOfMeasure;
                }
            }
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResAttributeValue))
        {
            this.validateAttributeValue(_entityCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validation is done for bounded and enumerated attributes.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    /// <param name = "_dataSourceCtx">Datasource context.</param>
    /// <returns>True if successfull; Otherwise, false.</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResAttributeValue))
        {
            this.validateAttributeValue(_entityCtx);
        }

        // Gets the concrete table record for the <c>EcoResValue</c> buffer based on its instance type.
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResValue))
        {
            EcoResValue ecoResValue = _dataSourceCtx.getBuffer();
            ecoResValue = EcoResValue::getConcreteEcoResValueRecord(ecoResValue);
            _dataSourceCtx.setBuffer(ecoResValue);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateAttributeValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates bounded and enumerated attributes.
    /// </summary>
    /// <param name = "_entityCtx">Entity context.</param>
    private void validateAttributeValue(DataEntityRuntimeContext _entityCtx)
    {
        EcoResAttribute attribute =  _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResAttribute)).getBuffer();
        EcoResAttributeType actualType = attribute.getActualAttributeType();
        EcoResValue value = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(RetailCatalogInternalOrganizationProductAttributeValue2Entity, EcoResValue)).getBuffer();
        EcoResAttributeDefaultValueHelper attributeDefaultValueHelper = new EcoResAttributeDefaultValueHelper(actualType);

        if (!attributeDefaultValueHelper.validateDefaultValue(value))
        {
            throw error(strFmt("@Retail:AttributeValueOutOfRange", attribute.Name, actualType.Name));
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<DeveloperDocumentation>@Retail:CatalogInternalOrganizationProductAttributeValue2EntityDevDoc</DeveloperDocumentation>
	<Label>@Retail:CatalogInternalOrgProductAttributeValue2Entity</Label>
	<Tags>Catalog</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailCatalogInternalOrganizationProductAttributeValue2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Merchandising</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailCatalogInternalOrganizationProductAttributeValues2</PublicCollectionName>
	<PublicEntityName>RetailCatalogInternalOrganizationProductAttributeValue2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CatalogNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>CatalogNumber</DataField>
			<DataSource>RetailCatalogProductEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalOrganizationPartyNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>PartyNumber</DataField>
			<DataSource>RetailInternalOrganizationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DisplayProductNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>RetailCatalogProductEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeTypeName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResAttribute</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TextValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>TextValue</DataField>
			<DataSource>EcoResValue_EcoResTextValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyCode</DataField>
			<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyValue</DataField>
			<DataSource>EcoResValue_EcoResCurrencyValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DateTimeValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>DateTimeValue</DataField>
			<DataSource>EcoResValue_EcoResDateTimeValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecimalValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>FloatValue</DataField>
			<DataSource>EcoResValue_EcoResFloatValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecimalUnitOfMeasureSymbol</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>FloatUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntegerValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>IntValue</DataField>
			<DataSource>EcoResValue_EcoResIntValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntegerUnitOfMeasureSymbol</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>IntUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BooleanValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>BooleanValue</DataField>
			<DataSource>EcoResValue_EcoResBooleanValue</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CatalogNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InternalOrganizationPartyNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>DisplayProductNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeTypeName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>RetailCatalogEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailCatalogEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>CatalogNumber</Field>
					<RelatedField>CatalogNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>RetailInternalOrganizationEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailInternalOrganizationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>InternalOrganizationPartyNumber</Field>
					<RelatedField>PartyNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>RetailCatalogInternalOrganizationEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailCatalogInternalOrganizationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>CatalogNumber</Field>
					<RelatedField>CatalogNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>InternalOrganizationPartyNumber</Field>
					<RelatedField>PartyNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>RetailCatalogProductEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailCatalogProductEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>DisplayProductNumber</Field>
					<RelatedField>DisplayProductNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>CatalogNumber</Field>
					<RelatedField>CatalogNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>CurrencyEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CurrencyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DecimalUnitOfMeasureEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DecimalUnitOfMeasureEntity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>DecimalUnitOfMeasureSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>IntegerUnitOfMeasureEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>IntegerUnitOfMeasureEntity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>IntegerUnitOfMeasureSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResAttributeValue</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResAttributeValue</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailCatalogProdInternalOrgInstanceVal</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailCatalogProdInternalOrgInstanceVal</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RetailCatalogProductEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>RetailCatalogProductEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>CatalogProd</Field>
										<JoinDataSource>RetailCatalogProdInternalOrgInstanceVal</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RetailInternalOrganizationEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>RetailInternalOrganizationEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>InternalOrganization</Field>
										<JoinDataSource>RetailCatalogProdInternalOrgInstanceVal</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>EcoResAttributeValue</JoinDataSource>
								<JoinRelationName>InstanceValue</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResAttribute</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResAttribute</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResAttributeType</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResAttributeType</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>AttributeType</Field>
										<JoinDataSource>EcoResAttribute</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AttributeModifier</Name>
								<Field>AttributeModifier</Field>
								<Value>Catalog</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Attribute</Field>
								<JoinDataSource>EcoResAttributeValue</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResValue</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResValue</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>IntUnitOfMeasure</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>IntUnitOfMeasure</Field>
										<JoinDataSource>EcoResValue</JoinDataSource>
										<JoinDerivedTable>EcoResIntValue</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FloatUnitOfMeasure</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>FloatUnitOfMeasure</Field>
										<JoinDataSource>EcoResValue</JoinDataSource>
										<JoinDerivedTable>EcoResFloatValue</JoinDerivedTable>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResBooleanValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResBooleanValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResCurrencyValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResCurrencyValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResDateTimeValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResDateTimeValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResFloatValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResFloatValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResIntValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResIntValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResTextValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResTextValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResValue_EcoResReferenceValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResReferenceValue</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>EcoResAttributeValue</JoinDataSource>
								<JoinRelationName>Value</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailCatalogInternalOrgProductAttribute</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RetailCatalogInternalOrgProductAttribute</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CatalogProd</Field>
								<JoinDataSource>RetailCatalogProdInternalOrgInstanceVal</JoinDataSource>
								<RelatedField>CatalogProduct</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1Copy1</Name>
								<Field>InternalOrganization</Field>
								<JoinDataSource>RetailCatalogProdInternalOrgInstanceVal</JoinDataSource>
								<RelatedField>InternalOrganization</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RecId</Field>
								<JoinDataSource>EcoResAttribute</JoinDataSource>
								<RelatedField>Attribute</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>