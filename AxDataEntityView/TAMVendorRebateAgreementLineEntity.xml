<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TAMVendorRebateAgreementLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TAMVendorRebateAgreementLineEntity extends common
{  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    public static void jumpRefMethod(str _menuItemName, Common _stagingBuffer, Object _callerObj, DataAreaId _dataAreaId)
    {
        changeCompany(_dataAreaId)
        {
            TAMVendorRebateAgreementLineStaging lineStaging = _stagingBuffer as TAMVendorRebateAgreementLineStaging;
            TAMVendRebateAgreement agreement = TAMVendRebateAgreement::find(str2Int64(lineStaging.RebateAgreementId));

            Args args = new Args();
            args.record(agreement);
            args.parm(lineStaging.RebateAgreementId);
                
            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromNetPurchaseAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>FromNetPurchaseAmount</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>FromNetPurchaseAmount</c> column in the entity.
    /// </returns>
    private static str fromNetPurchaseAmountComputedColumnDefinition()
    {
        return TAMVendorRebateAgreementLineEntity::codeDependentRelation(TAMVendRebateTakenFrom::Net, fieldStr(TAMVendRebateAgreementLine, FromValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fromGrossPurchaseAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>FromGrossPurchaseAmount</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>FromGrossPurchaseAmount</c> column in the entity.
    /// </returns>
    private static str fromGrossPurchaseAmountComputedColumnDefinition()
    {
        return TAMVendorRebateAgreementLineEntity::codeDependentRelation(TAMVendRebateTakenFrom::Gross, fieldStr(TAMVendRebateAgreementLine, FromValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>toNetPurchaseAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>ToNetPurchaseAmount</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>ToNetPurchaseAmount</c> column in the entity.
    /// </returns>
    private static str toNetPurchaseAmountComputedColumnDefinition()
    {
        return TAMVendorRebateAgreementLineEntity::codeDependentRelation(TAMVendRebateTakenFrom::Net, fieldStr(TAMVendRebateAgreementLine, ToValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>toGrossPurchaseAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>ToGrossPurchaseAmount</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>ToGrossPurchaseAmount</c> column in the entity.
    /// </returns>
    private static str toGrossPurchaseAmountComputedColumnDefinition()
    {
        return TAMVendorRebateAgreementLineEntity::codeDependentRelation(TAMVendRebateTakenFrom::Gross, fieldStr(TAMVendRebateAgreementLine, ToValue));
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebateAmountPerProductUnitSoldComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>RebateAmountPerProductUnitSold</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>RebateAmountPerProductUnitSold</c> column in the entity.
    /// </returns>
    private static str rebateAmountPerProductUnitSoldComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(TAMVendorRebateAgreementLineEntity),
            dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreementLine),
            fieldStr(TAMVendRebateAgreementLine, RebateAmtType),
            TAMRebateAmtType::AmountPerUnit,
            fieldStr(TAMVendRebateAgreementLine, RebateValue),
            0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixedRebateAmountComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>FixedRebateAmount</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>FixedRebateAmount</c> column in the entity.
    /// </returns>
    private static str fixedRebateAmountComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(TAMVendorRebateAgreementLineEntity),
            dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreementLine),
            fieldStr(TAMVendRebateAgreementLine, RebateAmtType),
            TAMRebateAmtType::FixedAmount,
            fieldStr(TAMVendRebateAgreementLine, RebateValue),
            0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebatePercentageComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string to compute the <c>RebatePercentage</c> column in the entity.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>RebatePercentage</c> column in the entity.
    /// </returns>
    private static str rebatePercentageComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(TAMVendorRebateAgreementLineEntity),
            dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreementLine),
            fieldStr(TAMVendRebateAgreementLine, RebateAmtType),
            TAMRebateAmtType::Percentage,
            fieldStr(TAMVendRebateAgreementLine, RebateValue),
            0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>codeDependentRelation</Name>
				<Source><![CDATA[
    private static str codeDependentRelation(TAMVendRebateTakenFrom _takenFrom, FieldName _relationField)
    {
        TableName entityName = tableStr(TAMVendorRebateAgreementLineEntity);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::comparisonLiteral(_takenFrom),
                        SysComputedColumn::comparisonField(entityName, dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreement), fieldStr(TAMVendRebateAgreement, RebateLineBreakType))),
                    SysComputedColumn::returnField(entityName, dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreementLine), _relationField),
                    SysComputedColumn::returnLiteral(0));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getViewSQLTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table alias used in the SQL view definition.
    /// </summary>
    /// <param name = "_field">A computed column definition from which to get the table name.</param>
    /// <returns>The table name used in the SQL view definition.</returns>
    /// <remarks>The SQL view definition will contain a string with the value T1.FieldName. This API will return T1.</remarks>
    private static str getViewSQLTableName(str _field)
    {
        var periodPosition = strScan(_field, '.', 1, strlen(_field));
        
        return strDel(_field, periodPosition, strLen(_field));
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebateAgreementRecIdField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the root data source record Id field that represents a natural key.
    /// </summary>
    /// <returns>A computed column field.</returns>
    private static str rebateAgreementRecIdField()
    {
        return SysComputedColumn::returnField(
                    tablestr(TAMVendorRebateAgreementLineEntity),
                    dataEntityDataSourceStr(TAMVendorRebateAgreementLineEntity, TAMVendRebateAgreementLine),
                    fieldStr(TAMVendRebateAgreementLine, RebateAgreementRefRecId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>rebateAgreementIdComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computes the natural key rebate agreement Id computed column.
    /// </summary>
    /// <returns>A formatted rebate agreement Id computed column.</returns>
    private static str rebateAgreementIdComputedColumn()
    {
        var rebateAgreementRecIdField = TAMVendorRebateAgreementLineEntity::rebateAgreementRecIdField();
        DictField rebateAgreementId = new DictField(tableNum(TAMVendRebateAgreementLine), fieldNum(TAMVendRebateAgreementLine, RebateAgreementRefRecId));
        
        return strFmt("@SCM:SqlFieldStringFormat", TAMVendorRebateAgreementLineEntity::getViewSQLTableName(rebateAgreementRecIdField), rebateAgreementId.name(DbBackend::Sql));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TAMVendorRebate</ConfigurationKey>
	<DeveloperDocumentation>@SCM:TAMVendorRebateAgreementLineEntityDevDoc</DeveloperDocumentation>
	<FormRef>TAMVendRebateAgreements</FormRef>
	<Label>@SCM:TAMVendorRebateAgreementLineEntityName</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Tags>Rebates</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TAMVendorRebateAgreementLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<IsReadOnly>Yes</IsReadOnly>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>VendorRebateAgreementLines</PublicCollectionName>
	<PublicEntityName>VendorRebateAgreementLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RebateAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitSymbol</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorAccountNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS12272</Label>
			<DataField>VendRebateRelation</DataField>
			<DataSource>TAMVendRebateAgreement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>Currency</DataField>
			<DataSource>TAMVendRebateAgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>TAMVendRebateAgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateAgreementRefRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RebateAgreementRefRecId</DataField>
			<DataSource>TAMVendRebateAgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateAmtType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RebateAmtType</DataField>
			<DataSource>TAMVendRebateAgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitSymbol</Name>
			<DataField>RebateUnit</DataField>
			<DataSource>TAMVendRebateAgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>FromNetPurchaseAmount</Name>
			<Label>@SCM:FromNetPurchaseAmount</Label>
			<ComputedFieldMethod>fromNetPurchaseAmountComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMFromValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>FromGrossPurchaseAmount</Name>
			<Label>@SCM:FromGrossPurchaseAmount</Label>
			<ComputedFieldMethod>fromGrossPurchaseAmountComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMFromValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>RebateAmountPerProductUnitSold</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:RebateAmountPerProductUnitSold</Label>
			<ComputedFieldMethod>rebateAmountPerProductUnitSoldComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMRebateValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>FixedRebateAmount</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:FixedRebateAmount</Label>
			<ComputedFieldMethod>fixedRebateAmountComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMRebateValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>RebatePercentage</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:RebatePercentage</Label>
			<ComputedFieldMethod>rebatePercentageComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMRebateValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>ToNetPurchaseAmount</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:ToNetPurchaseAmount</Label>
			<ComputedFieldMethod>toNetPurchaseAmountComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMToValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>ToGrossPurchaseAmount</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:ToGrossPurchaseAmount</Label>
			<ComputedFieldMethod>toGrossPurchaseAmountComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TAMToValue</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RebateAgreementId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:RebateAgreementId</Label>
			<Mandatory>Yes</Mandatory>
			<ComputedFieldMethod>rebateAgreementIdComputedColumn</ComputedFieldMethod>
			<ExtendedDataType>Num</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RebateLineBreakType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RebateLineBreakType</DataField>
			<DataSource>TAMVendRebateAgreement</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RebateAgreementId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TAMVendRebateAgreementLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TAMVendRebateAgreementLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TAMVendRebateAgreement</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>TAMVendRebateAgreement</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>RebateAgreementRefRecId</Field>
								<JoinDataSource>TAMVendRebateAgreementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>