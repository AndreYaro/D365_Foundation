<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOpportunitySourceTypeOptionEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesOpportunitySourceTypeOptionEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getParentSourceType</Name>
				<Source><![CDATA[
    private SalesOpportunitySourceTypeEntity getParentSourceType()
    {
        return SalesOpportunitySourceTypeEntity::find(
            this.OpportunitySourceType, this.OpportunitySourceTypeUserDefinedSourceTypeName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOpportunitySourceTypeOptionEntity, smmSourceTypeOptions):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        smmSourceTypeOptions options = _dataSourceCtx.getBuffer();
                        options.TypeId = this.getParentSourceType().SourceTypeId;
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the source types UI based on the selected record in the opportunity source type option staging table.
    /// </summary>
    /// <param name="_menuItemName">
    /// The name of the menu item to open.
    /// </param>
    /// <param name="_buffer">
    /// The opportunity source type option staging record selected.
    /// </param>
    /// <param name="_caller">
    /// The caller.
    /// </param>
    /// <param name="_dataArea">
    /// The legal entity ID of the caller context.
    /// </param>
    public static void jumpRefMethod(MenuItemName _menuItemName, SalesOpportunitySourceTypeOptionStaging _buffer, object _caller, DataAreaId _dataArea)
    {
        changeCompany(_dataArea)
        {
            Args args = new Args();

            SalesOpportunitySourceTypeEntity referenceEntity =
                SalesOpportunitySourceTypeEntity::find(_buffer.OpportunitySourceType, _buffer.OpportunitySourceTypeUserDefinedSourceTypeName);
            args.record(smmSourceTypeTable::find(referenceEntity.SourceTypeId));
            args.caller(_caller);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateSourceType</Name>
				<Source><![CDATA[
    private boolean validateSourceType()
    {
        boolean ret = true;

        if (!this.getParentSourceType())
        {
            // Specified Source type doesn't exist.
            ret = checkFailed(strFmt("@SCM:TableRecordValidation", tablePName(SalesOpportunitySourceTypeEntity)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = this.validateSourceType() && ret;

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SmmCRM</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Entity_DevDoc_SalesOpportunitySourceTypeOptionEntity</DeveloperDocumentation>
	<FormRef>smmSourceType</FormRef>
	<Label>@SCM:Entity_SalesOpportunitySourceTypeOption</Label>
	<Tags>Opportunities</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesOpportunitySourceTypeOptionStaging</DataManagementStagingTable>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OptionDescription</Name>
			<DataField>Description</DataField>
			<DataSource>smmSourceTypeOptions</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OptionName</Name>
			<DataField>Name</DataField>
			<DataSource>smmSourceTypeOptions</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OpportunitySourceType</Name>
			<DataField>SourceType</DataField>
			<DataSource>SalesOpportunitySourceTypeEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OpportunitySourceTypeUserDefinedSourceTypeName</Name>
			<DataField>UserDefinedSourceTypeName</DataField>
			<DataSource>SalesOpportunitySourceTypeEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TypeId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TypeId</DataField>
			<DataSource>smmSourceTypeOptions</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>OptionName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OpportunitySourceType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OpportunitySourceTypeUserDefinedSourceTypeName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>smmSourceTypeOptions</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>smmSourceTypeOptions</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOpportunitySourceTypeEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesOpportunitySourceTypeEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TypeId</Field>
								<JoinDataSource>smmSourceTypeOptions</JoinDataSource>
								<RelatedField>SourceTypeId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>