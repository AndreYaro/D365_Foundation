<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdBatchOrderCoProductV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdBatchOrderCoProductV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                        if (this.InventoryLotId && this.isFieldSet(fieldNum(ProdBatchOrderCoProductV2Entity, InventoryLotId)))
                        {
                            // Without skipping this validation, validateField will fail on the mapped field.
                            this.skipDataSourceValidateField(fieldNum(ProdBatchOrderCoProductV2Entity, InventoryLotId), true);
                        }
                    case DataEntityDatabaseOperation::Update:
                        PmfProdCoBy pmfProdCoBy = _dataSourceCtx.getBuffer() as PmfProdCoBy;
                        
                        if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                        {
                            pmfProdCoBy.initFromProdTable(this.getExtensionProdTable());
                            pmfProdCoBy.initFromInventTable(this.getExtensionInventTable());
                        }

                        // will cause the defaulting on the PmfProdCoBy not to call the defaultField for InventDimId.
                        pmfProdCoBy.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

                        // Ensure that default logic on PmfProdCoBy is called for InventDimId.
                        pmfProdCoBy.fieldState(fieldNum(PmfProdCoBy, InventDimId), FieldState::NotSet);

                        this.initCostAllocation(pmfProdCoBy);
                        break;
                }

            case dataEntityDataSourceStr(ProdBatchOrderByProductEntity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        InventDim inventDim = _dataSourceCtx.getBuffer() as InventDim;

                        // will cause the defaulting on the ProdBOM not to call the defaultField for InventDimId.
                        inventDim.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

                        // Ensure that default logic on PmfProdCoBy is called for InventDimId.
                        inventDim.fieldState(fieldNum(PmfProdCoBy, InventDimId), FieldState::NotSet);
                        break;
                }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy):
                PmfProdCoBy pmfProdCoBy = _dataSourceCtx.getBuffer() as PmfProdCoBy;

                pmfProdCoBy.ItemId = this.ItemNumber;

                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    pmfProdCoBy.initFromProdTable(this.getExtensionProdTable());
                    pmfProdCoBy.initFromInventTable(this.getExtensionInventTable());
                }

                // Push inventory dimension from entity to table.
                pmfProdCoBy.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::getMergedInventDimId(pmfProdCoBy.inventdim());
                
                // Get inventory dimension from table back to entity.
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(pmfProdCoBy.inventDim());

                this.initCostAllocation(pmfProdCoBy);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy):
                PmfProdCoBy pmfProdCoBy = _dataSourceCtx.getBuffer() as PmfProdCoBy;
                break;

            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy))
            {
                PmfProdCoBy pmfProdCoBy =  _dataSourceCtx.getBuffer() as pmfProdCoBy;

                // Need to re-apply inventory dimensions as defaulting logic may have changed them.
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(pmfProdCoBy.inventDim());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy):
                PmfProdCoBy pmfProdCoBy = _dataSourceCtx.getBuffer() as PmfProdCoBy;
                break;
            
            case dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProdBatchOrderCoProductV2Entity, PmfProdCoBy))
            {
                PmfProdCoBy pmfProdCoBy =  _dataSourceCtx.getBuffer() as PmfProdCoBy;

                // Need to re-apply inventory dimensions as defaulting logic may have changed them.
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(pmfProdCoBy.inventDim());
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initCostAllocation</Name>
				<Source><![CDATA[
    private void initCostAllocation(PmfProdCoBy _coProduct)
    {
        _coProduct.CostAllocationPct = this.CostAllocationPercentage;

        _coProduct.CostAllocation = this.CostAllocationMethod;

        ProdTable batchOrder = ProdTable::find(this.BatchOrderNumber);
        _coProduct.PmfCoByMap::updateCostAllocationFromTCA(batchOrder.PmfTotalCostAllocation);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subcontractingPurchaseOrderNumber</Name>
				<Source><![CDATA[
    private static str subcontractingPurchaseOrderNumber()
    {
        return ProdBatchOrderCoProductV2Entity::ReferenceNumberByType(InventRefType::Purch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>subcontractingPurchaseOrderLineInventoryLotId</Name>
				<Source><![CDATA[
    private static str subcontractingPurchaseOrderLineInventoryLotId()
    {
        return ProdBatchOrderCoProductV2Entity::ReferenceLotIdByType(InventRefType::Purch);
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceNumberByType</Name>
				<Source><![CDATA[
    private static str referenceNumberByType(InventRefType _referenceType)
    {
        return SysComputedColumn::if(
            SysComputedColumn::EqualExpression(
                SysComputedColumn::comparisonField(tableStr(ProdBatchOrderCoProductV2Entity), identifierStr(PmfProdCoBy), fieldStr(PmfProdCoBy, InventRefType)),
                SysComputedColumn::comparisonLiteral(_referenceType)),
            SysComputedColumn::returnField(tableStr(ProdBatchOrderCoProductV2Entity), identifierStr(PmfProdCoBy), fieldStr(PmfProdCoBy, InventRefId)),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>referenceLotIdByType</Name>
				<Source><![CDATA[
    private static str referenceLotIdByType(InventRefType _referenceType)
    {
        return SysComputedColumn::if(
            SysComputedColumn::EqualExpression(
                SysComputedColumn::comparisonField(tableStr(ProdBatchOrderCoProductV2Entity), identifierStr(PmfProdCoBy), fieldStr(PmfProdCoBy, InventRefType)),
                SysComputedColumn::comparisonLiteral(_referenceType)),
            SysComputedColumn::returnField(tableStr(ProdBatchOrderCoProductV2Entity), identifierStr(PmfProdCoBy), fieldStr(PmfProdCoBy, InventRefTransId)),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtensionProdTable</Name>
				<Source><![CDATA[
    private ProdTable getExtensionProdTable()
    {
        return ProdTable::find(this.CoProductBatchOrderNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtensionInventTable</Name>
				<Source><![CDATA[
    private InventTable getExtensionInventTable()
    {
        return InventTable::find(this.ItemNumber);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PMF</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ProdBatchOrderCoProductEntityDevDoc</DeveloperDocumentation>
	<FormRef>PmfProdCoBy</FormRef>
	<Label>@SCM:ProdBatchOrderCoProductV2EntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Tags>Co-product</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProdBatchOrderCoProductV2Staging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProductionControl</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BatchOrderCoProductsV2</PublicCollectionName>
	<PublicEntityName>BatchOrderCoProductV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>BatchOrderRemainderStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EstimatedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoProductQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CoProductQuantityDenominator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAllocationMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CostAllocationPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsFullyConsumed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportedAsFinishedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryLotId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EstimatedCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartedCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemainingCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EstimatedCoProductQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartedCoProductQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EndedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RemainingCoProductQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceMasterPlanId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourcePlannedOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundingUpMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoundingUpMultiplesCoProductQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StartedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubcontractingPurchaseOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubcontractingPurchaseOrderLineInventoryLotId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BatchOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultDimensionDisplayValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConsumptionSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConsumptionWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryOwnerId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemBatchNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchOrderRemainderStatus</Name>
			<DataField>BackorderStatus</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EstimatedDate</Name>
			<DataField>CalcDate</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CoProductQuantity</Name>
			<DataField>CoByQty</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CoProductQuantityDenominator</Name>
			<DataField>CoByQtySerie</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostAllocationMethod</Name>
			<DataField>CostAllocation</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostAllocationPercentage</Name>
			<DataField>CostAllocationPct</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>DefaultDimension</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsFullyConsumed</Name>
			<DataField>EndConsump</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportedAsFinishedDate</Name>
			<DataField>FinishedDate</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDimId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventDimId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReferenceInventoryLotId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>InventRefTransId</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReferenceType</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>InventRefType</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryLotId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>InventTransId</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EstimatedCatchWeightQuantity</Name>
			<DataField>PdsCWInventCalc</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartedCatchWeightQuantity</Name>
			<DataField>PdsCWInventStup</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CatchWeightQuantity</Name>
			<DataField>PdsCWQty</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingCatchWeightQuantity</Name>
			<DataField>PdsCWRemainPhysical</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CoProductBatchOrderNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<DataField>ProdId</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionType</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ProductType</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EstimatedCoProductQuantity</Name>
			<DataField>QtyCoByCalc</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartedCoProductQuantity</Name>
			<DataField>QtyCoByStUp</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndedDate</Name>
			<DataField>RealDate</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingCoProductQuantity</Name>
			<DataField>RemainCoByPhysical</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceMasterPlanId</Name>
			<DataField>ReqPlanIdSched</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourcePlannedOrderNumber</Name>
			<DataField>ReqPOId</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RoundingUpMethod</Name>
			<DataField>RoundUp</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RoundingUpMultiplesCoProductQuantity</Name>
			<DataField>RoundUpQty</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartedDate</Name>
			<DataField>StUpDate</DataField>
			<DataSource>PmfProdCoBy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SubcontractingPurchaseOrderNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>subcontractingPurchaseOrderNumber</ComputedFieldMethod>
			<ExtendedDataType>PurchId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SubcontractingPurchaseOrderLineInventoryLotId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>subcontractingPurchaseOrderLineInventoryLotId</ComputedFieldMethod>
			<ExtendedDataType>InventRefTransId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchOrderNumber</Name>
			<DataField>ProdId</DataField>
			<DataSource>ProdTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsumptionSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConsumptionWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryOwnerId</Name>
			<DataField>InventOwnerId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryStatusId</Name>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchNumber</Name>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>InventoryLotId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>ItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension1</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension10</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension11</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension12</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension2</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension3</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension4</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension5</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension6</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension7</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension8</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension9</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ConsumptionWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
					<MapFieldTo>InventoryOwnerId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ConsumptionSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>InventoryStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BatchOrderHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProdBatchOrderHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BatchOrderHeader</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BatchOrderCoProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>BatchOrderNumber</Field>
					<RelatedField>BatchOrderNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PmfProdCoBy</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PmfProdCoBy</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>PmfProdCoBy</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventDim</Name>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProdTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ProdType</Name>
								<Field>ProdType</Field>
								<Status>Hidden</Status>
								<Value>Process</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProdId</Field>
								<JoinDataSource>PmfProdCoBy</JoinDataSource>
								<RelatedField>ProdId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>ProductType</Name>
						<Field>ProductType</Field>
						<Value>Co_Product</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>