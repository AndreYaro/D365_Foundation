<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmCompensationPayPerformanceAllocationLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmCompensationPayPerformanceAllocationLineEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findHcmRatingLevelRecord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finding HcmRatingLevel record
    /// </summary>
    /// <returns>HcmRatingLevel buffer</returns>
    private HcmRatingLevel findHcmRatingLevelRecord()
    {
        HcmRatingLevel hcmRatingLevel;

        if(this.RatingLevelId != '' && this.RatingModel != 0)
        {
            select firstonly hcmRatingLevel
                    where hcmRatingLevel.RatingLevelId == this.RatingLevelId
                        && hcmRatingLevel.RatingModel == this.RatingModel;
        }

        return hcmRatingLevel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmCompensationPayPerformanceAllocationLineEntity, HcmRatingLevel))
            {
                _dataSourceCtx.setBuffer(this.findHcmRatingLevelRecord());
            }
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingLevel),
                [
                    fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingLevelId)
                ]
            ],
            [fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingModel),
                [
                    fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingModelId)
                ]
            ]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingLevel):
                this.defaultRatingLevel();
                break;

            case fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingModel):
                this.defaultRatingModel();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRatingLevel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setting RatingLevel value.
    /// As consumers of this entity will now set the field associated with the computed column (RatingLevelId),
    /// then these values needs to be copied to the private (RatingLevel) fields that are mapped to the datasource fields
    /// </summary>
    private void defaultRatingLevel()
    {
        if (!this.isFieldSet(fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingLevel)))
        {
            this.RatingLevel = this.findHcmRatingLevelRecord().RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultRatingModel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Setting RatingModel value.
    /// As consumers of this entity will now set the field associated with the computed column (RatingModelId),
    /// then these values needs to be copied to the private (RatingModel) fields that are mapped to the datasource fields
    /// </summary>
    private void defaultRatingModel()
    {
        if (!this.isFieldSet(fieldNum(HcmCompensationPayPerformanceAllocationLineEntity, RatingModel)))
        {
            HcmRatingModel hcmRatingModel;

            select firstonly hcmRatingModel
                where hcmRatingModel.RatingModelId == this.RatingLevelId;                        

            this.RatingModel = hcmRatingModel.RecId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.RatingModelType == HRMCompRatingModel::SkillRating)
        {
            if(this.RatingLevelId == '' || this.RatingModelId == '')
            {
                ret = checkFailed('@Talent:MissingCompetencyRatingFields');
            }
        }
        else
        {
            if (this.CompPerfRatingId == '')
            {
                ret = checkFailed('@Talent:MissingCompensationRatingField');
            }
        }
            
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ratingLevelIdValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computed column for RatingLevel.
    /// </summary>
    /// <returns>
    /// Returns the RatingLevelId record ID. Returns empty string if computed column values is NULL.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static str ratingLevelIdValue()
    {
        str ratingLevelField = SysComputedColumn::returnField(tablestr(HcmCompensationPayPerformanceAllocationLineEntity),
            dataEntityDataSourceStr(HcmCompensationPayPerformanceAllocationLineEntity, HcmRatingLevel),
            fieldstr(HcmRatingLevel, RatingLevelId));

        return SysComputedColumn::if(
                    SysComputedColumn::isNullExpression(ratingLevelField),
                    SysComputedColumn::returnLiteral(''),
                    ratingLevelField);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ratingModelIdValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Computed column for RatingModel.
    /// </summary>
    /// <returns>
    /// Returns the RatingModelId record ID. Returns empty string if computed column values is NULL.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static str ratingModelIdValue()
    {
        str ratingModelField = SysComputedColumn::returnField(tablestr(HcmCompensationPayPerformanceAllocationLineEntity),
            dataEntityDataSourceStr(HcmCompensationPayPerformanceAllocationLineEntity, HcmRatingModel),
            fieldstr(HcmRatingModel, RatingModelId));

        return SysComputedColumn::if(
                    SysComputedColumn::isNullExpression(ratingModelField),
                    SysComputedColumn::returnLiteral(''),
                    ratingModelField);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HRMAdministrationCompensation</ConfigurationKey>
	<FormRef>HRMCompPerfAllocation</FormRef>
	<Label>@SYS119979</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>HcmCompensationPayPerformanceAllocationLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>HRM</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CompensationPayPerformanceAllocationLines</PublicCollectionName>
	<PublicEntityName>CompensationPayPerformanceAllocationLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AllocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlanType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RatingModelType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CompPerfRatingId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PerfFactorPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RatingLevelId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AllocationId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>AllocationId</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CompPerfRatingId</Name>
			<DataField>CompPerfRatingId</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PerfFactorPercent</Name>
			<DataField>PerfFactorPercent</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PlanType</Name>
			<DataField>PlanType</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RatingLevel</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RatingLevel</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RatingLevelId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>ratingLevelIdValue</ComputedFieldMethod>
			<ExtendedDataType>HcmRatingLevelId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RatingModel</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RatingModel</DataField>
			<DataSource>HcmRatingLevel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RatingModelId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Talent:RatingModel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>ratingModelIdValue</ComputedFieldMethod>
			<ExtendedDataType>HcmRatingModelId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RatingModelType</Name>
			<DataField>RatingModel</DataField>
			<DataSource>HRMCompPerfAllocationLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RatingLevelId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AllocationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PlanType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RatingModelType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CompPerfRatingId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RatingModelId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>HcmRatingLevel</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmRatingLevelEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>RatingLevel</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CompPerfAllocationLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>RatingLevel</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>HRMCompPerfAllocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmCompensationPayPerformanceAllocationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>AllocationId</Field>
					<RelatedField>Allocation</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>HRMCompPerfRating</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmCompensationPerformanceRatingEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>CompPerfRatingId</Field>
					<RelatedField>Rating</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>HRMCompPerfAllocationLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>HRMCompPerfAllocationLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmRatingLevel</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmRatingLevel</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmRatingModel</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmRatingModel</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmRatingModel</Name>
										<JoinRelationName>HcmRatingModel</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RatingLevel</Field>
								<JoinDataSource>HRMCompPerfAllocationLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>