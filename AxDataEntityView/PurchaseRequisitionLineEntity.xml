<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchaseRequisitionLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchaseRequisitionLineEntity extends common
{   
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query purchReqLineQuery = new Query();

        var purchReqLineDS = purchReqLineQuery.addDataSource(tableNum(PurchReqLine));

        var ecoResCategoryDS = purchReqLineDS.addDataSource(tableNum(EcoResCategory));
        ecoResCategoryDS.addLink(fieldNum(PurchReqLine, ProcurementCategory), fieldNum(EcoResCategory, RecId));
        ecoResCategoryDS.joinMode(JoinMode::OuterJoin);
        ecoResCategoryDS.fetchMode(QueryFetchMode::One2One);

        var omOperatingUnitDS = purchReqLineDS.addDataSource(tableNum(OMOperatingUnit));
        omOperatingUnitDS.addLink(fieldNum(PurchReqLine, ReceivingOperatingUnit), fieldNum(OMOperatingUnit, RecId));
        omOperatingUnitDS.joinMode(JoinMode::OuterJoin);
        omOperatingUnitDS.fetchMode(QueryFetchMode::One2One);

        var purchReqBusinessJustificationCodesDS = purchReqLineDS.addDataSource(tableNum(PurchReqBusinessJustificationCodes));
        purchReqBusinessJustificationCodesDS.addLink(fieldNum(PurchReqLine, BusinessJustification), fieldNum(PurchReqBusinessJustificationCodes, RecId));
        purchReqBusinessJustificationCodesDS.joinMode(JoinMode::OuterJoin);
        purchReqBusinessJustificationCodesDS.fetchMode(QueryFetchMode::One2One);

        var purchReqBusJustificationDS = purchReqLineDS.addDataSource(tableNum(PurchReqBusJustification));
        purchReqBusJustificationDS.addLink(fieldNum(PurchReqLine, TableId), fieldNum(PurchReqBusJustification, RefTableId));
        purchReqBusJustificationDS.addLink(fieldNum(PurchReqLine, RecId), fieldNum(PurchReqBusJustification, RefRecId));
        purchReqBusJustificationDS.joinMode(JoinMode::OuterJoin);
        purchReqBusJustificationDS.fetchMode(QueryFetchMode::One2One);

        LogisticsPostalAddressBaseEntityChangeTrackingHelper::addPostalAddressBasedOnAddressRecIdLink(purchReqLineDS, fieldNum(PurchReqLine, DeliveryPostalAddress));

        var reasonTableRefDS = purchReqLineDS.addDataSource(tableNum(ReasonTableRef));
        reasonTableRefDS.addLink(fieldNum(PurchReqLine, ReasonRefRecId), fieldNum(ReasonTableRef, RecId));
        reasonTableRefDS.joinMode(JoinMode::OuterJoin);
        reasonTableRefDS.fetchMode(QueryFetchMode::One2One);

        var assetRuleQualifierOptionDS = purchReqLineDS.addDataSource(tableNum(AssetRuleQualifierOption));
        assetRuleQualifierOptionDS.addLink(fieldNum(PurchReqLine, AssetRuleQualifierOption), fieldNum(AssetRuleQualifierOption, RecId));
        assetRuleQualifierOptionDS.joinMode(JoinMode::OuterJoin);
        assetRuleQualifierOptionDS.fetchMode(QueryFetchMode::One2One);

        var assetRuleQualifierOptionLocalDS = purchReqLineDS.addDataSource(tableNum(AssetRuleQualifierOptionLocal));
        assetRuleQualifierOptionLocalDS.addLink(fieldNum(PurchReqLine, AssetRuleQualifierOptionLocal), fieldNum(AssetRuleQualifierOptionLocal, RecId));
        assetRuleQualifierOptionLocalDS.joinMode(JoinMode::OuterJoin);
        assetRuleQualifierOptionLocalDS.fetchMode(QueryFetchMode::One2One);

        var budgetReservationLine_PSNDS = purchReqLineDS.addDataSource(tableNum(BudgetReservationLine_PSN));
        budgetReservationLine_PSNDS.addLink(fieldNum(PurchReqLine, BudgetReservationLine_PSN), fieldNum(BudgetReservationLine_PSN, RecId));
        budgetReservationLine_PSNDS.joinMode(JoinMode::OuterJoin);
        budgetReservationLine_PSNDS.fetchMode(QueryFetchMode::One2One);

        return purchReqLineQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // Setting company on datasources here means findEntityDataSource(), updateEntityDataSource(), mapDataSourceToEntity() run in given company for the datasources
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, InventDim):
                _dataSourceCtx.setCompany(this.BuyingLegalEntityId);
                changecompany(this.BuyingLegalEntityId)
                {
                    // Ensure correct company is on the buffer, otherwise SysDataEntityPersister.selectDataSourceBufferByRecId() won't find record
                    InventDim inventDim;
                    _dataSourceCtx.setBuffer(inventDim);
                    super(_entityCtx, _dataSourceCtx);
                }
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, ReasonTableRef):
                _dataSourceCtx.setCompany(this.BuyingLegalEntityId);
                changecompany(this.BuyingLegalEntityId)
                {
                    // Ensure correct company is on the buffer, otherwise SysDataEntityPersister.selectDataSourceBufferByRecId() won't find record
                    ReasonTableRef reasonTableRef;
                    _dataSourceCtx.setBuffer(reasonTableRef);
                    super(_entityCtx, _dataSourceCtx);
                }
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine):
                _dataSourceCtx.setCompany(this.BuyingLegalEntityId);
                super(_entityCtx, _dataSourceCtx);
                break;

            default:
                super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (   _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine):
                    this.validateCurrentUserMayInsertOrUpdate(_entityCtx, _dataSourceCtx);

                    PurchReqLine purchReqLine = _dataSourceCtx.getBuffer();

                    if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                    {
                        purchReqLine.initFromPurchReqTable(PurchReqTable::findPurchReqId(this.RequisitionNumber));
                    }

                    if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, AccountingDistributionTemplateName)))
                    {
                        purchReqLine.AccountingDistributionTemplate = this.findAccountingDistributionTemplate().RecId;
                    }
                    if (PublicSectorUtils::isBudgetReservationEnabled())
                    {
                        purchReqLine.BudgetReservationLine_PSN = this.findGeneralBudgetReservationLine().RecId;
                    }
                    // setCompany(), as called in initializeEntityDataSource is not ensuring that this code runs in correct company. Need to switch explicitly.
                    changecompany(this.BuyingLegalEntityId)
                    {
                        purchReqLine.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();
                    }

                    // Field state for foreign key field is not set. Need to set it on buffer to trigger dependent defaulting.
                    if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ProcurementProductCategoryName)))
                    {
                        purchReqLine.fieldState(fieldNum(PurchReqLine, ProcurementCategory), FieldState::Set);
                    }

                    if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, FixedAssetRuleQualifierOptionName)))
                    {
                        purchReqLine.AssetRuleQualifierOptionName = this.FixedAssetRuleQualifierOptionName;
                    }

                    if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, FixedAssetReasonCode)))
                    {
                        if (!this.FixedAssetReasonCode)
                        {
                            this.checkDeleteFixedAssetReasonCode(purchReqLine, _dataSourceCtx);
                            this.fieldState(fieldNum(PurchaseRequisitionLineEntity, FixedAssetReasonCode), FieldState::NotSet);
                        }
                        else
                        {
                            this.createOrUpdateFixedAssetReasonCode(_dataSourceCtx, purchReqLine);
                        }
                    }
                    break;

                case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, LogisticsPostalAddressBaseEntity):
                    if (_dataSourceCtx.isAnyEntityFieldSet(this))
                    {
                        this.TradeEntitySpecificDeliveryAddress::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_dataSourceCtx);
                    }
                    break;
            }
        }
        
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, ReasonTableRef):
                PurchReqLine reqLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine)).getBuffer();
                ret = ReasonTableRef::find(reqLine.ReasonRefRecId);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, InventDim):
                var purchReqLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine)).getBuffer();
                ret = purchReqLine.inventDim();
                _dataSourceCtx.setCompany(this.BuyingLegalEntityId);    // InventDim is company specific
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, EcoResCategory_ProcurementCategory):
                if (this.ProcurementProductCategoryName)
                {
                    EcoResCategoryHierarchyRole hierarchyRole;

                    select firstonly CategoryHierarchy from hierarchyRole
                        where hierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::Procurement;

                    if (hierarchyRole.CategoryHierarchy)
                    {
                        ret = EcoResCategory::findByName(this.ProcurementProductCategoryName, hierarchyRole.CategoryHierarchy);
                    }
                }
                else
                {
                    ret = super(_entityCtx, _dataSourceCtx);
                }

                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, AccountingDistributionTemplate):
                ret = this.findAccountingDistributionTemplate();
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, LogisticsPostalAddressBaseEntity):
                ret = TradeEntitySpecificDeliveryAddress::findLogisticsPostalAddressBaseEntityDataSource();
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine):
                PurchReqLine purchReqLine = _dataSourceCtx.getBuffer();
                if(ProjCategorySetupOnPurchReqImportFlight::instance().isEnabled())
                {
                    purchReqLine.initFromProjTable(ProjTable::find(purchReqLine.ProjId));
                }
                if (!this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, LineType)))
                {
                    this.defaultLineType(purchReqLine);
                }

                if (purchReqLine.InventDimId == InventDim::findOrCreateBlank().InventDimId)
                {
                    this.defaultInventDimId(purchReqLine);
                }

                if (ExternalItemNumberAutoPopulatedFlight::instance().isEnabled()
                    && this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ItemNumber)) 
                    && this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, VendorAccountNumber)))
                {
                    if (purchReqLine.isConsumption())
                    {
                        purchReqLine.initFromVendExternalItemDescription();
                    }
                }

                this.validateLineType(purchReqLine, _dataSourceCtx);
                this.validateProcurementCategory(purchReqLine, _dataSourceCtx);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqBusJustification):
                _entityCtx.detectConflictForDatasource(_dataSourceCtx);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationHeader_PSN),
                dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationLine_PSN):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, LogisticsPostalAddressBaseEntity):
                this.TradeEntitySpecificDeliveryAddress::postInsertLogisticsPostalAddressBaseEntityDataSource(_dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine):
                PurchReqLine purchReqLine = _dataSourceCtx.getBuffer();
                if(ProjCategorySetupOnPurchReqImportFlight::instance().isEnabled())
                {
                    purchReqLine.initFromProjTable(ProjTable::find(purchReqLine.ProjId));
                }
                this.validateUpdatePurchReqLineDatasource(purchReqLine, _dataSourceCtx);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;

            case dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationHeader_PSN),
                dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationLine_PSN):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }
        
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        XDSServices services;
        str prevXdsContext;
        boolean accessToPurchReqTableAll = PurchReqTableHcmWorkersPolicyHandler::checkCurrentUserAccessToPurchReqTableAll();

        try
        {
            if (!accessToPurchReqTableAll)
            {
                services = new XDSServices();
                prevXdsContext = PurchReqTableHcmWorkersPolicyHandler::getCurrentXdsContextString(services);
                PurchReqTableHcmWorkersPolicyHandler::setCurrentXdsContextString(services);
            }

            if (_dataSourceCtx.name() == dataEntityDataSourceStr(PurchaseRequisitionLineEntity, PurchReqLine))
            {
                PurchReqLine purchReqLine = _dataSourceCtx.getBuffer();

                this.mapAccountingDistributionTemplateFromPurchReqLineToEntity(_entityCtx, purchReqLine);
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(purchReqLine.inventDim());
                this.TradeEntitySpecificDeliveryAddress::mapSavedPostalAddressToEntity(_entityCtx, purchReqLine.DeliveryPostalAddress);
                this.mapProcurementCategoryFromPurchReqLineToEntity(_entityCtx, purchReqLine);
            }

            super(_entityCtx, _dataSourceCtx);
        }

        finally
        {
            if (!accessToPurchReqTableAll)
            {
                PurchReqTableHcmWorkersPolicyHandler::setCurrentXdsContextString(services, prevXdsContext);
            }
                
        }
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        changecompany(this.BuyingLegalEntityId)
        {
            boolean ret = super();

            ret = this.validateProcurementCategoryIsConsistentWithItemNumber() && ret;
            
            ret = this.InventInventoryDimensionEntityFieldsMapping::validate(this.ItemNumber) && ret;

            ret = this.validateGeneralBudgetReservationLine() && ret;

            return ret;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapAccountingDistributionTemplateFromPurchReqLineToEntity</Name>
				<Source><![CDATA[
    private void mapAccountingDistributionTemplateFromPurchReqLineToEntity(DataEntityRuntimeContext _entityCtx, PurchReqLine _purchReqLine)
    {
        DataEntityDataSourceRuntimeContext distributionTemplateContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchaseRequisitionLineEntity, AccountingDistributionTemplate));
        AccountingDistributionTemplate distributionTemplate = distributionTemplateContext.getBuffer();

        if (distributionTemplate.RecId != _purchReqLine.AccountingDistributionTemplate)
        {
            this.AccountingDistributionTemplateRecId = _purchReqLine.AccountingDistributionTemplate;
            this.AccountingDistributionTemplateName = AccountingDistributionTemplate::find(_purchReqLine.AccountingDistributionTemplate).Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapProcurementCategoryFromPurchReqLineToEntity</Name>
				<Source><![CDATA[
    private void mapProcurementCategoryFromPurchReqLineToEntity(DataEntityRuntimeContext _entityCtx, PurchReqLine _purchReqLine)
    {
        DataEntityDataSourceRuntimeContext categoryContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchaseRequisitionLineEntity, EcoResCategory_ProcurementCategory));
        EcoResCategory category = categoryContext.getBuffer();

        if (category.RecId != _purchReqLine.ProcurementCategory)
        {
            this.ProcurementProductCategoryRecId = _purchReqLine.ProcurementCategory;
            this.ProcurementProductCategoryName = EcoResCategory::find(_purchReqLine.ProcurementCategory).Name;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapBudgetReservationDocumentNumberFromPurchReqLineToEntity</Name>
				<Source><![CDATA[
    private void mapBudgetReservationDocumentNumberFromPurchReqLineToEntity(DataEntityRuntimeContext _entityCtx, PurchReqLine _purchReqLine)
    {
        if (PublicSectorUtils::isBudgetReservationEnabled())
        {
            DataEntityDataSourceRuntimeContext budgetReservationContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PurchaseRequisitionLineEntity, BudgetReservationLine_PSN));
            BudgetReservationLine_PSN budgetReservationLine = budgetReservationContext.getBuffer();

            if (budgetReservationLine.RecId != _purchReqLine.BudgetReservationLine_PSN)
            {
                this.BudgetReservationLineRecId = _purchReqLine.BudgetReservationLine_PSN;
                this.BudgetReservationDocumentNumber = BudgetReservationHeader_PSN::find(budgetReservationLine.BudgetReservationHeader_PSN).DocumentNumber;
                this.BudgetReservationLineNumber = budgetReservationLine.LineNumber;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateGeneralBudgetReservationLine</Name>
				<Source><![CDATA[
    private boolean validateGeneralBudgetReservationLine()
    {
        boolean isValid = true;

        if (PublicSectorUtils::isBudgetReservationEnabled())
        {
            if (this.BudgetReservationDocumentNumber != '' || this.BudgetReservationLineNumber != 0)
            {
                isValid = (this.findGeneralBudgetReservationLine().RecId != 0);
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findGeneralBudgetReservationLine</Name>
				<Source><![CDATA[
    private BudgetReservationLine_PSN findGeneralBudgetReservationLine()
    {
        BudgetReservationLine_PSN budgetReservationLine;

        if (this.BudgetReservationDocumentNumber != '' || this.BudgetReservationLineNumber != 0)
        {
            BudgetReservationRelievingDocument_PSN relievingType = BudgetReservationRelievingDocument_PSN::PurchaseRequisition;
            TransDate accountingDate = this.AccountingDate;

            budgetReservationLine = BudgetReservationLine_PSN::getValidatedBudgetReservationLineByTypeDateDocumentAndLineNumber(relievingType,
            this.BudgetReservationDocumentNumber,
            this.BudgetReservationLineNumber,
            accountingDate);

            this.BudgetReservationLineRecId = budgetReservationLine.RecId;
        }
  
        return budgetReservationLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAccountingDistributionTemplate</Name>
				<Source><![CDATA[
    private AccountingDistributionTemplate findAccountingDistributionTemplate()
    {
        RecId legalEntityRecId = CompanyInfo::findDataArea(this.BuyingLegalEntityId).RecId;
        return AccountingDistributionTemplate::findByNameAndLegalEntity(this.AccountingDistributionTemplateName, legalEntityRecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddressPartyRecId</Name>
				<Source><![CDATA[
    // This method implements the interface defined by <c>TradeEntitySpecificDeliveryAddress</c>
    public RecId deliveryAddressPartyRecId()
    {
        changecompany(this.BuyingLegalEntityId)
        {
            return CompanyInfo::current();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryAddressOrderSpecificComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str isDeliveryAddressOrderSpecificComputedColumnDefinition()
    {
        // The <c>IsDeliveryAddressOrderSpecific</c> field is only designed for import scenarios
        // so we will always return 'No' for export scenarios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProcurementCategoryIsConsistentWithItemNumber</Name>
				<Source><![CDATA[
    private boolean validateProcurementCategoryIsConsistentWithItemNumber()
    {
        if ((this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ItemNumber))
            || this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ProcurementProductCategoryName)))
            && this.ItemNumber
            && this.ProcurementProductCategoryName
            && this.findProcurementCategoryForItem(this.ItemNumber).Name != this.ProcurementProductCategoryName)
        {
            return checkFailed("@SCM:PurchPurchaseOrderLineEntityInconsistentProcurementCategory");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLineType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Lines of type External are not supported for import
    /// </summary>
    private void validateLineType(PurchReqLine _purchReqLine, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_purchReqLine.LineType == PurchReqLineType::External)
        {
            _dataSourceCtx.throwValidateWriteFailed(strFmt("@SCM:PurchReqLineEntityDoesNotSupportLineTypeExternal", _purchReqLine.LineType));            
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateProcurementCategory</Name>
				<Source><![CDATA[
    private void validateProcurementCategory(PurchReqLine _purchReqLine, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_purchReqLine.LineType == PurchReqLineType::Category)
        {
            boolean ret = _purchReqLine.validateField(fieldNum(PurchReqLine, ProcurementCategory));

            if (!ret)
            {
                _dataSourceCtx.throwValidateWriteFailed();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findProcurementCategoryForItem</Name>
				<Source><![CDATA[
    private EcoResCategory findProcurementCategoryForItem(ItemId _itemId)
    {
        var productCategory = EcoResProductCategory::findByItemIdCategoryHierarchyRole(_itemId, EcoResCategoryNamedHierarchyRole::Procurement);
        return EcoResCategory::find(productCategory.Category);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCurrentUserMayInsertOrUpdate</Name>
				<Source><![CDATA[
    private void validateCurrentUserMayInsertOrUpdate(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // For editing in excel (OData) enforce restrictions from UI that Requester can only be current worker, or workers which current worker is
        // allowed to request on behalf of.
        // (for data migration via data management we want to allow an admin to import purchase requisition lines irrespective of who is the Requester)
        if (!this.isEntityInDataManagementContext())
        {
            DataEntityDatabaseOperation dbOperation = _entityCtx.getDatabaseOperation();
            switch (dbOperation)
            {
                case DataEntityDatabaseOperation::Insert:
                    if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, RequisitionerPersonnelNumber)))
                    {
                        this.checkCurrentUserMayRequestOrRequestOnBehalfOf(_dataSourceCtx);
                    }
                    break;

                case DataEntityDatabaseOperation::Update:
                    this.checkCurrentUserMayRequestOrRequestOnBehalfOf(_dataSourceCtx);
                    break;
                                        
                default:
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkCurrentUserMayRequestOrRequestOnBehalfOf</Name>
				<Source><![CDATA[
    private void checkCurrentUserMayRequestOrRequestOnBehalfOf(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (this.RequisitionerPersonnelNumber)
        {
            HcmWorker requisitioner = HcmWorker::findByPersonnelNumber(this.RequisitionerPersonnelNumber);
            if (requisitioner.RecId != HcmWorkerLookup::currentWorker())
            {
                PurchReqTable purchReqTable = PurchReqTable::findPurchReqId(this.RequisitionNumber);
                
                if (!PurchReqLine::checkOnBehalfAuthorization(purchReqTable.Originator, requisitioner.RecId, false))
                {   
                    _dataSourceCtx.throwValidateWriteFailed(strFmt("@SCM:CurrentUserMayNotRequestOnBehalfOf", requisitioner.PersonnelNumber));
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUpdatePurchReqLineDataSource</Name>
				<Source><![CDATA[
    private void validateUpdatePurchReqLineDataSource(PurchReqLine _purchReqLine, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {   
        if (!_purchReqLine.isInferredDraft())
        {
            _dataSourceCtx.throwValidateWriteFailed(strFmt("@SCM:PurchaseRequisitionLineEntityOnlySupportsUpdateForStatusInferredDraft",
                _purchReqLine.LineNum, _purchReqLine.RequisitionStatus));
        }

        if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, FixedAssetReasonCode))
            && !this.FixedAssetGroupId)
        {
            _dataSourceCtx.throwValidateWriteFailed("@SCM:PurchReqCanNotSetReasonCodeIfNoFixedAssetGroup");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateFixedAssetReasonCode</Name>
				<Source><![CDATA[
    private void createOrUpdateFixedAssetReasonCode(DataEntityDataSourceRuntimeContext _dataSourceCtx, PurchReqLine _purchReqLine)
    {
        changecompany(this.BuyingLegalEntityId)
        { 
            if (this.FixedAssetReasonCode)
            {
                if (_purchReqLine.ReasonRefRecId == 0)  // Setting a new reason code
                {
                    _purchReqLine.ReasonRefRecId = ReasonTableRef::createFromCode(this.FixedAssetReasonCode);
                }
                else    // Updating an existing reason code
                {
                    ReasonTableRef::updateCode(this.FixedAssetReasonCode, _purchReqLine.ReasonRefRecId);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkDeleteFixedAssetReasonCode</Name>
				<Source><![CDATA[
    private void checkDeleteFixedAssetReasonCode(PurchReqLine _purchReqLine, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, FixedAssetReasonCode))
            && !this.FixedAssetReasonCode
            && _purchReqLine.ReasonRefRecId)
        {
            // Updating with a blank FixedAssetReasonCode should cause the ReasonTableRef record to be deleted
            ReasonTableRef::deleteByReference(_purchReqLine.ReasonRefRecId);
            _purchReqLine.ReasonRefRecId = 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fixedAssetRuleQualifierExpression</Name>
				<Source><![CDATA[
    private static str fixedAssetRuleQualifierExpression()
    {
        str legalEntitySpecificRuleQualifierExpression = SysComputedColumn::returnField(tablestr(PurchaseRequisitionLineEntity),
                                                                                        tablestr(AssetRuleQualifierOptionLocal),
                                                                                        fieldstr(AssetRuleQualifierOptionLocal, Name));
        
        str organizationWideRuleQualifierExpression = SysComputedColumn::returnField(tablestr(PurchaseRequisitionLineEntity),
                                                                                     tablestr(AssetRuleQualifierOption),
                                                                                     fieldstr(AssetRuleQualifierOption, Name));

        return SysComputedColumn::if(SysComputedColumn::isNotNullExpression(organizationWideRuleQualifierExpression),
                                     organizationWideRuleQualifierExpression,
                                     legalEntitySpecificRuleQualifierExpression);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultInventDimId</Name>
				<Source><![CDATA[
    private void defaultInventDimId(PurchReqLine _purchReqLine)
    {
        if (_purchReqLine.ItemId && this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ItemNumber)))
        {
            _purchReqLine.InventDimId = InventDim::findOrCreateBlank().inventDimId;

            InventTable inventTable = InventTable::find(_purchReqLine.ItemId);
            InventDim   inventDim   = inventTable.getDefaultProductDimensions(_purchReqLine.inventDim());

            _purchReqLine.setInventDimId(inventDim.InventDimId, inventDim);

            if (InventDistinctProductValidator::construct().isDistinctProductFullySpecified(_purchReqLine.ItemId, inventDim))
            {
                if (inventTable)
                {
                    inventDim.initFromInventTable(inventTable, _purchReqLine.getInventItemOrderSetupType(), inventDim);
                }

                _purchReqLine.setInventDimIdFromInventDim(inventDim);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLineType</Name>
				<Source><![CDATA[
    private void defaultLineType(PurchReqLine _purchReqLine)
    {
        if (_purchReqLine.ItemId && this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ItemNumber)))
        {
            _purchReqLine.LineType = PurchReqLineType::Item;
        }
        else if (this.isFieldSet(fieldNum(PurchaseRequisitionLineEntity, ProcurementProductCategoryName)))
        {
            _purchReqLine.LineType = PurchReqLineType::Category;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PurchReq</ConfigurationKey>
	<FormRef>PurchReqTable</FormRef>
	<Label>@SYS109460</Label>
	<Tags>Purchase requisition</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PurchaseRequisitionLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PurchaseRequisitionLines</PublicCollectionName>
	<PublicEntityName>PurchaseRequisitionLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RequisitionNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequisitionLineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProcurementProductCategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedPurchaseQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchaseUnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasePrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PurchasePriceQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedPriceCharges</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VendorAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RFQRequirementLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequisitionerPersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BuyingLegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingOperatingUnitNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BusinessJustificationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BusinessJustificationDetails</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPartialDeliveryPrevented</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPrepaymentRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrePaymentDetails</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxItemGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAttentionInformation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectLinePropertyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectSalesCurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectSalesPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectSalesUnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectTaxItemGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAssetGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAssetReasonCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FixedAssetRuleQualifierOptionName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountingDistributionTemplateName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLedgerDimension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLedgerDimensionDisplayValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormattedDeliveryAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryCityInKana</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDunsNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressPrivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressPostBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryStreetInKana</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressOrderSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceivingSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemBatchNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideSalesTax</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequisitionHeaderRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PurchReqTable</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequisitionNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>PurchReqId</DataField>
			<DataSource>PurchReqTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequisitionLineNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>SequenceNumber</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDescription</Name>
			<DataField>Name</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineType</Name>
			<DataField>LineType</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>URL</Name>
			<DataField>URL</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExternalItemNumber</Name>
			<Label>@SYS14552</Label>
			<DataField>ExternalItemId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductName</Name>
			<DataField>ItemIdNonCatalog</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProcurementProductCategoryRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProcurementCategory</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProcurementProductCategoryName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS136906</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory_ProcurementCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProcurementProductCategoryHierarchyRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>CategoryHierarchy</DataField>
			<DataSource>EcoResCategory_ProcurementCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedPurchaseQuantity</Name>
			<DataField>PurchQty</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnitOfMeasureRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PurchUnitOfMeasure</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Symbol</DataField>
			<DataSource>PurchUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePrice</Name>
			<DataField>PurchPrice</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineAmount</Name>
			<DataField>LineAmount</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountPercentage</Name>
			<DataField>LinePercent</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountAmount</Name>
			<DataField>LineDisc</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedPriceCharges</Name>
			<DataField>PurchMarkup</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorAccountNumber</Name>
			<DataField>VendAccount</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RFQRequirementLevel</Name>
			<DataField>RFQRequirement</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequisitionerRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Requisitioner</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequisitionerPersonnelNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PurchReqRequesterPersonnelNumber</Label>
			<DataField>PersonnelNumber</DataField>
			<DataSource>Requisitioner</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BuyingLegalEntityRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BuyingLegalEntity</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BuyingLegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS342437</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfoDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingOperatingUnitRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ReceivingOperatingUnit</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingOperatingUnitNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS304468</Label>
			<Mandatory>No</Mandatory>
			<DataField>OmOperatingUnitNumber</DataField>
			<DataSource>ReceivingOperatingUnit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineStatus</Name>
			<DataField>RequisitionStatus</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedDate</Name>
			<DataField>RequiredDate</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BusinessJustificationRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BusinessJustification</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BusinessJustificationCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Reason</DataField>
			<DataSource>PurchReqBusinessJustificationCodes</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BusinessJustificationDetails</Name>
			<Label>@SCM:PurchReqBusinessJustificationDetails</Label>
			<DataField>BusinessJustification</DataField>
			<DataSource>PurchReqBusJustification</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPartialDeliveryPrevented</Name>
			<DataField>LineComplete</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrepaymentRequired</Name>
			<DataField>IsPrepayment</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrePaymentDetails</Name>
			<DataField>PrePaymentDetails</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxItemGroupCode</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCode</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressName</Name>
			<Label>@SCM:DeliveryAddressName</Label>
			<DataField>DeliveryName</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPostalAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAttentionInformation</Name>
			<DataField>Attention</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesCurrencyCode</Name>
			<DataField>ProjSalesCurrencyId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesPrice</Name>
			<DataField>ProjSalesPrice</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesUnitOfMeasureRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjSalesUnitOfMeasure</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PurchReqProjectSalesUnit</Label>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>ProjSalesUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxGroupCode</Name>
			<DataField>ProjTaxGroupId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxItemGroupCode</Name>
			<DataField>ProjTaxItemGroupId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>AssetGroup</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetReasonRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ReasonRefRecId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedAssetReasonCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Reason</DataField>
			<DataSource>ReasonTableRef</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>FixedAssetRuleQualifierOptionName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>fixedAssetRuleQualifierExpression</ComputedFieldMethod>
			<ExtendedDataType>AssetRuleQualifierOptionName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDistributionTemplateRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountingDistributionTemplate</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDistributionTemplateName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PurchReqFinancialDimensionsTemplate</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>AccountingDistributionTemplate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>PurchReqLine</DataSource>
			<DimensionLegalEntityContextField>BuyingLegalEntityId</DimensionLegalEntityContextField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS138491</Label>
			<Mandatory>No</Mandatory>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultLedgerDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedDeliveryAddress</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryCityInKana</Name>
			<DataField>CityInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDunsNumber</Name>
			<DataField>DunsNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveryAddressPrivate</Name>
			<Label>@SCM:IsDeliveryAddressPrivate</Label>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryStreetInKana</Name>
			<DataField>StreetInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOneTimeDeliveryAddress</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDeliveryAddressOrderSpecificComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>ConfigId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchNumber</Name>
			<DataField>InventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationLineRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>BudgetReservationLine_PSN</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationLineNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>LineNumber</DataField>
			<DataSource>BudgetReservationLine_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetReservationDocumentNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>BudgetReservation_PSN</ConfigurationKey>
			<Mandatory>No</Mandatory>
			<DataField>DocumentNumber</DataField>
			<DataSource>BudgetReservationHeader_PSN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingOperatingUnitPartyNumber</Name>
			<AccessModifier>Internal</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>PartyNumber</DataField>
			<DataSource>ReceivingOperatingUnit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideSalesTax</Name>
			<DataField>OverrideSalesTax</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipCalendarId</Name>
			<DataField>ShipCalendarId</DataField>
			<DataSource>PurchReqLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RequisitionNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RequisitionLineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>TradeEntitySpecificDeliveryAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>ItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ReceivingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ReceivingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultLedgerDimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultLedgerDimension</Name>
					<Field>DefaultLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>PurchaseRequisitionHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>PurchaseRequisitionHeaderV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>PurchaseRequisitionHeader</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>PurchaseRequisitionLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>RequisitionNumber</Field>
					<RelatedField>RequisitionNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Project</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Project</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>PurchaseRequisitionLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PurchReqLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PurchReqLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountingDistributionTemplate</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AccountingDistributionTemplate</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountingDistributionTemplate</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfoDefault</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CompanyInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BuyingLegalEntity</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory_ProcurementCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProcurementCategory</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReceivingOperatingUnit</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>OMOperatingUnit</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ReceivingOperatingUnit</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjSalesUnitOfMeasure</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UnitOfMeasure</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjSalesUnitOfMeasure</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchUnitOfMeasure</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UnitOfMeasure</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PurchUnitOfMeasure</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchReqBusinessJustificationCodes</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PurchReqBusinessJustificationCodes</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BusinessJustification</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchReqBusJustification</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PurchReqBusJustification</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RefRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>TableId</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RefTableId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchReqTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PurchReqTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PurchReqTable</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Requisitioner</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Requisitioner</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultLedgerDimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultLedgerDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>InventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>InventDimIdDataArea</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DeliveryPostalAddress</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>AddressRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReasonTableRef</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ReasonTableRef</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ReasonRefRecId</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetRuleQualifierOption</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AssetRuleQualifierOption</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AssetRuleQualifierOption</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AssetRuleQualifierOptionLocal</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AssetRuleQualifierOptionLocal</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AssetRuleQualifierOptionLocal</Field>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetReservationLine_PSN</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetReservationLine_PSN</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetReservationHeader_PSN</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>BudgetReservationHeader_PSN</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>BudgetReservationLine_PSN</JoinDataSource>
										<JoinRelationName>BudgetReservationHeader_PSN</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>PurchReqLine</JoinDataSource>
								<JoinRelationName>BudgetReservationLine_PSN</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>