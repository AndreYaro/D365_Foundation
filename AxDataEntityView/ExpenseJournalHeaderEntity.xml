<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ExpenseJournalHeaderEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ExpenseJournalHeaderEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean isValid = ExpenseJournalHeaderEntity::validateExpenseJournal(this);

        if (isValid)
        {
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid = ExpenseJournalHeaderEntity::validateExpenseJournal(this);

        if (isValid)
        {
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateExpenseJournal</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method validates that the journal type is Expense and if they are in workflow they cannot be modified.
    /// </summary>
    /// <param name = "_journalEntity">The expesne journal table entity</param>
    /// <returns></returns>
    public static boolean validateExpenseJournal(ExpenseJournalHeaderEntity _journalEntity)
    {
        boolean isValid = true;

        LedgerJournalName ledgerJournalName = ledgerJournalName::find(_journalEntity.JournalNameId);

        if (!(ledgerJournalName.JournalType == LedgerJournalType::Cost ||
             ledgerJournalName.JournalType == LedgerJournalType::Daily))
        {
            isValid = checkFailed(strFmt("@Proj:Proj_ErrorMessage_InvalidJournalType", _journalEntity.JournalNameId, LedgerJournalType::Cost, LedgerJournalType::Daily));
        }

        isValid = isValid && LedgerJournalEntityBase::isWorkflowDocumentEditable(_journalEntity.JournalBatchNumber);

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == tablestr(LedgerJournalTable))
        {
            LedgerJournalTable  ledgerJournalTable = _dataSourceCtx.getBuffer();
            ledgerJournalTable.JournalType = LedgerJournalType::Cost;
            _dataSourceCtx.setBuffer(ledgerJournalTable);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(ExpenseJournalHeaderEntity, JournalBatchNumber):
                    ret = NumberSeq::numCheckFormat(this.JournalBatchNumber, NumberSeqReference::findReference(extendedtypenum(LedgerJournalId)).numberSequenceTable());
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ExpenseJournalHeaderEntity, LedgerJournalTable))
        {
            LedgerJournalTable ledgerJournalTable = _dataSourceCtx.getBuffer();
				
            switch (_dataSourceCtx.getDatabaseOperation())
            {
                case DataEntityDatabaseOperation::Insert:

                    if (ledgerJournalTable.isFieldSet(fieldNum(LedgerJournalTable, JournalNum)))
                    {
                        ledgerJournalTable.fieldState(fieldNum(LedgerJournalTable, JournalNum), FieldState::Defaulted);
                    }

                    JournalTableData::newTable(ledgerJournalTable).initFromJournalName(LedgerJournalName::find(this.JournalNameId));

                    if (this.Description)
                    {
                        ledgerJournalTable.Name = this.Description;
                    }
                    break;

                case DataEntityDatabaseOperation::Update:
                    
                    if (LedgerJournalName::find(this.JournalNameId).JournalType != ledgerJournalTable.JournalType)
                    {
                        ledgerJournalTable.JournalType = LedgerJournalName::find(this.JournalNameId).JournalType;
                    }
                    break;
            }

            _dataSourceCtx.setBuffer(ledgerJournalTable);
        }

        if ((_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert ||
            _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update) &&
            _dataSourceCtx.name() == dataEntityDataSourceStr(ExpenseJournalHeaderEntity, HcmWorker) &&
            !this.ApprovedBy)
        {
            HcmWorker hcmWorker= _dataSourceCtx.getBuffer();
            hcmWorker.fieldState(fieldNum(HcmWorker, PersonnelNumber), FieldState::NotSet);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        this.skipDataSourceValidateField(fieldNum(ExpenseJournalHeaderEntity, JournalNameId), true);
        this.skipDataSourceValidateField(fieldNum(ExpenseJournalHeaderEntity, ReportedAsReadyBy), true);
        this.skipDataSourceValidateField(fieldNum(ExpenseJournalHeaderEntity, RejectedBy), true);

        super(_entityCtx);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<FormRef>LedgerJournalTable</FormRef>
	<Label>@Proj:ProjectExpenseJournalHeaderEntity</Label>
	<Tags>Expense journal</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ExpenseJournalHeaderStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ExpenseJournalHeaders</PublicCollectionName>
	<PublicEntityName>ExpenseJournalHeader</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingLayer</Name>
			<DataField>CurrentOperationsTax</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNameId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>JournalName</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalBatchNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>JournalNum</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Name</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPosted</Name>
			<DataField>Posted</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityForIntercompanyTax</Name>
			<DataField>TaxObligationCompany</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsReversingEntry</Name>
			<DataField>ReverseEntry</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReversingDate</Name>
			<DataField>ReverseDate</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportedAsReadyBy</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ReportedAsReadyBy</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RejectedBy</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>RejectedBy</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovedBy</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS3492</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalBatchNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerJournalTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerJournalTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Approver</Field>
								<JoinDataSource>LedgerJournalTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalTypeCost</Name>
						<Field>JournalType</Field>
						<Status>Hidden</Status>
						<Value>Cost</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalTypeDaily</Name>
						<Field>JournalType</Field>
						<Status>Hidden</Status>
						<Value>Daily</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>