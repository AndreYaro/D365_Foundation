<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsCustomerSpecificItemBatchAttributeEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsCustomerSpecificItemBatchAttributeEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customerAccountNumberDefinition</Name>
				<Source><![CDATA[
    private static str customerAccountNumberDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCustomerSpecificItemBatchAttributeEntity),
            dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttribByItemCustomer),
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribAccountCode),
            TableGroupAll::Table,
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribAccountRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str customerGroupIdDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCustomerSpecificItemBatchAttributeEntity),
            dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttribByItemCustomer),
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribAccountCode),
            TableGroupAll::GroupId,
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribAccountRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemBatchAttributeIdDefinition</Name>
				<Source><![CDATA[
    private static str itemBatchAttributeIdDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCustomerSpecificItemBatchAttributeEntity),
            dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttribByItemCustomer),
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribCode),
            TableGroupAll::Table,
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemBatchAttributeGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str itemBatchAttributeGroupIdDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCustomerSpecificItemBatchAttributeEntity),
            dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttribByItemCustomer),
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribCode),
            TableGroupAll::GroupId,
            fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeAccountCode),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerAccountNumber), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerGroupId)]],
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeAccountRelation),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerAccountNumber), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerGroupId)]],
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeCode),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeId), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeGroupId)]],
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeRelation),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeId), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeGroupId)]],
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumTolerance),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumIntegerTolerance), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumDecimalTolerance)]],
            [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumTolerance),
                [fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumIntegerTolerance), 
                fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumDecimalTolerance)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBatchAttributeAccountCode</Name>
				<Source><![CDATA[
    private void defaultBatchAttributeAccountCode()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerAccountNumber)))
            {
                this.BatchAttributeAccountCode = TableGroupAll::Table;
            }
        }
        else if (this.CustomerGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerGroupId)))
            {
                this.BatchAttributeAccountCode = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.BatchAttributeAccountCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBatchAttributeAccountRelation</Name>
				<Source><![CDATA[
    private void defaultBatchAttributeAccountRelation()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerAccountNumber)))
            {
                this.BatchAttributeAccountRelation = this.CustomerAccountNumber;
            }
        }
        else if (this.CustomerGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, CustomerGroupId)))
            {
                this.BatchAttributeAccountRelation = this.CustomerGroupId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBatchAttributeCode</Name>
				<Source><![CDATA[
    private void defaultBatchAttributeCode()
    {
        if (this.ItemBatchAttributeId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeId)))
            {
                this.BatchAttributeCode = TableGroupAll::Table;
            }
        }
        else if (this.ItemBatchAttributeGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeGroupId)))
            {
                this.BatchAttributeCode = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.BatchAttributeCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultBatchAttributeRelation</Name>
				<Source><![CDATA[
    private void defaultBatchAttributeRelation()
    {
        if (this.ItemBatchAttributeId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeId)))
            {
                this.BatchAttributeRelation = this.ItemBatchAttributeId;
            }
        }
        else if (this.ItemBatchAttributeGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, ItemBatchAttributeGroupId)))
            {
                this.BatchAttributeRelation = this.ItemBatchAttributeGroupId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultMinimumTolerance</Name>
				<Source><![CDATA[
    private void defaultMinimumTolerance()
    {
        PdsBatchAttribType attributeType = PdsBatchAttrib::findAttribType(this.ItemBatchAttributeId);

        if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumIntegerTolerance))
                    && attributeType == PdsBatchAttribType::Integer)
        {
            this.MinimumTolerance = this.MinimumIntegerTolerance;
        }
        else if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumDecimalTolerance))
                    && attributeType == PdsBatchAttribType::Realnumber)
        {
            this.MinimumTolerance = this.MinimumDecimalTolerance;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultMaximumTolerance</Name>
				<Source><![CDATA[
    private void defaultMaximumTolerance()
    {
        PdsBatchAttribType attributeType = PdsBatchAttrib::findAttribType(this.ItemBatchAttributeId);

        if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumIntegerTolerance))
                    && attributeType == PdsBatchAttribType::Integer)
        {
            this.MaximumTolerance = this.MaximumIntegerTolerance;
        }
        else if (this.isFieldSet(fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumDecimalTolerance))
                    && attributeType == PdsBatchAttribType::Realnumber)
        {
            this.MaximumTolerance = this.MaximumDecimalTolerance;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeAccountCode): 
                this.defaultBatchAttributeAccountCode(); 
                break;

            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeAccountRelation): 
                this.defaultBatchAttributeAccountRelation(); 
                break;

            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeCode): 
                this.defaultBatchAttributeCode(); 
                break;

            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, BatchAttributeRelation): 
                this.defaultBatchAttributeRelation(); 
                break;

            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MinimumTolerance): 
                this.defaultMinimumTolerance(); 
                break;

            case fieldNum(PdsCustomerSpecificItemBatchAttributeEntity, MaximumTolerance): 
                this.defaultMaximumTolerance(); 
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.CustomerAccountNumber && this.CustomerGroupId)
        {
            ret = checkFailed("@PDS:MessageError_CustomerAndCustomerGroupSpecified");
        }
        if (ret && this.ItemBatchAttributeId && this.ItemBatchAttributeGroupId)
        {
            ret = checkFailed("@PDS:MessageError_BatchAttributeAndBatchAttributeGroupSpecified");
        }

        boolean isAnyIntegerFieldSet = this.MinimumIntegerTolerance || this.MaximumIntegerTolerance;
        boolean isAnyDecimalFieldSet = this.MinimumDecimalTolerance || this.MaximumDecimalTolerance;

        PdsBatchAttribType batchAttribType = PdsBatchAttrib::findAttribType(this.ItemBatchAttributeId);

        switch (batchAttribType)
        {
            case PdsBatchAttribType::Integer:
                if (isAnyDecimalFieldSet)
                {
                    ret = checkFailed(strFmt("@SCM:PdsItemBatchAttributeEntityFieldAssignmentError", PdsBatchAttribType::Integer));
                }
                break;
            case PdsBatchAttribType::Realnumber:
                if (isAnyIntegerFieldSet)
                {
                    ret = checkFailed(strFmt("@SCM:PdsItemBatchAttributeEntityFieldAssignmentError", PdsBatchAttribType::Realnumber));
                }
                break;
            case PdsBatchAttribType::String:
                if (isAnyDecimalFieldSet || isAnyIntegerFieldSet)
                {
                    ret = checkFailed(strFmt("@SCM:PdsItemBatchAttributeEntityFieldAssignmentError", PdsBatchAttribType::String));
                }
                break;
            case PdsBatchAttribType::Date:
                if (isAnyDecimalFieldSet || isAnyIntegerFieldSet)
                {
                    ret = checkFailed(strFmt("@SCM:PdsItemBatchAttributeEntityFieldAssignmentError", PdsBatchAttribType::Date));
                }
                break;
            case PdsBatchAttribType::Enumerate:
                if (isAnyDecimalFieldSet || isAnyIntegerFieldSet)
                {
                    ret = checkFailed(strFmt("@SCM:PdsItemBatchAttributeEntityFieldAssignmentError", PdsBatchAttribType::Enumerate));
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumIntegerToleranceDefinition</Name>
				<Source><![CDATA[
    private static str minimumIntegerToleranceDefinition()
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::integerFieldDefinition(fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribMin));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumIntegerToleranceDefinition</Name>
				<Source><![CDATA[
    private static str maximumIntegerToleranceDefinition()
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::integerFieldDefinition(fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribMax));
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumDecimalToleranceDefinition</Name>
				<Source><![CDATA[
    private static str minimumDecimalToleranceDefinition()
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::decimalFieldDefinition(fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribMin));
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumDecimalToleranceDefinition</Name>
				<Source><![CDATA[
    private static str maximumDecimalToleranceDefinition()
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::decimalFieldDefinition(fieldStr(PdsBatchAttribByItemCustomer, PdsBatchAttribMax));
    }

]]></Source>
			</Method>
			<Method>
				<Name>integerFieldDefinition</Name>
				<Source><![CDATA[
    private static str integerFieldDefinition(FieldName _fieldName)
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::fieldDefinition(PdsBatchAttribType::Integer, _fieldName, '0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>decimalFieldDefinition</Name>
				<Source><![CDATA[
    private static str decimalFieldDefinition(FieldName _fieldName)
    {
        return PdsCustomerSpecificItemBatchAttributeEntity::fieldDefinition(PdsBatchAttribType::Realnumber, _fieldName, '0.0');
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldDefinition</Name>
				<Source><![CDATA[
    private static str fieldDefinition(PdsBatchAttribType _batchAttributeType, FieldName _fieldName, str _nullLiteral)
    {
        TableName entityName = tableStr(PdsCustomerSpecificItemBatchAttributeEntity);
    
        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::comparisonField(
                            entityName, dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttrib), fieldStr(PdsBatchAttrib, PdsBatchAttribType)),
                            int2Str(enum2Int(_batchAttributeType))),
                        SysComputedColumn::returnField(entityName, dataEntityDataSourceStr(PdsCustomerSpecificItemBatchAttributeEntity, PdsBatchAttribByItemCustomer), _fieldName),
                        SysComputedColumn::returnLiteral(_nullLiteral));
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        ret = super(_entityCtx, _dataSourceCtx);
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsBatchAttrib</ConfigurationKey>
	<DeveloperDocumentation>@PDS:Developer_PdsCustomerSpecificItemBatchAttributeEntity</DeveloperDocumentation>
	<FormRef>PdsBatchAttribByitemCustomer</FormRef>
	<Label>@PDS:DataEntity_PdsCustomerSpecificItemBatchAttributeEntity</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PdsCustomerSpecificItemBatchAttributeStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>PdsBatchAttribItemId</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchAttributeAccountCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribAccountCode</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchAttributeAccountRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribAccountRelation</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerAccountNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchAttributeCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribCode</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BatchAttributeRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribRelation</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ItemBatchAttributeId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemBatchAttributeIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsBatchAttribId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ItemBatchAttributeGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemBatchAttributeGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsBatchAttribGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumTolerance</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribMin</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumTolerance</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsBatchAttribMax</DataField>
			<DataSource>PdsBatchAttribByItemCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>MinimumIntegerTolerance</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PdsItemBatchAttributeMinimumIntegerToleranceLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumIntegerToleranceDefinition</ComputedFieldMethod>
			<ExtendedDataType>Integer</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>MaximumIntegerTolerance</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PdsItemBatchAttributeMaximumIntegerToleranceLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumIntegerToleranceDefinition</ComputedFieldMethod>
			<ExtendedDataType>Integer</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumDecimalTolerance</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PdsItemBatchAttributeMinimumDecimalToleranceLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumDecimalToleranceDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsBatchAttribMin</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumDecimalTolerance</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PdsItemBatchAttributeMaximumDecimalToleranceLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumDecimalToleranceDefinition</ComputedFieldMethod>
			<ExtendedDataType>PdsBatchAttribMax</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemBatchAttributeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemBatchAttributeGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PdsBatchAttribByItemCustomer</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PdsBatchAttribByItemCustomer</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsBatchAttrib</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PdsBatchAttrib</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>PdsBatchAttrib</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>