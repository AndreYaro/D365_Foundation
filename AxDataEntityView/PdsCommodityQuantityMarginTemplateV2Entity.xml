<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
  <Name>PdsCommodityQuantityMarginTemplateV2Entity</Name>
  <SourceCode>
    <Declaration><![CDATA[
public class PdsCommodityQuantityMarginTemplateV2Entity extends common
{
}
]]></Declaration>
    <Methods>
      <Method>
        <Name>mapEntityToDataSource</Name>
        <Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        // Set the correct inventDimId on the table buffer.
                        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                        _dataSourceCtx.setBuffer(inventDim);
                        break;
                }
                break;

            default:
                super(_entityCtx, _dataSourceCtx);
                break;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>updateEntityDataSource</Name>
        <Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, InventDim))
        {
            // Read only datasource was handled by mapEntityToDataSource(...)
            return true;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            this.reapplyInventoryDimensions(_dataSourceCtx);
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>insertEntityDataSource</Name>
        <Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, InventDim))
        {
            // Read only datasource was handled by mapEntityToDataSource(...)
            return true;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret)
        {
            this.reapplyInventoryDimensions(_dataSourceCtx);
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>reapplyInventoryDimensions</Name>
        <Source><![CDATA[
    /// <summary>
    /// Re-applies inventory dimensions as defaulting logic may have change them (e.g. set warehouse based on site + item)
    /// </summary>
    /// <param name = "_dataSourceCtx">The datasource context</param>
    private void reapplyInventoryDimensions(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, PdsComdPricingTemplateLine))
        {
            PdsComdPricingTemplateLine pricingTemplateLine = _dataSourceCtx.getBuffer();
            this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(pricingTemplateLine.inventDim());
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>customerAccountNumberDefinition</Name>
        <Source><![CDATA[
    private static str customerAccountNumberDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCommodityQuantityMarginTemplateV2Entity),
            dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, PdsComdPricingTemplateLine),
            fieldStr(PdsComdPricingTemplateLine, MarginAccountCode),
            PriceDiscPartyCodeType::Table,
            fieldStr(PdsComdPricingTemplateLine, MarginAccountRelation),
            '');
    }

]]></Source>
      </Method>
      <Method>
        <Name>priceCustomerGroupCodeDefinition</Name>
        <Source><![CDATA[
    private static str priceCustomerGroupCodeDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCommodityQuantityMarginTemplateV2Entity),
            dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, PdsComdPricingTemplateLine),
            fieldStr(PdsComdPricingTemplateLine, MarginAccountCode),
            PriceDiscPartyCodeType::GroupId,
            fieldStr(PdsComdPricingTemplateLine, MarginAccountRelation),
            '');
    }

]]></Source>
      </Method>
      <Method>
        <Name>itemNumberDefinition</Name>
        <Source><![CDATA[
    private static str itemNumberDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCommodityQuantityMarginTemplateV2Entity),
            dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, PdsComdPricingTemplateLine),
            fieldStr(PdsComdPricingTemplateLine, MarginItemCode),
            PriceDiscProductCodeType::Table,
            fieldStr(PdsComdPricingTemplateLine, MarginItemRelation),
            '');
    }

]]></Source>
      </Method>
      <Method>
        <Name>productGroupIdDefinition</Name>
        <Source><![CDATA[
    private static str productGroupIdDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(PdsCommodityQuantityMarginTemplateV2Entity),
            dataEntityDataSourceStr(PdsCommodityQuantityMarginTemplateV2Entity, PdsComdPricingTemplateLine),
            fieldStr(PdsComdPricingTemplateLine, MarginItemCode),
            PriceDiscProductCodeType::GroupId,
            fieldStr(PdsComdPricingTemplateLine, MarginItemRelation),
            '');
    }

]]></Source>
      </Method>
      <Method>
        <Name>getExtension</Name>
        <Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
      </Method>
      <Method>
        <Name>getDefaultingDependencies</Name>
        <Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ShippingSiteId),
                [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ShippingWarehouseId)]],
            [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginAccountCode),
                [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, CustomerAccountNumber), 
                fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, PriceCustomerGroupCode)]],
            [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginAccountRelation),
                [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, CustomerAccountNumber), 
                fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, PriceCustomerGroupCode)]],
            [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginItemCode),
                [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ItemNumber), 
                fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ProductGroupId)]],
            [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginItemRelation),
                [fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ItemNumber), 
                fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ProductGroupId)]]
        ];
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultMarginAccountCode</Name>
        <Source><![CDATA[
    private void defaultMarginAccountCode()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, CustomerAccountNumber)))
            {
                this.MarginAccountCode = PriceDiscPartyCodeType::Table;
            }
        }
        else if (this.PriceCustomerGroupCode)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, PriceCustomerGroupCode)))
            {
                this.MarginAccountCode = PriceDiscPartyCodeType::GroupId;
            }
        }
        else
        {
            this.MarginAccountCode = PriceDiscPartyCodeType::All;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultMarginAccountRelation</Name>
        <Source><![CDATA[
    private void defaultMarginAccountRelation()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, CustomerAccountNumber)))
            {
                this.MarginAccountRelation = this.CustomerAccountNumber;
            }
        }
        else if (this.PriceCustomerGroupCode)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, PriceCustomerGroupCode)))
            {
                this.MarginAccountRelation = this.PriceCustomerGroupCode;
            }
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultMarginItemCode</Name>
        <Source><![CDATA[
    private void defaultMarginItemCode()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ItemNumber)))
            {
                this.MarginItemCode = PriceDiscProductCodeType::Table;
            }
        }
        else if (this.ProductGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ProductGroupId)))
            {
                this.MarginItemCode = PriceDiscProductCodeType::GroupId;
            }
        }
        else
        {
            this.MarginItemCode = PriceDiscProductCodeType::All;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultMarginItemRelation</Name>
        <Source><![CDATA[
    private void defaultMarginItemRelation()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ItemNumber)))
            {
                this.MarginItemRelation = this.ItemNumber;
            }
        }
        else if (this.ProductGroupId)
        {
            if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ProductGroupId)))
            {
                this.MarginItemRelation = this.ProductGroupId;
            }
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>defaultField</Name>
        <Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginAccountCode): 
                this.defaultMarginAccountCode(); 
                break;

            case fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginAccountRelation): 
                this.defaultMarginAccountRelation(); 
                break;

            case fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginItemCode): 
                this.defaultMarginItemCode(); 
                break;

            case fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, MarginItemRelation): 
                this.defaultMarginItemRelation(); 
                break;

            case fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ShippingSiteId):
                if (this.isFieldSet(fieldNum(PdsCommodityQuantityMarginTemplateV2Entity, ShippingWarehouseId)))
                {
                    this.ShippingSiteId = InventLocation::find(this.ShippingWarehouseId).InventSiteId;
                }
                break;
        }
    }

]]></Source>
      </Method>
      <Method>
        <Name>validateActiveInventoryDimensions</Name>
        <Source><![CDATA[
    private boolean validateActiveInventoryDimensions()
    {
        boolean ret = true;
        
        if (this.MarginItemCode != PriceDiscProductCodeType::Table)
        {
            if (this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId() != InventDim::inventDimIdBlank())
            {
                ret = checkFailed("@PDS:MessageError_InventDimsSpecifiedForNonItemSpecificLine");
            }
        }
        else
        {
            this.InventInventoryDimensionEntityFieldsMapping::validate(this.MarginItemRelation);
        }

        return ret;
    }

]]></Source>
      </Method>
      <Method>
        <Name>validateWrite</Name>
        <Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.CustomerAccountNumber && this.PriceCustomerGroupCode)
        {
            ret = checkFailed("@PDS:MessageError_CustomerAndPriceGroupSpecified");
        }
        if (ret && this.ItemNumber && this.ProductGroupId)
        {
            ret = checkFailed("@PDS:MessageError_ItemAndItemGroupSpecified");
        }
        if (ret && this.MarginAmount && this.MarginPercentage)
        {
            ret = checkFailed("@PDS:MessageError_MarginAmountAndPercentageSpecified");
        }

        ret = ret & this.validateActiveInventoryDimensions();

        return ret;
    }

]]></Source>
      </Method>
    </Methods>
  </SourceCode>
  <ConfigurationKey>PdsCommodity</ConfigurationKey>
  <DeveloperDocumentation>@PDS:Developer_PdsCommodityQuantityMarginTemplateEntity</DeveloperDocumentation>
  <FormRef>PdsComdPricingTemplateLine</FormRef>
  <Label>@PDS:DataEntity_PdsCommodityQuantityMarginTemplateEntityV2</Label>
  <Tags>Setup</Tags>
  <DataManagementEnabled>Yes</DataManagementEnabled>
  <DataManagementStagingTable>PdsCommodityQuantityMarginTemplateV2Staging</DataManagementStagingTable>
  <EntityCategory>Reference</EntityCategory>
  <Modules>InventoryAndWarehouseManagement</Modules>
  <PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
  <PrimaryKey>EntityKey</PrimaryKey>
  <DeleteActions />
  <FieldGroups>
    <AxTableFieldGroup>
      <Name>AutoReport</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoLookup</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoIdentification</Name>
      <AutoPopulate>Yes</AutoPopulate>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoSummary</Name>
      <Fields />
    </AxTableFieldGroup>
    <AxTableFieldGroup>
      <Name>AutoBrowse</Name>
      <Fields />
    </AxTableFieldGroup>
  </FieldGroups>
  <Fields>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>CommodityPricingTemplateId</Name>
      <DataField>PricingTemplateId</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginAccountCode</Name>
      <AccessModifier>Private</AccessModifier>
      <DataField>MarginAccountCode</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginAccountRelation</Name>
      <AccessModifier>Private</AccessModifier>
      <DataField>MarginAccountRelation</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewUnmappedFieldString">
      <Name>CustomerAccountNumber</Name>
      <AllowEdit>Yes</AllowEdit>
      <AllowEditOnCreate>Yes</AllowEditOnCreate>
      <ConfigurationKey>PriceDisc</ConfigurationKey>
      <Mandatory>No</Mandatory>
      <ComputedFieldMethod>customerAccountNumberDefinition</ComputedFieldMethod>
      <ExtendedDataType>CustAccount</ExtendedDataType>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewUnmappedFieldString">
      <Name>PriceCustomerGroupCode</Name>
      <AllowEdit>Yes</AllowEdit>
      <AllowEditOnCreate>Yes</AllowEditOnCreate>
      <Mandatory>No</Mandatory>
      <ComputedFieldMethod>priceCustomerGroupCodeDefinition</ComputedFieldMethod>
      <ExtendedDataType>PriceGroupId</ExtendedDataType>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginItemCode</Name>
      <AccessModifier>Private</AccessModifier>
      <DataField>MarginItemCode</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginItemRelation</Name>
      <AccessModifier>Private</AccessModifier>
      <DataField>MarginItemRelation</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewUnmappedFieldString">
      <Name>ItemNumber</Name>
      <AllowEdit>Yes</AllowEdit>
      <AllowEditOnCreate>Yes</AllowEditOnCreate>
      <ConfigurationKey>PriceDisc</ConfigurationKey>
      <Mandatory>No</Mandatory>
      <ComputedFieldMethod>itemNumberDefinition</ComputedFieldMethod>
      <ExtendedDataType>ItemId</ExtendedDataType>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewUnmappedFieldString">
      <Name>ProductGroupId</Name>
      <AllowEdit>Yes</AllowEdit>
      <AllowEditOnCreate>Yes</AllowEditOnCreate>
      <ConfigurationKey>PriceDisc</ConfigurationKey>
      <Mandatory>No</Mandatory>
      <ComputedFieldMethod>productGroupIdDefinition</ComputedFieldMethod>
      <ExtendedDataType>ItemGroupId</ExtendedDataType>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>OrderQuantity</Name>
      <DataField>InventQty</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>FromQuantity</Name>
      <DataField>InventQtyFrom</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ToQuantity</Name>
      <DataField>InventQtyTo</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>CostMultiplier</Name>
      <DataField>MarginMult</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginAmount</Name>
      <DataField>MarginChange</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>MarginPercentage</Name>
      <DataField>MarginPerc</DataField>
      <DataSource>PdsComdPricingTemplateLine</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ShippingSiteId</Name>
      <DataField>InventSiteId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ShippingWarehouseId</Name>
      <DataField>InventLocationId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ShippingWarehouseLocationId</Name>
      <DataField>wMSLocationId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductConfigurationId</Name>
      <DataField>configId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductColorId</Name>
      <DataField>InventColorId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductSizeId</Name>
      <DataField>InventSizeId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductStyleId</Name>
      <DataField>InventStyleId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ProductVersionId</Name>
      <DataField>InventVersionId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ItemBatchNumber</Name>
      <DataField>inventBatchId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
    <AxDataEntityViewField xmlns="" i:type="AxDataEntityViewMappedField">
      <Name>ItemSerialNumber</Name>
      <DataField>inventSerialId</DataField>
      <DataSource>InventDim</DataSource>
    </AxDataEntityViewField>
  </Fields>
  <Keys>
    <AxDataEntityViewKey>
      <Name>EntityKey</Name>
      <Fields>
        <AxDataEntityViewKeyField>
          <DataField>CommodityPricingTemplateId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>CustomerAccountNumber</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>PriceCustomerGroupCode</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ItemNumber</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductGroupId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>FromQuantity</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ShippingSiteId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ShippingWarehouseId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductConfigurationId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductColorId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductSizeId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductStyleId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ProductVersionId</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ItemBatchNumber</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ItemSerialNumber</DataField>
        </AxDataEntityViewKeyField>
        <AxDataEntityViewKeyField>
          <DataField>ShippingWarehouseLocationId</DataField>
        </AxDataEntityViewKeyField>
      </Fields>
    </AxDataEntityViewKey>
  </Keys>
  <Mappings>
    <AxTableMapping>
      <MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
      <Connections>
        <AxTableMappingConnection>
          <MapField>configId</MapField>
          <MapFieldTo>ProductConfigurationId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>inventBatchId</MapField>
          <MapFieldTo>ItemBatchNumber</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventColorId</MapField>
          <MapFieldTo>ProductColorId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventGTDId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventLocationId</MapField>
          <MapFieldTo>ShippingWarehouseId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventOwnerId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventProfileId_RU</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>inventSerialId</MapField>
          <MapFieldTo>ItemSerialNumber</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventSiteId</MapField>
          <MapFieldTo>ShippingSiteId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventSizeId</MapField>
          <MapFieldTo>ProductSizeId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventStatusId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventStyleId</MapField>
          <MapFieldTo>ProductStyleId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>InventVersionId</MapField>
          <MapFieldTo>ProductVersionId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>LicensePlateId</MapField>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>wMSLocationId</MapField>
          <MapFieldTo>ShippingWarehouseLocationId</MapFieldTo>
        </AxTableMappingConnection>
        <AxTableMappingConnection>
          <MapField>wMSPalletId</MapField>
        </AxTableMappingConnection>
      </Connections>
    </AxTableMapping>
  </Mappings>
  <Ranges />
  <Relations />
  <StateMachines />
  <ViewMetadata>
    <Name>Metadata</Name>
    <SourceCode>
      <Methods>
        <Method>
          <Name>classDeclaration</Name>
          <Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
        </Method>
      </Methods>
    </SourceCode>
    <DataSources>
      <AxQuerySimpleRootDataSource>
        <Name>PdsComdPricingTemplateLine</Name>
        <DynamicFields>Yes</DynamicFields>
        <Table>PdsComdPricingTemplateLine</Table>
        <DataSources>
          <AxQuerySimpleEmbeddedDataSource>
            <Name>InventDim</Name>
            <DynamicFields>Yes</DynamicFields>
            <IsReadOnly>Yes</IsReadOnly>
            <Table>InventDim</Table>
            <DataSources />
            <DerivedDataSources />
            <Fields />
            <Ranges />
            <JoinMode>OuterJoin</JoinMode>
            <Relations>
              <AxQuerySimpleDataSourceRelation>
                <Name>QueryDataSourceRelation1</Name>
                <JoinRelationName>InventDim</JoinRelationName>
              </AxQuerySimpleDataSourceRelation>
            </Relations>
          </AxQuerySimpleEmbeddedDataSource>
        </DataSources>
        <DerivedDataSources />
        <Fields />
        <Ranges />
        <GroupBy />
        <Having />
        <OrderBy />
      </AxQuerySimpleRootDataSource>
    </DataSources>
  </ViewMetadata>
</AxDataEntityView>