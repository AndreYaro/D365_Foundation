<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjJournalTransEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjJournalTransEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjJournalTransEntity,ResourceView))
        {
            ResourceView resource;

            select firstonly resource
            where resource.ResourceCompanyId == this.ResourceCompanyId &&
                  resource.ResourceId == this.ResourceId;
            ret = resource;
        }

        else  if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjJournalTransEntity,ResourceCategoryView))
        {
            ResourceCategoryView resourceCategoryView;
            select firstonly resourceCategoryView
            where resourceCategoryView.CategoryId == this.ResourceCategoryId;
            ret = resourceCategoryView;
        }

        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [

            [fieldNum(ProjJournalTransEntity, JournalId)],

            [fieldNum(ProjJournalTransEntity, VoucherDate)],

            [fieldNum(ProjJournalTransEntity, CurrencyId),
                [fieldNum(ProjJournalTransEntity, ProjectID)]]

        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjJournalTransEntity, JournalId):
                if (this.isFieldSet(fieldNum(ProjJournalTransEntity, JournalId)))
                {
                    this.assignDefaultValuesFromHeader();
                }
                break;

            case fieldNum(ProjJournalTransEntity, CurrencyId):
                if (this.isFieldSet(fieldNum(ProjJournalTransEntity, ProjectID)))
                {
                    this.setCurrencyId();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.getDatabaseOperation())
        {
            case DataEntityDatabaseOperation::Insert:
                if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjJournalTransEntity, ProjJournalTrans))
                {
                    ProjJournalTrans    projJournalTrans = _dataSourceCtx.getBuffer();

                    if (!this.CurrencyId)
                    {
                        projJournalTrans.setCurrencyId();
                    }

                    if (!this.LineProperty)
                    {
                        projJournalTrans.setLineProperty();
                    }
                    this.assignDefaultValuesFromHeader();

                    if (!this.Resource)
                    {
                        projJournalTrans.setResourceFromResourceId(this.ResourceId, this.ResourceCompanyId);
                    }

                    if (!this.VoucherDate)
                    {
						// This is setting the voucher data field
                        ProjJournalTrans.setTransDate();
                    }
                    this.setPriceGroup();

                    if (!this.SalesTaxGroup)
                    {
                        projJournalTrans.setTaxGroupId();
                    }

                    if (!this.ItemSalesTaxGroup)
                    {
                        projJournalTrans.setTaxItemGroupId(projJournalTrans.CategoryId);
                    }

                    if (!this.DimensionDisplayValue)
                    {
                        projJournalTrans.setDimension();
                    }

                    if (!this.CostPrice)
                    {
                        projJournalTrans.setHourCostPrice();
                    }

                    if (!this.SalesPrice)
                    {
                        if (ProjJournalTable::find(projJournalTrans.JournalId).JournalType == ProjJournalType::Revenue)
                        {
                            projJournalTrans.setRevenueSalesPrice();
                        }
                        else
                        {
                            projJournalTrans.setHourSalesPrice();
                        }
                    }

                    if (!projJournalTrans.Qty && ProjJournalTable::find(projJournalTrans.JournalId).JournalType == ProjJournalType::Revenue)
                    {
                        projJournalTrans.Qty = 1;
                    }

                    _dataSourceCtx.setBuffer(projJournalTrans);
                }
        }

        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjJournalTransEntity,ResourceView))
        {
            // If resource related fields are blank make sure they are marked as not set. Otherwise the framework will look
            // for a related record in ResourceView with empty resource/company and fail when it doesn't find such record.
            ResourceView resource = _dataSourceCtx.getBuffer();
            if (!resource.ResourceId)
            {
                resource.fieldState(fieldnum(ResourceView, resourceid), FieldState::NotSet);
            }
            if (!resource.ResourceCompanyId)
            {
                resource.fieldState(fieldnum(ResourceView, ResourceCompanyId), FieldState::NotSet);
            }
        }

        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjJournalTransEntity,ResourceCategoryView))
        {
            ResourceCategoryView resourceCategoryView = _dataSourceCtx.getBuffer();
            if (!resourceCategoryView.CategoryId)
            {
                resourceCategoryView.fieldState(fieldnum(ResourceCategoryView, CategoryId), FieldState::NotSet);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjJournalTransEntity, ProjJournalTrans))
        {
            Voucher voucher = this.getVoucherNumber(_dataSourceCtx.getBuffer());

            if (voucher)
            {
                this.Voucher = voucher;
            }
        }

        ret = super(_entityCtx, _dataSourceCtx);
               
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>assignDefaultValuesFromHeader</Name>
				<Source><![CDATA[
    private void assignDefaultValuesFromHeader()
    {
        ProjJournalTable  projJournalTable   = ProjJournalTable::find(this.JournalId);

        if (projJournalTable.ProjId && !this.ProjectID)
        {
            this.ProjectID = projJournalTable.ProjId;
        }

        if (projJournalTable.CategoryId && !this.Category)
        {
            this.Category = projJournalTable.CategoryId;
        }

        if (projJournalTable.Txt && !this.Description)
        {
            this.Description = projJournalTable.Txt;
        }

        if (projJournalTable.LinePropertyId && !this.LineProperty)
        {
            this.LineProperty = projJournalTable.LinePropertyId;
        }

        if (projJournalTable.JournalType == ProjJournalType::Hour && projJournalTable.Resource && !this.ResourceId && !this.ResourceCompanyId)
        {
            ResourceView resource;
            select firstonly resource where resource.RecId == projJournalTable.Resource;
            this.ResourceId = resource.ResourceId;
            this.ResourceCompanyId = resource.ResourceCompanyId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setPriceGroup</Name>
				<Source><![CDATA[
    private void setPriceGroup()
    {
        this.PriceGroup   = ProjInvoiceTable::find(ProjTable::find(this.ProjectID).ProjInvoiceProjId).ProjPriceGroup;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);
                
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVoucherNumber</Name>
				<Source><![CDATA[
    private Voucher getVoucherNumber(projJournalTrans   _lastProjJournalTrans)
    {
        ProjJournalTable            projJournalTable;
        Voucher                     newVoucher;

        projJournalTable = ProjJournalTable::find(this.JournalId);

        JournalTableData journalTableData = new JournalTableData(projJournalTable);
        JournalTransData journalTransData = new JournalTransData(_lastProjJournalTrans,journalTableData);

        if (journalTableData.journalVoucherNum().allowEdit())
        {
            newVoucher = this.Voucher;
        }
        else if (journalTableData.journalVoucherNum() && journalTableData.journalTable().VoucherDraw == JournalVoucherDraw::Entering)
        {
            journalTransData.initVoucher(_lastProjJournalTrans.Voucher, false);
            newVoucher = journalTransData.journalTrans().Voucher;
        }

        return newVoucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setCurrencyId</Name>
				<Source><![CDATA[
    private void setCurrencyId()
    {
        if (this.CurrencyId)
        {
            return;
        }
        if (ProjInvoiceTable::find(ProjTable::find(this.ProjectID).ProjInvoiceProjId).CurrencyId)
        {
            this.CurrencyId = ProjInvoiceTable::find(ProjTable::find(this.ProjectID).ProjInvoiceProjId).CurrencyId;
        }
        else
        {
            this.CurrencyId = Ledger::accountingCurrency(CompanyInfo::findDataArea(curext()).RecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        this.skipDataSourceValidateField(fieldNum(ProjJournalTransEntity, LineNumber), true);
        this.skipDataSourceValidateField(fieldNum(ProjJournalTransEntity, JournalId), true);

        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        if (!this.CurrencyId && _fieldIdToCheck == fieldNum(ProjJournalTransEntity, CurrencyId))
        {
            ret = true;
        }
        else
        {
            ret = super(_fieldIdToCheck);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>Lookup_ProjectID</Name>
				<Source><![CDATA[
    [SysODataActionAttribute("Lookup_ProjectID", true),
     SysODataCollectionAttribute("return", Types::String, "Value")]
    public List Lookup_ProjectID()
    {
        List projectIDs = new List(Types::String);
        ProjTable   projTable;

        while select ProjId from projTable
            order by projTable.ProjId
            where projTable.Status == ProjStatus::Created
                && projTable.Status == ProjStatus::InProcess
        {
            projectIDs.addEnd(projTable.ProjId);
        }

        return projectIDs;
    }

]]></Source>
			</Method>
			<Method>
				<Name>activityNumberCustomLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a custom lookup serialized string for the activity numbers field for the selected project.
    /// </summary>
    /// <param name="_fields">
    /// The <c>Array</c> of entity fields values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// A serialized string with the list of activity numbers for the lookup.
    /// </returns>
    [SysODataActionAttribute("ProjJournalTransEntityActivityNumberFieldCustomLookup", false),
     SysODataCollectionAttribute("_fields", Types::String),
     SysODataFieldLookupAttribute("ActivityNumber"),
     Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static str activityNumberCustomLookup(Array _fields)
    {
        return ProjEntityCustomLookupHelper::getActivityNumberLookupForProjJournalTransEntity(_fields);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ProjJournalTable projJournalTable = projJournalTable::find(this.JournalId);

        if (ret && projJournalTable.Posted)
        {
            ret = checkFailed("@SYS21497");
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ProjJournalTable</FormRef>
	<Label>@Proj:ProjectJournalLines</Label>
	<Tags>Hour journal</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjJournalTransStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>JournalTrans</PublicCollectionName>
	<PublicEntityName>JournalTrans</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Category</Name>
			<DataField>CategoryId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostPrice</Name>
			<DataField>CostPrice</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Dimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartTime</Name>
			<DataField>FromTime</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LineNum</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineProperty</Name>
			<DataField>LinePropertyId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TypeOfOperation</Name>
			<DataField>OperationType_MX</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<DataField>PeriodDate</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectID</Name>
			<DataField>ProjId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceGroup</Name>
			<DataField>ProjPriceGroupID</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectDate</Name>
			<DataField>ProjTransDate</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Cost</Name>
			<DataField>PSAIndirectComponentGroup</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PercentageComplete</Name>
			<DataField>PSAPercentCompl</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PSAWrkCtrId</Name>
			<DataField>PSAWrkCtrId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Hours</Name>
			<DataField>Qty</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Resource</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Resource</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Role</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ResourceCategory</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReversingDate</Name>
			<DataField>ReverseDate</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReversingEntry</Name>
			<DataField>ReverseEntry</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPrice</Name>
			<DataField>SalesPrice</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroup</Name>
			<DataField>TaxGroupId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemSalesTaxGroup</Name>
			<DataField>TaxItemGroupId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndTime</Name>
			<DataField>ToTime</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VoucherDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionID</Name>
			<DataField>TransId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Txt</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionDisplayValue</Name>
			<Label>@SYS138491</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>JournalId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ResourceId</DataField>
			<DataSource>ResourceView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCompanyId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ResourceCompanyId</DataField>
			<DataSource>ResourceView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCategoryId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS32677</Label>
			<Mandatory>No</Mandatory>
			<DataField>CategoryId</DataField>
			<DataSource>ResourceCategoryView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyId</Name>
			<DataField>CurrencyId</DataField>
			<DataSource>ProjJournalTrans</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>JournalId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Dimension</Name>
					<Field>Dimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjJournalTableEntity</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>ProjJournalTableEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>JournalId</Field>
					<RelatedField>JournalBatchNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjectEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectID</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjProjectLinePropertyEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjProjectLinePropertyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>LineProperty</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>OMLegalEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>OMLegalEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ResourceCompanyId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ResResourceDataEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ResResourceDataEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ResourceId</Field>
					<RelatedField>ResourceId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ResResourceCategoryDataEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ResResourceCategoryDataEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ResourceCategoryId</Field>
					<RelatedField>RoleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>CategoryRelation</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjectCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Category</Field>
					<RelatedField>Category</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjJournalTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>ProjJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ResourceView</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ResourceView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Resource</Field>
								<JoinDataSource>ProjJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ResourceCategoryView</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ResourceCategoryView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ResourceCategory</Field>
								<JoinDataSource>ProjJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>