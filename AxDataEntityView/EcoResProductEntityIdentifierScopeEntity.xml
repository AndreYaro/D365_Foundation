<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductEntityIdentifierScopeEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductEntityIdentifierScopeEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>vendorAccountCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the vendor account number if the record is refering a vendor or sets it to empty if the record does not reference a vendor.
    /// </summary>
    /// <returns>The value of the vendor account field for the current record</returns>
    public static str vendorAccountCalc()
    {
        return EcoResProductEntityIdentifierScopeEntity::calculatePartyReferenceValueField(EcoResProductEntityIdentifierPartyReferenceType::Vendor);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerAccountCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the customer account number if the record is refering a vendor or sets it to empty if the record does not reference a customer.
    /// </summary>
    /// <returns>The value of the customer account field for the current record</returns>
    public static str customerAccountCalc()
    {
        return EcoResProductEntityIdentifierScopeEntity::calculatePartyReferenceValueField(EcoResProductEntityIdentifierPartyReferenceType::Customer);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorGroupCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the vendor group number if the record is refering a vendor or sets it to empty if the record does not reference a vendor group.
    /// </summary>
    /// <returns>The value of the vendor group field for the current record</returns>
    public static str vendorGroupCalc()
    {
        return EcoResProductEntityIdentifierScopeEntity::calculatePartyReferenceValueField(EcoResProductEntityIdentifierPartyReferenceType::VendorGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculates the customer group number if the record is refering a vendor or sets it to empty if the record does not reference a customer group.
    /// </summary>
    /// <returns>The value of the customer group field for the current record</returns>
    public static str customerGroupCalc()
    {
        return EcoResProductEntityIdentifierScopeEntity::calculatePartyReferenceValueField(EcoResProductEntityIdentifierPartyReferenceType::CustomerGroup);
    }

]]></Source>
			</Method>
			<Method>
				<Name>calculatePartyReferenceValueField</Name>
				<Source><![CDATA[
    private static str calculatePartyReferenceValueField(EcoResProductEntityIdentifierPartyReferenceType _partyReferenceType)
    {
        str entityStr = tableStr(EcoResProductEntityIdentifierScopeEntity);

        str partyReferenceTypeFieldName = fieldStr(EcoResProductEntityIdentifierScope, PartyReferenceType);
        str partyReferenceValueFieldName = fieldStr(EcoResProductEntityIdentifierScope, PartyReferenceValue);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(entityStr, identifierStr(EcoResProductEntityIdentifierScope), partyReferenceTypeFieldName),
            SysComputedColumn::comparisonLiteral(_partyReferenceType)),
            SysComputedColumn::returnField(entityStr, identifierStr(EcoResProductEntityIdentifierScope), partyReferenceValueFieldName),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@SCM:EcoResProductEntityIdentifierScopeEntity</Label>
	<Tags>CDS products</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EcoResProductEntityIdentifierScopeStaging</DataManagementStagingTable>
	<IsReadOnly>Yes</IsReadOnly>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntity</Name>
			<DataField>LegalEntity</DataField>
			<DataSource>EcoResProductEntityIdentifierScope</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Code</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Code</DataField>
			<DataSource>EcoResProductEntityIdentifierScope</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CodeId</Name>
			<DataField>Id</DataField>
			<DataSource>EcoResProductEntityIdentifierCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CodeType</Name>
			<DataField>Type</DataField>
			<DataSource>EcoResProductEntityIdentifierCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccount</Name>
			<ComputedFieldMethod>customerAccountCalc</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerGroup</Name>
			<ComputedFieldMethod>customerGroupCalc</ComputedFieldMethod>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorAccount</Name>
			<ComputedFieldMethod>vendorAccountCalc</ComputedFieldMethod>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorGroup</Name>
			<ComputedFieldMethod>vendorGroupCalc</ComputedFieldMethod>
			<ExtendedDataType>VendGroupId</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntity</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CodeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CodeType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccount</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroup</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorAccount</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorGroup</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResProductEntityIdentifierScope</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResProductEntityIdentifierScope</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProductEntityIdentifierCode</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResProductEntityIdentifierCode</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResProductEntityIdentifierCode</Name>
								<JoinRelationName>EcoResProductEntityIdentifierCode</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>