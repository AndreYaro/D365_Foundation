<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjCDSActualsImportEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjCDSActualsImportEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.ExternalReference == '')
        {
            this.ExternalReference = this.Voucher;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjCDSActualsImportEntity, ProjCDSActualsImport))
            {
                ProjCDSActualsImport import = ProjCDSActualsImport::findByActualId(this.ActualId);

                if (import)
                {
                    //
                    // AX already has this record from the external system.  We are getting this record again due to 1) the external
                    // system doesn't know our entire key, 2) we sent an update to the external system causing it to send an update
                    // back to us, 3) we don't need to update anything for our record.  Mark the record as a duplicate for later deletion.
                    //

                    ProjCDSActualsImport insertingRecord = _dataSourceCtx.getBuffer() as ProjCDSActualsImport;

                    insertingRecord.IsDuplicate = NoYes::Yes;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId dataAreaId = this.DataAreaId ? this.DataAreaId : curExt();
        if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(dataAreaId))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId dataAreaId = this.DataAreaId ? this.DataAreaId : curExt();
        if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(dataAreaId))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId dataAreaId = this.DataAreaId ? this.DataAreaId : curExt();
        if (ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(dataAreaId))
        {
            throw error(Error::wrongUseOfFunction(funcName()));
        }
    
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjCDSActualsImportEntityDevDoc</DeveloperDocumentation>
	<Label>@Proj:ProjCDSActualsImportEntityTitle</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjCDSActualsImportStaging</DataManagementStagingTable>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDate</Name>
			<DataField>AccountingDate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActualId</Name>
			<DataField>ActualId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActualsImportId</Name>
			<DataField>ActualsImportId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AdjustmentStatus</Name>
			<DataField>AdjustmentStatus</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Amount</Name>
			<DataField>Amount</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AmountMST</Name>
			<DataField>AmountMST</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BillingStatusId</Name>
			<DataField>BillingStatusId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BillingType</Name>
			<DataField>BillingType</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractId</Name>
			<DataField>ContractId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractLine</Name>
			<DataField>ContractLine</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractingUnit</Name>
			<DataField>ContractingUnit</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentDate</Name>
			<DataField>DocumentDate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<DataField>EndDate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExchangeRateDate</Name>
			<DataField>ExchangeRateDate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExchangeRate</Name>
			<DataField>ExchangeRate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExternalDescription</Name>
			<DataField>ExternalDescription</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExternalReference</Name>
			<DataField>ExternalReference</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceId</Name>
			<DataField>InvoiceId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsJournalized</Name>
			<DataField>IsJournalized</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OwningBusinessId</Name>
			<DataField>OwningBusinessId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OwningUser</Name>
			<DataField>OwningUser</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjectId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Status</Name>
			<DataField>Status</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StatusReason</Name>
			<DataField>StatusReason</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<DataField>StartDate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskId</Name>
			<DataField>TaskId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionClassification</Name>
			<DataField>TransactionClassification</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionCategory</Name>
			<DataField>TransactionCategory</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionCurrencyId</Name>
			<DataField>TransactionCurrencyId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitOfMeasure</Name>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransType</Name>
			<DataField>TransType</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitPrice</Name>
			<DataField>UnitPrice</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitPriceMST</Name>
			<DataField>UnitPriceMST</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceOperationUnitId</Name>
			<DataField>ResourceOperationUnitId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Voucher</DataField>
			<DataSource>ProjAdvancedJournalLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectDataAreaId</Name>
			<DataField>ProjectDataAreaId</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDuplicate</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsDuplicate</DataField>
			<DataSource>ProjCDSActualsImport</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ActualId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ActualsImportId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjCDSActualsImport</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjCDSActualsImport</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjAdvancedJournalLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjAdvancedJournalLine</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ProjAdvancedJournal</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>ProjAdvancedJournal</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>PostedDateTime</Name>
										<Field>PostedDateTime</Field>
										<Value>!1900-01-01</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ProjAdvancedJournal</Field>
										<JoinDataSource>ProjAdvancedJournalLine</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjAdvancedJournalLine</Field>
								<JoinDataSource>ProjCDSActualsImport</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>IsDuplicate</Name>
						<Field>IsDuplicate</Field>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>