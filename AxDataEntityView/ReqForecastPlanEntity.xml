<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqForecastPlanEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqForecastPlanEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataEntityDatabaseOperation entityDatabaseOperation = _entityCtx.getDatabaseOperation();

        super(_entityCtx, _dataSourceCtx);

        if (entityDatabaseOperation == DataEntityDatabaseOperation::Insert || entityDatabaseOperation == DataEntityDatabaseOperation::Update)
        {
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(ReqForecastPlanEntity, PlannedOrderNumberSequence))
            {
                this.mapEntityToPlannedOrderNumberSequenceOnUpsert(_entityCtx, _dataSourceCtx);
            }
            
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(ReqForecastPlanEntity, ReqPlanNumberSequence))
            {
                this.mapEntityToReqPlanNumberSequenceOnUpsert(_entityCtx, _dataSourceCtx);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToPlannedOrderNumberSequenceOnUpsert</Name>
				<Source><![CDATA[
    private void mapEntityToPlannedOrderNumberSequenceOnUpsert(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        NumberSequenceTable numberSequenceTable = _dataSourceCtx.getBuffer();

        if (this.isFieldSet(fieldNum(ReqForecastPlanEntity, PlannedOrderNumberSequenceCode))
            && this.PlannedOrderNumberSequenceCode)
        {
            // Set the remainder of the NumberSequenceTable replacement key:
            numberSequenceTable.NumberSequenceScope = NumberSeqScopeFactory::createDataAreaScope(this.DataAreaId).getId();
        }
        else
        {
            // Ensure the default number sequence record is set in the buffer:
            ReqPlanForecast reqPlanForecast = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(ReqForecastPlanEntity, ReqPlanForecast)).getBuffer();

            if (reqPlanForecast.PlannedOrderSequenceRecId && !numberSequenceTable.RecId)
            {
                numberSequenceTable = NumberSequenceTable::find(reqPlanForecast.PlannedOrderSequenceRecId);
                _dataSourceCtx.setBuffer(numberSequenceTable);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToReqPlanNumberSequenceOnUpsert</Name>
				<Source><![CDATA[
    private void mapEntityToReqPlanNumberSequenceOnUpsert(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        NumberSequenceTable numberSequenceTable = _dataSourceCtx.getBuffer();

        if (this.isFieldSet(fieldNum(ReqForecastPlanEntity, ForecastPlanCalculationSessionNumberSequenceCode))
            && this.ForecastPlanCalculationSessionNumberSequenceCode)
        {
            // Set the remainder of the NumberSequenceTable replacement key:
            numberSequenceTable.NumberSequenceScope = NumberSeqScopeFactory::createDataAreaScope(this.DataAreaId).getId();
        }
        else
        {
            // Ensure the default number sequence record is set in the buffer:
            ReqPlanForecast reqPlanForecast = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(ReqForecastPlanEntity, ReqPlanForecast)).getBuffer();

            if (reqPlanForecast.ReqPlanSequenceRecId && !numberSequenceTable.RecId)
            {
                numberSequenceTable = NumberSequenceTable::find(reqPlanForecast.ReqPlanSequenceRecId);
                _dataSourceCtx.setBuffer(numberSequenceTable);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        ret = super(_entityCtx, _dataSourceCtx);
    
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ReqForecastPlanEntity, ReqPlan)
            && _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            // ReqPlan is persisted before ReqPlanForecast and will create a ReqPlanForecast record with default values; need to delete this record before importing ReqPlanForecast
            ttsbegin;            
            ReqPlanForecast::find(this.ForecastPlanId, true).delete();
            ttscommit;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ReqForecastPlanEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>ReqPlanForecast</FormRef>
	<Label>@SYS25415</Label>
	<Tags>Forecast</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ReqForecastPlanStaging</DataManagementStagingTable>
	<Modules>MasterPlanning</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPlanId</Name>
			<DataField>ReqPlanId</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPlanDescription</Name>
			<DataField>Name</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastModelId</Name>
			<DataField>ForecastModelId</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillForecastPlanningIncludeSupplyForecast</Name>
			<DataField>UseForecastSupply</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillForecastPlanningIncludeDemandForecast</Name>
			<DataField>UseForecastDemand</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillForecastPlanningSkipCoverageCalculations</Name>
			<DataField>SkipCovCalc</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastRequirementReductionMethod</Name>
			<DataField>ForecastReduceType</DataField>
			<DataSource>ReqPlan</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PlannedOrderNumberSequenceRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>PlannedOrderSequenceRecId</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PlannedOrderNumberSequenceCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>NumberSequence</DataField>
			<DataSource>PlannedOrderNumberSequence</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPlanCalculationSessionNumberSequenceRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>ReqPlanSequenceRecId</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPlanCalculationSessionNumberSequenceCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>NumberSequence</DataField>
			<DataSource>ReqPlanNumberSequence</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequirementDateDeductedSafetyIssueMarginDays</Name>
			<DataField>IssueMargin</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequirementDateAddedSafetyReceiptMarginDays</Name>
			<DataField>ReceiptMargin</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemLeadTimeAddedReorderMarginDays</Name>
			<DataField>OrderingMargin</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CapacitySchedulingTimeFenceDays</Name>
			<DataField>TimeFenceCapacity</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CoverageTimeFenceDays</Name>
			<DataField>TimeFenceCov</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMOrFormulaExplosionTimeFenceDays</Name>
			<DataField>TimeFenceExplosion</DataField>
			<DataSource>ReqPlanForecast</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ForecastPlanId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ReqPlanForecast</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ReqPlanForecast</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReqPlan</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ReqPlan</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>PlanType</Name>
								<DerivedTable>ReqPlan</DerivedTable>
								<Field>PlanType</Field>
								<Value>ForecastPlan</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>Plan</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PlannedOrderNumberSequence</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>NumberSequenceTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>PlannedOrderNumberSequenceTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReqPlanNumberSequence</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>NumberSequenceTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ReqLogNumberSequenceTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>