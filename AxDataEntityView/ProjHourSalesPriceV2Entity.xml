<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjHourSalesPriceV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjHourSalesPriceV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceIdValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// ResourceIdValue is bound to an ResourceId unmapped field
    /// </summary>
    /// <returns>
    /// A string that represents a resource Id from ResourceView
    /// </returns>
    public static str resourceIdValue()
    {
        str sqlStr = @"ISNULL((SELECT %1 FROM %2 WHERE %3 = %4 AND PARTITION = %5),'')";

        str resourceIdQuery = strFmt(sqlStr,
                                        fieldStr(ResourceView, ResourceId),
                                        tableStr(ResourceView),
                                        fieldStr(ResourceView, RecId),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, Resource)),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, Partition))
                                        );

        return resourceIdQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceCompanyIdValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// ResourceCompanyIdValue is bound to an ResourceCompanyId unmapped field
    /// </summary>
    /// <returns>
    /// A string that represents a resource company Id from ResourceView
    /// </returns>
    public static str resourceCompanyIdValue()
    {
        str sqlStr = @"ISNULL((SELECT %1 FROM %2 WHERE %3 = %4 AND PARTITION = %5),'')";

        str resourceIdQuery = strFmt(sqlStr,
                                        fieldStr(ResourceView, ResourceCompanyId),
                                        tableStr(ResourceView),
                                        fieldStr(ResourceView, RecId),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, Resource)),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, Partition))
                                        );

        return resourceIdQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>roleIdValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// RoleIdValue is bound to an Role Id unmapped field
    /// </summary>
    /// <returns>
    /// A string that represents a Role Id from <c>PSASchedRole</c>
    /// </returns>
    public static str roleIdValue()
    {
        str sqlStr = @"ISNULL((SELECT %1 FROM %2 WHERE %3 = %4 AND PARTITION = %5),'')";

        str roleIDQuery = strFmt(sqlStr,
                                        fieldStr(ResourceCategoryView, CategoryId),
                                        tableStr(ResourceCategoryView),
                                        fieldStr(ResourceCategoryView, RecId),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, ResourceCategory)),
                                        SysComputedColumn::returnField(
                                            tablestr(ProjHourSalesPriceV2Entity),
                                            dataEntityDataSourceStr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice),
                                            fieldstr(ProjHourSalesPrice, Partition))
                                        );

        return roleIDQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjValidFor</Name>
				<Source><![CDATA[
    private void defaultProjValidFor()
    {
        if (this.ProjectId || this.ProjectContractId || this.CustomerAccount)
        {
            if (this.isFieldSet(fieldNum(ProjHourSalesPriceV2Entity, ProjectId)) ||
                this.isFieldSet(fieldNum(ProjHourSalesPriceV2Entity, ProjectContractId)) ||
                this.isFieldSet(fieldNum(ProjHourSalesPriceV2Entity, CustomerAccount)))
            {
                this.ValidFor = TableGroupAll::Table;
            }
        }
        else if (this.PriceGroup)
        {
            if (this.isFieldSet(fieldNum(ProjHourSalesPriceV2Entity, PriceGroup)))
            {
                this.ValidFor = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.ValidFor = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(ProjHourSalesPriceV2Entity, ValidFor),
                [fieldNum(ProjHourSalesPriceV2Entity, ProjectId), fieldNum(ProjHourSalesPriceV2Entity, PriceGroup)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjHourSalesPriceV2Entity, ProjHourSalesPrice))
        {
            ProjHourSalesPrice hourSalesPrice = _dataSourceCtx.getBuffer();

            if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
            {
                if (this.ResourceId && this.ResourceCompanyId)
                {
                    ResourceView resourceView;

                    select firstonly RecId from resourceView
                        where resourceView.ResourceId == this.ResourceId
                            && resourceView.ResourceCompanyId == this.ResourceCompanyId;

                    if (resourceView)
                    {
                        hourSalesPrice.Resource = resourceView.RecId;
                    }
                }

                if (this.ResourceCategoryId)
                {
                    ResourceCategoryView roleView;

                    select firstonly RecId from roleView
                        where roleView.CategoryId == this.ResourceCategoryId;

                    if (roleView.RecId)
                    {
                        hourSalesPrice.ResourceCategory = roleView.RecId;
                    }
                }
            }
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        switch (_fieldId)
        {
            case fieldNum(ProjHourSalesPriceV2Entity, ValidFor):
                this.defaultProjValidFor();
                break;

            default:
                super(_fieldId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.ProjectId && this.PriceGroup)
            {
                ret = checkFailed("@Proj:EntityProjectAndPriceGroupSpecifiedError");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ProjSalesPriceHour</FormRef>
	<Label>@Proj:ProjHourSalesPriceV2Entity</Label>
	<Tags>Pricing setup</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjHourSalesPriceV2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjHourSalesPricesV2</PublicCollectionName>
	<PublicEntityName>ProjHourSalesPriceV2</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResourceCompanyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPriceModel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesPricing</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CategoryId</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyId</Name>
			<Label>@SYS56480</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>CurrencyId</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProjId</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceGroup</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProjPriceGroup</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceModel</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProjSalesPriceModel</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPricing</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProjSalesPricing</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFor</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>ProjValidFor</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerAccount</Name>
			<Mandatory>No</Mandatory>
			<DataField>PSACustAccount</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectContractId</Name>
			<Mandatory>No</Mandatory>
			<DataField>PSAProjInvoiceProjId</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Resource</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>Resource</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransDate</Name>
			<Label>@SYS50168</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>TransDate</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>EndDate</DataField>
			<DataSource>ProjHourSalesPrice</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ResourceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS115378</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>resourceIdValue</ComputedFieldMethod>
			<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ResourceCategoryId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Res:RoleId</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>roleIdValue</ComputedFieldMethod>
			<ExtendedDataType>PSASchedRoleId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ResourceCompanyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Res:ResourceLegalEntity</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>resourceCompanyIdValue</ComputedFieldMethod>
			<ExtendedDataType>DataAreaId</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjectId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PriceGroup</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ResourceCategoryId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TransDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CurrencyId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccount</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectContractId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ResourceId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ResourceCompanyId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CategoryId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>Staging</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjHourSalesPriceV2Staging</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints />
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjHourSalesPrice</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjHourSalesPrice</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>