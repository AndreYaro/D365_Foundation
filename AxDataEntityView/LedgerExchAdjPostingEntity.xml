<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerExchAdjPostingEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerExchAdjPostingEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the logic once after processing the target data.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The <c>DMFDefinitionGroupExecution</c> instance.</param>
    [Hookable(false)]
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        LedgerExchAdjPostingDefaultLevel currentDefaultLvl = LedgerExchAdjPosting::getDefaultLevel();
        LedgerExchAdjPosting::setDefaultLevel(currentDefaultLvl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data from the entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx">The <c>DataEntityRuntimeContext</c> instance.</param>
    /// <param name = "_dataSourceCtx">The <c>DataEntityDataSourceRuntimeContext</c> instance.</param>
    /// <returns>Returns true if inserted successfully; returns false otherwise.</returns>
    [Hookable(false)]
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(LedgerExchAdjPostingEntity, LedgerExchAdjPosting):
                ret = this.validateLedgerExchAdjPosting(_dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates data from the entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx">The <c>DataEntityRuntimeContext</c> instance.</param>
    /// <param name = "_dataSourceCtx">The <c>DataEntityDataSourceRuntimeContext</c> instance.</param>
    /// <returns>Returns true if updated successfully; returns false otherwise.</returns>
    [Hookable(false)]
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(LedgerExchAdjPostingEntity, LedgerExchAdjPosting):
                ret = this.validateLedgerExchAdjPosting(_dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLedgerExchAdjPosting</Name>
				<Source><![CDATA[
    private boolean validateLedgerExchAdjPosting(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = true;

        LedgerExchAdjPosting ledgerExchAdjPostingBuffer = _dataSourceCtx.getBuffer();
        ret = ledgerExchAdjPostingBuffer.validateWrite();

        // updateEntityDataSource() failure does not prevent the datasource from being saved, unless it is an inner join
        // In case of update operation, throwing validation error is needed to cancel the update
        if (!ret && _dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>LedgerExchAdjPosting</FormRef>
	<Label>@GeneralLedger:LedgerExchAdjPostingLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>LedgerExchAdjPostingStaging</DataManagementStagingTable>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Module</Name>
			<DataField>Module</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<DataField>AccountType</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Currency</Name>
			<DataField>Currency</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountCode</Name>
			<DataField>AccountCode</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountRelation</Name>
			<DataField>AccountRelation</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>LedgerExchAdjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>LedgerDimensionDAVC</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>Module</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AccountType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CurrencyCode</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Currency</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AccountCode</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AccountRelation</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerDimensionCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerExchAdjPosting</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerExchAdjPosting</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerDimensionDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>LedgerDimensionDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>LedgerExchAdjPosting</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>