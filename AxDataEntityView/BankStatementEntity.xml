<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankStatementEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankStatementEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        BankStmtISOAccountStatement bankStatement;
        SysGlobalCache cache = classfactory.globalCache();

        if (_dataSourceCtx.name() == dataentitydatasourcestr(BankStatementEntity, BankStmtISOAccountStatement))
        {
            RecId docId = cache.get(
                BankStatementImportHelper::getDocumentCacheOwner(),
                BankStatementImportHelper::getDocumentCacheKey(this.DocumentLineNum));
            bankStatement = _dataSourceCtx.getBuffer() as BankStmtISOAccountStatement;
            bankStatement.BankStmtISODocument = docId;

            // Check statement
            if (!bankStatement.Identification)
            {
                //Get the statement id
                bankStatement.Identification = BankStatementEntity::getStatementIdfromNumberSequence();
            }

            if (!bankStatement.Identification)
            {
                //The format of statement ID must be specified.
                throw error("@GLS221364");
            }

            _dataSourceCtx.setBuffer(bankStatement);
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataentitydatasourcestr(BankStatementEntity, BankStmtISOAccountStatement))
        {
            bankStatement = _dataSourceCtx.getBuffer() as BankStmtISOAccountStatement;
            cache.set(
                BankStatementImportHelper::getStatementCacheOwner(guid2Str(this.scopeIdentifier())),
                BankStatementImportHelper::getStatementCacheKey(this.DocumentLineNum, this.StatementLineNum),
                bankStatement.RecId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatementIdfromNumberSequence</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the statement id from number sequence.
    /// </summary>
    /// <returns>
    /// The statement id.
    /// </returns>
    private static Voucher getStatementIdfromNumberSequence()
    {
        Voucher voucher;

        NumberSequenceReference numberSeqReference = BankParameters::numRefBankStatementId();
        if (numberSeqReference)
        {
            // Get the voucher number
            RefRecId numberSequenceTableRecId = numberSeqReference.numberSequenceTable().RecId;
            if (numberSequenceTableRecId)
            {
                voucher = NumberSeq::newGetVoucherFromId(numberSequenceTableRecId, true).voucher();
            }
            else
            {
                // The statement ID must be specified in the file or in the number sequence.
                throw error("@SYS4002981");
            }
        }
        return voucher;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.DataAreaId && this.DataAreaId != curExt())
        {
            changecompany(this.DataAreaId)
            {
                super();
            }
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankElectronicBanking</ConfigurationKey>
	<Label>@SYS316320</Label>
	<Tags>Statement</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BankStatementStaging</DataManagementStagingTable>
	<Modules>CashAndBankManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountCurrency</Name>
			<DataField>AccountCurrency</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountIdOtherId</Name>
			<DataField>AccountIdOtherId</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AsOfDateModifier</Name>
			<DataField>AsOfDateModifier</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankStatementType</Name>
			<AllowEdit>Yes</AllowEdit>
			<DataField>BankStatementType</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FromDateTime</Name>
			<DataField>FromDateTime</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupControlTotal</Name>
			<DataField>GroupControlTotal</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupStatus</Name>
			<DataField>GroupStatus</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IBAN</Name>
			<DataField>IBAN</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Identification</Name>
			<DataField>Identification</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SwiftNo</Name>
			<DataField>SwiftNo</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ToDateTime</Name>
			<DataField>ToDateTime</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalAccountsInGroup</Name>
			<DataField>TotalAccountsInGroup</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalRecordsInGroup</Name>
			<DataField>TotalRecordsInGroup</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalEntriesNumberOfEntries</Name>
			<DataField>TotalEntriesNumberOfEntries</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginatorName</Name>
			<DataField>Name</DataField>
			<DataSource>Originator</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginatorId</Name>
			<DataField>PartyIdOrganisationGenericOrgId</DataField>
			<DataSource>Originator</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UltimateReceiverName</Name>
			<DataField>Name</DataField>
			<DataSource>UltimateReceiver</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UltimateReceiverId</Name>
			<DataField>PartyIdOrganisationGenericOrgId</DataField>
			<DataSource>UltimateReceiver</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginatorParty</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>OriginatorId</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UltimateReceiverParty</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>UltimateReceiverId</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>StatementLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>DocumentLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankStmtISODocument</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BankStmtISODocument</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankStatementRecId</Name>
			<Mandatory>No</Mandatory>
			<DataField>RecId</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccountTable</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>BankAccountTable</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SequenceNumber</Name>
			<DataField>SequenceNumber</DataField>
			<DataSource>BankStmtISOAccountStatement</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>DocumentLineNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>StatementLineNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>BankStatementDocumentEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>BankStatementDocumentEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>BankStmtISODocument</Field>
					<RelatedField>BankStatementDocumentRecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BankStmtISOAccountStatement</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BankStmtISOAccountStatement</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Originator</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BankStmtISOPartyIdentification</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BankStmtISOPartyIdentification</Name>
								<JoinRelationName>BankStmtISOPartyIdentification</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>UltimateReceiver</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BankStmtISOPartyIdentification</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BankStmtISOPartyIdentification</Name>
								<JoinRelationName>BankStmtISOPartyIdentification_1</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>