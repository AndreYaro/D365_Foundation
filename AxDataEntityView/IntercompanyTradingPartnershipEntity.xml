<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>IntercompanyTradingPartnershipEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class IntercompanyTradingPartnershipEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(IntercompanyTradingPartnershipEntity, CustomerTradingPartner_CustomerDataAreaId), [fieldNum(IntercompanyTradingPartnershipEntity, CustomerLegalEntityId)]],
            [fieldNum(IntercompanyTradingPartnershipEntity, VendorTradingPartner_VendorDataAreaId), [fieldNum(IntercompanyTradingPartnershipEntity, VendorLegalEntityId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(IntercompanyTradingPartnershipEntity, CustomerTradingPartner_CustomerDataAreaId):
                this.defaultCustomerDataAreaId();
                break;
            case fieldNum(IntercompanyTradingPartnershipEntity, VendorTradingPartner_VendorDataAreaId):
                this.defaultVendorDataAreaId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCustomerDataAreaId</Name>
				<Source><![CDATA[
    private void defaultCustomerDataAreaId()
    {
        // If the customer legal entity Id has been changed, copy the new value to the mapped private field:
        if (this.isFieldSet(fieldNum(IntercompanyTradingPartnershipEntity, CustomerLegalEntityId)))
        {
            this.CustomerTradingPartner_CustomerDataAreaId = this.CustomerLegalEntityId;
        }

        // Default the customer trading partner type (mapped private field) if it is not set:
        if (!this.CustomerTradingPartner_TradingPartnerType)
        {
            this.CustomerTradingPartner_TradingPartnerType = InterCompanyTradingPartnerType::Customer;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultVendorDataAreaId</Name>
				<Source><![CDATA[
    private void defaultVendorDataAreaId()
    {
        // If the vendor legal entity Id has been changed, copy the new value to the mapped private field:
        if (this.isFieldSet(fieldNum(IntercompanyTradingPartnershipEntity, VendorLegalEntityId)))
        {
            this.VendorTradingPartner_VendorDataAreaId = this.VendorLegalEntityId;
        }

        // Default the vendor trading partner type (mapped private field) if it is not set:
        if (!this.VendorTradingPartner_TradingPartnerType)
        {
            this.VendorTradingPartner_TradingPartnerType = InterCompanyTradingPartnerType::Vendor;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeInterCompany</ConfigurationKey>
	<DeveloperDocumentation>@SCM:IntercompanyTradingPartnershipEntityDevDoc</DeveloperDocumentation>
	<FormRef>InterCompanyTradingRelationSetupCustomer</FormRef>
	<Label>@SCM:IntercompanyTradingPartnershipEntityLabel</Label>
	<Tags>Intercompany</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>IntercompanyTradingPartnershipStaging</DataManagementStagingTable>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerLegalEntityId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DataAreaId</DataField>
			<DataSource>CustTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerAccountNumber</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorLegalEntityId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DataAreaId</DataField>
			<DataSource>VendTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorAccountNumber</Name>
			<DataField>AccountNum</DataField>
			<DataSource>VendTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTradingPartnershipActive</Name>
			<DataField>Active</DataField>
			<DataSource>CustomerTradingPartner_TradingRelation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerTradingPartner_CustomerDataAreaId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustomerDataAreaId</DataField>
			<DataSource>CustomerTradingPartner</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerTradingPartner_TradingPartnerType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TradingPartnerType</DataField>
			<DataSource>CustomerTradingPartner</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorTradingPartner_VendorDataAreaId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>VendorDataAreaId</DataField>
			<DataSource>VendorTradingPartner</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorTradingPartner_TradingPartnerType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TradingPartnerType</DataField>
			<DataSource>VendorTradingPartner</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerLegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorLegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorAccountNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
		<AxDataEntityViewKey>
			<Name>CustomerKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerLegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
		<AxDataEntityViewKey>
			<Name>VendorKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>VendorLegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorAccountNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustomerTradingPartner</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InterCompanyTradingPartner</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustomerDataAreaId</Field>
								<JoinDataSource>CustomerTradingPartner</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>CustomerParty</Field>
								<JoinDataSource>CustomerTradingPartner</JoinDataSource>
								<RelatedField>Party</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustomerTradingPartner_TradingRelation</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InterCompanyTradingRelation</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>VendorTradingPartner</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>InterCompanyTradingPartner</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>VendTable</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>VendTable</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>VendorDataAreaId</Field>
												<JoinDataSource>VendorTradingPartner</JoinDataSource>
												<RelatedField>DataAreaId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>VendorParty</Field>
												<JoinDataSource>VendorTradingPartner</JoinDataSource>
												<RelatedField>Party</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>CustomerTradingPartner_TradingRelation</JoinDataSource>
										<JoinRelationName>InterCompanyTradingPartnerVendor</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>CustomerTradingPartner_TradingRelation</Name>
								<JoinDataSource>CustomerTradingPartner</JoinDataSource>
								<JoinRelationName>InterCompanyTradingPartnerCustomer</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>