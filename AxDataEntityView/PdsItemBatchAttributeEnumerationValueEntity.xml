<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PdsItemBatchAttributeEnumerationValueEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PdsItemBatchAttributeEnumerationValueEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PdsItemBatchAttributeEnumerationValueEntity, PdsBatchAttrib))
        {
            _dataSourceCtx.setBuffer(PdsBatchAttrib::find(this.ItemBatchAttributeId));
            _dataSourceCtx.setDataSaved(true);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateBatchAttribute</Name>
				<Source><![CDATA[
    private void updateBatchAttribute()
    {
        PdsBatchAttrib batchAttrib = PdsBatchAttrib::find(this.ItemBatchAttributeId, true);

        if (this.IsAttributeTarget)
        {
            batchAttrib.PdsBatchAttribTarget = this.EnumerationValue;
            batchAttrib.update();
        }
        else if (batchAttrib.PdsBatchAttribTarget == this.EnumerationValue)
        {
            batchAttrib.PdsBatchAttribTarget = '';
            batchAttrib.update();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsTargetAttributeDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsTargetAttribute computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsTargetAttribute field.
    /// </returns>
    public static str IsTargetAttributeDefinition()
    {
        TableName entityName = tableStr(PdsItemBatchAttributeEnumerationValueEntity);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::comparisonField(entityName, dataEntityDataSourceStr(PdsItemBatchAttributeEnumerationValueEntity, PdsBatchAttribEnumValues), fieldStr(PdsBatchAttribEnumValues, PdsAttribEnumValue)),
                        SysComputedColumn::comparisonField(entityName, dataEntityDataSourceStr(PdsItemBatchAttributeEnumerationValueEntity, PdsBatchAttrib), fieldStr(PdsBatchAttrib, PdsBatchAttribTarget))),
                            SysComputedColumn::returnLiteral(NoYes::Yes),
                            SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the attribute enumerate values UI based on the selected record in the attribute enumerate values staging table.
    /// </summary>
    /// <param name="_menuItemName">
    /// This name of the menu item to open.
    /// </param>
    /// <param name="_buffer">
    /// The attribute enumerate values staging record selected.
    /// </param>
    /// <param name="_caller">
    /// This caller.
    /// </param>
    /// <param name="_dataArea">
    /// The legal entity Id of the caller context.
    /// </param>
    public static void jumpRefMethod(MenuItemName _menuItemName, PdsItemBatchAttributeEnumerationValueStaging _buffer, object _caller, DataAreaId _dataArea)
    {
        changeCompany(_dataArea)
        {
            PdsBatchAttrib batchAttrib;

            select firstonly batchAttrib
                where batchAttrib.PdsBatchAttribId == _buffer.ItemBatchAttributeId;

            Args args = new Args();

            args.record(batchAttrib);
            args.caller(_caller);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(PdsItemBatchAttributeEnumerationValueEntity, PdsBatchAttribEnumValues))
        {
            this.updateBatchAttribute();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(PdsItemBatchAttributeEnumerationValueEntity, PdsBatchAttribEnumValues))
        {
            this.updateBatchAttribute();
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PdsBatchAttrib</ConfigurationKey>
	<DeveloperDocumentation>@SCM:PdsItemBatchAttributeEnumerationValueEntityDevDoc</DeveloperDocumentation>
	<FormRef>PdsBatchAttribEnumValues</FormRef>
	<Label>@PRO1597</Label>
	<Tags>Batch</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PdsItemBatchAttributeEnumerationValueStaging</DataManagementStagingTable>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchAttributeId</Name>
			<DataField>PdsBatchAttribId</DataField>
			<DataSource>PdsBatchAttribEnumValues</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Sequence</Name>
			<DataField>PdsAttribEnumSeq</DataField>
			<DataSource>PdsBatchAttribEnumValues</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnumerationValue</Name>
			<DataField>PdsAttribEnumValue</DataField>
			<DataSource>PdsBatchAttribEnumValues</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsAttributeTarget</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:PdsItemBatchAttributeEnumerationValueEntityIsAttributeTargetLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsTargetAttributeDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemBatchAttributeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EnumerationValue</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PdsBatchAttribEnumValues</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PdsBatchAttribEnumValues</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsBatchAttrib</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PdsBatchAttrib</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PdsBatchAttribId</Field>
								<JoinDataSource>PdsBatchAttribEnumValues</JoinDataSource>
								<RelatedField>PdsBatchAttribId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>