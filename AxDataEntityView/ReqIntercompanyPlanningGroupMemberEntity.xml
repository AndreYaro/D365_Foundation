<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ReqIntercompanyPlanningGroupMemberEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ReqIntercompanyPlanningGroupMemberEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(ReqIntercompanyPlanningGroupMemberEntity, IntercompanyPlanDataAreaId), [fieldNum(ReqIntercompanyPlanningGroupMemberEntity, LegalEntityId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The ID of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ReqIntercompanyPlanningGroupMemberEntity, IntercompanyPlanDataAreaId):
                this.defaultIntercompanyPlanDataAreaId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultIntercompanyPlanDataAreaId</Name>
				<Source><![CDATA[
    private void defaultIntercompanyPlanDataAreaId()
    {
        if (this.isFieldSet(fieldNum(ReqIntercompanyPlanningGroupMemberEntity, LegalEntityId)))
        {
            this.IntercompanyPlanDataAreaId = this.LegalEntityId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Req</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Entity_DevDoc_ReqIntercompanyPlanningGroupMemberEntity</DeveloperDocumentation>
	<FormRef>ReqIntercompanyPlanningGroupSetup</FormRef>
	<Label>@SCM:Entity_ReqIntercompanyPlanningGroupMemberEntity</Label>
	<Tags>Intercompany</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ReqIntercompanyPlanningGroupMemberStaging</DataManagementStagingTable>
	<Modules>MasterPlanning</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillIntercompanyPlanAutomaticallyBeCopiedToDynamicPlan</Name>
			<DataField>CopyToDynamicPlan</DataField>
			<DataSource>ReqIntercompanyPlanningGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillIntercompanyPlanAutomaticallyBeCopiedToStaticPlan</Name>
			<DataField>CopyToStaticPlan</DataField>
			<DataSource>ReqIntercompanyPlanningGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MasterPlanId</Name>
			<DataField>IntercompanyPlanId</DataField>
			<DataSource>ReqIntercompanyPlanningGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntercompanyPlanningSequence</Name>
			<DataField>SequenceNumber</DataField>
			<DataSource>ReqIntercompanyPlanningGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntercompanyPlanningGroupName</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>ReqIntercompanyPlanningGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntercompanyPlanDataAreaId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IntercompanyPlanDataAreaId</DataField>
			<DataSource>ReqIntercompanyPlanningGroupMember</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>IntercompanyPlanningGroupName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>IntercompanyPlanningSequence</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ReqIntercompanyPlanningGroupMember</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ReqIntercompanyPlanningGroupMember</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ReqIntercompanyPlanningGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ReqIntercompanyPlanningGroup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ReqIntercompanyPlanningGroup</Name>
								<JoinRelationName>ReqIntercompanyPlanningGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CompanyInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LegalEntity</Field>
								<JoinDataSource>ReqIntercompanyPlanningGroupMember</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>