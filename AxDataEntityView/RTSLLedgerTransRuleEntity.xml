<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTSLLedgerTransRuleEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTSLLedgerTransRuleEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(RTSLLedgerTransRuleEntity, RTSLLedgerTransRule):
                if (!this.LineId)
                {
                    this.LineId = newGuid();
                }

                RTSLRuleGroup ruleGroup = RTSLRuleGroup::find(this.RuleGroupId);
                RefRecId chartOfAccountsTO = Ledger::chartOfAccounts(CompanyInfo::findDataArea(ruleGroup.ToCompanyId).RecId);
                RefRecId chartOfAccountsFROM = Ledger::chartOfAccounts(CompanyInfo::findDataArea(curExt()).RecId);

                RTSLLedgerTransRule transRule = _dataSourceCtx.getBuffer();
                transRule.ToCompanyId = ruleGroup.ToCompanyId;
                transRule.ToDefaultLedgerDimension = this.getDefaultAccountForMainAccount(this.ToAccount, chartOfAccountsTO);
                transRule.DefaultLedgerDimension = this.getDefaultAccountForMainAccount(this.MainAccount, chartOfAccountsFROM);
                transRule.DefaultLedgerDimensionOffset = this.getDefaultAccountForMainAccount(this.OffsetAccount, chartOfAccountsFROM);
                break;
            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultAccountForMainAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ledger dimension that represents the default account for the specified account number.
    /// </summary>
    /// <param name = "_mainAccountNum">
    /// The account number.
    /// </param>
    /// <param name = " _chartOfAccounts">
    /// Chart of accounts Id.
    /// </param>
    /// <returns>
    /// The record ID of a ledger dimension that represents the specified default account.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected LedgerDimensionDefaultAccount getDefaultAccountForMainAccount(MainAccountNum _mainAccountNum, RefRecId _chartOfAccounts)
    {
        MainAccountRecId mainAccountRecId = MainAccount::resolveNaturalKey(_mainAccountNum, _chartOfAccounts);

        if (!mainAccountRecId)
        {
            throw error(strFmt("@Ledger:ErrorMessageNotInLedgerChartOfAccounts", _mainAccountNum, _chartOfAccounts));
        }

        return LedgerDefaultAccountHelper::getDefaultAccountFromMainAccountRecId(mainAccountRecId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTSLLedgerTransRule</FormRef>
	<Label>@GLS103135</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RTSLLedgerTransRuleStaging</DataManagementStagingTable>
	<EntityCategory>Parameters</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>GeneralLedger</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>LedgerTransRules</PublicCollectionName>
	<PublicEntityName>LedgerTransRule</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Crediting</Name>
			<DataField>Crediting</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyRuleGroupId</Name>
			<DataField>CurrencyRuleGroupId</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionRuleGroupId</Name>
			<DataField>DimensionRuleGroupId</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountNum</Name>
			<DataField>MainAccountNum</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountNumOffset</Name>
			<DataField>MainAccountNumOffset</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Priority</Name>
			<DataField>Priority</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RuleGroupId</Name>
			<DataField>RuleGroupId</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ToMainAccountNum</Name>
			<DataField>ToMainAccountNum</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineId</Name>
			<DataField>LineId</DataField>
			<DataSource>RTSLLedgerTransRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccount</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultLedgerDimensionDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccount</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultLedgerDimensionOffsetDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ToAccount</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>ToDefaultLedgerDimensionDAVC</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LineId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RTSLLedgerTransRule</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RTSLLedgerTransRule</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultLedgerDimensionDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultLedgerDimensionDAVC</Name>
								<Field>DefaultLedgerDimension</Field>
								<JoinDataSource>RTSLLedgerTransRule</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultLedgerDimensionOffsetDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultLedgerDimensionOffsetDAVC</Name>
								<Field>DefaultLedgerDimensionOffset</Field>
								<JoinDataSource>RTSLLedgerTransRule</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ToDefaultLedgerDimensionDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ToDefaultLedgerDimensionDAVC</Name>
								<Field>ToDefaultLedgerDimension</Field>
								<JoinDataSource>RTSLLedgerTransRule</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>