<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxItemGroupEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxItemGroupEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (dataEntityDataSourceStr(TaxItemGroupEntity, TaxItemGroupHeading) == _dataSourceCtx.name())
        {
            if (this.TaxItemGroupCode)
            {
                TaxOnItem taxOnItem;
                TaxItemGroupHeading taxItemGroupHead;

                select count(RecId) from taxOnItem
                        where taxOnItem.TaxItemGroup == this.TaxItemGroupCode;

                if (0 == taxOnItem.RecId)
                {
                    taxItemGroupHead = TaxItemGroupHeading::find(this.TaxItemGroupCode, true);

                    if (taxItemGroupHead && taxItemGroupHead.validateDelete())
                    {
                        taxItemGroupHead.delete();
                    }
                }
            }
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps data entity fields to fields of the data source.
    /// For TaxationCodeTable_BR datasource, FiscalValue and TaxType are being initialized with values from  TaxOnItem datasource.
    /// </summary>
    /// <param name = "_entityCtx">The entity context</param>
    /// <param name = "_dataSourceCtx">the datasource context</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TaxItemGroupEntity, TaxItemGroupHeading))
        {
            TaxItemGroupHeading taxItemGroupHeading = TaxItemGroupHeading::find(this.TaxItemGroupCode);

            if (taxItemGroupHeading)
            {
                taxItemGroupHeading.Name = this.Description;
                taxItemGroupHeading.EUSalesListType = this.EUSalesListType;
                _dataSourceCtx.setBuffer(taxItemGroupHeading);
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            }

        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TaxItemGroupEntity, TaxOnItem))
        {
            if (!this.TaxCodeId)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                _dataSourceCtx.setDataSaved(true);
            }
        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TaxItemGroupEntity, TaxationCodeTable_BR))
        {
            TaxationCodeTable_BR taxationCodeTable_DS = _dataSourceCtx.getBuffer();
            TaxOnItem taxOnItem_DS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(TaxItemGroupEntity, TaxOnItem)).getBuffer();

            taxationCodeTable_DS.FiscalValue = this.getFiscalValue_BR(taxOnItem_DS);
            taxationCodeTable_DS.TaxType = this.getTaxType_BR(taxOnItem_DS);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFiscalValue_BR</Name>
				<Source><![CDATA[
    private TaxFiscalValue_BR getFiscalValue_BR(TaxOnItem _taxOnItem_DS)
    {
        TaxExemptTax exemptTax = _taxOnItem_DS.ExemptTax_BR;
        TaxWithoutTaxCredit_BR withoutTaxCredit = _taxOnItem_DS.WithoutTaxCredit_BR;

        if (exemptTax)
        {
            if (withoutTaxCredit)
            {
                return TaxFiscalValue_BR::Blank;
            }
            else
            {
                return TaxFiscalValue_BR::WithoutCreditDebitExempt;
            }
        }
        else
        {
            if (withoutTaxCredit)
            {
                return TaxFiscalValue_BR::WithoutCreditDebitOther;
            }
            else
            {
                return TaxFiscalValue_BR::WithCreditDebit;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxType_BR</Name>
				<Source><![CDATA[
    private TaxType_BR getTaxType_BR(TaxOnItem _taxOnItem_DS)
    {
        return TaxTable::find(_taxOnItem_DS.TaxCode).TaxType_BR;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasicSalesTax</ConfigurationKey>
	<FormRef>TaxItemGroup</FormRef>
	<Label>@Tax:SalesTaxItemGroups</Label>
	<Tags>Sales tax setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TaxItemGroupEntityStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Tax</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>TaxItemGroups</PublicCollectionName>
	<PublicEntityName>TaxItemGroup</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxationCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WithoutTaxCredit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExemptTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxExemptCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Description</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EUSalesListType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxItemGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxItemGroupCode</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>TaxItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Name</DataField>
			<DataSource>TaxItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EUSalesListType</Name>
			<DataField>EUSalesListType</DataField>
			<DataSource>TaxItemGroupHeading</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxCodeId</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxCode</DataField>
			<DataSource>TaxOnItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxationCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TaxationCode</DataField>
			<DataSource>TaxationCodeTable_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExemptTax</Name>
			<DataField>ExemptTax_BR</DataField>
			<DataSource>TaxOnItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WithoutTaxCredit</Name>
			<DataField>WithoutTaxCredit_BR</DataField>
			<DataSource>TaxOnItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxationCodeTable</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxationCodeTable_BR</DataField>
			<DataSource>TaxOnItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxExemptCode</Name>
			<DataField>TaxExemptCode</DataField>
			<DataSource>TaxOnItem</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>TaxItemGroupCode</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TaxCodeId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>Staging</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>TaxItemGroupEntityStaging</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>TaxItemGroupCode</Field>
					<RelatedField>TaxItemGroupCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1Copy2</Name>
					<Field>TaxCodeId</Field>
					<RelatedField>TaxCodeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>TaxCodeId</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>TaxCodeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>TaxCodeId</Field>
					<RelatedField>TaxCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TaxItemGroupHeading</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TaxItemGroupHeading</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxOnItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxOnItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>TaxationCodeTable_BR</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>TaxationCodeTable_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>TaxationCodeTable_BR</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>TaxItemGroup</Field>
								<JoinDataSource>TaxItemGroupHeading</JoinDataSource>
								<RelatedField>TaxItemGroup</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>