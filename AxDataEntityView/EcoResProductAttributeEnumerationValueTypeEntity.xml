<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductAttributeEnumerationValueTypeEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductAttributeEnumerationValueTypeEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(EcoResProductAttributeEnumerationValueTypeEntity, EcoResAttributeType):
                    this.mapEntityToEcoResAttributeTypeDataSource(_entityCtx, _dataSourceCtx);
                    break;

                case dataEntityDataSourceStr(EcoResProductAttributeEnumerationValueTypeEntity, EcoResEnumerationAttributeTypeValue):
                    EcoResEnumerationAttributeTypeValue enumerationTypeValue;
                    enumerationTypeValue = _dataSourceCtx.getBuffer();
                    enumerationTypeValue.setNextOrdinalNumber();
                    break;

                case dataEntityDataSourceStr(EcoResProductAttributeEnumerationValueTypeEntity, EcoResTextValueTranslation):
                    EcoResTextValueTranslation attributeTypeTranslation = _dataSourceCtx.getBuffer();
                    attributeTypeTranslation.Language = SystemParameters::getSystemLanguageId();
                    attributeTypeTranslation.TextValue = this.EnumerationValue;
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query attributeEnumerationIntegerValueTypeQuery = new Query();

        QueryBuildDataSource attributeTypeDS = attributeEnumerationIntegerValueTypeQuery.addDataSource(tableNum(EcoResAttributeType));
        
        QueryBuildDataSource enumerationAttributeTypeValueDS = attributeTypeDS.addDataSource(tableNum(EcoResEnumerationAttributeTypeValue));
        enumerationAttributeTypeValueDS.addLink(fieldNum(EcoResAttributeType, RecId), fieldNum(EcoResEnumerationAttributeTypeValue, AttributeType));
        enumerationAttributeTypeValueDS.joinMode(JoinMode::OuterJoin);
        enumerationAttributeTypeValueDS.fetchMode(QueryFetchMode::One2One);
        
        QueryBuildDataSource textValueDS = enumerationAttributeTypeValueDS.addDataSource(tableNum(EcoResTextValue));
        textValueDS.addLink(fieldNum(EcoResEnumerationAttributeTypeValue, Value), fieldNum(EcoResTextValue, RecId));
        textValueDS.joinMode(JoinMode::OuterJoin);
        textValueDS.fetchMode(QueryFetchMode::One2One);

        QueryBuildDataSource textValueTranslationDS = textValueDS.addDataSource(tableNum(EcoResTextValueTranslation));
        textValueTranslationDS.addLink(fieldNum(EcoResTextValue, RecId), fieldNum(EcoResTextValueTranslation, TextValueTable));
        textValueTranslationDS.joinMode(JoinMode::OuterJoin);
        textValueTranslationDS.fetchMode(QueryFetchMode::One2One);
        
        return attributeEnumerationIntegerValueTypeQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(EcoResProductAttributeEnumerationValueTypeEntity, EcoResAttributeType):
                return true;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToEcoResAttributeTypeDataSource</Name>
				<Source><![CDATA[
    private void mapEntityToEcoResAttributeTypeDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        EcoResAttributeType attributeType = EcoResAttributeType::findByName(this.EnumerationName);

        if (attributeType.RecId == 0)
        {
            attributeType.Name = this.EnumerationName;
            attributeType.DataType = AttributeDataType::Text;
            attributeType.IsEnumeration = NoYes::Yes;
            attributeType.Insert();
        }

        EcoResEnumerationAttributeTypeValue enumerationTypeValue = _entityCtx.getRuntimeContextByName(
            dataEntityDataSourceStr(EcoResProductAttributeEnumerationValueTypeEntity, EcoResEnumerationAttributeTypeValue)).getBuffer();

        //AttributeType field needs to be set as it is needed to assign the next OrdinalNumber
        enumerationTypeValue.AttributeType = attributeType.RecId;

        _dataSourceCtx.setBuffer(attributeType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
        
        if (ret)
        {
            EcoResAttributeType attributeType = EcoResAttributeType::findByName(this.EnumerationName);

            if (attributeType)
            {
                EcoResEnumerationAttributeTypeValue ecoResEnumerationAttributeTypeValue; 
                ecoResEnumerationAttributeTypeValue.AttributeType = attributeType.RecId;

                ret = ecoResEnumerationAttributeTypeValue.checkDuplicate(this.EnumerationValue);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:DevDocAttributeTypeEnumerationEntity</DeveloperDocumentation>
	<FormRef>EcoResAttributeType</FormRef>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SCM:EnumerationBasedAttributeType</Label>
	<Tags>Attribute types</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EcoResProductAttributeEnumerationValueTypeStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProductAttributeEnumerationTextTypes</PublicCollectionName>
	<PublicEntityName>ProductAttributeEnumerationTextType</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnumerationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnumerationNameUniqueID</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnumerationValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnumerationName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnumerationNameUniqueID</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:EcoResEnumerationNameAttributeTypeValueUniqueID</Label>
			<Mandatory>No</Mandatory>
			<DataField>OrdinalNumber</DataField>
			<DataSource>EcoResEnumerationAttributeTypeValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnumerationValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>TextValue</DataField>
			<DataSource>EcoResTextValue</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>EnumerationName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EnumerationNameUniqueID</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EnumerationValue</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResAttributeType</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResAttributeType</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResEnumerationAttributeTypeValue</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResEnumerationAttributeTypeValue</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResTextValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResTextValue</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResTextValueSystemLanguage</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResTextValueSystemLanguage</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>RecId</Field>
												<JoinDataSource>EcoResTextValue</JoinDataSource>
												<RelatedField>TextValue</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResTextValueTranslation</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResTextValueTranslation</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>RecId</Field>
												<JoinDataSource>EcoResTextValue</JoinDataSource>
												<RelatedField>TextValueTable</RelatedField>
											</AxQuerySimpleDataSourceRelation>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation2</Name>
												<Field>SystemLanguageId</Field>
												<JoinDataSource>EcoResTextValueSystemLanguage</JoinDataSource>
												<RelatedField>Language</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>Value</Name>
										<JoinRelationName>Value</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AttributeType</Name>
								<JoinRelationName>AttributeType</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>IsEnumeration</Name>
						<Field>IsEnumeration</Field>
						<Status>Hidden</Status>
						<Value>Yes</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>DataType</Name>
						<Field>DataType</Field>
						<Status>Hidden</Status>
						<Value>Text</Value>
					</AxQuerySimpleDataSourceRange>
					<AxQuerySimpleDataSourceRange>
						<Name>IsHidden</Name>
						<Field>IsHidden</Field>
						<Status>Hidden</Status>
						<Value>No</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>