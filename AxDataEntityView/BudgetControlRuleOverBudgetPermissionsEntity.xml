<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlRuleOverBudgetPermissionsEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlRuleOverBudgetPermissionsEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BudgetControlRule draftControlRule = this.getDraftBudgetControlRule();

        BudgetOverrideUserGroupOption draftBudgetOverrideUserGroupOption = BudgetOverrideUserGroupOption::findByUserGroupAndConfiguration(this.UserGroupId, draftControlRule.BudgetControlConfiguration);

        BudgetControlRuleUserGroupOption draftBudgetControlRuleUserGroupOption = this.getDraftBudgetControlRuleUserGroupOption(draftControlRule.RecId, draftBudgetOverrideUserGroupOption.RecId);

        if (draftBudgetControlRuleUserGroupOption.validateDelete())
        {
            draftBudgetControlRuleUserGroupOption.delete();
        }
        else
        {
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertRecord</Name>
				<Source><![CDATA[
    public void upsertRecord()
    {
        ttsbegin;

        BudgetControlRule draftControlRule = this.getDraftBudgetControlRule();

        BudgetOverrideUserGroupOption draftBudgetOverrideUserGroupOption = BudgetOverrideUserGroupOption::findByUserGroupAndConfiguration(this.UserGroupId, draftControlRule.BudgetControlConfiguration);

        if (!draftBudgetOverrideUserGroupOption)
        {
            draftBudgetOverrideUserGroupOption.UserGroupInfo = this.UserGroupId;
            draftBudgetOverrideUserGroupOption.DefaultOverBudgetOption = BudgetCheckOverbudgetOption::PreventProcessing;
            draftBudgetOverrideUserGroupOption.BudgetControlConfiguration = draftControlRule.BudgetControlConfiguration;

            if (draftBudgetOverrideUserGroupOption.validateWrite())
            {
                draftBudgetOverrideUserGroupOption.insert();
            }
            else
            {
                throw Exception::Error;
            }
        }

        BudgetControlRuleUserGroupOption draftBudgetControlRuleUserGroupOption = this.getDraftBudgetControlRuleUserGroupOption(draftControlRule.RecId, draftBudgetOverrideUserGroupOption.RecId);

        if (!draftBudgetControlRuleUserGroupOption)
        {
            draftBudgetControlRuleUserGroupOption.BudgetControlRule = draftControlRule.RecId;
            draftBudgetControlRuleUserGroupOption.BudgetOverrideUserGroupOption = draftBudgetOverrideUserGroupOption.RecId;
        }

        draftBudgetControlRuleUserGroupOption.OverbudgetBudgetGroupCheckOption = this.OverbudgetBudgetGroupCheckOption;
        draftBudgetControlRuleUserGroupOption.OverrideOverbudgetOption = this.OverrideOverbudgetOption;

        if (draftBudgetControlRuleUserGroupOption.validateWrite())
        {
            draftBudgetControlRuleUserGroupOption.write();
        }
        else
        {
            throw Exception::Error;
        }

        // The entity keys and the company context field may not be correct for the changes or current context.
        // Set the entity instance to the saved data.
        BudgetControlRuleOverBudgetPermissionsEntity entity;

        // Set the current company context to match the primary company context set on the entity.
        changecompany(this.LegalEntityId)
        {
            // Select the entity record based on the key.
            select * from entity
                where entity.Status == BudgetControlConfigurationStatus::Draft
                    && entity.RuleName == this.RuleName
                    && entity.UserGroupId == this.UserGroupId;
        }

        this.data(entity);

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftBudgetControlRule</Name>
				<Source><![CDATA[
    private BudgetControlRule getDraftBudgetControlRule()
    {
        BudgetControlConfiguration controlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetControlRule draftControlRule = BudgetControlRule::findByConfigurationAndRuleName(controlConfiguration.RecId, this.RuleName);

        if (!draftControlRule)
        {
            // If this rule name is not found in the draft configuration, throw an error
            throw error(strFmt('@Budget:BudgetControlRuleOverBudgetPermissionsEntity_RuleNotExist', this.RuleName, this.LegalEntityId));
        }

        return draftControlRule;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftBudgetControlRuleUserGroupOption</Name>
				<Source><![CDATA[
    private BudgetControlRuleUserGroupOption getDraftBudgetControlRuleUserGroupOption(RecId _draftControlRuleRecId, RecId _draftBudgetOverrideUserGroupOptionRecId)
    {
        BudgetControlConfiguration draftControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetControlRuleUserGroupOption draftBudgetControlRuleUserGroupOption;
        BudgetOverrideUserGroupOption budgetOverrideUserGroupOption;

        select firstonly forupdate * from draftBudgetControlRuleUserGroupOption
            where draftBudgetControlRuleUserGroupOption.BudgetControlRule == _draftControlRuleRecId
                && draftBudgetControlRuleUserGroupOption.BudgetOverrideUserGroupOption == _draftBudgetOverrideUserGroupOptionRecId;

        return draftBudgetControlRuleUserGroupOption;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetControlRuleOverBudgetPermissionsEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlRuleUserGroupOption</FormRef>
	<Label>@Budget:BudgetControlRuleOverBudgetPermissionsEntity</Label>
	<Tags>Control</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BudgetControlRuleOverBudgetPermissionsStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>Budgeting</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BudgetControlRuleOverBudgetPermissions</PublicCollectionName>
	<PublicEntityName>BudgetControlRuleOverBudgetPermission</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RuleName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideOverbudgetOption</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverbudgetBudgetGroupCheckOption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<DataField>LegalEntityId</DataField>
			<DataSource>BudgetControlRuleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Status</DataField>
			<DataSource>BudgetControlRuleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseBy</DataField>
			<DataSource>BudgetControlRuleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RuleName</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>BudgetControlRuleEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>id</DataField>
			<DataSource>UserGroupInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>name</DataField>
			<DataSource>UserGroupInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideOverbudgetOption</Name>
			<DataField>OverrideOverbudgetOption</DataField>
			<DataSource>BudgetControlRuleUserGroupOption</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverbudgetBudgetGroupCheckOption</Name>
			<DataField>OverbudgetBudgetGroupCheckOption</DataField>
			<DataSource>BudgetControlRuleUserGroupOption</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Status</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RuleName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UserGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BudgetControlRuleEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>BudgetControlRuleEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlRules</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlRuleOverBudgetPermissionsBudgetControlRule</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlRuleEntity_LegalEntityId</Name>
					<Field>LegalEntityId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlRuleEntity_Status</Name>
					<Field>Status</Field>
					<RelatedField>Status</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlRuleEntity_Name</Name>
					<Field>RuleName</Field>
					<RelatedField>Name</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SystemUserGroupEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SystemUserGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SystemUserGroups</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlRuleOverBudgetPermisionsSystemUserGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SystemUserGroupEntity_GroupId</Name>
					<Field>UserGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetControlRuleUserGroupOption</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetControlRuleUserGroupOption</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetOverrideUserGroupOption</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BudgetOverrideUserGroupOption</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UserGroupInfo</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>UserGroupInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>UserGroupInfo</Field>
										<JoinDataSource>BudgetOverrideUserGroupOption</JoinDataSource>
										<RelatedField>id</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BudgetOverrideUserGroupOption</Name>
								<JoinRelationName>BudgetOverrideUserGroupOption</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetControlRuleEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetControlRuleEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetControlRule</Field>
								<JoinDataSource>BudgetControlRuleUserGroupOption</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField1</Name>
						<DataSource>BudgetControlRuleEntity</DataSource>
						<Field>LegalEntityId</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField2</Name>
						<DataSource>BudgetControlRuleEntity</DataSource>
						<Field>Status</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField3</Name>
						<DataSource>BudgetControlRuleEntity</DataSource>
						<Field>Name</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>