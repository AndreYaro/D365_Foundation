<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjCDSContractLineMilestoneImportEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjCDSContractLineMilestoneImportEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ProjCDSContractLineMilestoneImport projCDSContractLineMilestoneImport;

        ProjOnAccTransSale projOnAccTransSale;

        select firstonly TransStatus, RecId from projOnAccTransSale
            exists join projCDSContractLineMilestoneImport
                where projCDSContractLineMilestoneImport.TransactionId == this.TransactionId
                    && projOnAccTransSale.TransId == projCDSContractLineMilestoneImport.ProjOnAccount
                    && projOnAccTransSale.TransStatus != ProjTransStatus::Registered;

        if (projOnAccTransSale.RecId)
        {
            ret = checkFailed(strFmt("@Proj:OnAccountTransactionNotValidOnStatus", enum2Str(ProjOnAccTransSale.TransStatus)));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates <c>ProjCDSContractLineMilestoneImport</c> and related record in <c>ProjOnAccTransSale</c> table.
    /// </summary>
    public void update()
    {
        ProjOnAccTransSale projOnAccTransSale;
        ProjCDSContractLineMilestoneImport projCDSContractLineMilestoneImport;

        // There will be only one ProjOnAccTransSale record as multiple funding sources are not allowed in CDS integration.
        select firstonly projOnAccTransSale
            exists join projCDSContractLineMilestoneImport
                where projCDSContractLineMilestoneImport.TransactionId == this.TransactionId
                    && projOnAccTransSale.TransId == projCDSContractLineMilestoneImport.ProjOnAccount;

        if (projOnAccTransSale && projOnAccTransSale.Amount != this.Amount)
        {
            // Update the corresponding ProjOnAccTransSale record.
            ttsbegin;
            projOnAccTransSale.selectForUpdate(true);
            projOnAccTransSale.Amount = this.Amount;
            projOnAccTransSale.update();
            ttscommit;
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjCDSContractLineMilestoneEntityDevDoc</DeveloperDocumentation>
	<Label>@Proj:ProjCDSContractLineMilestoneEntityTitle</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjCDSContractLineMilestoneImportStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CDSProjectContractLineMilestones</PublicCollectionName>
	<PublicEntityName>CDSProjectContractLineMilestone</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionId</Name>
			<DataField>TransactionId</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractLineRef</Name>
			<DataField>ContractLineRef</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceDate</Name>
			<DataField>InvoiceDate</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyId</Name>
			<DataField>CurrencyId</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Amount</Name>
			<DataField>Amount</DataField>
			<DataSource>ProjCDSContractLineMilestoneImport</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>TransactionId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjCDSContractLineMilestoneImport</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjCDSContractLineMilestoneImport</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>