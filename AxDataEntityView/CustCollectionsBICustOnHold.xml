<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsBICustOnHold</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustCollectionsBICustOnHold extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>translateBlockedStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create computed column for blocked status.
    /// </summary>
    /// <returns>The computed column.</returns>
    public static str translateBlockedStatus()
    {
        CustCollectionsBICustOnHold custBlockedStatus;

        return SysComputedColumn::switch(
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICustOnHold),
                identifierStr(CustCollectionsBICustTable),
                fieldStr(CustCollectionsBICustTable, Blocked)),
            custBlockedStatus.getBlockStatusMap(),
            SysComputedColumn::returnLiteral('Other'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getBlockStatusMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Create the block status map from the <c>CustVendorBlocked</c> enumeration for en-US only.
    /// </summary>
    /// <returns>The computed column map.</returns>
    /// <remarks>
    /// This method will be removed once PowerBI integration fully supports label translations.
    /// </remarks>
    protected Map getBlockStatusMap()
    {
        int i;
        var blockStatus = new DictEnum(enumName2Id('CustVendorBlocked'));
        var statusMap = SysComputedColumn::comparisionExpressionMap();

        for (i = 0; i < blockStatus.values(); i++)
        {
            if (blockStatus.index2Value(i) == CustVendorBlocked::All ||
                blockStatus.index2Value(i) == CustVendorBlocked::Invoice)
            {
                statusMap.insert(SysComputedColumn::comparisonLiteral(blockStatus.index2Value(i)), SysComputedColumn::comparisonLiteral(blockStatus.index2Label(i)));
            }
        }

        return statusMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Collections</ConfigurationKey>
	<Label>@AccountsReceivable:AR_Collections_CustCollectionsBICustOnHold</Label>
	<Tags>BI</Tags>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustCollectionsBICustTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Blocked</Name>
			<DataField>Blocked</DataField>
			<DataSource>CustCollectionsBICustTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>CustCollectionsBICustTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>BlockStatus</Name>
			<ComputedFieldMethod>translateBlockedStatus</ComputedFieldMethod>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>AccountNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>DataAreaId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustCollectionsBICustTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustCollectionsBICustTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Blocked</Name>
						<Field>Blocked</Field>
						<Value>All, Invoice</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>