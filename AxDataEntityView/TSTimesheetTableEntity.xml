<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TSTimesheetTableEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TSTimesheetTableEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TSTimesheetTableEntity,  TSTimesheetTable))
        {
            ProjPeriodLine          projPeriodLine;
            ProjPeriodTimesheetWeek projPeriodTimesheetWeek;
            TSTimesheetTable timesheetTable = _dataSourceCtx.getBuffer();

            // Only supports the Create and Approved approval statuses
            if (timesheetTable.approvalStatus != TSAppStatus::Create && timesheetTable.approvalStatus != TSAppStatus::Approved)
            {
                checkFailed(strfmt("@Proj:TimesheetDEImportSupportsOnlyCreateAndApprovedStatus", timesheetTable.approvalStatus));
                throw Exception::ViewDataSourceValidation;
            }

            changecompany(this.LegalEntity)
            {
                ResourceWorkerView resourceWorkerView;

                select firstonly RecId from resourceWorkerView
                    where resourceWorkerView.PersonnelNumber == this.PersonnelNumber
                        && resourceWorkerView.ResourceId == this.ResourceId
                        && resourceWorkerView.ResourceCompanyId == this.LegalEntity;

                timesheetTable.Resource = resourceWorkerView.RecId;

                projPeriodLine = TSTimesheetTable::getValidResourcePeriod(timesheetTable.Resource,timesheetTable.PeriodFrom);

                // Check if the user has not exceeded the timesheet limit
                if (projPeriodLine.RecId != 0
                    && TSTimesheetTable::checkMaxTimesheets(projPeriodLine.PeriodFrom,timesheetTable.Resource,true))
                {
                    timesheetTable.ProjPeriodId = projPeriodLine.PeriodId;
                    timesheetTable.PeriodFrom = projPeriodLine.PeriodFrom;
                    timesheetTable.PeriodTo = projPeriodLine.PeriodTo;

                    projPeriodTimesheetWeek = ProjPeriodTimesheetWeek::findFromPeriod(projPeriodLine.PeriodId, timesheetTable.PeriodFrom);
                    timesheetTable.ProjPeriodTimesheetWeek = projPeriodTimesheetWeek.RecId;
                }
            }

            this.skipDataSourceValidateField(fieldnum(TSTimesheetTableEntity, TimesheetNumber), true);
            this.skipDataSourceValidateField(fieldnum(TSTimesheetTableEntity, ApprovalStatus), true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(TSTimesheetTableEntity,  TSTimesheetTable))
        {
            TSTimesheetTable timesheetTable = _dataSourceCtx.getBuffer();

            if (this.LegalEntity)
            {
                changecompany(this.LegalEntity)
                {
                    ResourceWorkerView resourceWorkerView;

                    select firstonly RecId from resourceWorkerView
                    where resourceWorkerView.PersonnelNumber == this.PersonnelNumber
                        && resourceWorkerView.ResourceId == this.ResourceId
                        && resourceWorkerView.ResourceCompanyId == this.LegalEntity;

                    if (resourceWorkerView.RecId)
                    {
                        timesheetTable.Resource = resourceWorkerView.RecId;
                    }

                    SourceDocumentProcessorFacade::submitSourceDocumentImplementation(timesheetTable);
                }
            }
        }

        ret = super(_entityCtx, _dataSourceCtx);
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Timesheet:TSTimesheetTableEntityDevDoc</DeveloperDocumentation>
	<FormRef>TSTimesheetTableForEdit</FormRef>
	<Label>@Proj:TimesheetHeaders</Label>
	<Tags>Time</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TSTimesheetTableStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>LegalEntity</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>TimesheetTables</PublicCollectionName>
	<PublicEntityName>TimesheetTable</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>StartDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TimesheetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonnelNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TimesheetNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApprovalStatus</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ApprovalStatus</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsWorkflowToBeResubmitted</Name>
			<DataField>IsWorkflowToBeResubmitted</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<DataField>PeriodFrom</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingStatus</Name>
			<DataField>PostStatus</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimesheetNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>TimesheetNbr</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceId</Name>
			<DataField>ResourceId</DataField>
			<DataSource>ResourceWorkerView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PersonnelNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>ResourceWorkerView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntity</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DataAreaId</DataField>
			<DataSource>TSTimesheetTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Name</DataField>
			<DataSource>ResourceWorkerView</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>TimesheetNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TSTimesheetTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TSTimesheetTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ResourceWorkerView</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ResourceWorkerView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Resource</Field>
								<JoinDataSource>TSTimesheetTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>