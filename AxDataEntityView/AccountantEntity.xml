<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AccountantEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AccountantEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Defaults fields on the record.
    /// </summary>
    public void defaultRow()
    {
        super();

        if (this.isPrimaryAddressAssigned())
        {
            if (!this.LogisticsLocationPostalAddressLocationId)
                this.LogisticsLocationPostalAddressLocationId = LogisticsLocation::getNewLocationId();

            if (!this.AddressRole)
                this.AddressRole = conPeek(AccountantLogistics_BR::defaultRole(), 1);

            this.AccountantLogisticsLocationPostalAddressIsPrimary = NoYes::Yes;
            this.AccountantLogisticsLocationPostalAddressIsPostalAddress = NoYes::Yes;
        }

        if (this.isPrimaryEmailAssigned() || this.isPrimaryPhoneAssigned())
        {
            if (!this.LogisticsLocationElectronicAddressLocationId)
                this.LogisticsLocationElectronicAddressLocationId = LogisticsLocation::getNewLocationId();

            this.AccountantLogisticsLocationElectronicAddressIsPrimary = NoYes::Yes;
            this.AccountantLogisticsLocationElectronicAddressIsPostalAddress = NoYes::No;

            if (this.isPrimaryEmailAssigned())
            {
                if (!this.EmailRole)
                    this.EmailRole = conPeek(AccountantLogistics_BR::defaultRole(), 1);

                this.EmailIsPrimary = NoYes::Yes;
                this.EmailType = LogisticsElectronicAddressMethodType::Email;
            }

            if (this.isPrimaryPhoneAssigned())
            {
                if (!this.PhoneRole)
                    this.PhoneRole = conPeek(AccountantLogistics_BR::defaultRole(), 1);

                this.PhoneIsPrimary = NoYes::Yes;
                this.PhoneType = LogisticsElectronicAddressMethodType::Phone;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps specific behavior from Entity to Data Source
    /// </summary>
    /// <param name = "_entityCtx"></param>
    /// <param name = "_dataSourceCtx"></param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsElectronicAddressEmail))
        {
            this.skipDataSourceValidateField(fieldnum(AccountantEntity, EmailLocation), true);

            if (!this.isPrimaryEmailAssigned())
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsElectronicAddressPhone))
        {
            this.skipDataSourceValidateField(fieldnum(AccountantEntity, PhoneLocation), true);

            if (!this.isPrimaryPhoneAssigned())
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsLocationPostalAddress))
        {
            if (!this.isPrimaryAddressAssigned())
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
            else
            {
                AccountantEntity entityRecord = _entityCtx.getEntityRecord();
                entityRecord.Address = LogisticsPostalAddressStringBuilder::buildAddressStringFromParameters(entityRecord.postalAddressStringBuilderParameters());
                entityRecord.AddressCity = entityRecord.AddressCityName;
                entityRecord.AddressDistrict = entityRecord.AddressDistrictName;
            }
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, AccountantLogisticsLocationPostalAddress))
        {
            if (!this.isPrimaryAddressAssigned())
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, AccountantLogisticsLocationElectronicAddress))
        {
            if (!this.isPrimaryEmailAssigned() && !this.isPrimaryPhoneAssigned())
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Overrides how to find entity data source.
    /// </summary>
    /// <param name = "_entityCtx"></param>
    /// <param name = "_dataSourceCtx"></param>
    /// <returns></returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsAddressCity))
        {
            LogisticsAddressCity logisticsAddressCity;
            AccountantEntity entity = _entityCtx.getEntityRecord();

            select firstonly logisticsAddressCity
                where logisticsAddressCity.Name == entity.AddressCityName &&
                      logisticsAddressCity.StateId == entity.AddressState &&
                      logisticsAddressCity.CountryRegionId == entity.AddressCountryRegionId;

            ret = logisticsAddressCity;
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsAddressZipCode))
        {
            LogisticsAddressZipCode logisticsAddressZipCode;
            AccountantEntity entity = _entityCtx.getEntityRecord();

            select firstonly logisticsAddressZipCode
                where logisticsAddressZipCode.ZipCode == entity.AddressZipCode &&
                      logisticsAddressZipCode.CountryRegionId == entity.AddressCountryRegionId;

            ret = logisticsAddressZipCode;
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data from the entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx"></param>
    /// <param name = "_dataSourceCtx"></param>
    /// <returns></returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsElectronicAddressEmail) ||
            _dataSourceCtx.name() == dataEntityDataSourceStr(AccountantEntity, LogisticsElectronicAddressPhone))
        {
            LogisticsLocation logisticsLocation = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(AccountantEntity, LogisticsLocationElectronicAddress)).getBuffer();

            LogisticsElectronicAddress logisticsElectronicAddress = _dataSourceCtx.getBuffer();
            logisticsElectronicAddress.Location = logisticsLocation.RecId;

            AccountantLogisticsLocation_BR accountantLogisticsLocation = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(AccountantEntity, AccountantLogisticsLocationElectronicAddress)).getBuffer();
            accountantLogisticsLocation.Location = logisticsLocation.RecId;
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrimaryAddressAssigned</Name>
				<Source><![CDATA[
    private boolean isPrimaryAddressAssigned()
    {
        return this.AddressStreet != "" || this.AddressDescription != "" || this.AddressCityName != "" || this.AddressState != "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrimaryEmailAssigned</Name>
				<Source><![CDATA[
    private boolean isPrimaryEmailAssigned()
    {
        return this.EmailDescription != "" || this.EmailLocator != "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>isPrimaryPhoneAssigned</Name>
				<Source><![CDATA[
    private boolean isPrimaryPhoneAssigned()
    {
        return this.PhoneDescription != "" || this.PhoneLocator != "";
    }

]]></Source>
			</Method>
			<Method>
				<Name>postalAddressStringBuilderParameters</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns a <c>LogisticsPostalAddressStringBuilderParameters</c> object for the entity.
    /// </summary>
    /// <returns>
    /// A <c>LogisticsPostalAddressStringBuilderParameters</c> object.
    /// </returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    protected LogisticsPostalAddressStringBuilderParameters postalAddressStringBuilderParameters()
    {
        var addressStringBuilderParameters =
            new LogisticsPostalAddressStringBuilderParameters();

        addressStringBuilderParameters.parmStreet(this.AddressStreet);
        addressStringBuilderParameters.parmZipCodeId(this.AddressZipCodeName);
        addressStringBuilderParameters.parmCityName(this.AddressCityName);
        addressStringBuilderParameters.parmCountryRegionId(this.AddressCountryRegionId);
        addressStringBuilderParameters.parmStateId(this.AddressState);
        addressStringBuilderParameters.parmCountyId(this.AddressCounty);
        addressStringBuilderParameters.parmDistrictName(this.AddressDistrictName);
        addressStringBuilderParameters.parmStreetNumber(this.AddressStreetNumber);
        addressStringBuilderParameters.parmBuildingCompliment(this.AddressBuildingCompliment);

        return addressStringBuilderParameters;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<FormRef>Accountant_BR</FormRef>
	<Label>@GLS4170035</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>AccountantStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>GeneralLedger</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>Accountants</PublicCollectionName>
	<PublicEntityName>Accountant</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountantName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CPF</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CNPJ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CRC</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CRCIssuerState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CRCCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CRCExpirationDate</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CNPJ</Name>
			<DataField>CNPJNum_BR</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CPF</Name>
			<DataField>CPFNum_BR</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CRCCountryRegionId</Name>
			<DataField>CRCCountryRegionId</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CRCExpirationDate</Name>
			<DataField>CRCExpirationDate</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CRC</Name>
			<DataField>CRCNum_BR</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CRCIssuerState</Name>
			<DataField>CRCStateId</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantName</Name>
			<DataField>Name</DataField>
			<DataSource>Accountant_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationPostalAddressIsPostalAddress</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPostalAddress</DataField>
			<DataSource>AccountantLogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationPostalAddressIsPrimary</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPrimary</DataField>
			<DataSource>AccountantLogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationPostalAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RecId</DataField>
			<DataSource>AccountantLogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationElectronicAddressIsPostalAddress</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPostalAddress</DataField>
			<DataSource>AccountantLogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationElectronicAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RecId</DataField>
			<DataSource>AccountantLogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsLocationPostalAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RecId</DataField>
			<DataSource>LogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsLocationPostalAddressLocationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsLocationElectronicAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RecId</DataField>
			<DataSource>LogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsLocationElectronicAddressLocationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsPostalAddressValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsPostalAddressValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Address</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCityRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CityRecId</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCounty</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDistrictId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>District</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDistrict</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressIsPrivate</Name>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Location</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressState</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressZipCodeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ZipCodeRecId</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCityName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>LogisticsAddressCity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDistrictName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>LogisticsAddressDistrict</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressZipCodeName</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsAddressZipCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailCountryRegionCode</Name>
			<DataField>CountryRegionCode</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailIsInstantMessage</Name>
			<DataField>IsInstantMessage</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailIsPrimary</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPrimary</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailIsPrivate</Name>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Location</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailLocator</Name>
			<DataField>Locator</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailLocatorExtension</Name>
			<DataField>LocatorExtension</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailPrivateForParty</Name>
			<DataField>PrivateForParty</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Type</DataField>
			<DataSource>LogisticsElectronicAddressEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneCountryRegionCode</Name>
			<DataField>CountryRegionCode</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneIsInstantMessage</Name>
			<DataField>IsInstantMessage</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneIsMobilePhone</Name>
			<DataField>IsMobilePhone</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneIsPrimary</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPrimary</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneIsPrivate</Name>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Location</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneLocator</Name>
			<DataField>Locator</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneLocatorExtension</Name>
			<DataField>LocatorExtension</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhonePrivateForParty</Name>
			<DataField>PrivateForParty</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Type</DataField>
			<DataSource>LogisticsElectronicAddressPhone</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LogisticsAddressCityRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RecId</DataField>
			<DataSource>LogisticsAddressCity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsLocationPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressRole</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LocationRole</DataField>
			<DataSource>AccountantLogisticsLocationRoleAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressRoleLocationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountantLogisticsLocation</DataField>
			<DataSource>AccountantLogisticsLocationRoleAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationElectronicAddressLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Location</DataField>
			<DataSource>AccountantLogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountantLogisticsLocationElectronicAddressIsPrimary</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPrimary</DataField>
			<DataSource>AccountantLogisticsLocationElectronicAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailRoleLocationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ElectronicAddress</DataField>
			<DataSource>LogisticsElectronicAddressRoleEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmailRole</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LocationRole</DataField>
			<DataSource>LogisticsElectronicAddressRoleEmail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneRole</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LocationRole</DataField>
			<DataSource>LogisticsElectronicAddressPhoneRole</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneRoleLocationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ElectronicAddress</DataField>
			<DataSource>LogisticsElectronicAddressPhoneRole</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CPF</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CRC</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>Accountant_BR</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>Accountant_BR</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountantLogisticsLocationPostalAddress</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AccountantLogisticsLocation_BR</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>AccountantLogisticsLocationRoleAddress</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>AccountantLogisticsLocationRole_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>AccountantLogisticsLocationPostalAddress</JoinDataSource>
										<RelatedField>AccountantLogisticsLocation</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPrimary</Name>
								<Field>IsPrimary</Field>
								<Value>1</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPostalAddress</Name>
								<Field>IsPostalAddress</Field>
								<Value>1</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>Accountant_BR</JoinDataSource>
								<RelatedField>Accountant</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountantLogisticsLocationElectronicAddress</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AccountantLogisticsLocation_BR</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPostalAddress</Name>
								<Field>IsPostalAddress</Field>
								<Value>0</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>Accountant_BR</JoinDataSource>
								<RelatedField>Accountant</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsLocationPostalAddress</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsLocation</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Location</Field>
								<JoinDataSource>AccountantLogisticsLocationPostalAddress</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsLocationElectronicAddress</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsLocation</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Location</Field>
								<JoinDataSource>AccountantLogisticsLocationElectronicAddress</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddress</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddress</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsAddressCity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsAddressCity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>CityRecId</Field>
										<JoinDataSource>LogisticsPostalAddress</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsAddressDistrict</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsAddressDistrict</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>LogisticsAddressDistrict</Name>
										<JoinRelationName>LogisticsAddressDistrict</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsAddressZipCode</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsAddressZipCode</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>LogisticsAddressZipCode</Name>
										<JoinRelationName>LogisticsAddressZipCode</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LogisticsLocationPostalAddress</JoinDataSource>
								<RelatedField>Location</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsElectronicAddressEmail</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsElectronicAddress</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsElectronicAddressRoleEmail</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>LogisticsElectronicAddressRole</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>LogisticsElectronicAddressEmail</JoinDataSource>
										<RelatedField>ElectronicAddress</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPrimary</Name>
								<Field>IsPrimary</Field>
								<Value>1</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>Type</Name>
								<Field>Type</Field>
								<Value>Email</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LogisticsLocationElectronicAddress</JoinDataSource>
								<RelatedField>Location</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsElectronicAddressPhone</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsElectronicAddress</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsElectronicAddressPhoneRole</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>LogisticsElectronicAddressRole</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>LogisticsElectronicAddressPhone</JoinDataSource>
										<RelatedField>ElectronicAddress</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>IsPrimary</Name>
								<Field>IsPrimary</Field>
								<Value>1</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>Type</Name>
								<Field>Type</Field>
								<Value>Phone</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LogisticsLocationElectronicAddress</JoinDataSource>
								<RelatedField>Location</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>