<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WMSWarehouseLocationEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
[OfficeMenuOmit]
public class WMSWarehouseLocationEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityToDataSourceWHS</Name>
				<Source><![CDATA[
    public void insertEntityToDataSourceWHS(WMSLocation _location)
    {
        _location.emptyWMSFieldsForWHSWarehouse();

        if (this.GenerateCheckDigits && !this.CheckDigits)
        {
            _location.whsGenerateCheckText();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityToDataSourceWMS</Name>
				<Source><![CDATA[
    public void insertEntityToDataSourceWMS(WMSLocation _location)
    {
        if (!this.IsWarehouseLocationIdManual)
        {
            WMSLocationId systemGeneratedLocationId = _location.makeName();

            if (this.WarehouseLocationId
                && this.WarehouseLocationId != systemGeneratedLocationId)
            {
                checkFailed(strFmt("@WAX:WMSWarehouseLocationEntitySystemGeneratedWarehouseLabelMismatch", systemGeneratedLocationId));
                throw Exception::ViewDataSourceValidation;
            }
            else
            {
                _location.wmsLocationId = systemGeneratedLocationId;
            }
        }
        else
        {
            _location.initWMSLocationId();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WMSWarehouseLocationEntity, WMSLocation))
        {
            WMSLocation location    = _dataSourceCtx.getBuffer();
            boolean     whsEnabled  = InventLocation::find(location.InventLocationId).whsEnabled;

            if (whsEnabled)
            {
                this.insertEntityToDataSourceWHS(location);
            }
            else
            {
                this.insertEntityToDataSourceWMS(location);
            }

            _dataSourceCtx.setBuffer(location);
        }

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WMSWarehouseLocationEntity, WMSLocation))
        {
            this.saveDefaultWarehouseLocations();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WMSWarehouseLocationEntity, WMSLocation))
        {
            this.saveDefaultWarehouseLocations();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveDefaultWarehouseLocations</Name>
				<Source><![CDATA[
    private void saveDefaultWarehouseLocations()
    {
        boolean isValid = true;
        InventLocation  inventLocation;

        inventLocation = inventLocation::find(this.WarehouseId, true);

        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultCreditOnlyReturnWarehouseLocation))         && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultFinalShipmentWarehouseLocation))            && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultIssueWarehouseLocation))                    && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultKanbanFinishedGoodsWarehouseLocation))      && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionFinishedGoodsWarehouseLocation))  && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionInputWarehouseLocation))          && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultReceiptWarehouseLocation))                  && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreReturnWarehouseLocation))        && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreWarehouseLocation))              && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultShipmentMaintenanceWarehouseLocation))      && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultSortingWarehouseLocation))                  && isValid;
        isValid = this.updateDefaultWarehouseLocation(inventLocation, fieldNum(WMSWarehouseLocationEntity, IsDefaultQualityMaintenanceWarehouseLocation))       && isValid;

        if (isValid)
        {
            if (!this.skipDataSourceDefaultRow())
            {
                inventLocation.defaultRow();
            }

            if (this.skipDataSourceValidateWrite() || inventLocation.validateWrite())
            {
                inventLocation.update();
            }
            else
            {
                isValid = false;
            }
        }

        if (!isValid)
        {
            throw Exception::Error; // error messages have already been added, so no need to add yet another one.
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDefaultWarehouseLocation</Name>
				<Source><![CDATA[
    private boolean updateDefaultWarehouseLocation(InventLocation _inventLocation, FieldId _entityDefaultFieldId)
    {
        boolean         ok = true;
        FieldId         inventLocationDefaultFieldId = WMSWarehouseLocationEntity::getMappedInventLocationDefaultFieldId(_entityDefaultFieldId);

        WMSLocationId   currentDefaultLocationId;
        WMSLocationId   newDefaultLocationId;

        if (this.(_entityDefaultFieldId) != this.orig().(_entityDefaultFieldId))
        {
            currentDefaultLocationId    = this.(_entityDefaultFieldId) ? '' : this.warehouseLocationId;
            newDefaultLocationId        = this.(_entityDefaultFieldId) ? this.WarehouseLocationId : '';

            if (_inventLocation.(inventLocationDefaultFieldId) == currentDefaultLocationId)
            {
                _inventLocation.(inventLocationDefaultFieldId) = newDefaultLocationId;

                ok = this.skipDataSourceValidateField(_entityDefaultFieldId) || _inventLocation.validateField(inventLocationDefaultFieldId);
            }
            else
            {
                ok = checkFailed(strFmt("@WAX:CannotUpdateDefaultWarehouseLocationErrorMessage", fieldId2PName(tableNum(InventLocation), inventLocationDefaultFieldId), this.WarehouseLocationId, this.WarehouseId));
            }
        }
        return ok;
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultCreditOnlyReturnWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultCreditOnlyReturnWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultCreditOnlyReturnWarehouseLocation field.
    /// </returns>
    public static str IsDefaultCreditOnlyReturnWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultCreditOnlyReturnWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultFinalShipmentWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultFinalShipmentWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultFinalShipmentWarehouseLocation field.
    /// </returns>
    public static str IsDefaultFinalShipmentWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultFinalShipmentWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultIssueWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultIssueWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultIssueWarehouseLocation field.
    /// </returns>
    public static str IsDefaultIssueWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultIssueWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultKanbanFinishedGoodsWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultKanbanFinishedGoodsWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultKanbanFinishedGoodsWarehouseLocation field.
    /// </returns>
    public static str IsDefaultKanbanFinishedGoodsWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultKanbanFinishedGoodsWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultProductionFinishedGoodsWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultProductionFinishedGoodsWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultProductionFinishedGoodsWarehouseLocation field.
    /// </returns>
    public static str IsDefaultProductionFinishedGoodsWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionFinishedGoodsWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultProductionInputWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultProductionInputWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultProductionInputWarehouseLocation field.
    /// </returns>
    public static str IsDefaultProductionInputWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionInputWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultQualityMaintenanceWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultQualityMaintenanceWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultQualityMaintenanceWarehouseLocation field.
    /// </returns>
    public static str IsDefaultQualityMaintenanceWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultQualityMaintenanceWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultReceiptWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultReceiptWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultReceiptWarehouseLocation field.
    /// </returns>
    public static str IsDefaultReceiptWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultReceiptWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultRetailStoreReturnWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultRetailStoreReturnWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultRetailStoreReturnWarehouseLocation field.
    /// </returns>
    public static str IsDefaultRetailStoreReturnWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreReturnWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultRetailStoreWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultRetailStoreWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultRetailStoreWarehouseLocation field.
    /// </returns>
    public static str IsDefaultRetailStoreWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultShipmentMaintenanceWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultShipmentMaintenanceWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultShipmentMaintenanceWarehouseLocation field.
    /// </returns>
    public static str IsDefaultShipmentMaintenanceWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultShipmentMaintenanceWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsDefaultSortingWarehouseLocationDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultSortingWarehouseLocation computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultSortingWarehouseLocation field.
    /// </returns>
    public static str IsDefaultSortingWarehouseLocationDefinition()
    {
        return WMSWarehouseLocationEntity::warehouseLocationIdIsDefaultTransformationDefinition(fieldNum(WMSWarehouseLocationEntity, IsDefaultSortingWarehouseLocation));
    }

]]></Source>
			</Method>
			<Method>
				<Name>warehouseLocationIdIsDefaultTransformationDefinition</Name>
				<Source><![CDATA[
    private static str warehouseLocationIdIsDefaultTransformationDefinition(FieldId _entityDefaultFieldId)
    {
        TableName   entityName = tableStr(WMSWarehouseLocationEntity);

        return SysComputedColumn::if(
                    SysComputedColumn::equalExpression(
                        SysComputedColumn::comparisonField(entityName, dataEntityDataSourceStr(WMSWarehouseLocationEntity, WMSLocation), fieldStr(WMSLocation, WMSLocationId)),
                        SysComputedColumn::comparisonField(entityName, dataEntityDataSourceStr(WMSWarehouseLocationEntity, InventLocation), fieldId2Name(tableNum(InventLocation), WMSWarehouseLocationEntity::getMappedInventLocationDefaultFieldId(_entityDefaultFieldId)))),
                            SysComputedColumn::returnLiteral(NoYes::Yes),
                            SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMappedInventLocationDefaultFieldId</Name>
				<Source><![CDATA[
    private static FieldId getMappedInventLocationDefaultFieldId(FieldId _entityDefaultFieldId)
    {
        FieldId inventLocationDefaultFieldId;

        switch (_entityDefaultFieldId)
        {
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultCreditOnlyReturnWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultReturnCreditOnlyLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultFinalShipmentWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultFinalShipmentLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultIssueWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, WMSLocationIdDefaultIssue);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultKanbanFinishedGoodsWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultKanbanFinishedGoodsLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionFinishedGoodsWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultProductionFinishGoodsLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultProductionInputWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultProductionInputLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultReceiptWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, WMSLocationIdDefaultReceipt);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultQualityMaintenanceWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultQualityMaintenanceLocation);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreReturnWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, RetailWMSLocationIdDefaultReturn);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultRetailStoreWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, RBODefaultWMSLocationId);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultShipmentMaintenanceWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultShipMaintenanceLoc);
                break;
            case fieldNum(WMSWarehouseLocationEntity, IsDefaultSortingWarehouseLocation):
                inventLocationDefaultFieldId = fieldNum(InventLocation, DefaultSortingLocation);
                break;
            default:
                throw error(Error::wrongUseOfFunction(funcname()));
        }

        return inventLocationDefaultFieldId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.WarehouseAisleId)
        {
            ret = checkFailed(strFmt("@SYS26332", fieldstr(WMSWarehouseLocationEntity, WarehouseAisleId)));
        }

        InventLocation inventLocation = InventLocation::find(this.WarehouseId);

        if (inventLocation.whsEnabled)
        {
            if (this.BinId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, BinId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.RackId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, RackId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.ShelfId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, ShelfId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalHeightAboveGround)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalHeightAboveGround), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalDepth)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalDepth), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.DestinationWarehouseLocationId && this.DestinationWarehouseLocationId != this.WarehouseLocationId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, DestinationWarehouseLocationId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalHeight)
            {
                ret =  checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalHeight), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.InputStoreAreaId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, InputStoreAreaId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.WarehouseLocationType)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, WarehouseLocationType), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalMaximumStorageVolume)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalMaximumStorageVolume), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalMaximumStorageWeight)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalMaximumStorageWeight), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PickingStoreAreaId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PickingStoreAreaId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }

            if (this.PhysicalWidth)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, PhysicalWidth), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::Yes));
            }
        }
        else
        {
            if (this.BinId)
            {
                ret = inventLocation.wmsPositionNameActive || checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, BinId), fieldStr(InventLocation, wmsPositionNameActive), tableStr(InventLocation), NoYes::No));
            }

            if (this.RackId)
            {
                ret = inventLocation.WMSRackNameActive || checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, RackId), fieldStr(InventLocation, wmsRackNameActive), tableStr(InventLocation), NoYes::No));
            }

            if (this.ShelfId)
            {
                ret = inventLocation.wmsLevelNameActive || checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, ShelfId), fieldStr(InventLocation, wmsLevelNameActive), tableStr(InventLocation), NoYes::No));
            }

            if (this.GenerateCheckDigits)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, GenerateCheckDigits), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::No));
            }

            if (this.LastCountedUTCDateTime)
            {
                ret =  checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, LastCountedUTCDateTime), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::No));
            }

            if (this.WarehouseLocationProfileId)
            {
                ret =  checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, WarehouseLocationProfileId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::No));
            }

            if (this.WarehouseZoneId)
            {
                ret = checkFailed(strFmt("@WAX:FieldMustNotBeFilledInIfFieldIdInTableSet", fieldStr(WMSWarehouseLocationEntity, WarehouseZoneId), fieldStr(InventLocation, WHSEnabled), tableStr(InventLocation), NoYes::No));
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Resolve conflicts in the ordering of data import such that dependent records insert after parent records.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The execution context for import.</param>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        WMSWarehouseLocationStaging::resolveImportSequence(_dmfDefinitionGroupExecution);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WMSBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:WMSWarehouseLocationEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WMSLocation</FormRef>
	<Label>@SCM:WMSWarehouseLocations</Label>
	<Tags>Locations</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WMSWarehouseLocationStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>WarehouseLocations</PublicCollectionName>
	<PublicEntityName>WarehouseLocation</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BinId</Name>
			<DataField>position</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CheckDigits</Name>
			<DataField>checkText</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationWarehouseLocationId</Name>
			<Mandatory>No</Mandatory>
			<DataField>inputLocation</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>GenerateCheckDigits</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InputStoreAreaId</Name>
			<IsObsolete>Yes</IsObsolete>
			<DataField>storeAreaId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSortOrderCodeManual</Name>
			<DataField>manualSortCode</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsWarehouseLocationIdManual</Name>
			<DataField>manualName</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastCountedUTCDateTime</Name>
			<DataField>LastCountedUTCDateTime</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PickingStoreAreaId</Name>
			<IsObsolete>Yes</IsObsolete>
			<DataField>pickingAreaId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalDepth</Name>
			<DataField>depth</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalHeight</Name>
			<DataField>height</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalHeightAboveGround</Name>
			<DataField>absoluteHeight</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalMaximumStorageVolume</Name>
			<DataField>maxVolume</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalMaximumStorageWeight</Name>
			<DataField>maxWeight</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhysicalWidth</Name>
			<DataField>width</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RackId</Name>
			<DataField>rack</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShelfId</Name>
			<DataField>level</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SortOrderCode</Name>
			<DataField>sortCode</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseAisleId</Name>
			<Mandatory>No</Mandatory>
			<DataField>aisleId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationId</Name>
			<Mandatory>No</Mandatory>
			<DataField>wMSLocationId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationProfileId</Name>
			<DataField>LocProfileId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationType</Name>
			<DataField>locationType</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseZoneId</Name>
			<DataField>ZoneId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InputWarehouseLocationBlockingCauseId</Name>
			<DataField>inputBlockingCauseId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OutputWarehouseLocationBlockingCauseId</Name>
			<DataField>outputBlockingCauseId</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultCreditOnlyReturnWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYP4881163</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultCreditOnlyReturnWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultFinalShipmentWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX2723</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultFinalShipmentWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultIssueWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS55556</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultIssueWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultKanbanFinishedGoodsWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX4624</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultKanbanFinishedGoodsWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultProductionFinishedGoodsWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX694</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultProductionFinishedGoodsWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultProductionInputWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@SYP4881945</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultProductionInputWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultReceiptWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS55554</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultReceiptWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultRetailStoreReturnWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Label>@REX4160730</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultRetailStoreReturnWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultRetailStoreWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>Retail</ConfigurationKey>
			<Label>@RET5061</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultRetailStoreWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultShipmentMaintenanceWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX2754</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultShipmentMaintenanceWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultSortingWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX:WHSSortLocationIdLabel</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultSortingWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FirstAdditionalWarehouseZoneId</Name>
			<DataField>AdditionalZone1</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SecondAdditionalWarehouseZoneId</Name>
			<DataField>AdditionalZone2</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ThirdAdditionalWarehouseZoneId</Name>
			<DataField>AdditionalZone3</DataField>
			<DataSource>WMSLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AgingDate</Name>
			<DataField>AgingDate</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumberInLocation</Name>
			<DataField>ItemIdInLocation</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastActivityDateTime</Name>
			<DataField>LastActivityDateTime</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LocationStatus</Name>
			<DataField>LocationStatus</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsItemInLocationMaintained</Name>
			<DataField>MaintainItemInLocation</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsLocationActivityDateTimeMaintained</Name>
			<DataField>MaintainLocationActivityDateTime</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsLocationStatusMaintained</Name>
			<DataField>MaintainLocationStatus</DataField>
			<DataSource>WMSLocationAggregateStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultQualityMaintenanceWarehouseLocation</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<Label>@WAX:DefaultQualityMaintenanceLocation</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsDefaultQualityMaintenanceWarehouseLocationDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseLocationId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InputWarehouseLocationBlockingCause</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WMSWarehouseLocationBlockingCauseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>InputWarehouseLocationBlockingCause</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationBlockingCauseEntity_CauseId</Name>
					<Field>InputWarehouseLocationBlockingCauseId</Field>
					<RelatedField>CauseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>OutputWarehouseLocationBlockingCause</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WMSWarehouseLocationBlockingCauseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>OutputWarehouseLocationBlockingCause</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationBlockingCauseEntity_CauseId</Name>
					<Field>OutputWarehouseLocationBlockingCauseId</Field>
					<RelatedField>CauseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DestinationWarehouseLocation</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WMSWarehouseLocationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DestinationWarehouseLocation</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseLocationEntity_WarehouseLocationId</Name>
					<Field>DestinationWarehouseLocationId</Field>
					<RelatedField>WarehouseLocationId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Warehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Warehouse</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseLocationProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseLocationProfileEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseLocationProfile</RelatedDataEntityRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseLocationProfileEntity_ProfileId</Name>
					<Field>WarehouseLocationProfileId</Field>
					<RelatedField>ProfileId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseZone</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseZoneEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseZone</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseZoneEntity_ZoneId</Name>
					<Field>WarehouseZoneId</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseZoneKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseAisle</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WMSWarehouseAisleEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseAisle</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseAisleEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WMSWarehouseAisleEntity_AisleId</Name>
					<Field>WarehouseAisleId</Field>
					<RelatedField>AisleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>AisleKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseAdditionalZone1</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseZoneEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>FirstAdditionalWarehouseZone</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>FirstAdditionalZoneWarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseZoneEntity_ZoneId</Name>
					<Field>FirstAdditionalWarehouseZoneId</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseZoneKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseAdditionalZone2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseZoneEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SecondAdditionalWarehouseZone</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SecondAdditionalZoneWarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseZoneEntity_ZoneId</Name>
					<Field>SecondAdditionalWarehouseZoneId</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseZoneKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseAdditionalZone3</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseZoneEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ThirdAdditionalWarehouseZone</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ThirdAdditionalZoneWarehouseLocations</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseZoneEntity_ZoneId</Name>
					<Field>ThirdAdditionalWarehouseZoneId</Field>
					<RelatedField>ZoneId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseZoneKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WMSLocation</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WMSLocation</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventLocation</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventLocation</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>WMSLocation</JoinDataSource>
								<JoinRelationName>InventLocation</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WMSLocationAggregateStatus</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WMSLocationAggregateStatus</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation3</Name>
								<JoinDataSource>WMSLocation</JoinDataSource>
								<JoinRelationName>Location</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>