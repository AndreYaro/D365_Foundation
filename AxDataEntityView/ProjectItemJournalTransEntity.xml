<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjectItemJournalTransEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjectItemJournalTransEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjectItemJournalTransEntity, InventJournalTrans_Project):
                InventJournalTrans inventJournalTrans = _dataSourceCtx.getBuffer();

                switch (_dataSourceCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                        ProjTable projTable = ProjTable::find(this.ProjectID);

                        inventJournalTrans.JournalType = InventJournalType::project;

                        if (!this.ProjectDate)
                        {
                            inventJournalTrans.TransDate = DateTimeUtil::date(DateTimeUtil::getSystemDateTime());
                        }

                        if (!this.ProjectSalesCurrencyId)
                        {
                            inventJournalTrans.ProjSalesCurrencyId = projTable.currencyId();
                        }

                        if (!this.ProjectLinePropertyId)
                        {
                            inventJournalTrans.ProjLinePropertyId = ProjLinePropertySetup::findLinePropertyId(this.ProjectId, this.ProjectCategoryId);
                        }

                        if (!this.ProjectTaxGroupId)
                        {
                            inventJournalTrans.ProjTaxGroupId = ProjParameters::taxGroupInvoice(this.ProjectId);
                        }

                        InventTable inventTable = inventTable::find(this.ItemId);
                        if (inventTable)
                        {
                            boolean initQty, initInventDim;

                            if (!this.Quantity)
                            {
                                initQty = true;
                            }

                            if (!this.InventDimensionId && !inventJournalTrans.InventDimId)
                            {
								initInventDim = true;
								InventDim inventDimension;

								this.intializeInventoryDimension(inventDimension, inventTable);

								inventDimension = InventDim::findOrCreate(inventDimension);
								inventJournalTrans.InventDimId = inventDimension.inventDimId;
                            }

                            inventJournalTrans.initFromInventTable(inventTable, initQty, initInventDim, false, initInventDim);

                            if (inventJournalTrans.InventDimId)
                            {
                                this.InventDimensionId = inventJournalTrans.InventDimId;
                                InventDim inventDim = InventDim::find(this.InventDimensionId);
                                InventPriceMap inventPriceMap = inventJournalTrans.inventTable().inventCostPriceMap(this.InventDimensionId, inventDim, inventJournalTrans.inventTableModuleInvent(), this.ProjectDate);
                                    
                                if (!this.CostPrice)
                                {
                                    inventJournalTrans.CostPrice = inventPriceMap.price();
                                }

                                if (!this.PriceUnit)
                                {
                                    inventJournalTrans.PriceUnit = inventPriceMap.priceUnit();
                                }

                                if (!this.CostMarkup)
                                {
                                    inventJournalTrans.CostMarkup = inventPriceMap.markup();
                                }

                                if (!this.CostAmount)
                                {
                                    inventJournalTrans.CostAmount = PriceDisc::price2Amount(
                                        this.CostPrice ? this.CostPrice : inventJournalTrans.CostPrice,
                                        this.priceUnit ? this.PriceUnit : inventJournalTrans.PriceUnit,
                                        0,
                                        inventJournalTrans.Qty,
                                        inventJournalTrans.Qty,
                                        this.CostMarkup ? this.CostMarkup : inventJournalTrans.CostMarkup,
                                        0,
                                        '',
                                        0,
                                        true);
                                }
							}

							if (!this.DefaultDimensionDisplayValue && projTable.DefaultDimension)
							{
								inventJournalTrans.DefaultDimension = inventJournalTrans.copyDimension(projTable.DefaultDimension);
								inventJournalTrans.DefaultDimension = inventJournalTrans.mergeDimension(inventJournalTrans.DefaultDimension, inventTable.DefaultDimension);
							}
                        }

                        if (!this.ProjectUnitID && inventJournalTrans.ItemId)
                        {
                            inventJournalTrans.ProjUnitID = InventTableModule::find(inventJournalTrans.ItemId,ModuleInventPurchSales::Sales).UnitId;
                        }

                        // Add these calls here so that when skip business logic is used the insert doesn't fail.
                        if (!this.InventTransactionId)
                        {
                            inventJournalTrans.InventTransId = NumberSeq::newGetNum(InventParameters::numRefInventTransId()).num();
						}
                        if (!this.LineNum)
                        {
                            inventJournalTrans.LineNum = InventJournalTrans::lastLineNum(this.JournalId) + 1;
                        }
                        if (this.ProjectId && !this.ProjectTransactionId)
                        {
                            inventJournalTrans.ProjTransId = ProjParameters::newTransId();
                        }
  
                        break;

                    case DataEntityDatabaseOperation::Update:
                        inventJournalTrans.CostAmount = PriceDisc::price2Amount(inventJournalTrans.CostPrice,
                            inventJournalTrans.PriceUnit,
                            0,
                            inventJournalTrans.Qty,
                            inventJournalTrans.Qty,
                            inventJournalTrans.CostMarkup,
                            0,
                            '',
                            0,
                            true);

                        break;
                }

                _dataSourceCtx.setBuffer(inventJournalTrans);
                break;

            case dataEntityDataSourceStr(ProjectItemJournalTransEntity, InventDim):
                InventDim inventDim = _dataSourceCtx.getBuffer();

                if (this.InventDimensionId)
                {
                    inventDim = inventDim::find(this.InventDimensionId);
                }
                else
                {
                    inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                }

                _dataSourceCtx.setBuffer(inventDim);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
		this.skipDataSourceValidateField(fieldNum(ProjectItemJournalTransEntity, InventTransactionId), true);
		this.skipDataSourceValidateField(fieldNum(ProjectItemJournalTransEntity, LineNum), true);
		this.skipDataSourceValidateField(fieldNum(ProjectItemJournalTransEntity, ProjectTransactionID), true);
		super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>intializeInventoryDimension</Name>
				<Source><![CDATA[
    protected void intializeInventoryDimension(InventDim _inventDim, InventTable _inventTable)
    {
        _inventDim.InventSiteId = this.StorageSiteId;
        _inventDim.InventLocationId = this.StorageWarehouseId;
        _inventDim.wMSLocationId = this.StorageLocationId;

        if (_inventTable.colorActive())
        {
            _inventDim.InventColorId = this.ProductColorId;
        }

        if (_inventTable.configActive())
        {
            _inventDim.configId = this.ProductConfigurationId;
        }

        if (_inventTable.sizeActive())
        {
            _inventDim.InventSizeId = this.ProductSizeId;
        }

        if (_inventTable.styleActive())
        {
            _inventDim.InventStyleId = this.ProductStyleId;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<FormRef>InventJournalTable</FormRef>
	<Label>@Proj:ProjectItemJournalLines</Label>
	<Tags>Item journal</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjectItemJournalTransStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectItemJournalTrans</PublicCollectionName>
	<PublicEntityName>ProjectItemJournalTrans</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostAmount</Name>
			<DataField>CostAmount</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostPrice</Name>
			<DataField>CostPrice</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDimensionId</Name>
			<DataField>InventDimId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>JournalId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Voucher</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Qty</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectUnitID</Name>
			<DataField>ProjUnitID</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxItemGroupId</Name>
			<DataField>ProjTaxItemGroupId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTaxGroupId</Name>
			<DataField>ProjTaxGroupId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesPrice</Name>
			<DataField>ProjSalesPrice</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesCurrencyId</Name>
			<DataField>ProjSalesCurrencyId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CWQuantity</Name>
			<DataField>PdsCWQty</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNum</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LineNum</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceUnit</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostMarkup</Name>
			<DataField>CostMarkup</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventTransactionId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventTransactionReturnId</Name>
			<DataField>InventTransIdReturn</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTransactionId</Name>
			<DataField>ProjTransId</DataField>
			<DataSource>InventJournalTrans_Project</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageLocationId</Name>
			<DataField>wMSLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>inventSerialId</Name>
			<DataField>inventSerialId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Voucher</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>StorageWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
					<MapFieldTo>inventSerialId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>StorageSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
					<MapFieldTo>StorageLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Dimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjectEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectID</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjProjectLinePropertyEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>ProjProjectLinePropertyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectLinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventJournalTrans_Project</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>InventJournalTrans_Project</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventDim</Name>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalType</Name>
						<Field>JournalType</Field>
						<Value>project</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>