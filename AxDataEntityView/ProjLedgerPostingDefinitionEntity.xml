<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjLedgerPostingDefinitionEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjLedgerPostingDefinitionEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>projectIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str projectIdComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjLedgerPostingDefinitionEntity),
            dataEntityDataSourceStr(ProjLedgerPostingDefinitionEntity, ProjPosting),
            fieldStr(ProjPosting, ProjCode),
            TableGroupAll::Table,
            fieldStr(ProjPosting, ProjRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>projectGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str projectGroupComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjLedgerPostingDefinitionEntity),
            dataEntityDataSourceStr(ProjLedgerPostingDefinitionEntity, ProjPosting),
            fieldStr(ProjPosting, ProjCode),
            TableGroupAll::GroupId,
            fieldStr(ProjPosting, ProjRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str categoryIdComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjLedgerPostingDefinitionEntity),
            dataEntityDataSourceStr(ProjLedgerPostingDefinitionEntity, ProjPosting),
            fieldStr(ProjPosting, CategoryCode),
            TableGroupAll::Table,
            fieldStr(ProjPosting, ProjCategoryRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>categoryGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str categoryGroupComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(ProjLedgerPostingDefinitionEntity),
            dataEntityDataSourceStr(ProjLedgerPostingDefinitionEntity, ProjPosting),
            fieldStr(ProjPosting, CategoryCode),
            TableGroupAll::GroupId,
            fieldStr(ProjPosting, ProjCategoryRelation),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjCode</Name>
				<Source><![CDATA[
    private void defaultProjCode()
    {
        if (this.ProjectId)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, ProjectId)))
            {
                this.ProjCode = TableGroupAll::Table;
            }
        }
        else if (this.ProjectGroup)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, ProjectGroup)))
            {
                this.ProjCode = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.ProjCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjRelation</Name>
				<Source><![CDATA[
    private void defaultProjRelation()
    {
        if (this.ProjectId)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, ProjectId)))
            {
                this.ProjRelation = this.ProjectId;
            }
        }
        else if (this.ProjectGroup)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, ProjectGroup)))
            {
                this.ProjRelation = this.ProjectGroup;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCategoryCode</Name>
				<Source><![CDATA[
    private void defaultCategoryCode()
    {
        if (this.CategoryId)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, CategoryId)))
            {
                this.CategoryCode = TableGroupAll::Table;
            }
        }
        else if (this.CategoryGroup)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, CategoryGroup)))
            {
                this.CategoryCode = TableGroupAll::GroupId;
            }
        }
        else
        {
            this.CategoryCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjCategoryRelation</Name>
				<Source><![CDATA[
    private void defaultProjCategoryRelation()
    {
        if (this.CategoryId)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, CategoryId)))
            {
                this.ProjCategoryRelation = this.CategoryId;
            }
        }
        else if (this.CategoryGroup)
        {
            if (this.isFieldSet(fieldNum(ProjLedgerPostingDefinitionEntity, CategoryGroup)))
            {
                this.ProjCategoryRelation = this.CategoryGroup;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(ProjLedgerPostingDefinitionEntity, CategoryCode),
                [fieldNum(ProjLedgerPostingDefinitionEntity, CategoryId), fieldNum(ProjLedgerPostingDefinitionEntity, CategoryGroup)]],
            [fieldNum(ProjLedgerPostingDefinitionEntity, ProjCategoryRelation),
                [fieldNum(ProjLedgerPostingDefinitionEntity, CategoryId), fieldNum(ProjLedgerPostingDefinitionEntity, CategoryGroup)]],
            [fieldNum(ProjLedgerPostingDefinitionEntity, ProjCode),
                [fieldNum(ProjLedgerPostingDefinitionEntity, ProjectId), fieldNum(ProjLedgerPostingDefinitionEntity, ProjectGroup)]],
            [fieldNum(ProjLedgerPostingDefinitionEntity, ProjRelation),
                [fieldNum(ProjLedgerPostingDefinitionEntity, ProjectId), fieldNum(ProjLedgerPostingDefinitionEntity, ProjectGroup)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjLedgerPostingDefinitionEntity, ProjCode):
                this.defaultProjCode();
                break;
            case fieldNum(ProjLedgerPostingDefinitionEntity, ProjRelation):
                this.defaultProjRelation();
                break;
            case fieldNum(ProjLedgerPostingDefinitionEntity, CategoryCode):
                this.defaultCategoryCode();
                break;
            case fieldNum(ProjLedgerPostingDefinitionEntity, ProjCategoryRelation):
                this.defaultProjCategoryRelation();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            if (this.CategoryId && this.CategoryGroup)
            {
                ret = checkFailed("@Proj:EntityCategoryAndGroupSpecifiedError");
            }

            if (this.ProjectId && this.ProjectGroup)
            {
                ret = checkFailed("@Proj:EntityProjectAndGroupSpecifiedError");
            }

            if (this.ProjectAccountType == ProjAccountType::InvoiceCancelRevenueAccount && !ProjParameters::find().EnableCancelPostingProfiles)
            {
                ret = checkFailed("@Brazil:ProjectSalesCancellingAlternativeAccount");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ProjPosting</FormRef>
	<Label>@Proj:ProjectLedgerPostingDefinitionEntityLabel</Label>
	<Tags>Posting setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjLedgerPostingDefinitionStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectLedgerPostingDefinitions</PublicCollectionName>
	<PublicEntityName>ProjectLedgerPostingDefinition</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectAccountType</Name>
			<DataField>ProjAccountType</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProjectId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS110827</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>projectIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ProjId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProjectGroup</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS3895</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>projectGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ProjRelation</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CategoryId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>categoryIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ProjCategoryId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CategoryGroup</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>categoryGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ProjCategoryGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjFundingSource</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjFundingSource</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGroupId</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxGroupId</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectContractId</Name>
			<Mandatory>No</Mandatory>
			<DataField>ContractId</DataField>
			<DataSource>ProjFundingSource</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FundingSourceId</Name>
			<Mandatory>No</Mandatory>
			<DataField>FundingSourceId</DataField>
			<DataSource>ProjFundingSource</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountIdDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>MainAccountIdDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjCode</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CategoryCode</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjRelation</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjCategoryRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjCategoryRelation</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BorrowingLegalEntity</Name>
			<DataField>BorrowingLegalEntity</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LendingLegalEntity</Name>
			<DataField>LendingLegalEntity</DataField>
			<DataSource>ProjPosting</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjectAccountType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectGroup</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CategoryId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CategoryGroup</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TaxGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectContractId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>FundingSourceId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BorrowingLegalEntity</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LendingLegalEntity</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>MainAccountIdCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>MainAccountId</Name>
					<Field>MainAccountId</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjPosting</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjPosting</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjFundingSource</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjFundingSource</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ProjFundingSource</Name>
								<JoinRelationName>ProjFundingSource</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>MainAccountIdDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>MainAccountIdDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>ProjPosting</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>