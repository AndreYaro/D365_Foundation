<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryAdjustmentJournalEntryCDSEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventInventoryAdjustmentJournalEntryCDSEntity extends common
{    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return this.validateJournalType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournalType</Name>
				<Source><![CDATA[
    private boolean validateJournalType()
    {
        InventJournalTable journalHeader = InventJournalTable::find(this.JournalNumber);
        if (journalHeader
            && journalHeader.JournalType != InventJournalType::LossProfit)
        {
            return checkFailed(strFmt("@SYS22977", InventJournalType::LossProfit));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(InventInventoryAdjustmentJournalEntryCDSEntity, InventorySiteId),
                [fieldNum(InventInventoryAdjustmentJournalEntryCDSEntity, WarehouseId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventInventoryAdjustmentJournalEntryCDSEntity, InventorySiteId):
                if (this.isFieldSet(fieldNum(InventInventoryAdjustmentJournalEntryCDSEntity, WarehouseId)))
                {
                    this.InventorySiteId = InventLocation::find(this.WarehouseId).InventSiteId;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return new SysTableExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventJournalTrans):
                this.defaultItemIdAndDimensions();
                break;
        }
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemIdAndDimensions</Name>
				<Source><![CDATA[
    private void defaultItemIdAndDimensions()
    {
        EcoResProduct product = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
        InventDistinctProduct distinctProduct = InventDistinctProduct::findByProduct(product.RecId);
        if (distinctProduct)
        {
            this.ItemNumber = distinctProduct.ItemId;
            this.ProductColorId = distinctProduct.InventColorId;
            this.ProductStyleId = distinctProduct.InventStyleId;
            this.ProductVersionId = distinctProduct.InventVersionId;
            this.ProductSizeId = distinctProduct.InventSizeId;
            this.ProductConfigurationId = distinctProduct.configId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventDim):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventDim):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.skipDataSourceValidateField(fieldNum(InventInventoryAdjustmentJournalEntryCDSEntity, LineNumber), true);

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                        _dataSourceCtx.setBuffer(inventDim);

                        var journalTransContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventJournalTrans));

                        InventJournalTrans journalTrans = journalTransContext.getBuffer();
                        journalTrans.setInventDimId(inventDim.inventDimId);
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventInventoryAdjustmentJournalEntryCDSEntity, InventJournalTrans))
        {
            InventJournalTrans inventJournalTrans = _dataSourceCtx.getBuffer();
            InventDim inventDim = inventJournalTrans.inventDim();
            this.InventorySiteId = inventDim.InventSiteId;
            this.WarehouseId = inventDim.InventLocationId;
            this.ProductColorId = inventDim.InventColorId;
            this.ProductStyleId = inventDim.InventStyleId;
            this.ProductVersionId = inventDim.InventVersionId;
            this.ProductSizeId = inventDim.InventSizeId;
            this.ProductConfigurationId = inventDim.configId;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates missing journal headers after the import data have been added to the staging table.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        InventInventoryAdjustmentJournalEntryCDSStaging stagingRecord;
        InventJournalTable journalTable;

        while select JournalNumber, JournalNameId from stagingRecord group by JournalNumber, JournalNameId
            where stagingRecord.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && stagingRecord.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
            notexists join journalTable
                where journalTable.JournalId == stagingRecord.JournalNumber
        {
            InventInventoryAdjustmentJournalEntryCDSEntity::createJournalHeader(stagingRecord.JournalNameId, InventJournalType::LossProfit, stagingRecord.JournalNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes logic for updating journal headers.
    /// </summary>
    /// <param name="_dmfDefinitionGroupExecution">
    /// The definition group that should be processed.
    /// </param>
    /// <remarks>
    /// The number of journal lines gets updated on the journal header.
    /// </remarks>
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        InventInventoryJournalEntryStagingMap::postTargetProcess(_dmfDefinitionGroupExecution, tableNum(InventInventoryAdjustmentJournalEntryCDSStaging));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalHeader</Name>
				<Source><![CDATA[
    private static InventJournalTable createJournalHeader(
        JournalNameId _journalNameId, 
        InventJournalType _expectedJournalType,
        InventJournalId _journalNumber)
    {
        InventJournalName inventJournalName = InventJournalName::find(_journalNameId);
        InventJournalTable inventJournalTable;

        if (inventJournalName
            && inventJournalName.JournalType == _expectedJournalType)
        {
            inventJournalTable.initFromInventJournalName(inventJournalName);
            inventJournalTable.VoucherDraw = JournalVoucherDraw::Post;
            inventJournalTable.JournalId = _journalNumber;
            inventJournalTable.JournalOriginType = InventJournalOriginType::ExternalIntegration;
            inventJournalTable.insert();
        }
        else
        {
            throw error(strFmt("@SYS22977", _expectedJournalType));
        }

        return inventJournalTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Developer_InventInventoryAdjustmentJournalEntryCDSEntity</DeveloperDocumentation>
	<FormRef>InventJournalTableLossProfit</FormRef>
	<Label>@SCM:DataEntity_InventInventoryAdjustmentJournalEntryCDSEntity</Label>
	<Tags>Journals</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventInventoryAdjustmentJournalEntryCDSStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryQuantity</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNameId</Name>
			<DataField>JournalNameId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNumber</Name>
			<DataField>JournalId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LineNum</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductNumber</Name>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResDistinctProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ItemId</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryQuantity</Name>
			<DataField>Qty</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventorySiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryJournalEntryMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CatchWeightQuantity</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimensionDisplayValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventoryQuantity</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventoryStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemNumber</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalHeaderOffsetMainAccountId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNumber</MapField>
					<MapFieldTo>JournalNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetMainAccountId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetMainAccountIdDisplayValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionDate</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitCost</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>WarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>InventorySiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventJournalTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventJournalTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventJournalTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JournalTypeLossProfit</Name>
								<Field>JournalType</Field>
								<Status>Hidden</Status>
								<Value>LossProfit</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventJournalTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventDistinctProduct</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDistinctProduct</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResDistinctProduct</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResDistinctProduct</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>EcoResProductSystemLanguage</Name>
												<DynamicFields>Yes</DynamicFields>
												<IsReadOnly>Yes</IsReadOnly>
												<Table>EcoResProductSystemLanguage</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>Product</Field>
														<JoinDataSource>InventDistinctProduct</JoinDataSource>
														<RelatedField>Product</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>EcoResProductTranslationToSystemLanguage</Name>
												<DynamicFields>Yes</DynamicFields>
												<IsReadOnly>Yes</IsReadOnly>
												<Table>EcoResProductTranslation</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>RecId</Field>
														<JoinDataSource>EcoResDistinctProduct</JoinDataSource>
														<RelatedField>Product</RelatedField>
													</AxQuerySimpleDataSourceRelation>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation2</Name>
														<Field>SystemLanguageId</Field>
														<JoinDataSource>EcoResProductSystemLanguage</JoinDataSource>
														<RelatedField>LanguageId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>InventTable</Name>
												<DynamicFields>Yes</DynamicFields>
												<IsReadOnly>Yes</IsReadOnly>
												<Table>InventTable</Table>
												<DataSources>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResProductMaster</Name>
														<DynamicFields>Yes</DynamicFields>
														<IsReadOnly>Yes</IsReadOnly>
														<Table>EcoResProductMaster</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>Product</Field>
																<JoinDataSource>InventTable</JoinDataSource>
																<RelatedField>RecId</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
													<AxQuerySimpleEmbeddedDataSource>
														<Name>EcoResProductMasterTranslationToSystemLanguage</Name>
														<DynamicFields>Yes</DynamicFields>
														<IsReadOnly>Yes</IsReadOnly>
														<Table>EcoResProductTranslation</Table>
														<DataSources />
														<DerivedDataSources />
														<Fields />
														<Ranges />
														<JoinMode>OuterJoin</JoinMode>
														<Relations>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation1</Name>
																<Field>RecId</Field>
																<JoinDataSource>EcoResProductMaster</JoinDataSource>
																<RelatedField>Product</RelatedField>
															</AxQuerySimpleDataSourceRelation>
															<AxQuerySimpleDataSourceRelation>
																<Name>QueryDataSourceRelation2</Name>
																<Field>SystemLanguageId</Field>
																<JoinDataSource>EcoResProductSystemLanguage</JoinDataSource>
																<RelatedField>LanguageId</RelatedField>
															</AxQuerySimpleDataSourceRelation>
														</Relations>
													</AxQuerySimpleEmbeddedDataSource>
												</DataSources>
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>QueryDataSourceRelation1</Name>
														<Field>ItemId</Field>
														<JoinDataSource>InventdistinctProduct</JoinDataSource>
														<RelatedField>ItemId</RelatedField>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources>
											<AxQuerySimpleDerivedDataSource>
												<Name>EcoResDistinctProduct_EcoResDistinctProductVariant</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>EcoResDistinctProductVariant</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
										</DerivedDataSources>
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>Product</Field>
												<JoinDataSource>InventDistinctProduct</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>ItemId</Field>
										<JoinDataSource>InventJournalTrans</JoinDataSource>
										<RelatedField>ItemId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>InventColorId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventColorId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2Copy1</Name>
										<Field>InventSizeId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventSizeId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2Copy2</Name>
										<Field>InventStyleId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventStyleId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelationVersion</Name>
										<Field>InventVersionId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>InventVersionId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2Copy3</Name>
										<Field>configId</Field>
										<JoinDataSource>InventDim</JoinDataSource>
										<RelatedField>ConfigId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventJournalTrans</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalTypeLossProfit</Name>
						<Field>JournalType</Field>
						<Status>Hidden</Status>
						<Value>LossProfit</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>
