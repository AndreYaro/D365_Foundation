<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlGroupOverBudgetPermissionsEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlGroupOverBudgetPermissionsEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BudgetGroupUserGroupOption draftGroupUserGroupOption = this.getDraftGroupUserGroupOption();

        if (draftGroupUserGroupOption.validateDelete())
        {
            draftGroupUserGroupOption.delete();
        }
        else
        {
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertRecord</Name>
				<Source><![CDATA[
    private void upsertRecord()
    {
        ttsbegin;

        BudgetGroupUserGroupOption draftGroupUserGroupOption = this.getDraftGroupUserGroupOption();

        if (!draftGroupUserGroupOption)
        {
            draftGroupUserGroupOption.BudgetGroup = this.getDraftTopGroupMember().BudgetGroup;
            draftGroupUserGroupOption.BudgetOverrideUserGroupOption = this.getDraftOverrideUserGroupInfo().RecId;
        }

        draftGroupUserGroupOption.OverrideOverbudgetOption = this.OverrideOverbudgetOption;

        if (draftGroupUserGroupOption.validateWrite())
        {
            draftGroupUserGroupOption.write();

            // The entity keys and the company context field may not be correct for the changes or current context.
            // Set the entity instance to the saved data.
            BudgetControlGroupOverBudgetPermissionsEntity entity;

            // Set the current company context to match the primary company context set on the entity.
            changecompany(this.LegalEntityId)
            {
                // Select the entity record based on the key.
                select * from entity
                    where entity.Status == BudgetControlConfigurationStatus::Draft
                        && entity.BudgetGroupName == this.BudgetGroupName
                        && entity.UserGroupId == this.UserGroupId;
            }

            this.data(entity);
        }
        else
        {
            throw Exception::Error;
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftTopGroupMember</Name>
				<Source><![CDATA[
    private BudgetGroupMember getDraftTopGroupMember()
    {
        BudgetControlConfiguration draftControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetGroupMember draftTopGroupMember = BudgetGroupMember::findByBudgetControlConfigurationMemberName(draftControlConfiguration.RecId, this.BudgetGroupName);

        if (!draftTopGroupMember)
        {
            // If this budget group name is not found in the draft configuration, throw an error
            throw error(strFmt("@Budget:BudgetControlGroupOverBudgetPermissions_NoDraftTopGroupMember",
                this.BudgetGroupName,
                fieldId2PName(tableNum(BudgetControlGroupOverBudgetPermissionsEntity), fieldNum(BudgetControlGroupOverBudgetPermissionsEntity, BudgetGroupName)),
                tableStr(BudgetControlGroupEntity)));
        }

        return draftTopGroupMember;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftOverrideUserGroupInfo</Name>
				<Source><![CDATA[
    private BudgetOverrideUserGroupOption getDraftOverrideUserGroupInfo()
    {
        BudgetControlConfiguration draftControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetOverrideUserGroupOption draftOverrideUserGroupInfo = BudgetOverrideUserGroupOption::findByUserGroupAndConfiguration(this.UserGroupId, draftControlConfiguration.RecId);

        if (!draftOverrideUserGroupInfo)
        {
            draftOverrideUserGroupInfo.UserGroupInfo = this.UserGroupId;
            draftOverrideUserGroupInfo.DefaultOverBudgetOption = BudgetCheckOverbudgetOption::PreventProcessing;
            draftOverrideUserGroupInfo.BudgetControlConfiguration = draftControlConfiguration.RecId;

            if (draftOverrideUserGroupInfo.validateWrite())
            {
                draftOverrideUserGroupInfo.insert();
            }
            else
            {
                throw Exception::Error;
            }
        }

        return draftOverrideUserGroupInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftGroupUserGroupOption</Name>
				<Source><![CDATA[
    private BudgetGroupUserGroupOption getDraftGroupUserGroupOption()
    {
        BudgetGroupMember draftTopGroupMember = this.getDraftTopGroupMember();
        BudgetOverrideUserGroupOption draftOverrideUserGroupInfo = this.getDraftOverrideUserGroupInfo();

        BudgetGroupUserGroupOption draftGroupUserGroupOption;

        select firstonly forupdate draftGroupUserGroupOption
            where draftGroupUserGroupOption.BudgetGroup == draftTopGroupMember.BudgetGroup
                && draftGroupUserGroupOption.BudgetOverrideUserGroupOption == draftOverrideUserGroupInfo.RecId;

        return draftGroupUserGroupOption;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetControlGroupOverBudgetPermissionsEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlGroupUserGroupOption</FormRef>
	<Label>@Budget:BudgetControlGroupOverBudgetPermissions</Label>
	<Tags>Control</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BudgetControlGroupOverBudgetPermissionsStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>Budgeting</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BudgetControlGroupOverBudgetPermissions</PublicCollectionName>
	<PublicEntityName>BudgetControlGroupOverBudgetPermission</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OverrideOverbudgetOption</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<DataField>LegalEntityId</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Status</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseBy</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetGroupName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Budget:BudgetGroupLabel</Label>
			<DataField>Name</DataField>
			<DataSource>BudgetGroupMember</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>UserGroupInfo</DataField>
			<DataSource>BudgetOverrideUserGroupOption</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>name</DataField>
			<DataSource>UserGroupInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideOverbudgetOption</Name>
			<DataField>OverrideOverbudgetOption</DataField>
			<DataSource>BudgetGroupUserGroupOption</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetGroup</DataField>
			<DataSource>BudgetGroupUserGroupOption</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetOverrideUserGroupOption</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetOverrideUserGroupOption</DataField>
			<DataSource>BudgetGroupUserGroupOption</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Status</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetGroupName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UserGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BudgetControlGroupEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>BudgetControlGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlGroups</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlGroupOverBudgetPermissionsBudgetControlGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlGroupEntity_LegalEntityId</Name>
					<Field>LegalEntityId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlGroupEntity_Status</Name>
					<Field>Status</Field>
					<RelatedField>Status</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlGroupEntity_MemberName</Name>
					<Field>BudgetGroupName</Field>
					<RelatedField>MemberName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SystemUserGroupEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SystemUserGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SystemUserGroups</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlGroupOverBudgetPermissionsSystemUserGroup</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SystemUserGroupEntity_GroupId</Name>
					<Field>UserGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetGroupUserGroupOption</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetGroupUserGroupOption</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetGroupMember</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetGroupMember</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>BudgetGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>BudgetGroup</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>BudgetControlConfigurationEntity</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>BudgetControlConfigurationEntity</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>BudgetControlConfiguration</Field>
												<JoinDataSource>BudgetGroup</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>BudgetGroup</Field>
										<JoinDataSource>BudgetGroupMember</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ParentBudgetGroupMember</Name>
								<Field>ParentBudgetGroupMember</Field>
								<Status>Hidden</Status>
								<Value>0</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetGroup</Field>
								<JoinDataSource>BudgetGroupUserGroupOption</JoinDataSource>
								<RelatedField>BudgetGroup</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetOverrideUserGroupOption</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetOverrideUserGroupOption</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UserGroupInfo</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>UserGroupInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>UserGroupInfo</Field>
										<JoinDataSource>BudgetOverrideUserGroupOption</JoinDataSource>
										<RelatedField>id</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BudgetOverrideUserGroupOption</Name>
								<JoinRelationName>BudgetOverrideUserGroupOption</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>