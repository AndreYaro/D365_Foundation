<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ensures focus is set to selected target record.
    /// </summary>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void jumpRefMethod(
        str _menuItemName,
        LeanProductAllocationKeyLeanScheduleGroupAssignmentStaging _stagingBuffer,
        Object _callerObj,
        DataAreaId _dataAreaId)
    {
        changeCompany(_dataAreaId)
        {
            WrkCtrResourceGroup workCellRecord = WrkCtrResourceGroup::findWrkCtrId(_stagingBuffer.WorkCellOperationsResourceGroupId);
            var record = LeanScheduleGroup::findByNameAndWorkCell(_stagingBuffer.LeanScheduleGroupId, workCellRecord.RecId);

            Args args = new Args();
            args.record(record);
            args.lookupRecord(record);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            if (_dataSourceCtx.name() == dataentitydatasourcestr(LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity, LeanScheduleGroup))
            {
                // If a record specifies a lean schedule group with a Work Cell transfer the value from computed column to table field
                if (this.WorkCellOperationsResourceGroupId)
                {
                    LeanScheduleGroup leanScheduleGroup = _dataSourceCtx.getBuffer();
                    WrkCtrResourceGroup wrkCtrResourceGroup = WrkCtrResourceGroup::findWrkCtrId(this.WorkCellOperationsResourceGroupId);
                    leanScheduleGroup.WorkCell = wrkCtrResourceGroup.RecId;
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>workCellOperationsResourceGroupIdConvertNullValueToEmptyString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Data entity view method for computed column exposing the Work cell field value.
    /// </summary>
    /// <returns>Empty string if the Work cell is blank; otherwise returns the Work cell</returns>
    /// <remarks>Work cell is part of the entity key. Field is implemented as computed column because import will otherwise fail
    /// to find an existing record using a null value</remarks>
    private static str workCellOperationsResourceGroupIdConvertNullValueToEmptyString()
    {
        TableName entityName = tablestr(LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity);
        str datasourceName = dataEntityDataSourceStr(LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity, WrkCtrResourceGroup);
        FieldName fieldName = fieldStr(WrkCtrResourceGroup, WrkCtrId);

        str fieldExpression = SysComputedColumn::returnField(entityName, datasourceName, fieldName);

        return SysComputedColumn::if(
            SysComputedColumn::isNullExpression(fieldExpression),
            SysComputedColumn::returnLiteral(''),
            fieldExpression);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LeanManufacturing</ConfigurationKey>
	<DeveloperDocumentation>@SCM:LeanProductAllocationKeyLeanScheduleGroupAssignmentEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>LeanScheduleGroup</FormRef>
	<Label>@SCM:LeanProductAllocationKeyLeanScheduleGroupAssignmentEntity</Label>
	<Tags>Lean</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>LeanProductAllocationKeyLeanScheduleGroupAssignmentStaging</DataManagementStagingTable>
	<Modules>ProductionControl</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeanScheduleGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ScheduleGroup</DataField>
			<DataSource>LeanScheduleGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LeanScheduleGroupId</Name>
			<DataField>Name</DataField>
			<DataSource>LeanScheduleGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkCellOperationsResourceGroup</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkCell</DataField>
			<DataSource>LeanScheduleGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NullableWorkCellOperationsResourceGroupId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WrkCtrId</DataField>
			<DataSource>WrkCtrResourceGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>WorkCellOperationsResourceGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>workCellOperationsResourceGroupIdConvertNullValueToEmptyString</ComputedFieldMethod>
			<ExtendedDataType>WrkCtrGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductAllocationKeyId</Name>
			<DataField>AllocationId</DataField>
			<DataSource>LeanScheduleGroupEntryGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ThroughputRatio</Name>
			<DataField>ThroughputRatio</DataField>
			<DataSource>LeanScheduleGroupItem</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LeanScheduleGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkCellOperationsResourceGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductAllocationKeyId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LeanScheduleGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>LeanScheduleGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>LeanScheduleGroup</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>ProductAllocationKeyLeanScheduleGroupAssignments</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>LeanScheduleGroupEntity_GroupId</Name>
					<Field>LeanScheduleGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>WorkCellOperationsResourceGroupId</Field>
					<RelatedField>WorkCellOperationsResourceGroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LeanScheduleGroupItem</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LeanScheduleGroupItem</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LeanScheduleGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>LeanScheduleGroup</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WrkCtrResourceGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>WrkCtrResourceGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>WorkCell</Field>
										<JoinDataSource>LeanScheduleGroup</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ScheduleGroup</Field>
								<JoinDataSource>LeanScheduleGroupItem</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LeanScheduleGroupEntryGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LeanScheduleGroupEntryGroup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LeanScheduleGroupItem</JoinDataSource>
								<RelatedField>LeanScheduleGroupItem</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>EntryType</Name>
						<Field>EntryType</Field>
						<Value>Group</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>