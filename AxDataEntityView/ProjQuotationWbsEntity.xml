<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjQuotationWbsEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjQuotationWbsEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Post load operation.
    /// </summary>
    public void postLoad()
    {
        super();

        changecompany (this.DataAreaId)
        {
            this.Predecessors = ProjWBSDataEntityHelper::loadPredecessor(this.HierarchyId, this.TaskId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Map entity to data source operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjQuotationWbsEntity, ProjPlanVersion):
                ProjPlanVersion task = ProjPlanVersion::findByHierarchyAndPathId(this.HierarchyId, this.WBSId);
                if (task)
                {
                    _dataSourceCtx.setBuffer(task);
                }
                else
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjQuotationWbsEntity, ProjPlanVersion)
            && _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            // Only add this record if hierarchy ID is specified.
            if (this.HierarchyId)
            {
                ProjPlanVersion insertTask = _dataSourceCtx.getBuffer();
                insertTask.PathId = this.WBSId;
                ProjPlanVersion parentTask = ProjWBSDataEntityHelper::getParentTaskByWBSId(insertTask.PathId, insertTask.HierarchyId, true);
                ProjWBSDataEntityHelper::preInsertOperation(insertTask, parentTask, this.Predecessors, this.CalendarId, this.CalendarStandardWorkDayHours);

                _dataSourceCtx.setBuffer(insertTask);
                    
                ret = super(_entityCtx, _dataSourceCtx);

                ProjWBSDataEntityHelper::postInsertOperation(ProjWBSType::ProjectQuotation, insertTask, parentTask, this.CalendarId, this.CalendarStandardWorkDayHours);
            }
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find entity by the specified hierarchy ID and WBS ID.
    /// </summary>
    /// <param name = "_hierarchyId">Hierarchy ID.</param>
    /// <param name = "_wbsId">WBS ID.</param>
    /// <param name = "_forUpdate">A boolean flag to set whether the return object should allow update; optional.</param>
    /// <returns><c>ProjQuotationWbsEntity</c> object.</returns>
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static ProjQuotationWbsEntity find(HierarchyIdBase _hierarchyId, str _wbsId, boolean _forUpdate = false)
    {
        ProjQuotationWbsEntity quotationWbsEntity;

        quotationWbsEntity.selectForUpdate(_forUpdate);

        select firstonly quotationWbsEntity 
            where quotationWbsEntity.HierarchyId == _hierarchyId 
                && quotationWbsEntity.WBSId == _wbsId;

        return quotationWbsEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize entity data source to set a few fields.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjQuotationWbsEntity, ProjPlanVersion))
        {
            SalesQuotationTable quoteTable = SalesQuotationTable::find(this.QuotationId);
            HierarchyLinkTable hierarchyLinkTable;

            if (quoteTable.RecId != 0)
            {
                select firstonly RecId, HierarchyId from hierarchyLinkTable
                where hierarchyLinkTable.RefTableId == tableNum(SalesQuotationTable) &&
                    hierarchyLinkTable.RefRecId == quoteTable.RecId;

                if (hierarchyLinkTable.RecId == 0)
                {
                    //create Hierarchy record
                    HierarchyCreate     hierarchyCreate;
                    Hierarchy           hierarchy;

                    hierarchyCreate = HierarchyCreate::construct(HierarchyType::Project);
                    hierarchyCreate.parmIsQuotation(true);
                    hierarchyCreate.parmSourceCommon(quoteTable);
                    hierarchyCreate.run();
                    hierarchy = hierarchyCreate.parmHierarchy();

                    ProjPlanVersionsManager::createDraft(hierarchy.HierarchyId, quoteTable.QuotationId, quoteTable.PSAEstProjStartDate, quoteTable.PSAEstProjEndDate);

                    this.HierarchyId = hierarchy.HierarchyId;
                }
                else
                {
                    this.HierarchyId = hierarchyLinkTable.HierarchyId;
                }
            }

            this.CalendarId = quoteTable.PSASchedCalendarId;
            this.CalendarStandardWorkDayHours = ProjWorkBreakdownStructureV2FormHelper::getCalendarStandardWorkDayHours(this.CalendarId);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find entity data source.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>Table buffer.</returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjQuotationWbsEntity, SalesQuotationTable):
                ret = SalesQuotationTable::find(this.QuotationId);

                break;

            case dataEntityDataSourceStr(ProjQuotationWbsEntity, HierarchyLinkTable):
                ret =  HierarchyLinkTable::findByHierarchyId(this.HierarchyId);

                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjQuotationWbsEntity, ProjPlanVersion))
        {
            ProjPlanVersion updateTask = _dataSourceCtx.getBuffer();
            updateTask.PathId = this.WBSId;
            ProjWBSDataEntityHelper::preUpdateOperation(updateTask, this.Predecessors);
            
            _dataSourceCtx.setBuffer(updateTask);

            ret = super(_entityCtx, _dataSourceCtx);

            ProjWBSDataEntityHelper::postUpdateOperation(ProjWBSType::ProjectQuotation, updateTask, this.CalendarId);
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjQuotationWbsEntity, ProjPlanVersion))
        {
            ProjPlanVersion deleteTask = _dataSourceCtx.getBuffer();
            deleteTask.PathId = this.WBSId;
            ProjPlanVersion parentTask = ProjPlanVersion::findByHierarchyAndTaskId(deleteTask.HierarchyId, deleteTask.ParentHierarchyTaskId, true);
            ProjWBSDataEntityHelper::preDeleteOperation(ProjWBSType::ProjectQuotation, deleteTask);

            _dataSourceCtx.setBuffer(deleteTask);

            ret = super(_entityCtx, _dataSourceCtx);

            ProjWBSDataEntityHelper::postDeleteOperation(ProjWBSType::ProjectQuotation, deleteTask, parentTask, this.CalendarId, this.CalendarStandardWorkDayHours);
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }
        
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>ProjActivity</FormRef>
	<Label>@ProjPlan:ProjQuotationWbsTask</Label>
	<Tags>Quote</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjQuotationWbsStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectQuotationWbsTasks</PublicCollectionName>
	<PublicEntityName>ProjectQuotationWbsTask</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@ProjPlan:QuotationID</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>QuotationId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HierarchyId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>HierarchyId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>HierarchyTaskId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WBSId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PathId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Note</Name>
			<DataField>UserMemo</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Task</Name>
			<DataField>TaskName</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Predecessors</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>Predecessors</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>255</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Category</Name>
			<DataField>TaskCategory</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Effort</Name>
			<DataField>TaskEffort</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>TaskStartDate</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>TaskFinishDate</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Duration</Name>
			<DataField>TaskDuration</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NumberOfResources</Name>
			<DataField>NumberOfResources</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Role</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@HierarchicalGrid:ResourceCategory</Label>
			<Mandatory>No</Mandatory>
			<DataField>RoleId</DataField>
			<DataSource>PSASchedRole</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityStatus</Name>
			<IsObsolete>Yes</IsObsolete>
			<DataField>TaskStatus</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTaskClosed</Name>
			<DataField>IsTaskClosed</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTaskMandatory</Name>
			<DataField>IsTaskMandatory</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HierarchyTreeTableRefRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>HierarchyTreeTableRefRecId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskSiblingNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaskSiblingNumber</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ParentTaskId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ParentHierarchyTaskId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCategory</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ResourceCategory</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskPriority</Name>
			<DataField>TaskPriority</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityTaskTimeType</Name>
			<DataField>ActivityTaskTimeType</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsCategoryMandatory</Name>
			<DataField>IsCategoryMandatory</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CalendarId</Name>
			<AccessModifier>Private</AccessModifier>
			<ExtendedDataType>CalendarId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndNode</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>EndNode</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HierarchyLevel</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>HierarchyLevel</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>CalendarStandardWorkDayHours</Name>
			<AccessModifier>Private</AccessModifier>
			<ExtendedDataType>Hours</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskEffortAtComplete</Name>
			<DataField>TaskEffortAtComplete</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskCostAtComplete</Name>
			<DataField>TaskCostAtComplete</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>QuotationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WBSId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProjectCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProjectCategories</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ProjectCategoryEntity_Category</Name>
					<Field>Category</Field>
					<RelatedField>Category</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ResResourceCategoryDataEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ResResourceCategoryDataEntity_RoleId</Name>
					<Field>Role</Field>
					<RelatedField>RoleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjPlanVersion</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjPlanVersion</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PSASchedRole</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PSASchedRole</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ResourceCategory</Field>
								<JoinDataSource>ProjPlanVersion</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HierarchyLinkTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HierarchyLinkTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesQuotationTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>SalesQuotationTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RefTableId</Field>
										<JoinDataSource>HierarchyLinkTable</JoinDataSource>
										<RelatedField>TableId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>RefRecId</Field>
										<JoinDataSource>HierarchyLinkTable</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>HierarchyId</Field>
								<JoinDataSource>ProjPlanVersion</JoinDataSource>
								<RelatedField>HierarchyId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>ParentHierarchyTaskId</Name>
						<Field>ParentHierarchyTaskId</Field>
						<Status>Hidden</Status>
						<Value>&gt;0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField1</Name>
						<DataSource>ProjPlanVersion</DataSource>
						<Field>TaskSiblingNumber</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>