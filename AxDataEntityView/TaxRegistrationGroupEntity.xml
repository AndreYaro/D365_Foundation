<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TaxRegistrationGroupEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TaxRegistrationGroupEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.TaxRegistrationNumberTable)
        {
            this.TaxRegistrationNumber = TaxRegistrationNumbers_IN::find(this.TaxRegistrationNumberTable).RegistrationNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataentitydatasourcestr(TaxRegistrationGroupEntity, TaxRegistrationGroupSetup_IN))
        {
            TaxRegistrationGroupSetup_IN taxRegistrationGroupSetup = _dataSourceCtx.getBuffer();

            if (this.TaxRegistrationNumber)
            {
                taxRegistrationGroupSetup.TaxRegistrationNumberTable = TaxRegistrationNumbers_IN::findByTaxType(this.TaxRegistrationNumber, this.getTaxType(this.TaxType)).RecId;
            }
            else
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaxType</Name>
				<Source><![CDATA[
    private TaxType_IN getTaxType(TaxTypeRegistrationGroup_IN _taxType)
    {
        TaxType_IN  taxType;

        switch (_taxType)
        {
            case TaxTypeRegistrationGroup_IN::Excise:
                taxType = TaxType_IN::Excise;
                break;
            case TaxTypeRegistrationGroup_IN::SalesTax:
                taxType = TaxType_IN::SalesTax;
                break;
            case TaxTypeRegistrationGroup_IN::ServiceTax:
                taxType = TaxType_IN::ServiceTax;
                break;
            case TaxTypeRegistrationGroup_IN::VAT:
                taxType = TaxType_IN::VAT;
                break;

            default:
                break;
        }

        return taxType;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>IN</CountryRegionCodes>
	<FormRef>TaxRegistrationGroup_IN</FormRef>
	<Label>@GLS6221</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TaxRegistrationGroupStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Tax</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>TaxRegistrationGroups</PublicCollectionName>
	<PublicEntityName>TaxRegistrationGroup</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationGroup</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TaxRegistrationNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<DataField>Description</DataField>
			<DataSource>TaxRegistrationGroup_IN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUse</Name>
			<AccessModifier>Private</AccessModifier>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<DataField>InUse</DataField>
			<DataSource>TaxRegistrationGroup_IN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxRegistrationGroup</Name>
			<CountryRegionCodes>IN</CountryRegionCodes>
			<DataField>TaxRegistrationGroup</DataField>
			<DataSource>TaxRegistrationGroup_IN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxRegistrationNumberTable</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>TaxRegistrationNumberTable</DataField>
			<DataSource>TaxRegistrationGroupSetup_IN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxType</Name>
			<DataField>TaxType</DataField>
			<DataSource>TaxRegistrationGroupSetup_IN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>TaxRegistrationNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>TaxRegistrationNumber_IN</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RegistratonNumberDescription</Name>
			<DataField>Description</DataField>
			<DataSource>TaxRegistrationGroupSetup_IN</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>TaxRegistrationGroup</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TaxType</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TaxRegistrationGroup_IN</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TaxRegistrationGroup_IN</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxRegistrationGroupSetup_IN</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>TaxRegistrationGroupSetup_IN</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>TaxRegistrationGroup_IN</JoinDataSource>
								<JoinRelationName>TaxRegistrationGroup_IN</JoinRelationName>
								<RelatedField>TaxRegistrationGroupName</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>