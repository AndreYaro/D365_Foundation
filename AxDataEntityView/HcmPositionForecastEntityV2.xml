<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HcmPositionForecastEntityV2</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HcmPositionForecastEntityV2 extends Common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    //  Resolves the record for the backing data source.
    /// </summary>
    /// <param name = "_entityCtx"> The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    /// <returns>The resolved record</returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, BudgetPlanningProcess))
        {
            BudgetPlanningProcess dataSourceBuffer = _dataSourceCtx.getBuffer();

            BudgetPlanningProcess planningProcess = null;
            planningProcess.selectForUpdate(False);

            SELECT FIRSTONLY
                planningProcess
                WHERE (planningProcess.Name == dataSourceBuffer.Name
                && planningProcess.Ledger == Ledger::current());

            return planningProcess;
        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastCompensationGrid))
        {
            HcmPositionForecastScenario positionForecastScenarioDS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastScenario)).getBuffer() as HcmPositionForecastScenario;
            HcmForecastScenario forecastScenarioDS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmForecastScenario)).getBuffer() as HcmForecastScenario;

            positionForecastScenarioDS.ForecastScenario = forecastScenarioDS.RecId;

            positionForecastScenarioDS.CompensationGroupDataAreaId = CompanyInfo::find(positionForecastScenarioDS.LegalEntity).DataArea;

            EffectiveDate positionForecastScenarioActivationDate = positionForecastScenarioDS.getPositionForecastDateRangeStartDate();
            ExpirationDate positionForecastScenarioRetirementDate = positionForecastScenarioDS.getPositionForecastDateRangeEndDate();
            HRCCompRefPointSetup refPointSetupId;

            HcmPositionForecastCompensationGrid compGridDs = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastCompensationGrid)).getBuffer() as HcmPositionForecastCompensationGrid;
            HcmPositionForecastCompensationGrid compGridPositionForecastScenario = HcmPositionForecastCompensationGrid::getCompensationGridByRefPointIdCompGroupWithInDateRange(compGridDs.RefPointId,
                                                                                                                            compGridDs.RefPointSetupId,
                                                                                                                            positionForecastScenarioActivationDate,
                                                                                                                            positionForecastScenarioRetirementDate,
                                                                                                                            positionForecastScenarioDs.CompensationGroupId,
                                                                                                                            positionForecastScenarioDs.CompensationGroupDataAreaId,
                                                                                                                            compGridDs.CompensationLevel);

            return compGridPositionForecastScenario;
        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastCompensationGrid_CostElement))
        {
            HcmPositionForecastScenario positionForecastScenarioDS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastScenario)).getBuffer() as HcmPositionForecastScenario;
            HcmForecastScenario forecastScenarioDS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmForecastScenario)).getBuffer() as HcmForecastScenario;

            if (!positionForecastScenarioDS.CompensationGroupId || !positionForecastScenarioDS.PositionForecastCompensationGrid)
            {
                error("@SYP4940008");
                return super(_entityCtx, _dataSourceCtx);
            }
            positionForecastScenarioDS.ForecastScenario = forecastScenarioDS.RecId;
            positionForecastScenarioDS.CompensationGroupDataAreaId = CompanyInfo::find(positionForecastScenarioDS.LegalEntity).DataArea;

            EffectiveDate positionForecastScenarioActivationDate = positionForecastScenarioDS.getPositionForecastDateRangeStartDate();
            ExpirationDate positionForecastScenarioRetirementDate = positionForecastScenarioDS.getPositionForecastDateRangeEndDate();
            HRCCompRefPointSetup refPointSetupId;

            HcmPositionForecastCompensationGrid compGridLineDs = _dataSourceCtx.getBuffer() as HcmPositionForecastCompensationGrid;
            HcmPositionForecastCompensationGrid compGridLine = HcmPositionForecastCompensationGrid::getCompensationGridByRefPointIdCompGroupWithInDateRange(compGridLineDs.RefPointId,
                                                                                                        compGridLineDs.RefPointSetupId,
                                                                                                        positionForecastScenarioActivationDate,
                                                                                                        positionForecastScenarioRetirementDate,
                                                                                                        positionForecastScenarioDs.CompensationGroupId,
                                                                                                        positionForecastScenarioDs.CompensationGroupDataAreaId, 
                                                                                                        compGridLineDs.CompensationLevel);

            return compGridLine;
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts the backing entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx"> The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    /// <returns>true, if the records gets inserted; otherwise, false</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastScenario))
        {
            HcmPositionForecastScenario positionForecastScenarioDS = _dataSourceCtx.getBuffer() as HcmPositionForecastScenario;

            HcmForecastScenario forecastScenarioDS = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmForecastScenario)).getBuffer() as HcmForecastScenario;
            positionForecastScenarioDS.LegalEntity = forecastScenarioDS.LegalEntity;
        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastDetailV2))
        {
            HcmPositionForecastDetailV2 hcmPositionForecastDetailDS = _dataSourceCtx.getBuffer() as HcmPositionForecastDetailV2;
            
            HcmPositionForecast positionForecast = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecast)).getBuffer() as HcmPositionForecast;

            hcmPositionForecastDetailDS.PositionForecast = positionForecast.RecID;
            
            HcmPositionForecastDetail detail = HcmPositionForecastDetail::findByPositionForecast(positionForecast.RecID, true);
            
            if (!detail)
            {
                this.createPositionForecastDetail(hcmPositionForecastDetailDS);
            }
            else
            {
                this.updateHcmPositionForecastDetail(detail, hcmPositionForecastDetailDS);
            }
        }

        ret = super(_entityCtx, _dataSourceCtx);
        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastBudgetAcctLine))
        {
            HcmPositionForecastBudgetAcctLine positionForecastBudgetAcctLine = _dataSourceCtx.getBuffer() as HcmPositionForecastBudgetAcctLine;
            HcmPositionForecastScenario positionForecastScenario = HcmPositionForecastScenario::find(positionForecastBudgetAcctLine.PositionForecastScenario);

            HcmPositionForecastCalcProcessLauncher positionForecastLauncher = HcmPositionForecastCalcProcessLauncher::newForecastCalculateSinglePosition(positionForecastScenario);
            positionForecastLauncher.runPositionForecstCalculationProcess();
        }

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcMPositionForecast))
        {
            if (HcMPositionForecastEntityV2HierarchyRecordInsertFlight::instance().isEnabled())
            {
                HcMPositionForecast hcMPositionForecast = _dataSourceCtx.getBuffer() as HcMPositionForecast;

                if (hcMPositionForecast)
                {
                    this.createPositionForecastHierarchy(hcMPositionForecast);
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPositionForecastDetail</Name>
				<Source><![CDATA[
    private void createPositionForecastDetail(HcmPositionForecastDetailV2 _hcmPositionForecastDetailV2)
    {
        HcmPositionForecastDetail  hcmPositionForecastDetail;

        hcmPositionForecastDetail.PositionForecast = _hcmPositionForecastDetailV2.PositionForecast;
        hcmPositionForecastDetail.CompLocation = _hcmPositionForecastDetailV2.CompLocation;
        hcmPositionForecastDetail.Department = _hcmPositionForecastDetailV2.Department;
        hcmPositionForecastDetail.Description = _hcmPositionForecastDetailV2.Description;
        hcmPositionForecastDetail.PositionType = _hcmPositionForecastDetailV2.PositionType;
        hcmPositionForecastDetail.Title = _hcmPositionForecastDetailV2.Title;
        hcmPositionForecastDetail.Job = _hcmPositionForecastDetailV2.Job;
            
        if (hcmPositionForecastDetail.validateWrite())
        {
            ttsbegin;
            hcmPositionForecastDetail.write();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>createPositionForecastHierarchy</Name>
				<Source><![CDATA[
    private void createPositionForecastHierarchy(HcMPositionForecast _hcMPositionForecast)
    {
        HcmPositionForecastHierarchy hcmPositionForecastHierarchy;
        HcmPositionHierarchy positionHierarchy = HcmPositionHierarchy::findByPositionAndHierarchyType(_hcMPositionForecast.Position, HcmPositionHierarchyType::findLineType().RecId);

        hcmPositionForecastHierarchy.clear();
        hcmPositionForecastHierarchy.PositionForecast = _hcMPositionForecast.RecId;
        hcmPositionForecastHierarchy.PositionHierarchyType = HcmPositionHierarchyType::lineHierarchyType();

        if (positionHierarchy.RecId)
        {
            hcmPositionForecastHierarchy.ParentPosition = positionHierarchy.ParentPosition;
        }

        if (hcmPositionForecastHierarchy.validateWrite())
        {
            ttsbegin;
            hcmPositionForecastHierarchy.write();
            ttscommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateHcmPositionForecastDetail</Name>
				<Source><![CDATA[
    private boolean updateHcmPositionForecastDetail(HcmPositionForecastDetail _positionForecastDetail, HcmPositionForecastDetailV2 _positionForecastDetailV2)
    {
        	boolean attemptUpdate = false;

            if (_positionForecastDetail.Description != _positionForecastDetailV2.Description )
            {
                _positionForecastDetail.Description = _positionForecastDetailV2.Description;
                attemptUpdate = true;
            }

            if (_positionForecastDetail.Title != _positionForecastDetailV2.title )
            {
                _positionForecastDetail.Title = _positionForecastDetailV2.title;
                attemptUpdate = true;
            }

            if (_positionForecastDetail.Department != _positionForecastDetailV2.Department)
            {
                _positionForecastDetail.Department = _positionForecastDetailV2.Department;
                attemptUpdate = true;
            }

            if (_positionForecastDetail.CompLocation != _positionForecastDetailV2.CompLocation)
            {
                _positionForecastDetail.CompLocation = _positionForecastDetailV2.CompLocation;
                attemptUpdate = true;
            }

            if (_positionForecastDetail.Job != _positionForecastDetailV2.Job)
            {
                _positionForecastDetail.Job = _positionForecastDetailV2.Job;
                attemptUpdate = true;
            }

            if (_positionForecastDetail.PositionType != _positionForecastDetailV2.PositionType)
            {
                _positionForecastDetail.PositionType = _positionForecastDetailV2.PositionType;
                attemptUpdate = true;
            }

            if (attemptUpdate)
            {
                if (_positionForecastDetail.validateWrite())
                {
                    ttsbegin;
                    _positionForecastDetail.write();
                    ttscommit;
                }
                else
                {
                    attemptUpdate = false;
                }
            }

        return attemptUpdate;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the backing entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx">The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    /// <returns>true, if the records gets inserted; otherwise, false</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        ret = super(_entityCtx, _dataSourceCtx);
        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastBudgetAcctLine))
        {
            HcmPositionForecastBudgetAcctLine positionForecastBudgetAcctLine = _dataSourceCtx.getBuffer() as HcmPositionForecastBudgetAcctLine;
            HcmPositionForecastScenario positionForecastScenario = HcmPositionForecastScenario::find(positionForecastBudgetAcctLine.PositionForecastScenario);

            HcmPositionForecastCalcProcessLauncher positionForecastLauncher = HcmPositionForecastCalcProcessLauncher::newForecastCalculateSinglePosition(positionForecastScenario);
            positionForecastLauncher.runPositionForecstCalculationProcess();
            positionForecastBudgetAcctLine.reread();
        }
        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastDetailV2))
        {
            HcmPositionForecastDetailV2 hcmPositionForecastDetailDS = _dataSourceCtx.getBuffer() as HcmPositionForecastDetailV2;
            
            HcmPositionForecast positionForecast = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecast)).getBuffer() as HcmPositionForecast;
            
            HcmPositionForecastDetail detail = HcmPositionForecastDetail::findByPositionForecast(positionForecast.RecID, true);

            if (detail)
            {
                this.updateHcmPositionForecastDetail(detail, hcmPositionForecastDetailDS);
            }

        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the backing entity to the datasource.
    /// Checks for certain changes and executes the necessary defaulting logic.
    /// </summary>
    /// <param name = "_entityCtx">The context for the data entity.</param>
    /// <param name = "_dataSourceCtx">The context for the data source.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(HcmPositionForecastEntityV2, HcmPositionForecastScenario))
        {
            HcmPositionForecastScenario hcmPositionForecastScenario = _dataSourceCtx.getBuffer();

            //if the Compensation Group has changed, run its defaulting logic.
            if (hcmPositionForecastScenario.isFieldModified(fieldNum(HcmPositionForecastScenario, CompensationGroupId)))
            {
                CompanyInfo legalEntity = CompanyInfo::find(false, hcmPositionForecastScenario.LegalEntity);
                HcmPositionForecastCompensationGroup positionForecastCompensationGroup = HcmPositionForecastCompensationGroup::findByCompensationGrpIdDataAreaId(hcmPositionForecastScenario.CompensationGroupId, legalEntity.DataArea);

                if (HcmPositionForecastFormUtility::handleCompensationGroupModified(hcmPositionForecastScenario.RecId,
                                                                                positionForecastCompensationGroup.CompensationGroupId,
                                                                                legalEntity.DataArea))
                {
                    if (positionForecastCompensationGroup.RecId != 0)
                    {
                        hcmPositionForecastScenario.CompensationGroupDataAreaId = positionForecastCompensationGroup.DataAreaId;
                        hcmPositionForecastScenario.modifiedField(fieldNum(HcmPositionForecastScenario, CompensationGroupDataAreaId));
                    }
                    hcmPositionForecastScenario.modifiedField(fieldNum(HcmPositionForecastScenario, CompensationGroupId));
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetPlanning</ConfigurationKey>
	<Label>@Budget:HCMPositionForecastEntityV2Label</Label>
	<Tags>Positions</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>HcmPositionForecastStagingV2</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>HRM</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>PositionForecastsV2</PublicCollectionName>
	<PublicEntityName>PositionForecastV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AnnualAmount</Name>
			<DataField>AmountCur</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetAmount</Name>
			<DataField>BudgetAmountCur</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetCostElement</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetPurposeTypeDetail</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineStartDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>EffectiveDate</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineEndDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ExpirationDate</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>isPercentageBased</Name>
			<DataField>isPercentageBased</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineMainAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
			<DimensionLegalEntityContextField>CostElementDataAreaId</DimensionLegalEntityContextField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Percent</Name>
			<DataField>PercentageOfDefaultBasisAmount</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementSource</Name>
			<DataField>CostLineSource</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineCompensationGrid</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PositionForecastCompensationGrid</DataField>
			<DataSource>HcmPositionForecastBudgetAcctLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetPurposeType</DataField>
			<DataSource>HcmBudgetPurposeTypeDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementEffectiveDate</Name>
			<DataField>EffectiveDate</DataField>
			<DataSource>HcmBudgetPurposeTypeDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementExpirationDate</Name>
			<DataField>ExpirationDate</DataField>
			<DataSource>HcmBudgetPurposeTypeDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLegalEntity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LegalEntity</DataField>
			<DataSource>HcmBudgetPurposeTypeDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementName</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Purpose</DataField>
			<DataSource>HcmBudgetPurposeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementDataAreaId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo_CostElement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionActivationDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ActivationDateTime</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AnniversaryDate</Name>
			<DataField>AnniversaryDate</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionCompensationGroupDataAreaId</Name>
			<DataField>CompensationGroupDataAreaId</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionCompensationGroupId</Name>
			<DataField>CompensationGroupId</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastScenario</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ForecastScenario</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionFullTimeEquivalency</Name>
			<DataField>FullTimeEquivalency</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionPositionLegalEntity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LegalEntity</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPosition</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PositionForecast</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionCompensationLevelRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PositionForecastCompensationGrid</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionRetirementDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>RetirementDateTime</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssignedWorker</Name>
			<DataField>WorkerName</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetPlanningProcess</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetPlanningProcess</DataField>
			<DataSource>HcmForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetPlanScenario</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BudgetPlanScenario</DataField>
			<DataSource>HcmForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetPlanScenarioName</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Position</DataField>
			<DataSource>HcmPositionForecast</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PositionId</DataField>
			<DataSource>HcmPosition</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionLegalEnitytName</Name>
			<Mandatory>No</Mandatory>
			<DataField>DataArea</DataField>
			<DataSource>ForecastPositionCompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineReferencePointId</Name>
			<Mandatory>No</Mandatory>
			<DataField>RefPointId</DataField>
			<DataSource>HcmPositionForecastCompensationGrid_CostElement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineReferenceSetupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>RefPointSetupId</DataField>
			<DataSource>HcmPositionForecastCompensationGrid_CostElement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostElementLineMainAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>MainAccountDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionCompensationGrid</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PositionForecastCompensationGrid</DataField>
			<DataSource>HcmPositionForecastScenario</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetPlanningProcessName</Name>
			<DataField>Name</DataField>
			<DataSource>BudgetPlanningProcess</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionRefPointId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>RefPointId</DataField>
			<DataSource>HcmPositionForecastCompensationGrid</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ForecastPositionRefPointSetupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>RefPointSetupId</DataField>
			<DataSource>HcmPositionForecastCompensationGrid</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Department</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Department</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Job</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Job</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PositionType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PositionType</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Title</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Title</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CompLocation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CompLocation</DataField>
			<DataSource>HcmPositionForecastDetailV2</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JobId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>Yes</Mandatory>
			<DataField>JobId</DataField>
			<DataSource>HcmJob</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DepartmentNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<Label>@SYS324440</Label>
			<Mandatory>No</Mandatory>
			<DataField>OMOperatingUnitNumber</DataField>
			<DataSource>OMOperatingUnit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CompensationRegionId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Label>@SYS302183</Label>
			<Mandatory>No</Mandatory>
			<DataField>CompLocationId</DataField>
			<DataSource>HcmCompLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PositionTypeId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TypeId</DataField>
			<DataSource>HcmPositionType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TitleId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TitleId</DataField>
			<DataSource>HcmTitle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CompensationLevelId</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>CompensationLevelId</DataField>
			<DataSource>HcmCompensationLevel</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ForecastPositionId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetPlanningProcessName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BudgetPlanScenarioName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementDataAreaId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementEffectiveDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementExpirationDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementLineStartDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CostElementLineEndDate</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>MainAccountCombinations</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>MainAccount</Name>
					<Field>CostElementLineMainAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>HcmPositionForecastBudgetAcctLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>HcmPositionForecastBudgetAcctLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmBudgetPurposeTypeDetail</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmBudgetPurposeTypeDetail</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmBudgetPurposeType</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmBudgetPurposeType</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmBudgetPurposeType</Name>
										<JoinRelationName>HcmBudgetPurposeType</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CompanyInfo_CostElement</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>CompanyInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>CompanyInfo1</Name>
										<JoinRelationName>CompanyInfo</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmBudgetPurposeTypeDetail</Name>
								<JoinRelationName>HcmBudgetPurposeTypeDetail</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmPositionForecastScenario</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HcmPositionForecastScenario</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmForecastScenario</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>HcmForecastScenario</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>BudgetPlanScenario</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>BudgetPlanScenario</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>BudgetPlanScenario</Name>
												<JoinRelationName>BudgetPlanScenario</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>BudgetPlanningProcess</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>BudgetPlanningProcess</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>BudgetPlanningProcess</Name>
												<JoinRelationName>BudgetPlanningProcess</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmForecastScenario</Name>
										<JoinRelationName>HcmForecastScenario</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmPositionForecast</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>HcmPositionForecast</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmPosition</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmPosition</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>HcmPosition</Name>
												<JoinRelationName>HcmPosition</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmPositionForecast</Name>
										<JoinRelationName>HcmPositionForecast</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ForecastPositionCompanyInfo</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>CompanyInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>CompanyInfo2</Name>
										<JoinRelationName>CompanyInfo</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmPositionForecastCompensationGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmPositionForecastCompensationGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmPositionForecastCompensationGroup</Name>
										<JoinRelationName>HcmPositionForecastCompensationGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmPositionForecastCompensationGrid</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmPositionForecastCompensationGrid</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmPositionForecastCompGroupRefPoint</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmPositionForecastCompGroupRefPoint</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>HcmPositionForecastCompGroupRefPoint</Name>
												<JoinRelationName>HcmPositionForecastCompGroupRefPoint</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmCompensationLevel</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmCompensationLevel</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>HcmCompensationLevel</Name>
												<JoinRelationName>HcmCompensationLevel</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmPositionForecastCompensationGrid</Name>
										<JoinRelationName>HcmPositionForecastCompensationGrid</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmPositionForecastDetailV2</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>HcmPositionForecastDetailV2</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmJob</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmJob</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>HcmJob</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>OMOperatingUnit</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>OMOperatingUnit</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>OMOperatingUnit</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmCompLocation</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmCompLocation</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>HcmCompLocation</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmPositionType</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmPositionType</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>HcmPositionType</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>HcmTitle</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>HcmTitle</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>HcmTitle</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>PositionForecastScenario</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmPositionForecastScenario</Name>
								<JoinRelationName>HcmPositionForecastScenario</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmPositionForecastCompensationGrid_CostElement</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmPositionForecastCompensationGrid</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmPositionForecastCompGroupRefPoint_CostElement</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmPositionForecastCompGroupRefPoint</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmPositionForecastCompGroupRefPoint</Name>
										<JoinRelationName>HcmPositionForecastCompGroupRefPoint</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmCompensationLevel_CostElement</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmCompensationLevel</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>HcmCompensationLevel</Name>
										<JoinRelationName>HcmCompensationLevel</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmPositionForecastCompensationGrid</Name>
								<JoinRelationName>HcmPositionForecastCompensationGrid</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>MainAccountDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>MainAccountDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>HcmPositionForecastBudgetAcctLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>