<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AdvancedLedgerEntryEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AdvancedLedgerEntryEntity extends common
{ 
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mapping the advanced ledger entry header posting definition to advanced ledger entry line posting definition.
    /// </summary>
    public void defaultRow()
    {
        super();

        if (this.LinePostingDefinition == '' && this.HeaderPostingDefinition != '')
        {
            this.LinePostingDefinition = this.HeaderPostingDefinition;
        }

        if (this.Debit)
        {
            this.Debit = CurrencyExchangeHelper::amount(this.Debit);
        }

        if (this.Credit)
        {
            this.Credit = CurrencyExchangeHelper::amount(this.Credit);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts or updates the backing datasources.
    /// </summary>
    /// <param name = "_entityCtx"></param>
    /// <param name = "_dataSourceCtx"></param>
    /// <returns>true, if the insert or update was successful; otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataentitydatasourcestr(AdvancedLedgerEntryEntity, AdvancedLedgerEntryHeader))
        {
            if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
            {
                AdvancedLedgerEntryHeader advancedLedgerEntryHeader = _dataSourceCtx.getBuffer();

                if (this.isFieldSet(fieldnum(AdvancedLedgerEntryEntity, LinePostingDefinition)))
                {
                    advancedLedgerEntryHeader.JournalizingDefinition = JournalizingDefinition::find(this.LinePostingDefinition).RecId;
                }

                if (AdvancedLedgerEntryHeader::findByTransactionNumber(this.HeaderTransactionNumber))
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    _dataSourceCtx.setDataSaved(true);

                    DataEntityDataSourceRuntimeContext childDataSourceCtx = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(AdvancedLedgerEntryEntity, FiscalCalendarPeriod));
                    childDataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    childDataSourceCtx.setDataSaved(true);

                    childDataSourceCtx = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(AdvancedLedgerEntryEntity, JournalizingDefinitionHeader));
                    childDataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    childDataSourceCtx.setDataSaved(true);
                }
                else
                {
                    this.setEntryNumber(advancedLedgerEntryHeader);
                }
            }
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the records before they are written to the database.
    /// </summary>
    /// <returns>true if the record is valid; otherwise false</returns>
    public boolean validateWrite()
    {
        boolean isValid;
    
        isValid = super();

        isValid = isValid && this.validateALENotPosted();
    
        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateALENotPosted</Name>
				<Source><![CDATA[
    private boolean validateALENotPosted()
    {
        AdvancedLedgerEntryHeader advancedLedgerEntryHeader;
        boolean isValid = true;

        if (this.HeaderTransactionNumber != '')
        {
            advancedLedgerEntryHeader = AdvancedLedgerEntryHeader::findByTransactionNumber(this.HeaderTransactionNumber);
        
            if (advancedLedgerEntryHeader && advancedLedgerEntryHeader.TransactionStatus == AdvancedLedgerEntryTransactionStatus::Posted)
            {
                isValid = checkFailed(strFmt("@PublicSector:ALE_PostedDocumentError", this.HeaderTransactionNumber));
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEntryNumber</Name>
				<Source><![CDATA[
    /// <summary>
    /// Replaces a temporary entry number with an entry number allocated from number sequences.
    /// </summary>
    /// <param name = "_header">
    /// The <c>AdvancedLedgerEntryHeader</c> record.
    /// </param>
    public void setEntryNumber(AdvancedLedgerEntryHeader _header)
    {
        // Generate an entry number for the provided value when a continuous number sequence value does not exist.
        AdvancedLedgerEntryEntityNumSeqHandler::enableNumberSequenceControl
            (this,
            fieldNum(AdvancedLedgerEntryEntity, HeaderTransactionNumber),
            AdvancedLedgerEntryHeader::numRefAdvancedLedgerEntryId(),
            _header);

        // Call initValue to generate the number sequence value.
        this.initValue();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>AdvancedLedgerEntry</ConfigurationKey>
	<FormRef>AdvancedLedgerEntry</FormRef>
	<Label>@SPS1213</Label>
	<Tags>Transactions</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>AdvancedLedgerEntryStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>GeneralLedger</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>AdvancedLedgerEntries</PublicCollectionName>
	<PublicEntityName>AdvancedLedgerEntry</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineCurrency</Name>
			<DataField>TransactionCurrency</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AdvancedLedgerEntryHeader</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Credit</Name>
			<DataField>AmountCurCredit</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Debit</Name>
			<DataField>AmountCurDebit</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostPrice</Name>
			<DataField>CostPrice</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineJournalizingDefinitionId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>JournalizingDefinition</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNumber</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectActivityNumber</Name>
			<DataField>ProjActivityNumber</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategory</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectFundingSourceId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjFundingSource</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectID</Name>
			<DataField>ProjId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLineProperty</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesCurrency</Name>
			<DataField>ProjSalesCurrency</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectSalesTaxGroup</Name>
			<DataField>ProjTaxGroupId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectItemSalesTaxGroup</Name>
			<DataField>ProjTaxItemGroupId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTransactionID</Name>
			<DataField>ProjTransId</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Resource</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCategoryId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ResourceCategory</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPrice</Name>
			<DataField>SalesPrice</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionTextLine</Name>
			<DataField>TransactionText</DataField>
			<DataSource>AdvancedLedgerEntryLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderAccountingDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>AccountingDate</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalPeriodId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FiscalCalendarPeriod</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderJournalizingDefinitionId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>JournalizingDefinition</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReasonId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ReasonTableRef</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReversingDate</Name>
			<DataField>ReverseDate</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReversingEntry</Name>
			<DataField>ReverseEntry</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderCurrency</Name>
			<Mandatory>No</Mandatory>
			<DataField>TransactionCurrency</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderTransactionNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>TransactionNumber</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderTransactionText</Name>
			<Mandatory>No</Mandatory>
			<DataField>TransactionText</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalCalendarYearId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>FiscalCalendarYear</DataField>
			<DataSource>FiscalCalendarPeriod</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalCalendarPeriodName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>FiscalCalendarPeriod</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalCalendarId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>FiscalCalendar</DataField>
			<DataSource>FiscalCalendarYear</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalCalendarYearName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>FiscalCalendarYear</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FiscalCalendar</Name>
			<Mandatory>No</Mandatory>
			<DataField>CalendarId</DataField>
			<DataSource>FiscalCalendar</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderPostingDefinition</Name>
			<Mandatory>No</Mandatory>
			<DataField>JournalizingDefinitionCode</DataField>
			<DataSource>JournalizingDefinitionHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LinePostingDefinition</Name>
			<Mandatory>No</Mandatory>
			<DataField>JournalizingDefinitionCode</DataField>
			<DataSource>JournalizingDefinitionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjFundingSourceContract</Name>
			<Mandatory>No</Mandatory>
			<DataField>ContractId</DataField>
			<DataSource>ProjFundingSource</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjFundingSource</Name>
			<Mandatory>No</Mandatory>
			<DataField>FundingSourceId</DataField>
			<DataSource>ProjFundingSource</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>LedgerAccountDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderTransactionStatus</Name>
			<DataField>TransactionStatus</DataField>
			<DataSource>AdvancedLedgerEntryHeader</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>HeaderTransactionNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerAccountCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>LedgerAccount</Name>
					<Field>LedgerAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>AdvancedLedgerEntryLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>AdvancedLedgerEntryLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AdvancedLedgerEntryHeader</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AdvancedLedgerEntryHeader</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>FiscalCalendarPeriod</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>FiscalCalendarPeriod</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>FiscalCalendarYear</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>FiscalCalendarYear</Table>
										<DataSources>
											<AxQuerySimpleEmbeddedDataSource>
												<Name>FiscalCalendar</Name>
												<DynamicFields>Yes</DynamicFields>
												<IsReadOnly>Yes</IsReadOnly>
												<Table>FiscalCalendar</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
												<JoinMode>OuterJoin</JoinMode>
												<UseRelations>Yes</UseRelations>
												<Relations>
													<AxQuerySimpleDataSourceRelation>
														<Name>FiscalCalendar</Name>
														<JoinRelationName>FiscalCalendar</JoinRelationName>
													</AxQuerySimpleDataSourceRelation>
												</Relations>
											</AxQuerySimpleEmbeddedDataSource>
										</DataSources>
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<UseRelations>Yes</UseRelations>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>FiscalCalendarYear</Name>
												<JoinRelationName>FiscalCalendarYear</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>FiscalCalendarPeriod</Name>
										<JoinRelationName>FiscalCalendarPeriod</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>JournalizingDefinitionHeader</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>JournalizingDefinition</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>JournalizingDefinition1</Name>
										<JoinRelationName>JournalizingDefinition</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>AdvancedLedgerEntryHeader</Name>
								<JoinRelationName>AdvancedLedgerEntryHeader</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>JournalizingDefinitionLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>JournalizingDefinition</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>JournalizingDefinition</Name>
								<JoinRelationName>JournalizingDefinition</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjFundingSource</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjFundingSource</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ProjFundingSource</Name>
								<JoinRelationName>ProjFundingSource</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerAccountDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>LedgerAccountDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>AdvancedLedgerEntryLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>