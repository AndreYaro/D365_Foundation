<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>MCRCouponCustomerEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class MCRCouponCustomerEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>customerNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerNumberComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(MCRCouponCustomerEntity),
            dataEntityDataSourceStr(MCRCouponCustomerEntity, MCRCouponCustomer),
            fieldStr(MCRCouponCustomer, CustomerCode),
            TableGroupAll::Table,
            fieldStr(MCRCouponCustomer, CustVendRel),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerGroupComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(MCRCouponCustomerEntity),
            dataEntityDataSourceStr(MCRCouponCustomerEntity, MCRCouponCustomer),
            fieldStr(MCRCouponCustomer, CustomerCode),
            TableGroupAll::GroupId,
            fieldStr(MCRCouponCustomer, CustVendRel),
            '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCustomerCode</Name>
				<Source><![CDATA[
    private void defaultCustomerCode()
    {
        if (this.CustomerAccountNumber)
        {
            this.CustomerCode = TableGroupAll::Table;
        }
        else if (this.CustomerGroupId)
        {
            this.CustomerCode = TableGroupAll::GroupId;
        }
        else
        {
            this.CustomerCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCustVendRel</Name>
				<Source><![CDATA[
    private void defaultCustVendRel()
    {
        if (this.CustomerAccountNumber)
        {
            this.CustVendRel = this.CustomerAccountNumber;
        }
        else if (this.CustomerGroupId)
        {
            this.CustVendRel = this.CustomerGroupId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(MCRCouponCustomerEntity, CustomerCode): this.defaultCustomerCode(); break;
            case fieldNum(MCRCouponCustomerEntity, CustVendRel): this.defaultCustVendRel(); break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(MCRCouponCustomerEntity, CustomerCode), [fieldNum(MCRCouponCustomerEntity, CustomerAccountNumber)]],
            [fieldNum(MCRCouponCustomerEntity, CustVendRel), [fieldNum(MCRCouponCustomerEntity, CustomerAccountNumber)]],
            [fieldNum(MCRCouponCustomerEntity, CustomerCode), [fieldNum(MCRCouponCustomerEntity, CustomerGroupId)]],
            [fieldNum(MCRCouponCustomerEntity, CustVendRel), [fieldNum(MCRCouponCustomerEntity, CustomerGroupId)]]
            ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret && this.CustomerAccountNumber && this.CustomerGroupId)
        {
            ret = checkFailed("@SCM:CommissionCalculationEntityCustomerAndGroupSpecifiedError");
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>MCRCoupon</ConfigurationKey>
	<FormRef>MCRCouponCustomer</FormRef>
	<Label>@SYS23010</Label>
	<Tags>Coupon</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>MCRCouponCustomerStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CallCenterCustomerCoupons</PublicCollectionName>
	<PublicEntityName>CallCenterCustomerCoupon</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustomerCode</DataField>
			<DataSource>MCRCouponCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustVendRel</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustVendRel</DataField>
			<DataSource>MCRCouponCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CouponId</Name>
			<DataField>MCRCouponId</DataField>
			<DataSource>MCRCouponCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsCouponVoided</Name>
			<DataField>MCRCouponVoided</DataField>
			<DataSource>MCRCouponCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS7149</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS11904</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CouponId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>MCRCouponCustomer</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>MCRCouponCustomer</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>