<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseWorkTemplateWorkBreakEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWarehouseWorkTemplateWorkBreakEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the form referenced by the FormRef based on the selected record in the staging table.
    /// </summary>
    /// <param name="_menuItemName">
    /// Name of the menu item to open.
    /// </param>
    /// <param name="_buffer">
    /// Staging record selected.
    /// </param>
    /// <param name="_caller">
    /// Caller object.
    /// </param>
    /// <param name="_dataArea">
    /// The legal entity Id of the caller context.
    /// </param>
    public static void jumpRefMethod(MenuItemName _menuItemName, WHSWarehouseWorkTemplateWorkBreakStaging _buffer, object _caller, DataAreaId _dataArea)
    {
        changeCompany(_dataArea)
        {
            WHSWorkTemplateTable workTemplateTable = WHSWorkTemplateTable::find(_buffer.WarehouseWorkTemplateId, _buffer.WarehouseWorkTemplateWorkOrderType);

            Args args = new Args();

            args.record(workTemplateTable);
            args.caller(_caller);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSWarehouseWorkTemplateWorkBreakEntity, WHSWorkTemplateTable))
        {
            ret = WHSWorkTemplateTable::find(this.WarehouseWorkTemplateId, this.WarehouseWorkTemplateWorkOrderType);
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();
        this.WorkTemplateWorkBreakTableName         = tableId2Name(this.WorkTemplateWorkBreakTableId);
        this.WorkTemplateWorkBreakTableFieldName    = fieldId2Name(this.WorkTemplateWorkBreakTableId, this.WorkTemplateWorkBreakTableFieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableFieldId),
                [fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableFieldName)]],
            [fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableId),
                [fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableName)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);
        switch (_fieldId)
        {
            case fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableFieldId):
                this.WorkTemplateWorkBreakTableFieldId = fieldName2Id(tableName2Id(this.WorkTemplateWorkBreakTableName), this.WorkTemplateWorkBreakTableFieldName);
                break;
            case fieldNum(WHSWarehouseWorkTemplateWorkBreakEntity, WorkTemplateWorkBreakTableId):
                this.WorkTemplateWorkBreakTableId = tableName2Id(this.WorkTemplateWorkBreakTableName);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:WHSWarehouseWorkTemplateWorkBreakEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WHSWorkTemplateGroup</FormRef>
	<Label>@WAX:WHSWarehouseWorkTemplateWorkBreakEntityLabel</Label>
	<Tags>Warehouse work</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSWarehouseWorkTemplateWorkBreakStaging</DataManagementStagingTable>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkTemplateWorkBreakTableFieldId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>GroupFieldId</DataField>
			<DataSource>WHSWorkTemplateGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>WorkTemplateWorkBreakTableFieldName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkTemplateWorkBreakTableId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>GroupTableId</DataField>
			<DataSource>WHSWorkTemplateGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>WorkTemplateWorkBreakTableName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<ExtendedDataType>TableName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkBreakLineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>WHSWorkTemplateGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWorkTemplateRecordId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RefRecId</DataField>
			<DataSource>WHSWorkTemplateGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsFieldBreakingWork</Name>
			<DataField>WorkGroupBy</DataField>
			<DataSource>WHSWorkTemplateGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWorkTemplateId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>WorkTemplateCode</DataField>
			<DataSource>WHSWorkTemplateTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWorkTemplateWorkOrderType</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>WorkTransType</DataField>
			<DataSource>WHSWorkTemplateTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseWorkTemplateId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseWorkTemplateWorkOrderType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkBreakLineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseWorkTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseWorkTemplateEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseWorkTemplate</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>WarehouseWorkTemplateWorkBreaks</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseWorkTemplateEntity_TemplateId</Name>
					<Field>WarehouseWorkTemplateId</Field>
					<RelatedField>TemplateId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseWorkTemplateEntity_WorkOrderType</Name>
					<Field>WarehouseWorkTemplateWorkOrderType</Field>
					<RelatedField>WorkOrderType</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>TemplateIdKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSWorkTemplateGroup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSWorkTemplateGroup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSWorkTemplateTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>WHSWorkTemplateTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WHSWorkTemplateTable</Name>
								<JoinDataSource>WHSWorkTemplateGroup</JoinDataSource>
								<JoinRelationName>WHSWorkTemplateTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>