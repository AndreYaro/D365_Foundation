<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectGroupV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProjectGroupV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjProjectGroupV2Entity, ProjLinePropertySetup))
        {
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
        }

        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjProjectGroupV2Entity, ProjGroup))
        {
            ProjGroup projectGroup = _dataSourceCtx.getBuffer();
            if (this.ProjectLinePropertyId)
            {
                projectGroup.projLinePropertyId(true, projectGroup, this.ProjectLinePropertyId);
            }
            projectGroup.ProjType = ProjType::None;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId curDataAreaId = curExt();
        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled(curDataAreaId))
        {
            throw error(strFmt("@ProjectOperations:ProjMultipleContractLinesEntityFeatureValidation",
                                  curDataAreaId));
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId curDataAreaId = curExt();
        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled(curDataAreaId))
        {
            throw error(strFmt("@ProjectOperations:ProjMultipleContractLinesEntityFeatureValidation",
                                  curDataAreaId));
        }
    
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataAreaId curDataAreaId = curExt();
        if (!ProjMultipleContractLinesForProjectFeatureHelper::isFeatureEnabled(curDataAreaId))
        {
            throw error(strFmt("@ProjectOperations:ProjMultipleContractLinesEntityFeatureValidation",
                                  curDataAreaId));
        }
    
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;
        
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjProjectGroupV2Entity, ProjLinePropertySetup):
                ret = ProjLinePropertySetup::find(TableGroupAll::GroupId, this.GroupId, TableGroupAll::All, '');
                break;
            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;

    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjProjectGroupV2EntityDevDoc</DeveloperDocumentation>
	<FormRef>ProjGroup</FormRef>
	<Label>@Proj:ProjProjectGroupsV2EntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Tags>Project groups</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjProjectGroupV2Staging</DataManagementStagingTable>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>GroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WillCostBeVerifiedAgainstRemainingForecast</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LinePropertySearchPriorityType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LedgerPostingSearchPriorityType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectLinePropertyId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCostBeVerifiedAgainstRemainingForecast</Name>
			<DataField>CheckBudget</DataField>
			<DataSource>ProjGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupName</Name>
			<DataField>Name</DataField>
			<DataSource>ProjGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LinePropertySearchPriorityType</Name>
			<Label>@Proj:LinePropertySearchPriority</Label>
			<DataField>ProjLinePropertySearch</DataField>
			<DataSource>ProjGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerPostingSearchPriorityType</Name>
			<Label>@Proj:LedgerPostingSearchPriority</Label>
			<DataField>LedgerPosting</DataField>
			<DataSource>ProjGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GroupId</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>ProjGroupId</DataField>
			<DataSource>ProjGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LinePropertyId</DataField>
			<DataSource>ProjLinePropertySetup</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>GroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjGroup</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjGroup</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjLinePropertySetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjLinePropertySetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ProjCode</Name>
								<Field>ProjCode</Field>
								<Status>Hidden</Status>
								<Value>GroupId</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjGroupId</Field>
								<JoinDataSource>ProjGroup</JoinDataSource>
								<RelatedField>ProjRelation</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>