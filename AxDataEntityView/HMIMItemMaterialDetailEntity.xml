<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>HMIMItemMaterialDetailEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class HMIMItemMaterialDetailEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts data from the entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx">The <c>DataEntityRuntimeContext</c> instance.</param>
    /// <param name = "_dataSourceCtx">The <c>DataEntityDataSourceRuntimeContext</c> instance.</param>
    /// <returns>true if the record was inserted successfully, false if it was not.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() != dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMItemMaterial))
        {
            this.saveOtherTables(_dataSourceCtx);
        }
    
        ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMItemMaterial))
        {
            HMIMItemMaterial itemMaterial = _dataSourceCtx.getBuffer() as HMIMItemMaterial;
            this.generateShippingPrintTxtLanguage(itemMaterial);
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates data from the entity to the data source.
    /// </summary>
    /// <param name = "_entityCtx">The <c>DataEntityRuntimeContext</c> instance.</param>
    /// <param name = "_dataSourceCtx">The <c>DataEntityDataSourceRuntimeContext</c> instance.</param>
    /// <returns>true if the record was updated successfully, false if it was not.</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() != dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMItemMaterial))
        {
            this.saveOtherTables(_dataSourceCtx);
        }
    
        ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMItemMaterial))
        {
            HMIMItemMaterial itemMaterial = _dataSourceCtx.getBuffer() as HMIMItemMaterial;
            this.generateShippingPrintTxtLanguage(itemMaterial);
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDivisionClass</Name>
				<Source><![CDATA[
    private boolean validateDivisionClass()
    {
        boolean isValid = true;

        if (HMIMMaterialDivisionUniqueInClassFeature::instance().isEnabled())
        {
            throw warning("@SCM:HMIMItemMaterialDetailEntityVersionError");
        }

        if (!HMIMDivision::existForClassCode(this.DivisionCode, this.ClassCode))
        {
            isValid = checkFailed(strFmt("@SCM:HMIMItemMaterialSimpleEntityValidateDivisionClassError", this.DivisionCode, this.ClassCode));
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateShippingPrintTxtLanguage</Name>
				<Source><![CDATA[
    private void generateShippingPrintTxtLanguage(HMIMItemMaterial _itemMaterial)
    {
        HMIMShippingPrintText::construct().generateShippingPrintTxtLanguage(_itemMaterial);
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveOtherTables</Name>
				<Source><![CDATA[
    private void saveOtherTables(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch(_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMPackDescription):
                if (this.PackCode && this.PackCodeDescription)
                {
                    HMIMPackDescription packDescription;
                    if (HMIMPackDescription::exist(this.PackCode))
                    {
                        packDescription = HMIMPackDescription::find(this.PackCode, true);
                        packDescription.Description = this.PackCodeDescription;
                        packDescription.update();
                    }
                    else
                    {
                        packDescription.PackCode = this.PackCode;
                        packDescription.Description = this.PackCodeDescription;
                        packDescription.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMIdentification):
                if (this.IdentificationCode && this.IdentificationCodeDescription)
                {
                    HMIMIdentification identification;
                    if (HMIMIdentification::exist(this.IdentificationCode))
                    {
                        identification = HMIMIdentification::find(this.IdentificationCode, true);
                        identification.Description = this.IdentificationCodeDescription;
                        identification.update();
                    }
                    else
                    {
                        identification.IdentificationCode = this.IdentificationCode;
                        identification.Description = this.IdentificationCodeDescription;
                        identification.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMTechnicalName):
                if (this.TechnicalNameCode && this.TechnicalNameCodeDescription)
                {
                    HMIMTechnicalName technicalName;
                    if (HMIMTechnicalName::exist(this.TechnicalNameCode))
                    {
                        technicalName = HMIMTechnicalName::find(this.TechnicalNameCode, true);
                        technicalName.Description = this.TechnicalNameCodeDescription;
                        technicalName.update();
                    }
                    else
                    {
                        technicalName.TechnicalNameCode = this.TechnicalNameCode;
                        technicalName.Description = this.TechnicalNameCodeDescription;
                        technicalName.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMTunnel):
                if (this.TunnelCode && this.TunnelCodeDescription)
                {
                    HMIMTunnel tunnel;
                    if (HMIMTunnel::exist(this.TunnelCode))
                    {
                        tunnel = HMIMTunnel::find(this.TunnelCode, true);
                        tunnel.Description = this.TunnelCodeDescription;
                        tunnel.update();
                    }
                    else
                    {
                        tunnel.TunnelCode = this.TunnelCode;
                        tunnel.Description = this.TunnelCodeDescription;
                        tunnel.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMTransportCategory):
                if (this.TransportCategoryCode && this.TransportCategoryCodeDescription)
                {
                    HMIMTransportCategory transportCategory;
                    if (HMIMTransportCategory::exist(this.TransportCategoryCode))
                    {
                        transportCategory = HMIMTransportCategory::find(this.TransportCategoryCode, true);
                        transportCategory.Description = this.TransportCategoryCodeDescription;
                        transportCategory.update();
                    }
                    else
                    {
                        transportCategory.TransportCategoryCode = this.TransportCategoryCode;
                        transportCategory.Description = this.TransportCategoryCodeDescription;
                        transportCategory.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMClass):
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMDivision):

                if (this.ClassCode && this.ClassCodeDescription)
                {
                    HMIMClass hmimClass;
                    if (HMIMClass::exist(this.ClassCode))
                    {
                        hmimClass = HMIMClass::find(this.ClassCode, true);
                        hmimClass.Description = this.ClassCodeDescription;
                        hmimClass.update();
                    }
                    else
                    {
                        hmimClass.ClassCode = this.ClassCode;
                        hmimClass.Description = this.ClassCodeDescription;
                        hmimClass.insert();
                    }
                }

                if (this.DivisionCode && this.DivisionCodeDescription)
                {
                    HMIMDivision division;
                    if (HMIMDivision::exist(this.DivisionCode))
                    {
                        division = HMIMDivision::find(this.DivisionCode, true);
                        division.Description = this.DivisionCodeDescription;
                        if (HMIMClass::exist(this.ClassCode))
                        {
                            division.ClassCode = this.ClassCode;
                        }
                        division.update();
                    }
                    else if (HMIMClass::exist(this.ClassCode))
                    {
                        division.DivisionCode = this.DivisionCode;
                        division.Description = this.DivisionCodeDescription;
                        division.ClassCode = this.ClassCode;
                        division.insert();
                    }
                }

                if (!this.validateDivisionClass())
                {
                    _dataSourceCtx.throwValidateWriteFailed();
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMPackingGroup):
                if (this.PackingGroupCode && this.PackingGroupCodeDescription)
                {
                    HMIMPackingGroup packingGroup;
                    if (HMIMPackingGroup::exist(this.PackingGroupCode))
                    {
                        packingGroup = HMIMPackingGroup::find(this.PackingGroupCode, true);
                        packingGroup.Description = this.PackingGroupCodeDescription;
                        packingGroup.update();
                    }
                    else
                    {
                        packingGroup.PackingGroupCode = this.PackingGroupCode;
                        packingGroup.Description = this.PackingGroupCodeDescription;
                        packingGroup.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMLabel):
                if (this.LabelCode && this.LabelCodeDescription)
                {
                    HMIMLabel label;
                    if (HMIMLabel::exist(this.LabelCode))
                    {
                        label = HMIMLabel::find(this.LabelCode, true);
                        label.Description = this.LabelCodeDescription;
                        label.update();
                    }
                    else
                    {
                        label.LabelCode = this.LabelCode;
                        label.Description = this.LabelCodeDescription;
                        label.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMStowage):
                if (this.StowageCode && this.StowageCodeDescription)
                {
                    HMIMStowage stowage;
                    if (HMIMStowage::exist(this.StowageCode))
                    {
                        stowage = HMIMStowage::find(this.StowageCode, true);
                        stowage.Description = this.StowageCodeDescription;
                        stowage.update();
                    }
                    else
                    {
                        stowage.StowageCode = this.StowageCode;
                        stowage.Description = this.StowageCodeDescription;
                        stowage.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, HMIMEMS):
                if (this.EMSCode && this.EMSCodeDescription)
                {
                    HMIMEMS ems;
                    if (HMIMEMS::exist(this.EMSCode))
                    {
                        ems = HMIMEMS::find(this.EMSCode, true);
                        ems.Description = this.EMSCodeDescription;
                        ems.update();
                    }
                    else
                    {
                        ems.EMSCode = this.EMSCode;
                        ems.Description = this.EMSCodeDescription;
                        ems.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, PassengerHMIMPackingInstruction):
                if (this.PackInstCodePassenger && this.PackInstCodePassengerDescription)
                {
                    HMIMPackingInstruction packingInstruction;
                    if (HMIMPackingInstruction::exist(this.PackInstCodePassenger))
                    {
                        packingInstruction = HMIMPackingInstruction::find(this.PackInstCodePassenger, true);
                        packingInstruction.Description = this.PackInstCodePassengerDescription;
                        packingInstruction.update();
                    }
                    else
                    {
                        packingInstruction.PackInstCode = this.PackInstCodePassenger;
                        packingInstruction.Description = this.PackInstCodePassengerDescription;
                        packingInstruction.insert();
                    }
                }
                break;
            case dataEntityDataSourceStr(HMIMItemMaterialDetailEntity, CargoHMIMPackingInstruction):
                if (this.PackInstCodeCargo && this.PackInstCodeCargoDescription)
                {
                    HMIMPackingInstruction packingInstruction;
                    if (HMIMPackingInstruction::exist(this.PackInstCodeCargo))
                    {
                        packingInstruction = HMIMPackingInstruction::find(this.PackInstCodeCargo, true);
                        packingInstruction.Description = this.PackInstCodeCargoDescription;
                        packingInstruction.update();
                    }
                    else
                    {
                        packingInstruction.PackInstCode = this.PackInstCodeCargo;
                        packingInstruction.Description = this.PackInstCodeCargoDescription;
                        packingInstruction.insert();
                    }
                }
                break;
        }

        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
        _dataSourceCtx.setDataSaved(true);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>HMIMManagement</ConfigurationKey>
	<FormRef>HMIMItemMaterialListDisplay</FormRef>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SCM:ItemMaterial</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>HMIMItemMaterialDetailStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ItemHazardousMaterialDetails</PublicCollectionName>
	<PublicEntityName>ItemHazardousMaterialDetail</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RegCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ItemId</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaterialDescription</Name>
			<DataField>MaterialDescription</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Qty</Name>
			<DataField>Qty</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Multiplier</Name>
			<DataField>Multiplier</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitOfMeasure</Name>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PackCode</DataField>
			<DataSource>HMIMPackDescription</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMPackDescription</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IdentificationCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>IdentificationCode</DataField>
			<DataSource>HMIMIdentification</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IdentificationCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMIdentification</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalNameCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>TechnicalNameCode</DataField>
			<DataSource>HMIMTechnicalName</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalNameCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMTechnicalName</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TunnelCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>TunnelCode</DataField>
			<DataSource>HMIMTunnel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TunnelCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMTunnel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MarinePollutant</Name>
			<DataField>MarinePollutant</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EnviroDangerous</Name>
			<DataField>EnviroDangerous</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LimitedQty</Name>
			<DataField>LimitedQty</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransportCategoryCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>TransportCategoryCode</DataField>
			<DataSource>HMIMTransportCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransportCategoryCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMTransportCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DivisionCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DivisionCode</DataField>
			<DataSource>HMIMDivision</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DivisionCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMDivision</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ClassCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>ClassCode</DataField>
			<DataSource>HMIMClass</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ClassCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMClass</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackingGroupCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PackingGroupCode</DataField>
			<DataSource>HMIMPackingGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackingGroupCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMPackingGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RegCode</Name>
			<DataField>RegCode</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LabelCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LabelCode</DataField>
			<DataSource>HMIMLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LabelCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NOS</Name>
			<DataField>NOS</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StowageCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>StowageCode</DataField>
			<DataSource>HMIMStowage</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StowageCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMStowage</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IATAStar</Name>
			<DataField>IATAStar</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EMSCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>EMSCode</DataField>
			<DataSource>HMIMEMS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EMSCodeDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>HMIMEMS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AirType</Name>
			<DataField>AirType</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackInstCodePassenger</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PackInstCode</DataField>
			<DataSource>PassengerHMIMPackingInstruction</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackInstCodePassengerDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>PassengerHMIMPackingInstruction</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackInstCodeCargo</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PackInstCode</DataField>
			<DataSource>CargoHMIMPackingInstruction</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackInstCodeCargoDescription</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Description</DataField>
			<DataSource>CargoHMIMPackingInstruction</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsMaterialRadioactive</Name>
			<DataField>IsRadioactive</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Flashpoint</Name>
			<ConfigurationKey>WHSandTMS</ConfigurationKey>
			<DataField>Flashpoint</DataField>
			<DataSource>HMIMItemMaterial</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RegCode</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>HMIMItemMaterial</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>HMIMItemMaterial</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMPackDescription</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMPackDescription</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PackDescription</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMPackDescription</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMIdentification</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMIdentification</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Identification</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMIdentification</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMTechnicalName</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMTechnicalName</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>TechnicalName</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMTechnicalName</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMTunnel</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMTunnel</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Tunnel</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMTunnel</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMTransportCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMTransportCategory</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>TransportCategory</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMTransportCategory</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMDivision</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMDivision</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Division</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMDivision</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMClass</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMClass</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HMIMClass</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMClass</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMPackingGroup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMPackingGroup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PackingGroup</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMPackingGroup</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMLabel</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMLabel</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Label</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMLabel</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMStowage</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMStowage</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Stowage</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMStowage</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HMIMEMS</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMEMS</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EMS</Name>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<JoinRelationName>HMIMEMS</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PassengerHMIMPackingInstruction</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMPackingInstruction</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PassengerHMIMPackingInstruction</Name>
								<Field>PackInstCodePassenger</Field>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<RelatedField>PackInstCode</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CargoHMIMPackingInstruction</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>HMIMPackingInstruction</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>CargoHMIMPackingInstruction</Name>
								<Field>PackInstCodeCargo</Field>
								<JoinDataSource>HMIMItemMaterial</JoinDataSource>
								<RelatedField>PackInstCode</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>