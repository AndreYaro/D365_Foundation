<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityOrderCreationPolicyEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventQualityOrderCreationPolicyEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>refTypeTableGroupAllIdDefinition</Name>
				<Source><![CDATA[
    private static str refTypeTableGroupAllIdDefinition(InventTestReferenceType _refTypeValue, TableGroupAll _codeValue)
    {
        TableName entityName = tableStr(InventQualityOrderCreationPolicyEntity);
        DataSourceName dataSourceName = dataEntityDataSourceStr(InventQualityOrderCreationPolicyEntity, InventTestAssociationTable);

        return SysComputedColumn::if(
                    SysComputedColumn::and2(
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonLiteral(_refTypeValue),
                            SysComputedColumn::comparisonField(entityName, dataSourceName, fieldStr(InventTestAssociationTable, OrderType))),
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonLiteral(_codeValue),
                            SysComputedColumn::comparisonField(entityName, dataSourceName, fieldStr(InventTestAssociationTable, AccountCode)))),
                    SysComputedColumn::returnField(entityName, dataSourceName, fieldStr(InventTestAssociationTable, AccountRelation)),
                    SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorAccountNumberDefinition</Name>
				<Source><![CDATA[
    private static str vendorAccountNumberDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::Purch, TableGroupAll::Table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>vendorGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str vendorGroupIdDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::Purch, TableGroupAll::GroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerAccountNumberDefinition</Name>
				<Source><![CDATA[
    private static str customerAccountNumberDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::Sales, TableGroupAll::Table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str customerGroupIdDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::Sales, TableGroupAll::GroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>routeOperationIdDefinition</Name>
				<Source><![CDATA[
    private static str routeOperationIdDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::RouteOpr, TableGroupAll::Table);
    }

]]></Source>
			</Method>
			<Method>
				<Name>routeGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str routeGroupIdDefinition()
    {
        return InventQualityOrderCreationPolicyEntity::refTypeTableGroupAllIdDefinition(InventTestReferenceType::RouteOpr, TableGroupAll::GroupId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceIdDefinition</Name>
				<Source><![CDATA[
    private static str resourceIdDefinition()
    {
        return ProdTableGroupAllResourceRelationExpansionMapping::tableCategoryIdDefinition(
            tableStr(InventQualityOrderCreationPolicyEntity),
            dataEntityDataSourceStr(InventQualityOrderCreationPolicyEntity, InventTestAssociationTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>resourceGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str resourceGroupIdDefinition()
    {
        return ProdTableGroupAllResourceRelationExpansionMapping::groupCategoryIdDefinition(
            tableStr(InventQualityOrderCreationPolicyEntity),
            dataEntityDataSourceStr(InventQualityOrderCreationPolicyEntity, InventTestAssociationTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemNumberDefinition</Name>
				<Source><![CDATA[
    private static str itemNumberDefinition()
    {
        return EcoResTableGroupAllProductRelationExpansionMapping::tableCategoryIdDefinition(
            tableStr(InventQualityOrderCreationPolicyEntity),
            dataEntityDataSourceStr(InventQualityOrderCreationPolicyEntity, InventTestAssociationTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>qualityGroupIdDefinition</Name>
				<Source><![CDATA[
    private static str qualityGroupIdDefinition()
    {
        return EcoResTableGroupAllProductRelationExpansionMapping::groupCategoryIdDefinition(
            tableStr(InventQualityOrderCreationPolicyEntity),
            dataEntityDataSourceStr(InventQualityOrderCreationPolicyEntity, InventTestAssociationTable));
    }

]]></Source>
			</Method>
			<Method>
				<Name>qualityOrderCreationPolicyTypeExtensionValidatingWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for validating the data entered for the selected <c>InventQualityOrderCreationPolicyEntity</c> record.
    /// </summary>
    /// <param name = "_inventQualityOrderCreationPolicyEntity">The <c>InventQualityOrderCreationPolicyEntity</c> record being validated.</param>
    /// <param name = "_result">An <c>EventHandlerResult</c> instance, where subscribers can provide the validation result.</param>
    delegate void qualityOrderCreationPolicyTypeExtensionValidatingWrite(InventQualityOrderCreationPolicyEntity _inventQualityOrderCreationPolicyEntity, EventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        ret = this.ProdTableGroupAllResourceRelationExpansionMapping::mappedValidateWrite() && ret;
        ret = this.EcoResTableGroupAllProductRelationExpansionMapping::mappedValidateWrite() && ret;

        if (ret)
        {
            switch (this.QualityOrderCreationPolicyType)
            {
                case InventTestReferenceType::Purch:
                    if ((this.VendorAccountNumber && this.VendorGroupId) || this.CustomerAccountNumber || this.CustomerGroupId || this.RouteOperationId || this.RouteGroupId)
                    {
                        ret = checkFailed(strFmt("@SCM:Entity_ValidationError_TableGroupAllPattern_BothGroupAndTableIdentifierSpecifiedConditional",
                                fieldPName(InventQualityOrderCreationPolicyEntity, VendorAccountNumber),
                                fieldPName(InventQualityOrderCreationPolicyEntity, VendorGroupId),
                                fieldPName(InventQualityOrderCreationPolicyEntity, QualityOrderCreationPolicyType),
                                this.QualityOrderCreationPolicyType));
                    }
                    break;
                case InventTestReferenceType::Sales:
                    if ((this.CustomerAccountNumber && this.CustomerGroupId) || this.VendorAccountNumber || this.VendorGroupId || this.RouteOperationId || this.RouteGroupId)
                    {
                        ret = checkFailed(strFmt("@SCM:Entity_ValidationError_TableGroupAllPattern_BothGroupAndTableIdentifierSpecifiedConditional",
                                fieldPName(InventQualityOrderCreationPolicyEntity, CustomerAccountNumber),
                                fieldPName(InventQualityOrderCreationPolicyEntity, CustomerGroupId),
                                fieldPName(InventQualityOrderCreationPolicyEntity, QualityOrderCreationPolicyType),
                                this.QualityOrderCreationPolicyType));
                    }
                    break;
                case InventTestReferenceType::RouteOpr:
                    if ((this.RouteOperationId && this.RouteGroupId) || this.VendorAccountNumber || this.VendorGroupId || this.CustomerAccountNumber || this.CustomerGroupId)
                    {
                        ret = checkFailed(strFmt("@SCM:Entity_ValidationError_TableGroupAllPattern_BothGroupAndTableIdentifierSpecifiedConditional",
                                fieldPName(InventQualityOrderCreationPolicyEntity, RouteOperationId),
                                fieldPName(InventQualityOrderCreationPolicyEntity, RouteGroupId),
                                fieldPName(InventQualityOrderCreationPolicyEntity, QualityOrderCreationPolicyType),
                                this.QualityOrderCreationPolicyType));
                    }
                    break;
                default:
                    EventHandlerResult eventHandlerResult = EventHandlerResult::newSingleResponse();
                    this.qualityOrderCreationPolicyTypeExtensionValidatingWrite(this, eventHandlerResult);

                    if (eventHandlerResult.hasResult())
                    {
                        ret = eventHandlerResult.result();
                    }
                    else if (this.VendorAccountNumber || this.VendorGroupId || this.CustomerAccountNumber || this.CustomerGroupId || this.RouteOperationId || this.RouteGroupId)
                    {
                        ret = checkFailed(strFmt("@SCM:Entity_ValidationError_TableGroupAllPattern_TableGroupIdentifierSetWrongCondition",
                            fieldPName(InventQualityOrderCreationPolicyEntity, VendorAccountNumber),
                            fieldPName(InventQualityOrderCreationPolicyEntity, VendorGroupId),
                            fieldPName(InventQualityOrderCreationPolicyEntity, CustomerAccountNumber),
                            fieldPName(InventQualityOrderCreationPolicyEntity, CustomerGroupId),
                            fieldPName(InventQualityOrderCreationPolicyEntity, RouteOperationId),
                            fieldPName(InventQualityOrderCreationPolicyEntity, RouteGroupId),
                            fieldPName(InventQualityOrderCreationPolicyEntity, QualityOrderCreationPolicyType),
                            this.QualityOrderCreationPolicyType));
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                this.ProdTableGroupAllResourceRelationExpansionMapping::relationControllingCodeDefaultingDependencies(),
                this.ProdTableGroupAllResourceRelationExpansionMapping::codeControlledRelationDefaultingDependencies(),
                this.EcoResTableGroupAllProductRelationExpansionMapping::relationControllingCodeDefaultingDependencies(),
                this.EcoResTableGroupAllProductRelationExpansionMapping::codeControlledRelationDefaultingDependencies(),
                [fieldNum(InventQualityOrderCreationPolicyEntity, AccountCode), this.accountCodeRelationDefaultingDependencies()],
                [fieldNum(InventQualityOrderCreationPolicyEntity, AccountRelation), this.accountCodeRelationDefaultingDependencies()]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountCodeRelationDefaultingDependencies</Name>
				<Source><![CDATA[
    private container accountCodeRelationDefaultingDependencies()
    {
        return [
            fieldNum(InventQualityOrderCreationPolicyEntity, VendorAccountNumber),
            fieldNum(InventQualityOrderCreationPolicyEntity, VendorGroupId),
            fieldNum(InventQualityOrderCreationPolicyEntity, CustomerAccountNumber),
            fieldNum(InventQualityOrderCreationPolicyEntity, CustomerGroupId),
            fieldNum(InventQualityOrderCreationPolicyEntity, RouteOperationId),
            fieldNum(InventQualityOrderCreationPolicyEntity, RouteGroupId),
            fieldNum(InventQualityOrderCreationPolicyEntity, QualityOrderCreationPolicyType)
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAccountCode</Name>
				<Source><![CDATA[
    private void defaultAccountCode()
    {
        if (this.QualityOrderCreationPolicyType == InventTestReferenceType::Purch)
        {
            if (this.VendorAccountNumber)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, VendorAccountNumber)))
                {
                    this.AccountCode = TableGroupAll::Table;
                }
            }
            else if (this.VendorGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, VendorGroupId)))
                {
                    this.AccountCode = TableGroupAll::GroupId;
                }
            }
            else
            {
                this.AccountCode = TableGroupAll::All;
            }
        }
        else if (this.QualityOrderCreationPolicyType == InventTestReferenceType::Sales)
        {
            if (this.CustomerAccountNumber)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, CustomerAccountNumber)))
                {
                    this.AccountCode = TableGroupAll::Table;
                }
            }
            else if (this.CustomerGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, CustomerGroupId)))
                {
                    this.AccountCode = TableGroupAll::GroupId;
                }
            }
            else
            {
                this.AccountCode = TableGroupAll::All;
            }
        }
        else if (this.QualityOrderCreationPolicyType == InventTestReferenceType::RouteOpr)
        {
            if (this.RouteOperationId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, RouteOperationId)))
                {
                    this.AccountCode = TableGroupAll::Table;
                }
            }
            else if (this.RouteGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, RouteGroupId)))
                {
                    this.AccountCode = TableGroupAll::GroupId;
                }
            }
            else
            {
                this.AccountCode = TableGroupAll::All;
            }
        }
        else
        {
            this.AccountCode = TableGroupAll::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAccountRelation</Name>
				<Source><![CDATA[
    private void defaultAccountRelation()
    {
        if (this.QualityOrderCreationPolicyType == InventTestReferenceType::Purch)
        {
            if (this.VendorAccountNumber)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, VendorAccountNumber)))
                {
                    this.AccountRelation = this.VendorAccountNumber;
                }
            }
            else if (this.VendorGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, VendorGroupId)))
                {
                    this.AccountRelation = this.VendorGroupId;
                }
            }
        }
        else if (this.QualityOrderCreationPolicyType == InventTestReferenceType::Sales)
        {
            if (this.CustomerAccountNumber)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, CustomerAccountNumber)))
                {
                    this.AccountRelation = this.CustomerAccountNumber;
                }
            }
            else if (this.CustomerGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, CustomerGroupId)))
                {
                    this.AccountRelation = this.CustomerGroupId;
                }
            }
        }
        else if (this.QualityOrderCreationPolicyType == InventTestReferenceType::RouteOpr)
        {
            if (this.RouteOperationId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, RouteOperationId)))
                {
                    this.AccountRelation = this.RouteOperationId;
                }
            }
            else if (this.RouteGroupId)
            {
                if (this.isFieldSet(fieldNum(InventQualityOrderCreationPolicyEntity, RouteGroupId)))
                {
                    this.AccountRelation = this.RouteGroupId;
                }
            }
        }
        else
        {
            this.AccountRelation = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventQualityOrderCreationPolicyEntity, AccountCode):
                this.defaultAccountCode();
                break;
            case fieldNum(InventQualityOrderCreationPolicyEntity, AccountRelation):
                this.defaultAccountRelation();
                break;
        }

        this.ProdTableGroupAllResourceRelationExpansionMapping::defaultMappedField(_fieldId);
        this.EcoResTableGroupAllProductRelationExpansionMapping::defaultMappedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findInventTestAssociationTableFromStaging</Name>
				<Source><![CDATA[
    public static InventTestAssociationTable findInventTestAssociationTableFromStaging(InventQualityOrderCreationPolicyStaging _staging)
    {
        InventQualityOrderCreationPolicyEntity entity;

        select firstonly entity
            where entity.QualityOrderCreationPolicyType == _staging.QualityOrderCreationPolicyType
                && entity.VendorGroupId == _staging.VendorGroupId
                && entity.VendorAccountNumber == _staging.VendorAccountNumber
                && entity.CustomerGroupId == _staging.CustomerGroupId
                && entity.CustomerAccountNumber == _staging.CustomerAccountNumber
                && entity.RouteGroupId == _staging.RouteGroupId
                && entity.RouteOperationId == _staging.RouteOperationId
                && entity.OperationsResourceGroupId == _staging.OperationsResourceGroupId
                && entity.OperationsResourceId == _staging.OperationsResourceId
                && entity.QualityGroupId == _staging.QualityGroupId
                && entity.ItemNumber == _staging.ItemNumber
                && entity.QualityOrderCreationDocumentationEvent == _staging.QualityOrderCreationDocumentationEvent
                && entity.OperationalSiteId == _staging.OperationalSiteId
                && entity.EffectiveDateTime == _staging.EffectiveDateTime
                && entity.ExpirationDateTime == _staging.ExpirationDateTime
                && entity.QualityOrderCreationDocumentationEventStage == _staging.QualityOrderCreationDocumentationEventStage
                && entity.QualityTestGroupId == _staging.QualityTestGroupId;

        return InventTestAssociationTable::find(entity.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jump ref method for target record
    /// </summary>
    public static void jumpRefMethod(str _menuItemName, Common _stagingBuffer, Object _callerObj, DataAreaId _dataAreaId)
    {
        changeCompany(_dataAreaId)
        {
            var record = InventQualityOrderCreationPolicyEntity::findInventTestAssociationTableFromStaging(_stagingBuffer);

            Args args = new Args();
            args.record(record);
            args.lookupRecord(record);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventQualityManagement</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Entity_DevDoc_InventQualityOrderCreationPolicyEntity</DeveloperDocumentation>
	<FormRef>InventTestAssociationTable</FormRef>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SCM:Entity_Title_InventQualityOrderCreationPolicyEntity</Label>
	<Tags>Quality</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventQualityOrderCreationPolicyStaging</DataManagementStagingTable>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AcceptableQualityLevelPercentage</Name>
			<DataField>AcceptableQualityLevel</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountCode</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountRelation</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BlockedDocumentationProcess</Name>
			<DataField>BlockProcess</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityOrderCreationDocumentationEvent</Name>
			<DataField>DocumentType</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OperationalSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ItemCode</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ItemRelation</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemSamplingId</Name>
			<Mandatory>No</Mandatory>
			<DataField>ItemSamplingId</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityOrderCreationPolicyType</Name>
			<DataField>OrderType</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsQualityOrderFailureCreatingQuantineOrder</Name>
			<DataField>QuarantineOnFailure</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsQualityOrderCreationDisplayingMessage</Name>
			<DataField>showInfoOnCreate</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityOrderCreationDocumentationEventStage</Name>
			<DataField>TestExecution</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityTestGroupId</Name>
			<Mandatory>No</Mandatory>
			<DataField>TestGroupId</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EffectiveDateTime</Name>
			<Mandatory>No</Mandatory>
			<DataField>ValidFromDateTime</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpirationDateTime</Name>
			<Mandatory>No</Mandatory>
			<DataField>ValidToDateTime</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WrkCtrCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WrkCtrCode</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WrkCtrRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WrkCtrRelation</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>vendorGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>VendGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>VendorAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>vendorAccountNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>VendAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerAccountNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>QualityGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>qualityGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventTestQualityGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ItemNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>OperationsResourceGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>resourceGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>OperationsResourceId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>resourceIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>WrkCtrIdBase</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RouteOperationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>routeOperationIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>RouteOprId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RouteGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>routeGroupIdDefinition</ComputedFieldMethod>
			<ExtendedDataType>RouteGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssociationCreationSequenceNumber</Name>
			<DataField>AssociationCreationSequenceNumber</DataField>
			<DataSource>InventTestAssociationTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>QualityOrderCreationPolicyType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VendorAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RouteGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RouteOperationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OperationsResourceGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OperationsResourceId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityOrderCreationDocumentationEvent</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OperationalSiteId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EffectiveDateTime</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ExpirationDateTime</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityOrderCreationDocumentationEventStage</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityTestGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>EcoResTableGroupAllProductRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ProductCodeControlledRelation</MapField>
					<MapFieldTo>ItemRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProductGroupId</MapField>
					<MapFieldTo>QualityGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProductId</MapField>
					<MapFieldTo>ItemNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RelationControllingProductCode</MapField>
					<MapFieldTo>ItemCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>ProdTableGroupAllResourceRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RelationControllingResourceCode</MapField>
					<MapFieldTo>WrkCtrCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ResourceCodeControlledRelation</MapField>
					<MapFieldTo>WrkCtrRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ResourceGroupId</MapField>
					<MapFieldTo>OperationsResourceGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ResourceId</MapField>
					<MapFieldTo>OperationsResourceId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTestAssociationTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTestAssociationTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>