<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RTax25StdExpressionLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RTax25StdExpressionLineEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {   
        super();
        
        RTax25StdExpressionLine line   = RTax25StdExpressionLine::find(this.Sequence, RTax25ProfitTable::findByProfitId(this.ProfitId).RecId, this.LineNumber);
        RTax25StdSeq            stdSeq = RTax25StdSeq::find(line.SeqNum);
        
        this.To = RTax25StdOperandType::newParameters(line.LineType).editTo(false, '', line);

        if (stdSeq.ChannelType == RTax25StdChannelType::Deferral ||
            stdSeq.ChannelType == RTax25StdChannelType::DeferralsFactor)
        {
            this.Output = new DictEnum(enumNum(RTax25StdChannelOutputMode)).value2name(line.ChannelFieldId);
        }
        else
        {
            this.RegisterField = line.channelRegisterOutput(false, '');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataentitydatasourcestr(RTax25StdExpressionLineEntity, RTax25StdExpressionLine))
        {
            RTax25StdExpressionLine line   = _dataSourceCtx.getBuffer();
            RTax25StdSeq            stdSeq = RTax25StdSeq::find(line.SeqNum);

            if (stdSeq.ChannelType == RTax25StdChannelType::Deferral ||
                stdSeq.ChannelType == RTax25StdChannelType::DeferralsFactor)
            {
                line.ChannelFieldId = new DictEnum(enumNum(RTax25StdChannelOutputMode)).name2value(this.Output);
            }
            else
            {
                line.channelRegisterOutput(true, this.RegisterField);
            }

            RTax25StdOperandType::newParameters(line.LineType).editTo(true, this.To, line);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<FormRef>RTax25StdExpressionTable</FormRef>
	<Label>@GLS104125</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RTax25StdExpressionLineStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>RTax25</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>StdExpressionLines</PublicCollectionName>
	<PublicEntityName>StdExpressionLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>RegisterField</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Note</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Operator</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Index</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PeriodTypes</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>From</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>To</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Sequence</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProfitId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Output</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineType</Name>
			<DataField>LineType</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Note</Name>
			<DataField>Notes</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Operator</Name>
			<DataField>Operator</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Index</Name>
			<DataField>PeriodLag</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>From</Name>
			<DataField>RefIdFrom</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Sequence</Name>
			<DataField>SeqNum</DataField>
			<DataSource>RTax25StdExpressionTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProfitId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ProfitId</DataField>
			<DataSource>RTax25ProfitTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RegisterField</Name>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>To</Name>
			<ExtendedDataType>RTax25StdRefId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Output</Name>
			<Label>@SYS4742</Label>
			<ExtendedDataType>name</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PeriodTypes</Name>
			<DataField>PeriodType</DataField>
			<DataSource>RTax25StdExpressionLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>Sequence</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProfitId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RTax25StdExpressionLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RTax25StdExpressionLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RTax25StdExpressionTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RTax25StdExpressionTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>RTax25ProfitTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>RTax25ProfitTable</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>RTax25ProfitTable</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ExpressionTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>