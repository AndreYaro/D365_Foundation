<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankClientOutPaymentLogEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankClientOutPaymentLogEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateReferenceInfo</Name>
				<Source><![CDATA[
    public void updateReferenceInfo(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        BankClientOutPaymentLog_RU paymentLog = _dataSourceCtx.getBuffer();
        BankCurrencyTransferLog_RU transferLog = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(BankClientOutPaymentLogEntity, BankCurrencyTransferLog_RU)).getBuffer();
        BankPaymentOrderJour_RU paymentOrderJour = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(BankClientOutPaymentLogEntity, BankPaymentOrderJour_RU)).getBuffer();

        if (transferLog)
        {
            paymentLog.PaymentTableId = transferLog.TableId;
            paymentLog.PaymentRecId = transferLog.RecId;
            paymentLog.PaymentOrderNum = transferLog.BankCurrencyTransferId;
            paymentLog.PaymentOrderDate = transferLog.TransDate;
        }
        else
        if (paymentOrderJour)
        {
            paymentLog.PaymentTableId = paymentOrderJour.TableId;
            paymentLog.PaymentRecId = paymentOrderJour.RecId;
            paymentLog.PaymentOrderNum = paymentOrderJour.PaymentOrderNum;
            paymentLog.PaymentOrderDate = paymentOrderJour.PaymentTransDate;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(BankClientOutPaymentLogEntity, BankClientOutPaymentLog_RU):
                this.updateReferenceInfo(_entityCtx, _dataSourceCtx);
                ret = super(_entityCtx, _dataSourceCtx);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(BankClientOutPaymentLogEntity, BankClientOutPaymentLog_RU):
                this.updateReferenceInfo(_entityCtx, _dataSourceCtx);
                ret = super(_entityCtx, _dataSourceCtx);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>RU</CountryRegionCodes>
	<Label>@GLS115291</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BankClientOutPaymentLogStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>CashAndBankManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BankClientOutPaymentLogs</PublicCollectionName>
	<PublicEntityName>BankClientOutPaymentLog</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>OrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Currency</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmountInTransactionCurrency</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AmountInTransactionCurrency</Name>
			<DataField>AmountCur</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccount</Name>
			<DataField>BankAccountId</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Currency</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Counteragent</Name>
			<DataField>CustVendAC</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentType</Name>
			<DataField>DocumentType</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DateAndTime</Name>
			<DataField>FileDateTime</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNumber</Name>
			<DataField>JournalNum</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<DataField>LedgerACType</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderDate</Name>
			<DataField>PaymentOrderDate</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderNumber</Name>
			<DataField>PaymentOrderNum</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MethodOfPayment</Name>
			<DataField>PaymMode</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentOrderStatus</Name>
			<DataField>PaymStatus</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Date</Name>
			<DataField>TransDate</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>BankClientOutPaymentLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankCurrencyTransfer</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>BankCurrencyTransferId</DataField>
			<DataSource>BankCurrencyTransferLog_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentOrderNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PaymentOrderNum</DataField>
			<DataSource>BankPaymentOrderJour_RU</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentOrderDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>PaymentTransDate</DataField>
			<DataSource>BankPaymentOrderJour_RU</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>OrderNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>OrderDate</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BankClientOutPaymentLog_RU</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BankClientOutPaymentLog_RU</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BankCurrencyTransferLog_RU</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BankCurrencyTransferLog_RU</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>PaymentRecId</Field>
								<JoinDataSource>BankClientOutPaymentLog_RU</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BankPaymentOrderJour_RU</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BankPaymentOrderJour_RU</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PaymentRecId</Field>
								<JoinDataSource>BankClientOutPaymentLog_RU</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>