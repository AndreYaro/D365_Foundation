<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>TMSFreightBillMatchingAuditToleranceLevelEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class TMSFreightBillMatchingAuditToleranceLevelEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>maximumAuditTolerancePercentageDefinition</Name>
				<Source><![CDATA[
    public static str maximumAuditTolerancePercentageDefinition()
    {
        return TMSFreightBillMatchingAuditToleranceLevelEntity::maximumAuditToleranceFieldDefinition(TMSAuditType::Percent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumAuditToleranceAmountDefinition</Name>
				<Source><![CDATA[
    public static str maximumAuditToleranceAmountDefinition()
    {
        return TMSFreightBillMatchingAuditToleranceLevelEntity::maximumAuditToleranceFieldDefinition(TMSAuditType::Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumAuditTolerancePercentageDefinition</Name>
				<Source><![CDATA[
    public static str minimumAuditTolerancePercentageDefinition()
    {
        return TMSFreightBillMatchingAuditToleranceLevelEntity::minimumAuditToleranceFieldDefinition(TMSAuditType::Percent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumAuditToleranceAmountDefinition</Name>
				<Source><![CDATA[
    public static str minimumAuditToleranceAmountDefinition()
    {
        return TMSFreightBillMatchingAuditToleranceLevelEntity::minimumAuditToleranceFieldDefinition(TMSAuditType::Amount);
    }

]]></Source>
			</Method>
			<Method>
				<Name>maximumAuditToleranceFieldDefinition</Name>
				<Source><![CDATA[
    private static str maximumAuditToleranceFieldDefinition(TMSAuditType _auditType)
    {
        str entityName = tableStr(TMSFreightBillMatchingAuditToleranceLevelEntity);

        return SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(entityName,
                                                       dataEntityDataSourceStr(TMSFreightBillMatchingAuditToleranceLevelEntity, TMSAuditMaster), 
                                                       fieldStr(TMSAuditMaster, AuditTypeMax)),
                                                       int2str(enum2int(_auditType))),
                    SysComputedColumn::returnField(entityName,
                                                    dataEntityDataSourceStr(TMSFreightBillMatchingAuditToleranceLevelEntity, TMSAuditMaster),
                                                    fieldStr(TMSAuditMaster, AuditToleranceMax)),
                    SysComputedColumn::returnLiteral('0.0'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>minimumAuditToleranceFieldDefinition</Name>
				<Source><![CDATA[
    private static str minimumAuditToleranceFieldDefinition(TMSAuditType _auditType)
    {
        str entityName = tableStr(TMSFreightBillMatchingAuditToleranceLevelEntity);

        return SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(entityName,
                                                       dataEntityDataSourceStr(TMSFreightBillMatchingAuditToleranceLevelEntity, TMSAuditMaster),
                                                       fieldStr(TMSAuditMaster, AuditTypeMin)),
                                                       int2str(enum2int(_auditType))),
                    SysComputedColumn::returnField(entityName,
                                                    dataEntityDataSourceStr(TMSFreightBillMatchingAuditToleranceLevelEntity, TMSAuditMaster),
                                                    fieldStr(TMSAuditMaster, AuditToleranceMin)),
                    SysComputedColumn::returnLiteral('0.0'));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super() 
                        && this.validateMaximumAuditToleranceType()
                        && this.validateMinimumAuditToleranceType();  
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMinimumAuditToleranceType</Name>
				<Source><![CDATA[
    private boolean validateMinimumAuditToleranceType()
    {
        boolean validationResult = true;
        switch (this.MinimumAuditToleranceUnitType)
        {
            case TMSAuditType::Amount:
                if (this.MinimumAuditTolerancePercentage)
                {
                    validationResult = checkFailed(strFmt("@TRX:Warning_AmountOrPercentageSpecifiedForWrongMinimumAuditType",
                                                          TMSAuditType::Amount, 
                                                          fieldId2PName(tableNum(TMSFreightBillMatchingAuditToleranceLevelEntity), fieldNum(TMSFreightBillMatchingAuditToleranceLevelEntity, MinimumAuditTolerancePercentage))));
                }
                break;
            case TMSAuditType::Percent:
                if (this.MinimumAuditToleranceAmount)
                {
                    validationResult = checkFailed(strFmt("@TRX:Warning_AmountOrPercentageSpecifiedForWrongMinimumAuditType", 
                                                           TMSAuditType::Percent, 
                                                           fieldId2PName(tableNum(TMSFreightBillMatchingAuditToleranceLevelEntity), fieldNum(TMSFreightBillMatchingAuditToleranceLevelEntity, MinimumAuditToleranceAmount))));
                }
                break;
        }
        return validationResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMaximumAuditToleranceType</Name>
				<Source><![CDATA[
    private boolean validateMaximumAuditToleranceType()
    {
        boolean validationResult = true;
        switch (this.MaximumAuditToleranceUnitType)
        {
            case TMSAuditType::Amount:
                if (this.MaximumAuditTolerancePercentage)
                {
                    validationResult = checkFailed(strFmt("@TRX:Warning_AmountOrPercentageSpecifiedForWrongMaximumAuditType", 
                                                          TMSAuditType::Amount, 
                                                          fieldId2PName(tableNum(TMSFreightBillMatchingAuditToleranceLevelEntity), fieldNum(TMSFreightBillMatchingAuditToleranceLevelEntity, MaximumAuditTolerancePercentage))));
                }
                break;
            case TMSAuditType::Percent:
                if (this.MaximumAuditToleranceAmount)
                {
                    validationResult = checkFailed(strFmt("@TRX:Warning_AmountOrPercentageSpecifiedForWrongMaximumAuditType", 
                                                   TMSAuditType::Percent, 
                                                   fieldId2PName(tableNum(TMSFreightBillMatchingAuditToleranceLevelEntity), fieldNum(TMSFreightBillMatchingAuditToleranceLevelEntity, MaximumAuditToleranceAmount))));
                }
                break;
        }
        return validationResult;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(TMSFreightBillMatchingAuditToleranceLevelEntity, TMSAuditMaster):
                TMSAuditMaster auditMaster = _dataSourceCtx.getBuffer();
                auditMaster.AuditToleranceMax = this.setAuditToleranceMax();
                auditMaster.AuditToleranceMin = this.setAuditToleranceMin();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAuditToleranceMax</Name>
				<Source><![CDATA[
    private TMSAuditToleranceMax setAuditToleranceMax()
    {
        TMSAuditToleranceMax maximumAuditTolerance;
        if (this.MaximumAuditToleranceUnitType == TMSAuditType::Amount)
        {
            maximumAuditTolerance = this.MaximumAuditToleranceAmount;
        }
        else if (this.MaximumAuditToleranceUnitType == TMSAuditType::Percent)
        {
            maximumAuditTolerance = this.MaximumAuditTolerancePercentage;
        }
        return maximumAuditTolerance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAuditToleranceMin</Name>
				<Source><![CDATA[
    private TMSAuditToleranceMin setAuditToleranceMin()
    {
        TMSAuditToleranceMin minimumAuditTolerance;
        if (this.MinimumAuditToleranceUnitType == TMSAuditType::Amount)
        {
            minimumAuditTolerance = this.MinimumAuditToleranceAmount;
        }
        else if (this.MinimumAuditToleranceUnitType == TMSAuditType::Percent)
        {
            minimumAuditTolerance = this.MinimumAuditTolerancePercentage;
        }
        return minimumAuditTolerance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@TRX:Developer_TMSFreightBillMatchingAuditToleranceLevelEntity</DeveloperDocumentation>
	<FormRef>TMSAuditMaster</FormRef>
	<Label>@TRX:DataEntity_TMSFreightBillMatchingAuditToleranceLevelEntity</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>TMSFreightBillMatchingAuditToleranceLevelStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<Modules>Transportation</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnderpaymentFreightBillReconcilliationReasonCode</Name>
			<DataField>UnderageReasonCode</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ToleranceLevelId</Name>
			<DataField>AuditMasterId</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumAuditToleranceUnitType</Name>
			<DataField>AuditTypeMax</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumAuditToleranceUnitType</Name>
			<DataField>AuditTypeMin</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingCarrierId</Name>
			<DataField>CarrierCode</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FreightBillTypeId</Name>
			<DataField>FreightBillTypeId</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OperationalSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverpaymentFreightBillReconcilliationReasonCode</Name>
			<DataField>OverageReasonCode</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ToleranceSequenceNumber</Name>
			<DataField>Sequence</DataField>
			<DataSource>TMSAuditMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumAuditToleranceAmount</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumAuditToleranceAmountDefinition</ComputedFieldMethod>
			<ExtendedDataType>TMSMinimumAuditToleranceAmount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MinimumAuditTolerancePercentage</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>minimumAuditTolerancePercentageDefinition</ComputedFieldMethod>
			<ExtendedDataType>TMSMinimumAuditTolerancePercentage</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumAuditToleranceAmount</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumAuditToleranceAmountDefinition</ComputedFieldMethod>
			<ExtendedDataType>TMSMaximumAuditToleranceAmount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>MaximumAuditTolerancePercentage</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>maximumAuditTolerancePercentageDefinition</ComputedFieldMethod>
			<ExtendedDataType>TMSMaximumAuditTolerancePercentage</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ToleranceLevelId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>TMSAuditMaster</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>TMSAuditMaster</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>