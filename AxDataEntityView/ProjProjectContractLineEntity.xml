<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjProjectContractLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjProjectContractLineEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (!this.skipNumberSequenceCheck())
        {
            NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                this, fieldNum(ProjProjectContractLineEntity, ContractLineId), NumberSeqReference::findReference(extendedTypeNum(PSAContractLineNum)));
        }

        this.scopeIdentifier(newGuid());

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(ProjProjectContractLineEntity, SalesTaxGroupCode),
                [fieldNum(ProjProjectContractLineEntity, LineType),
                fieldNum(ProjProjectContractLineEntity, ProjectContractId)]],
            [fieldNum(ProjProjectContractLineEntity, DefaultLedgerDimension),
                [fieldNum(ProjProjectContractLineEntity, LineType),
                fieldNum(ProjProjectContractLineEntity, FeeProjectId)]],
            [fieldNum(ProjProjectContractLineEntity, LineAmount),
                [fieldNum(ProjProjectContractLineEntity, Quantity),
                fieldNum(ProjProjectContractLineEntity, UnitPrice)]],
            [fieldNum(ProjProjectContractLineEntity, ProjInvoiceProjId),
                [fieldNum(ProjProjectContractLineEntity, ProjectContractId)]],
            [fieldNum(ProjProjectContractLineEntity, LineType),
                [fieldNum(ProjProjectContractLineEntity, BillingMethod)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(ProjProjectContractLineEntity, SalesTaxGroupCode):
                this.defaultSalesTaxGroupCode();
                break;
            
            case fieldNum(ProjProjectContractLineEntity, DefaultLedgerDimension):
                this.defaultDefaultLedgerDimension();
                break;

            case fieldNum(ProjProjectContractLineEntity, LineAmount):
                this.defaultDefaultLineAmount();
                break;

            case fieldNum(ProjProjectContractLineEntity, ProjInvoiceProjId):
                this.defaultProjInvoiceProjId();
                break;

            case fieldNum(ProjProjectContractLineEntity, LineType):
                this.defaultLineType();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(ProjProjectContractLineEntity, UnitPrice):
                ret = this.validateUnitPrice() && ret;
                break;
            
            case fieldNum(ProjProjectContractLineEntity, Quantity):
                ret = this.validateQuantity() && ret;
                break;
            
            case fieldNum(ProjProjectContractLineEntity, UnitSymbol):
                ret = this.validateUnitSymbol() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjProjectContractLineEntity, PSAContractLineItems):
                _dataSourceCtx.getBuffer().scopeIdentifier(this.scopeIdentifier());
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        super();

        if (ProjRevRecContractValidationFlight::instance().isEnabled()
            && ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled()
            && !ProjRevRecHelper::allowRevRecProjectChange(this.LineProjectId, this.LineProjectId))
        {
            // Use LineProjectId to check against ProjControlPeriodTable for revenue recognition estimates in invalid states
            throw Error(strFmt("@Proj:ProjContractLineDeleteError", this.LineProjectId));
        }

        // The cardinatlity between PSAContractLineItems and PSAContractLineItemsSetup is 1:N. As such,
        // the generated entity persister class will skip deletion of PSAContractLineItems, in case there
        // are other PSAContractLineItemsSetup. Therefore manually check whether all records on N side of
        // the relation are deleted, and if so, delete PSAContractLineItems:
        PSAContractLineItemsSetup childRecords;
        select count(RecId) from childRecords
            where childRecords.ContractLineNum == this.ContractLineId
            || childRecords.ContractLineNumReferred == this.ContractLineId;

        if (childRecords.RecId == 0)
        {
            PSAContractLineItems parentRecord = PSAContractLineItems::find(this.ContractLineId, true);

            if (parentRecord.RecId > 0)
            {
                parentRecord.delete();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjProjectContractLineEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();

        this.checkProjOpsFeatureStatus();
        boolean ret;

        using (var activityContext = entityActivities.insertEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjProjectContractLineEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();

        this.checkProjOpsFeatureStatus();
        boolean ret;

        using (var activityContext = entityActivities.updateEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjProjectContractLineEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();

        this.checkProjOpsFeatureStatus();
        boolean ret;

        using (var activityContext = entityActivities.deleteEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logTelemetry</Name>
				<Source><![CDATA[
    private void logTelemetry(DataEntityDataSourceRuntimeContext _dataSourceCtx, SysInstrumentationActivityContext _activityContext)
    {
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::DataSource, any2Str(_dataSourceCtx.name()));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::ContractLineIdProperty, any2Str(this.ContractLineId));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::ContractIdProperty, any2Str(this.ProjectContractId));
        _activityContext.addCustomProperty(ProjOpsInstrumentationBaseActitivies::Company, any2Str(this.DataAreaId));
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProjOpsFeatureStatus</Name>
				<Source><![CDATA[
    private void checkProjOpsFeatureStatus()
    {
        DataAreaId dataAreaId = this.DataAreaId ? this.DataAreaId : curExt();
        if (!ProjProjectOperationsIntegrationFeatureHelper::isFeatureEnabled(dataAreaId))
        {
            throw error(strFmt("@ProjectOperations:ProjProjectOperationsIntegrationFeatureEntityValidation", dataAreaId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultSalesTaxGroupCode</Name>
				<Source><![CDATA[
    private void defaultSalesTaxGroupCode()
    {
        this.SalesTaxGroupCode = PSAContractLineItems::getDefaultSalesTaxGroup(this.LineType, this.ProjectContractId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDefaultLedgerDimension</Name>
				<Source><![CDATA[
    private void defaultDefaultLedgerDimension()
    {
        if (this.LineType == PSAContractLineType::Fee ||
            this.LineType == PSAContractLineType::Progress ||
            this.LineType == PSAContractLineType::UOD)
        {
            this.DefaultLedgerDimension = ProjTable::find(this.FeeProjectId).DefaultDimension;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDefaultLineAmount</Name>
				<Source><![CDATA[
    private void defaultDefaultLineAmount()
    {
        this.LineAmount = this.Quantity * this.UnitPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProjInvoiceProjId</Name>
				<Source><![CDATA[
    private void defaultProjInvoiceProjId()
    {
        this.ProjInvoiceProjId = this.ProjectContractId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLineType</Name>
				<Source><![CDATA[
    private void defaultLineType()
    {
        if (!this.isFieldSet(fieldNum(ProjProjectContractLineEntity, BillingMethod)))
        {
            // Don't default if the billing method has not been explicitly set.
            return;
        }

        switch (this.BillingMethod)
        {
            case ProjContractBillingMethod::FixedPrice:
                this.LineType = PSAContractLineType::LumpSum;
                break;

            case ProjContractBillingMethod::TimeMaterial:
                this.LineType = PSAContractLineType::TAndM;
                break;

            default:
                info(strFmt("@Proj:ProjProjectContractLineEntity_DefaultLineType", this.BillingMethod));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnitPrice</Name>
				<Source><![CDATA[
    private boolean validateUnitPrice()
    {
        if (this.isLineTypeNotUOD() &&
            this.UnitPrice)
        {
            return checkFailed(strFmt("@Proj:ProjProjectContractLineEntity_FieldValidation", fieldStr(ProjProjectContractLineEntity, UnitPrice), this.LineType));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQuantity</Name>
				<Source><![CDATA[
    private boolean validateQuantity()
    {
        if (this.isLineTypeNotUOD() &&
            this.Quantity)
        {
            return checkFailed(strFmt("@Proj:ProjProjectContractLineEntity_FieldValidation", fieldStr(ProjProjectContractLineEntity, Quantity), this.LineType));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateUnitSymbol</Name>
				<Source><![CDATA[
    private boolean validateUnitSymbol()
    {
        if (this.isLineTypeNotUOD() &&
            this.UnitSymbol)
        {
            return checkFailed(strFmt("@Proj:ProjProjectContractLineEntity_FieldValidation", fieldStr(ProjProjectContractLineEntity, UnitSymbol), this.LineType));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isLineTypeNotUOD</Name>
				<Source><![CDATA[
    private boolean isLineTypeNotUOD()
    {
        return this.LineType != PSAContractLineType::UOD;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjProjectContractLineEntityDevDoc</DeveloperDocumentation>
	<FormRef>PSAContractLineItems</FormRef>
	<Label>@Proj:ProjProjectContractLineEntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<Tags>Project contracts</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjProjectContractLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectContractLines</PublicCollectionName>
	<PublicEntityName>ProjectContractLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChangeOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractLineId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FeeCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FeePercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FeeProjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsIndirectCostIncluded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BillingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreHourTransactionsIncluded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreExpenseTransactionsIncluded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreFeeTransactionsIncluded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreItemTransactionsIncluded</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaidAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BudgetMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RetainagePercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRetentionTermId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaxGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VATCommodityCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AssessableValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumRetailPrice</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TCSGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TDSGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLedgerDimensionDisplayValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceScheduleType</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChangeOrderNumber</Name>
			<DataField>ChangeOrderNum</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractLineId</Name>
			<Label>@Proj:ProjProjectContractLineEntity_ContractLineId</Label>
			<Mandatory>No</Mandatory>
			<DataField>ContractLineNum</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FeeCategoryId</Name>
			<DataField>FeeCategoryId</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FeePercentage</Name>
			<DataField>FeePercentage</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FeeProjectId</Name>
			<DataField>FeeProjId</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsIndirectCostIncluded</Name>
			<DataField>IncludeIndirectCost</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>LineDesc</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineType</Name>
			<DataField>LineType</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BillingMethod</Name>
			<DataField>BillingMethod</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreHourTransactionsIncluded</Name>
			<DataField>IncludeHourTrans</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreExpenseTransactionsIncluded</Name>
			<DataField>IncludeExpenseTrans</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreFeeTransactionsIncluded</Name>
			<DataField>IncludeFeeTrans</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreItemTransactionsIncluded</Name>
			<DataField>IncludeItemTrans</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineAmount</Name>
			<DataField>LineValue</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaidAmount</Name>
			<DataField>PaidAmount</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BudgetMethod</Name>
			<DataField>ProgressBudgetMethod</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectContractId</Name>
			<DataField>ProjectContractId</DataField>
			<DataSource>ProjectContractLineIntegration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RetainagePercentage</Name>
			<DataField>RetainagePercentage</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerRetentionTermId</Name>
			<DataField>RetainageRule</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCode</Name>
			<DataField>SalesTaxGroup</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VATCommodityCode</Name>
			<DataField>TaxInventVATCommodityCodeId</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitPrice</Name>
			<DataField>UnitPrice</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Units</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitSymbol</Name>
			<DataField>UOM</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssessableValue</Name>
			<DataField>AssessableValue_IN</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumRetailPrice</Name>
			<DataField>MaximumRetailPrice_IN</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TCSGroupCode</Name>
			<DataField>TCSGroup_IN</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TDSGroupCode</Name>
			<DataField>TDSGroup_IN</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineSequenceNumber</Name>
			<DataField>LineSequenceNumber</DataField>
			<DataSource>ProjectContractLineIntegration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjInvoiceProjId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ProjInvoiceProjId</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>PSAContractLineItemsSetup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StartDate</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>StartDate</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EndDate</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>EndDate</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceScheduleType</Name>
			<DataField>InvoiceScheduleType</DataField>
			<DataSource>PSAContractLineItems</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjectContractId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineSequenceNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DefaultDimensionDimensionSet</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ProjectContractLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PSAContractLineItems</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PSAContractLineItems</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjectContractLineIntegration</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProjectContractLineIntegration</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ProjectContractLineIntegration</Name>
								<JoinRelationName>PSAContractLineItems</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PSAContractLineItemsSetup</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PSAContractLineItemsSetup</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PSAContractLineItemsSetup</Name>
								<Field>ContractLineNum</Field>
								<JoinDataSource>PSAContractLineItems</JoinDataSource>
								<RelatedField>ContractLineNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>PSAContractLineItems</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>