<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollWorkerEnrolledAccrualEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PayrollWorkerEnrolledAccrualEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow()
    {
        this.initializeValues();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValues</Name>
				<Source><![CDATA[
    private void initializeValues()
    {
        if (this.AccrualId)
        {
            PayrollAccrualRecId payrollAccrualRecId = payrollAccrual::findByAccrual(this.AccrualId).RecId;
            this.AccrualYearStartDate = PayrollWorkerEnrolledAccrual::setAccrualYearStartDate(payrollAccrualRecId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            this.initializeValues();
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PayrollWorkerEnrolledAccrualEntity, PayrollWorkerEnrolledAccrual))
        {
            // When inserting a new worker enrolled accrual plan, also create a default accrual adjustment
            PayrollWorkerEnrolledAccrual accrualPlan = _dataSourceCtx.getBuffer();
            this.insertDefaultAccrualAdjustmentForNewAccrualPlan(accrualPlan);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertDefaultAccrualAdjustmentForNewAccrualPlan</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a default PayrollWorkerAccrualAdjustment record associated with a given worker enrolled benefit accrual plan.
    /// This matches the functionality performed when a worker benefit enrollment is created via the user interface.
    /// </summary>
    /// <param name = "_accrualPlan">The plan to which the created adjustment should be related.</param>
    private void insertDefaultAccrualAdjustmentForNewAccrualPlan(PayrollWorkerEnrolledAccrual _accrualPlan)
    {
        PayrollWorkerAccrualAdjustment accrualAdjustment;
        accrualAdjustment.AdjustedHours = 0;
        accrualAdjustment.AdjustmentType = PayrollAccrualAdjustmentType::CarryForwardBalance;
        accrualAdjustment.Description = "@Payroll:InitialCarryForwardBalance";
        accrualAdjustment.WorkerEnrolledAccrual = _accrualPlan.RecId;
        accrualAdjustment.TransactionDate = _accrualPlan.AccrualYearStartDate;
        accrualAdjustment.insert();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Label>@Payroll:WorkerEnrolledBenefitAccrual</Label>
	<Tags>Worker associations</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PayrollWorkerEnrolledAccrualStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Payroll</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>WorkerEnrolledAccruals</PublicCollectionName>
	<PublicEntityName>WorkerEnrolledAccrual</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccrualId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccrualDateBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonnelNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccrualId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccrualDateBasis</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsAccrualStopped</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Accrual</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Accrual</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccrualDateBasis</Name>
			<DataField>AccrualDateBasis</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccrualYearStartDate</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccrualYearStartDate</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsAccrualStopped</Name>
			<DataField>IsAccrualStopped</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUsageStopped</Name>
			<DataField>IsUsageStopped</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Worker</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Worker</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomAccuralDate</Name>
			<DataField>CustomAccuralDate</DataField>
			<DataSource>PayrollWorkerEnrolledAccrual</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PersonnelNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccrualId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>AccrualId</DataField>
			<DataSource>PayrollAccrual</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>AccrualId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PersonnelNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>PayrollAccrualPlan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>PayrollAccrualPlanEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>PayrollAccrualPlan</RelatedDataEntityRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>WorkerEnrolledAccruals</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Accrual</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>HcmWorker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmWorkerEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>HcmWorker</RelatedDataEntityRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Role>WorkerEnrolledAccruals</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Worker</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PayrollWorkerEnrolledAccrual</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PayrollWorkerEnrolledAccrual</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>HcmWorker</Name>
								<JoinRelationName>HCMWorker</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PayrollAccrual</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PayrollAccrual</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>PayrollAccrual</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>