<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailPackageLinesEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailPackageLinesEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findDimCombination</Name>
				<Source><![CDATA[
    // Find Inventory dimension combination...
    private InventDimCombination findDimCombination()
    {
        InventDimCombination inventDimCombination;
        InventDim inventDim;
        InventTable InventTable;
        EcoResProduct ecoResProduct;

        // Find inventory dimension if any item dimension exists on the entity.
        if (this.Color || this.Size || this.Style || this.ConfigId)
        {
            select firstonly inventDimCombination
            where inventDimCombination.DistinctProductVariant != 0
                && inventDimCombination.ItemId == this.ItemId
                join inventDim
                    where inventDim.inventDimId == inventDimCombination.InventDimId
                        && inventDim.InventColorId == this.Color
                        && inventDim.InventSizeId == this.Size
                        && inventDim.InventStyleId == this.Style
                        && inventDim.configId == this.ConfigId
                ;

            if (!inventDimCombination)
            {
                throw error(strFmt("@Retail:InvalidVariant", this.Color, this.Size,
                    this.Style, this.ConfigId));
            }
        }

        return inventDimCombination;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Select a record from entity.
    /// </summary>
    public void postLoad()
    {
        // Find unmapped field value through InventDimId.
        if (this.InventDimId)
        {
            InventDim   inventDim;

            select * from inventDim where inventDim.inventDimId == this.InventDimId;

            this.Color = inventDim.InventColorId;
            this.Size = inventDim.InventSizeId;
            this.Style = inventDim.InventStyleId;
            this.ConfigId = inventDim.configId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Map the data entity to data source.
    /// As the table key contains InventDimId field which should not be exposed to customer, this method will convert the dimension (color/size/style/config) to the InventDimId.
    ///     And then decide whether it's an insert or update operation.
    ///Note: As this method changed the Database operation, then the insert/update count in DMF may not be correct.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source data entity runtime context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailPackageLinesEntity, RetailPackageLines))
        {
            // get the entity data source buffer and fill it with values.
            RetailPackageLines packageLines = _dataSourceCtx.getBuffer();

            InventDimCombination dimCombination = this.findDimCombination();

            if (dimCombination)
            {
                packageLines.InventDimId = dimCombination.InventDimId;
                packageLines.VariantId = dimCombination.RetailVariantId;
            }
            else
            {
                packageLines.initFromInventTable(packageLines.inventTable());
            }

            _dataSourceCtx.setBuffer(packageLines);

            // Reset the DatabaseOperation as one of the key field InventDimId is set in the above logic.
            //    In some case, it will incorrectly set the update scenario to Insert as the InventDimId value is empty.
            //    After setting the correct InventDimId, the DB operation should be re-evaluated.
            if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
            {
                RetailPackageLines existPackageLines;

                select firstOnly existPackageLines
                where existPackageLines.PackageId == this.PackageId &&
                    existPackageLines.ItemId == this.ItemId &&
                    existPackageLines.InventDimId == packageLines.InventDimId &&
                    existPackageLines.PurchUnit == this.PurchaseUnit;

                if (existPackageLines.RecId)
                {
                    _dataSourceCtx.setBuffer(existPackageLines);
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                }
            }
        }

        // This should be done at the end to assign other entity field values to data source
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert entity data source records (dimension check logic is moved to mapEntityToDataSource method, keep this override for compatibility  check reason).
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source data entity runtime context.</param>
    /// <returns>A boolean value.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        ret = super(_entityCtx, _dataSourceCtx);
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@RET4398</Label>
	<Tags>Package</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailPackageLinesStaging</DataManagementStagingTable>
	<EnableSetBasedSqlOperations>No</EnableSetBasedSqlOperations>
	<IsPublic>Yes</IsPublic>
	<Modules>Merchandising</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailPackageLines</PublicCollectionName>
	<PublicEntityName>RetailPackageLines</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDimId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventDimId</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VariantId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>VariantId</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackageId</Name>
			<DataField>PackageId</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnit</Name>
			<DataField>PurchUnit</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Qty</DataField>
			<DataSource>RetailPackageLines</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Color</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Size</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Style</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ConfigId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResConfigurationName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>PackageId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PurchaseUnit</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Color</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Size</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Style</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ConfigId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>RetailPackageEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailPackageEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>PackageId</Field>
					<RelatedField>PackageId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ItemNumber</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ItemNumberV2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailPackageLines</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailPackageLines</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>