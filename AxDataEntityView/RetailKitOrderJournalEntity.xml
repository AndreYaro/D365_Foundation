<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailKitOrderJournalEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailKitOrderJournalEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Inserts entity data source value.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source entity runtime context.</param>
    /// <returns>True if entity value is inserted successfuly; otherwise false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.ValidateAndFill(_entityCtx, _dataSourceCtx);

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates entity data source value.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source entity runtime context.</param>
    /// <returns>True if entity value is updated successfuly; otherwise false.</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.ValidateAndFill(_entityCtx, _dataSourceCtx);

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>ValidateAndFill</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate the records and fill the entity data source.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source entity runtime context.</param>
    private void ValidateAndFill(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailKitOrderJournalEntity, RetailKitOrderJournal))
        {
            EcoResProduct ecoResProduct;
            EcoResProductVariantConfiguration ecoResProductVariantConfiguration;
            EcoResConfiguration ecoResConfiguration;

            // get the corresponding kit variant's distincProductVariantId for the specified ConfigId.  For kits there is a one to one relationship between configId and distincProductVariantId.
            if (this.KitConfigId)
            {
                select firstonly ecoResProductVariantConfiguration
                join ecoResConfiguration
                    where ecoResConfiguration.RecId == ecoResProductVariantConfiguration.Configuration &&
                          ecoResConfiguration.Name == this.KitConfigId
                join ecoResProduct
                    where ecoResProduct.RecId == ecoResProductVariantConfiguration.DistinctProductVariant;

                if (!ecoResProductVariantConfiguration)
                {
                    throw error("Invalid product variant configuration.");
                }
            }

            this.DistinctProductVariantID =  ecoResProductVariantConfiguration.DistinctProductVariant;

            RetailKitOrder retailKitOrder;
            select retailKitOrder where retailKitOrder.Name == this.Name;

            // if journal Id is empty generate the corresponding BOM journal for the kit order line
            if (this.JournalId == '')
            {
                // insert into RetailKitOrderJournal and creates the required BOM Journals for the order line.
                RetailKitAssemblyOrder::processOrder(retailKitOrder, this.DistinctProductVariantID, this.Quantity);

                // set the dataSource runtime context Datasaved flag to true as the insertion is already done in this method
                // this prevents the framework from inserting the record twice.
                _dataSourceCtx.setDataSaved(true);

                // set the RetailkitOrderJournal buffer for the data source entity runtime context.
                RetailKitOrderJournal kitOrderJournal;
                select kitOrderJournal where kitOrderJournal.EcoResDistinctProductVariantID == this.DistinctProductVariantID &&
                kitOrderJournal.RetailKitOrder == retailKitOrder.RecId;

                this.JournalId = kitOrderJournal.JournalId;

                _dataSourceCtx.setBuffer(kitOrderJournal);
            }
            else
            {
                RetailKitOrderJournal kitOrderJournalBuffer = _dataSourceCtx.getBuffer();
                kitOrderJournalBuffer.InventDataAreaId = retailKitOrder.InventDataAreaId;
                kitOrderJournalBuffer.EcoResDistinctProductVariantID = this.DistinctProductVariantID;
                _dataSourceCtx.setBuffer(kitOrderJournalBuffer);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@REX1068</Label>
	<Tags>Kits</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailKitOrderJournalStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Merchandising</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailKitOrderJournals</PublicCollectionName>
	<PublicEntityName>RetailKitOrderJournal</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>RetailKitOrder</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KitProductNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResProductMaster</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KitConfigId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Name</DataField>
			<DataSource>EcoResConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Quantity</DataField>
			<DataSource>RetailKitOrderJournal</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DistinctProductVariantID</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>EcoResDistinctProductVariantID</DataField>
			<DataSource>RetailKitOrderJournal</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>JournalId</DataField>
			<DataSource>RetailKitOrderJournal</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>InventDataAreaId</DataField>
			<DataSource>RetailKitOrderJournal</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KitOrder</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>RecId</DataField>
			<DataSource>RetailKitOrder</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>KitProductNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>KitConfigId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Name</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>RetailKitOrderEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>RetailKitOrderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Name</Field>
					<RelatedField>Name</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailKitOrderJournal</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailKitOrderJournal</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailKitOrder</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RetailKitOrder</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>RetailKitOrder</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResDistinctProductVariant</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResDistinctProductVariant</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductMaster</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductMaster</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>EcoResProductMaster</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductVariantConfiguration</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductVariantConfiguration</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResConfiguration</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResConfiguration</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinRelationName>SourceConfiguration</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>ProductVariant</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>EcoResDistinctProductVariant</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>