<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ResourceRoleCharacteristicsEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ResourceRoleCharacteristicsEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getRoleId</Name>
				<Source><![CDATA[
    private str getRoleId()
    {
        ResCharacteristicRequirement    resCharactersticRequirement;
        ResourceCategoryView            resourceCategoryView;

        select firstonly CategoryId from resourceCategoryView
            exists join resCharactersticRequirement
                where resourceCategoryView.RecId == resCharactersticRequirement.ReqEntity
                 && resCharactersticRequirement.RecId == this.CharacteristicRequirement;

         return resourceCategoryView.CategoryId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCharactersticRequirement</Name>
				<Source><![CDATA[
    private ResCharacteristicRequirementRecId getCharactersticRequirement()
    {
        ResCharacteristicRequirementRecId resCharacteristicRequirementRecId;

        if (this.RoleId)
        {
            ResCharacteristicRequirement    resCharactersticRequirement;
            ResourceCategoryView            resourceCategoryView;

            select firstonly RecId from resCharactersticRequirement
                exists join resourceCategoryView
                    where resCharactersticRequirement.ReqEntity == resourceCategoryView.RecId
                     && resCharactersticRequirement.ReqEntityType == this.ReqEntityType
                     && resourceCategoryView.CategoryId == this.RoleId;

            if (resCharactersticRequirement.RecId == 0)
            {
                select firstonly RecId from resourceCategoryView
                    where resourceCategoryView.CategoryId == this.RoleId;

                resCharactersticRequirement.clear();
                resCharactersticRequirement.ReqEntityType = this.ReqEntityType;
                resCharactersticRequirement.ReqEntity = resourceCategoryView.RecId;
                resCharactersticRequirement.insert();
            }

            resCharacteristicRequirementRecId = resCharactersticRequirement.RecId;
        }

        return resCharacteristicRequirementRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCharacterstic</Name>
				<Source><![CDATA[
    private RefRecId getCharacterstic()
    {
        ResCharacteristicView resCharacteristicView;

        select firstonly characteristic from resCharacteristicView
            where resCharacteristicView.Name == this.CharacteristicId
             && resCharacteristicView.CharacteristicSet == this.CharacteristicSet;

        return resCharacteristicView.characteristic;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityType</Name>
				<Source><![CDATA[
    private ResCharacteristicReqEntityType getEntityType()
    {
        ResCharacteristicRequirement resCharacteristicRequirement;

        select firstonly ReqEntityType from resCharacteristicRequirement
                where resCharacteristicRequirement.RecId == this.CharacteristicRequirement;

        return resCharacteristicRequirement.ReqEntityType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        this.RoleId = this.getRoleId();

        super();

        this.ReqEntityType = this.getEntityType();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ResourceRoleCharacteristicsEntity, ResCharacteristicRequirementLine):

                ResCharacteristicRequirementLine resCharacteristicRequirementLine = _dataSourceCtx.getBuffer();

                resCharacteristicRequirementLine.CharacteristicRequirement = this.getCharactersticRequirement();
                resCharacteristicRequirementLine.Characteristic = this.getCharacterstic();

                _dataSourceCtx.setBuffer(resCharacteristicRequirementLine);
            break;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ResResourceCategoryMenuItem</FormRef>
	<Label>@Proj:ResourceRoleCharacteristics</Label>
	<Tags>Project resourcing</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ResourceRoleCharacteristicsStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ResourceRoleCharacteristicsEntities</PublicCollectionName>
	<PublicEntityName>ResourceRoleCharacteristicsEntity</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CharacteristicId</Name>
			<DataField>CharacteristicId</DataField>
			<DataSource>ResCharacteristicRequirementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CharacteristicRequirement</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>CharacteristicRequirement</DataField>
			<DataSource>ResCharacteristicRequirementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CharacteristicSet</Name>
			<DataField>CharacteristicSet</DataField>
			<DataSource>ResCharacteristicRequirementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RoleId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<ExtendedDataType>PSASchedRoleId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<StringSize>20</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Characteristic</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Characteristic</DataField>
			<DataSource>ResCharacteristicRequirementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>ReqEntityType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Res:CharacteristicRequirementType</Label>
			<Mandatory>Yes</Mandatory>
			<IsComputedField>No</IsComputedField>
			<EnumType>ResCharacteristicReqEntityType</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CharacteristicId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CharacteristicSet</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>RoleId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ReqEntityType</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ResCharacteristicRequirementLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ResCharacteristicRequirementLine</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>