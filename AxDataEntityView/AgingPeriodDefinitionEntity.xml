<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>AgingPeriodDefinitionEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class AgingPeriodDefinitionEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        // Skip validation of Unit field, it's value will be validated after the entire set is imported into the staging table.
        this.skipDataSourceValidateField(fieldNum(AgingPeriodDefinitionEntity, Unit), true);

        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    [Microsoft.Dynamics.BusinessPlatform.SharedTypes.InternalUseOnlyAttribute]
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        AgingPeriodDefinitionStaging stagingTable, stagingTableZeroExists;
        StatRepIntervalLine statRepIntervalLine;

        // Verify that the staging data and the existing table contain a zero record for each Aging period definition.
        while select AgingPeriodDefinition, LineNum from stagingTable
            where stagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && stagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
            notexists join AgingPeriodDefinition from stagingTableZeroExists
                group by stagingTableZeroExists.AgingPeriodDefinition
                where stagingTableZeroExists.Unit == 0 &&
                    stagingTableZeroExists.AgingPeriodDefinition == stagingTable.AgingPeriodDefinition
                    && stagingTableZeroExists.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && stagingTableZeroExists.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
        {
            statRepIntervalLine = StatRepIntervalLine::findZeroColumn(stagingTable.AgingPeriodDefinition);
            if (!statRepIntervalLine.RecId || statRepIntervalLine.LineNum == stagingTable.LineNum)
            {
                throw error("@SYS78478");
            }
        }

        // Verify unlimited buckets are either the first or the last line
        while select AgingPeriodDefinition, LineNum, Unit from stagingTable
            where stagingTable.Interval == PerDayWeekMthQtYr::Unlimited
                && stagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && stagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
        {
            if ((stagingTable.Unit < 0 && AgingPeriodDefinitionEntity::findColumnLess(stagingTable.AgingPeriodDefinition, stagingTable.LineNum, _dmfDefinitionGroupExecution)) ||
                (stagingTable.Unit > 0 && AgingPeriodDefinitionEntity::findColumnLarger(stagingTable.AgingPeriodDefinition, stagingTable.LineNum, _dmfDefinitionGroupExecution)) ||
                (stagingTable.Unit == 0 && AgingPeriodDefinitionEntity::findColumnLess(stagingTable.AgingPeriodDefinition, stagingTable.LineNum, _dmfDefinitionGroupExecution) &&
                    AgingPeriodDefinitionEntity::findColumnLarger(stagingTable.AgingPeriodDefinition, stagingTable.LineNum, _dmfDefinitionGroupExecution)))
            {
                throw error("@SYS78476");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findColumnLess</Name>
				<Source><![CDATA[
    private static AgingPeriodDefinitionStaging findColumnLess(CustVendReportName _agingPeriodDefinition, LineNum _lineNum, DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        AgingPeriodDefinitionStaging stagingTable;

        select firstonly stagingTable
            order by LineNum desc
                where stagingTable.AgingPeriodDefinition == _agingPeriodDefinition
                    && stagingTable.LineNum < _lineNum 
                    && stagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && stagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId;

        return stagingTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findColumnLarger</Name>
				<Source><![CDATA[
    private static AgingPeriodDefinitionStaging findColumnLarger(CustVendReportName _agingPeriodDefinition, LineNum _lineNum, DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        AgingPeriodDefinitionStaging stagingTable;

        select firstonly stagingTable
            order by LineNum desc
                where stagingTable.AgingPeriodDefinition == _agingPeriodDefinition 
                    && stagingTable.LineNum > _lineNum
                    && stagingTable.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && stagingTable.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId;

        return stagingTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@AccountsPayable:AgingPeriodDefinitionEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>CustVendReportInterval</FormRef>
	<Label>@SYS78297</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>AgingPeriodDefinitionStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>APARShared</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>AgingPeriodDefinitions</PublicCollectionName>
	<PublicEntityName>AgingPeriodDefinition</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AgingPeriodDefinition</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrintDirection</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Period</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Unit</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Interval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AgingIndicator</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AgingPeriodDefinition</Name>
			<DataField>Name</DataField>
			<DataSource>StatRepInterval</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>StatRepInterval</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrintDirection</Name>
			<DataField>PrintDirection</DataField>
			<DataSource>StatRepInterval</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNum</Name>
			<Label>@AccountsPayable:AgingPeriodLineNumber</Label>
			<DataField>LineNum</DataField>
			<DataSource>StatRepIntervalLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Period</Name>
			<DataField>Heading</DataField>
			<DataSource>StatRepIntervalLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Unit</Name>
			<DataField>Qty</DataField>
			<DataSource>StatRepIntervalLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Interval</Name>
			<DataField>IntervalType</DataField>
			<DataSource>StatRepIntervalLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AgingIndicator</Name>
			<DataField>AgingIndicator</DataField>
			<DataSource>StatRepIntervalLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>AgingPeriodDefinition</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>Staging</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>AgingPeriodDefinitionStaging</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AgingPeriodDefinitionStagingRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AgingPeriodDefinitionEntityRole</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>AgingPeriodDefinition</Field>
					<RelatedField>AgingPeriodDefinition</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>LineNum</Field>
					<RelatedField>LineNum</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>StatRepInterval</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>StatRepInterval</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>StatRepIntervalLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>StatRepIntervalLine</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>CustVendRepInterval</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>