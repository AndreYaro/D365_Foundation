<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjSalesItemRequirementEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjSalesItemRequirementEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveProductCategory</Name>
				<Source><![CDATA[
    private EcoResCategory resolveProductCategory()
    {
        EcoResCategory category;
        EcoResCategoryHierarchyRole hierarchyRole;

        select firstonly hierarchyRole where hierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::Sales;
        if (hierarchyRole)
        {
            category = EcoResCategory::findByName(this.SalesCategoryName, hierarchyRole.CategoryHierarchy);
        }

        return category;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesCategory):
                ret = this.resolveProductCategory();
                break;

            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, InventDim):
                DataEntityDataSourceRuntimeContext lineCtx = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_ItemReq));
                SalesLine line = lineCtx.getBuffer();

                ret = InventDim::find(line.InventDimId);
                break;

            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, LogisticsPostalAddressBaseEntity):
                ret = TradeEntitySpecificDeliveryAddress::findLogisticsPostalAddressBaseEntityDataSource();
                break;

            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, ProjFundingSource):
                if (ProjItemRequirementMultipleFundingSourcesFeatureHelper::isFeatureEnabled())
                {
                    ProjTable projTable = ProjTable::find(this.ProjectId);
                    if (projTable && projTable.ProjInvoiceProjId)
                    {
                        ret = ProjFundingSource::findContractFundingSource(projTable.ProjInvoiceProjId, this.InvoiceAccount);
                    }
                }
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_ItemReq))
        {
            SalesLine salesLine = _dataSourceCtx.getBuffer();

            salesLine = this.createOrUpdateSalesLine(salesLine);

            _dataSourceCtx.setBuffer(salesLine);
        }

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_BR))
        {
            if (!_dataSourceCtx.getBuffer().validateField(fieldnum(SalesLine_BR, DeliveryCFOPTable_BR)))
            {
                throw Exception::Error;
            }
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, LogisticsPostalAddressBaseEntity):
                this.TradeEntitySpecificDeliveryAddress::postInsertLogisticsPostalAddressBaseEntityDataSource(_dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProjSalesItemRequirementEntity, LogisticsPostalAddressBaseEntity):
                if (_dataSourceCtx.isAnyEntityFieldSet(this))
                {
                    this.TradeEntitySpecificDeliveryAddress::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_dataSourceCtx);
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.getDatabaseOperation())
        {
            case DataEntityDatabaseOperation::Insert:
                if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_ItemReq))
                {
                    SalesLine           salesLine = _dataSourceCtx.getBuffer();

                    salesLine = this.createOrUpdateSalesLine(salesLine);

                    _dataSourceCtx.setBuffer(salesLine);
                }
            case DataEntityDatabaseOperation::Update:
                if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, InventDim))
                {
                    InventDim   inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                    _dataSourceCtx.setBuffer(inventDim);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_ItemReq))
        {
            SalesLine salesLine = _dataSourceCtx.getBuffer();
            this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(salesLine.inventDim());
            this.TradeEntitySpecificDeliveryAddress::mapSavedPostalAddressToEntity(_entityCtx,  salesLine.DeliveryPostalAddress);
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddressPartyRecId</Name>
				<Source><![CDATA[
    // This method implements the interface defined by <c>TradeEntitySpecificDeliveryAddress</c>
    public RecId deliveryAddressPartyRecId()
    {
        return SalesTable::find(SalesLine::findInventTransId(this.InventTransactionId).SalesId).custTable_CustAccount().Party;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryAddressOrderSpecificComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str isDeliveryAddressOrderSpecificComputedColumnDefinition()
    {
        // The <c>IsDeliveryAddressOrderSpecific</c> field is only designed for import scenarios
        // so we will always return 'No' for export scnearios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        this.skipDataSourceValidateField(fieldNum(ProjSalesItemRequirementEntity, ProjectTransactionId), true);
        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>createOrUpdateSalesLine</Name>
				<Source><![CDATA[
    public SalesLine createOrUpdateSalesLine(SalesLine salesLine) 
    {
        ProjTable       projtable = ProjTable::find(this.ProjectId);

        salesLine.CurrencyCode = this.CurrencyCode ? this.CurrencyCode : projtable.currencyId();

        if (this.ProjectId)
        {
            if (ProjItemRequirementMultipleFundingSourcesFeatureHelper::isFeatureEnabled())
            {
                ProjFundingSource fundingSource;
                boolean isDefaultingFlightEnabled = ProjSalesItemRequirementEntityDefaultingFlight::instance().isEnabled();

                if (isDefaultingFlightEnabled && !this.InvoiceAccount)
                {
                    fundingSource = ProjFundingSource::find(projtable.DefaultFundingSource);
                }
                else
                {
                    fundingSource = ProjFundingSource::findContractFundingSource(projtable.ProjInvoiceProjId, this.InvoiceAccount);
                }

                if (fundingSource)
                {
                    salesLine.ProjFundingSource = fundingSource.RecId;

                    if (isDefaultingFlightEnabled)
                    {
                        this.InvoiceAccount = fundingSource.FundingSourceId;
                    }
                }
            }

            SalesTable salesTable;
            boolean projectHasMultipleFundingSourcesWithFeatureEnabled = projtable.hasMultipleFundingSourcesWithItemReqMultFundSourcesFeatureEnabled();

            if (salesLine.ProjFundingSource && projectHasMultipleFundingSourcesWithFeatureEnabled)
            {
                salesTable = projtable.salesTable_ItemReqMultFundingSources(salesLine.CurrencyCode, salesLine.ProjFundingSource);

                if (!salesTable)
                {
                    salesTable = projTable.createSalesTable_ItemReqMultFundingSources(salesLine.CurrencyCode, salesLine.ProjFundingSource);
                    salesTable.CustGroup = CustTable::find(salesTable.CustAccount).CustGroup;
                    salesTable.DefaultDimension = this.DefaultDimensionDisplayValue ? this.DefaultDimension : projTable.DefaultDimension;
                }
            }
            else if (!projectHasMultipleFundingSourcesWithFeatureEnabled)
            {
                salesTable = projtable.salesTable_ItemReq(salesLine.CurrencyCode);

                if (!salesTable)
                {
                    projtable.createSalesTable_ItemReq(salesLine.CurrencyCode);
                    salesTable.CustAccount = projtable.CustAccount;
                    salesTable.CustGroup = CustTable::find(salesTable.CustAccount).CustGroup;
                    salesTable.DefaultDimension = this.DefaultDimensionDisplayValue ? this.DefaultDimension : projTable.DefaultDimension;
                }
            }
            else
            {
                throw error("@Proj:ProjItemRequirementEntityErrorMessage");
            }
            
            this.setDeliveryDates(salesTable, salesLine, projtable);
        }

        salesLine.ProjLinePropertyId = this.ProjectLinePropertyId ? this.ProjectLinePropertyId : ProjLinePropertySetup::findLinePropertyId(this.ProjectId,this.ProjectCategoryId);
        salesLine.DefaultDimension = this.DefaultDimensionDisplayValue ? this.DefaultDimension : salesLine.DefaultDimension;

        if (!ProjValProjCategorySetUp::checkProjCategory(this.ProjectId,this.ProjectCategoryId))
        {
            this.ProjectCategoryId = '';
        }

        if (!this.DeliveryName)
        {
            salesLine.setAddressFromProjTable(projtable);
        }

        if (!salesLine.ItemId)
        {
            salesLine.StockedProduct = NoYes::No;
        }
        else
        {
            InventModelGroup inventModelGroup = InventTable::modelGroupByItemId(salesLine.ItemId);
            salesLine.StockedProduct = inventModelGroup.isStocked()? NoYes::Yes : NoYes::No;
        }

        salesLine.InventDimId = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDimId();

        if (!salesLine.SalesPrice)
        {
            salesLine.setPriceDisc(salesLine.inventDim(), false);
        }

        if (salesLine.QtyOrdered)
        {
            salesLine.LineAmount = salesLine.calcLineAmount(salesLine.QtyOrdered);
        }

        SalesLine       saleLineLocal;
        SalesParmLine   salesParmLine;

        select firstonly RemainAfter, DeliverNow from salesParmLine
            exists join saleLineLocal
                where salesParmLine.InventTransId == saleLineLocal.InventTransId
                    && saleLineLocal.ProjTransId == this.ProjectTransactionId
                    && this.ProjectTransactionId != "";

        if (salesParmLine)
        {
            salesLine.RemainSalesPhysical = salesParmLine.RemainAfter;
            salesLine.RemainSalesFinancial = salesParmLine.DeliverNow;
        }
        else
        {
            salesLine.RemainSalesPhysical = salesLine.SalesQty;
        }

        return salesLine;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjSalesItemRequirementEntity, SalesLine_BR))
        {
            if (!_dataSourceCtx.getBuffer().validateField(fieldnum(SalesLine_BR, DeliveryCFOPTable_BR)))
            {
                throw Exception::Error;
            }
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDeliveryDates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the receipt and shipping dates for the sales order.
    /// </summary>
    /// <param name = "_salesTable">Sales order table.</param>
    /// <param name = "_salesLine">Sales order line.</param>
    /// <param name = "_projTable">Project table.</param>
    private void setDeliveryDates(SalesTable _salesTable, SalesLine _salesLine, ProjTable _projTable)
    {
        Transdate projSysDate = DateTimeUtil::date(DateTimeUtil::getSystemDateTime());

        CustVendTransportDays transportDays = CustVendTransportPointLine::defaultTransportDays(this.ModeOfDelivery,this.ShippingWareHouseId,this.DeliveryAddressCountryRegionId,this.DeliveryAddressStateId,this.DeliveryAddressCountyId,this.DeliveryAddressZipCode);

        _salesTable.ShippingDateRequested = this.ShippingDateRequested ? this.ShippingDateRequested : projSysDate;
        _salesTable.ReceiptDateRequested  = this.ReceiptDateRequested  ? this.ReceiptDateRequested  : projSysDate;
        _salesTable.ShippingDateConfirmed = this.ShippingDateConfirmed ? this.ShippingDateConfirmed : projSysDate;
        _salesTable.ReceiptDateConfirmed  = this.ReceiptDateConfirmed  ? this.ReceiptDateConfirmed  : projSysDate + transportDays;

        if (SalesParameters::find().DeliveryDateControlType != SalesDeliveryDateControlType::None)
        {
            SalesLineType_ProjectItemReq::newFromSalesLine(_salesLine).initValue();
            _salesLine.initFromProjTable(_projTable);

            // Fetching available receipt/shipping dates before importing.
            SalesCalcAvailableDlvDates salesCalcAvailableDlvDates = SalesCalcAvailableDlvDates::newCommonSalesDlvDateType(_salesLine);
            salesCalcAvailableDlvDates.calcDatesFromUTCNow();
            SalesAvailableDlvDatesTmp salesAvailableDlvDatesTmp = salesCalcAvailableDlvDates.parmSalesAvailableDlvDatesTmp();

            if (salesAvailableDlvDatesTmp.AvailableShippingDate)
            {
                if (this.ShippingDateRequested > salesAvailableDlvDatesTmp.AvailableShippingDate)
                {
                    _salesTable.ShippingDateRequested = this.ShippingDateRequested;
                    _salesTable.ShippingDateConfirmed = this.ShippingDateConfirmed;
                }
                else
                {
                    _salesTable.ShippingDateRequested = salesAvailableDlvDatesTmp.AvailableShippingDate;
                    _salesTable.ShippingDateConfirmed = salesAvailableDlvDatesTmp.AvailableShippingDate;
                }
            }

            if (salesAvailableDlvDatesTmp.AvailableReceiptDate)
            {
                if (this.ReceiptDateRequested > salesAvailableDlvDatesTmp.AvailableReceiptDate)
                {
                    _salesTable.ReceiptDateRequested = this.ReceiptDateRequested;
                    _salesTable.ReceiptDateConfirmed = this.ReceiptDateConfirmed;
                }
                else
                {
                    _salesTable.ReceiptDateRequested = salesAvailableDlvDatesTmp.AvailableReceiptDate;
                    _salesTable.ReceiptDateConfirmed = salesAvailableDlvDatesTmp.AvailableReceiptDate;
                }
            }
        }

        _salesLine.initFromSalesTable(_salesTable);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (ProjSalesItemRequirementEntityDefaultingFlight::instance().isEnabled())
        {
            this.SalesQuantity = 1;
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<FormRef>ProjSalesItemReq</FormRef>
	<Label>@Proj:ProjectItemRequirements</Label>
	<Tags>Forecast</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjSalesItemRequirementStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjectSalesItemRequirements</PublicCollectionName>
	<PublicEntityName>ProjectSalesItemRequirement</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ActivityNumber</Name>
			<DataField>ActivityNumber</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BarCode</Name>
			<DataField>BarCode</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BarCodeType</Name>
			<DataField>BarCodeType</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsStatusStopped</Name>
			<DataField>Blocked</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPartialDeliveryPrevented</Name>
			<DataField>Complete</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipDate</Name>
			<DataField>ConfirmedDlv</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostPrice</Name>
			<DataField>CostPrice</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyCode</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryDateControl</Name>
			<DataField>DeliveryDateControlType</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryName</Name>
			<DataField>DeliveryName</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryType</Name>
			<DataField>DeliveryType</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ModeOfDelivery</Name>
			<DataField>DlvMode</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryTerms</Name>
			<DataField>DlvTerm</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDeliverNow</Name>
			<DataField>InventDeliverNow</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReferenceNumber</Name>
			<DataField>InventRefId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReferenceLot</Name>
			<DataField>InventRefTransId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReferenceType</Name>
			<DataField>InventRefType</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventTransactionId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventTransactionReturnId</Name>
			<DataField>InventTransIdReturn</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBOMId</Name>
			<DataField>ItemBOMId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<DataField>ItemId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemRouteId</Name>
			<DataField>ItemRouteId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NetAmount</Name>
			<DataField>LineAmount</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDeliveryType</Name>
			<DataField>LineDeliveryType</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Overdelivery</Name>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AutoBatchReservation</Name>
			<DataField>PdsBatchAttribAutoRes</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SameBatchSelection</Name>
			<DataField>PdsSameLot</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceUnit</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectTransactionId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ProjTransId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuantityOrdered</Name>
			<DataField>QtyOrdered</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceiptDateConfirmed</Name>
			<DataField>ReceiptDateConfirmed</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceiptDateRequested</Name>
			<DataField>ReceiptDateRequested</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainInventFinancial</Name>
			<DataField>RemainInventFinancial</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainInventPhysical</Name>
			<DataField>RemainInventPhysical</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Reservation</Name>
			<DataField>Reservation</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCategory</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SalesCategory</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPrice</Name>
			<DataField>SalesPrice</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuantity</Name>
			<DataField>SalesQty</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesStatus</Name>
			<DataField>SalesStatus</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnit</Name>
			<DataField>SalesUnit</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Scrap</Name>
			<DataField>Scrap</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ServiceOrderId</Name>
			<DataField>ServiceOrderId</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingDateConfirmed</Name>
			<DataField>ShippingDateConfirmed</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingDateRequested</Name>
			<Mandatory>No</Mandatory>
			<DataField>ShippingDateRequested</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGroup</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Underdelivery</Name>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>SalesLine_ItemReq</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCategoryName</Name>
			<DataField>Name</DataField>
			<DataSource>SalesCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LedgerDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>LedgerDimensionDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPostalAddressRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedDelveryAddress</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDunsNumber</Name>
			<DataField>DunsNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveryAddressPrivate</Name>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchNumber</Name>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderedInventoryStatusId</Name>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOneTimeDeliveryAddress</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDeliveryAddressOrderSpecificComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryCFOP</Name>
			<AccessModifier>Private</AccessModifier>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<DataField>DeliveryCFOPTable_BR</DataField>
			<DataSource>SalesLine_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryCFOPId</Name>
			<AllowEdit>Yes</AllowEdit>
			<CountryRegionCodes>BR</CountryRegionCodes>
			<Label>@GLS50825</Label>
			<Mandatory>No</Mandatory>
			<DataField>CFOPId</DataField>
			<DataSource>DeliveryCFOPTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAccount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<FeatureClass>ProjItemRequirementMultipleFundingSources</FeatureClass>
			<Mandatory>No</Mandatory>
			<DataField>FundingSourceId</DataField>
			<DataSource>ProjFundingSource</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjectTransactionId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>ItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ShippingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ShippingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>OrderedInventoryStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TradeEntitySpecificDeliveryAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimension</Name>
					<Field>DefaultDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerDimensionCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>LedgerDimension</Name>
					<Field>LedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesLine_ItemReq</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>SalesCategory</Name>
								<JoinRelationName>EcoResCategory</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>SalesLine_ItemReq</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerDimensionDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>LedgerDimensionDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>SalesLine_ItemReq</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DeliveryPostalAddress</Field>
								<JoinDataSource>SalesLine_ItemReq</JoinDataSource>
								<RelatedField>AddressRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>SalesLine_ItemReq</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesLine_BR</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SalesLine_BR</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>DeliveryCFOPTable</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>CFOPTable_BR</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>DeliveryCFOPTable_BR</Field>
										<JoinDataSource>SalesLine_BR</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>SalesLine</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjFundingSource</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjFundingSource</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjFundingSource</Field>
								<JoinDataSource>SalesLine_ItemReq</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>SalesType</Name>
						<Field>SalesType</Field>
						<Value>ItemReq</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>