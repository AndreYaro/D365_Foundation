<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomerBankAccountEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustomerBankAccountEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.saveAddressAndSetLocation(_entityCtx, _dataSourceCtx);

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerBankAccountEntity, CustBankAccount))
        {
            this.saveDefaultPaymentBankAccountForCustomer();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        this.saveAddressAndSetLocation(_entityCtx, _dataSourceCtx);

        ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerBankAccountEntity, CustBankAccount))
        {
            this.saveDefaultPaymentBankAccountForCustomer();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveAddressAndSetLocation</Name>
				<Source><![CDATA[
    private void saveAddressAndSetLocation(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (dataEntityDataSourceStr(CustomerBankAccountEntity, CustBankAccount) == _dataSourceCtx.name())
        {
            var locationRecId = LogisticsPostalAddressBaseEntity::saveAddress(_entityCtx, dataEntityDataSourceStr(CustomerBankAccountEntity, LogisticsPostalAddressBaseEntity));
            if (locationRecId)
            {
                CustBankAccount custBankAccountTable = _dataSourceCtx.getBuffer();
                custBankAccountTable.Location = locationRecId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>saveDefaultPaymentBankAccountForCustomer</Name>
				<Source><![CDATA[
    private void saveDefaultPaymentBankAccountForCustomer()
    {
        CustTable custTable = CustTable::find(this.CustomerAccountNumber);

        if (!custTable.AccountNum && !custTable.BankAccount)
        {
            checkFailed(strFmt("@SCM:BankAccountCannotBeUpdatedOnCustomer", this.BankAccountId, this.CustomerAccountNumber));
            throw Exception::Error;
        }
        else if (this.IsDefaultBankAccount != this.orig().IsDefaultBankAccount)
        {
            custTable.selectForUpdate(true);
            CustBankAccountId currentDefaultBankAccountId = this.IsDefaultBankAccount ? custTable.BankAccount : this.BankAccountId;
            CustBankAccountId newDefaultBankAccountId = this.IsDefaultBankAccount ? this.BankAccountId : '';

            if (custTable.BankAccount == currentDefaultBankAccountId)
            {
                custTable.BankAccount = newDefaultBankAccountId;

                if (!this.skipDataSourceDefaultRow())
                {
                    custTable.defaultRow();
                }

                if ((this.skipDataSourceValidateField(this.IsDefaultBankAccount) || custTable.validateField(fieldNum(CustTable, BankAccount)))
                    && (this.skipDataSourceValidateWrite() || custTable.validateWrite()))
                {
                    custTable.update();
                }
                else
                {
                    checkFailed(strFmt("@SCM:BankAccountCannotBeUpdatedOnCustomer", newDefaultBankAccountId, this.CustomerAccountNumber));
                    throw Exception::Error;
                }
            }
            else
            {
                checkFailed(strFmt("@SCM:BankAccountCannotBeUpdatedOnCustomer", this.BankAccountId, this.CustomerAccountNumber));
                throw Exception::Error;
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>isDefaultBankAccountDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the IsDefaultBankAccount computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the IsDefaultBankAccount field.
    /// </returns>
    public static str isDefaultBankAccountDefinition()
    {
        TableName entityName = tableStr(CustomerBankAccountEntity);

        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                SysComputedColumn::comparisonField(EntityName, dataEntityDataSourceStr(CustomerBankAccountEntity, CustBankAccount), fieldStr(CustBankAccount, AccountID)),
                SysComputedColumn::comparisonField(EntityName, dataEntityDataSourceStr(CustomerBankAccountEntity, CustTable), fieldStr(CustTable, BankAccount))),
            SysComputedColumn::returnLiteral(NoYes::Yes),
            SysComputedColumn::returnLiteral(NoYes::No));
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        var custBankAccount = CustBankAccount::find(this.CustomerAccountNumber, this.BankAccountId);
        this.CrossRate = custBankAccount.editExchRate(false, this.CrossRate);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (dataEntityDataSourceStr(CustomerBankAccountEntity, CustBankAccount) == _dataSourceCtx.name())
        {
            CustBankAccount custBankAccount = _dataSourceCtx.getBuffer();
            custBankAccount.editExchRate(true, this.CrossRate);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<FormRef>CustBankAccounts</FormRef>
	<Label>@SYS24208</Label>
	<Tags>Customer payment setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>CustomerBankAccountStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CustomerBankAccounts</PublicCollectionName>
	<PublicEntityName>CustomerBankAccount</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankAccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoutingNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RoutingNumberType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankContractAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RateOfExchangeReference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CrossRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ESR</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IBAN</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SWIFTCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentTextCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MessageToBank</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactMobilePhoneNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactEmailAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPager</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPhoneNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPhoneNumberExtension</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactEmailAddressForSendingSMS</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactFaxNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactTelexNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactInternetAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Location</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FullAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressState</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressCounty</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ControlInternalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankConstantSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>BankSpecificSymbol</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerAccountNumber</Name>
			<DataField>CustAccount</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccountId</Name>
			<DataField>AccountID</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccountNumber</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankAccountType</Name>
			<DataField>BankAccountType</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankName</Name>
			<DataField>Name</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RoutingNumber</Name>
			<DataField>RegistrationNum</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RoutingNumberType</Name>
			<DataField>BankCodeType</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankGroupId</Name>
			<DataField>BankGroupId</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankContractAccount</Name>
			<DataField>BankContractAccount</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RateOfExchangeReference</Name>
			<DataField>ExchRateRef</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>CrossRate</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ESR</Name>
			<DataField>BankContractAccount</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IBAN</Name>
			<DataField>BankIBAN</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SWIFTCode</Name>
			<DataField>SWIFTNo</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentTextCode</Name>
			<DataField>CustPaymentTextCode</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MessageToBank</Name>
			<DataField>MsgToBank</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonName</Name>
			<DataField>ContactPerson</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactMobilePhoneNumber</Name>
			<DataField>CellularPhone</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactEmailAddress</Name>
			<DataField>Email</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPager</Name>
			<DataField>Pager</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPhoneNumber</Name>
			<DataField>Phone</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPhoneNumberExtension</Name>
			<DataField>PhoneLocal</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactEmailAddressForSendingSMS</Name>
			<DataField>SMS</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactFaxNumber</Name>
			<DataField>TeleFax</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactTelexNumber</Name>
			<DataField>Telex</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactInternetAddress</Name>
			<DataField>URL</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Location</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Location</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FullAddress</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressState</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressCounty</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressValidFrom</Name>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressValidTo</Name>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankConstantSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ConstantSymbol</DataField>
			<DataSource>BankConstantSymbol</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankSpecificSymbol</Name>
			<DataField>SpecificSymbol</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ControlInternalNumber</Name>
			<DataField>BankCIN</DataField>
			<DataSource>CustBankAccount</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDefaultBankAccount</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDefaultBankAccountDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BankAccountId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustBankAccount</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustBankAccount</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Location</Field>
								<JoinDataSource>CustBankAccount</JoinDataSource>
								<RelatedField>LocationRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BankConstantSymbol</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BankConstantSymbol</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BankConstantSymbol</Field>
								<JoinDataSource>CustBankAccount</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustAccount</Field>
								<JoinDataSource>CustBankAccount</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>