<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailHardwareProfileMerchantInfoEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailHardwareProfileMerchantInfoEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loads the merchant information in the virtual outbound field.
    /// </summary>
    public void postLoad()
    {
        if (this.ProfileId != '' && this.EFT == RetailExternalNone::PaymentSDK)
        {
            // Not sure how to do this?
            this.MerchantProperties = this.secureMerchantPropertiesEdit(false, "");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override for insert into the table.
    /// </summary>
    public void insert()
    {
        Global::handleEncryptedTablePreInsert(this);
        super();
        Global::handleEncryptedTablePostInsert(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override for update into the table.
    /// </summary>
    public void update()
    {
        Global::handleEncryptedTablePreUpdate(this);
        super();
        Global::handleEncryptedTablePostUpdate(this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>secureMerchantPropertiesEdit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method to encrypt or decrypt the secure merchant properties.
    /// </summary>
    /// <param name = "_set">Indicates whether to encrypt or decrypt the field True = encrypt and False = decrypt</param>
    /// <param name = "_value">The vakue to encrypt.</param>
    /// <returns>The decrypted value of the field.</returns>
    public edit str secureMerchantPropertiesEdit(boolean _set, str _value)
    {
        return Global::editEncryptedField(this, _value, fieldNum(RetailHardwareProfileMerchantInfoEntity, SecureMerchantProperties), _set);
    }

]]></Source>
			</Method>
			<Method>
				<Name>encryptionPurpose</Name>
				<Source><![CDATA[
    /// <summary>
    /// Override for the encryption purpose.
    /// </summary>
    /// <param name = "_fieldId">Field id.</param>
    /// <returns>Field Id.</returns>
    public str encryptionPurpose(FieldId _fieldId)
    {
        return _fieldId == fieldNum(RetailHardwareProfileMerchantInfoEntity, SecureMerchantProperties) ? CreditCardPaymentProperties::CryptoPurpose : super(_fieldId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@Retail:HardwareProfileMerchantInfoEntity</Label>
	<Tags>Hardware</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailHardwareProfileMerchantInfoStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<IsReadOnly>Yes</IsReadOnly>
	<Modules>Payments</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailHardwareProfileMerchantsInfo</PublicCollectionName>
	<PublicEntityName>RetailHardwareProfileMerchantInfo</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProfileId</Name>
			<DataField>profileId</DataField>
			<DataSource>RetailHardwareProfile</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SecureMerchantProperties</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SecureMerchantProperties</DataField>
			<DataSource>RetailHardwareProfile</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>MerchantProperties</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>RetailMemo</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EFT</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>EFT</DataField>
			<DataSource>RetailHardwareProfile</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProfileId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailHardwareProfile</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailHardwareProfile</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>