<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>LedgerReportingCurrencyAdjustmentJournalHeaderEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class LedgerReportingCurrencyAdjustmentJournalHeaderEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Maps the entity to the backing datasources.
    /// </summary>
    /// <param name = "_entityCtx">
    /// The context of the entity.
    /// </param>
    /// <param name = "_dataSourceCtx">
    /// The context of the datasource being mapped.
    /// </param>
    [Hookable(false)]
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            switch (_dataSourceCtx.name())
            {
                case dataentitydatasourcestr(LedgerReportingCurrencyAdjustmentJournalHeaderEntity, LedgerJournalTable):
                    LedgerJournalTable ledgerJournalTable = _dataSourceCtx.getBuffer();

                    // If a journal number was provided, mark it as defaulted so that it doesn't get re-defaulted on insert
                    if (ledgerJournalTable.isFieldSet(fieldnum(LedgerJournalTable, JournalNum)))
                    {
                        ledgerJournalTable.fieldState(fieldnum(LedgerJournalTable, JournalNum), FieldState::Defaulted);

                        LedgerJournalName ledgerJournalName;

                        select NumberSequenceTable from ledgerJournalName
                            where ledgerJournalName.JournalName == ledgerJournalTable.JournalName
                                && ledgerJournalName.VoucherAllocatedAtPosting == NoYes::No;

                        ledgerJournalTable.NumberSequenceTable = ledgerJournalName.NumberSequenceTable;
                    }
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the journal staging table after population.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">
    /// The data management framework definition group being executed.
    /// </param>
    [Hookable(false)]
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        LedgerReportingCurrencyAdjustmentJournalHeaderStaging headerStaging;

        if (!LedgerJournalEntityBase::isJournalBatchNumberSequenceManual())
        {
            LedgerJournalEntityBaseTmp journalBatchNumberMap = LedgerJournalEntityBase::generateJournalNumbers(_dmfDefinitionGroupExecution, headerStaging);

            update_recordset headerStaging
                setting JournalBatchNumber = journalBatchNumberMap.NewJournalBatchNumber
                where headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                    && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                    && headerStaging.TransferStatus == DMFTransferStatus::NotStarted
                join NewJournalBatchNumber from journalBatchNumberMap
                    where headerStaging.JournalBatchNumber == journalBatchNumberMap.OldJournalBatchNumber;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean validateDelete()
    {
        boolean isValid = this.validateJournal(this);

        if (isValid)
        {
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    [Hookable(false)]
    public boolean validateWrite()
    {
        boolean isValid = this.validateJournal(this);

        if (isValid)
        {
            isValid = super();
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournal</Name>
				<Source><![CDATA[
    private boolean validateJournal(LedgerJournalEntityBase _journalEntity)
    {
        boolean isValid = true;

        LedgerJournalName ledgerJournalName = LedgerJournalName::find(_journalEntity.JournalName);

        if (ledgerJournalName.JournalType != LedgerJournalType::ReportingCurrencyAdjustment)
        {
            isValid = checkFailed(strFmt("@SYS114718", _journalEntity.JournalName, LedgerJournalType::ReportingCurrencyAdjustment));
        }

        if (!Ledger::reportingCurrency())
        {
            isValid = checkFailed("@GeneralLedger:ReportingCurrencyAdjustmentJournalCreateNoReportingCurrency");
        }

        isValid = isValid && LedgerJournalEntityBase::isWorkflowDocumentEditable(_journalEntity.JournalBatchNumber);

        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<DeveloperDocumentation>@GeneralLedger:LedgerReportingCurrencyAdjustmentJournalHeaderEntityDevDoc</DeveloperDocumentation>
	<FormRef>LedgerJournalTable</FormRef>
	<Label>@GeneralLedger:LedgerReportingCurrencyAdjustmentJournalHeaderEntityLabel</Label>
	<Tags>Journal</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>LedgerReportingCurrencyAdjustmentJournalHeaderStaging</DataManagementStagingTable>
	<EnableSetBasedSqlOperations>No</EnableSetBasedSqlOperations>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>GeneralLedger</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>LedgerReportingCurrencyAdjustmentJournalHeaders</PublicCollectionName>
	<PublicEntityName>LedgerReportingCurrencyAdjustmentJournalHeader</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingLayer</Name>
			<DataField>CurrentOperationsTax</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalName</Name>
			<DataField>JournalName</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalBatchNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>JournalNum</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPosted</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Posted</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Name</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalTotalDebitReportingCurrency</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@GeneralLedger:CreditTotalReportingCurrency</Label>
			<DataField>JournalTotalDebitReportingCurrency</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalTotalCreditReportingCurrency</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@GeneralLedger:DebitTotalReportingCurrency</Label>
			<DataField>JournalTotalCreditReportingCurrency</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrency</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@GeneralLedger:ReportingCurrency</Label>
			<Mandatory>No</Mandatory>
			<DataField>ReportingCurrency</DataField>
			<DataSource>Ledger</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalBatchNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>LedgerJournalEntityBase</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Description</MapField>
					<MapFieldTo>Description</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalBatchNumber</MapField>
					<MapFieldTo>JournalBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalName</MapField>
					<MapFieldTo>JournalName</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>LegalEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>OMLegalEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>dataAreaId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerJournalTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerJournalTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CompanyInfo</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>Ledger</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>Ledger</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>CompanyInfo</JoinDataSource>
										<RelatedField>PrimaryForLegalEntity</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>LedgerJournalTable</JoinDataSource>
								<RelatedField>DataArea</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalType</Name>
						<Field>JournalType</Field>
						<Value>ReportingCurrencyAdjustment</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>