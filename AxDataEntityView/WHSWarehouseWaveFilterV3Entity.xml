<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseWaveFilterV3Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWarehouseWaveFilterV3Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(WHSWarehouseWaveFilterV3Entity, WHSWaveFilterTable):
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseWaveFilterV3Entity, WarehouseWaveFilterQuery), fieldNum(WHSWaveFilterTable, WaveFilterQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseWaveFilterV3Entity, WarehouseWaveFilterQueryJson), fieldNum(WHSWaveFilterTable, WaveFilterQuery));
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.WarehouseWaveFilterQuery)
        {
            QueryRun queryRun = new QueryRun(this.WarehouseWaveFilterQuery);
            this.WarehouseWaveFilterQueryJson = new SysQuery(queryRun.query()).toJson();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSWarehouseWaveFilterV3Entity, WHSWaveFilterTable))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Insert);

            if (this.WarehouseWaveFilterQueryJson)
            {
                this.validateQueryStructure(_dataSourceCtx);
            }
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSWarehouseWaveFilterV3Entity, WHSWaveFilterTable))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Update);

            if (this.WarehouseWaveFilterQueryJson)
            {
                this.validateQueryStructure(_dataSourceCtx);
            }
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    private void initializeQuery(DataEntityDataSourceRuntimeContext _dataSourceCtx, DataEntityDatabaseOperation _databaseOperation)
    {
        WHSWaveFilterTable waveFilterTable = _dataSourceCtx.getBuffer();

        switch (_databaseOperation)
        {
            case DataEntityDatabaseOperation::Insert:
                if (this.WarehouseWaveFilterQueryJson)
                {
                    this.initializeQueryFromJson(waveFilterTable);
                }
                else
                {
                    this.initializeDefaultQuery(waveFilterTable);
                }
                break;
            case DataEntityDatabaseOperation::Update:
                if (this.WarehouseWaveFilterQueryJson)
                {
                    this.initializeQueryFromJson(waveFilterTable);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQueryFromJson</Name>
				<Source><![CDATA[
    private void initializeQueryFromJson(WHSWaveFilterTable _waveFilterTable)
    {
        Query deserializedQuery = SysQuery::newFromJson(this.WarehouseWaveFilterQueryJson);
        QueryRun queryRun = new QueryRun(deserializedQuery);
        
        _waveFilterTable.WaveFilterQuery = queryRun.pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeDefaultQuery</Name>
				<Source><![CDATA[
    private void initializeDefaultQuery(WHSWaveFilterTable _waveFilterTable)
    {
        _waveFilterTable.WaveFilterQuery = _waveFilterTable.defaultWaveFilterQueryRun().pack();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQueryStructure</Name>
				<Source><![CDATA[
    private void validateQueryStructure(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Query actualQuery = SysQuery::newFromJson(this.WarehouseWaveFilterQueryJson);
        Query expectedQuery = this.defaultExpectedQuery();

        if (!WHSQueryInitializer::initializeDataSource(expectedQuery.dataSourceNo(1), actualQuery.dataSourceNo(1)))
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpectedQuery</Name>
				<Source><![CDATA[
    private Query defaultExpectedQuery()
    {
        WHSWaveFilterTable waveFilterTable;
        return waveFilterTable.defaultWaveFilterQueryRun().query();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>WHSWaveFilterTable</FormRef>
	<Label>@WAX:WHSWarehouseWaveFilterV3EntityLabel</Label>
	<Tags>Setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSWarehouseWaveFilterV3Staging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWaveFilterDescription</Name>
			<DataField>Description</DataField>
			<DataSource>WHSWaveFilterTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWaveFilterCode</Name>
			<DataField>WaveFilterCode</DataField>
			<DataSource>WHSWaveFilterTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWaveFilterQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>WaveFilterQuery</DataField>
			<DataSource>WHSWaveFilterTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>WarehouseWaveFilterQueryJson</Name>
			<Label>@WAX:WarehouseWaveFilterQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseWaveFilterCode</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSWaveFilterTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSWaveFilterTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>