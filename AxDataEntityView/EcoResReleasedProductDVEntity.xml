<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResReleasedProductDVEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResReleasedProductDVEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>productNameCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the product name from the product.
    /// </summary>
    /// <returns>Product name</returns>
    /// <remarks>If translation of product name is not defined on the variant returns empty string.</remarks>
    public static str productNameCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(EcoResReleasedProductDVEntity), identifierStr(EcoResProductTranslationToSystemLanguage), fieldStr(EcoResProductTranslation, Name)),
                                              SysComputedColumn::comparisonLiteral('')),

            SysComputedColumn::returnField(tableStr(EcoResReleasedProductDVEntity), identifierStr(EcoResProductTranslationToSystemLanguage), fieldStr(EcoResProductTranslation, Name)),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>descriptionCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the description from the product.
    /// </summary>
    /// <returns>Description</returns>
    /// <remarks>If translation of description is not defined on the product returns empty string.</remarks>
    public static str descriptionCalc()
    {
        return SysComputedColumn::if(
            SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(EcoResReleasedProductDVEntity), identifierStr(EcoResProductTranslationToSystemLanguage), fieldStr(EcoResProductTranslation, Description)),
                                              SysComputedColumn::comparisonLiteral('')),

            SysComputedColumn::returnField(tableStr(EcoResReleasedProductDVEntity), identifierStr(EcoResProductTranslationToSystemLanguage), fieldStr(EcoResProductTranslation, Description)),
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldServiceProductTypeDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the string that defines the Field Service product type computed column.
    /// </summary>
    /// <returns>The string that defines the Field Service product type.</returns>
    public static str fieldServiceProductTypeDefinition()
    {
        return SysComputedColumn::if(
            SysComputedColumn::equalExpression(
                EcoResReleasedProductDVEntity::productTypeComputedColumnDefinition(),
                SysComputedColumn::comparisonLiteral(EcoResProductType::Service)),
            SysComputedColumn::returnLiteral(EcoResFieldServiceProductType::Service),
            SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(
                        dataentityviewstr(EcoResReleasedProductDVEntity),
                        dataEntityDataSourceStr(EcoResReleasedProductDVEntity, InventModelGroup),
                        fieldStr(InventModelGroup, StockedProduct)),
                    SysComputedColumn::comparisonLiteral(NoYes::Yes)),
                SysComputedColumn::returnLiteral(EcoResFieldServiceProductType::Inventory),
                        SysComputedColumn::if(
                        SysComputedColumn::equalExpression(
                            SysComputedColumn::comparisonField(
                                dataentityviewstr(EcoResReleasedProductDVEntity),
                                dataEntityDataSourceStr(EcoResReleasedProductDVEntity, InventModelGroup),
                                fieldStr(InventModelGroup, StockedProduct)),
                            SysComputedColumn::comparisonLiteral(NoYes::No)),
                        SysComputedColumn::returnLiteral(EcoResFieldServiceProductType::NonInventory),
                        SysComputedColumn::returnLiteral(EcoResFieldServiceProductType::NotAvailable))));
    }

]]></Source>
			</Method>
			<Method>
				<Name>productTypeComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str productTypeComputedColumnDefinition()
    {
        str recIdField = SysComputedColumn::comparisonField(
            dataentityviewstr(EcoResReleasedProductDVEntity),
            dataEntityDataSourceStr(EcoResReleasedProductDVEntity, EcoResProduct),
            fieldStr(EcoResProduct, RecId));

        DictField productTypeDictField = new DictField(tableNum(EcoResProduct), fieldNum(EcoResProduct, ProductType));

        return strFmt('%1.%2', EcoResReleasedProductDVEntity::getViewSQLTableName(recIdField), productTypeDictField.name(DbBackend::Sql));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getViewSQLTableName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table name used in the SQL view definition.
    /// </summary>
    /// <param name = "_field">A computed column definition from which to get the table name.</param>
    /// <returns>The table name used in the SQL view definition.</returns>
    /// <remarks>The SQL view definition will contain a string with the value T1.FieldName. This API will return T1.</remarks>
    public static str getViewSQLTableName(str _field)
    {
        var periodPosition = strScan(_field, '.', 1, strlen(_field));
        
        return strDel(_field, periodPosition, strLen(_field));
    }

]]></Source>
			</Method>
			<Method>
				<Name>dualWriteShouldSkipDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns if a datasource should be skipped for DualWrite.
    /// </summary>
    /// <param name = "_entityToAnalyze">The data entity being checked. Not used</param>
    /// <param name = "_datasourceName">The data source being evaluated.</param>
    /// <param name = "_primaryTableId">The tableId of the data source. NotUSed</param>
    /// <param name = "_fieldMapping">The fieldMapping used in Dual Write.</param>
    /// <param name = "_atLeastOneFieldMapped">Whether at least one value was previously found.</param>
    /// <returns> result should be True if you want to skip the datasource.</returns>
    /// <remarks>This is an override to the default behavior in BuisnessEventsRegistrationBase.shouldSkipDataSource().
    /// This will ensure calculated values are properly updated in DualWrite.
    /// </remarks>
    public static boolean dualWriteShouldSkipDataSource(
        DictDataEntity  _entityToAnalyze,
        str             _datasourceName,
        Tableid         _primaryTableId,
        Map             _fieldMapping,
        boolean         _atLeastOneFieldMapped)
    {
        if (_datasourceName == dataEntityDataSourceStr(EcoResReleasedProductDVEntity, Ledger)
            || (_datasourceName == dataEntityDataSourceStr(EcoResReleasedProductDVEntity, InventModelGroup))) // IsStockedProduct cannot be updated when products are associated with a model group
        {
            return true;
        }

        if (_atLeastOneFieldMapped)
        {
            return false;
        }
        
        switch (_datasourceName)
        {
            case dataEntityDataSourceStr(EcoResReleasedProductDVEntity, EcoResStorageDimensionGroupItem) :
                return !(_fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, StorageDimensionGroupName)));

            case dataEntityDataSourceStr(EcoResReleasedProductDVEntity, EcoResTrackingDimensionGroupItem) :
                return !(_fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, TrackingDimensionGroupName)));

            case dataEntityDataSourceStr(EcoResReleasedProductDVEntity, EcoResProductTranslationToSystemLanguage) :
                return !(_fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, ProductName)) ||
                     _fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, ProductDescription)));

            case dataEntityDataSourceStr(EcoResReleasedProductDVEntity, InventModelGroupItem) :
                return !(_fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, FieldServiceProductType))
                         ||_fieldMapping.exists(fieldStr(EcoResReleasedProductDVEntity, IsStockedProduct)));

            default :
                return true;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        if (!EcoResReleasedProductDVEntitiesEnableChangeTrackingFlight::instance().isEnabled()) {
            throw error("@SCM:ErrorMessage_ChangeTrackingNotSupportedForEntity");
        }

        Query ctQuery = new Query();

        QueryBuildDataSource qbdsInventTable = ctQuery.addDataSource(tableNum(InventTable));

        // WHS invent table
        var qbdsWHSInventTable = qbdsInventTable.addDataSource(tableNum(WHSInventTable));
        qbdsWHSInventTable.relations(true);
        qbdsWHSInventTable.joinMode(JoinMode::OuterJoin);
        qbdsWHSInventTable.fetchMode(QueryFetchMode::One2One);

        // Invent table module
        var qbdsInventTableModule = qbdsInventTable.addDataSource(tableNum(InventTableModule));
        qbdsInventTableModule.relations(true);
        qbdsInventTableModule.joinMode(JoinMode::OuterJoin);
        qbdsInventTableModule.fetchMode(QueryFetchMode::One2One);

        // Retail invent table
        var qbdsRetailInventTable = qbdsInventTable.addDataSource(tableNum(RetailInventTable));
        qbdsRetailInventTable.relations(true);
        qbdsRetailInventTable.joinMode(JoinMode::OuterJoin);
        qbdsRetailInventTable.fetchMode(QueryFetchMode::One2One);

        // Catch weight item
        var qbdsPdsCatchWeightItem = qbdsInventTable.addDataSource(tableNum(PdsCatchWeightItem));
        qbdsPdsCatchWeightItem.relations(true);
        qbdsPdsCatchWeightItem.joinMode(JoinMode::OuterJoin);
        qbdsPdsCatchWeightItem.fetchMode(QueryFetchMode::One2One);

        // Tracking dimension group
        var qbdsEcoResTrackingDimensionGroupItem = qbdsInventTable.addDataSource(tableNum(EcoResTrackingDimensionGroupItem));
        qbdsEcoResTrackingDimensionGroupItem.relations(true);
        qbdsEcoResTrackingDimensionGroupItem.joinMode(JoinMode::OuterJoin);
        qbdsEcoResTrackingDimensionGroupItem.fetchMode(QueryFetchMode::One2One);

        // Storage dimension group
        var qbdsEcoResStorageDimensionGroupItem = qbdsInventTable.addDataSource(tableNum(EcoResStorageDimensionGroupItem));
        qbdsEcoResStorageDimensionGroupItem.relations(true);
        qbdsEcoResStorageDimensionGroupItem.joinMode(JoinMode::OuterJoin);
        qbdsEcoResStorageDimensionGroupItem.fetchMode(QueryFetchMode::One2One);

        // MCR invent table
        var qbdsMCRInventTable = qbdsInventTable.addDataSource(tableNum(MCRInventTable));
        qbdsMCRInventTable.relations(true);
        qbdsMCRInventTable.joinMode(JoinMode::OuterJoin);
        qbdsMCRInventTable.fetchMode(QueryFetchMode::One2One);

        var qbdsEcoResProduct = qbdsInventTable.addDataSource(tableNum(EcoResProduct));
        qbdsEcoResProduct.relations(true);
        qbdsEcoResProduct.fetchMode(QueryFetchMode::One2One);

        // Product translation to system language
        var qbdsEcoResProductTranslationToSystemLanguage = qbdsEcoResProduct.addDataSource(tableNum(EcoResProductTranslation));
        qbdsEcoResProductTranslationToSystemLanguage.addLink(fieldNum(EcoResProduct, RecId), fieldNum(EcoResProductTranslation, Product), qbdsEcoResProduct.name());
        qbdsEcoResProductTranslationToSystemLanguage.joinMode(JoinMode::OuterJoin);
        qbdsEcoResProductTranslationToSystemLanguage.fetchMode(QueryFetchMode::One2One);

        var qbdsSystemParameters = qbdsEcoResProductTranslationToSystemLanguage.addDataSource(tableNum(SystemParameters));
        qbdsSystemParameters.addLink(fieldNum(EcoResProductTranslation, LanguageId), fieldNum(SystemParameters, SystemLanguageId));
        qbdsSystemParameters.joinMode(JoinMode::OuterJoin);
        qbdsSystemParameters.fetchMode(QueryFetchMode::One2One);

        // Model group item
        var qbdsInventModelGroupItem = qbdsInventTable.addDataSource(tableNum(InventModelGroupItem));
        qbdsInventModelGroupItem.relations(true);
        qbdsInventModelGroupItem.joinMode(JoinMode::OuterJoin);
        qbdsInventModelGroupItem.fetchMode(QueryFetchMode::One2One);

        return ctQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<FormRef>EcoResProductDetailsExtended</FormRef>
	<Label>@SCM:EcoResReleasedProductDVEntity</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EcoResReleasedProductDVStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<IsReadOnly>Yes</IsReadOnly>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DVReleasedProducts</PublicCollectionName>
	<PublicEntityName>DVReleasedProduct</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsSalesWithholdingTaxCalculated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IntrastatChargePercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ApproximateSalesTaxPercentage</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>DisplayProductNumber</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatChargePercentage</Name>
			<Label>@Tax:ChargesPercentageForIntrastat</Label>
			<DataField>StatisticsFactor</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApproximateSalesTaxPercentage</Name>
			<DataField>ApproxTaxValue_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BestBeforePeriodDays</Name>
			<DataField>PdsBestBefore</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CarryingCostABCCode</Name>
			<DataField>ABCTieUp</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConstantScrapQuantity</Name>
			<DataField>ScrapConst</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ProductType</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageDimensionGroupName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS312237</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResStorageDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TrackingDimensionGroupName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS312248</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResTrackingDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MarginABCCode</Name>
			<DataField>ABCContributionMargin</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternativeItemNumber</Name>
			<DataField>AltItemId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillInventoryIssueAutomaticallyReportAsFinished</Name>
			<DataField>AutoReportFinished</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BOMUnitSymbol</Name>
			<DataField>BOMUnitId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillInventoryReceiptIgnoreFlushingPrinciple</Name>
			<Label>@SCM:IgnoreFlushingPrincipleOnReceipt</Label>
			<DataField>BOMManualReceipt</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostAutomaticallyUpdated</Name>
			<Label>@SCM:UpdateProductAutomaticallyWithLatestCostPrice</Label>
			<DataField>CostModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionDensityConversionFactor</Name>
			<Label>@SCM:DensityConversionFactorForProductionConsumption</Label>
			<DataField>Density</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionDepthConversionFactor</Name>
			<Label>@SCM:DepthConversionFactorForProductionConsumption</Label>
			<DataField>Depth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionWidthConversionFactor</Name>
			<Label>@SCM:WidthConversionFactorForProductionConsumption</Label>
			<DataField>Width</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionConsumptionHeightConversionFactor</Name>
			<Label>@SCM:HeightConversionFactorForProductionConsumption</Label>
			<DataField>Height</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossDepth</Name>
			<DataField>grossDepth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossProductHeight</Name>
			<DataField>grossHeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GrossProductWidth</Name>
			<DataField>grossWidth</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVolume</Name>
			<DataField>UnitVolume</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NetProductWeight</Name>
			<DataField>NetWeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostProductVariantSpecific</Name>
			<DataField>ItemDimCostPrice</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PotencyBaseAttributeValueEntryEvent</Name>
			<Label>@SCM:RecordPotencyBaseAttributeValueAt</Label>
			<DataField>PDSPotencyAttribRecording</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShelfAdvicePeriodDays</Name>
			<DataField>PdsShelfAdvice</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShelfLifePeriodDays</Name>
			<DataField>PdsShelfLife</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PotencyBaseAttibuteTargetValue</Name>
			<Label>@SCM:TargetValueForPotencyBaseAttribute</Label>
			<DataField>PDSTargetFactor</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPhantom</Name>
			<DataField>Phantom</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>YieldPercentage</Name>
			<DataField>PmfYieldPct</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryVendorAccountNumber</Name>
			<DataField>PrimaryVendorId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NecessaryProductionWorkingTimeSchedulingPropertyId</Name>
			<Label>@SYS23878</Label>
			<DataField>PropertyId</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPurchasePriceAutomaticallyUpdated</Name>
			<Label>@SCM:UpdateProductAutomaticallyWithLatestPurchasePrice</Label>
			<DataField>PurchModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationModel</Name>
			<DataField>SalesModel</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationContributionRatio</Name>
			<Label>@SYS25119</Label>
			<DataField>SalesContributionRatio</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceCalculationChargesPercentage</Name>
			<Label>@SYS25120</Label>
			<DataField>SalesPercentMarkup</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VariableScrapPercentage</Name>
			<DataField>ScrapVar</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TareProductWeight</Name>
			<DataField>TaraWeight</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PackingDutyQuantity</Name>
			<Label>@Tax:QuantityOfWhichPackingDutyIsCalculated</Label>
			<DataField>TaxPackagingQty</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumPickQuantity</Name>
			<DataField>MaxPickQty</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillWorkCenterPickingAllowNegativeInventory</Name>
			<Label>@SCM:AllowNegativePickingAtWorkCenter</Label>
			<DataField>PickWCNeg</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultReceivingQuantity</Name>
			<DataField>ProdQty</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseMobileDeviceDescriptionLine1</Name>
			<Label>@WAX:WarehouseMobileDeviceDescriptionLine1</Label>
			<DataField>RFDescription1</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseMobileDeviceDescriptionLine2</Name>
			<Label>@WAX:WarehouseMobileDeviceDescriptionLine2</Label>
			<DataField>RFDescription2</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RawMaterialPickingPrinciple</Name>
			<DataField>AllowMaterialOverPick</DataField>
			<DataSource>WHSInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CatchWeightUnitSymbol</Name>
			<Mandatory>No</Mandatory>
			<DataField>PdsCWUnitId</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumCatchWeightQuantity</Name>
			<DataField>PdsCWMax</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumCatchWeightQuantity</Name>
			<DataField>PdsCWMin</DataField>
			<DataSource>PdsCatchWeightItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesPriceAdjustmentAllowed</Name>
			<Label>@SCM:AllowSalesPriceAdjustment</Label>
			<DataField>AllowPriceAdjust</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRestrictedForCoupons</Name>
			<Label>@MCR:RestrictForCoupons</Label>
			<DataField>CouponUse</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsExemptFromAutomaticNotificationAndCancellation</Name>
			<DataField>FTCExempt</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInstallmentEligible</Name>
			<DataField>InstallmentEligible</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPickingWorkbenchApplyBoxingLogic</Name>
			<DataField>IsPackingBoxable</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SellStartDate</Name>
			<DataField>SellStartDate</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsShipAloneEnabled</Name>
			<DataField>ShipAlone</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipStartDate</Name>
			<DataField>ShipStartDate</DataField>
			<DataSource>MCRInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ComparisonPriceBaseUnitSymbol</Name>
			<Label>@Retail:ComparisonPriceBaseUnit</Label>
			<DataField>baseComparisonUnitCode</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsScaleProduct</Name>
			<DataField>scaleItem</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPOSRegistrationBlocked</Name>
			<Label>@Retail:BlockAtPOSRegister</Label>
			<DataField>blockedOnPOS</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationBlockedDate</Name>
			<AllowEdit>Yes</AllowEdit>
			<Label>@Retail:DateWhenProductWasBlockedAtPOSRegister</Label>
			<DataField>dateBlocked</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationPlannedBlockedDate</Name>
			<Label>@Retail:DateWhenProductShouldBeBlockedAtPOSRegister</Label>
			<DataField>dateToBeBlocked</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>POSRegistrationActivationDate</Name>
			<Label>@Retail:DateOfActivationAtPOSRegister</Label>
			<DataField>dateToActivateItem</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KeyInPriceRequirementsAtPOSRegister</Name>
			<Label>@Retail:KeyInPriceAtPOSRegister</Label>
			<DataField>keyingInPrice</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KeyInQuantityRequirementsAtPOSRegister</Name>
			<Label>@Retail:KeyInQuantityAtPOSRegister</Label>
			<DataField>keyingInQty</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MustKeyInCommentAtPOSRegister</Name>
			<Label>@Retail:MustKeyInCommentAtPOSRegister</Label>
			<DataField>mustKeyInComment</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsZeroPricePOSRegistrationAllowed</Name>
			<Label>@Retail:AllowZeroPriceAtPOSRegister</Label>
			<DataField>zeroPriceValid</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDiscountPOSRegistrationProhibited</Name>
			<Label>@Retail:NoDiscountAllowedAtPOSRegister</Label>
			<DataField>noDiscountAllowed</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPOSRegistrationQuantityNegative</Name>
			<Label>@Retail:QuantityBecomesNegativeAtPOSRegister</Label>
			<DataField>qtyBecomesNegative</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsVariantShelfLabelsPrintingEnabled</Name>
			<DataField>PrintVariantsShelfLabels</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderOverdeliveryPercentage</Name>
			<Label>@SCM:OverdeliveryPercentageForTransferOrders</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderUnderdeliveryPercentage</Name>
			<Label>@SCM:UnderdeliveryPercentageForTransferOrders</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCost</Name>
			<Label>@SCM:Cost</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostDate</Name>
			<Label>@SCM:DateOfCost</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostQuantity</Name>
			<Label>@SCM:CostQuantity</Label>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnitCostIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInCost</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedCostCharges</Name>
			<Label>@SCM:CostCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CostChargesQuantity</Name>
			<Label>@SCM:CostChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryUnitSymbol</Name>
			<Label>@SYS16617</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModuleInvent</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsIntercompanySalesUsageBlocked</Name>
			<Label>@SCM:BlockIntercompanySales</Label>
			<DataField>InterCompanyBlocked</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTotalSalesDiscountCalculationIncludeProduct</Name>
			<Label>@SCM:IncludeInTotalSalesDiscount</Label>
			<DataField>EndDisc</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOverdeliveryPercentage</Name>
			<Label>@SCM:SalesOverdeliveryPercentage</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnderdeliveryPercentage</Name>
			<Label>@SCM:SalesUnderdeliveryPercentage</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPricingPrecision</Name>
			<Label>@SCM:SalesPricingPrecision</Label>
			<DataField>PDSPricingPrecision</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPrice</Name>
			<Label>@SYS5755</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesPriceDate</Name>
			<Label>@SCM:DateOfSalesPrice</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesUnitSymbol</Name>
			<Label>@SYS14614</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesPriceIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInSalesPrice</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedSalesPriceCharges</Name>
			<Label>@SCM:SalesPriceCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesChargesQuantity</Name>
			<Label>@SCM:SalesChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsIntercompanyPurchaseUsageBlocked</Name>
			<Label>@SCM:BlockIntercompanyPurchase</Label>
			<DataField>InterCompanyBlocked</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTotalPurchaseDiscountCalculationIncludeProduct</Name>
			<Label>@SCM:IncludeInTotalPurchaseDiscount</Label>
			<DataField>EndDisc</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseOverdeliveryPercentage</Name>
			<Label>@SCM:PurchaseOverdeliveryPercentage</Label>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnderdeliveryPercentage</Name>
			<Label>@SCM:PurchaseUnderdeliveryPercentage</Label>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePricingPrecision</Name>
			<Label>@SCM:PurchasePricingPrecision</Label>
			<DataField>PDSPricingPrecision</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePrice</Name>
			<Label>@SYS12550</Label>
			<DataField>Price</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceDate</Name>
			<Label>@SCM:PurchasePriceDate</Label>
			<DataField>PriceDate</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasePriceQuantity</Name>
			<Label>@SCM:PurchasePriceQuantity</Label>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseUnitSymbol</Name>
			<Label>@SYS22997</Label>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPurchasePriceIncludingCharges</Name>
			<Label>@SCM:IncludeChargesInPurchasePrice</Label>
			<DataField>AllocateMarkup</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedPurchasePriceCharges</Name>
			<Label>@SCM:PurchasePriceCharges</Label>
			<DataField>Markup</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseChargesQuantity</Name>
			<Label>@SCM:PurchaseChargesQuantity</Label>
			<DataField>PriceQty</DataField>
			<DataSource>InventTableModulePurch</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesWithholdingTaxCalculated</Name>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdCalculate_TH</DataField>
			<DataSource>InventTableModuleSales</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsManualDiscountPOSRegistrationProhibited</Name>
			<Label>@Retail:NoManualDiscountAllowedAtPOSRegister</Label>
			<DataField>noManualDiscountAllowed</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ScaleIndicator</Name>
			<DataField>ScaleIndicator_BR</DataField>
			<DataSource>InventTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductDimensionGroupName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResProductDimensionGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsCatchWeightProduct</Name>
			<DataField>PdsCWProduct</DataField>
			<DataSource>EcoResProduct</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductName</Name>
			<ComputedFieldMethod>productNameCalc</ComputedFieldMethod>
			<ExtendedDataType>EcoResProductName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductDescription</Name>
			<ComputedFieldMethod>descriptionCalc</ComputedFieldMethod>
			<ExtendedDataType>EcoResDescription</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsStockedProduct</Name>
			<DataField>StockedProduct</DataField>
			<DataSource>InventModelGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TrackingDimensionGroupRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>TrackingDimensionGroup</DataField>
			<DataSource>EcoResTrackingDimensionGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StorageDimensionGroupRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>StorageDimensionGroup</DataField>
			<DataSource>EcoResStorageDimensionGroupItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>FieldServiceProductType</Name>
			<ComputedFieldMethod>fieldServiceProductTypeDefinition</ComputedFieldMethod>
			<EnumType>EcoResFieldServiceProductType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>AccountingCurrency</DataField>
			<DataSource>Ledger</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSelfCheckoutRegistrationBlocked</Name>
			<FeatureClass>RetailSelfCheckoutFeature</FeatureClass>
			<DataField>blockedOnSelfCheckout</DataField>
			<DataSource>RetailInventTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>EcoResProductDVEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductV2</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProductNumber</Field>
					<RelatedField>ProductNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>StorageDimensionGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResStorageDimensionGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>StorageDimensionGroup</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResStorageDimensionGroupEntity_GroupName</Name>
					<Field>StorageDimensionGroupName</Field>
					<RelatedField>GroupName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>TrackingDimensionGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResTrackingDimensionGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>TrackingDimensionGroup</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResTrackingDimensionGroupEntity_GroupName</Name>
					<Field>TrackingDimensionGroupName</Field>
					<RelatedField>GroupName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BOMUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BOMUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>BOMUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>PrimaryVendorV2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>VendVendorV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>PrimaryVendorV2</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>VendVendorV2Entity_VendorAccountNumber</Name>
					<Field>PrimaryVendorAccountNumber</Field>
					<RelatedField>VendorAccountNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ComparisonPriceBaseUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ComparisonPriceBaseUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>ComparisonPriceBaseUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InventoryUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>InventoryUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>InventoryUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AlternativeReleasedProductV2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductDVEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>AlternativeReleasedProductV2</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResReleasedProductV2Entity_ItemNumber</Name>
					<Field>AlternativeItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SalesUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SalesUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>SalesUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>PurchaseUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>PurchaseUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>PurchaseUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>EcoResEveryProductEntity</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedDataEntity>EcoResEveryProductEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>EveryProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DVReleasedProducts</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProductNumber</Field>
					<RelatedField>ProductNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WHSInventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModuleSales</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypeSales</Name>
								<Field>ModuleType</Field>
								<Value>Sales</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModuleInvent</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypeInvent</Name>
								<Field>ModuleType</Field>
								<Value>Invent</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventTableModulePurch</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>InventTableModule</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>ModuleTypePurch</Name>
								<Field>ModuleType</Field>
								<Value>Purch</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PdsCatchWeightItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PdsCatchWeightItem</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>PdsCatchWeightItem</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResTrackingDimensionGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResTrackingDimensionGroupItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResTrackingDimensionGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResTrackingDimensionGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResTrackingDimensionGroup</Name>
										<JoinRelationName>EcoResTrackingDimensionGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResStorageDimensionGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResStorageDimensionGroupItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResStorageDimensionGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResStorageDimensionGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResStorageDimensionGroup</Name>
										<JoinRelationName>EcoResStorageDimensionGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>InventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>MCRInventTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>MCRInventTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>MCRInventTable</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProduct</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResProduct</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductDimensionGroupProduct</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductDimensionGroupProduct</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResProductDimensionGroup</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResProductDimensionGroup</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<JoinMode>OuterJoin</JoinMode>
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>ProductDimensionGroup</Field>
												<JoinDataSource>EcoResProductDimensionGroupProduct</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>EcoResProduct</JoinDataSource>
										<RelatedField>Product</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductSystemLanguage</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductSystemLanguage</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>EcoResProduct</JoinDataSource>
										<RelatedField>Product</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductTranslationToSystemLanguage</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductTranslation</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>EcoResProduct</JoinDataSource>
										<RelatedField>Product</RelatedField>
									</AxQuerySimpleDataSourceRelation>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation2</Name>
										<Field>SystemLanguageId</Field>
										<JoinDataSource>EcoResProductSystemLanguage</JoinDataSource>
										<RelatedField>LanguageId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResDistinctProduct</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResDistinctProduct</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResDistinctProductVariant</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResDistinctProductVariant</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResProductMaster</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResProductMaster</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResProduct</Name>
								<JoinRelationName>EcoResProduct</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventModelGroupItem</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventModelGroupItem</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventModelGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventModelGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1Copy1</Name>
										<JoinRelationName>InventModelGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<JoinRelationName>InventTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Ledger</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>Ledger</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>InventTable</JoinDataSource>
								<RelatedField>Name</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>