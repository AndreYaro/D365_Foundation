<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjCDSTransactionRelationshipImportEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjCDSTransactionRelationshipImportEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjCDSTransactionRelationshipImportEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();
        boolean ret;
        using (var activityContext = entityActivities.insertEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjCDSTransactionRelationshipImportEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();
        boolean ret;
        using (var activityContext = entityActivities.updateEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        ProjOpsIntegrationLogger logger = ProjOpsIntegrationLogger::createLogger(dataentityviewstr(ProjCDSTransactionRelationshipImportEntity));
        ProjOpsIntegrationInstrumentationActivites entityActivities = logger.projOpsIntegrationActivity();
        boolean ret;
        using (var activityContext = entityActivities.deleteEntityContext())
        {
            this.logTelemetry(_dataSourceCtx, activityContext);
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>logTelemetry</Name>
				<Source><![CDATA[
    private void logTelemetry(DataEntityDataSourceRuntimeContext _dataSourceCtx, SysInstrumentationActivityContext _activityContext)
    {
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::DataSource, any2Str(_dataSourceCtx.name()));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::ConnectionId, any2Str(this.ConnectionId));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction1Id, any2Str(this.Transaction1Id));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction1Role, any2Str(this.Transaction1Role));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction1Type, any2Str(this.Transaction1Type));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction2Id, any2Str(this.Transaction2Id));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction2Role, any2Str(this.Transaction2Role));
        _activityContext.addCustomProperty(ProjOpsIntegrationInstrumentationActivites::Transaction2Type, any2Str(this.Transaction2Type));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<DeveloperDocumentation>@Proj:ProjCDSTransactionRelationsImportEntityDevDoc</DeveloperDocumentation>
	<Label>@Proj:ProjCDSTransactionRelationshipImportEntityTitle</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjCDSTransactionRelationshipImportStaging</DataManagementStagingTable>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConnectionId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ConnectionId</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction1Id</Name>
			<DataField>Transaction1Id</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction1Role</Name>
			<DataField>Transaction1Role</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction1Type</Name>
			<DataField>Transaction1Type</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction2Id</Name>
			<DataField>Transaction2Id</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction2Role</Name>
			<DataField>Transaction2Role</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Transaction2Type</Name>
			<DataField>Transaction2Type</DataField>
			<DataSource>ProjCDSTransactionRelationshipImport</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ConnectionId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction1Id</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction1Role</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction1Type</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction2Id</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction2Role</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Transaction2Type</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProjCDSTransactionRelationshipImport</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProjCDSTransactionRelationshipImport</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>