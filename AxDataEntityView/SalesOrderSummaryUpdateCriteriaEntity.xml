<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderSummaryUpdateCriteriaEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesOrderSummaryUpdateCriteriaEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>tableNameComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str tableNameComputedColumnDefinition()
    {
        str internalTableIdExpression = SysComputedColumn::logicalShiftRight(
            tableStr(SalesOrderSummaryUpdateCriteriaEntity),
            dataEntityDataSourceStr(SalesOrderSummaryUpdateCriteriaEntity, SalesSummaryParameters),
            fieldStr(SalesSummaryParameters, FieldId),
            24);

        Map comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();

        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(SalesTable::getExtFieldId_BR(0, tableNum(SalesTable)) >> 24),
            SysComputedColumn::returnLiteral(tableStr(SalesTable)));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(SalesTable::getExtFieldId_BR(0, tableNum(SalesTable_BR)) >> 24),
            SysComputedColumn::returnLiteral(tableStr(SalesTable_BR)));
        comparisonExpressionMap.insert(
            SysComputedColumn::comparisonLiteral(SalesTable::getExtFieldId_BR(0, tableNum(SalesTableExtensionTH)) >> 24),
            SysComputedColumn::returnLiteral(tableStr(SalesTableExtensionTH)));

        return SysComputedColumn::switch(
            internalTableIdExpression,
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>fieldNameComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str fieldNameComputedColumnDefinition()
    {
        str fieldIdExpression = SysComputedColumn::applyBitmask(
            tableStr(SalesOrderSummaryUpdateCriteriaEntity),
            dataEntityDataSourceStr(SalesOrderSummaryUpdateCriteriaEntity, SalesSummaryParameters),
            fieldStr(SalesSummaryParameters, FieldId),
            24);

        Map comparisonExpressionMap = SysComputedColumn::comparisionExpressionMap();

        SalesPurchaseOrderSummaryUpdateCriteriaEntityHelper::AddGroupFieldsToComparisonMap(
            comparisonExpressionMap, tableNum(SalesTable), tablefieldgroupstr(SalesTable, SummaryUpdate));
        SalesPurchaseOrderSummaryUpdateCriteriaEntityHelper::AddGroupFieldsToComparisonMap(
            comparisonExpressionMap, tableNum(SalesTable_BR), tablefieldgroupstr(SalesTable_BR, SummaryUpdate));
        SalesPurchaseOrderSummaryUpdateCriteriaEntityHelper::AddGroupFieldsToComparisonMap(
            comparisonExpressionMap, tableNum(SalesTableExtensionTH), tablefieldgroupstr(SalesTableExtensionTH, SummaryUpdate));

        return SysComputedColumn::switch(
            fieldIdExpression,
            comparisonExpressionMap,
            SysComputedColumn::returnLiteral(''));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultinternalFieldId</Name>
				<Source><![CDATA[
    private void defaultinternalFieldId()
    {
        if (this.TableName && this.FieldName)
        {
            if (this.isFieldSet(fieldNum(SalesOrderSummaryUpdateCriteriaEntity, TableName))
                && this.isFieldSet(fieldNum(SalesOrderSummaryUpdateCriteriaEntity, FieldName)))
            {
                TableId normalTableId = tableName2Id(this.TableName);
                FieldId normalFieldId = fieldName2Id(normalTableId, this.FieldName);

                this.InternalFieldId = SalesTable::getExtFieldId_BR(normalFieldId, normalTableId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(SalesOrderSummaryUpdateCriteriaEntity, InternalFieldId),
                [fieldNum(SalesOrderSummaryUpdateCriteriaEntity, TableName), fieldNum(SalesOrderSummaryUpdateCriteriaEntity, FieldName)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesOrderSummaryUpdateCriteriaEntity, InternalFieldId):
                this.defaultInternalFieldId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(SalesOrderSummaryUpdateCriteriaEntity, DocumentStatus):
                ret = this.validateDocumentStatus() && ret;
                break;
            case fieldNum(SalesOrderSummaryUpdateCriteriaEntity, TableName):
                ret = this.validateTableName() && ret;
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDocumentStatus</Name>
				<Source><![CDATA[
    private boolean validateDocumentStatus()
    {
        // Only a subset of DocumentStatus is valid for use in this entity.
        switch (this.DocumentStatus)
        {
            case DocumentStatus::Quotation:
            case DocumentStatus::Confirmation:
            case DocumentStatus::PickingList:
            case DocumentStatus::PackingSlip:
            case DocumentStatus::Invoice:
            // <GEERU>
            case DocumentStatus::Invoice4Paym_RU:
            // </GEERU>
                return true;
            default:
                return checkFailed('@SCM:InvalidSalesOrderSummaryCriteriaDocumentStatus');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateTableName</Name>
				<Source><![CDATA[
    private boolean validateTableName()
    {
        if (!tableName2Id(this.TableName))
        {
            return checkFailed('@SYS16078');
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (!this.InternalFieldId)
        {
            ret = checkFailed('@SCM:InvalidFieldTableName');
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesOrderSummaryUpdateCriteriaEntityDevDoc</DeveloperDocumentation>
	<FormRef>SalesSummaryParameters</FormRef>
	<Label>@SYS57740</Label>
	<Tags>Parameters</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesOrderSummaryUpdateCriteriaStaging</DataManagementStagingTable>
	<EntityCategory>Parameters</EntityCategory>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentStatus</Name>
			<DataField>DocumentStatus</DataField>
			<DataSource>SalesSummaryParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>TableName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<ComputedFieldMethod>tableNameComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>TableName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>FieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<ComputedFieldMethod>fieldNameComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>FieldName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InternalFieldId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>FieldId</DataField>
			<DataSource>SalesSummaryParameters</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>DocumentStatus</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TableName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>FieldName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesSummaryParameters</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesSummaryParameters</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>