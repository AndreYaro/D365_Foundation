<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesAgreementLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesAgreementLineEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.SalesAgreementLegalEntityId = this.DataAreaId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(SalesAgreementLineEntity, ShippingSiteId),
                    [fieldNum(SalesAgreementLineEntity, ShippingWarehouseId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesAgreementLineEntity, ShippingSiteId):
                if (this.isFieldSet(fieldNum(SalesAgreementLineEntity, ShippingWarehouseId)))
                {
                    this.ShippingSiteId = InventLocation::find(this.ShippingWarehouseId).InventSiteId;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return new SysTableExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine):
                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                    || _dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
                {
                    CommitmentType commitmentType = this.getCommitmentType(_dataSourceCtx);
                    _dataSourceCtx.setBuffer(new DictTable(AgreementLine::getTableIdFromCommitmentType(commitmentType)).makeRecord());
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, EcoResCategory_SalesCategory):
                EcoResCategoryHierarchyRole hierarchyRole = this.salesHierarchyRole();
                if (hierarchyRole.CategoryHierarchy)
                {
                    ret = EcoResCategory::findByName(this.SalesProductCategoryName, hierarchyRole.CategoryHierarchy);
                }
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        AgreementLine agreementLine;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine):

                agreementLine = _dataSourceCtx.getBuffer();

                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    agreementLine.initFromAgreementHeader(this.findSalesAgreementHeader());

                    if (this.isFieldSet(fieldNum(SalesAgreementLineEntity, ItemNumber)))
                    {
                        agreementLine.ItemId = this.ItemNumber;
                        agreementLine.initFromInventTable();
                    }
                }

                if (this.InventInventoryDimensionEntityFieldsMapping::isAnyInventDimFieldSet())
                {
                    agreementLine.setInventDimId(this.InventInventoryDimensionEntityFieldsMapping::getMergedInventDimId(agreementLine.inventDim()));
                }
                else if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    // Blank inventory dimensions are allowed on the agreement line, but InventDimId still needs to be populated
                    agreementLine.setInventDimId(InventDim::findOrCreateBlank().inventDimId);
                }
                break;

            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLineDefault):

                AgreementLineDefault agreementLineDefault = _dataSourceCtx.getBuffer();
                agreementLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine)).getBuffer();

                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    agreementLineDefault.initFromAgreementHeaderDefault(this.findAgreementHeaderDefault());
                    agreementLineDefault.initFromAgreementLine(agreementLine);

                    if (this.isFieldSet(fieldNum(SalesAgreementLineEntity, ItemNumber)))
                    {
                        agreementLineDefault.initFromInventTable(InventTable::find(this.ItemNumber));
                    }
                }

                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, InventDim):
                agreementLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine)).getBuffer();
                _dataSourceCtx.setBuffer(InventDim::find(agreementLine.InventDimId));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine):
                this.validateWriteAgreementLine(_entityCtx, _dataSourceCtx);
                break;

            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLineDefault):
                this.validateWriteAgreementLineDefault(_entityCtx, _dataSourceCtx);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine):
                this.validateWriteAgreementLine(_entityCtx, _dataSourceCtx);
                break;

            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLineDefault):
                this.validateWriteAgreementLineDefault(_entityCtx, _dataSourceCtx);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine):
                AgreementLine agreementLine = _dataSourceCtx.getBuffer();
                if (this.DefaultLedgerDimension != agreementLine.DefaultDimension)
                {
                    this.DefaultLedgerDimensionDisplayValue = DimensionSetEntity::find(agreementLine.DefaultDimension).DisplayValue;
                    this.DefaultLedgerDimension = agreementLine.DefaultDimension;
                }

                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(agreementLine.inventDim());

                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    public static void jumpRefMethod(str _menuItemName, Common _stagingBuffer, Object _callerObj, DataAreaId _dataAreaId)
    {
        changeCompany(_dataAreaId)
        {
            SalesAgreementLineStaging stagingRecord = _stagingBuffer;
            var record = SalesAgreementHeader::findAgreementId(stagingRecord.SalesAgreementId);

            Args args = new Args();
            args.record(record);
            args.lookupRecord(record);

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIgnoreBlankFields</Name>
				<Source><![CDATA[
    [SubscribesTo(classstr(DMFDelegates), staticdelegatestr(DMFDelegates, isIgnoreBlankValuesSourceMappingsDelegate))]
    public static void setIgnoreBlankFields(TableName _stagingTableName, FieldName _stagingFieldName, DMFOperationType _operationType, EventHandlerResult _eventResult)
    {
        if (_stagingTableName == tableStr(SalesAgreementLineStaging) && _operationType == DMFOperationType::Import)
        {
            _eventResult.result(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditCheckFailed</Name>
				<Source><![CDATA[
    private boolean allowEditCheckFailed(FieldLabel _fieldLabel)
    {
        return checkFailed(strFmt("@ApplicationFoundation:DataEntitiesNoAllowEdit", _fieldLabel));
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditCheckFailedForSetOfFields</Name>
				<Source><![CDATA[
    private boolean allowEditCheckFailedForSetOfFields(Set _fieldIds)
    {
        var enumerator = _fieldIds.getEnumerator();

        while (enumerator.moveNext())
        {
            warning(strFmt("@ApplicationFoundation:DataEntitiesNoAllowEdit", fieldId2PName(tableNum(SalesAgreementLineEntity), enumerator.current())));
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        return super() && this.InventInventoryDimensionEntityFieldsMapping::validate(this.ItemNumber);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteAgreementLineDefault</Name>
				<Source><![CDATA[
    private void validateWriteAgreementLineDefault(DataEntityRuntimeContext _entityContext, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean isValid = true;

        AgreementLineDefault agreementLineDefault = _dataSourceCtx.getBuffer();
        AgreementLine agreementLine = _entityContext.getRuntimeContextByName(dataEntityDataSourceStr(SalesAgreementLineEntity, AgreementLine)).getBuffer();

        var dataProvider = AgreementLineFieldEditabilityDataProvider::newFromAgreementLine(agreementLine);

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, ProjectCategoryId)) && !dataProvider.canEditProjectFields())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, ProjectCategoryId));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, ProjectActivityNumber)) && !dataProvider.canEditProjectFields())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, ProjectActivityNumber));
        }

        if (!isValid)
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteAgreementLine</Name>
				<Source><![CDATA[
    private void validateWriteAgreementLine(DataEntityRuntimeContext _entityContext, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean isValid = true;

        AgreementLine agreementLine = _dataSourceCtx.getBuffer();
        var dataProvider = AgreementLineFieldEditabilityDataProvider::newFromAgreementLine(agreementLine);

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, ItemNumber)) && !dataProvider.canEditItemId())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, ItemNumber));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, SalesProductCategoryName))
            && !dataProvider.canEditCategory()
            && !agreementLine.isCategorySameAsDerived())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, SalesProductCategoryName));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, IsCommitmentMaximumEnforced)) && !dataProvider.canEditIsMaxEnforced())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, IsCommitmentMaximumEnforced));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, IsPriceAndDiscountFixed)) && !dataProvider.canEditIsPriceInformationMandatory())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, IsPriceAndDiscountFixed));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, LineDiscountPercentage)) && !dataProvider.canEditDiscount())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, LineDiscountPercentage));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, EffectiveDate)) && !dataProvider.canEditValidityPeriod())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, EffectiveDate));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, ExpirationDate)) && !dataProvider.canEditValidityPeriod())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, ExpirationDate));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, ProjectId)) && !dataProvider.canEditProjectId())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, ProjectId));
        }

        if (!dataProvider.canEditInventoryDimensions())
        {
            Set inventDimsWithFieldStateSet = this.InventInventoryDimensionEntityFieldsMapping::inventDimFieldIdsWithFieldStateSet();

            if (inventDimsWithFieldStateSet.elements() > 0)
            {
                isValid = this.allowEditCheckFailedForSetOfFields(inventDimsWithFieldStateSet);
            }
        }

        boolean isQuantityBasedLine = agreementLine.isQuantityBased();
        var qtyAgreementLine = agreementLine as AgreementLineQuantityCommitment;
        var qtyDataProvider = dataProvider as AgreementLineQuantityCommitmentFieldEditabilityDataProvider;

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, CommittedQuantity))
            && (!isQuantityBasedLine || (!qtyDataProvider.canEditCommitedQuantity() && !qtyAgreementLine.isCommittedQtySameAsDerived())))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, CommittedQuantity));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, CommittedCatchWeightQuantity)) && !(isQuantityBasedLine && qtyDataProvider.canEditPdsCWCommitedQuantity()))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, CommittedCatchWeightQuantity));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, UnitSymbol)) && !(isQuantityBasedLine && qtyDataProvider.canEditProductUnitOfMeasure()))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, UnitSymbol));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, LineDiscountAmount)) && !(isQuantityBasedLine && dataProvider.canEditDiscount()))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, LineDiscountAmount));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, Price)) && !(isQuantityBasedLine && dataProvider.canEditPrice()))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, Price));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, PriceQuantity)) && !(isQuantityBasedLine && dataProvider.canEditPrice()))
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, PriceQuantity));
        }

        if (this.isFieldModified(fieldNum(SalesAgreementLineEntity, CommittedAmount)) && isQuantityBasedLine)
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesAgreementLineEntity, CommittedAmount));
        }

        // We need to validate certain agreement line default fields here because if no fields are specified from <c>AgreementLineDefault</c>
        // then the record will never be inserted by the data entity framework and thus will never be validated.
        // But in certain cases (e.g. when ProjectId is specified on theheader) the <c>AgreementLineDefault</c>  record must exists.
        if (!this.ProjectCategoryId && agreementLine.ProjectProjId)
        {
            isValid = checkFailed(strFmt("@SYS26332", fieldPName(SalesAgreementLineEntity, ProjectCategoryId)));
        }

        if (!isValid)
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCommitmentTypeForInsert</Name>
				<Source><![CDATA[
    private CommitmentType getCommitmentTypeForInsert()
    {
        if (this.isFieldSet(fieldNum(SalesAgreementLineEntity, CommitmentType)))
        {
            return this.CommitmentType;
        }

        return this.findSalesAgreementHeader().DefaultAgreementLineType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getCommitmentType</Name>
				<Source><![CDATA[
    private CommitmentType getCommitmentType(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.getDatabaseOperation())
        {
            case DataEntityDatabaseOperation::Insert:
                return this.getCommitmentTypeForInsert();

            case DataEntityDatabaseOperation::Update:
                return this.CommitmentType;

            default:
                throw error(Error::wrongUseOfFunction(funcName()));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSalesAgreementHeader</Name>
				<Source><![CDATA[
    private SalesAgreementHeader findSalesAgreementHeader()
    {
        return SalesAgreementHeader::findAgreementId(this.SalesAgreementId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findAgreementHeaderDefault</Name>
				<Source><![CDATA[
    private AgreementHeaderDefault findAgreementHeaderDefault()
    {
        return AgreementHeaderDefault::findAgreementHeader(SalesAgreementHeader::findAgreementId(this.SalesAgreementId).RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesHierarchyRole</Name>
				<Source><![CDATA[
    private EcoResCategoryHierarchyRole salesHierarchyRole()
    {
        EcoResCategoryHierarchyRole hierarchyRole;

        select firstonly CategoryHierarchy from hierarchyRole
            where hierarchyRole.NamedCategoryHierarchyRole == EcoResCategoryNamedHierarchyRole::Sales;

        return hierarchyRole;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldModified</Name>
				<Source><![CDATA[
    private boolean isFieldModified(FieldId _fieldId)
    {
        return DataEntityDataSourceRuntimeContextAppSuite_Extension::isFieldModified(this, _fieldId);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>TradeBlanketOrder</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesAgreementLineEntityDevDoc</DeveloperDocumentation>
	<FormRef>SalesAgreement</FormRef>
	<Label>@SCM:SalesAgreementLineEntityLabel</Label>
	<Tags>Sales agreements</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesAgreementLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>SalesAgreementLegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>SalesAgreementLines</PublicCollectionName>
	<PublicEntityName>SalesAgreementLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesAgreementLegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesAgreementId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommitmentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesProductCategoryName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ShippingWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittedCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittedQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CommittedAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCommitmentMaximumEnforced</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MinimumReleaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MaximumReleaseAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Price</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPriceAndDiscountFixed</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectCategoryId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectActivityNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultLedgerDimensionDisplayValue</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesAgreementRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Agreement</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesAgreementLegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesAgreementId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>SalesNumberSequence</DataField>
			<DataSource>SalesAgreementHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>LineNumber</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommitmentType</Name>
			<DataField>AgreementLineType</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesProductCategoryRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Category</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesProductCategoryName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS135189</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory_SalesCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryProfileId</Name>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommittedCatchWeightQuantity</Name>
			<Label>@SCM:AgreementCommittedCatchWeightQuantity</Label>
			<DataField>PdsCWCommitedQuantity</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommittedQuantity</Name>
			<Label>@SCM:AgreementCommittedQuantity</Label>
			<DataField>CommitedQuantity</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitSymbol</Name>
			<DataField>ProductUnitOfMeasure</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommittedAmount</Name>
			<Label>@SCM:AgreementCommittedAmount</Label>
			<DataField>CommitedAmount</DataField>
			<DataSource>AgreementLine_AgreementLineVolumeCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Price</Name>
			<DataField>PricePerUnit</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountPercentage</Name>
			<DataField>LineDiscountPercent</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountAmount</Name>
			<DataField>LineDiscountAmount</DataField>
			<DataSource>AgreementLine_AgreementLineQuantityCommitment</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPriceAndDiscountFixed</Name>
			<DataField>IsPriceInformationMandatory</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EffectiveDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>EffectiveDate</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpirationDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ExpirationDate</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsCommitmentMaximumEnforced</Name>
			<DataField>IsMaxEnforced</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumReleaseAmount</Name>
			<DataField>AgreedReleaseLineMinAmount</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumReleaseAmount</Name>
			<DataField>AgreedReleaseLineMaxAmount</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultLedgerDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjectProjId</DataField>
			<DataSource>AgreementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectActivityNumber</Name>
			<Label>@SYS58767</Label>
			<DataField>ProjectActivityNumber</DataField>
			<DataSource>AgreementLineDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<Label>@SYS6114</Label>
			<DataField>ProjectCategory</DataField>
			<DataSource>AgreementLineDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CommissionSalesRepresentativeGroupId</Name>
			<DataField>SalesCommissionGroup</DataField>
			<DataSource>AgreementLineDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryModeCode</Name>
			<DataField>SalesModeOfDelivery</DataField>
			<DataSource>AgreementLineDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillRebateCalculationExcludeLine</Name>
			<DataField>PdsExcludeFromRebate</DataField>
			<DataSource>AgreementLineDefault</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AgreementCustomerAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CustAccount</DataField>
			<DataSource>SalesAgreementHeader</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceCustomerAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CustomerInvoiceAccount</DataField>
			<DataSource>SalesAgreementHeaderDefault</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>SalesAgreementId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ShippingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
					<MapFieldTo>InventoryProfileId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ShippingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>ShippingSite</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventOperationalSiteEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ShippingSite</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ShippingSiteId</Field>
					<RelatedField>SiteId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ShippingWarehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ShippingWarehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ShippingWarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Unit</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Unit</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>UnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>DefaultLedgerDimension</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>DefaultLedgerDimension</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>DefaultLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Project</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Project</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>SalesAgreementHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SalesAgreementHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SalesAgreementHeader</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>SalesAgreementId</Field>
					<RelatedField>SalesAgreementId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ReleasedProductV2</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReleasedProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesAgreementLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>AgreementLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>AgreementLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesAgreementHeader</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesAgreementHeader</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CompanyInfo</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>CompanyInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>SellingLegalEntity</Field>
										<JoinDataSource>SalesAgreementHeader</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SalesAgreementHeaderDefault</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>SalesAgreementHeaderDefault</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>RecId</Field>
										<JoinDataSource>SalesAgreementHeader</JoinDataSource>
										<RelatedField>SalesAgreementHeader</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Agreement</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AgreementLineDefault</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AgreementLineDefault</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>AgreementLine</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultLedgerDimensionDAVS</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory_SalesCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResCategory_PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Category</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>InventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>InventDimDataAreaId</Field>
								<JoinDataSource>AgreementLine</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources>
					<AxQuerySimpleDerivedDataSource>
						<Name>AgreementLine_AgreementLineQuantityCommitment</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AgreementLineQuantityCommitment</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
					<AxQuerySimpleDerivedDataSource>
						<Name>AgreementLine_AgreementLineVolumeCommitment</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>AgreementLineVolumeCommitment</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
					</AxQuerySimpleDerivedDataSource>
				</DerivedDataSources>
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>IsDeleted</Name>
						<Field>IsDeleted</Field>
						<Status>Hidden</Status>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>