<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventQualityOrderLineResultEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventQualityOrderLineResultEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes logic for updating quality order line test results.
    /// </summary>
    /// <param name="_dmfDefinitionGroupExecution">
    /// The definition group that should be processed.
    /// </param>
    /// <remarks>
    /// The test result of quality order lines gets updated.
    /// </remarks>
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        #OCCRetryCount

        InventQualityOrderLineResultStaging staging;
        InventQualityOrderLine inventQualityOrderLine;

        while select QualityOrderNumber, QualityTestId, QualityOrderSequenceNumber from staging
            group by QualityOrderNumber, QualityTestId, QualityOrderSequenceNumber
            where staging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && staging.ExecutionId    == _dmfDefinitionGroupExecution.ExecutionId
                && staging.TransferStatus == DMFTransferStatus::Completed
        {
            try
            {
                ttsbegin;
                inventQualityOrderLine = InventQualityOrderLine::find(staging.QualityOrderNumber, staging.QualityTestId, staging.QualityOrderSequenceNumber, true);
                inventQualityOrderLine.setTestResult();
                inventQualityOrderLine.update();
                ttscommit;
            }
            catch (Exception::Deadlock)
            {
                retry;
            }
            catch (Exception::UpdateConflict)
            {
                if (appl.ttsLevel() == 0)
                {
                    if (xSession::currentRetryCount() >= #RetryNum)
                    {
                        throw Exception::UpdateConflictNotRecovered;
                    }
                    else
                    {
                        retry;
                    }
                }
                else
                {
                    throw Exception::UpdateConflict;
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventQualityManagement</ConfigurationKey>
	<DeveloperDocumentation>@SCM:InventQualityOrderLineResultEntityDevDocumentation</DeveloperDocumentation>
	<FormRef>InventQualityOrderLineResults</FormRef>
	<Label>@SCM:InventQualityOrderLineResultEntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventQualityOrderLineResultStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>QualityOrderLineResults</PublicCollectionName>
	<PublicEntityName>QualityOrderLineResult</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsTestValidationIncludingResult</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResultLineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResultCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityTestId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TestResult</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResultInventoryQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityTestVariableOutcomeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ResultValue</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QualityOrderSequenceNumber</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsTestValidationIncludingResult</Name>
			<DataField>IncludeResults</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResultLineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResultCatchWeightQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PdsCWTestResultQuantity</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityOrderNumber</Name>
			<DataField>QualityOrderId</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityTestId</Name>
			<DataField>TestId</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TestResult</Name>
			<DataField>TestResult</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResultInventoryQuantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>TestResultQuantity</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityTestVariableOutcomeId</Name>
			<DataField>TestResultValueOutcome</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResultValue</Name>
			<DataField>TestResultValueReal</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QualityOrderSequenceNumber</Name>
			<DataField>TestSequence</DataField>
			<DataSource>InventQualityOrderLineResults</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>QualityOrderNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityOrderSequenceNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>QualityTestId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ResultLineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventQualityOrderLineResults</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventQualityOrderLineResults</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>