<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PurchPurchaseOrderReapprovalPolicyRuleEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PurchPurchaseOrderReapprovalPolicyRuleEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        super();

        this.PolicyRuleName = PurchPurchasingPolicyEntityHelper::purchReapprovalPolicyRuleName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        DictTable dictTable = new DictTable(this.ReapprovalTableId);

        if (this.ReapprovalFieldId == 0
            && this.ReapprovalTableId == tableNum(AccountingDistribution))
        {
            // Entire record changed, e.g. Accounting distribution
            this.ReapprovalTableName = dictTable.name();
            this.ReapprovalFieldName = 'RecordChanged';
        }
        else
        {
            DictField dictField = new DictField(this.ReapprovalTableId, this.ReapprovalFieldId);

            if (dictTable
                && dictField
                && dictField.name()
                && dictField.isSql())
            {
                this.ReapprovalTableName = dictTable.name();
                this.ReapprovalFieldName = dictField.name();
            }
            else
            {
                this.ReapprovalTableName = int2Str(this.ReapprovalTableId);
                this.ReapprovalFieldName = int2Str(this.ReapprovalFieldId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReapprovalTableId</Name>
				<Source><![CDATA[
    private void defaultReapprovalTableId()
    {
        if (this.isFieldSet(fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableName)))
        {
            this.ReapprovalTableId = tableName2Id(this.ReapprovalTableName);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultReapprovalFieldId</Name>
				<Source><![CDATA[
    private void defaultReapprovalFieldId()
    {
        if (this.isFieldSet(fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableName))
            && this.isFieldSet(fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalFieldName)))
        {
            var reApprovaltableId = SysDictTable::getRootTable(tableName2Id(this.ReapprovalTableName));

            if (this.ReapprovalFieldName == 'RecordChanged')
            {
                // Entire record changed, e.g. Accounting distribution
                this.ReapprovalFieldId = 0;
            }
            else
            {
                SqlDictionary sqlDictionary;

                select FieldId, Array from sqlDictionary
                    where sqlDictionary.tabId == reApprovaltableId
                        && sqlDictionary.name == this.ReapprovalFieldName;

                this.ReapprovalFieldId = fieldId2Ext(sqlDictionary.FieldId, sqlDictionary.Array);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableId):
                this.defaultReapprovalTableId();
                break;
            case fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalFieldId):
                this.defaultReapprovalFieldId();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableId), [fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableName)]],
            [fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalFieldId), [fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalFieldName)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (this.ReapprovalTableName && !this.ReapprovalTableId)
        {
            ret = checkFailed(strFmt("@SCM:Entity_ValidationError_PurchPurchaseOrderReapprovalPolicyRuleEntity_InvalidValue",
                                this.ReapprovalTableName,
                                fieldId2PName(tableNum(PurchPurchaseOrderReapprovalPolicyRuleEntity), fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalTableName))));
        }

        if (this.ReapprovalFieldName && !this.ReapprovalFieldId
            && !(this.ReapprovalFieldName == 'RecordChanged' && this.ReapprovalTableId == tableNum(AccountingDistribution)))
        {
            ret = checkFailed(strFmt("@SCM:Entity_ValidationError_PurchPurchaseOrderReapprovalPolicyRuleEntity_InvalidValue",
                                this.ReapprovalFieldName,
                                fieldId2PName(tableNum(PurchPurchaseOrderReapprovalPolicyRuleEntity), fieldNum(PurchPurchaseOrderReapprovalPolicyRuleEntity, ReapprovalFieldName))));
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        if (this.ValidTo <= DateTimeUtil::utcNow())
        {
            throw error("@SCM:Entity_ValidationError_UpdateExpiredPolicy");
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PurchPurchaseOrderReapprovalPolicyRuleEntity, SysPolicyRuleType):
                ret = SysPolicyRuleType::findByNamePolicyTypeEnum(this.PolicyRuleName, SysPolicyTypeEnum::PurchasingPolicy);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>jumpRefMethod</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the purchasing policy rule UI based on the selected record in the purchasing policy rule staging table.
    /// </summary>
    /// <param name="_menuItemName">
    /// This name of the menu item to open.
    /// </param>
    /// <param name="_buffer">
    /// The purchasing policy rule staging record selected.
    /// </param>
    /// <param name="_caller">
    /// This caller.
    /// </param>
    /// <param name="_dataArea">
    /// The legal entity Id of the caller context.
    /// </param>
    public static void jumpRefMethod(MenuItemName _menuItemName, PurchPurchaseOrderReapprovalPolicyRuleStaging _buffer, object _caller, DataAreaId _dataArea)
    {
        changeCompany(_dataArea)
        {
            SysPolicyType policyType = SysPolicyType::findByEnum(SysPolicyTypeEnum::PurchasingPolicy);

            Args args = new Args();

            args.record(SysPolicy::findByNamePolicyType(_buffer.PurchasingPolicyName, policyType.RecId));
            args.caller(_caller);
            args.parm(int2Str(policyType.PolicyType));

            MenuFunction::runCalled(_menuItemName, MenuItemType::Display, false, args);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SCM:PurchPurchaseOrderReapprovalPolicyRuleEntityDevDoc</DeveloperDocumentation>
	<FormRef>SysPolicyDisplayView</FormRef>
	<Label>@SCM:PurchPurchaseOrderReapprovalPolicyRuleEntity</Label>
	<Tags>Purchase order setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PurchPurchaseOrderReapprovalPolicyRuleStaging</DataManagementStagingTable>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidFrom</Name>
			<DataField>ValidFrom</DataField>
			<DataSource>PurchReapprovalPolicyRuleTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidTo</Name>
			<DataField>ValidTo</DataField>
			<DataSource>PurchReapprovalPolicyRuleTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchasingPolicyName</Name>
			<Label>@SysPolicy:Field_SysPolicyEntity_PolicyName</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>PolicyName</DataField>
			<DataSource>PurchPurchasingPolicyEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Policy</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Policy</DataField>
			<DataSource>PurchReapprovalPolicyRuleTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PolicyRuleType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PolicyRuleType</DataField>
			<DataSource>PurchReapprovalPolicyRuleTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PolicyRuleName</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Name</DataField>
			<DataSource>SysPolicyRuleType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ReapprovalTableName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ExtendedDataType>TableName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ReapprovalFieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReapprovalFieldId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RefFieldId</DataField>
			<DataSource>PurchReapprovalPolicyRuleFields</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReapprovalTableId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RefTableId</DataField>
			<DataSource>PurchReapprovalPolicyRuleFields</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>PurchasingPolicyName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ValidFrom</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ReapprovalTableName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ReapprovalFieldName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PurchReapprovalPolicyRuleFields</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PurchReapprovalPolicyRuleFields</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PurchReapprovalPolicyRuleTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>PurchReapprovalPolicyRuleTable</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PurchPurchasingPolicyEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>PurchPurchasingPolicyEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Policy</Field>
										<JoinDataSource>PurchReapprovalPolicyRuleTable</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>SysPolicyRuleType</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>SysPolicyRuleType</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>SysPolicyRuleType_SysPolicySourceDocumentRuleType</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>SysPolicySourceDocumentRuleType</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>Name</Name>
										<Field>Name</Field>
										<Status>Hidden</Status>
										<Value>(PurchPurchasingPolicyEntityHelper::purchReapprovalPolicyRuleQueryRangeValue())</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>PolicyRuleType</Field>
										<JoinDataSource>PurchReapprovalPolicyRuleTable</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PurchReapprovalPolicyRuleTable</Field>
								<JoinDataSource>PurchReapprovalPolicyRuleFields</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>