<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryTransferJournalEntryEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventInventoryTransferJournalEntryEntity extends common
{    

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = this.validateJournalType();

        ret = this.validateInventStatusId() && ret;

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateJournalType</Name>
				<Source><![CDATA[
    private boolean validateJournalType()
    {
        InventJournalTable journalHeader = InventJournalTable::find(this.JournalNumber);
        if (journalHeader
            && journalHeader.JournalType != InventJournalType::Transfer)
        {
            return checkFailed(strFmt("@SYS22977", InventJournalType::Transfer));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateInventStatusId</Name>
				<Source><![CDATA[
    private boolean validateInventStatusId()
    {
        if (this.DestinationInventoryStatusId && this.SourceInventoryStatusId != this.DestinationInventoryStatusId)
        {
            return checkFailed("@SCM:InventTransferJournalEntryEntityInventStatusIdValidFailedMsg");
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(InventInventoryTransferJournalEntryEntity, SourceInventorySiteId),
                [fieldNum(InventInventoryTransferJournalEntryEntity, SourceWarehouseId)]],
            [fieldNum(InventInventoryTransferJournalEntryEntity, DestinationInventorySiteId),
                [fieldNum(InventInventoryTransferJournalEntryEntity, DestinationWarehouseId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventInventoryTransferJournalEntryEntity, SourceInventorySiteId):
                if (this.isFieldSet(fieldNum(InventInventoryTransferJournalEntryEntity, SourceWarehouseId)))
                {
                    this.SourceInventorySiteId = InventLocation::find(this.SourceWarehouseId).InventSiteId;
                }
                break;

            case fieldNum(InventInventoryTransferJournalEntryEntity, DestinationInventorySiteId):
                if (this.isFieldSet(fieldNum(InventInventoryTransferJournalEntryEntity, DestinationWarehouseId)))
                {
                    this.DestinationInventorySiteId = InventLocation::find(this.DestinationWarehouseId).InventSiteId;
                }
                break;
        }

        if (!this.isFieldSet(_fieldId))
        {
            this.InventInventoryJournalEntryMap::defaultField(_fieldId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return new SysTableExtension();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDim):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;

            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDimTo):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;
        }
        
        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDim):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;

            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDimTo):
                // Read only data source was handled by mapEntityToDataSource(...)
                return true;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.skipDataSourceValidateField(fieldNum(InventInventoryTransferJournalEntryEntity, LineNumber), true);

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventJournalTrans):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        this.InventInventoryJournalEntryMap::setJournalNumber(InventJournalType::Transfer);
                        this.InventInventoryJournalEntryMap::setDefaultDimensions(_dataSourceCtx.getBuffer());
                        InventJournalTrans inventJournalTrans = _dataSourceCtx.getBuffer();
                        inventJournalTrans.Unit = InventTable::find(this.ItemNumber, false).inventUnitId();
                        inventJournalTrans.UnitQty = this.InventoryQuantity;
                        break;
                }
                break;

            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDim):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                        _dataSourceCtx.setBuffer(inventDim);

                        var journalTransContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventJournalTrans));

                        InventJournalTrans journalTrans = journalTransContext.getBuffer();
                        this.InventInventoryJournalEntryMap::setDefaultDimensions(journalTrans);
                        journalTrans.setInventDimId(inventDim.inventDimId);
                        if (journalTrans.ItemId 
                            && inventDim.inventDimId
                            && InventoryTransferJournalEntityUpdateCostPriceFlight::instance().isEnabled())
                        {
                            journalTrans.setCostPrice(inventDim.inventDimId, inventDim, journalTrans.inventTableModuleInvent());
                        }
                        break;
                }
                break;

            case dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventDimTo):
                switch (_entityCtx.getDatabaseOperation())
                {
                    case DataEntityDatabaseOperation::Insert:
                    case DataEntityDatabaseOperation::Update:
                        InventDim inventDimTo;
                        inventDimTo.InventSiteId = this.DestinationInventorySiteId;
                        inventDimTo.InventLocationId = this.DestinationWarehouseId;
                        inventDimTo.wMSLocationId = this.DestinationWarehouseLocationId;
                        inventDimTo.InventColorId = this.DestinationProductColorId;
                        inventDimTo.InventStyleId = this.DestinationProductStyleId;
                        inventDimTo.InventVersionId = this.DestinationProductVersionId;
                        inventDimTo.InventSizeId = this.DestinationProductSizeId;
                        inventDimTo.configId = this.DestinationProductConfigurationId;
                        inventDimTo.inventBatchId = this.DestinationItemBatchNumber;
                        inventDimTo.inventSerialId = this.DestinationItemSerialNumber;
                        inventDimTo.LicensePlateId = this.DestinationLicensePlateNumber;
                        inventDimTo.InventOwnerId_RU = this.DestinationInventoryOwnerId;
                        inventDimTo.InventProfileId_RU = this.DestinationInventoryProfileId;
                        inventDimTo.InventGtdId_RU = this.DestinationInventoryGtdId;

                        if (!this.DestinationInventoryStatusId)
                        {
                            inventDimTo.InventStatusId = this.SourceInventoryStatusId;
                        }
                        else
                        {
                            inventDimTo.InventStatusId = this.DestinationInventoryStatusId;
                        }

                        inventDimTo = InventDim::findOrCreate(inventDimTo);
                        _dataSourceCtx.setBuffer(inventDimTo);

                        var journalTransContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventJournalTrans));

                        InventJournalTrans journalTrans = journalTransContext.getBuffer();
                        journalTrans.ToInventDimId = inventDimTo.inventDimId;
                        break;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventInventoryTransferJournalEntryEntity, InventJournalTrans))
        {
            InventJournalTrans inventJournalTrans = _dataSourceCtx.getBuffer();
            InventDim fromInventDim = inventJournalTrans.inventDim();
            this.SourceInventorySiteId = fromInventDim.InventSiteId;
            this.SourceWarehouseId = fromInventDim.InventLocationId;
            this.SourceWarehouseLocationId = fromInventDim.wMSLocationId;
            this.SourceProductColorId = fromInventDim.InventColorId;
            this.SourceProductStyleId = fromInventDim.InventStyleId;
            this.SourceProductVersionId = fromInventDim.InventVersionId;
            this.SourceProductSizeId = fromInventDim.InventSizeId;
            this.SourceProductConfigurationId = fromInventDim.configId;
            this.SourceItemBatchNumber = fromInventDim.inventBatchId;
            this.SourceItemSerialNumber = fromInventDim.inventSerialId;
            this.SourceLicensePlateNumber = fromInventDim.LicensePlateId;
            this.SourceInventoryGtdId = fromInventDim.InventGtdId_RU;
            this.SourceInventoryOwnerId = fromInventDim.InventOwnerId_RU;
            this.SourceInventoryProfileId = fromInventDim.InventProfileId_RU;

            InventDim toInventDim = inventJournalTrans.toInventDim();
            this.DestinationInventorySiteId = toInventDim.InventSiteId;
            this.DestinationWarehouseId = toInventDim.InventLocationId;
            this.DestinationWarehouseLocationId = toInventDim.wMSLocationId;
            this.DestinationProductColorId = toInventDim.InventColorId;
            this.DestinationProductStyleId = toInventDim.InventStyleId;
            this.DestinationProductVersionId = toInventDim.InventVersionId;
            this.DestinationProductSizeId = toInventDim.InventSizeId;
            this.DestinationProductConfigurationId = toInventDim.configId;
            this.DestinationItemBatchNumber = toInventDim.inventBatchId;
            this.DestinationItemSerialNumber = toInventDim.inventSerialId;
            this.DestinationLicensePlateNumber = toInventDim.LicensePlateId;
            this.DestinationInventoryGtdId = toInventDim.InventGtdId_RU;
            this.DestinationInventoryOwnerId = toInventDim.InventOwnerId_RU;
            this.DestinationInventoryProfileId = toInventDim.InventProfileId_RU;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates missing journal headers after the import data have been added to the staging table.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        InventInventoryTransferJournalEntryStaging stagingRecord;
        InventJournalTable journalTable;

        while select JournalNumber, JournalNameId from stagingRecord group by JournalNumber, JournalNameId
            where stagingRecord.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                && stagingRecord.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
            notexists join journalTable
                where journalTable.JournalId == stagingRecord.JournalNumber
        {
            InventInventoryTransferJournalEntryEntity::createJournalHeader(stagingRecord.JournalNameId, InventJournalType::Transfer, stagingRecord.JournalNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes logic for updating journal headers.
    /// </summary>
    /// <param name="_dmfDefinitionGroupExecution">
    /// The definition group that should be processed.
    /// </param>
    /// <remarks>
    /// The number of journal lines gets updated on the journal header.
    /// </remarks>
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        InventInventoryJournalEntryStagingMap::postTargetProcess(_dmfDefinitionGroupExecution, tableNum(InventInventoryTransferJournalEntryStaging));
    }

]]></Source>
			</Method>
			<Method>
				<Name>createJournalHeader</Name>
				<Source><![CDATA[
    private static InventJournalTable createJournalHeader(
        JournalNameId _journalNameId, 
        InventJournalType _expectedJournalType,
        InventJournalId _journalNumber)
    {
        InventJournalName inventJournalName = InventJournalName::find(_journalNameId);
        InventJournalTable inventJournalTable;

        if (inventJournalName
            && inventJournalName.JournalType == _expectedJournalType)
        {
            inventJournalTable.initFromInventJournalName(inventJournalName);
            inventJournalTable.VoucherDraw = JournalVoucherDraw::Post;
            inventJournalTable.JournalId = _journalNumber;
            inventJournalTable.JournalOriginType = InventJournalOriginType::ExternalIntegration;
            inventJournalTable.insert();
        }
        else
        {
            throw error(strFmt("@SYS22977", _expectedJournalType));
        }

        return inventJournalTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query transferJournalEntryQuery = new Query();

        var transferJournalEntryDS = transferJournalEntryQuery.addDataSource(tableNum(InventJournalTrans));

        var transferJournalTableDS = transferJournalEntryDS.addDataSource(tableNum(InventJournalTable));
        transferJournalTableDS.addLink(fieldNum(InventJournalTrans, JournalId), fieldNum(InventJournalTable, JournalId));
        transferJournalTableDS.joinMode(JoinMode::InnerJoin);
        transferJournalTableDS.fetchMode(QueryFetchMode::One2One);

        var defaultDimensionDS = transferJournalEntryDS.addDataSource(tableNum(DimensionAttributeValueSet));
        defaultDimensionDS.addLink(fieldNum(InventJournalTrans, DefaultDimension), fieldNum(DimensionAttributeValueSet, RecId));
        defaultDimensionDS.joinMode(JoinMode::OuterJoin);
        defaultDimensionDS.fetchMode(QueryFetchMode::One2One);

        // InventDim should not change.

        return transferJournalEntryQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:Developer_InventInventoryTransferJournalEntryEntity</DeveloperDocumentation>
	<FormRef>InventJournalTableTransfer</FormRef>
	<Label>@SCM:DataEntity_InventInventoryTransferJournalEntryEntity</Label>
	<Tags>Journals</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventInventoryTransferJournalEntryStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>InventoryTransferJournalEntries</PublicCollectionName>
	<PublicEntityName>InventoryTransferJournalEntry</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>JournalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceInventorySiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceInventoryStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceItemBatchNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceItemSerialNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceWarehouseLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceLicensePlateNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationInventorySiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationInventoryStatusId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationItemBatchNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationItemSerialNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationLicensePlateNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationWarehouseLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InventoryQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransactionDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceInventoryGtdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceInventoryProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SourceInventoryOwnerId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationInventoryGtdId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationInventoryProfileId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DestinationInventoryOwnerId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNameId</Name>
			<DataField>JournalNameId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNumber</Name>
			<DataField>JournalId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>LineNum</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryQuantity</Name>
			<DataField>Qty</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceInventorySiteId</Name>
			<Label>@SYS106955</Label>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceInventoryStatusId</Name>
			<Label>@WAX1301</Label>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceItemBatchNumber</Name>
			<Label>@SYS54655</Label>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceItemSerialNumber</Name>
			<Label>@SYS54659</Label>
			<DataField>inventSerialId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceWarehouseId</Name>
			<Label>@SYS25253</Label>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceProductSizeId</Name>
			<Label>@SYS74170</Label>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceProductStyleId</Name>
			<Label>@FPK270035</Label>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceProductVersionId</Name>
			<Label>@SCM:VersionIssueDimensionLabel</Label>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceProductColorId</Name>
			<Label>@SYS74172</Label>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceProductConfigurationId</Name>
			<Label>@SYS69975</Label>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceWarehouseLocationId</Name>
			<Label>@SYS50352</Label>
			<DataField>wMSLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceLicensePlateNumber</Name>
			<Label>@WAX5598</Label>
			<DataField>LicensePlateId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationItemBatchNumber</Name>
			<Label>@SYS54657</Label>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationItemSerialNumber</Name>
			<Label>@SYS54662</Label>
			<DataField>inventSerialId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationInventoryStatusId</Name>
			<Label>@WAX1302</Label>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationWarehouseId</Name>
			<Label>@SYS8519</Label>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationInventorySiteId</Name>
			<Label>@SYS106956</Label>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationProductStyleId</Name>
			<Label>@FPK270032</Label>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationProductVersionId</Name>
			<Label>@SCM:VersionReceiptDimensionLabel</Label>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationProductSizeId</Name>
			<Label>@SYS74171</Label>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationProductColorId</Name>
			<Label>@SYS74173</Label>
			<DataField>InventColorId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationProductConfigurationId</Name>
			<Label>@SYS69976</Label>
			<DataField>configId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationWarehouseLocationId</Name>
			<Label>@SYS50351</Label>
			<DataField>wMSLocationId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationLicensePlateNumber</Name>
			<Label>@WAX5599</Label>
			<DataField>LicensePlateId</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>TransDate</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CatchWeightQuantity</Name>
			<DataField>PdsCWQty</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>InventJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceInventoryGtdId</Name>
			<Label>@ApplicationSuite_Localization:FromGTDNumber</Label>
			<DataField>InventGtdId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceInventoryProfileId</Name>
			<Label>@GLS113744</Label>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SourceInventoryOwnerId</Name>
			<Label>@GLS115592</Label>
			<DataField>InventOwnerId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationInventoryGtdId</Name>
			<Label>@ApplicationSuite_Localization:ToGTDNumber</Label>
			<DataField>InventGtdId_RU</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationInventoryProfileId</Name>
			<Label>@GLS113726</Label>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DestinationInventoryOwnerId</Name>
			<Label>@GLS115598</Label>
			<DataField>InventOwnerId_RU</DataField>
			<DataSource>InventDimTo</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryJournalEntryMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CatchWeightQuantity</MapField>
					<MapFieldTo>CatchWeightQuantity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CostAmount</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DefaultDimensionDisplayValue</MapField>
					<MapFieldTo>DefaultLedgerDimensionDisplayValue</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventoryQuantity</MapField>
					<MapFieldTo>InventoryQuantity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventoryStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ItemNumber</MapField>
					<MapFieldTo>ItemNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalHeaderOffsetMainAccountId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNameId</MapField>
					<MapFieldTo>JournalNameId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>JournalNumber</MapField>
					<MapFieldTo>JournalNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetMainAccountId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>OffsetMainAccountIdDisplayValue</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PriceUnit</MapField>
					<MapFieldTo>UnitCostQuantity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransactionDate</MapField>
					<MapFieldTo>TransactionDate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>UnitCost</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>SourceProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>SourceItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>SourceProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
					<MapFieldTo>SourceInventoryGTDId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>SourceWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
					<MapFieldTo>SourceInventoryOwnerId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
					<MapFieldTo>SourceInventoryProfileId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
					<MapFieldTo>SourceItemSerialNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>SourceInventorySiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>SourceProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>SourceInventoryStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>SourceProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>SourceProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
					<MapFieldTo>SourceLicensePlateNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
					<MapFieldTo>SourceWarehouseLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>InventoryTransferJournalHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventInventoryTransferJournalHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>JournalNumber</Field>
					<RelatedField>JournalNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventJournalTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventJournalTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventJournalTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JournalTypeTransfer</Name>
								<Field>JournalType</Field>
								<Status>Hidden</Status>
								<Value>Transfer</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventJournalTrans</JoinDataSource>
								<JoinRelationName>InventJournalTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimId</Field>
								<JoinDataSource>InventJournalTrans</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDimTo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ToInventDimId</Field>
								<JoinDataSource>InventJournalTrans</JoinDataSource>
								<JoinRelationName>ToInventDim</JoinRelationName>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionDAVS</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DefaultDimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>InventJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalTypeTransfer</Name>
						<Field>JournalType</Field>
						<Status>Hidden</Status>
						<Value>Transfer</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>