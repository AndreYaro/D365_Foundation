<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CLMIntegrationContractEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CLMIntegrationContractEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.LegalEntityId = this.DataAreaId;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateContractDetailFormURLByContractId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a deep link to the CLM Integration Contract details form for the given contract ID.
    /// </summary>
    /// <param name = "_contractId">The Contract ID.</param>
    /// <param name = "_companyId">The Legal entity ID.</param>
    /// <returns>A link to the CLM Integration Contract details form for the given contract.</returns>
    [SysODataAction('GenerateContractDetailFormURLByContractId', /*isInstanceMethod:*/ false)]
    public static str generateContractDetailFormURLByContractId(CLMIntegrationContractId _contractId, DataAreaId _companyId)
    {
        str generatedURL = '';

        if (_contractId && _companyId)
        {
            CLMIntegrationContractTable contractTable= CLMIntegrationContractTable::findByContractId(_contractId, _companyId);
            if (contractTable)
            {
                generatedURL = CLMIntegrationContractEntity::generateContractDetailFormURL(contractTable, _companyId);
            }
        }

        return generatedURL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateContractDetailFormURLByExternalContractId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Generates a deep link to the CLM Integration Contract details form for the given external contract ID.
    /// </summary>
    /// <param name = "_externalContractId">The CLM integration external Contract ID.</param>
    /// <param name = "_companyId">The Legal entity ID.</param>
    /// <returns>A link to the CLM Integration Contract details form for the given contract.</returns>
    [SysODataAction('GenerateContractDetailFormURLByExternalContractId', /*isInstanceMethod:*/ false)]
    public static str generateContractDetailFormURLByExternalContractId(CLMIntegrationExternalContractId _externalContractId, DataAreaId _companyId)
    {
        str generatedURL = '';

        if (_externalContractId && _companyId)
        {
            CLMIntegrationContractTable contractTable= CLMIntegrationContractTable::findByExternalContractId(_externalContractId, _companyId );
            if (contractTable)
            {
                generatedURL = CLMIntegrationContractEntity::generateContractDetailFormURL(contractTable, _companyId);
            }
        }

        return generatedURL;
    }

]]></Source>
			</Method>
			<Method>
				<Name>generateContractDetailFormURL</Name>
				<Source><![CDATA[
    private static str generateContractDetailFormURL(CLMIntegrationContractTable _contractTable, DataAreaId _companyId)
    {
        var generator = CLMIntegrationUtilities::getUrlGenerator(menuItemDisplayStr(CLMIntegrationContractTable));
        var requestQueryParameterCollection = generator.RequestQueryParameterCollection;

        generator.Company = _companyId;
                    
        requestQueryParameterCollection.AddRequestQueryParameter(
            formDataSourceStr(CLMIntegrationContractTable, CLMIntegrationContractTable),
            fieldStr(CLMIntegrationContractTable, RecId),
            int642Str(_contractTable.RecId));

        return CLMIntegrationUtilities::getAbsoluteUri(generator);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(CLMIntegrationContractEntity, CLMIntegrationContractTable):
                this.setRequesterWorker(_dataSourceCtx);
                this.setAccountRelationId(_dataSourceCtx);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(CLMIntegrationContractEntity, CLMIntegrationContractTable):
                this.setRequesterWorker(_dataSourceCtx);
                this.setAccountRelationId(_dataSourceCtx);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRequesterWorker</Name>
				<Source><![CDATA[
    private void setRequesterWorker(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (this.isFieldSet(fieldNum(CLMIntegrationContractEntity, RequesterWorkerName)) ||
            this.isFieldSet(fieldNum(CLMIntegrationContractEntity, RequesterWorkerEmail)))
        {
            CLMIntegrationContractTable contractTable = _dataSourceCtx.getBuffer();
            contractTable.RequesterWorker = this.getRequesterWorker(this.RequesterWorkerName, this.RequesterWorkerEmail);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRequesterWorker</Name>
				<Source><![CDATA[
    private HcmWorkerRecId getRequesterWorker(Name _name, Email _email)
    {
        HcmWorker hcmWorker;

        if (this.isFieldSet(fieldNum(CLMIntegrationContractEntity, RequesterWorkerName)))
        {
            DirPerson dirPerson;

            select firstonly RecId from hcmWorker
                exists join dirPerson
                    where dirPerson.RecId == hcmWorker.Person
                        && dirPerson.Name == _name;
        }

        if (!hcmWorker.RecId && this.isFieldSet(fieldNum(CLMIntegrationContractEntity, RequesterWorkerEmail)))
        {
            DirPersonUser dirPersonUser;
            UserInfo userInfo;

            select firstonly RecId from hcmWorker
                exists join dirPersonUser
                    where dirPersonUser.PersonParty == hcmWorker.Person
                    exists join userInfo
                        where userInfo.id == dirPersonUser.User
                            && userInfo.NetworkAlias == _email;
        }

        return hcmWorker.RecId ? hcmWorker.RecId : HcmWorkerLookup::currentWorker();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAccountRelationId</Name>
				<Source><![CDATA[
    private void setAccountRelationId(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        CLMIntegrationContractTable contractTable = _dataSourceCtx.getBuffer();

        if (this.AccountRelationId)
        {
            switch (this.AccountType)
            {
                case CLMIntegrationContractAccountType::Vend:
                    contractTable.ContractAccountRelation = VendTable::find(this.AccountRelationId).RecId;
                    break;

                case CLMIntegrationContractAccountType::Cust:
                    contractTable.ContractAccountRelation = CustTable::find(this.AccountRelationId).RecId;
                    break;

                case CLMIntegrationContractAccountType::Party:
                    contractTable.ContractAccountRelation = DirPartyTable::find(this.AccountRelationId).RecId;
                    break;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CLMIntegration</ConfigurationKey>
	<DeveloperDocumentation>@CLMIntegration:CLMIntegrationContractEntityDevDocLabel</DeveloperDocumentation>
	<Label>@CLMIntegration:CLMIntegrationContractEntityLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>CLMIntegrationContractTableStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>ProcurementAndSourcing</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CLMIntegrationContracts</PublicCollectionName>
	<PublicEntityName>CLMIntegrationContract</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalContractId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContractName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EffectiveDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequesterWorkerName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequesterWorkerEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PartyNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestAmendmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LatestExternalAmendmentId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AmendmentInProcess</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractId</Name>
			<DataField>ContractId</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExternalContractId</Name>
			<DataField>ExternalContractId</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractTypeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ContractType</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>CLMIntegrationContractType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractStatus</Name>
			<DataField>ContractStatus</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContractName</Name>
			<DataField>ContractName</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EffectiveDate</Name>
			<DataField>EffectiveDate</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpirationDate</Name>
			<DataField>ExpirationDate</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequesterWorkerRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RequesterWorker</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequesterWorkerName</Name>
			<Label>@CLMIntegration:ContractRequesterWorker</Label>
			<DataField>Name</DataField>
			<DataSource>DirPersonRequester</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequesterWorkerEmail</Name>
			<DataField>RequesterWorkerEmail</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>ContractAccountType</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountRelationId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>AccountNumber</DataField>
			<DataSource>CLMIntegrationContractAccountNumberView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PartyNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PartyNumber</DataField>
			<DataSource>DirPartyTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonId</Name>
			<DataField>ContactPersonId</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LatestAmendmentId</Name>
			<DataField>LatestAmendmentId</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LatestExternalAmendmentId</Name>
			<DataField>LatestExternalAmendmentId</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AmendmentInProcess</Name>
			<DataField>AmendmentInProcess</DataField>
			<DataSource>CLMIntegrationContractTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ContractId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CLMIntegrationContractTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CLMIntegrationContractTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CompanyInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CompanyInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>CompanyInfo</Name>
								<JoinDataSource>CLMIntegrationContractTable</JoinDataSource>
								<JoinRelationName>CompanyInfo</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CLMIntegrationContractType</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CLMIntegrationContractType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>CLMIntegrationContractTable</JoinDataSource>
								<JoinRelationName>CLMIntegrationContractType</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CLMIntegrationContractAccountNumberView</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CLMIntegrationContractAccountNumberView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>CLMIntegrationContractTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DirPartyTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DirPartyTable</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>DirPartyTable_DirOrganizationBase</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirOrganizationBase</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>DirPartyTable_OMInternalOrganization</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>OMInternalOrganization</Table>
										<DataSources />
										<DerivedDataSources>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_OMOperatingUnit</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>OMOperatingUnit</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_CompanyInfo</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>CompanyInfo</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
											<AxQuerySimpleDerivedDataSource>
												<Name>DirPartyTable_OMTeam</Name>
												<DynamicFields>Yes</DynamicFields>
												<Table>OMTeam</Table>
												<DataSources />
												<DerivedDataSources />
												<Fields />
												<Ranges />
											</AxQuerySimpleDerivedDataSource>
										</DerivedDataSources>
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>DirPartyTable_DirOrganization</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>DirOrganization</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
							<AxQuerySimpleDerivedDataSource>
								<Name>DirPartyTable_DirPerson</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>DirPerson</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>CLMIntegrationContractTable</JoinDataSource>
								<JoinRelationName>DirPartyTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorkerRequester</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>DirPersonRequester</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>DirPerson</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Person</Field>
										<JoinDataSource>HcmWorkerRequester</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RequesterWorker</Field>
								<JoinDataSource>CLMIntegrationContractTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>