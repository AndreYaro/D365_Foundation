<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProjWBSActivityEstimatesEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProjWBSActivityEstimatesEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            // Only add this record if hierarchy ID and task ID are specified.
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjWBSActivityEstimatesEntity, PSAActivityEstimates)
                && this.HierarchyId && this.TaskId)
            {
				PSAActivityEstimates activityEstimates = _dataSourceCtx.getBuffer();
				activityEstimates.ProjPlanHierarchyId = this.HierarchyId;
				activityEstimates.ProjPlanHierarchyTaskId = this.TaskId;

				activityEstimates.TotalCostPrice = activityEstimates.UnitCostPrice * activityEstimates.Quantity;
				activityEstimates.TotalSalesPrice = activityEstimates.UnitSalesPrice * activityEstimates.Quantity;

				_dataSourceCtx.setBuffer(activityEstimates);

				ret = super(_entityCtx, _dataSourceCtx);

				if (this.TransactionType == QuotationProjTransType::Hour)
				{
					ProjEstimate::updateTaskFromEstimatesV2(activityEstimates.ProjPlanHierarchyId, activityEstimates.ProjPlanHierarchyTaskId);
				}
            }
            else
            {
                ret = super(_entityCtx, _dataSourceCtx);
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Map data source to entity.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, PSAActivityEstimates):
                ProjWBSActivityEstimatesEntity activityEstimatesLoc;
                select firstonly activityEstimatesLoc
					where activityEstimatesLoc.HierarchyId == this.HierarchyId
						&& activityEstimatesLoc.TaskId == this.TaskId
						&& activityEstimatesLoc.Category == this.Category
						&& activityEstimatesLoc.ProjectId == this.ProjectId
						&& activityEstimatesLoc.WBSId == this.WBSId
						&& activityEstimatesLoc.TransactionType == this.TransactionType
						&& activityEstimatesLoc.ItemNumber == this.ItemNumber
						&& activityEstimatesLoc.LineProperty == this.LineProperty
						&& activityEstimatesLoc.UnitCostPrice == this.UnitCostPrice
						&& activityEstimatesLoc.UnitSalesPrice == this.UnitSalesPrice;

                if (activityEstimatesLoc.RecId)
                {
                    PSAActivityEstimates activityEstimates = _dataSourceCtx.getBuffer();
                    _dataSourceCtx.setBuffer(activityEstimates);
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    _dataSourceCtx.setDataSaved(true);
				}
				else
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
                }
                super(_entityCtx, _dataSourceCtx);
                break;
            case dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, ProjPlanVersionDetail):
                ProjPlanVersionDetail projPlanVersionDetail;
                select firstonly projPlanVersionDetail
                order by projPlanVersionDetail.VersionId desc
                where projPlanVersionDetail.ProjId == this.ProjectId &&
                    projPlanVersionDetail.VersionType == ProjPlanVersionType::Draft;

                _dataSourceCtx.setBuffer(projPlanVersionDetail);
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                _dataSourceCtx.setDataSaved(true);
                super(_entityCtx, _dataSourceCtx);
                break;
            case dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, ProjPlanVersion):
                ProjPlanVersion projPlanVersion = ProjPlanVersion::findByHierarchyAndTaskId(this.HierarchyId, this.TaskId);
                _dataSourceCtx.setBuffer(projPlanVersion);
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                _dataSourceCtx.setDataSaved(true);
                super(_entityCtx, _dataSourceCtx);
                break;
            case dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, PSASchedRole):
                super(_entityCtx, _dataSourceCtx);
                PSASchedRole resourceCategory = _dataSourceCtx.getBuffer();
                if (!resourceCategory.RoleId)
                {
                    resourceCategory.fieldState(fieldnum(PSASchedRole, RoleId), FieldState::NotSet);
                }
                break;
            case dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, EcoResCategory):
                super(_entityCtx, _dataSourceCtx);
                EcoResCategory ecoResCategory = _dataSourceCtx.getBuffer();
                if (ecoResCategory.Name)
                {
                    EcoResCategory ecoResCategoryTable;

                    select firstonly ecoResCategoryTable
                    where ecoResCategoryTable.Name == ecoResCategory.Name;

                    if (ecoResCategoryTable)
                    {
                        _dataSourceCtx.setBuffer(ecoResCategoryTable);
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                        _dataSourceCtx.setDataSaved(true);
                    }
                }
                else
                {
                    ecoResCategory.fieldState(fieldnum(EcoResCategory, Name), FieldState::NotSet);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Find entity data source.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns><c>ProjPlanVersionDetail</c> table buffer.</returns>
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(ProjWBSActivityEstimatesEntity, ProjPlanVersionDetail))
        {
            ProjPlanVersionDetail localProjPlanVersionDetail;

            select firstonly localProjPlanVersionDetail
                order by localProjPlanVersionDetail.VersionId desc
                    where  localProjPlanVersionDetail.ProjId == this.ProjectId &&
                            localProjPlanVersionDetail.VersionType == ProjPlanVersionType::Draft;

            ret = localProjPlanVersionDetail;
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update entity field values.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        // If the project WBS is not in draft state, then hierarchy ID will not be set and importing will fail.
        if (ProjPlanVersionDetail::findLatestByProjId(this.ProjectId).VersionType != ProjPlanVersionType::Draft)
        {
            this.HierarchyId = null;
        }
        else if (!(this.HierarchyId && this.TaskId))
        {
            this.HierarchyId = ProjPlanVersionDetail::findLatestByProjId(this.ProjectId).HierarchyId;
            this.TaskId = this.getTaskId();

            this.skipDataSourceValidateField(fieldNum(ProjWBSActivityEstimatesEntity, TaskId), true);
        }

        super(_entityCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTaskId</Name>
				<Source><![CDATA[
    private ProjHierarchyTaskId getTaskId()
    {
        SysGlobalObjectCache objectCache = ClassFactory.globalObjectCache();
        container key;
        container cachedTaskId;
        ProjHierarchyTaskId taskId;

        key = [strFmt('%1#%2', this.HierarchyId, this.WBSID)];

        cachedTaskId = objectCache.find(tableStr(ProjWBSActivityEstimatesEntity), key);

        if (cachedTaskId == conNull())
        {
            taskId = ProjPlanVersion::findByHierarchyAndPathId(this.HierarchyId, this.WBSID).HierarchyTaskId;
                
            objectCache.insert(tableStr(ProjWBSActivityEstimatesEntity), key, [taskId]);
        }
        else
        {
            taskId = conPeek(cachedTaskId, 1);
        }

        return taskId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, PSAActivityEstimates)
            && this.HierarchyId && this.TaskId)
        {
            PSAActivityEstimates updateEstimate = _dataSourceCtx.getBuffer();

            _dataSourceCtx.setBuffer(updateEstimate);
            
            ret = super(_entityCtx, _dataSourceCtx);

            ProjEstimate::updateTaskFromEstimatesV2(this.HierarchyId, this.TaskId);
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }
        
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete entity operation.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    /// <returns>true if succeed; otherwise, false.</returns>
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;
    
        if (_dataSourceCtx.name() == dataentitydatasourcestr(ProjWBSActivityEstimatesEntity, PSAActivityEstimates)
            && this.HierarchyId && this.TaskId)
        {
            PSAActivityEstimates deleteEstimate = _dataSourceCtx.getBuffer();
            
            _dataSourceCtx.setBuffer(deleteEstimate);

            ret = super(_entityCtx, _dataSourceCtx);

            if (this.TransactionType == QuotationProjTransType::Hour)
            {
                ProjEstimate::updateTaskFromEstimatesV2(this.HierarchyId, this.TaskId);
            }
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }
        
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Project</ConfigurationKey>
	<FormRef>ProjActivity</FormRef>
	<Label>@ProjPlan:ProjWbsDraftEstimatesDataEntity</Label>
	<Tags>Work breakdown structure</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProjWBSActivityEstimatesStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>ProjectManagementAndAccounting</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ProjWBSActivityEstimates</PublicCollectionName>
	<PublicEntityName>ProjWBSActivityEstimate</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>ProjId</DataField>
			<DataSource>ProjPlanVersionDetail</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HierarchyId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>ProjPlanHierarchyId</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>ProjPlanHierarchyTaskId</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WBSId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PathId</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaskName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TaskName</DataField>
			<DataSource>ProjPlanVersion</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineProperty</Name>
			<DataField>LinePropertyId</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Category</Name>
			<DataField>ProjCategoryId</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionType</Name>
			<DataField>ProjTransType</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Quantity</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCategoryRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ResourceCategory</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCategoryRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SalesCategory</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitCostPrice</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>UnitCostPrice</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitSalesPrice</Name>
			<DataField>UnitSalesPrice</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ResourceCategory</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@HierarchicalGrid:WBSResourceCategory</Label>
			<Mandatory>No</Mandatory>
			<DataField>RoleId</DataField>
			<DataSource>PSASchedRole</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesCategory</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@HierarchicalGrid:SalesCategory</Label>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalCostPrice</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TotalCostPrice</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalSalesPrice</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TotalSalesPrice</DataField>
			<DataSource>PSAActivityEstimates</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProjectId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WBSID</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>TransactionType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Category</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ResourceCategory</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>SalesCategory</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineProperty</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Quantity</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UnitCostPrice</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UnitSalesPrice</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>Project</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Projects</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WBS</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProjectCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProjectCategories</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ProjectCategoryEntity_Category</Name>
					<Field>Category</Field>
					<RelatedField>Category</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ResourceCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ResResourceCategoryDataEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ResResourceCategoryDataEntity_RoleId</Name>
					<Field>ResourceCategory</Field>
					<RelatedField>RoleId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PSAActivityEstimates</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PSAActivityEstimates</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PSASchedRole</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PSASchedRole</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ResourceCategory</Field>
								<JoinDataSource>PSAActivityEstimates</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResCategory_PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesCategory</Field>
								<JoinDataSource>PSAActivityEstimates</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjPlanVersion</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjPlanVersion</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>ProjPlanVersionDetail</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>ProjPlanVersionDetail</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>VersionType</Name>
										<Field>VersionType</Field>
										<Status>Hidden</Status>
										<Value>Draft</Value>
									</AxQuerySimpleDataSourceRange>
									<AxQuerySimpleDataSourceRange>
										<Name>ProjId</Name>
										<Field>ProjId</Field>
										<Status>Hidden</Status>
										<Value>!""</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>HierarchyId</Field>
										<JoinDataSource>ProjPlanVersion</JoinDataSource>
										<RelatedField>HierarchyId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjPlanHierarchyId</Field>
								<JoinDataSource>PSAActivityEstimates</JoinDataSource>
								<RelatedField>HierarchyId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation2</Name>
								<Field>ProjPlanHierarchyTaskId</Field>
								<JoinDataSource>PSAActivityEstimates</JoinDataSource>
								<RelatedField>HierarchyTaskId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField1</Name>
						<DataSource>PSAActivityEstimates</DataSource>
						<Field>ProjPlanHierarchyId</Field>
					</AxQuerySimpleOrderByField>
					<AxQuerySimpleOrderByField>
						<Name>QueryOrderByField2</Name>
						<DataSource>PSAActivityEstimates</DataSource>
						<Field>ProjPlanHierarchyTaskId</Field>
					</AxQuerySimpleOrderByField>
				</OrderBy>
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>