<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomerPaymentJournalLineEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustomerPaymentJournalLineEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
            || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, LedgerJournalTrans):
                    LedgerJournalTrans ledgerJournalTrans = _dataSourceCtx.getBuffer();
                    this.initLedgerJournalTrans(ledgerJournalTrans);
                    break;

                case dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, CustVendNACHAIATInfoTable_US):
                    if (this.NACHAIATForeignExchangeIndicator == CustVendForeignExchIndicator_US::None)
                    {
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    }
                    break;

                case dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, CustVendPDCRegister):
                    if (!this.PostdatedCheckMaturityDate)
                    {
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    }
                    break;

                case dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, LedgerJournalTransTaxExtension):
                    if (!Tax::isTaxIntegrationEnabledForBusinessProcess(TaxIntegrationBusinessProcess::Journal))
                    {
                        _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                    }
                    break;
            }

            super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean isValid;

        isValid = super(_fieldIdToCheck);

        if (isValid)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(CustomerPaymentJournalLineEntity, AccountType):
                    if (this.AccountType != LedgerJournalACType::Cust)
                    {
                        isValid = checkFailed(strFmt("@CashManagement:AccountTypeValidation", enum2Str(this.AccountType)));
                    }
                    break;

                case fieldNum(CustomerPaymentJournalLineEntity, OffsetAccountType):
                    if (this.OffsetAccountType != LedgerJournalACType::Bank
                        && this.OffsetAccountType != LedgerJournalACType::Ledger)
                    {
                        isValid = checkFailed(strFmt("@CashManagement:OffsetAccountTypeValidation", enum2Str(this.OffsetAccountType)));
                    }
                    break;
                
                case fieldNum(CustomerPaymentJournalLineEntity, UseABankDepositSlip):
                    if (this.UseABankDepositSlip && this.OffsetAccountType != LedgerJournalACType::Bank)
                    {
                        isValid = checkFailed(strFmt("@CashManagement:CustPaymentJourUseABankDepositSlipValidationError",
                            enum2Str(LedgerJournalACType::Bank),
                            fieldPName(CustomerPaymentJournalLineEntity, UseABankDepositSlip),
                            enum2Str(this.UseABankDepositSlip)));
                    }
                    break;
            }
        }

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        boolean isValid = LedgerJournalEntityBase::isWorkflowDocumentEditable(this.JournalBatchNumber) && super();

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean isValid = LedgerJournalEntityBase::isWorkflowDocumentEditable(this.JournalBatchNumber) && super();

        return isValid;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountTypeCustomLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a custom account type lookup serialized string for the Account type field.
    /// </summary>
    /// <returns>A serialized string with a list of account types.</returns>
    [
        SysODataActionAttribute("CustomerPaymentJournalLineEntityAccountTypeFieldCustomLookup", false),
        SysODataCollectionAttribute("_fields", Types::String),
        SysODataFieldLookupAttribute("AccountType")
    ]
    public static str accountTypeCustomLookup(Array _fields)
    {
        OfficeAppCustomLookupListResult result = new OfficeAppCustomLookupListResult();
        result.determinationFields().value(1, fieldStr(CustomerPaymentJournalLineEntity, AccountType));

        int current = 1;

        Set supportedTypes = new CustomerPaymentJournalExcelTemplate().supportedAccountTypes();
        SetEnumerator supportedTypesEnumerator = supportedTypes.getEnumerator();

        while (supportedTypesEnumerator.moveNext())
        {
            LedgerJournalACType currentACType = supportedTypesEnumerator.current();
            result.items().value(current, enum2Str(currentACType));
            current++;
        }

        return result.serialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>offsetAccountTypeCustomLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a custom offset account type lookup serialized string for the Offset account type field.
    /// </summary>
    /// <returns>A serialized string with a list of offset account types.</returns>
    [
        SysODataActionAttribute("CustomerPaymentJournalLineEntityOffsetAccountTypeFieldCustomLookup", false),
        SysODataCollectionAttribute("_fields", Types::String),
        SysODataFieldLookupAttribute("OffsetAccountType")
    ]
    public static str offsetAccountTypeCustomLookup(Array _fields)
    {
        OfficeAppCustomLookupListResult result = new OfficeAppCustomLookupListResult();
        result.determinationFields().value(1, fieldStr(CustomerPaymentJournalLineEntity, OffsetAccountType));

        int current = 1;

        Set supportedTypes = new CustomerPaymentJournalExcelTemplate().supportedOffsetAccountTypes();
        SetEnumerator supportedTypesEnumerator = supportedTypes.getEnumerator();

        while (supportedTypesEnumerator.moveNext())
        {
            LedgerJournalACType currentACType = supportedTypesEnumerator.current();
            result.items().value(current, enum2Str(currentACType));
            current++;
        }

        return result.serialize();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLedgerJournalTrans</Name>
				<Source><![CDATA[
    private void initLedgerJournalTrans(LedgerJournalTrans _ledgerJournalTrans)
    {
        // When editing through the entity, always delay tax calculation to avoid
        // a O(n^2) tax calculation while importing multiple lines. The journal will
        // automatically calculate taxes later at posting time or when necessary.
        _ledgerJournalTrans.DelayTaxCalculation = NoYes::Yes;

        _ledgerJournalTrans.markAsApprovedByCurrentUser();
        _ledgerJournalTrans.TransactionType = LedgerTransType::Payment;

        if (!_ledgerJournalTrans.SettleVoucher)
        {
            _ledgerJournalTrans.SettleVoucher = CustParameters::find().AutoSettle ? SettlementType::OpenTransact : SettlementType::None;
        }

        _ledgerJournalTrans.AccountType = LedgerJournalACType::Cust;

        if (!_ledgerJournalTrans.CustVendBankAccountId && CustVendPaymImportInheritDefaultCustVendBankAccountFlight::instance().isEnabled())
        {
            _ledgerJournalTrans.CustVendBankAccountId = CustTable::find(this.AccountDisplayValue).BankAccount;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerName</Name>
				<Source><![CDATA[
    public static str customerName()
    {
        str custTableName = tableStr(CustTable);
        str custTableAlias = 'CT';
        str custAccountNumberColumn = fieldStr(CustTable, AccountNum);
        str custPartyColumn = fieldStr(CustTable, Party);
        str partitionColumn = fieldStr(CustTable, Partition);
        str custDataAreaIdColumn = fieldStr(CustTable, DATAAREAID);
        str dirPartyTableName = tableStr(DirPartyTable);
        str dirPartyTableAlias = 'DPT';
        str dirPartyRecIdColumn = fieldStr(DirPartyTable, RecId);
        str nameColumn = fieldStr(DirPartyTable, Name);
        str accountDAVCViewAlias = 'T4';
        str accountDAVCAccountValueColumn = fieldStr(DimensionCombinationEntity, AccountValue);
        str ledgerJournalTransTableAlias = 'T1';
        str accountCompanyColumn = fieldStr(LedgerJournalTrans, Company);

        str customerNameSelect = strFmt('SELECT %1.%2 FROM %3 %4 CROSS JOIN %5 %1 WHERE %6.%7 = %4.%8 AND %9.%10 = %4.%11 AND %9.%12 = %4.%12 AND %4.%13 = %1.%14 AND %4.%12 = %1.%12',
            dirPartyTableAlias,
            nameColumn,
            custTableName,
            custTableAlias,
            dirPartyTableName,
            accountDAVCViewAlias,
            accountDAVCAccountValueColumn,
            custAccountNumberColumn,
            ledgerJournalTransTableAlias,
            accountCompanyColumn,
            custDataAreaIdColumn,
            partitionColumn,
            custPartyColumn,
            dirPartyRecIdColumn);

        return customerNameSelect;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the journal staging table after population.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The data management framework definition group being executed.</param>
    /// <remarks>This method is called automatically by the data management framework.</remarks>
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        CustomerPaymentJournalHeaderStaging headerStaging;
        CustomerPaymentJournalLineStaging lineStaging;

        update_recordset lineStaging
            setting JournalBatchNumber = headerStaging.JournalBatchNumber
        join JournalBatchNumber from headerStaging
            where lineStaging.JournalBatchNumber == headerStaging.JournalBatchNumberOld
                  && lineStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                  && lineStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                  && headerStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                  && headerStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                  && lineStaging.TransferStatus == DMFTransferStatus::NotStarted;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        LedgerJournalTransTaxExtension ledgerJournalTransTaxExtension = TaxJournalLineEntityHelper::setLedgerJournalTransTaxExtension(_dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, LedgerJournalTrans))
        {
            this.resolveFintagsWithContext(_entityCtx, _dataSourceCtx);
        }
    
        ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, LedgerJournalTrans))
        {
            if (LedgerJournalTrans_W::isLegalEntitySupported() || EInvoiceCFDIParameters_MX::isElectronicInvoiceEnabled())
            {
                LedgerJournalTransRefRecId ledgerJournalTransRecId = _dataSourceCtx.getBuffer().RecId;
                LedgerJournalTrans_W ledgerJournalTrans_W = LedgerJournalTrans_W::findByLedgerJournalTrans(ledgerJournalTransRecId);

                if (!ledgerJournalTrans_W)
                {
                    ledgerJournalTrans_W.LedgerJournalTrans = ledgerJournalTransRecId;
                    ledgerJournalTrans_W.insert();
                }
            }
        }

        // When <c>LedgerJournalTransTaxExtension</c> is not inserted successfully and it links well with <c>LedgerJournalTrans</c>,
        // it should try to insert/update the table <c>LedgerJournalTransTaxExtension</c> with set value.
        if (!ret && ledgerJournalTransTaxExtension.LedgerJournalTrans)
        {
            ttsbegin;
            LedgerJournalTrans ledgerJournalTrans = ledgerJournalTransTaxExtension.getLedgerJournalTrans();
            ledgerJournalTransTaxExtension.save(ledgerJournalTrans, true);
            ttscommit;

            ret = true;
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerPaymentJournalLineEntity, LedgerJournalTrans))
        {
            this.resolveFintagsWithContext(_entityCtx, _dataSourceCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query query = new Query();

        QueryBuildDataSource qbdsLedgerJournalTrans = query.addDataSource(tableNum(LedgerJournalTrans));

        QueryBuildDataSource qbdsNACHA = qbdsLedgerJournalTrans.addDataSource(tableNum(CustVendNACHAIATInfoTable_US));
        qbdsNACHA.joinMode(JoinMode::OuterJoin);
        qbdsNACHA.addLink(fieldNum(LedgerJournalTrans, RecId), fieldNum(CustVendNACHAIATInfoTable_US, LedgerJournalTransRecId));

        QueryBuildDataSource qbdsCustVendPDCRegister = qbdsLedgerJournalTrans.addDataSource(tableNum(CustVendPDCRegister));
        qbdsCustVendPDCRegister.joinMode(JoinMode::OuterJoin);
        qbdsCustVendPDCRegister.addLink(fieldNum(LedgerJournalTrans, RecId), fieldNum(CustVendPDCRegister, LedgerJournalTrans));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveFinTags</Name>
				<Source><![CDATA[
    private void resolveFinTags(CustomerPaymentJournalLineEntity _entity, LedgerJournalTrans _ledgerJournalTrans)
    {
        if (LedgerJournalBasedEntityFinTagResolverHelperFlight::instance().isEnabled())
        {
            LedgerJournalBasedEntityFinTagResolverHelper::resolveFinTagsForLedgerJournalTrans(_entity.FinTagDisplayValue, _entity.OffsetFinTagDisplayValue, _ledgerJournalTrans);
        }
        else
        {
            _ledgerJournalTrans.FinTag = FinTagResolver::resolve(_entity.FinTagDisplayValue, _ledgerJournalTrans.Company);
            _ledgerJournalTrans.OffsetFinTag = FinTagResolver::resolve(_entity.OffsetFinTagDisplayValue, _ledgerJournalTrans.OffsetCompany);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>resolveFintagsWithContext</Name>
				<Source><![CDATA[
    private void resolveFintagsWithContext(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        CustomerPaymentJournalLineEntity entity = _entityCtx.getEntityRecord();
        LedgerJournalTrans ledgerJournalTrans = _dataSourceCtx.getBuffer();

        this.resolveFinTags(entity, ledgerJournalTrans);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerBasic</ConfigurationKey>
	<FormRef>LedgerJournalTransCustPaym</FormRef>
	<Label>@CashManagement:CustomerPaymentJournalLineEntity</Label>
	<Tags>Journal</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>CustomerPaymentJournalLineStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CustomerPaymentJournalLines</PublicCollectionName>
	<PublicEntityName>CustomerPaymentJournalLine</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ChineseVoucherType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ChineseVoucher</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CalculateWithholdingTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemWithholdingTaxGroup</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Company</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Company</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>AccountType</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditAmount</Name>
			<DataField>AmountCurCredit</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DebitAmount</Name>
			<DataField>AmountCurDebit</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CentralBankPurposeCode</Name>
			<DataField>BankCentralBankPurposeCode</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CentralBankPurposeText</Name>
			<DataField>BankCentralBankPurposeText</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DepositNumber</Name>
			<DataField>BankDepositNum</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankTransactionType</Name>
			<DataField>BankTransType</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<DataField>CurrencyCode</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ThirdPartyBankAccountId</Name>
			<DataField>CustVendBankAccountId</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionsForAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>Company</DimensionLegalEntityContextField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExchangeRate</Name>
			<DataField>ExchRate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CentralBankImportDate</Name>
			<DataField>ImportDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Account</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>Company</DimensionLegalEntityContextField>
			<DynamicDimensionEnumerationField>AccountType</DynamicDimensionEnumerationField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>LineNum</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccountType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>OffsetAccountType</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetCompany</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>OffsetCompany</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionsForOffsetAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>OffsetDefaultDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>OffsetCompany</DimensionLegalEntityContextField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccount</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>OffsetLedgerDimension</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
			<DimensionLegalEntityContextField>OffsetCompany</DimensionLegalEntityContextField>
			<DynamicDimensionEnumerationField>OffsetAccountType</DynamicDimensionEnumerationField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetTransactionText</Name>
			<DataField>OffsetTxt</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentId</Name>
			<DataField>PaymId</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentMethodName</Name>
			<DataField>PaymMode</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentReference</Name>
			<DataField>PaymReference</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentSpecification</Name>
			<DataField>PaymSpec</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingProfile</Name>
			<DataField>PostingProfile</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrepayment</Name>
			<DataField>Prepayment</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UseSalesTaxDirectionFromMainAccount</Name>
			<DataField>TaxDirectionControl</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxGroup</Name>
			<DataField>TaxGroup</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxItemGroup</Name>
			<DataField>TaxItemGroup</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CalculateWithholdingTax</Name>
			<DataField>TaxWithholdCalculate_TH</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionDate</Name>
			<DataField>TransDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransactionText</Name>
			<DataField>Txt</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Voucher</Name>
			<DataField>Voucher</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SecondaryExchangeRate</Name>
			<DataField>ExchRateSecond</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionsForAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionsForAccountDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultDimensionsForOffsetAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DefaultDimensionsForOffsetAccountDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>AccountDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@AccountsReceivable:PersonName</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerName</ComputedFieldMethod>
			<ExtendedDataType>DirPartyName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetAccountDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS11162</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>OffsetAccountDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalBatchNumber</Name>
			<DataField>JournalNum</DataField>
			<DataSource>LedgerJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATForeignExchangeIndicator</Name>
			<Mandatory>No</Mandatory>
			<DataField>ForeignExchIndicator</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATForeignExchangeReferenceIndicator</Name>
			<DataField>ForeignExchRefIndicator</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATForeignExchangeReference</Name>
			<DataField>ForeignExchRefID</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATOFACScreeningIndicator</Name>
			<DataField>GatewayOperatorOFACIndicator</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATOFACSecondaryScreeningIndicator</Name>
			<DataField>SecondaryOFACIndicator</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATOriginatingDFIQualifier</Name>
			<DataField>OriginatingDFIQualifier</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NACHAIATReceivingDFIQualifier</Name>
			<DataField>OriginatingDFIQualifier</DataField>
			<DataSource>CustVendNACHAIATInfoTable_US</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckMaturityDate</Name>
			<DataField>MaturityDate</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckReceivedDate</Name>
			<DataField>DateReceived</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckNumber</Name>
			<DataField>CheckNumber</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckStopPayment</Name>
			<DataField>StopPayment</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckReasonForStop</Name>
			<DataField>ReasonForStop</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckBankName</Name>
			<DataField>BankName</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckBankBranch</Name>
			<DataField>BankBranch</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckIsReplacementCheck</Name>
			<DataField>IsReplacementCheck</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckReplacementComments</Name>
			<DataField>Comments</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckOriginalCheckNumber</Name>
			<DataField>OriginalCheck</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckCashier</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerCollectionAgent</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckCashierDisplayValue</Name>
			<DataField>PersonnelNumber</DataField>
			<DataSource>WorkerCashier</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckSalesperson</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerSalesPerson</DataField>
			<DataSource>CustVendPDCRegister</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostdatedCheckSalespersonDisplayValue</Name>
			<DataField>PersonnelNumber</DataField>
			<DataSource>WorkerSalesperson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucherTypeRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerVoucherType_CN</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucherType</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>Id</DataField>
			<DataSource>LedgerVoucherType_CN</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChineseVoucher</Name>
			<DataField>Voucher_CN</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemWithholdingTaxGroup</Name>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>TaxWithholdItemGroup</DataField>
			<DataSource>TaxWithholdItemGroupHeading_TH</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentStatus</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>Yes</AllowEdit>
			<Mandatory>No</Mandatory>
			<DataField>PaymentStatus</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Due</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Due</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TermsOfPayment</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Payment</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DocumentNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DocumentNum</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DateOfImport</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LoadingDate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SettleVoucher</Name>
			<DataField>SettleVoucher</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MarkedInvoice</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>MarkedInvoice</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MarkedInvoiceCompany</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>MarkedInvoiceCompany</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentNotes</Name>
			<DataField>PaymentNotes</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrencyExchRate</Name>
			<DataField>ReportingCurrencyExchRate</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrencyExchRateSecondary</Name>
			<DataField>ReportingCurrencyExchRateSecondary</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UseABankDepositSlip</Name>
			<Mandatory>No</Mandatory>
			<DataField>BankDepositVoucher</DataField>
			<DataSource>LedgerJournalTrans</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideSalesTax</Name>
			<DataField>OverrideSalesTax</DataField>
			<DataSource>LedgerJournalTransTaxExtension</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FinTagDisplayValue</Name>
			<DataField>DisplayValue</DataField>
			<DataSource>FinTag</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OffsetFinTagDisplayValue</Name>
			<Label>@FinTag:FinTag_OffsetDisplayValue</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>OffsetFinTag</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalBatchNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionsForAccountDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineDefaultDimensionAccountEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineDefaultDimensionAccountEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimensionsForAccount</Name>
					<Field>DefaultDimensionsForAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DefaultDimensionsForOffsetAccountDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineDefaultDimensionOffsetEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineDefaultDimensionOffsetEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DefaultDimensionsForOffsetAccount</Name>
					<Field>DefaultDimensionsForOffsetAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>AccountCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineAccountCombination</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineAccount</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Account</Name>
					<Field>Account</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>OffsetAccountCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineOffsetAccountCombination</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineOffsetAccount</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>OffsetAccount</Name>
					<Field>OffsetAccount</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Currency</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CurrencyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineCurrentyEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineCurrentyEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>OffsetAccount</Name>
					<Field>CurrencyCode</Field>
					<RelatedField>CurrencyCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>TaxGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>TaxGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineTaxGroupEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineTaxGroupEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>OffsetAccount</Name>
					<Field>TaxGroup</Field>
					<RelatedField>TaxGroupCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>TaxItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>TaxItemGroupHeadingEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineTaxItemGroupEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineTaxItemGroupEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>OffsetAccount</Name>
					<Field>TaxItemGroup</Field>
					<RelatedField>TaxItemGroup</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>PaymentJournalHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CustomerPaymentJournalHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineHeaderEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineHeaderEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>JournalBatchNumber</Field>
					<RelatedField>JournalBatchNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerVoucherTypeEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>LedgerVoucherTypeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineLedgerVoucherTypeEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineLedgerVoucherTypeEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ChineseVoucherType</Field>
					<RelatedField>VoucherType</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>TermOfPayment</Name>
			<RelatedDataEntity>LedgerJournalTrans</RelatedDataEntity>
			<RelatedDataEntityRole>CustomerPaymentJournalLineTermsOfPaymentEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineTermsOfPaymentEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>TermsOfPayment</Field>
					<RelatedField>Payment</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>Company</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>OfficeAddinLegalEntityEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLineEntityCompany</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLineCompany</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>Company</Field>
					<RelatedField>CompanyId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>CustomerPaymentMethod</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CustomerPaymentMethodEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustomerPaymentJournalLinePaymentMethodEntityRole</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerPaymentJournalLinePaymentMethodEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>PaymentMethodName</Field>
					<RelatedField>Name</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>LedgerJournalTrans</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>LedgerJournalTrans</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionsForAccountDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DefaultDimensionsForOffsetAccountDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OffsetDefaultDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>OffsetAccountDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OffsetLedgerDimension</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustVendNACHAIATInfoTable_US</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustVendNACHAIATInfoTable_US</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>LedgerJournalTransRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustVendPDCRegister</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>CustVendPDCRegister</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WorkerCashier</Name>
								<AllowAdd>No</AllowAdd>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmWorker</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>WorkerCollectionAgent</Field>
										<JoinDataSource>CustVendPDCRegister</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WorkerSalesperson</Name>
								<AllowAdd>No</AllowAdd>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmWorker</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>WorkerSalesPerson</Field>
										<JoinDataSource>CustVendPDCRegister</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>LedgerJournalTrans</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>LedgerJournalTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>JournalType</Name>
								<Field>JournalType</Field>
								<Value>CustPayment</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<JoinRelationName>LedgerJournalTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerVoucherType_CN</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>LedgerVoucherType_CN</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>LedgerVoucherType_CN</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<JoinRelationName>LedgerVoucherType_CN</JoinRelationName>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>TaxWithholdItemGroupHeading_TH</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>TaxWithholdItemGroupHeading_TH</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>TaxWithholdItemGroupHeading_TH</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LedgerJournalTransTaxExtension</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LedgerJournalTransTaxExtension</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>RecId</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>LedgerJournalTrans</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FinTag</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FinTag</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>FinTag</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>OffsetFinTag</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>FinTag</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>OffsetFinTag</Field>
								<JoinDataSource>LedgerJournalTrans</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>