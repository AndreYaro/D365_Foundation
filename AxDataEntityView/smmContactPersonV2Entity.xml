<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>smmContactPersonV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class smmContactPersonV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (!this.skipNumberSequenceCheck())
        {
            NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
               this, fieldNum(smmContactPersonV2Entity, ContactPersonId), ContactPerson::numRefContactPersonId());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity))
        {
            // Takes care of maintaining the reference to existing parties if this record provides a party number.
            DirPersonBaseEntity::initializeDirPersonEntityDataSource(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, ContactPerson))
        {
            this.ContactForParty = DirPartyTable::findByNum(this.AssociatedPartyNumber).RecId;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>associatedPartyNumberDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Provides the query to be used to compute the value of AssociatedPartyNumber field.
    /// </summary>
    /// <returns>A query to be used to compute the value of AssociatedPartyNumber field.</returns>
    private static str associatedPartyNumberDefinition()
    {
        return DirUtility::partyNumberEntityCalculatedFieldV2(
            tablestr(smmContactPersonV2Entity),
            dataEntityDataSourceStr(smmContactPersonV2Entity, ContactPerson),
            fieldstr(ContactPerson, ContactForParty),
            fieldstr(ContactPerson, Partition));
    }

]]></Source>
			</Method>
			<Method>
				<Name>associatedPartyTypeDefinition</Name>
				<Source><![CDATA[
    private static str associatedPartyTypeDefinition()
    {
        return SysComputedColumn::returnLiteral(DirUtility::PARTYTYPE_PERSON);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity))
        {
            DirPersonBaseEntityHelper partyHelper = new DirPersonBaseEntityHelper();
            partyHelper.preInsertEntityDataSource(_entityCtx, _dataSourceCtx,
                dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity));

            ret = super(_entityCtx, _dataSourceCtx);
            if (ret)
            {
                partyHelper.postInsertEntityDataSource(_entityCtx, _dataSourceCtx,
                    dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity));

                if (this.isAnyAddressFieldSet())
                {
                    this.defaultLocationDescription(_dataSourceCtx.getBuffer());
                }

                DirPersonBaseEntity person = _dataSourceCtx.getBuffer();
                HcmPersonPrivateCitizenshipDetails::setPersonCitizenships(person.PartyRecordId, this.CitizenshipCountryRegion);
            }
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity))
        {
            boolean newAddressCreated = this.forceNewAddressCreationForNotOwnedPrimaryAddress(_entityCtx);

            DirPersonBaseEntityHelper partyHelper = new DirPersonBaseEntityHelper();
            partyHelper.preUpdateEntityDataSource(_entityCtx, _dataSourceCtx,
                dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity));

            ret = super(_entityCtx, _dataSourceCtx);

            if (ret)
            {
                partyHelper.postUpdateEntityDataSource(_entityCtx, _dataSourceCtx,
                    dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity));

                if (newAddressCreated)
                {
                    this.defaultLocationDescription(_dataSourceCtx.getBuffer());
                }

                DirPersonBaseEntity person = _dataSourceCtx.getBuffer();
                HcmPersonPrivateCitizenshipDetails::setPersonCitizenships(person.PartyRecordId, this.CitizenshipCountryRegion);
            }
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>CitizenshipCountryRegionsField</Name>
				<Source><![CDATA[
    private static str CitizenshipCountryRegionsField()
    {
        /*********************************************
        The following is an example of what the query string will look like
            SELECT STUFF((SELECT N';'+ RTRIM(CR.CitizenshipCountryRegion)
            FROM HcmPersonPrivateCitizenshipDetails CR
            WHERE CR.Person = T2.PARTYRECORDID
            AND CR.Partition = T2.PARTITION
            ORDER BY CR.CitizenshipCountryRegion
            FOR XML PATH('')),1,1,'')
        *********************************************/

        str hcmPersonPrivateCitizenshipDetails_TableName = tableStr(HcmPersonPrivateCitizenshipDetails);
        str citizenshipCountryRegion_FieldName = fieldStr(HcmPersonPrivateCitizenshipDetails,CitizenshipCountryRegion);
        str person_FieldName = fieldStr(HcmPersonPrivateCitizenshipDetails, Person);
        str partition_FieldName = fieldStr(HcmPersonPrivateCitizenshipDetails, Partition);

        return 'SELECT STUFF((SELECT ' + SysComputedColumn::returnLiteral(';') + '+ RTRIM(CR.' + citizenshipCountryRegion_FieldName + ')' +
                ' FROM ' + hcmPersonPrivateCitizenshipDetails_TableName + ' CR' +
                ' WHERE CR.' + person_FieldName + ' = ' + SysComputedColumn::returnField(tableStr(smmContactPersonV2Entity), dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity), fieldStr(DirPersonBaseEntity, PartyRecordId)) +
                ' AND CR.' + partition_FieldName + ' = ' + SysComputedColumn::returnField(tableStr(smmContactPersonV2Entity), dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity), fieldStr(DirPersonBaseEntity, Partition)) +
                ' ORDER BY CR.' + citizenshipCountryRegion_FieldName +
                ' FOR XML PATH (' + SysComputedColumn::returnLiteral('') + ')), 1, 1, ' + SysComputedColumn::returnLiteral('') + ')';
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultLocationDescription</Name>
				<Source><![CDATA[
    private void defaultLocationDescription(DirPersonBaseEntity _personBaseEntity)
    {
        if (!this.isFieldSet(fieldnum(smmContactPersonV2Entity, PrimaryAddressDescription)))
        {
            LogisticsLocation location = LogisticsLocation::find(_personBaseEntity.PrimaryAddressLocation, true);

            if (location)
            {
                location.Description = _personBaseEntity.Name;
                location.update();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>forceNewAddressCreationForNotOwnedPrimaryAddress</Name>
				<Source><![CDATA[
    private boolean forceNewAddressCreationForNotOwnedPrimaryAddress(DataEntityRuntimeContext _entityCtx)
    {
        if (this.isAnyAddressFieldSet())
        {
            DataEntityDataSourceRuntimeContext addressDataSourceContext = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(DirPartyLocationPostalAddressEntity, LogisticsPostalAddressBaseEntity));
            LogisticsPostalAddressBaseEntity postalAddressEntity = addressDataSourceContext.getBuffer();
            DirPartyTable party = DirPartyTable::findByNum(this.ContactPersonPartyNumber);

            // Determine if the provided Location id is owned by the current contact
            DirPartyLocation dirPartyLocationOwner = DirPartyLocation::findByPartyLocation(party.RecId, LogisticsLocation::findByLocationId(this.PrimaryAddressLocationId).RecId);

            if (dirPartyLocationOwner && !dirPartyLocationOwner.IsLocationOwner)
            {
                // The provided location isn't owned by the contact. Look to see if the primary location for the contact is owned by the contact
                dirPartyLocationOwner = DirPartyLocation::findPrimaryPartyLocation(party.RecId);

                // If that location isn't owned by the Contact, create a new location and address and assign them to the contact
                if (dirPartyLocationOwner && !dirPartyLocationOwner.IsLocationOwner)
                {
                    this.clearAddressLocationFields(postalAddressEntity);
                    addressDataSourceContext.setBuffer(postalAddressEntity);
                    return true;
                }
                else
                {
                    // The primary location for the contact is owned by the contact so update it instead of the provided location
                    LogisticsPostalAddressBaseEntity primaryPostalAddressEntity = this.updateAddressLocationFields(postalAddressEntity, dirPartyLocationOwner.Location);
                    addressDataSourceContext.setBuffer(primaryPostalAddressEntity);
                }
            }
        }

        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAddressFields</Name>
				<Source><![CDATA[
    private container getAddressFields()
    {
        return [
            fieldnum(smmContactPersonV2Entity, FormattedPrimaryAddress),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressBuildingCompliment),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressCity),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressCityInKana),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressCountryRegionId),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressCountryRegionISOCode),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressCountyId),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressDescription),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressDistrictName),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressLatitude),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressLongitude),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressPostBox),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressStateId),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressStreet),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressStreetInKana),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressStreetNumber),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressTimeZone),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressValidFrom),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressValidTo),
            fieldnum(smmContactPersonV2Entity, PrimaryAddressZipCode)
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>isAnyAddressFieldSet</Name>
				<Source><![CDATA[
    private boolean isAnyAddressFieldSet()
    {
        int columnNum;
        container addressFields = this.getAddressFields();

        for (int i = 1; i <= conLen(addressFields); i++)
        {
            columnNum = conPeek(addressFields, i);
            if (this.isFieldSet(columnNum))
            {
                return true;
            }
        }
        
        return false;
    }

]]></Source>
			</Method>
			<Method>
				<Name>clearAddressLocationFields</Name>
				<Source><![CDATA[
    private void clearAddressLocationFields(LogisticsPostalAddressBaseEntity _postalAddressEntity)
    {
        _postalAddressEntity.RecId = 0;
        _postalAddressEntity.LocationRecId = 0;
        _postalAddressEntity.LocationId = '';
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateAddressLocationFields</Name>
				<Source><![CDATA[
    private LogisticsPostalAddressBaseEntity updateAddressLocationFields(LogisticsPostalAddressBaseEntity _postalAddressEntity, LogisticsLocationRecId _sourceLocationId)
    {
        container addressFields = this.getAddressFields();

        // Select the current primary postal address record and transfer the new values onto it
        utcdatetime now = DateTimeUtil::utcNow();

        LogisticsPostalAddressBaseEntity primaryPostalAddressEntity;
        select firstonly forupdate RecId, LocationRecId, LocationId 
            from primaryPostalAddressEntity
                where primaryPostalAddressEntity.LocationRecId == _sourceLocationId
                  && primaryPostalAddressEntity.ValidFrom <= now
                  && primaryPostalAddressEntity.ValidTo >= now;

        for (int i = 1; i <= conLen(addressFields); i++)
        {
            FieldId field = conPeek(addressFields, i);
            DictDataEntityField entityField = new DictDataEntityField(this.TableId, field);
            if (entityField.dataSource() == dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity))
            {
                FieldName baseEntityFieldName = entityField.dataField();
                if (baseEntityFieldName != '')
                {
                    FieldId baseEntityFieldId = fieldName2Id(tableNum(LogisticsPostalAddressBaseEntity), baseEntityFieldName);
                    primaryPostalAddressEntity.(baseEntityFieldId) = _postalAddressEntity.(baseEntityFieldId);
                }
            }
        }

        this.PrimaryAddressLocationId = primaryPostalAddressEntity.LocationId;

        return primaryPostalAddressEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, DirPersonBaseEntity))
        {
            DirPersonBaseEntityHelper personHelper = new DirPersonBaseEntityHelper();
            personHelper.deleteEntityDataSource(_dataSourceCtx);
        }
        else if (_dataSourceCtx.name() == dataEntityDataSourceStr(smmContactPersonV2Entity, LogisticsPostalAddressBaseEntity)
            && SMMContactEntitySkipDeleteAddressFlight::instance().isEnabled())
        {
            ret = true;
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query contactPersonQuery = new Query();
        
        var contactPersonDS = contactPersonQuery.addDataSource(tableNum(ContactPerson));
        smmContactPersonV2Entity::addChangeTrackingDataSourcesForContactPersonChildren(contactPersonDS);

        return contactPersonQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addChangeTrackingDataSourcesForContactPersonChildren</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to the children of the <c>ContactPerson</c> data sources.
    /// </summary>
    /// <param name = "_contactPersonInstance">The <c>QueryBuildDataSource</c> instance to append it's child data sources to.</param>
    /// <returns>An instance of the <c>ContactPerson</c> data source being joined to.</returns>
    [Hookable(false)]
    internal static QueryBuildDataSource addChangeTrackingDataSourcesForContactPersonChildren(QueryBuildDataSource _contactPersonInstance)
    {
        // DirPartyBaseEntity
        var dirPartyDS = DirPartyBaseEntity::addChangeTrackingDataSourcesForPartyBase(_contactPersonInstance, fieldNum(ContactPerson, Party));
        dirPartyDS.addRange(fieldNum(DirPartyTable, InstanceRelationType)).value(SysQuery::value(DictTable::getRelationTypeFromTableName(tableStr(DirPerson))));

        // DirPartyBaseEntity related datasources
        // ---LogisticsPostalAddressBaseEntity
        LogisticsPostalAddressBaseEntityChangeTrackingHelper::addPostalAddressBasedOnPrimaryAddressLocation(dirPartyDS, fieldNum(DirPartyTable, PrimaryAddressLocation));

        return _contactPersonInstance;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@SalesAndMarketing:ContactPersonV2EntityDevDoc</DeveloperDocumentation>
	<FormRef>ContactPerson</FormRef>
	<Label>@SalesAndMarketing:ContactPersonV2EntityLabel</Label>
	<Tags>Contact person main</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>smmContactPersonV2Staging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ContactPersons</PublicCollectionName>
	<PublicEntityName>ContactPerson</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonId</Name>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ContactPersonId</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonPartyNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>PartyNumber</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ContactPersonPartyType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SCM:ContactPersonEntityPartyType</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>associatedPartyTypeDefinition</ComputedFieldMethod>
			<ExtendedDataType>DirPartyInstanceRelationTypeName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactForParty</Name>
			<AccessModifier>Internal</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ContactForParty</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>AssociatedPartyNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:ContactPersonEntityAssociatedPartyNumber</Label>
			<Mandatory>Yes</Mandatory>
			<ComputedFieldMethod>associatedPartyNumberDefinition</ComputedFieldMethod>
			<ExtendedDataType>DirPartyNumber</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FirstName</Name>
			<DataField>FirstName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MiddleName</Name>
			<DataField>MiddleName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastName</Name>
			<DataField>LastName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SearchName</Name>
			<DataField>NameAlias</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AddressBookNames</Name>
			<DataField>AddressBooks</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactInformationLanguageId</Name>
			<DataField>LanguageId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ChildrenNames</Name>
			<DataField>ChildrenNames</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Hobbies</Name>
			<DataField>Hobbies</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Initials</Name>
			<DataField>Initials</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KnownAsName</Name>
			<DataField>KnownAs</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProfessionalTitle</Name>
			<DataField>ProfessionalTitle</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProfessionalSuffix</Name>
			<DataField>ProfessionalSuffix</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneticFirstName</Name>
			<DataField>PhoneticFirstName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneticMiddleName</Name>
			<DataField>PhoneticMiddleName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PhoneticLastName</Name>
			<DataField>PhoneticLastName</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Gender</Name>
			<DataField>Gender</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaritalStatus</Name>
			<DataField>MaritalStatus</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthDay</Name>
			<DataField>BirthDay</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthMonth</Name>
			<DataField>BirthMonth</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BirthYear</Name>
			<DataField>BirthYear</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AnniversaryDay</Name>
			<DataField>AnniversaryDay</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AnniversaryMonth</Name>
			<DataField>AnniversaryMonth</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AnniversaryYear</Name>
			<DataField>AnniversaryYear</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCityInKana</Name>
			<DataField>CityInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocationRoles</Name>
			<DataField>AddressLocationRoles</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreetInKana</Name>
			<DataField>StreetInKana</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedPrimaryAddress</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressValidFrom</Name>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressValidTo</Name>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryEmailAddress</Name>
			<DataField>PrimaryContactEmail</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryEmailAddressDescription</Name>
			<DataField>PrimaryContactEmailDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrimaryEmailAddressIMEnabled</Name>
			<DataField>PrimaryContactEmailIsIM</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryEmailAddressPurpose</Name>
			<DataField>PrimaryContactEmailPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFaxNumber</Name>
			<DataField>PrimaryContactFax</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFaxNumberDescription</Name>
			<DataField>PrimaryContactFaxDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFaxNumberExtension</Name>
			<DataField>PrimaryContactFaxExtension</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFaxNumberPurpose</Name>
			<DataField>PrimaryContactFaxPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPhoneNumber</Name>
			<DataField>PrimaryContactPhone</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPhoneNumberDescription</Name>
			<DataField>PrimaryContactPhoneDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPhoneNumberExtension</Name>
			<DataField>PrimaryContactPhoneExtension</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrimaryPhoneNumberMobile</Name>
			<DataField>PrimaryContactPhoneIsMobile</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPhoneNumberPurpose</Name>
			<DataField>PrimaryContactPhonePurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTelex</Name>
			<DataField>PrimaryContactTelex</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTelexDescription</Name>
			<DataField>PrimaryContactTelexDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTelexPurpose</Name>
			<DataField>PrimaryContactTelexPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryURL</Name>
			<DataField>PrimaryContactURL</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryURLDescription</Name>
			<DataField>PrimaryContactURLDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryURLPurpose</Name>
			<DataField>PrimaryContactURLPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFacebook</Name>
			<DataField>PrimaryContactFacebook</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFacebookDescription</Name>
			<DataField>PrimaryContactFacebookDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryFacebookPurpose</Name>
			<DataField>PrimaryContactFacebookPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryLinkedIn</Name>
			<DataField>PrimaryContactLinkedIn</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryLinkedInDescription</Name>
			<DataField>PrimaryContactLinkedInDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryLinkedInPurpose</Name>
			<DataField>PrimaryContactLinkedInPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTwitter</Name>
			<DataField>PrimaryContactTwitter</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTwitterDescription</Name>
			<DataField>PrimaryContactTwitterDescription</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryTwitterPurpose</Name>
			<DataField>PrimaryContactTwitterPurpose</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentJobTitle</Name>
			<DataField>Title</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentJobFunctionName</Name>
			<DataField>Function</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentProfession</Name>
			<DataField>Profession</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentDepartment</Name>
			<DataField>Department</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentOfficeLocation</Name>
			<DataField>OfficeLocation</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EmploymentComputerNetworkName</Name>
			<DataField>ComputerNetworkName</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AvailableFromTime</Name>
			<DataField>TimeAvailableFrom</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AvailableToTime</Name>
			<DataField>TimeAvailableTo</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MicrosoftOutlookCategories</Name>
			<DataField>OutlookCategories</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactActivitySensitivityLevel</Name>
			<DataField>Sensitivity</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ManagerContactPersonId</Name>
			<DataField>ContactPersonParentId</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainResponsibleWorker</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>MainResponsibleWorker</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonResponsiblePersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HCMWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsReceivingDirectMail</Name>
			<DataField>DirectMail</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Notes</Name>
			<DataField>Memo</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimarySalutationPhrase</Name>
			<DataField>DocuIntro1</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternateSalutationPhrase</Name>
			<DataField>DocuIntro2</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryComplimentaryClosingPhrase</Name>
			<DataField>DocuGreeting1</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AlternateComplimentaryClosingPhrase</Name>
			<DataField>DocuGreeting2</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrganizationIdentificationNumber</Name>
			<DataField>OrganizationalIDNumber</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GovernmentIdentificationNumber</Name>
			<DataField>GovernmentIDNumber</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MileageDistance</Name>
			<DataField>Mileage</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LoyaltyLevelPhrase</Name>
			<DataField>Loyalty</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecisionMakingRoleCode</Name>
			<DataField>Decision</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PersonalCharacterTypeCode</Name>
			<DataField>Character</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsVIP</Name>
			<DataField>VIP</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssistantName</Name>
			<DataField>AssistantName</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AssistantPhoneNumber</Name>
			<DataField>AssistantPhone</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BillingInformation</Name>
			<DataField>BillingInformation</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsImported</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Imported</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInactive</Name>
			<DataField>Inactive</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LastEditDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>LastEditAxDateTime</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDefaultContactPerson</Name>
			<DataField>MCRIsDefaultContact</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IdentityCardNumber</Name>
			<DataField>PayeeDocument_RU</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SpouseName</Name>
			<DataField>Spouse</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserRole</Name>
			<DataField>VendRole</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HasRequestedInternetAccess</Name>
			<DataField>WebRequestAccess</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NameValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>NameValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DisplayNameSequencePatternName</Name>
			<Mandatory>No</Mandatory>
			<DataField>NameSequenceDisplayAs</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ElectronicLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>ElectronicLocationId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsVendorPortalAccessAllowed</Name>
			<ConfigurationKey>VendorPortal</ConfigurationKey>
			<DataField>VendorPortalAccessAllowed</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsContactPersonExternallyMaintained</Name>
			<DataField>IsContactPersonExternallyMaintained</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CitizenshipCountryRegion</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ComputedFieldMethod>CitizenshipCountryRegionsField</ComputedFieldMethod>
			<ExtendedDataType>HcmPersonPrivateCitizenshipRegions</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryPostalAddressRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactEmailRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactEmailRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactFaxRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactFaxRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactPhoneRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactPhoneRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactTelexRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactTelexRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactURLRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactURLRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactFacebookRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactFacebookRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactTwitterRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactTwitterRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryContactLinkedInRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryContactLinkedInRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryAddressLocation</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PrimaryAddressLocation</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PartyRecordId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>PartyRecordId</DataField>
			<DataSource>DirPersonBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustAccount</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>CustAccount</DataField>
			<DataSource>ContactPerson</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ContactPersonId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>DirPartyEntityMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>Name</MapField>
					<MapFieldTo>ContactPersonName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyNumber</MapField>
					<MapFieldTo>ContactPersonPartyNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>PartyType</MapField>
					<MapFieldTo>ContactPersonPartyType</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ContactPerson</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ContactPerson</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DirPersonBaseEntity</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<Table>DirPersonBaseEntity</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsPostalAddressBaseEntity</Name>
								<ApplyDateFilter>Yes</ApplyDateFilter>
								<DynamicFields>Yes</DynamicFields>
								<Table>LogisticsPostalAddressBaseEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>PrimaryAddressLocation</Field>
										<JoinDataSource>DirPersonBaseEntity</JoinDataSource>
										<RelatedField>LocationRecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Party</Field>
								<JoinDataSource>ContactPerson</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HCMWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HCMWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>MainResponsibleWorker</Field>
								<JoinDataSource>ContactPerson</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>