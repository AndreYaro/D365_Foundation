<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseLocationContainerTypeLimitEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWarehouseLocationContainerTypeLimitEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();
    
        return ret && this.validateWarehouseSelection();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseSelection</Name>
				<Source><![CDATA[
    private boolean validateWarehouseSelection()
    {
        if (!this.isFieldSet(fieldNum(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseSelection)))
        {
            if (this.WarehouseId && this.WarehouseGroupId)
            {
                return checkFailed(strFmt("@WAX:WHSWarehouseStockingLimitInvalidValuesForWarehouseSelection",
                    fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseId),
                    fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseGroupId)));
            }

            return true;
        }

        return this.validateWarehouseSelectionAll()
                && this.validateWarehouseSelectionGroup()
                && this.validateWarehouseSelectionWarehouse();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseSelectionAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseSelectionAll()
    {
        if (this.WarehouseSelection == WhsWarehouseGroupAll::All
            && (this.WarehouseId || this.WarehouseGroupId))
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseStockingLimitContainerTypeEntityWarehouseOrWarehouseGroupIdMentioned",
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseId),
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseGroupId),
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.WarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseSelectionGroup</Name>
				<Source><![CDATA[
    private boolean validateWarehouseSelectionGroup()
    {
        if (this.WarehouseSelection == WhsWarehouseGroupAll::Group
            && (this.WarehouseId))
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseStockingLimitContainerTypeEntityWarehouseMentioned",
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseId),
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.WarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseSelectionWarehouse</Name>
				<Source><![CDATA[
    private boolean validateWarehouseSelectionWarehouse()
    {
        if (this.WarehouseSelection == WhsWarehouseGroupAll::Warehouse
            && (this.WarehouseGroupId))
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseStockingLimitContainerTypeEntityWarehouseGroupIdMentioned",
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseGroupId),
                fieldPName(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.WarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(WHSWarehouseLocationContainerTypeLimitEntity, WHSLocationLimitContainerType):
                this.initWarehouseSelection();
                break;
        }
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWarehouseSelection</Name>
				<Source><![CDATA[
    private void initWarehouseSelection()
    {
        if (!this.isFieldSet(fieldNum(WHSWarehouseLocationContainerTypeLimitEntity, WarehouseSelection)))
        {
            if (this.WarehouseId
                && !this.WarehouseGroupId)
            {
                this.WarehouseSelection = WhsWarehouseGroupAll::Warehouse;
            }
            else if (this.WarehouseGroupId
                && !this.WarehouseId)
            {
                this.WarehouseSelection = WhsWarehouseGroupAll::Group;
            }
            else
            {
                this.WarehouseSelection = WhsWarehouseGroupAll::All;
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:DataEntity_WHSWarehouseLocationContainerTypeLimitEntity_DeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WHSLocationLimit</FormRef>
	<Label>@WAX:DataEntity_WHSWarehouseLocationContainerTypeLimitEntity_Label</Label>
	<Tags>Container</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSWarehouseLocationContainerTypeLimitStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsUnlimitedQuantityAllowed</Name>
			<DataField>AllowUnlimitedQty</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContainerTypeId</Name>
			<DataField>ContainerTypeCode</DataField>
			<DataSource>WHSContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationProfileId</Name>
			<DataField>LocProfileId</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContainerTypeQuantityLimit</Name>
			<DataField>Qty</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContainerTypeQuantityLimitUnitSymbol</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>UnitId</DataField>
			<DataSource>WHSContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseGroupId</Name>
			<DataField>WarehouseGroupId</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseSelection</Name>
			<DataField>WarehouseGroupAll</DataField>
			<DataSource>WHSLocationLimitContainerType</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseLocationProfileId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Warehouse</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventWarehouseEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Warehouse</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocationContainerTypeLimits</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>InventWarehouseEntity_WarehouseId</Name>
					<Field>WarehouseId</Field>
					<RelatedField>WarehouseId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>WarehouseKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ContainerType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSContainerTypeV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ContainerType</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocationContainerTypeLimits</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSContainerTypeEntity_TypeId</Name>
					<Field>ContainerTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseLocationProfile</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseLocationProfileEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseLocationProfile</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseLocationContainerTypeLimits</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseLocationProfileEntity_ProfileId</Name>
					<Field>WarehouseLocationProfileId</Field>
					<RelatedField>ProfileId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSLocationLimitContainerType</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSLocationLimitContainerType</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSContainerType</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>WHSContainerType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>WHSContainerType</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>