<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustDirectDebitMandateEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustDirectDebitMandateEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        CustDirectDebitMandate custDirectDebitMandate;

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
        {
            if (_dataSourceCtx.name() == dataentitydatasourcestr(CustDirectDebitMandateEntity, LogisticsLocation))
            {
                CustTable custTable;
                DirPartyLocation dirPartyLocation;
                LogisticsPostalAddress postalAddress;
                LogisticsLocation location = _dataSourceCtx.getBuffer();

                select firstonly location
                    where location.description == this.CustomerAddress
                        exists join postalAddress
                            where postalAddress.Location == location.RecId
                        exists join dirPartyLocation
                            where dirPartyLocation.Location == location.RecId
                                && dirPartyLocation.IsPostalAddress == true
                        exists join custTable
                            where custTable.Party == dirPartyLocation.Party
                                && custTable.AccountNum == this.CustomerAccount;

                if (location)
                {
                    // Since location buffer was read above, the entity code will not longer differentiate if customer address was set or left empty.
                    // To prevent Customer address field is assigned again.
                    location.Description = this.CustomerAddress;
                }

                postalAddress = _entityCtx.getRuntimeContextByName(dataentitydatasourcestr(CustDirectDebitMandateEntity, LogisticsPostalAddress)).getBuffer();

                select firstonly postalAddress
                    order by postalAddress.ValidFrom desc
                        where postalAddress.Location == location.RecId;

                custDirectDebitMandate = _entityCtx.getRuntimeContextByName(dataentitydatasourcestr(CustDirectDebitMandateEntity, CustDirectDebitMandate)).getBuffer();
                custDirectDebitMandate.CustomerAddress = postalAddress.RecId;
            }

            if (_dataSourceCtx.name() == dataentitydatasourcestr(CustDirectDebitMandateEntity, CustDirectDebitMandate))
            {
                custDirectDebitMandate = _dataSourceCtx.getBuffer();

                this.setExpirationDate(custDirectDebitMandate);
            }
        }

        if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
        {
            if (_dataSourceCtx.name() == dataentitydatasourcestr(CustDirectDebitMandateEntity, CustDirectDebitMandate))
            {
                custDirectDebitMandate = _dataSourceCtx.getBuffer();

                this.setExpirationDate(custDirectDebitMandate);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setExpirationDate</Name>
				<Source><![CDATA[
    private void setExpirationDate(CustDirectDebitMandate _custDirectDebitMandate)
    {
        if (this.SignatureDate != dateNull() && this.ExpirationDate == dateNull())
        {
            _custDirectDebitMandate.ExpirationDate = _custDirectDebitMandate.initExpirationDate();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [[fieldNum(CustDirectDebitMandateEntity, MandateId)]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataentitydatasourcestr(CustDirectDebitMandateEntity, CustDirectDebitMandate))
        {
            CustDirectDebitMandate custDirectDebitMandate = _dataSourceCtx.getBuffer();
            this.Status = custDirectDebitMandate.getStatus();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        CustDirectDebitMandate custDirectDebitMandate;
        select firstonly custDirectDebitMandate
            where custDirectDebitMandate.MandateReference == this.MandateId;

        this.Status = custDirectDebitMandate.getStatus();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (!this.skipNumberSequenceCheck())
        {
            NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                this, fieldNum(CustDirectDebitMandateEntity, MandateId), CustParameters::numRefCustMandateId());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        ret = ret && this.validateCreditorBankAccount();

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCreditorBankAccount</Name>
				<Source><![CDATA[
    private boolean validateCreditorBankAccount()
    {
        if (this.isFieldSet(fieldNum(CustDirectDebitMandateEntity, CreditorBankAccount)))
        {
            CustDirectDebitMandate custDirectDebitMandate;
            select firstonly CreditorBankAccount from custDirectDebitMandate
                where custDirectDebitMandate.MandateReference == this.MandateId;

            if (custDirectDebitMandate.RecId && custDirectDebitMandate.CreditorBankAccount != this.CreditorBankAccount)
            {
                return checkFailed("@AccountsReceivable:SEPACreditorBankAccountNoUpdate");
            }
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<FormRef>CustDirectDebitMandateView</FormRef>
	<Label>@SYS4002602</Label>
	<Tags>Direct debit</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>CustDirectDebitMandateStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>DirectDebitMandates</PublicCollectionName>
	<PublicEntityName>DirectDebitMandate</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>CustomerAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerBankAccount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DaysForFirstBankSubmission</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DaysForRecurringBankSubmission</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DaysForFirstPrenotification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DaysForRecurringPrenotification</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CancellationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpirationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandatePaymentType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MandateScheme</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignatureDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SignatureLocation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExpectedNumberOfPayments</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UsageCount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerAccount</Name>
			<DataField>CustAccount</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MandateId</Name>
			<DataField>MandateReference</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerBankAccount</Name>
			<DataField>BankAccount</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerAddress</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DaysForFirstBankSubmission</Name>
			<DataField>BankSubmissionDaysFirst</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DaysForRecurringBankSubmission</Name>
			<DataField>BankSubmissionDaysRecurring</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DaysForFirstPrenotification</Name>
			<DataField>PrenotificationDaysFirst</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DaysForRecurringPrenotification</Name>
			<DataField>PrenotificationDaysRecurring</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CancellationDate</Name>
			<DataField>CancellationDate</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpirationDate</Name>
			<DataField>ExpirationDate</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MandatePaymentType</Name>
			<DataField>MandatePaymentType</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MandateScheme</Name>
			<DataField>MandateScheme</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SignatureDate</Name>
			<DataField>SignatureDate</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SignatureLocation</Name>
			<DataField>SignatureLocation</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExpectedNumberOfPayments</Name>
			<DataField>ExpectedUsageCount</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UsageCount</Name>
			<DataField>UsageCount</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SYS4002634</Label>
			<IsComputedField>No</IsComputedField>
			<EnumType>CustMandateStatus</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPrivate</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrivateForParty</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PrivateForParty</DataField>
			<DataSource>LogisticsPostalAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditorBankAccount</Name>
			<DataField>CreditorBankAccount</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsFirst</Name>
			<DataField>IsFirst</DataField>
			<DataSource>CustDirectDebitMandate</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>MandateId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustDirectDebitMandate</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustDirectDebitMandate</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddress</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>LogisticsPostalAddress</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsLocation</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsLocation</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Location</Field>
										<JoinDataSource>LogisticsPostalAddress</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustomerAddress</Field>
								<JoinDataSource>CustDirectDebitMandate</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>