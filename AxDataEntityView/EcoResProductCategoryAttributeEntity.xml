<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EcoResProductCategoryAttributeEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EcoResProductCategoryAttributeEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            EcoResCategoryHierarchy ecoResCategoryHierarchy = EcoResCategoryHierarchy::findByName(this.ProductCategoryHierarchyName);
            if (ecoResCategoryHierarchy.isRetailSpecificHierarchy())
            {
                ret = checkFailed("@SCM:ErrorAttributesNotAllowedForCategoryHierarchy");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret = super(_entityCtx, _dataSourceCtx);

        if (!ret.RecId && _dataSourceCtx.name() == dataEntityDataSourceStr(EcoResProductCategoryAttributeEntity, EcoResAttribute))
        {
            EcoResAttributeType ecoResAttributeType = EcoResAttributeType::findByName(this.ProductAttributeTypeName);

            EcoResAttribute ecoResAttribute;
            select firstonly ecoResAttribute
                    where ecoResAttribute.Name == this.ProductAttributeName
                        && ecoResAttribute.AttributeType == ecoResAttributeType.RecId;

            ret = ecoResAttribute;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>persistEntity</Name>
				<Source><![CDATA[
    public void persistEntity(DataEntityRuntimeContext _entityCtx)
    {
        super(_entityCtx);

        if (EcoResCategoryAttributeLookup::shouldEntitySynchronize(_entityCtx, this))
        {
            EcoResCategory category = EcoResCategory::findCategoryByNameAndHierarchy(this.ProductCategoryName, this.ProductCategoryHierarchyName);
            EcoResCategoryAttributeLookup::synchronizeWithCategoryAttribute(category);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postTargetProcess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Synchronizes the category attribute lookups after the import.
    /// </summary>
    /// <param name = "_dmfDefinitionGroupExecution">The group execution definition.</param>
    /// <remarks>
    /// This method is only called in a data management context, and not for OData.
    /// </remarks>
    public static void postTargetProcess(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        if (EcoResCategoryAttributeLookup::shouldSynchronizePostImport(_dmfDefinitionGroupExecution))
        {
            EcoResProductCategoryAttributeStaging staging;
            EcoResCategoryHierarchy hierarchy;
            EcoResCategory category;

            while select category
                    where category.Level == 1
                    exists join hierarchy
                    where hierarchy.RecId == category.CategoryHierarchy
                    exists join staging
                    where staging.ProductCategoryHierarchyName == hierarchy.Name
                        && staging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
                        && staging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                        && staging.TransferStatus == DMFTransferStatus::Completed
            {
                category.ForceFullLookupSync = NoYes::Yes;
                EcoResCategoryAttributeLookup::synchronizeWithCategoryAttribute(category);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:EcoResProductCategoryAttributeEntityDeveloperDoc</DeveloperDocumentation>
	<FormRef>EcoResCategoryHierarchyDetails</FormRef>
	<Label>@SCM:ProductCategoryAttributes</Label>
	<Tags>Product category attributes</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EcoResProductCategoryAttributeStaging</DataManagementStagingTable>
	<Modules>ProductInformationManagement</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductCategoryHierarchyName</Name>
			<Label>@SCM:ProductCategoryHierarchyName</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResCategoryHierarchy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductCategoryName</Name>
			<Label>@SCM:ProductCategoryName</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeModifier</Name>
			<DataField>Modifier</DataField>
			<DataSource>EcoResCategoryAttribute</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductAttributeTypeName</Name>
			<Label>@SCM:AttributeType</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductAttributeName</Name>
			<Label>@SCM:AttributeName</Label>
			<DataField>Name</DataField>
			<DataSource>EcoResAttribute</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ProductCategoryHierarchyName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductCategoryName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductAttributeTypeName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductAttributeName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>EcoResCategoryAttribute</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>EcoResCategoryAttribute</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResAttribute</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResAttribute</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResAttributeType</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResAttributeType</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>DataType</Name>
										<Field>DataType</Field>
										<Status>Hidden</Status>
										<Value>!= Reference</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResAttributeType</Name>
										<JoinRelationName>EcoResAttributeType</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>AttributeModifier</Name>
								<Field>AttributeModifier</Field>
								<Status>Hidden</Status>
								<Value>Catalog</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResAttribute</Name>
								<JoinRelationName>EcoResAttribute</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResCategoryHierarchy</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResCategoryHierarchy</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResCategoryHierarchyWithoutRetailRole</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>EcoResCategoryHierarchyWithoutRetailRole</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>RecId</Field>
												<JoinDataSource>EcoResCategoryHierarchy</JoinDataSource>
												<RelatedField>CategoryHierarchy</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>HierarchyModifier</Name>
										<Field>HierarchyModifier</Field>
										<Status>Hidden</Status>
										<Value>Category</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>BelongsTo</Name>
										<JoinRelationName>BelongsTo</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>EcoResCategory_PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResCategory</Name>
								<JoinRelationName>EcoResCategory</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Modifier</Name>
						<Field>Modifier</Field>
						<Status>Hidden</Status>
						<Value>!= Component</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>