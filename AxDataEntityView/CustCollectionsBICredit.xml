<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustCollectionsBICredit</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustCollectionsBICredit extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>creditRemaining</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate customer credit remaining.
    /// </summary>
    /// <returns>
    /// The computed column with the amount of credit remaining.
    /// </returns>
    public static str creditRemaining()
    {
        str creditRemaining =  SysComputedColumn::subtract(
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyCreditMax)),
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyAmount)));

        str isNull = SysComputedColumn::isNullExpression(
            SysComputedColumn::comparisonField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyAmount)));

        return SysComputedColumn::if(
            isNull,
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyCreditMax)),
            creditRemaining);
    }

]]></Source>
			</Method>
			<Method>
				<Name>amountOverCreditLimit</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate amount over credit limit.
    /// </summary>
    /// <returns>
    /// The computed column with the amount over credit limit.
    /// </returns>
    public static str amountOverCreditLimit()
    {
        str amtOverCredit = SysComputedColumn::subtract(
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyAmount)),
            SysComputedColumn::returnField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyCreditMax)));

        str isNull = SysComputedColumn::isNullExpression(
            SysComputedColumn::comparisonField(
                tableStr(CustCollectionsBICredit),
                tableStr(CustCollectionsBICreditView),
                fieldStr(CustCollectionsBICreditView, SystemCurrencyAmount)));

        str isUnder0 = SysComputedColumn::if(
            SysComputedColumn::compareExpressions(amtOverCredit, "<", "0"),
            "0", amtOverCredit);
        
        return SysComputedColumn::if(
            isNull,
            "0",
            isUnder0);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Collections</ConfigurationKey>
	<Label>@AccountsReceivable:AR_Collections_CustCollectionsBICreditLimitOver</Label>
	<Tags>BI</Tags>
	<Modules>AccountsReceivable</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Company</Name>
			<DataField>Company</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CreditRating</Name>
			<DataField>CreditRating</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Name</Name>
			<DataField>Name</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SystemCurrencyAmount</Name>
			<DataField>SystemCurrencyAmount</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>CreditRemaining</Name>
			<ComputedFieldMethod>creditRemaining</ComputedFieldMethod>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldReal">
			<Name>AmountOverCreditLimit</Name>
			<Label>@AccountsReceivable:AR_Collections_CustCollectionsBICredit</Label>
			<ComputedFieldMethod>amountOverCreditLimit</ComputedFieldMethod>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SystemCurrencyCreditMax</Name>
			<DataField>SystemCurrencyCreditMax</DataField>
			<DataSource>CustCollectionsBICreditView</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>AccountNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>DataAreaId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustCollectionsBICreditView</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustCollectionsBICreditView</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>