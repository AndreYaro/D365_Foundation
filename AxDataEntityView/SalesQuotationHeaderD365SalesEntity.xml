<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesQuotationHeaderD365SalesEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesQuotationHeaderD365SalesEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>areTotalsCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the are totals calculated flag.
    /// </summary>
    /// <returns>The value of <c>AreTotalsCalculated</c> field.</returns>
    public static str areTotalsCalc()
    {
        return SysComputedColumn::if(SysComputedColumn::isNullExpression(SysComputedColumn::comparisonField(tableStr(SalesQuotationHeaderD365SalesEntity), identifierStr(SalesQuotationCalculatedTotals), fieldStr(SalesQuotationCalculatedTotals, RecId))),
            SysComputedColumn::returnLiteral(NoYes::No),
            SysComputedColumn::returnLiteral(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountTypeComputedColumn</Name>
				<Source><![CDATA[
    public static str accountTypeComputedColumn()
    {
        return SysComputedColumn::if(SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(SalesQuotationHeaderD365SalesEntity), identifierStr(SalesQuotationTable), fieldStr(SalesQuotationTable, CustAccount)), SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnLiteral(SalesQuotationHeaderAccountType::Customer),
            SysComputedColumn::returnLiteral(SalesQuotationHeaderAccountType::Prospect));
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountNumberComputedColumn</Name>
				<Source><![CDATA[
    public static str accountNumberComputedColumn()
    {
        return SysComputedColumn::if(SysComputedColumn::notEqualExpression(SysComputedColumn::comparisonField(tableStr(SalesQuotationHeaderD365SalesEntity), identifierStr(SalesQuotationTable), fieldStr(SalesQuotationTable, CustAccount)), SysComputedColumn::comparisonLiteral('')),
            SysComputedColumn::returnField(tableStr(SalesQuotationHeaderD365SalesEntity), identifierStr(SalesQuotationTable), fieldStr(SalesQuotationTable, CustAccount)),
            SysComputedColumn::returnField(tableStr(SalesQuotationHeaderD365SalesEntity), identifierStr(SalesQuotationTable), fieldStr(SalesQuotationTable, BusRelAccount)));
    }

]]></Source>
			</Method>
			<Method>
				<Name>revisionNumberComputedColumn</Name>
				<Source><![CDATA[
    public static str revisionNumberComputedColumn()
    {
        // Always return 0 as this field is used only for import.
        return SysComputedColumn::returnLiteral(0);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        if (this.RecId)
        {
            SalesQuotationTable validateSalesQuotationTable = SalesQuotationTable::find(this.SalesQuotationNumber);

            this.setIntegration(validateSalesQuotationTable);

            if (!validateSalesQuotationTable.checkUpdate())
            {
                validateSalesQuotationTable.validateIntegration();

                return false;
            }
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        SalesQuotationTable validateSalesQuotationTable = SalesQuotationTable::find(this.SalesQuotationNumber);
        
        this.setIntegration(validateSalesQuotationTable);

        if (!validateSalesQuotationTable.checkDelete())
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();

                if (!this.SalesQuotationNumber)
                {
                    NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                        salesQuotationTable, fieldNum(SalesQuotationTable, QuotationId), SalesParameters::numRefQuotationIdBase());
                }

                this.setIntegration(salesQuotationTable);
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                if (!this.SalesQuotationNumber)
                {
                    SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();
                    this.SalesQuotationNumber = salesQuotationTable.QuotationId;
                }

                // Clear out 'isFieldSet' so the defaulting logic does not consider fields that were set by initValue as specified by the user.
                _dataSourceCtx.setAllFieldStatesToNotSet();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                ret = TradeEntitySpecificDeliveryAddress::findLogisticsPostalAddressBaseEntityDataSource();
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {   
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                // Enable insert of records with blank values for mandatory field RequestedShippingDate.
                if (_entityCtx.isDatabaseOperationInsert())
                {
                    this.setBlankFieldStateToNotSet(fieldNum(SalesQuotationHeaderD365SalesEntity, RequestedShippingDate));
                }

                // Find existing logistic address location to avoid duplicate.
                if (_entityCtx.isDatabaseOperationInsertOrUpdate())
                {
                    if (this.IsDeliveryAddressOrderSpecific)
                    {
                        this.TradeEntitySpecificDeliveryAddress::resolveQuotationSpecificLocationId(this.SalesQuotationNumber);
                    }
                    else
                    {
                        this.TradeEntitySpecificDeliveryAddress::resolvePartyAddressLocationId();
                    }
                }

                SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();

                if (SalesParameters::find().IsD365SalesQuotationLifecycleEnabled)
                {
                    this.fieldState(fieldNum(SalesQuotationHeaderD365SalesEntity, SalesQuotationStatus), FieldState::NotSet);

                    if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update
                        && salesQuotationTable.CustAccount
                        && !this.RequestingCustomerAccountNumber
                        && this.ProspectId)
                    {
                        this.fieldState(fieldNum(SalesQuotationHeaderD365SalesEntity, PriceCustomerGroupCode), FieldState::NotSet);
                        this.fieldState(fieldNum(SalesQuotationHeaderD365SalesEntity, InvoiceCustomerAccountNumber), FieldState::NotSet);
                    }
                }

                this.setIntegration(salesQuotationTable);
                this.setRevision(salesQuotationTable);
                break;

            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                this.SalesDocumentD365SalesEntitySpecificMap::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_entityCtx, _dataSourceCtx);

                if (_dataSourceCtx.isAnyEntityFieldSet(this))
                {
                    this.TradeEntitySpecificDeliveryAddress::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_dataSourceCtx);
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):

                LogisticsPostalAddressBaseEntity entityBuf = _dataSourceCtx.getBuffer();

                if (!this.DeliveryAddressDescription && SalesSkipAddressCreationIfAddressDescriptionBlankFlight::instance().isEnabled()
                    && (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update
                        || (_entityCtx.isDatabaseOperationUpdate() && SalesSkipAddressCreationIfAddressDescriptionBlankSpecifiedFlight::instance().isEnabled()))
                    && !entityBuf.isAnyMappedFieldModified())
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                else
                {
                    // The Address field is generated to a specified format based on the component address parts. Updating it directly is not allowed.
                    entityBuf.fieldState(fieldNum(LogisticsPostalAddressBaseEntity, Address), FieldState::NotSet);
                }

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setIntegration</Name>
				<Source><![CDATA[
    private void setIntegration(SalesQuotationTable _salesQuotationTable)
    {
        if (SalesParameters::find().IsD365SalesQuotationLifecycleEnabled)
        {
            _salesQuotationTable.IsIntegration = TradeIntegrationType::Dynamics365Sales;
        }
        else
        {
            _salesQuotationTable.IsIntegration = TradeIntegrationType::CDS;
        }

        _salesQuotationTable.SalesQuotationIntegrationCreationType = this.SalesQuotationIntegrationCreationType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setRevision</Name>
				<Source><![CDATA[
    private void setRevision(SalesQuotationTable _salesQuotationTable)
    {
        if (this.isFieldSet(fieldNum(SalesQuotationHeaderD365SalesEntity, RevisionNumber)) && SalesQuotationSkipDeliveryDateControlWhenRevisedInD365Flight::instance().isEnabled())
        {
            _salesQuotationTable.IsRevision = this.RevisionNumber > 0;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();
                this.TradeEntitySpecificDeliveryAddress::mapSavedPostalAddressToEntity(
                    _entityCtx,
                    salesQuotationTable.DeliveryPostalAddress,
                    dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesQuotationHeaderD365SalesEntity)).salesQuotationActivities().insertEntityDataSource(_dataSourceCtx))
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                    SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();

                    if (!salesQuotationTable.OpportunityId
                        && !this.mustSkipOpportunityCreation(this))
                    {
                        salesQuotationTable.OpportunityId = smmCreateEntity::createOpportunityFromQuotation(salesQuotationTable).OpportunityId;
                    }
                    
                    if (SalesParameters::find().IsD365SalesQuotationLifecycleEnabled)
                    {
                        salesQuotationTable.QuotationHeaderCreationMethod = SalesQuotationCreationMethod::Dynamics365Sales;
                        salesQuotationTable.QuotationStatus = this.SalesQuotationStatus;
                    }
                    break;
            }

            boolean ret = super(_entityCtx, _dataSourceCtx);

            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                    this.TradeEntitySpecificDeliveryAddress::postInsertLogisticsPostalAddressBaseEntityDataSource(_dataSourceCtx);
                    break;
            }

            return ret;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesQuotationHeaderD365SalesEntity)).salesQuotationActivities().updateEntityDataSource(_dataSourceCtx))
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                    this.validateWriteLogisticsPostalAddressDataSource(_dataSourceCtx);
                    break;

                case dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationTable):
                    SalesQuotationTable salesQuotationTable = _dataSourceCtx.getBuffer();

                    if (SalesParameters::find().IsD365SalesQuotationLifecycleEnabled)
                    {
                        salesQuotationTable.QuotationStatus = this.SalesQuotationStatus;

                        this.validateOwnershipForQuotationSending(salesQuotationTable);
                    }
                    break;
            }

            return super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddressPartyRecId</Name>
				<Source><![CDATA[
    // This method implements the interface defined by <c>TradeEntitySpecificDeliveryAddress</c>
    public RecId deliveryAddressPartyRecId()
    {
        if (this.RequestingCustomerAccountNumber)
        {
            return CustTable::find(this.RequestingCustomerAccountNumber).Party;
        }
        else
        {
            return smmBusRelTable::find(this.ProspectId).Party;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteLogisticsPostalAddressDataSource</Name>
				<Source><![CDATA[
    private void validateWriteLogisticsPostalAddressDataSource(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (this.SalesQuotationStatus == SalesQuotationStatus::Confirmed 
            && _dataSourceCtx.isAnyEntityFieldSet(this)
            && !SalesParameters::find().IsD365SalesQuotationLifecycleEnabled)
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateOwnershipForQuotationSending</Name>
				<Source><![CDATA[
    private void validateOwnershipForQuotationSending(SalesQuotationTable _salesQuotationTable)
    {
        if (_salesQuotationTable.QuotationStatus == SalesQuotationStatus::Sent
            && _salesQuotationTable.orig().QuotationStatus == SalesQuotationStatus::Created
            && SalesQuotationOwnershipValidationFlight::instance().isEnabled()
            && !_salesQuotationTable.isIntegrationOwnerDynamics365Sales())
        {
            throw error("@SalesAndMarketing:SalesQuotationOwnershipValidationError");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryAddressOrderSpecificComputedColumnDefinition</Name>
				<Source><![CDATA[
    public static str isDeliveryAddressOrderSpecificComputedColumnDefinition()
    {
        // The <c>IsDeliveryAddressOrderSpecific</c> field is only designed for import scenarios
        // so we will always return 'No' for export scnearios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [
            [fieldNum(SalesQuotationHeaderD365SalesEntity, DeliveryAddressDescription), [fieldNum(SalesQuotationHeaderD365SalesEntity, DeliveryAddressCountryRegionId)]],
            [fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingCustomerAccountNumber), [fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingAccountNumber)]],
            [fieldNum(SalesQuotationHeaderD365SalesEntity, ProspectId), [fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingAccountNumber)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesQuotationHeaderD365SalesEntity, DeliveryAddressDescription):
                this.defaultDeliveryAddressDescription();
                break;

            case fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingCustomerAccountNumber):
                this.defaultCustomerAccountNumber();
                break;

            case fieldNum(SalesQuotationHeaderD365SalesEntity, ProspectId):
                this.defaultProspectAccountNumber();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeliveryAddressDescription</Name>
				<Source><![CDATA[
    private void defaultDeliveryAddressDescription()
    {
        if (!this.DeliveryAddressDescription && this.DeliveryAddressCountryRegionId && this.RequestingCustomerAccountNumber)
        {
            CustTable custAccount = CustTable::find(this.RequestingCustomerAccountNumber);
            if (custAccount.RecId)
            {
                this.DeliveryAddressDescription = custAccount.name();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCustomerAccountNumber</Name>
				<Source><![CDATA[
    private void defaultCustomerAccountNumber()
    {
        if (!this.isFieldSet(fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingCustomerAccountNumber))
            && !this.isFieldSet(fieldNum(SalesQuotationHeaderD365SalesEntity, ProspectId))
            && this.RequestingAccountNumber
            && this.RequestingAccountType == SalesQuotationHeaderAccountType::Customer)
        {
            this.RequestingCustomerAccountNumber = this.RequestingAccountNumber;
            this.ProspectId = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProspectAccountNumber</Name>
				<Source><![CDATA[
    private void defaultProspectAccountNumber()
    {
        if (!this.isFieldSet(fieldNum(SalesQuotationHeaderD365SalesEntity, RequestingCustomerAccountNumber))
            && !this.isFieldSet(fieldNum(SalesQuotationHeaderD365SalesEntity, ProspectId))
            && this.RequestingAccountNumber
            && this.RequestingAccountType == SalesQuotationHeaderAccountType::Prospect)
        {
            this.ProspectId = this.RequestingAccountNumber;
            this.RequestingCustomerAccountNumber = '';
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrices</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the discount and totals for a given entity record.
    /// </summary>
    /// <param name = "_salesQuotationHeaderEntityRecord">The sales quotation header entity record.</param>
    /// <returns>The list of related entities that need to be resynced.</returns>
    /// <remarks>
    /// This method is aimed to be used by Dual Write to trigger price and discount calculation updates.
    /// See <c>RunDocumentAction</c> OData action on the <c>DualWriteProjectConfigurationEntity</c> entity.
    /// </remarks>
    public static List updatePrices(Common _salesQuotationHeaderEntityRecord)
    {
        return SalesCDSUpdatePriceBase::newFromRecord(_salesQuotationHeaderEntityRecord).updatePrices();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the totals for a given entity record.
    /// </summary>
    /// <param name = "_salesQuotationHeaderEntityRecord">The sales quotation header entity record.</param>
    /// <returns>The list of related entities that need to be resynced.</returns>
    /// <remarks>
    /// This method is aimed to be used by Dual Write to trigger totals calculation updates.
    /// See <c>RunDocumentAction</c> OData action on the <c>DualWriteProjectConfigurationEntity</c> entity.
    /// </remarks>
    public static List updateTotals(Common _salesQuotationHeaderEntityRecord)
    {
        return SalesCDSUpdatePriceBase::newFromRecord(_salesQuotationHeaderEntityRecord).updateTotals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query salesQuotationHeaderQuery = new Query();

        var salesQuotationTableDS = salesQuotationHeaderQuery.addDataSource(tableNum(SalesQuotationTable));
        salesQuotationTableDS.addRange(fieldNum(SalesQuotationTable, QuotationType)).value(queryValue(QuotationType::Sales));

        SalesQuotationHeaderD365SalesEntity::addChangeTrackingDataSourcesForSalesQuotationTableChildren(salesQuotationTableDS);

        return salesQuotationHeaderQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityDataSourceToFieldMapping</Name>
				<Source><![CDATA[
    public static container getEntityDataSourceToFieldMapping(container mapping)
    {
        mapping += [[dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity), tablenum(LogisticsPostalAddress), fieldstr(SalesQuotationHeaderD365SalesEntity, DeliveryPostalAddressRecId)],
                    [dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, SalesQuotationCalculatedTotals), tablenum(SalesQuotationCalculatedTotals), fieldstr(SalesQuotationHeaderD365SalesEntity, SalesQuotationCalculatedTotalsRecId)],
                    [dataEntityDataSourceStr(SalesQuotationHeaderD365SalesEntity, CustDefaultInvoiceAddress), tablenum(CustDefaultLocation), fieldstr(SalesQuotationHeaderD365SalesEntity, DefaultInvoiceLocationRecId)]];

        return mapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dualWriteShouldSkipDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines that the datasource CustTable should be skipped for change tracking.
    /// </summary>
    /// <param name = "_entityToAnalyze">The entity being tracked.</param>
    /// <param name = "_datasourceName">The datasource within the entity to track.</param>
    /// <param name = "_primaryTableId">The table ID of the datasource being tracked.</param>
    /// <param name = "_fieldMapping">The set of field mappings related to this map.</param>
    /// <returns>false if the datasource should not be skipped; otherwise, !atLeastOneFieldMapped.</returns>
    public static boolean dualWriteShouldSkipDataSource(DictDataEntity _entityToAnalyze,str _datasourceName,tableid _primaryTableId,Map _fieldMapping, boolean atLeastOneFieldMapped)
    {
        if(_primaryTableId == tableNum(CustTable))
        {
            return true;
        }
        
        return !atLeastOneFieldMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addChangeTrackingDataSourcesForSalesQuotationTableChildren</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to the children of the <c>SalesQuotationTable</c> data sources.
    /// </summary>
    /// <param name = "_salesQuotationTableInstance">The <c>QueryBuildDataSource</c> instance to append it's child data sources to.</param>
    /// <returns>An instance of the <c>SalesQuotationTable</c> data source being joined to.</returns>
    [Hookable(false)]
    internal static QueryBuildDataSource addChangeTrackingDataSourcesForSalesQuotationTableChildren(QueryBuildDataSource _salesQuotationTableInstance)
    {
        boolean useReferencedData = !SalesParameters::skipSalesQuotationReferencedDataDuringChangeTracking();

        if (useReferencedData)
        {
            var orderResponsibleWorkerDS = _salesQuotationTableInstance.addDataSource(tableNum(HcmWorker));
            orderResponsibleWorkerDS.joinMode(JoinMode::OuterJoin);
            orderResponsibleWorkerDS.addLink(fieldNum(SalesQuotationTable, WorkerSalesResponsible), fieldNum(HcmWorker, RecId));

            var orderTakerWorkerDS = _salesQuotationTableInstance.addDataSource(tableNum(HcmWorker));
            orderTakerWorkerDS.joinMode(JoinMode::OuterJoin);
            orderTakerWorkerDS.addLink(fieldNum(SalesQuotationTable, WorkerSalesTaker), fieldNum(HcmWorker, RecId));

            var custDefaultLocationDS = _salesQuotationTableInstance.addDataSource(tableNum(CustDefaultLocation));
            custDefaultLocationDS.joinMode(JoinMode::OuterJoin);
            custDefaultLocationDS.addLink(fieldNum(SalesQuotationTable, InvoiceAccount), fieldNum(CustDefaultLocation,AccountNum));

            var dirPartyLocationRoleDS = custDefaultLocationDS.addDataSource(tableNum(DirPartyLocationRole));
            dirPartyLocationRoleDS.addLink(fieldNum(CustDefaultLocation, PartyLocationRole), fieldNum(DirPartyLocationRole, RecId));

            var logisticsLocationRoleDS = dirPartyLocationRoleDS.addDataSource(tableNum(LogisticsLocationRole));
            logisticsLocationRoleDS.addLink(fieldNum(DirPartyLocationRole, LocationRole), fieldNum(LogisticsLocationRole, RecId));

            var dirPartyLocationDS = dirPartyLocationRoleDS.addDataSource(tableNum(DirPartyLocation));
            dirPartyLocationDS.addLink(fieldNum(DirPartyLocationRole, PartyLocation), fieldNum(DirPartyLocation, RecId));

            var invoicePostalAddressDS = dirPartyLocationDS.addDataSource(tableNum(LogisticsPostalAddress));
            invoicePostalAddressDS.addLink(fieldNum(DirPartyLocation, Location), fieldNum(LogisticsPostalAddress, Location));
        }

        LogisticsPostalAddressBaseEntityChangeTrackingHelper::addPostalAddressBasedOnAddressRecIdLink(_salesQuotationTableInstance, fieldNum(SalesQuotationTable, DeliveryPostalAddress));

        var salesQuotationCalcTotalsDS = _salesQuotationTableInstance.addDataSource(tableNum(SalesQuotationCalculatedTotals));
        salesQuotationCalcTotalsDS.joinMode(JoinMode::OuterJoin);
        salesQuotationCalcTotalsDS.addLink(fieldNum(SalesQuotationTable, QuotationId), fieldNum(SalesQuotationCalculatedTotals, QuotationId));

        return _salesQuotationTableInstance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesQuotationHeaderD365SalesEntity)).salesQuotationActivities().insert(this))
        {
            this.setReportingCurrencyFixedExchangeRate(this.FixedExchangeRate);

            super();

            this.syncDefaultOwnership();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesQuotationHeaderD365SalesEntity)).salesQuotationActivities().update(this))
        {
            this.setReportingCurrencyFixedExchangeRate(this.FixedExchangeRate);

            super();

            this.syncProspectRelationshipTypeWhenConfirmingQuotation();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncDefaultOwnership</Name>
				<Source><![CDATA[
    private void syncDefaultOwnership()
    {
        if (SalesQuotationOwnershipSyncFlight::instance().isEnabled()
            && SalesQuotationD365SalesDefaultOwnershipFeature::instance().isEnabled()
            && SalesParameters::find().QuotationOwnership != SalesQuotationOwnershipType::BasedOnOrigin)
        {
            SalesQuotationOwnershipSyncController::construct().scheduleSyncOwnership(this.SalesQuotationNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>syncProspectRelationshipTypeWhenConfirmingQuotation</Name>
				<Source><![CDATA[
    private void syncProspectRelationshipTypeWhenConfirmingQuotation()
    {
        if (this.SalesQuotationStatus == SalesQuotationStatus::Confirmed
            && smmProspectConvertCustomerSyncFlight::instance().isEnabled()
            && !this.RequestingCustomerAccountNumber
            && this.RequestingAccountType == SalesQuotationHeaderAccountType::Customer
            && SalesParameters::find().isD365SalesQuotationLifecycleAndProspectIntegrationEnabled())
        {
            smmProspectConvertCustomerSyncController::construct().scheduleSyncProspect(this.RequestingAccountNumber);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ReportingCurrencyFixedExchangeRate</c> to the specified value.
    /// </summary>
    /// <param name = "_exchRate">The reporting currency fixed exchange rate.</param>
    private void setReportingCurrencyFixedExchangeRate(ExchRate _exchRate)
    {
        this.CustVendReportingCurrencyFixedExchangeRate::setReportingCurrencyFixedExchangeRate(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationLost</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the quotation to status lost
    /// </summary>
    /// <param name = "reasonId">Reason why quotation was lost</param>
    [SysODataActionAttribute('SetQuotationLost', true)]
    public void setQuotationLost(smmQuotationReasonId reasonId)
    {
        this.setQuotationStatus(SalesQuotationStatus::Lost, reasonId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationCancelled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the quotation to status cancelled
    /// </summary>
    /// <param name = "reasonId">Reason why quotation was cancelled</param>
    [SysODataActionAttribute('SetQuotationCancelled', true)]
    public void setQuotationCancelled(smmQuotationReasonId reasonId)
    {
        this.setQuotationStatus(SalesQuotationStatus::Cancelled, reasonId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuotationStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the quotation to specified status
    /// </summary>
    /// <param name = "quotationStatus">Quotation status to update to</param>
    /// <param name = "reasonId">Reason for quotation update</param>
    private void setQuotationStatus(SalesQuotationStatus quotationStatus, smmQuotationReasonId reasonId)
    {
        if (!reasonId || !smmQuotationReasonGroup::find(reasonId))
        {
            throw error(strFmt("@SYS24602", "@SYS81463", reasonId));
        }

        SalesQuotationTable salesQuotationTable = SalesQuotationTable::find(this.SalesQuotationNumber);

        if (salesQuotationTable)
        {
            this.setIntegration(salesQuotationTable);

            SalesQuotationUpdate salesQuotationUpdate = SalesQuotationUpdate::constructFromSalesQuotationTable(salesQuotationTable, quotationStatus, true);

            if (salesQuotationUpdate.mayQuotationBePosted(salesQuotationTable))
            {
                salesQuotationUpdate.parmReasonId(reasonId);
                salesQuotationUpdate.runOperation();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isSkipOpportunityPromptComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str isSkipOpportunityPromptComputedColumnDefinition()
    {
        // The <c>SkipOpportunityCreationPrompt</c> field is only designed for import scenarios
        // so we will always return 'No' for export scnearios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mustSkipOpportunityCreation</Name>
				<Source><![CDATA[
    private boolean mustSkipOpportunityCreation(SalesQuotationHeaderD365SalesEntity _salesQuotationHeaderEntity)
    {
        if (!SalesQuotationHeaderEntityBypassPromptFlight::instance().isEnabled())
        {
            return false;
        }

        smmParametersTable smmParametersTable = smmParametersTable::find();
        boolean retailSMBEnabled = RetailSMB::IsRetailSMBEnabled();

        if (!retailSMBEnabled
            && smmParametersTable.CreateOpportunityForSalesQuotation == smmCreateOpportunityOptions::Prompt
            && _salesQuotationHeaderEntity.SkipOpportunityCreationPrompt == NoYes::No)
        {
            throw error("@SCM:CreateOpportunityForSalesQuotationIsSetToPrompt");
        }

        return retailSMBEnabled
            || (smmParametersTable.CreateOpportunityForSalesQuotation == smmCreateOpportunityOptions::Prompt
                    && _salesQuotationHeaderEntity.SkipOpportunityCreationPrompt == NoYes::Yes)
            || smmParametersTable.CreateOpportunityForSalesQuotation == smmCreateOpportunityOptions::Never;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesQuotationHeaderD365SalesEntityDevDoc</DeveloperDocumentation>
	<FormRef>SalesQuotationJumpRef</FormRef>
	<Label>@SCM:SalesQuotationHeaderD365SalesEntity</Label>
	<Tags>Sales quote</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesQuotationHeaderD365SalesStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>D365SalesQuotationHeaders</PublicCollectionName>
	<PublicEntityName>D365SalesQuotationHeader</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreTotalsCalculated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomersReference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRequisitionNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultShippingSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultShippingWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountryRegionISOCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDunsNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressPostBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryBuildingCompliment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryTermsCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryPostalAddressRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormattedDeliveryAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormattedInvoiceAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>GeneratedSalesOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCountryRegionISOCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressPostBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceBuildingCompliment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressOrderSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressPrivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInvoiceAddressPrivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OpportunityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentTermsName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProspectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationResponsiblePersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationTakerPersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationTotalAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationTotalChargesAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationTotalDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationTotalTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationHeaderTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReceiptDateRequested</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestingCustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderOriginCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderPromisingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationCalculatedTotalsRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationExpiryDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationConfirmationDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesQuotationFollowUpDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscountPercentage</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ArePricesIncludingSalesTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultilineDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ArePricesIncludingSalesTax</Name>
			<DataField>InclTax</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>AreTotalsCalculated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ComputedFieldMethod>areTotalsCalc</ComputedFieldMethod>
			<ExtendedDataType>SalesTotalsCalculated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscountCode</Name>
			<DataField>CashDisc</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscountPercentage</Name>
			<DataField>CashDiscPercent</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonId</Name>
			<DataField>ContactPersonId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyCode</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomersReference</Name>
			<DataField>CustomerRef</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerRequisitionNumber</Name>
			<DataField>CustPurchaseOrder</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultShippingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultShippingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDunsNumber</Name>
			<DataField>DunsNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressName</Name>
			<Label>@SCM:DeliveryAddressName</Label>
			<DataField>DeliveryName</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryTermsCode</Name>
			<DataField>DlvTerm</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPostalAddressRecId</Name>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryModeCode</Name>
			<DataField>DlvMode</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Email</Name>
			<DataField>Email</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedDeliveryAddress</Name>
			<DataField>Address</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedInvoiceAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Address</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GeneratedSalesOrderNumber</Name>
			<DataField>SalesIdRef</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>City</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountryRegionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountryRegionISOCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>County</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressDistrictName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>DistrictName</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressLatitude</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Latitude</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressLongitude</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Longitude</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressPostBox</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>PostBox</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStateId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>State</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressTimeZone</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TimeZone</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStreetNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>StreetNumber</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStreet</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Street</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressZipCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>ZipCode</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceBuildingCompliment</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>BuildingCompliment</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceCustomerAccountNumber</Name>
			<DataField>InvoiceAccount</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOneTimeDeliveryAddress</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDeliveryAddressOrderSpecificComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveryAddressPrivate</Name>
			<Label>@SCM:IsDeliveryAddressPrivate</Label>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInvoiceAddressPrivate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>IsPrivate</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LanguageId</Name>
			<Mandatory>No</Mandatory>
			<DataField>LanguageId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OpportunityId</Name>
			<AllowEdit>No</AllowEdit>
			<DataField>OpportunityId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentTermsName</Name>
			<DataField>Payment</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceCustomerGroupCode</Name>
			<DataField>PriceGroupId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProspectId</Name>
			<DataField>BusRelAccount</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationResponsiblePersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS81476</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_OrderResponsible</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationTakerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS310060</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_OrderTaker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationTotalAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>QuotationTotalAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationTotalChargesAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>QuotationTotalChargesAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationTotalDiscountAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>QuotationTotalDiscountAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationTotalTaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>QuotationTotalTaxAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationHeaderTaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>QuotationHeaderTaxAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceiptDateRequested</Name>
			<DataField>ReceiptDateRequested</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedShippingDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ShippingDateRequested</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestingCustomerAccountNumber</Name>
			<DataField>CustAccount</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderOriginCode</Name>
			<DataField>SalesOriginId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderPromisingMethod</Name>
			<DataField>DeliveryDateControlType</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationName</Name>
			<DataField>QuotationName</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>QuotationId</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationStatus</Name>
			<DataField>QuotationStatus</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationExpiryDate</Name>
			<DataField>QuotationExpiryDate</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationConfirmationDate</Name>
			<DataField>ConfirmDate</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationFollowUpDate</Name>
			<DataField>QuotationFollowUpDate</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscountAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TotalDiscountAmount</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscountPercentage</Name>
			<DataField>DiscPercent</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>URL</Name>
			<DataField>URL</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationCalculatedTotalsRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>RecId</DataField>
			<DataSource>SalesQuotationCalculatedTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OperatingUnitPartyNumber</Name>
			<DataField>OperatingUnitPartyNumber</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedExchangeRate</Name>
			<DataField>FixedExchRate</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrencyFixedExchangeRate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ReportingCurrencyFixedExchRate</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationHeaderCreationMethod</Name>
			<DataField>QuotationHeaderCreationMethod</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesQuotationOwnership</Name>
			<DataField>QuotationOwnership</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultInvoiceLocationRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>LogisticsLocation</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>RequestingAccountType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SCM:SalesQuotationHeaderD365SalesEntity_RequestingAccountType</Label>
			<ComputedFieldMethod>accountTypeComputedColumn</ComputedFieldMethod>
			<EnumType>SalesQuotationHeaderAccountType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>RequestingAccountNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SCM:SalesQuotationHeaderD365SalesEntity_RequestingAccountNumber</Label>
			<ComputedFieldMethod>accountNumberComputedColumn</ComputedFieldMethod>
			<ExtendedDataType>ExternalAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountCustomerGroupCode</Name>
			<DataField>LineDisc</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscountCustomerGroupCode</Name>
			<DataField>EndDisc</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MultilineDiscountCustomerGroupCode</Name>
			<DataField>MultiLineDisc</DataField>
			<DataSource>SalesQuotationTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt64">
			<Name>RevisionNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>revisionNumberComputedColumn</ComputedFieldMethod>
			<ExtendedDataType>SalesQuotationRevisionNumber</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SalesQuotationIntegrationCreationType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<IsComputedField>No</IsComputedField>
			<EnumType>SalesQuotationIntegrationCreationType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SkipOpportunityCreationPrompt</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<FeatureClass>SalesQuotationHeaderEntityBypassPromptFlight</FeatureClass>
			<Label>@SCM:OpportunitySkipCreatePrompt</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isSkipOpportunityPromptComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>SalesQuotationNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesDocumentD365SalesEntitySpecificMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressDescription</MapField>
					<MapFieldTo>DeliveryAddressDescription</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FormattedDeliveryAddress</MapField>
					<MapFieldTo>FormattedDeliveryAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TradeEntitySpecificDeliveryAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCity</MapField>
					<MapFieldTo>DeliveryAddressCity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountryRegionId</MapField>
					<MapFieldTo>DeliveryAddressCountryRegionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountryRegionISOCode</MapField>
					<MapFieldTo>DeliveryAddressCountryRegionISOCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountyId</MapField>
					<MapFieldTo>DeliveryAddressCountyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressDistrictName</MapField>
					<MapFieldTo>DeliveryAddressDistrictName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLatitude</MapField>
					<MapFieldTo>DeliveryAddressLatitude</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLongitude</MapField>
					<MapFieldTo>DeliveryAddressLongitude</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressPostBox</MapField>
					<MapFieldTo>DeliveryAddressPostBox</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStateId</MapField>
					<MapFieldTo>DeliveryAddressStateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStreet</MapField>
					<MapFieldTo>DeliveryAddressStreet</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStreetNumber</MapField>
					<MapFieldTo>DeliveryAddressStreetNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressZipCode</MapField>
					<MapFieldTo>DeliveryAddressZipCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryBuildingCompliment</MapField>
					<MapFieldTo>DeliveryBuildingCompliment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendReportingCurrencyFixedExchangeRate</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ExchangeRate</MapField>
					<MapFieldTo>FixedExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReportingCurrencyExchangeRate</MapField>
					<MapFieldTo>ReportingCurrencyFixedExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SalesOrderHeaderD365Sales</Name>
			<Cardinality>ZeroOne</Cardinality>
			<RelatedDataEntity>SalesOrderHeaderD365SalesEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>D365SalesOrderHeader</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>D365SalesQuotationHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SalesOrderHeaderD365SalesEntity_SalesOrderNumber</Name>
					<Field>GeneratedSalesOrderNumber</Field>
					<RelatedField>SalesOrderNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>CustCustomerV3Entity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CustCustomerV3Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>CustCustomerV3Entity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>D365SalesQuotationHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>CustCustomerV3Entity_CustomerAccount</Name>
					<Field>RequestingCustomerAccountNumber</Field>
					<RelatedField>CustomerAccount</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InvoiceCustomerV3Entity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CustCustomerV3Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>InvoiceCustomerV3Entity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>D365SalesQuotationHeader</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>CustCustomerV3Entity_CustomerAccount</Name>
					<Field>InvoiceCustomerAccountNumber</Field>
					<RelatedField>CustomerAccount</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesQuotationTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesQuotationTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DeliveryPostalAddress</Field>
								<JoinDataSource>SalesQuotationTable</JoinDataSource>
								<RelatedField>AddressRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_OrderResponsible</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WorkerSalesResponsible_FK</Name>
								<JoinRelationName>SalesResponsible</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_OrderTaker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WorkerSalesTaker_FK</Name>
								<JoinRelationName>SalesTaker</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustDefaultInvoiceAddress</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustDefaultInvoiceAddressView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InvoiceAccount</Field>
								<JoinDataSource>SalesQuotationTable</JoinDataSource>
								<RelatedField>AccountNumber</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesQuotationCalculatedTotals</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesQuotationCalculatedTotals</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>QuotationId</Field>
								<JoinDataSource>SalesQuotationTable</JoinDataSource>
								<RelatedField>QuotationId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>QuotationType</Name>
						<Field>QuotationType</Field>
						<Status>Hidden</Status>
						<Value>Sales</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>