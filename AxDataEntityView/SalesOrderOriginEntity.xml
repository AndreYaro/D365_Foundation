<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderOriginEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
[OfficeMenuOmit]
public class SalesOrderOriginEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderOriginEntity, SalesOriginInternalType):
                if (_entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert
                    || _entityCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update)
                {
                    this.changeSalesOriginInternalTypeSaveOperation(_dataSourceCtx);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeSalesOriginInternalTypeSaveOperation</Name>
				<Source><![CDATA[
    private void changeSalesOriginInternalTypeSaveOperation(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.changeOptionalDataSourceSaveOperation(
            _dataSourceCtx, 
            this.IsOriginTypeAssigned, 
            this.orig().IsOriginTypeAssigned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOriginTypeAssignedDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the string defining how to compute the <c>IsOriginTypeAssigned</c> computed field.
    /// </summary>
    /// <returns>
    /// A string to compute the <c>IsOriginTypeAssigned</c> field.
    /// </returns>
    public static server str isOriginTypeAssignedDefinition()
    {
        TableName entityName = tableStr(SalesOrderOriginEntity);
        DataSourceName dataSourceName = dataEntityDataSourceStr(SalesOrderOriginEntity, SalesOriginInternalType);
        
        return SysComputedColumn::if(
                    SysComputedColumn::isNullExpression(
                        SysComputedColumn::comparisonField(entityName, dataSourceName, fieldStr(Common, RecId))),
                            SysComputedColumn::returnLiteral(NoYes::No),
                            SysComputedColumn::returnLiteral(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeOptionalDataSourceSaveOperation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the save operation of the datasources depending on the provided current and original values.
    /// </summary>
    /// <param name = "_dataSourceCtx">
    /// A DataSourceContext
    /// </param>
    /// <param name = "_currentValue">
    /// The current value of the boolean field that controls the save operation.
    /// </param>
    /// <param name = "_originalvalue">
    /// The original value of the boolean field that controls the save operation.
    /// </param>
    private void changeOptionalDataSourceSaveOperation(
        DataEntityDataSourceRuntimeContext  _dataSourceCtx, 
        NoYes                               _currentValue, 
        NoYes                               _originalvalue)
    {
        if (_currentValue)
        {
            if (_originalvalue)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
            }
            else
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
            }
        }
        else
        {
            if (_originalvalue)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Delete);
            }
            else
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesOrderOriginEntityDevDoc</DeveloperDocumentation>
	<FormRef>SalesOrigin</FormRef>
	<Label>@SCM:SalesOrderOriginEntityLabel</Label>
	<Tags>Sales order setup</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesOrderOriginStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>SalesOrderOriginCodes</PublicCollectionName>
	<PublicEntityName>SalesOrderOriginCode</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginDescription</Name>
			<DataField>Description</DataField>
			<DataSource>SalesOrigin</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginCode</Name>
			<DataField>OriginId</DataField>
			<DataSource>SalesOrigin</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginType</Name>
			<DataField>OriginType</DataField>
			<DataSource>SalesOriginInternalType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOriginTypeAssigned</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:CheckBox_SalesOrigin_OriginTypeAssignment</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isOriginTypeAssignedDefinition</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>OriginCode</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesOrigin</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesOrigin</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOriginInternalType</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SalesOriginInternalType</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>SalesOrigin</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>