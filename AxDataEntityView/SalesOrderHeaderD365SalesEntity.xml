<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesOrderHeaderD365SalesEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesOrderHeaderD365SalesEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the table extension used for defaulting.
    /// </summary>
    /// <returns>An instance of the <c>SysTableExtension</c> class.</returns>
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves the defaulting dependencies.
    /// </summary>
    /// <returns>A container with the defaulting dependencies.</returns>
    public container getDefaultingDependencies()
    {
        return [[fieldNum(SalesOrderHeaderD365SalesEntity, DeliveryModeCode), [fieldNum(SalesOrderHeaderD365SalesEntity, OrderingCustomerAccountNumber)]],
                [fieldNum(SalesOrderHeaderD365SalesEntity, DeliveryAddressDescription), [fieldNum(SalesOrderHeaderD365SalesEntity, DeliveryAddressCountryRegionId)]]];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates default values in a field.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets defaulted.</param>
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesOrderHeaderD365SalesEntity, DeliveryModeCode):
                this.defaultDlvMode();
                break;

            case fieldNum(SalesOrderHeaderD365SalesEntity, DeliveryAddressDescription):
                this.defaultDeliveryAddressDescription();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDlvMode</Name>
				<Source><![CDATA[
    private void defaultDlvMode()
    {
        if (!this.DeliveryModeCode && this.OrderingCustomerAccountNumber)
        {
            CustTable custAccount = CustTable::find(this.OrderingCustomerAccountNumber);
            this.DeliveryModeCode = custAccount.DlvMode;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultDeliveryAddressDescription</Name>
				<Source><![CDATA[
    private void defaultDeliveryAddressDescription()
    {
        if (!this.DeliveryAddressDescription && this.DeliveryAddressCountryRegionId && this.OrderingCustomerAccountNumber)
        {
            CustTable custAccount = CustTable::find(this.OrderingCustomerAccountNumber);
            if (custAccount.RecId)
            {
                this.DeliveryAddressDescription = custAccount.name();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                if (!this.SalesOrderNumber)
                {
                    NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                        _dataSourceCtx.getBuffer(), fieldNum(SalesTable, SalesId), SalesParameters::numRefSalesId());
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                if (!this.SalesOrderNumber)
                {
                    SalesTable salesTable = _dataSourceCtx.getBuffer();
                    this.SalesOrderNumber = salesTable.SalesId;
                }
                
                // Clear out 'isFieldSet' so the defaulting logic does not consider fields that were set by initValue as specified by the user.
                _dataSourceCtx.setAllFieldStatesToNotSet();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                ret = TradeEntitySpecificDeliveryAddress::findLogisticsPostalAddressBaseEntityDataSource();
                break;

            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesOrderOriginEntity):
                if (this.isFieldSet(fieldNum(SalesOrderHeaderD365SalesEntity, SalesOrderOriginType)))
                {
                    ret = this.findSalesOrderOriginEntity();
                }
                else
                {
                    ret = super(_entityCtx, _dataSourceCtx);
                }
                break;
                
            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findSalesOrderOriginEntity</Name>
				<Source><![CDATA[
    private SalesOrderOriginEntity findSalesOrderOriginEntity()
    {
        SalesOrderOriginEntity salesOrderOriginEntity;
        
        select firstonly salesOrderOriginEntity
            where salesOrderOriginEntity.IsOriginTypeAssigned == NoYes::Yes
                && salesOrderOriginEntity.OriginType == this.SalesOrderOriginType;

        return salesOrderOriginEntity;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        using (var activityContext = SalesInstrumentationLogger::createLogger(tableStr(SalesOrderHeaderD365SalesEntity)).salesOrderActivities().insertEntityDataSource(_dataSourceCtx))
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                    this.validateWriteSalesTableDataSource(_dataSourceCtx);
                    break;
            }

            boolean ret = super(_entityCtx, _dataSourceCtx);

            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                    this.TradeEntitySpecificDeliveryAddress::postInsertLogisticsPostalAddressBaseEntityDataSource(_dataSourceCtx);
                    break;
            }

            return ret;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        using (var activityContext = SalesInstrumentationLogger::createLogger(tableStr(SalesOrderHeaderD365SalesEntity)).salesOrderActivities().updateEntityDataSource(_dataSourceCtx))
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                    if (this.CurrencyCode != this.orig().CurrencyCode)
                    {
                        SalesTable salesTable = _dataSourceCtx.getBuffer();
                        salesTable.convertCurrencyCode(this.CurrencyCode, TradeCurencyConversion::TradeAgreements);
                    }
                    this.validateWriteSalesTableDataSource(_dataSourceCtx);
                    break;
            }

            return super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWriteSalesTableDataSource</Name>
				<Source><![CDATA[
    private void validateWriteSalesTableDataSource(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        SalesTable salesTable = _dataSourceCtx.getBuffer() as SalesTable;
        SalesTableType salesTableType = salesTable.type();

        boolean isValid = true;

        if (this.isFieldModified(fieldNum(SalesOrderHeaderD365SalesEntity, OrderingCustomerAccountNumber)) && !salesTableType.editCustAccount())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesOrderHeaderD365SalesEntity, OrderingCustomerAccountNumber));
        }

        if (this.isFieldModified(fieldNum(SalesOrderHeaderD365SalesEntity, InvoiceCustomerAccountNumber)) && !salesTableType.editInvoiceAccount())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesOrderHeaderD365SalesEntity, InvoiceCustomerAccountNumber));
        }

        if (this.isFieldModified(fieldNum(SalesOrderHeaderD365SalesEntity, ArePricesIncludingSalesTax)) && !salesTableType.editInclTax())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesOrderHeaderD365SalesEntity, ArePricesIncludingSalesTax));
        }

        if (this.isFieldModified(fieldNum(SalesOrderHeaderD365SalesEntity, CurrencyCode)) && !salesTableType.editCurrencyCode())
        {
            isValid = this.allowEditCheckFailed(fieldPName(SalesOrderHeaderD365SalesEntity, CurrencyCode));
        }

        if (salesTable.isMarkedForBankLC())
        {
            List fields = new List(Types::Integer);
            fields.addEnd(fieldNum(SalesOrderHeaderD365SalesEntity, PaymentTermsName));
            fields.addEnd(fieldNum(SalesOrderHeaderD365SalesEntity, CashDiscountCode));
            isValid = isValid & this.checkFieldsAreNotModified(fields);
        }

        if (!isValid)
        {
            _dataSourceCtx.throwValidateWriteFailed();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                // Enable insert of records with blank values for mandatory field RequestedShippingDate
                if (_entityCtx.isDatabaseOperationInsert())
                {
                    this.setBlankFieldStateToNotSet(fieldNum(SalesOrderHeaderD365SalesEntity, RequestedShippingDate));
                }

                // Find existing logistic address location to avoid duplicate.
                if (_entityCtx.isDatabaseOperationInsertOrUpdate())
                {
                    if (this.IsDeliveryAddressOrderSpecific)
                    {
                        this.TradeEntitySpecificDeliveryAddress::resolveOrderSpecificLocationId(this.SalesOrderNumber);
                    }
                    else
                    {
                        this.TradeEntitySpecificDeliveryAddress::resolvePartyAddressLocationId();
                    }

                    if (this.isFieldSet(fieldNum(SalesOrderHeaderD365SalesEntity, SalesOrderOriginType)))
                    {
                        this.SalesOrderOriginCode = this.findSalesOrderOriginEntity().OriginCode;
                    }
                }
                break;

            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):
                this.SalesDocumentD365SalesEntitySpecificMap::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_entityCtx, _dataSourceCtx);
                
                if (_dataSourceCtx.isAnyEntityFieldSet(this))
                {
                    this.TradeEntitySpecificDeliveryAddress::mapLogisticsPostalAddressBaseEntityDataSourceToEntity(_dataSourceCtx);
                }
                break;

            default:
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):

                SalesTable salesTable = _dataSourceCtx.getBuffer();

                // Setting the values here so the defaulting in the <c>initValue_Server</c> method in <c>SalesTable</c> is not used.
                // Table extension defaulting on SalesTable ensures that values set are not overridden if they are marked as set, so if the below 2 fields
                // are set on the entity (even if they have no value), then the corresponding SFKs on the sales table should also be marked as set, and the
                // entity framework is not doing this today (Dynamics: Bug 3667212).
                salesTable.fieldState(fieldNum(SalesTable, WorkerSalesTaker), this.fieldState(fieldNum(SalesOrderHeaderD365SalesEntity, OrderTakerPersonnelNumber)));
                salesTable.fieldState(fieldNum(SalesTable, WorkerSalesResponsible), this.fieldState(fieldNum(SalesOrderHeaderD365SalesEntity, OrderResponsiblePersonnelNumber)));

                // When SkipCreateAutoCharges is specified, the SkipCreateMarkup field on salesline should be set to the value of the SkipCreateAutoCharges field on the entity.
                if (this.isFieldSet(fieldNum(SalesOrderHeaderD365SalesEntity, SkipCreateAutoCharges)))
                {
                    salesTable.SkipCreateMarkup = this.SkipCreateAutoCharges;
                }
                else
                {
                    // When SkipCreateAutoCharges is not specified,keep the original rule.
                    if (this.scopeIdentifier())
                    {
                        // Skip creation of markup when doing data migration.
                        salesTable.SkipCreateMarkup = NoYes::Yes;
                    }
                }

                salesTable.IsIntegration = TradeIntegrationType::Dynamics365Sales;
                salesTable.SalesOrderIntegrationCreationType = this.SalesOrderIntegrationCreationType;
                break;

            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity):

                LogisticsPostalAddressBaseEntity postalAddressEntity = _dataSourceCtx.getBuffer();

                boolean skipDatabaseOperation = !this.DeliveryAddressDescription 
                                                && SalesSkipAddressCreationIfAddressDescriptionBlankFlight::instance().isEnabled()
                                                && (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Update 
                                                    || (_entityCtx.isDatabaseOperationUpdate() && SalesSkipAddressCreationIfAddressDescriptionBlankSpecifiedFlight::instance().isEnabled()))
                                                && !postalAddressEntity.isAnyMappedFieldModified();

                if (skipDatabaseOperation)
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                }
                else
                {
                    // The Address field is generated to a specified format based on the component address parts. Updating it directly is not allowed.
                    postalAddressEntity.fieldState(fieldNum(LogisticsPostalAddressBaseEntity, Address), FieldState::NotSet);
                }

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, SalesTable):
                SalesTable salesTable = _dataSourceCtx.getBuffer();

                this.TradeEntitySpecificDeliveryAddress::mapSavedPostalAddressToEntity(_entityCtx, salesTable.DeliveryPostalAddress);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        if (this.RecId)
        {
            if (RetailParameters::isRetailEnabledAndInUse()
                && RetailSalesTable::find(this.SalesOrderNumber).RetailChannel)
            {
                return checkFailed("@SCM:SalesOrderHeaderEntityDoesNotSupportUpdatesOfRetailOrders");
            }

            SalesTable salesTable = SalesTable::find(this.SalesOrderNumber);

            boolean skipCheckUpdate = salesTable.SalesStatus == SalesStatus::Invoiced 
                                      && SalesOrderHeaderCDSCheckDataModifiedBeforeValidateFlight::instance().isEnabled()
                                      && !this.isAnyMappedFieldModified();

            if (!skipCheckUpdate && !salesTable.checkUpdate(true, true, true))
            {
                return false;
            }
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    public boolean validateDelete()
    {
        if (!SalesTable::find(this.SalesOrderNumber).type().checkDelete(true, true))
        {
            return false;
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>deliveryAddressPartyRecId</Name>
				<Source><![CDATA[
    // This method implements the interface defined by <c>TradeEntitySpecificDeliveryAddress</c>.
    public RecId deliveryAddressPartyRecId()
    {
        return CustTable::find(this.OrderingCustomerAccountNumber).Party;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isFieldModified</Name>
				<Source><![CDATA[
    private boolean isFieldModified(FieldId _fieldId)
    {
        return DataEntityDataSourceRuntimeContextAppSuite_Extension::isFieldModified(this, _fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkFieldsAreNotModified</Name>
				<Source><![CDATA[
    private boolean checkFieldsAreNotModified(List _fieldIds)
    {
        var enumerator = _fieldIds.getEnumerator();
        boolean result = true;

        while (enumerator.moveNext())
        {
            FieldId fieldId = enumerator.current();
            if (this.isFieldModified(fieldId))
            {
                result = this.allowEditCheckFailed(fieldId2PName(tableNum(SalesOrderHeaderD365SalesEntity), fieldId));
            }
        }

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>allowEditCheckFailed</Name>
				<Source><![CDATA[
    private boolean allowEditCheckFailed(FieldLabel _fieldLabel)
    {
        return checkFailed(strFmt("@ApplicationFoundation:DataEntitiesNoAllowEdit", _fieldLabel));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updatePrices</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the discount and totals for a given entity record.
    /// </summary>
    /// <param name = "_salesOrderHeaderEntityRecord">The sales order header entity record.</param>
    /// <returns>The list of related entities that need to be resynced.</returns>
    /// <remarks>
    /// This method is aimed to be used by Dual Write to trigger price and discount calculation updates.
    /// See <c>RunDocumentAction</c> OData action on the <c>DualWriteProjectConfigurationEntity</c> entity.
    /// </remarks>
    public static List updatePrices(Common _salesOrderHeaderEntityRecord)
    {
        return SalesCDSUpdatePriceBase::newFromRecord(_salesOrderHeaderEntityRecord).updatePrices();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTotals</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates totals for a given entity record.
    /// </summary>
    /// <param name = "_salesOrderHeaderEntityRecord">The sales order header entity record.</param>
    /// <returns>The list of related entities that need to be resynced.</returns>
    /// <remarks>
    /// This method is aimed to be used by Dual Write to trigger total calculation updates.
    /// See <c>RunDocumentAction</c> OData action on the <c>DualWriteProjectConfigurationEntity</c> entity.
    /// </remarks>
    public static List updateTotals(Common _salesOrderHeaderEntityRecord)
    {
        return SalesCDSUpdatePriceBase::newFromRecord(_salesOrderHeaderEntityRecord).updateTotals();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getEntityDataSourceToFieldMapping</Name>
				<Source><![CDATA[
    public static container getEntityDataSourceToFieldMapping(container mapping)
    {
        mapping += [[dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, LogisticsPostalAddressBaseEntity), tablenum(LogisticsPostalAddress), fieldstr(SalesOrderHeaderD365SalesEntity, DeliveryPostalAddressRecId)],
                    [dataEntityDataSourceStr(SalesOrderHeaderD365SalesEntity, CustDefaultInvoiceAddress), tablenum(CustDefaultLocation), fieldstr(SalesOrderHeaderD365SalesEntity, DefaultInvoiceLocationRecId)]];

        return mapping;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dualWriteShouldSkipDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines that the datasource CustTable should be skipped for change tracking.
    /// </summary>
    /// <param name = "_entityToAnalyze">The entity being tracked.</param>
    /// <param name = "_datasourceName">The datasource within the entity to track.</param>
    /// <param name = "_primaryTableId">The table ID of the datasource being tracked.</param>
    /// <param name = "_fieldMapping">The set of field mappings related to this map.</param>
    /// <returns>false if the datasource should not be skipped; otherwise, !atLeastOneFieldMapped.</returns>
    public static boolean dualWriteShouldSkipDataSource(DictDataEntity _entityToAnalyze,str _datasourceName,tableid _primaryTableId,Map _fieldMapping, boolean atLeastOneFieldMapped)
    {
        if(_primaryTableId == tableNum(CustTable))
        {
            return true;
        }
        
        return !atLeastOneFieldMapped;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    public static Query defaultCTQuery()
    {
        Query salesOrderHeaderQuery = new Query();

        var salesTableDS = salesOrderHeaderQuery.addDataSource(tableNum(SalesTable));

        SalesOrderHeaderD365SalesEntity::addChangeTrackingDataSourcesForSalesTableChildren(salesTableDS);

        return salesOrderHeaderQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>addChangeTrackingDataSourcesForSalesTableChildren</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds change tracking tables to the children of the <c>SalesTable</c> data sources.
    /// </summary>
    /// <param name = "_salesTableDS">The <c>QueryBuildDataSource</c> instance to append it's child data sources to.</param>
    /// <returns>An instance of the <c>SalesTable</c> data source being joined to.</returns>
    [Hookable(false)]
    internal static QueryBuildDataSource addChangeTrackingDataSourcesForSalesTableChildren(QueryBuildDataSource _salesTableDS)
    {
        boolean useReferencedData = !SalesParameters::skipReferencedDataDuringChangeTracking();

        if (useReferencedData)
        {
            var orderResponsibleWorkerDS = _salesTableDS.addDataSource(tableNum(HcmWorker));
            orderResponsibleWorkerDS.joinMode(JoinMode::OuterJoin);
            orderResponsibleWorkerDS.addLink(fieldNum(SalesTable, WorkerSalesResponsible), fieldNum(HcmWorker, RecId));

            var orderTakerWorkerDS = _salesTableDS.addDataSource(tableNum(HcmWorker));
            orderTakerWorkerDS.joinMode(JoinMode::OuterJoin);
            orderTakerWorkerDS.addLink(fieldNum(SalesTable, WorkerSalesTaker), fieldNum(HcmWorker, RecId));
            
            var custDefaultLocationDS = _salesTableDS.addDataSource(tableNum(CustDefaultLocation));
            custDefaultLocationDS.joinMode(JoinMode::OuterJoin);
            custDefaultLocationDS.addLink(fieldNum(SalesTable, InvoiceAccount), fieldNum(CustDefaultLocation,AccountNum));

            var dirPartyLocationRoleDS = custDefaultLocationDS.addDataSource(tableNum(DirPartyLocationRole));
            dirPartyLocationRoleDS.addLink(fieldNum(CustDefaultLocation, PartyLocationRole), fieldNum(DirPartyLocationRole, RecId));

            var logisticsLocationRoleDS = dirPartyLocationRoleDS.addDataSource(tableNum(LogisticsLocationRole));
            logisticsLocationRoleDS.addLink(fieldNum(DirPartyLocationRole, LocationRole), fieldNum(LogisticsLocationRole, RecId));

            var dirPartyLocationDS = dirPartyLocationRoleDS.addDataSource(tableNum(DirPartyLocation));
            dirPartyLocationDS.addLink(fieldNum(DirPartyLocationRole, PartyLocation), fieldNum(DirPartyLocation, RecId));
        
            var logisticsPostalAddress = dirPartyLocationDS.addDataSource(tableNum(LogisticsPostalAddress));
            logisticsPostalAddress.addLink(fieldNum(DirPartyLocation, Location), fieldNum(LogisticsPostalAddress, Location));
        }
        
        LogisticsPostalAddressBaseEntityChangeTrackingHelper::addPostalAddressBasedOnAddressRecIdLink(_salesTableDS, fieldNum(SalesTable, DeliveryPostalAddress));

        var salesOrderTotalsDS = _salesTableDS.addDataSource(tableNum(SalesOrderTotals));
        salesOrderTotalsDS.joinMode(JoinMode::OuterJoin);
        salesOrderTotalsDS.addLink(fieldNum(SalesTable, SalesId), fieldNum(SalesOrderTotals, SalesId));

        return _salesTableDS;
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesOrderProcessingStatusCalc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the sales order processing status depending on the order status and document status.
    /// </summary>
    /// <returns>Sales order Integration Status</returns>
    public static str salesOrderProcessingStatusCalc()
    {
        str orderStatus    	= SysComputedColumn::comparisonField(tableStr(SalesOrderHeaderD365SalesEntity), identifierStr(SalesTable), fieldStr(SalesTable, SalesStatus));
        str documentStatus  = SysComputedColumn::comparisonField(tableStr(SalesOrderHeaderD365SalesEntity), identifierStr(SalesTable), fieldStr(SalesTable, DocumentStatus));

        return SysComputedColumn::if(SysComputedColumn::EqualExpression(documentStatus, SysComputedColumn::comparisonLiteral(DocumentStatus::Invoice)),
                SysComputedColumn::if(SysComputedColumn::EqualExpression(orderStatus, SysComputedColumn::comparisonLiteral(SalesStatus::Invoiced)),
                    SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Invoiced),
                    SysComputedColumn::if(SysComputedColumn::EqualExpression(orderStatus, SysComputedColumn::comparisonLiteral(SalesStatus::Delivered)),
                        SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::DeliveredPartiallyInvoiced),
                        SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::PartiallyInvoiced)
                    )
                ),
                SysComputedColumn::if(SysComputedColumn::EqualExpression(documentStatus, SysComputedColumn::comparisonLiteral(DocumentStatus::PackingSlip)),
                    SysComputedColumn::if(SysComputedColumn::EqualExpression(orderStatus, SysComputedColumn::comparisonLiteral(SalesStatus::Delivered)),
                        SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Delivered),
                        SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::PartiallyDelivered)
                    ),
                    SysComputedColumn::if(SysComputedColumn::EqualExpression(documentStatus, SysComputedColumn::comparisonLiteral(DocumentStatus::PickingList)),
                        SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Picked),
                        SysComputedColumn::if(SysComputedColumn::EqualExpression(documentStatus, SysComputedColumn::comparisonLiteral(DocumentStatus::Confirmation)),
                            SysComputedColumn::if(SysComputedColumn::EqualExpression(orderStatus, SysComputedColumn::comparisonLiteral(SalesStatus::Canceled)),
                                SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Canceled),
                                SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Confirmed)
                            ),
                            SysComputedColumn::if(SysComputedColumn::EqualExpression(orderStatus, SysComputedColumn::comparisonLiteral(SalesStatus::Canceled)),
                                SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Canceled),
                                SysComputedColumn::returnLiteral(SalesOrderProcessingStatus::Active)
                            )
                        )
                    )
                )
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>isDeliveryAddressOrderSpecificComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str isDeliveryAddressOrderSpecificComputedColumnDefinition()
    {
        // The <c>IsDeliveryAddressOrderSpecific</c> field is only designed for import scenarios
        // so we will always return 'No' for export scnearios to save performance.
        return SysComputedColumn::returnLiteral(NoYes::No);
    }

]]></Source>
			</Method>
			<Method>
				<Name>areTotalsUpdatedComputedColumn</Name>
				<Source><![CDATA[
    /// <summary>
    /// Calculate the are totals updated flag.
    /// </summary>
    /// <returns>The value of <c>AreTotalsUpdated</c> field.</returns>
    public static str areTotalsUpdatedComputedColumn()
    {
        List conditionList = new List(Types::String);

        conditionList.addEnd(SalesOrderHeaderD365SalesEntity::isOrderTotalsUpdatedLaterThan(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderLastChangeDateV2), fieldStr(SalesOrderLastChangeDateV2, HeaderLastModifiedDateTime))));

        conditionList.addEnd(
            SysComputedColumn::or2(
                SalesOrderHeaderD365SalesEntity::isOrderTotalsUpdatedLaterThan(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderLastChangeDateV2), fieldStr(SalesOrderLastChangeDateV2, LineLastModifiedDateTime))),
                SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(tableStr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderLastChangeDateV2), fieldStr(SalesOrderLastChangeDateV2, LineCount)), SysComputedColumn::returnLiteral(0))));

        SalesOrderHeaderD365SalesEntity::addChargeConditions(conditionList);

        return SysComputedColumn::if(SysComputedColumn::isNullExpression(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), tableStr(SalesOrderTotals), fieldStr(SalesOrderTotals, RecId))),
            SysComputedColumn::returnLiteral(NoYes::No),
            SysComputedColumn::if(
                SysComputedColumn::and(conditionList),
                SysComputedColumn::returnLiteral(NoYes::Yes),
                SysComputedColumn::returnLiteral(NoYes::No))
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>addChargeConditions</Name>
				<Source><![CDATA[
    private static void addChargeConditions(List _conditionList)
    {
        if (isConfigurationkeyEnabled(configurationKeyNum(Markup)))
        {
            _conditionList.addEnd(
                SysComputedColumn::or2(
                    SalesOrderHeaderD365SalesEntity::isOrderTotalsUpdatedLaterThan(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderChargeLastChangeDate), fieldStr(SalesOrderChargeLastChangeDate, HeaderChargeLastModifiedDateTime))),
                    SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderChargeLastChangeDate), fieldStr(SalesOrderChargeLastChangeDate, HeaderChargeCount)), SysComputedColumn::returnLiteral(0))));

            _conditionList.addEnd(
                SysComputedColumn::or2(
                    SalesOrderHeaderD365SalesEntity::isOrderTotalsUpdatedLaterThan(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderChargeLastChangeDate), fieldStr(SalesOrderChargeLastChangeDate, LineChargeLastModifiedDateTime))),
                    SysComputedColumn::equalExpression(SysComputedColumn::comparisonField(dataentityviewstr(SalesOrderHeaderD365SalesEntity), viewstr(SalesOrderChargeLastChangeDate), fieldStr(SalesOrderChargeLastChangeDate, LineChargeCount)), SysComputedColumn::returnLiteral(0))));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isOrderTotalsUpdatedLaterThan</Name>
				<Source><![CDATA[
    private static str isOrderTotalsUpdatedLaterThan(str _fieldToCompare)
    {
        return SysComputedColumn::compareExpressions(
            SysComputedColumn::comparisonField(tableStr(SalesOrderHeaderD365SalesEntity), identifierStr(SalesOrderTotals), fieldStr(SalesOrderTotals, LastUpdatedDateTime)),
            '>',
            _fieldToCompare);
    }

]]></Source>
			</Method>
			<Method>
				<Name>skipCreateAutoChargesComputedColumnDefinition</Name>
				<Source><![CDATA[
    /// <summary>
    /// The <c>SkipCreateAutoCharges</c> field is only designed for import scenarios
    /// so we will always return 'Yes' for export scenarios to save performance.
    /// </summary>
    /// <returns>Yes</returns>
    private static str skipCreateAutoChargesComputedColumnDefinition()
    {
        return SysComputedColumn::returnLiteral(NoYes::Yes);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesOrderHeaderD365SalesEntity)).salesOrderActivities().insert(this))
        {
            this.setReportingCurrencyFixedExchangeRate(this.FixedExchangeRate);

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        using (var context = SalesInstrumentationLogger::createLogger(tableStr(SalesOrderHeaderD365SalesEntity)).salesOrderActivities().update(this))
        {
            this.setReportingCurrencyFixedExchangeRate(this.FixedExchangeRate);

            super();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setReportingCurrencyFixedExchangeRate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the <c>ReportingCurrencyFixedExchangeRate</c> to the specified value.
    /// </summary>
    /// <param name = "_exchRate">The reporting currency fixed exchange rate.</param>
    private void setReportingCurrencyFixedExchangeRate(ExchRate _exchRate)
    {
        this.CustVendReportingCurrencyFixedExchangeRate::setReportingCurrencyFixedExchangeRate(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>CDSIntegration</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesOrderHeaderD365SalesEntityDevDoc</DeveloperDocumentation>
	<FormRef>SalesTable</FormRef>
	<Label>@SCM:SalesOrderHeaderD365SalesEntity</Label>
	<Tags>Sales order</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesOrderHeaderD365SalesStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>D365SalesOrderHeaders</PublicCollectionName>
	<PublicEntityName>D365SalesOrderHeader</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ArePricesIncludingSalesTax</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CashDiscountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfirmedReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfirmedShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ContactPersonId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CurrencyCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerRequisitionNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomersOrderReference</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultShippingSiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultShippingWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountryRegionISOCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressDunsNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLocationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressPostBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryBuildingCompliment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryModeCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryTermsCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DeliveryValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Email</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormattedDeliveryAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FormattedInvoiceAddress</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCountryRegionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressCountyId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressDistrictName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressLatitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressLongitude</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressPostBox</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStateId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStreet</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressStreetNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressTimeZone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceAddressZipCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceBuildingCompliment</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceCustomerIsExternallyMaintained</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceValidFrom</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InvoiceValidTo</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressOrderSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsDeliveryAddressPrivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsInvoiceAddressPrivate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsOneTimeCustomer</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsSalesProcessingStopped</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderCreationDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderingCustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderingCustomerIsExternallyMaintained</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderResponsiblePersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTakerPersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTotalAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTotalChargesAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTotalDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderTotalTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>OrderHeaderTaxAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentTermsBaseDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PaymentTermsName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PriceCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>QuotationNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderOriginCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderProcessingStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderPromisingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesResponsible</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesTaker</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscountAmount</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>URL</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreTotalsUpdated</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SalesOrderOriginType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ExternalWorkOrderStatus</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProjectId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TotalDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>MultilineDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineDiscountCustomerGroupCode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ArePricesIncludingSalesTax</Name>
			<DataField>InclTax</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CashDiscountCode</Name>
			<DataField>CashDisc</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConfirmedReceiptDate</Name>
			<DataField>ReceiptDateConfirmed</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ConfirmedShippingDate</Name>
			<DataField>ShippingDateConfirmed</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ContactPersonId</Name>
			<DataField>ContactPersonId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CurrencyCode</Name>
			<Mandatory>No</Mandatory>
			<DataField>CurrencyCode</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerRequisitionNumber</Name>
			<DataField>PurchOrderFormNum</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomersOrderReference</Name>
			<DataField>CustomerRef</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultShippingSiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultShippingWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCity</Name>
			<DataField>City</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountryRegionISOCode</Name>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressCountyId</Name>
			<DataField>County</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDescription</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDistrictName</Name>
			<DataField>DistrictName</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressDunsNumber</Name>
			<DataField>DunsNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLatitude</Name>
			<DataField>Latitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLocationId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>LocationId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressLongitude</Name>
			<DataField>Longitude</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressName</Name>
			<Label>@SCM:DeliveryAddressName</Label>
			<DataField>DeliveryName</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressPostBox</Name>
			<DataField>PostBox</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStateId</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreet</Name>
			<DataField>Street</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressStreetNumber</Name>
			<DataField>StreetNumber</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressTimeZone</Name>
			<DataField>TimeZone</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryAddressZipCode</Name>
			<DataField>ZipCode</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryBuildingCompliment</Name>
			<DataField>BuildingCompliment</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryModeCode</Name>
			<DataField>DlvMode</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryPostalAddressRecId</Name>
			<DataField>AddressRecId</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryTermsCode</Name>
			<DataField>DlvTerm</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DeliveryValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Email</Name>
			<DataField>Email</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedDeliveryAddress</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>FormattedDeliveryAddress</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FormattedInvoiceAddress</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Address</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCity</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>City</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountryRegionId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>CountryRegionId</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountyId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>County</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressDistrictName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>DistrictName</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressLatitude</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Latitude</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressLongitude</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Longitude</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressPostBox</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>PostBox</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStateId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>State</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStreet</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Street</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressStreetNumber</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>StreetNumber</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressTimeZone</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TimeZone</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressZipCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>ZipCode</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceBuildingCompliment</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>BuildingCompliment</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceCustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AccountNum</DataField>
			<DataSource>CustTableInvoiceCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceCustomerIsExternallyMaintained</Name>
			<DataField>IsExternallyMaintained</DataField>
			<DataSource>CustTableInvoiceCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceValidFrom</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidFrom</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceValidTo</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ValidTo</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsDeliveryAddressOrderSpecific</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOneTimeDeliveryAddress</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isDeliveryAddressOrderSpecificComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsDeliveryAddressPrivate</Name>
			<Label>@SCM:IsDeliveryAddressPrivate</Label>
			<DataField>IsPrivate</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsInvoiceAddressPrivate</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>IsPrivate</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsOneTimeCustomer</Name>
			<DataField>OneTimeCustomer</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsSalesProcessingStopped</Name>
			<DataField>MCROrderStopped</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LanguageId</Name>
			<Mandatory>No</Mandatory>
			<DataField>LanguageId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderCreationDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>CreatedDateTime</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderingCustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>AccountNum</DataField>
			<DataSource>CustTableOrderingCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderingCustomerIsExternallyMaintained</Name>
			<DataField>IsExternallyMaintained</DataField>
			<DataSource>CustTableOrderingCustomer</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderResponsiblePersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS81476</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_OrderResponsible</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderTakerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS310060</Label>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker_OrderTaker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderTotalAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>OrderTotalAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderTotalChargesAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>OrderTotalChargesAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderTotalDiscountAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>OrderTotalDiscountAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderTotalTaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>OrderTotalTaxAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderHeaderTaxAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>OrderHeaderTaxAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentTermsBaseDate</Name>
			<DataField>CashDiscBaseDate</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentTermsName</Name>
			<DataField>Payment</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceCustomerGroupCode</Name>
			<DataField>PriceGroupId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>QuotationNumber</Name>
			<DataField>QuotationId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedReceiptDate</Name>
			<DataField>ReceiptDateRequested</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedShippingDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ShippingDateRequested</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderName</Name>
			<DataField>SalesName</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InvoiceAddressCountryRegionISOCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>CountryRegionISOCode</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>SalesId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderOriginCode</Name>
			<DataField>SalesOriginId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SalesOrderProcessingStatus</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ComputedFieldMethod>salesOrderProcessingStatusCalc</ComputedFieldMethod>
			<EnumType>SalesOrderProcessingStatus</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderPromisingMethod</Name>
			<DataField>DeliveryDateControlType</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderStatus</Name>
			<DataField>SalesStatus</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesResponsible</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerSalesResponsible</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaker</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerSalesTaker</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscountAmount</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>TotalDiscountAmount</DataField>
			<DataSource>SalesOrderTotals</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>URL</Name>
			<DataField>URL</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>AreTotalsUpdated</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Label>@SalesAndMarketing:SalesTotalsUpdated</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>areTotalsUpdatedComputedColumn</ComputedFieldMethod>
			<ExtendedDataType>SalesTotalsCalculated</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesOrderOriginType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>OriginType</DataField>
			<DataSource>SalesOrderOriginEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ExternalWorkOrderStatus</Name>
			<DataField>ExternalWorkOrderStatus</DataField>
			<DataSource>SalesTableExternalWorkOrderStatus</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<DataField>ProjId</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SkipCreateAutoCharges</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:SkipAutoChargeCreation</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>skipCreateAutoChargesComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>FixedExchangeRate</Name>
			<DataField>FixedExchRate</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportingCurrencyFixedExchangeRate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ReportingCurrencyFixedExchRate</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultInvoiceLocationRecId</Name>
			<AccessModifier>Internal</AccessModifier>
			<DataField>LogisticsLocation</DataField>
			<DataSource>CustDefaultInvoiceAddress</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TotalDiscountCustomerGroupCode</Name>
			<DataField>EndDisc</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MultilineDiscountCustomerGroupCode</Name>
			<DataField>MultiLineDisc</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDiscountCustomerGroupCode</Name>
			<DataField>LineDisc</DataField>
			<DataSource>SalesTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>SalesOrderIntegrationCreationType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<IsComputedField>No</IsComputedField>
			<EnumType>SalesOrderIntegrationCreationType</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>SalesOrderNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>SalesDocumentD365SalesEntitySpecificMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressDescription</MapField>
					<MapFieldTo>DeliveryAddressDescription</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>FormattedDeliveryAddress</MapField>
					<MapFieldTo>FormattedDeliveryAddress</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>TradeEntitySpecificDeliveryAddress</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCity</MapField>
					<MapFieldTo>DeliveryAddressCity</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountryRegionId</MapField>
					<MapFieldTo>DeliveryAddressCountryRegionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountryRegionISOCode</MapField>
					<MapFieldTo>DeliveryAddressCountryRegionISOCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressCountyId</MapField>
					<MapFieldTo>DeliveryAddressCountyId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressDistrictName</MapField>
					<MapFieldTo>DeliveryAddressDistrictName</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLatitude</MapField>
					<MapFieldTo>DeliveryAddressLatitude</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressLongitude</MapField>
					<MapFieldTo>DeliveryAddressLongitude</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressPostBox</MapField>
					<MapFieldTo>DeliveryAddressPostBox</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStateId</MapField>
					<MapFieldTo>DeliveryAddressStateId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStreet</MapField>
					<MapFieldTo>DeliveryAddressStreet</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressStreetNumber</MapField>
					<MapFieldTo>DeliveryAddressStreetNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryAddressZipCode</MapField>
					<MapFieldTo>DeliveryAddressZipCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryBuildingCompliment</MapField>
					<MapFieldTo>DeliveryBuildingCompliment</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>DeliveryLocationId</MapField>
					<MapFieldTo>DeliveryAddressLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsDeliveryAddressOrderSpecific</MapField>
					<MapFieldTo>IsDeliveryAddressOrderSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>CustVendReportingCurrencyFixedExchangeRate</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ExchangeRate</MapField>
					<MapFieldTo>FixedExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ReportingCurrencyExchangeRate</MapField>
					<MapFieldTo>ReportingCurrencyFixedExchangeRate</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SalesOrderOrigin</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SalesOrderOriginEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>SalesOrderOrigin</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesOrderHeaders</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SalesOrderOriginEntity_OriginCode</Name>
					<Field>SalesOrderOriginCode</Field>
					<RelatedField>OriginCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Project</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Project</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>SalesOrderHeaders</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ProjectEntity_ProjectID</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>SalesTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>SalesTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_OrderResponsible</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>WorkerSalesResponsible</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker_OrderTaker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>WorkerSalesTaker</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>LogisticsPostalAddressBaseEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>LogisticsPostalAddressBaseEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DeliveryPostalAddress</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>AddressRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustDefaultInvoiceAddress</Name>
						<ApplyDateFilter>Yes</ApplyDateFilter>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustDefaultInvoiceAddressView</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InvoiceAccount</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>AccountNumber</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOrderTotals</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesOrderTotals</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesId</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>SalesId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTableOrderingCustomer</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CustAccount</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>CustTableInvoiceCustomer</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>CustTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InvoiceAccount</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>AccountNum</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOrderLastChangeDateV2</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesOrderLastChangeDateV2</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesId</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>SalesId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOrderChargeLastChangeDate</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesOrderChargeLastChangeDate</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesId</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>SalesId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesOrderOriginEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesOrderOriginEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesOriginId</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>OriginCode</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesTableExternalWorkOrderStatus</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>SalesTableExternalWorkOrderStatus</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>SalesId</Field>
								<JoinDataSource>SalesTable</JoinDataSource>
								<RelatedField>SalesId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>SalesType</Name>
						<Field>SalesType</Field>
						<Value>Sales</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>