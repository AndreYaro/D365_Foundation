<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ProdProductionControlParametersEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class ProdProductionControlParametersEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdParametersDim):
                ProdParametersDim prodParametersDim = _dataSourceCtx.getBuffer();
                prodParametersDim.InventDimId = InventDim::inventDimIdBlank();
                break;
        }
        
        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = true;
        boolean mustWrite = true;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdTimeUnitOfMeasureDays):
                ProdTimeUnitOfMeasure timeUnitDays = _dataSourceCtx.getBuffer();
                timeUnitDays.TimeUnitType = ProdTimeUnitType::Days;
                mustWrite = timeUnitDays.UnitOfMeasure != 0;
                break;
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdTimeUnitOfMeasureHours):
                ProdTimeUnitOfMeasure timeUnitHours = _dataSourceCtx.getBuffer();
                timeUnitHours.TimeUnitType = ProdTimeUnitType::Hours;
                mustWrite = timeUnitHours.UnitOfMeasure != 0;
                break;
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdTimeUnitOfMeasureMinutes):
                ProdTimeUnitOfMeasure timeUnitMinutes = _dataSourceCtx.getBuffer();
                timeUnitMinutes.TimeUnitType = ProdTimeUnitType::Minutes;
                mustWrite = timeUnitMinutes.UnitOfMeasure != 0;
                break;
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdTimeUnitOfMeasureSeconds):
                ProdTimeUnitOfMeasure timeUnitSeconds = _dataSourceCtx.getBuffer();
                timeUnitSeconds.TimeUnitType = ProdTimeUnitType::Seconds;
                mustWrite = timeUnitSeconds.UnitOfMeasure != 0;
                break;
            case dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdParametersDim):
                ProdParametersDim prodParametersDim = _dataSourceCtx.getBuffer();
                prodParametersDim.InventDimId = InventDim::inventDimIdBlank();
                break;
        }

        if (mustWrite)
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }
    
        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdParameters))
        {
            this.updateProdStatusParameters();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateProdStatusParameters</Name>
				<Source><![CDATA[
    public void updateProdStatusParameters()
    {
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToEstimatedStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToOperationsScheduledStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToJobScheduledStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToReleasedStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToStartedStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsCreatedToEndedStatusChangedAllowed), ProdStatusAll::Created, ProdStatusAll::Completed);
        
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToCreatedStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToOperationsScheduledStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToJobScheduledStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToReleasedStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToStartedStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsEstimatedToEndedStatusChangedAllowed), ProdStatusAll::CostEstimated, ProdStatusAll::Completed);
        
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToCreatedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToEstimatedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToJobScheduledStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToReleasedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToStartedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsOperationsScheduledToEndedStatusChangedAllowed), ProdStatusAll::OperationScheduled, ProdStatusAll::Completed);

        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToCreatedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToEstimatedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToOperationsScheduledStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToReleasedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToStartedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsJobScheduledToEndedStatusChangedAllowed), ProdStatusAll::JobScheduled, ProdStatusAll::Completed);

        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToCreatedStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToEstimatedStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToOperationsScheduledStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToJobScheduledStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToStartedStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReleasedToEndedStatusChangedAllowed), ProdStatusAll::Released, ProdStatusAll::Completed);

        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToCreatedStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToEstimatedStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToOperationsScheduledStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToJobScheduledStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToReleasedStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToReportedAsFinishedStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::ReportedFinished);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsStartedToEndedStatusChangedAllowed), ProdStatusAll::StartUp, ProdStatusAll::Completed);

        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToCreatedStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::Created);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToEstimatedStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::CostEstimated);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToOperationsScheduledStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::OperationScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToJobScheduledStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::JobScheduled);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToReleasedStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::Released);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToStartedStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::StartUp);
        this.updateStatusParameter(fieldNum(ProdProductionControlParametersEntity, IsReportedAsFinishedToEndedStatusChangedAllowed), ProdStatusAll::ReportedFinished, ProdStatusAll::Completed);
        
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateStatusParameter</Name>
				<Source><![CDATA[
    private void updateStatusParameter(FieldId _fieldNum, ProdStatusAll _fromStatus, ProdStatusAll _toStatus)
    {
        if (this.isFieldSet(_fieldNum))
        {
            ProdStatusParameters::updateParameter(InventDim::inventDimIdBlank(), _fromStatus, _toStatus, this.(_fieldNum));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (ret && _dataSourceCtx.name() == dataEntityDataSourceStr(ProdProductionControlParametersEntity, ProdParameters))
        {
            this.updateProdStatusParameters();
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        InventDimId inventDimIdBlank = InventDim::inventDimIdBlank();

        this.IsCreatedToEstimatedStatusChangedAllowed                       = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::CostEstimated);
        this.IsCreatedToOperationsScheduledStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::OperationScheduled);
        this.IsCreatedToJobScheduledStatusChangedAllowed                    = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::JobScheduled);
        this.IsCreatedToReleasedStatusChangedAllowed                        = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::Released);
        this.IsCreatedToStartedStatusChangedAllowed                         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::StartUp);
        this.IsCreatedToReportedAsFinishedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::ReportedFinished);
        this.IsCreatedToEndedStatusChangedAllowed                           = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Created, ProdStatusAll::Completed);
        
        this.IsEstimatedToCreatedStatusChangedAllowed                       = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::Created);
        this.IsEstimatedToOperationsScheduledStatusChangedAllowed            = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::OperationScheduled);
        this.IsEstimatedToJobScheduledStatusChangedAllowed                  = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::JobScheduled);
        this.IsEstimatedToReleasedStatusChangedAllowed                      = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::Released);
        this.IsEstimatedToStartedStatusChangedAllowed                       = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::StartUp);
        this.IsEstimatedToReportedAsFinishedStatusChangedAllowed            = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::ReportedFinished);
        this.IsEstimatedToEndedStatusChangedAllowed                         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::CostEstimated, ProdStatusAll::Completed);

        this.IsOperationsScheduledToCreatedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::Created);
        this.IsOperationsScheduledToEstimatedStatusChangedAllowed            = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::CostEstimated);
        this.IsOperationsScheduledToJobScheduledStatusChangedAllowed         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::JobScheduled);
        this.IsOperationsScheduledToReleasedStatusChangedAllowed             = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::Released);
        this.IsOperationsScheduledToStartedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::StartUp);
        this.IsOperationsScheduledToReportedAsFinishedStatusChangedAllowed   = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::ReportedFinished);
        this.IsOperationsScheduledToEndedStatusChangedAllowed                = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::OperationScheduled, ProdStatusAll::Completed);

        this.IsJobScheduledToCreatedStatusChangedAllowed                    = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::Created);
        this.IsJobScheduledToEstimatedStatusChangedAllowed                  = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::CostEstimated);
        this.IsJobScheduledToOperationsScheduledStatusChangedAllowed         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::OperationScheduled);
        this.IsJobScheduledToReleasedStatusChangedAllowed                   = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::Released);
        this.IsJobScheduledToStartedStatusChangedAllowed                    = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::StartUp);
        this.IsJobScheduledToReportedAsFinishedStatusChangedAllowed         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::ReportedFinished);
        this.IsJobScheduledToEndedStatusChangedAllowed                      = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::JobScheduled, ProdStatusAll::Completed);
        
        this.IsReleasedToCreatedStatusChangedAllowed                        = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::Created);
        this.IsReleasedToEstimatedStatusChangedAllowed                      = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::CostEstimated);
        this.IsReleasedToOperationsScheduledStatusChangedAllowed             = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::OperationScheduled);
        this.IsReleasedToJobScheduledStatusChangedAllowed                   = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::JobScheduled);
        this.IsReleasedToStartedStatusChangedAllowed                        = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::StartUp);
        this.IsReleasedToReportedAsFinishedStatusChangedAllowed             = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::ReportedFinished);
        this.IsReleasedToEndedStatusChangedAllowed                          = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::Released, ProdStatusAll::Completed);

        this.IsStartedToCreatedStatusChangedAllowed                         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::Created);
        this.IsStartedToEstimatedStatusChangedAllowed                       = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::CostEstimated);
        this.IsStartedToOperationsScheduledStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::OperationScheduled);
        this.IsStartedToJobScheduledStatusChangedAllowed                    = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::JobScheduled);
        this.IsStartedToReleasedStatusChangedAllowed                        = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::Released);
        this.IsStartedToReportedAsFinishedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::ReportedFinished);
        this.IsStartedToEndedStatusChangedAllowed                           = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::StartUp, ProdStatusAll::Completed);
    
        this.IsReportedAsFinishedToCreatedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::Created);
        this.IsReportedAsFinishedToReleasedStatusChangedAllowed             = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::Released);
        this.IsReportedAsFinishedToEstimatedStatusChangedAllowed            = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::CostEstimated);
        this.IsReportedAsFinishedToOperationsScheduledStatusChangedAllowed   = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::OperationScheduled);
        this.IsReportedAsFinishedToJobScheduledStatusChangedAllowed         = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::JobScheduled);
        this.IsReportedAsFinishedToStartedStatusChangedAllowed              = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::StartUp);
        this.IsReportedAsFinishedToEndedStatusChangedAllowed                = ProdStatusParameters::existFromTo(inventDimIdBlank, ProdStatusAll::ReportedFinished, ProdStatusAll::Completed);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret && (this.isFieldSet(fieldNum(ProdProductionControlParametersEntity, TimeCalculationDaysUnitSymbol))
                    || this.isFieldSet(fieldNum(ProdProductionControlParametersEntity, TimeCalculationHoursUnitSymbol))
                    || this.isFieldSet(fieldNum(ProdProductionControlParametersEntity, TimeCalculationMinutesUnitSymbol))
                    || this.isFieldSet(fieldNum(ProdProductionControlParametersEntity, TimeCalculationSecondsUnitSymbol))))
        {
            ret = ProdTimeUnitOfMeasure::validateTimeUnits(UnitOfMeasure::findBySymbol(this.TimeCalculationSecondsUnitSymbol), UnitOfMeasure::findBySymbol(this.TimeCalculationMinutesUnitSymbol), UnitOfMeasure::findBySymbol(this.TimeCalculationHoursUnitSymbol), UnitOfMeasure::findBySymbol(this.TimeCalculationDaysUnitSymbol));
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Prod</ConfigurationKey>
	<DeveloperDocumentation>@SCM:ProdProductionControlParametersEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>ProdParameters</FormRef>
	<Label>@SYS336277</Label>
	<Tags>Parameters</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>ProdProductionControlParametersStaging</DataManagementStagingTable>
	<EntityCategory>Parameters</EntityCategory>
	<Modules>ProductionControl</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Key</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>Key</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ParameterUsageLevel</Name>
			<DataField>ProdParamInventDimLookup</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillLastOperationEndingExecuteReportAsFinishedByDefault</Name>
			<DataField>AutoReportFinished</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionPickingListPostingAllowNegativeInventory</Name>
			<DataField>BOMJournalDrawNegative</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionPickingListPostingReduceToAvailableQuantity</Name>
			<DataField>BOMJournalReducePhysical</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPickingListJournalLineProposedQuantityOverrideConsumptionQuantityByDefault</Name>
			<DataField>InventControlProposal</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionCostRecalculationProductionOrderBundleSize</Name>
			<DataField>InventCostProdRecalcMultiBundleSize</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionOrderAutoReservationMode</Name>
			<DataField>ItemReservation</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportAsFinishedPostingAcceptQuantityErrorByDefault</Name>
			<DataField>JournalAcceptError</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsLeanCostingFullBatchParallelizationEnabled</Name>
			<DataField>LeanCostEnableFullBatchParallelization</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillLeanBatchProcessingSplitLedgerVoucherTransactions</Name>
			<DataField>LeanCostSplitLedgerVoucherTransactions</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillNonStandardRouteVersionBatchOrderUsageAlertUser</Name>
			<DataField>PmfAlertNonStdVersionUsage</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultBurdenRouteCostCategoryId</Name>
			<DataField>PmfBurdenCostCategory</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportAsFinishedPostingAutomaticallyPostPickingListByDefault</Name>
			<DataField>ProdAutoPickList</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillEstimationPurchaseOrderCreationGroupByBuyerGroup</Name>
			<DataField>ProdAutoPurchCollectPerBuyer</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillEstimationPurchaseOrderCreationGroupByPurchaseAgreement</Name>
			<DataField>ProdAutoPurchCollectPerPurchAgreement</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillEstimationPurchaseOrderCreationGroupByVendor</Name>
			<DataField>ProdAutoPurchCollectPerVendor</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillEstimationPurchaseOrderCreationFindPurchaseAgreements</Name>
			<DataField>ProdAutoPurchSearchPurchAgreement</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionOrderLedgerPostingRule</Name>
			<DataField>ProdPostingType</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionFlowQuantityUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProductionFlowDefaultQuantityUnit</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionFlowQuantityUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>FlowQuantityUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionFlowTimeUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProductionFlowDefaultTimeUnit</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionFlowTimeUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>FlowTimeUnitOfMeasure</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KanbanProductionInstructionDocumenAttachmentTypeCode</Name>
			<DataField>ProductionInstructionDocumentType</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionOrderWarehouseReleaseReservationRequirementRule</Name>
			<DataField>ProdWHSReleasePolicy</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionOrderProfitSettingMethod</Name>
			<DataField>ProfitSet</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillRouteCardPostingAutomaticallyPostPickingListByDefault</Name>
			<DataField>RouteAutoPickList</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillOnlyProductionEndingUpdateCostCalculation</Name>
			<DataField>SkipUpdateOfProdCalcTransWhenPosting</DataField>
			<DataSource>ProdParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationDaysUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS131891</Label>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>UnitOfMeasureDays</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationDaysUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>ProdTimeUnitOfMeasureDays</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationHoursUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS131893</Label>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>UnitOfMeasureHours</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationHoursUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>ProdTimeUnitOfMeasureHours</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationMinutesUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS24560</Label>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>UnitOfMeasureMinutes</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationMinutesUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>ProdTimeUnitOfMeasureMinutes</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationSecondsUnitSymbol</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SYS38933</Label>
			<Mandatory>No</Mandatory>
			<DataField>Symbol</DataField>
			<DataSource>UnitOfMeasureSeconds</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TimeCalculationSecondsUnit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>UnitOfMeasure</DataField>
			<DataSource>ProdTimeUnitOfMeasureSeconds</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCreatedToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsCreatedToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsEstimatedToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsEstimatedToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsOperationsScheduledToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsOperationsScheduledToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsJobScheduledToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsJobScheduledToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReleasedToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReleasedToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToReportedAsFinishedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToReportedAsFinishedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsStartedToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsStartedToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToCreatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToCreatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToEstimatedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToEstimatedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToOperationsScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToOperationsScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToJobScheduledStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToJobScheduledStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToReleasedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToReleasedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToStartedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToStartedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsReportedAsFinishedToEndedStatusChangedAllowed</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@SCM:IsReportedAsFinishedToEndedStatusChangedAllowed</Label>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseProductReceiptAutomaticBOMConsumptionRule</Name>
			<DataField>BOMAutoConsumpPurchReceive</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportAsFinishedAutomaticBOMConsumptionRule</Name>
			<DataField>BOMAutoConsumpRepFin</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionStartAutomaticBOMConsumptionRule</Name>
			<DataField>BOMAutoConsumpStUp</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultPickingListProductionJournalNameId</Name>
			<DataField>BOMJournalNameId</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSchedulingConsiderFiniteCapacityByDefault</Name>
			<DataField>CapLimit</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionEndingScrapMethod</Name>
			<DataField>CostingScrapMethod</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportedAsFinishedDeleteCapacityReservations</Name>
			<DataField>DeleteCapReservReportFinish</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportAsFinishedIncreaseRemainingQuantityWithErrorQuantity</Name>
			<DataField>IncreaseRemainQtyWithErrorQty</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultJobCardProductionJournalNameId</Name>
			<DataField>JobCardJournalNameId</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillRouteCardPostingUpdateCapacityPlan</Name>
			<DataField>JournalUpdateCapacity</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCapacityPlanningIncludePlannedOrders</Name>
			<DataField>LimitCapProdPO</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillCapacityPlanningIncludeProjectHourForecasts</Name>
			<DataField>LimitCapProdProject</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRouteCardHourCostCategoryMandatory</Name>
			<DataField>MandatoryCategoryHours</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRouteCardQuantityCostCategoryMandatory</Name>
			<DataField>MandatoryCategoryQty</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSchedulingConsiderFiniteMaterialsByDefault</Name>
			<DataField>MatLimited</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumJobSchedulingJobLeadTimeDays</Name>
			<DataField>MaxJobDays</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportAsFinishedUseEstimatedUnitCost</Name>
			<DataField>PhyValueUseCalcPrice</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionPostingExcludeTransactionType</Name>
			<DataField>PostExPostingType</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionPickingListPostInLedger</Name>
			<DataField>PostPickList</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillReportAsFinishedPostInLedger</Name>
			<DataField>PostReportedFinished</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultProductionJournalNameId</Name>
			<DataField>ProdJournalNameId</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionLineReleaseToWarehousePrinciple</Name>
			<DataField>ProductionLineRelease</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillSchedulingConsiderFinitePropertyByDefault</Name>
			<DataField>PropertyLimited</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillPurchaseProductReceiptDisplayRouteCardInformation</Name>
			<DataField>PurchReceiveShowInfo</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PurchaseProductReceiptAutomaticRouteConsumptionRule</Name>
			<DataField>RouteAutoConsumpPurchReceive</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportAsFinishedAutomaticRouteConsumptionRule</Name>
			<DataField>RouteAutoConsumpRepFin</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionStartAutomaticRouteConsumptionRule</Name>
			<DataField>RouteAutoConsumpStUp</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultRouteCardProductionJournalNameId</Name>
			<DataField>RouteJournalNameId</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AutomaticSchedulingMethod</Name>
			<DataField>SchedMethod</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductionEstimationCalculateEstimatedUnitCost</Name>
			<DataField>SpecifyCalc</DataField>
			<DataSource>ProdParametersDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsApprovedRouteEditingAllowed</Name>
			<DataField>BlockEditing</DataField>
			<DataSource>RouteParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsRouteApprovalRemovalAllowed</Name>
			<DataField>BlockRemoveApproval</DataField>
			<DataSource>RouteParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreRouteVersionValidDatesMandatory</Name>
			<DataField>MandatoryDate</DataField>
			<DataSource>RouteParameters</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreRouteNetworksEnabled</Name>
			<DataField>Network</DataField>
			<DataSource>RouteParameters</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>DataAreaId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>ProdParameters</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>ProdParameters</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdTimeUnitOfMeasureDays</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProdTimeUnitOfMeasure</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UnitOfMeasureDays</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>UnitOfMeasure</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TimeUnitType</Name>
								<Field>TimeUnitType</Field>
								<Status>Locked</Status>
								<Value>ProdTimeUnitType::Days</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ProdParameters</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdTimeUnitOfMeasureHours</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProdTimeUnitOfMeasure</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UnitOfMeasureHours</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>UnitOfMeasure</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TimeUnitType</Name>
								<Field>TimeUnitType</Field>
								<Status>Locked</Status>
								<Value>ProdTimeUnitType::Hours</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ProdParameters</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdTimeUnitOfMeasureMinutes</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProdTimeUnitOfMeasure</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UnitOfMeasureMinutes</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>UnitOfMeasure</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TimeUnitType</Name>
								<Field>TimeUnitType</Field>
								<Status>Locked</Status>
								<Value>ProdTimeUnitType::Minutes</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ProdParameters</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdTimeUnitOfMeasureSeconds</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProdTimeUnitOfMeasure</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>UnitOfMeasureSeconds</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>UnitOfMeasure</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinRelationName>UnitOfMeasure</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>TimeUnitType</Name>
								<Field>TimeUnitType</Field>
								<Status>Locked</Status>
								<Value>ProdTimeUnitType::Seconds</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>ProdParameters</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FlowQuantityUnitOfMeasure</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UnitOfMeasure</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>QuantityUnitOfMeasure</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>FlowTimeUnitOfMeasure</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UnitOfMeasure</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>TimeUnitOfMeasure</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProdParametersDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>ProdParametersDim</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>InventDimIdBlank</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>InventDimIdBlank</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>InventDimId</Field>
										<JoinDataSource>ProdParametersDim</JoinDataSource>
										<RelatedField>InventDimId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>ProdParameters</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteParameters</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RouteParameters</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>DataAreaId</Field>
								<JoinDataSource>ProdParameters</JoinDataSource>
								<RelatedField>DataAreaId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>