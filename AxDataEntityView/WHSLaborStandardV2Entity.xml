<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSLaborStandardV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSLaborStandardV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(WHSLaborStandardV2Entity, WHSLaborStandardsTable):
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSLaborStandardV2Entity, ProductQueryJson), fieldNum(WHSLaborStandardsTable, ItemQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSLaborStandardV2Entity, LocationQueryJson), fieldNum(WHSLaborStandardsTable, LocationQuery));
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.LaborStandardProductQuery)
        {
            QueryRun queryRun = new QueryRun(this.LaborStandardProductQuery);
            this.ProductQueryJson = new SysQuery(queryRun.query()).toJson();
        }

        if (this.LaborStandardWarehouseLocationQuery)
        {
            QueryRun queryRun = new QueryRun(this.LaborStandardWarehouseLocationQuery);
            this.LocationQueryJson = new SysQuery(queryRun.query()).toJson();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSLaborStandardV2Entity, WHSLaborStandardsTable))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Insert);

            this.validateQueryStructure(_dataSourceCtx, this.ProductQueryJson, fieldNum(WHSLaborStandardsTable, ItemQuery));
            this.validateQueryStructure(_dataSourceCtx, this.LocationQueryJson, fieldNum(WHSLaborStandardsTable, LocationQuery));
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSLaborStandardV2Entity, WHSLaborStandardsTable))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Update);

            this.validateQueryStructure(_dataSourceCtx, this.ProductQueryJson, fieldNum(WHSLaborStandardsTable, ItemQuery));
            this.validateQueryStructure(_dataSourceCtx, this.LocationQueryJson, fieldNum(WHSLaborStandardsTable, LocationQuery));
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    private void initializeQuery(DataEntityDataSourceRuntimeContext _dataSourceCtx, DataEntityDatabaseOperation _databaseOperation)
    {
        WHSLaborStandardsTable _laborStandardsTable = _dataSourceCtx.getBuffer();

        switch (_databaseOperation)
        {
            case DataEntityDatabaseOperation::Insert:
            case DataEntityDatabaseOperation::Update:
                if (this.ProductQueryJson)
                {
                    _laborStandardsTable.ItemQuery = this.initializeQueryFromJson(this.ProductQueryJson).pack();
                }

                if (this.LocationQueryJson)
                {
                    _laborStandardsTable.LocationQuery = this.initializeQueryFromJson(this.LocationQueryJson).pack();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQueryFromJson</Name>
				<Source><![CDATA[
    private QueryRun initializeQueryFromJson(str _jsonQuery)
    {
        Query deserializedQuery = SysQuery::newFromJson(_jsonQuery);
        return new QueryRun(deserializedQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQueryStructure</Name>
				<Source><![CDATA[
    private void validateQueryStructure(DataEntityDataSourceRuntimeContext _dataSourceCtx, str _queryJson, FieldId _fieldId)
    {
        if (_queryJson)
        {
            Query actualQuery = SysQuery::newFromJson(_queryJson);
            Query expectedQuery = this.defaultExpectedQuery(_fieldId);

            if (!WHSQueryInitializer::initializeDataSource(expectedQuery.dataSourceNo(1), actualQuery.dataSourceNo(1)))
            {
                _dataSourceCtx.throwValidateWriteFailed();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpectedQuery</Name>
				<Source><![CDATA[
    private Query defaultExpectedQuery(FieldId _fieldId)
    {
        WHSLaborStandardsTable laborStandardsTable;

        switch (_fieldId)
        {
            case fieldNum(WHSLaborStandardsTable, ItemQuery):
                return laborStandardsTable.defaultProductQueryRun().query();
            case fieldNum(WHSLaborStandardsTable, LocationQuery):
                return laborStandardsTable.defaultLocationQueryRun().query();
        }

        return null;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<DeveloperDocumentation>@WAX:DataEntity_WHSLaborStandardV2Entity_DeveloperDocumentation</DeveloperDocumentation>
	<FormRef>WHSLaborStandards</FormRef>
	<Label>@WAX:DataEntity_WHSLaborStandardV2Entity_Label</Label>
	<Tags>Warehouse setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSLaborStandardV2Staging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LaborStandardDescription</Name>
			<DataField>Description</DataField>
			<DataSource>WHSLaborStandardsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LaborStandardProductQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>ItemQuery</DataField>
			<DataSource>WHSLaborStandardsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LaborStandardId</Name>
			<DataField>LaborStandardsId</DataField>
			<DataSource>WHSLaborStandardsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LaborStandardWarehouseLocationQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>LocationQuery</DataField>
			<DataSource>WHSLaborStandardsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkOrderType</Name>
			<DataField>WorkTransType</DataField>
			<DataSource>WHSLaborStandardsTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductQueryJson</Name>
			<Label>@WAX:LaborStandardProductQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>LocationQueryJson</Name>
			<Label>@WAX:LaborStandardWarehouseLocationQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LaborStandardId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSLaborStandardsTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSLaborStandardsTable</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>