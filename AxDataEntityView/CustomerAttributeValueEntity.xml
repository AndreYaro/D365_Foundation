<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>CustomerAttributeValueEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class CustomerAttributeValueEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert entity data source.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source runtime context.</param>
    /// <returns>true if entity is inserted successfully; otherwise, false.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerAttributeValueEntity, EcoResAttributeValue))
        {
            EcoResAttributeValue ecoResAttributeValue = _dataSourceCtx.getBuffer();
            if (!ecoResAttributeValue.Value)
            {
                ecoResAttributeValue.Value = this.insertAttributeValue(_entityCtx.getEntityRecord(), ecoResAttributeValue);
            }
        }
      
        ret = super(_entityCtx, _dataSourceCtx);
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertAttributeValue</Name>
				<Source><![CDATA[
    /// <summary>
    ///  Insert an EcoResValue record.
    /// </summary>
    /// <param name = "entityRecord">Entity record</param>
    /// <param name = "ecoResAttributeValue">EcoResAttributeValue record</param>
    /// <returns>RecId of the newly-created EcoResValue record</returns>
    protected RefRecId insertAttributeValue(CustomerAttributeValueEntity _entityRecord, EcoResAttributeValue _ecoResAttributeValue)
    {
        EcoResTextValue ecoResTextValue;
        EcoResBooleanValue ecoResBooleanValue;
        EcoResIntValue ecoResIntValue;
        EcoResFloatValue ecoResFloatValue;
        EcoResDateTimeValue ecoResDateTimeValue;
        RefRecId attrValueRecId;

        AttributeDataType currentAttributeDataType = EcoResAttributeType::findByName(_entityRecord.AttributeTypeName).DataType;
        RetailEcoResAttributeDefinitionsView attributeDefinitionsView = RetailCustomerAttributeHelper::getAttributeDefinition(_ecoResAttributeValue);

        ttsbegin;

        switch (currentAttributeDataType)
        {
            case AttributeDataType::Text:
                ecoResTextValue.initValue();
                ecoResTextValue.TextValue = _entityRecord.TextValue;
                ecoResTextValue.insert();
                attrValueRecId = ecoResTextValue.RecId;
                break;

            case AttributeDataType::Integer:
                ecoResIntValue.initValue();
                ecoResIntValue.IntValue = _entityRecord.IntValue;
                ecoResIntValue.IntUnitOfMeasure = attributeDefinitionsView.UnitOfMeasureRecId;
                ecoResIntValue.insert();
                attrValueRecId = ecoResIntValue.RecId;
                break;
            case AttributeDataType::Decimal:
                ecoResFloatValue.initValue();
                ecoResFloatValue.FloatValue = _entityRecord.DecimalValue;
                ecoResFloatValue.FloatUnitOfMeasure = attributeDefinitionsView.UnitOfMeasureRecId;
                ecoResFloatValue.insert();
                attrValueRecId = ecoResFloatValue.RecId;
                break;
            case AttributeDataType::DateTime:
                ecoResDateTimeValue.initValue();
                ecoResDateTimeValue.DateTimeValue = _entityRecord.DateTimeValue;
                ecoResDateTimeValue.insert();
                attrValueRecId = ecoResDateTimeValue.RecId;
                break;
            case AttributeDataType::TrueFalse:
                ecoResBooleanValue.initValue();
                ecoResBooleanValue.BooleanValue = _entityRecord.BooleanValue;
                ecoResBooleanValue.insert();
                attrValueRecId = ecoResBooleanValue.RecId;
                break;
        }

        ttscommit;

        return attrValueRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>EcoResAttribute</c> buffer in a <c>DataEntityDataSourceRuntimeContext</c> given its AttributeName and AttributeTypeName.
    /// This method is meant to be called from implementing data entities when initializing a data source that references <c>EcoResAttribute</c>.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context</param>
    /// <param name = "_dataSourceCtx"><Data entity data source runtime context/param>
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        // Takes care of maintaining the reference to existing EcoResAttribute if the attribute is available in DB.
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(CustomerAttributeValueEntity, EcoResAttribute))
        {
            EcoResAttribute ecoResAttribute;
            CustomerAttributeValueEntity entityRecord = _entityCtx.getEntityRecord();
            RefRecId attributeTypeRecId = EcoResAttributeType::findByName(entityRecord.AttributeTypeName).RecId;

            ecoResAttribute = EcoResAttribute::findByName(entityRecord.AttributeName,attributeTypeRecId);

            if (ecoResAttribute.RecId)
            {
                // Use available EcoResAttribute record, so that duplicate attributes are not created.
                _dataSourceCtx.setBuffer(ecoResAttribute);

                if (_dataSourceCtx.getDatabaseOperation() != DataEntityDatabaseOperation::Delete)
                {
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateFieldValue</Name>
				<Source><![CDATA[
    public boolean validateFieldValue(FieldName _fieldName, int _arrayIndex = 1)
    {
        boolean ret = super(_fieldName, _arrayIndex);

        if (ret)
        {
            switch (_fieldName)
            {
                case fieldStr(EcoResTextValue, TextValue):
                    if (this.AttributeTypeName && CustomerAttributeValueValidateFlight::instance().isEnabled())
                    {
                        EcoResAttributeType ecoResAttributeType = EcoResAttributeType::findByName(this.AttributeTypeName);

                        if (ecoResAttributeType.IsEnumeration)
                        {
                            EcoResEnumerationAttributeTypeValue ecoResEnumerationAttributeTypeValue;
                            EcoResTextValue ecoResTextValue;

                            select firstonly RecId from ecoResEnumerationAttributeTypeValue
                                where ecoResEnumerationAttributeTypeValue.AttributeType == ecoResAttributeType.RecId
                                exists join ecoResTextValue
                                    where ecoResTextValue.TextValue == this.TextValue
                                        && ecoResTextValue.RecId == ecoResEnumerationAttributeTypeValue.Value;

                            if (!ecoResEnumerationAttributeTypeValue.RecId)
                            {
                                ret = checkFailed(strFmt("@SCM:CustomerAttributeValueValidate", this.TextValue));
                            }
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@Retail:CustomerInstanceValueEntityDevDoc</DeveloperDocumentation>
	<Label>@Retail:CustInstanceValueLabel</Label>
	<Tags>Customers</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>CustomerAttributeValueStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>AccountsReceivable</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CustomerAttributeValues</PublicCollectionName>
	<PublicEntityName>CustomerAttributeValue</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InstanceRelationType</Name>
			<DataField>InstanceRelationType</DataField>
			<DataSource>CustomerInstanceValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerDataAreaId</Name>
			<DataField>CustomerDataAreaId</DataField>
			<DataSource>CustomerInstanceValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountNum</Name>
			<DataField>AccountNum</DataField>
			<DataSource>CustomerInstanceValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeTypeName</Name>
			<DataField>Name</DataField>
			<DataSource>EcoResAttributeType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AttributeName</Name>
			<DataField>Name</DataField>
			<DataSource>EcoResAttribute</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BooleanValue</Name>
			<DataField>BooleanValue</DataField>
			<DataSource>EcoResValue_EcoResBooleanValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DateTimeValue</Name>
			<DataField>DateTimeValue</DataField>
			<DataSource>EcoResValue_EcoResDateTimeValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DecimalValue</Name>
			<DataField>FloatValue</DataField>
			<DataSource>EcoResValue_EcoResFloatValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntValue</Name>
			<DataField>IntValue</DataField>
			<DataSource>EcoResValue_EcoResIntValue</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TextValue</Name>
			<DataField>TextValue</DataField>
			<DataSource>EcoResValue_EcoResTextValue</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>AccountNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerDataAreaId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AttributeName</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustomerInstanceValue</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustomerInstanceValue</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResAttributeValue</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>EcoResAttributeValue</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResAttribute</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResAttribute</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>EcoResAttributeType</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResAttributeType</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<JoinDataSource>EcoResAttribute</JoinDataSource>
												<JoinRelationName>EcoResAttributeType</JoinRelationName>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>EcoResAttributeValue</JoinDataSource>
										<JoinRelationName>Attribute</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResValue</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>EcoResValue</Table>
								<DataSources />
								<DerivedDataSources>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResReferenceValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResReferenceValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResCurrencyValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResCurrencyValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResDateTimeValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResDateTimeValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResFloatValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResFloatValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResIntValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResIntValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResBooleanValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResBooleanValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
									<AxQuerySimpleDerivedDataSource>
										<Name>EcoResValue_EcoResTextValue</Name>
										<DynamicFields>Yes</DynamicFields>
										<Table>EcoResTextValue</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
									</AxQuerySimpleDerivedDataSource>
								</DerivedDataSources>
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<JoinDataSource>EcoResAttributeValue</JoinDataSource>
										<JoinRelationName>Value</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>CustomerInstanceValue</JoinDataSource>
								<JoinRelationName>InstanceValue</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>