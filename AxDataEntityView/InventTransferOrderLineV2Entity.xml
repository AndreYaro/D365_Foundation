<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTransferOrderLineV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTransferOrderLineV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDim):
                {
                    var inventTransferLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine)).getBuffer();

                    ret = inventTransferLine.inventDim();
                }
                break;

            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDimTo_RU):
                {
                    var inventTransferLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine)).getBuffer();

                    ret = inventTransferLine.inventDimTo_RU();
                }
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine):
                InventTransferLine inventTransferLine =  _dataSourceCtx.getBuffer();
                
                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    inventTransferLine.initFromInventTransferTable(InventTransferTable::find(this.TransferOrderNumber), true);
                }

                inventTransferLine.inventDimId = this.InventInventoryDimensionEntityFieldsMapping::getMergedInventDimId(inventTransferLine.inventdim());
                this.InventInventoryDimensionEntityFieldsMapping::initFromInventDim(inventTransferLine.inventDim());  

                if (_dataSourceCtx.getDatabaseOperation() == DataEntityDatabaseOperation::Insert)
                {
                    inventTransferLine.initFromInventTable(InventTable::find(this.ItemNumber), inventTransferLine.InventDimId);
                    inventTransferLine.setDeliveryDateControlType(inventTransferLine.InventDimId);
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        // TransferOrderNumber cannot be changed in the UI. The entity allows this field to be imported.
        this.skipDataSourceValidateField(fieldNum(InventTransferOrderLineV2Entity, TransferOrderNumber), true);

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDimTo_RU):

                InventDim inventDimRU =  _dataSourceCtx.getBuffer();
                InventTransferLine inventTransferLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine)).getBuffer();
                
                InventDim inventDim = inventTransferLine.inventDimReceive();
                if (EcoResDimensionGroupSetup::isInventoryDimensionActiveForItem(inventTransferLine.ItemId, fieldNum(InventDim, InventProfileId_RU)))
                {
                    inventDim.InventProfileId_RU = inventDimRU.InventProfileId_RU;
                }
        
                inventDimRU = InventDim::findOrCreate(inventDim);
                inventTransferLine.InventDimIdTo_RU = inventDimRU.inventDimId;

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuantityFields</Name>
				<Source><![CDATA[
    private void setQuantityFields(InventTransferLine _inventTransferLine)
    {
        InventMovement::setMinMaxQty(_inventTransferLine, true, true);

        InventMovement::bufferSetRemainQty(_inventTransferLine,InventMovSubType::None);
        InventMovement::bufferSetRemainQty(_inventTransferLine,InventMovSubType::TransferOrderTransitFrom);
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine):
                InventTransferLine inventTransferLine =  _dataSourceCtx.getBuffer();
                inventTransferLine.LineNum = inventTransferLine.LineNum ? inventTransferLine.LineNum : InventTransferLine::lastLineNum(this.TransferOrderNumber) + 1;

                if (!this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, TransferOrderPromisingMethod)))
                {
                    this.TransferOrderPromisingMethod = inventTransferLine.DeliveryDateControlType;
                }

                if (!this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, RequestedShippingDate))
                    && !this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, RequestedReceiptDate)))
                {
                    SalesCalcAvailableDlvDates::initDateFields(inventTransferLine);
                }

                this.setQuantityFields(inventTransferLine);
                this.InventTransferOrderEntityMap::setDeliveryDateControlFields(inventTransferLine, fieldNum(InventTransferLine, DeliveryDateControlType));
                break;

            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, WHSInventTransferLine):
                if (WHSInventEnabled::exist(this.ItemNumber))
                {
                    InventTransferLine whsInventTransferLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine)).getBuffer();
                    _dataSourceCtx.setBuffer(WHSInventTransferLine::find(whsInventTransferLine.RecId, true));
                    _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Update);
                    this.mapEntityToDataSource(_entityCtx, _dataSourceCtx);
                }
                break;
            
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDimTo_RU):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine):
                InventTransferLine inventTransferLine = _dataSourceCtx.getBuffer();

                this.setQuantityFields(inventTransferLine);
                
                this.validateLineStatus(inventTransferLine);

                this.InventTransferOrderEntityMap::setDeliveryDateControlFields(inventTransferLine, fieldNum(InventTransferLine, DeliveryDateControlType));
                break;

            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDim):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;

            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventDimTo_RU):
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>deleteEntityDataSource</Name>
				<Source><![CDATA[
    public boolean deleteEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventTransferOrderLineV2Entity, InventTransferLine):
                InventTransferLine inventTransferLine = _dataSourceCtx.getBuffer();

                this.validateLineStatus(inventTransferLine);
                break;
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateLineStatus</Name>
				<Source><![CDATA[
    private void validateLineStatus(InventTransferLine _inventTransferLine)
    {
        if (_inventTransferLine.RemainStatus == InventTransferRemainStatus::None
            || (_inventTransferLine.RemainStatus == InventTransferRemainStatus::Receiving
                && _inventTransferLine.QtyReceived))
        {
            throw error(strFmt("@SCM:InventTransferOrderHeaderEntityUpdateNotAllowed", InventTransferStatus::Received, InventTransferStatus::Created));
        }

        if (_inventTransferLine.RemainStatus == InventTransferRemainStatus::Receiving
            || (_inventTransferLine.RemainStatus == InventTransferRemainStatus::Shipping
                && _inventTransferLine.QtyShipped))
        {
            throw error(strFmt("@SCM:InventTransferOrderHeaderEntityUpdateNotAllowed", InventTransferStatus::Shipped, InventTransferStatus::Created));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateCatchWeightQuantities</Name>
				<Source><![CDATA[
    private boolean validateCatchWeightQuantities()
    {
        boolean ret = true;

        if (this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, TransferCatchWeightQuantity))
            && this.TransferCatchWeightQuantity != 0)
        {
            if (!PdsCatchWeightItem::find(this.ItemNumber))
            {
                ret = checkFailed(strFmt("@SCM:InventInventoryJournalCatchWeightQuantity", this.ItemNumber));
            }

            if (ret 
                && this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, TransferQuantity)))
            {
                if (this.TransferQuantity != 0)
                {
                    ret = PdsCatchWeight::validateQty(
                        this.ItemNumber,
                        this.TransferQuantity,
                        UnitOfMeasure::unitOfMeasureIdBySymbol(InventTableModule::find(this.ItemNumber, ModuleInventPurchSales::Invent).UnitId),
                        this.TransferCatchWeightQuantity);
                }
                else
                {
                    this.skipDataSourceValidateField(fieldNum(InventTransferOrderLineV2Entity, TransferQuantity), true);
                    this.fieldState(fieldNum(InventTransferOrderLineV2Entity, TransferQuantity), FieldState::NotSet);
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates field values.
    /// </summary>
    /// <param name = "_fieldId">The Id of the field that gets validated.</param>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(InventTransferOrderLineV2Entity, TransferCatchWeightQuantity):
                ret = ret && this.validateCatchWeightQuantities();
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        InventTransferStatus transferStatus = InventTransferTable::find(this.TransferOrderNumber).TransferStatus;

        if (transferStatus != InventTransferStatus::Created)
        {
            return checkFailed(strFmt("@SCM:InventTransferOrderHeaderEntityUpdateNotAllowed", transferStatus, InventTransferStatus::Created));
        }

        return super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ship</Name>
				<Source><![CDATA[
    /// <summary>
    /// Ships the transfer order line.
    /// </summary>
    [SysODataActionAttribute('Ship', true)]
    public void ship()
    {
        this.InventTransferOrderEntityMap::ship();
    }

]]></Source>
			</Method>
			<Method>
				<Name>receive</Name>
				<Source><![CDATA[
    /// <summary>
    /// Receives the transfer order line.
    /// </summary>
    [SysODataActionAttribute('Receive', true)]
    public void receive()
    {
        this.InventTransferOrderEntityMap::receive();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultInventDim</Name>
				<Source><![CDATA[
    private InventDim getDefaultInventDim()
    {
        var inventDim = InventDim::findOrCreateBlank();
        inventDim.initProductDimensionsFromInventTable(InventTable::find(this.ItemNumber));

        return inventDim;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductConfigurationId</Name>
				<Source><![CDATA[
    private void defaultProductConfigurationId()
    {
        this.ProductConfigurationId = this.ProductConfigurationId ? this.ProductConfigurationId : this.getDefaultInventDim().configId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductColorId</Name>
				<Source><![CDATA[
    private void defaultProductColorId()
    {
        this.ProductColorId = this.ProductColorId ? this.ProductColorId : this.getDefaultInventDim().InventColorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductSizeId</Name>
				<Source><![CDATA[
    private void defaultProductSizeId()
    {
        this.ProductSizeId = this.ProductSizeId ? this.ProductSizeId : this.getDefaultInventDim().InventSizeId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductStyleId</Name>
				<Source><![CDATA[
    private void defaultProductStyleId()
    {
        this.ProductStyleId = this.ProductStyleId ? this.ProductStyleId : this.getDefaultInventDim().InventStyleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultProductVersionId</Name>
				<Source><![CDATA[
    private void defaultProductVersionId()
    {
        this.ProductVersionId = this.ProductVersionId ? this.ProductVersionId : this.getDefaultInventDim().InventVersionId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultTransferQuantity</Name>
				<Source><![CDATA[
    private void defaultTransferQuantity()
    {
        if (PdsGlobal::pdsIsCWItem(this.ItemNumber)
            && this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, TransferCatchWeightQuantity)))
        {
            this.TransferQuantity = PdsCatchWeight::inventQty(
                        this.ItemNumber,
                        this.TransferCatchWeightQuantity,
                        this.InventoryUnitSymbol);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultShipNowQuantity</Name>
				<Source><![CDATA[
    private void defaultShipNowQuantity()
    {
        if (PdsGlobal::pdsIsCWItem(this.ItemNumber)
            && this.isFieldSet(fieldNum(InventTransferOrderLineV2Entity, ShipNowCatchWeightQuantity)))
        {
            this.ShipNowQuantity = PdsCatchWeight::inventQty(
                        this.ItemNumber,
                        this.ShipNowCatchWeightQuantity,
                        this.InventoryUnitSymbol);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(InventTransferOrderLineV2Entity, ProductConfigurationId):
                this.defaultProductConfigurationId();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, ProductColorId):
                this.defaultProductColorId();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, ProductSizeId):
                this.defaultProductSizeId();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, ProductStyleId):
                this.defaultProductStyleId();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, ProductVersionId):
                this.defaultProductVersionId();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, TransferQuantity):
                this.defaultTransferQuantity();
                break;

            case fieldnum(InventTransferOrderLineV2Entity, ShipNowQuantity):
                this.defaultShipNowQuantity();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [
                [fieldnum(InventTransferOrderLineV2Entity, ProductConfigurationId), [fieldnum(InventTransferOrderLineV2Entity, ItemNumber)]],
                [fieldnum(InventTransferOrderLineV2Entity, ProductColorId), [fieldnum(InventTransferOrderLineV2Entity, ItemNumber)]],
                [fieldnum(InventTransferOrderLineV2Entity, ProductSizeId), [fieldnum(InventTransferOrderLineV2Entity, ItemNumber)]],
                [fieldnum(InventTransferOrderLineV2Entity, ProductStyleId), [fieldnum(InventTransferOrderLineV2Entity, ItemNumber)]],
                [fieldnum(InventTransferOrderLineV2Entity, ProductVersionId), [fieldnum(InventTransferOrderLineV2Entity, ItemNumber)]],
                [fieldnum(InventTransferOrderLineV2Entity, TransferQuantity), [fieldnum(InventTransferOrderLineV2Entity, TransferCatchWeightQuantity)]],
                [fieldnum(InventTransferOrderLineV2Entity, ShipNowQuantity), [fieldnum(InventTransferOrderLineV2Entity, ShipNowCatchWeightQuantity)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCTQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the default change tracking query.
    /// </summary>
    /// <returns>The default change tracking query.</returns>
    public static Query defaultCTQuery()
    {
        Query transferOrderLineQuery = new Query();

        var transferOrderLineDS = transferOrderLineQuery.addDataSource(tableNum(InventTransferLine));

        var ecoResCategoryDS = transferOrderLineDS.addDataSource(tableNum(EcoResCategory));
        ecoResCategoryDS.addLink(fieldNum(InventTransferLine, IntrastatCommodity), fieldNum(EcoResCategory, RecId));
        ecoResCategoryDS.joinMode(JoinMode::OuterJoin);
        ecoResCategoryDS.fetchMode(QueryFetchMode::One2One);

        var defaultDimensionShipDS = transferOrderLineDS.addDataSource(tableNum(DimensionAttributeValueSet));
        defaultDimensionShipDS.addLink(fieldNum(InventTransferLine, DimensionDefaultShipFrom), fieldNum(DimensionAttributeValueSet, RecId));
        defaultDimensionShipDS.joinMode(JoinMode::OuterJoin);
        defaultDimensionShipDS.fetchMode(QueryFetchMode::One2One);

        var defaultDimensionReceiveDS = transferOrderLineDS.addDataSource(tableNum(DimensionAttributeValueSet));
        defaultDimensionReceiveDS.addLink(fieldNum(InventTransferLine, DimensionDefaultShipTo), fieldNum(DimensionAttributeValueSet, RecId));
        defaultDimensionReceiveDS.joinMode(JoinMode::OuterJoin);
        defaultDimensionReceiveDS.fetchMode(QueryFetchMode::One2One);

        // InventDim should not change.

        var whsInventTransferLineDS = transferOrderLineDS.addDataSource(tableNum(WHSInventTransferLine));
        whsInventTransferLineDS.joinMode(JoinMode::OuterJoin);
        whsInventTransferLineDS.addLink(fieldNum(InventTransferLine, RecId), fieldNum(WHSInventTransferLine, InventTransferLine));

        return transferOrderLineQuery;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>InventTransferOrders</ConfigurationKey>
	<DeveloperDocumentation>@SCM:DevDocInventTransferOrderLineV2Entity</DeveloperDocumentation>
	<FormRef>InventTransferOrder</FormRef>
	<Label>@SCM:InventTransferOrderLineV2EntityLabel</Label>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventTransferOrderLineV2Staging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>TransferOrderLinesV2</PublicCollectionName>
	<PublicEntityName>TransferOrderLineV2</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>TransferOrderNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LineNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductVersionId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemBatchNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferCatchWeightQuantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedShippingDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RequestedReceiptDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TransferOrderPromisingMethod</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemInventProfile</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemInventProfileTo</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatCostAmount</Name>
			<DataField>AmountValue</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ATPDelayedDemandOffsetDays</Name>
			<DataField>ATPApplyDemandTimeFence</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ATPDelayedSupplyOffsetDays</Name>
			<DataField>ATPApplySupplyTimeFence</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ATPBackwardDemandTimeFenceDays</Name>
			<DataField>ATPBackwardDemandTimeFence</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ATPBackwardSupplyTimeFenceDays</Name>
			<DataField>ATPBackwardSupplyTimeFence</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsATPIncludingPlannedOrders</Name>
			<DataField>ATPInclPlannedOrders</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ATPTimeFenceDays</Name>
			<DataField>ATPTimeFence</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsAutomaticallyReserved</Name>
			<DataField>AutoReservation</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderPromisingMethod</Name>
			<DataField>DeliveryDateControlType</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatSpecialMovementCode</Name>
			<DataField>IntrastatSpecMove_CZ</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingInventoryLotId</Name>
			<DataField>InventTransId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingInventoryLotId</Name>
			<DataField>InventTransIdReceive</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ScrapInventoryLotId</Name>
			<DataField>InventTransIdScrap</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingTransitInventoryLotId</Name>
			<DataField>InventTransIdTransitFrom</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingTransitInventoryLotId</Name>
			<DataField>InventTransIdTransitTo</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginCountryRegionId</Name>
			<DataField>OrigCountryRegionId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginCountyId</Name>
			<DataField>OrigCountyId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OriginStateId</Name>
			<DataField>OrigStateId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AllowedOverdeliveryPercentage</Name>
			<DataField>OverDeliveryPct</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivedCatchWeightQuantity</Name>
			<DataField>PdsCWQtyReceived</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingReceivedCatchWeightQuantity</Name>
			<DataField>PdsCWQtyRemainReceive</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingShippedCatchWeightQuantity</Name>
			<DataField>PdsCWQtyRemainShip</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ScrappedCatchWeightQuantity</Name>
			<DataField>PdsCWQtyScrapped</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippedCatchWeightQuantity</Name>
			<DataField>PdsCWQtyShipped</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferCatchWeightQuantity</Name>
			<DataField>PdsCWQtyTransfer</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideFEFODateControl</Name>
			<DataField>PdsOverrideFEFO</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatPortId</Name>
			<DataField>Port</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivedQuantity</Name>
			<DataField>QtyReceived</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingReceivedQuantity</Name>
			<DataField>QtyRemainReceive</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RemainingShippedQuantity</Name>
			<DataField>QtyRemainShip</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ScrappedQuantity</Name>
			<DataField>QtyScrapped</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippedQuantity</Name>
			<DataField>QtyShipped</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferQuantity</Name>
			<DataField>QtyTransfer</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedReceiptDate</Name>
			<DataField>ReceiveDate</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineStatus</Name>
			<DataField>RemainStatus</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequestedShippingDate</Name>
			<DataField>ShipDate</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatStatisticalValue</Name>
			<DataField>StatisticalValue</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatStatisticsProcedureCode</Name>
			<DataField>StatProcId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatTransactionCode</Name>
			<DataField>TransactionCode</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TransferOrderNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>TransferId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatTransportModeCode</Name>
			<DataField>Transport</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AllowedUnderdeliveryPercentage</Name>
			<DataField>UnderDeliveryPct</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryUnitSymbol</Name>
			<DataField>UnitId</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DimensionDefaultShipFrom</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingLedgerDimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DimensionDefaultShipTo</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IntrastatCommodityCode</Name>
			<DataField>Code</DataField>
			<DataSource>EcoResCategory_IntrastatCommodity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingLedgerDimensionDisplayValue</Name>
			<Label>@SCM:InventTransferOrderLineEntityShippingLedgerDimensionDisplayValue</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDefaultShipFromDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceivingLedgerDimensionDisplayValue</Name>
			<Label>@SCM:InventTransferOrderLineEntityReceivingLedgerDimensionDisplayValue</Label>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDefaultShipToDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBatchNumber</Name>
			<DataField>inventBatchId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingWarehouseId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InventLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingSiteId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InventSiteId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OrderedInventoryStatusId</Name>
			<DataField>InventStatusId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVersionId</Name>
			<DataField>InventVersionId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShippingWarehouseLocationId</Name>
			<DataField>wMSLocationId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillProductReceivingCrossDockProducts</Name>
			<DataField>CrossDock</DataField>
			<DataSource>WHSInventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceiveNowQuantity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>QtyReceiveNow</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipNowQuantity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>QtyShipNow</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReceiveNowCatchWeightQuantity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsCWQtyReceiveNow</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ShipNowCatchWeightQuantity</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PdsCWQtyShipNow</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemSerialNumber</Name>
			<DataField>inventSerialId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OutboundShipmentPolicy</Name>
			<DataField>OutboundShipmentPolicy</DataField>
			<DataSource>WHSInventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PlanningPriority</Name>
			<FeatureClass>ReqPriorityBasedPlanningFeature</FeatureClass>
			<DataField>PlanningPriority</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCodeShipment</Name>
			<DataField>TaxGroupShipment</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxItemGroupCodeShipment</Name>
			<DataField>TaxItemGroupShipment</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideSalesTaxShipment</Name>
			<DataField>OverrideSalesTaxShipment</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCodeReceipt</Name>
			<DataField>TaxGroupReceipt</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxItemGroupCodeReceipt</Name>
			<DataField>TaxItemGroupReceipt</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>OverrideSalesTaxReceipt</Name>
			<DataField>OverrideSalesTaxReceipt</DataField>
			<DataSource>InventTransferLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemInventProfile</Name>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemInventProfileTo</Name>
			<Label>@GLS113726</Label>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventDimTo_RU</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>TransferOrderNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
					<MapFieldTo>ItemBatchNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension1</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension10</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension11</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension12</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension2</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension3</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension4</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension5</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension6</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension7</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension8</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventDimension9</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
					<MapFieldTo>ShippingWarehouseId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
					<MapFieldTo>ItemInventProfile</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
					<MapFieldTo>ItemSerialNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
					<MapFieldTo>ShippingSiteId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
					<MapFieldTo>OrderedInventoryStatusId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventVersionId</MapField>
					<MapFieldTo>ProductVersionId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
					<MapFieldTo>ShippingWarehouseLocationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventTransferOrderEntityMap</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>LineNumber</MapField>
					<MapFieldTo>LineNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransferOrderNumber</MapField>
					<MapFieldTo>TransferOrderNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>TransferOrderPromisingMethod</MapField>
					<MapFieldTo>TransferOrderPromisingMethod</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDefaultShipFromDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DimensionDefaultShipFrom</Name>
					<Field>ShippingLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDefaultShipToDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>DimensionDefaultShipTo</Name>
					<Field>ReceivingLedgerDimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>InventTransferOrderHeader</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>InventTransferOrderHeaderEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>TransferOrderNumber</Field>
					<RelatedField>TransferOrderNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTransferLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventTransferLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory_IntrastatCommodity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources />
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>IntrastatCommodity</Name>
								<JoinRelationName>EcoResCategory</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDefaultShipFromDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDefaultShipFromDAVS</Name>
								<Field>DimensionDefaultShipFrom</Field>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDefaultShipToDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDefaultShipToDAVS</Name>
								<Field>DimensionDefaultShipTo</Field>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WHSInventTransferLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WHSInventTransferLine</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<JoinRelationName>InventTransferLine</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDimTo_RU</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>InventDimIdTo_RU</Field>
								<JoinDataSource>InventTransferLine</JoinDataSource>
								<RelatedField>inventDimId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>