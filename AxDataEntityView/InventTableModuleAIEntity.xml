<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventTableModuleAIEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventTableModuleAIEntity extends common
{
}

]]></Declaration>
		<Methods>
			<Method>
				<Name>getSalesPrice</Name>
				<Source><![CDATA[
    [SysODataActionAttribute('GetSalesPrice', true)]
    public Price getSalesPrice()
    {
        Price   salesPrice;
        Qty     qty = this.PriceQuantity == 0 ? 1 : this.PriceQuantity;

        if (this.Price == 0 || this.Unit == '')
        {
            return this.Price / qty;
        }

        InventTableModuleAIEntity inventTableModuleAIEntityInvent = InventTableModuleAIEntity::find(this.ItemNumber, ModuleInventPurchSales::Invent);

        if (inventTableModuleAIEntityInvent.Unit == ''
            || inventTableModuleAIEntityInvent.Unit == this.Unit)
        {
            salesPrice = this.Price / qty;
        }
        else
        {
            UnitOfMeasure fromUnit = UnitOfMeasure::findBySymbol(inventTableModuleAIEntityInvent.Unit);
            UnitOfMeasure toUnit = UnitOfMeasure::findBySymbol(this.Unit);

            salesPrice = UnitOfMeasureConverter::convert(this.Price, fromUnit.RecId, toUnit.RecId, NoYes::No) / qty;
        }

        return salesPrice;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static InventTableModuleAIEntity find(
        ItemId                  _itemNumber,
        ModuleInventPurchSales  _module)
    {
        InventTableModuleAIEntity entity;

        select firstonly entity
            where entity.ItemNumber == _itemNumber
                && entity.ModuleType == _module;

        return entity;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<Label>@SCM:InventTableModuleAI</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<IsPublic>Yes</IsPublic>
	<IsReadOnly>Yes</IsReadOnly>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>InventoryTableModulesForAI</PublicCollectionName>
	<PublicEntityName>InventTableModuleAIEntity</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ModuleType</Name>
			<DataField>ModuleType</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Price</Name>
			<DataField>Price</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceQuantity</Name>
			<DataField>PriceUnit</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Unit</Name>
			<DataField>UnitId</DataField>
			<DataSource>InventTableModule</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ModuleType</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReleasedProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ReleasedProductAIEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReleasedProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>ReleasedProduct</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ReleasedProductAIEntity_ItemNumber</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventTableModule</Name>
				<DynamicFields>Yes</DynamicFields>
				<IsReadOnly>Yes</IsReadOnly>
				<Table>InventTableModule</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>