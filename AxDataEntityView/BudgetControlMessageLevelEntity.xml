<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlMessageLevelEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlMessageLevelEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setEnityOfficeMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the Office menu options for the entity when the <c>setEntityOfficeMenuOptionDelegate</c> delegate in the <c>BudgetControlConfigurationEntityHelper</c> class is called.
    /// </summary>
    /// <param name="_entityOfficeMenuOption">
    /// The <c>BudgetControlConfigurationEntityOfficeMenuOption</c> instance for the entity.
    /// </param>
    [SubscribesTo(classstr(BudgetControlConfigurationEntityHelper), delegatestr(BudgetControlConfigurationEntityHelper, setEntityOfficeMenuOptionDelegate))]
    public static void setEnityOfficeMenuOption(BudgetControlConfigurationEntityOfficeMenuOption _entityOfficeMenuOption)
    {
        if (_entityOfficeMenuOption.parmEntityName() == tableStr(BudgetControlMessageLevelEntity))
        {
            _entityOfficeMenuOption.parmLegalEntityIdFieldName(fieldStr(BudgetControlMessageLevelEntity, LegalEntityId));
            _entityOfficeMenuOption.parmStatusFieldName(fieldStr(BudgetControlMessageLevelEntity, Status));
            _entityOfficeMenuOption.parmDisplayFieldGroupName(tableFieldGroupStr(BudgetControlMessageLevelEntity, AutoReport));
            _entityOfficeMenuOption.parmDisplayName("@Budget:ControlMessageLevelEntityOfficeExportDisplayValue");
            _entityOfficeMenuOption.parmDataAreaIdFieldName(fieldStr(BudgetControlMessageLevelEntity, DataAreaId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSelectedSql</Name>
				<Source><![CDATA[
    private static str getSelectedSql()
    {
        return SysComputedColumn::returnLiteral(enum2int(NoYes::Yes));
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.upsertRecord();

        // The entity keys and the company context field may not be correct for the changes or current context.
        // Set the entity instance to the saved data.
        BudgetControlMessageLevelEntity entity;

        // Set the current company context to match the primary company context set on the entity.
        changecompany(this.LegalEntityId)
        {
            // Select the entity record based on the key.
            select * from entity
                where entity.Status == BudgetControlConfigurationStatus::Draft
                    && entity.UserGroupId == this.UserGroupId;
        }

        this.data(entity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        BudgetControlUserGroupSuppressWarnings userGroupSuppressWarnings = this.getDraftUserGroupSuppressWarnings();

        if (userGroupSuppressWarnings.validateDelete())
        {
            BudgetControlConfigurationManager::setUserGroupSuppressWarnings(
                userGroupSuppressWarnings.BudgetControlConfiguration,
                this.UserGroupId,
                NoYes::No);
        }
        else
        {
            // The validateDelete method will log errors.  Throw an exception to stop the delete.
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertRecord</Name>
				<Source><![CDATA[
    public void upsertRecord()
    {
        BudgetControlConfiguration draftConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetControlConfigurationManager::setUserGroupSuppressWarnings(
            draftConfiguration.RecId,
            this.UserGroupId,
            this.Selected);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDraftUserGroupSuppressWarnings</Name>
				<Source><![CDATA[
    private BudgetControlUserGroupSuppressWarnings getDraftUserGroupSuppressWarnings()
    {
        BudgetControlConfiguration draftConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId);

        BudgetControlUserGroupSuppressWarnings userGroupSuppressWarnings;

        select firstonly * from userGroupSuppressWarnings
            where userGroupSuppressWarnings.BudgetControlConfiguration == draftConfiguration.RecId
                && userGroupSuppressWarnings.UserGroupInfo == this.UserGroupId;

        return userGroupSuppressWarnings;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetControlMessageLevelEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlConfiguration</FormRef>
	<Label>@Budget:BudgetControlMessageLevel</Label>
	<Tags>Budget control setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BudgetControlMessageLevelStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>Budgeting</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BudgetControlMessageLevels</PublicCollectionName>
	<PublicEntityName>BudgetControlMessageLevel</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UserGroupName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Selected</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<DataField>LegalEntityId</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Status</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>Status</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseBy</DataField>
			<DataSource>BudgetControlConfigurationEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupId</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@Budget:UserGroup</Label>
			<DataField>id</DataField>
			<DataSource>UserGroupInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UserGroupName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>name</DataField>
			<DataSource>UserGroupInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>Selected</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Budget:ControlConfigurationMessageLevelSelected</Label>
			<ComputedFieldMethod>getSelectedSql</ComputedFieldMethod>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Status</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UserGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>BudgetControlConfigurationEntity</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>BudgetControlConfigurationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurations</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlMessageLevelConfiguration</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlConfigurationEntity_LegalEntityId</Name>
					<Field>LegalEntityId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>BudgetControlConfigurationEntity_Status</Name>
					<Field>Status</Field>
					<RelatedField>Status</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SystemUserGroupEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SystemUserGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlMessageLevelEntity_RelatedRole_SystemUserGroupEntity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetControlMessageLevelEntity_Role_SystemUserGroupEntity</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SystemUserEntity_UserID</Name>
					<Field>UserGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetControlUserGroupSuppressWarnings</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetControlUserGroupSuppressWarnings</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>UserGroupInfo</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>UserGroupInfo</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>UserGroupInfo</Field>
								<JoinDataSource>BudgetControlUserGroupSuppressWarnings</JoinDataSource>
								<RelatedField>id</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BudgetControlConfigurationEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>BudgetControlConfigurationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>BudgetControlConfiguration</Field>
								<JoinDataSource>BudgetControlUserGroupSuppressWarnings</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>