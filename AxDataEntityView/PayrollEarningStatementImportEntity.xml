<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PayrollEarningStatementImportEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PayrollEarningStatementImportEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultRow</Name>
				<Source><![CDATA[
    public void defaultRow()
    {
        this.defaultValues();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultValues</Name>
				<Source><![CDATA[
    private void defaultValues()
    {
        this.GenerationSource = PayrollGenerationSource::Imported;
        this.PaymentStatus = PayrollPaymentProcessingStatus::None;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(PayrollEarningStatementImportEntity, AccountingDistributionTemplate):
                RecId legalEntityRecId = CompanyInfo::findDataArea(this.DataAreaId).RecId;
                ret = AccountingDistributionTemplate::findByNameAndLegalEntity(this.AccountingDistributionTemplate, legalEntityRecId);
                break;

            case dataEntityDataSourceStr(PayrollEarningStatementImportEntity, WorkerTaxRegion):
                ret = this.findPayrollWorkerTaxRegion(_entityCtx);
                break;

            case dataEntityDataSourceStr(PayrollEarningStatementImportEntity, PayrollTaxRegion):
                PayrollWorkerTaxRegion  workerTaxRegion = this.findPayrollWorkerTaxRegion(_entityCtx);

                ret = PayrollTaxRegion::find(workerTaxRegion.TaxRegion);
                break;

            case dataEntityDataSourceStr(PayrollEarningStatementImportEntity, LogisticsLocation):
                PayrollTaxRegion taxRegion = PayrollTaxRegion::find(this.findPayrollWorkerTaxRegion(_entityCtx).TaxRegion);
                ret = LogisticsLocation::find(taxRegion.LogisticsLocation);
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PayrollEarningStatementImportEntity, PayrollEarningStatementLine))
        {
            PayrollEarningStatementImportEntityHelper earningStatementImportHelper = new PayrollEarningStatementImportEntityHelper();

            PayrollEarningStatementLine statementLine = _dataSourceCtx.getBuffer();

            HcmWorker worker = HcmWorker::findByPersonnelNumber(this.PersonnelNumber);
            HcmPosition position = HcmPosition::findByPosition(this.PositionId);
            PayrollPayPeriod payPeriod = earningStatementImportHelper.findPayPeriod(position.RecId, this.EarningsDate);

            earningStatementImportHelper.handleEarningStatementHeader(statementLine, worker.RecId, payPeriod.RecId);

            if (!earningStatementImportHelper.validateEarningStatementLine(statementLine,
                                                                        worker.RecId,
                                                                        position.RecId,
                                                                        payPeriod,
                                                                        this.WorkerTaxRegion,
                                                                        this.WorkerCompensationBenefitId,
                                                                        this.EarningCodeId,
                                                                        this.ProjectId,
                                                                        this.ProjectCategoryId))
            {
                throw Exception::ViewDataSourceValidation;
            }

            earningStatementImportHelper.initializeEarningStatementLine(statementLine,
                                                                    worker.RecId,
                                                                    position.RecId,
                                                                    this.EarningCodeId,
                                                                    this.WorkerTaxRegion);

            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::Insert);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(PayrollEarningStatementImportEntity, PayrollEarningStatementLine))
        {
            PayrollEarningStatementImportEntityHelper earningStatementImportHelper = new PayrollEarningStatementImportEntityHelper();
            PayrollEarningStatementLine statementLine = _dataSourceCtx.getBuffer();

            earningStatementImportHelper.setDefaultValues(statementLine);
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(PayrollEarningStatementImportEntity, Quantity):

                    if (this.Quantity <= 0)
                    {
                        ret = checkFailed("@PayrollProcessing:QuantityMustGreaterThanZero");
                    }
                    break;

                case fieldNum(PayrollEarningStatementImportEntity, EarningsDate):

                    HcmPosition position = HcmPosition::findByPosition(this.PositionId);
                    PayrollEarningStatementImportEntityHelper earningStatementImportHelper = new PayrollEarningStatementImportEntityHelper();
                    PayrollPayPeriod payPeriod = earningStatementImportHelper.findPayPeriod(position.RecId, this.EarningsDate);

                    if (payPeriod.RecId == 0)
                    {
                        ret = checkFailed("@PayrollProcessing:PayPeriodNotFoundForPoistionAndEarningDate");
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findPayrollWorkerTaxRegion</Name>
				<Source><![CDATA[
    private PayrollWorkerTaxRegion findPayrollWorkerTaxRegion(DataEntityRuntimeContext _entityCtx)
    {
        PayrollWorkerTaxRegion workerTaxRegion;

        if (this.WorkerTaxRegion == "")
        {
            PayrollEarningStatementLine statementLine = _entityCtx.getRuntimeContextByName(dataEntityDataSourceStr(PayrollEarningStatementImportEntity, PayrollEarningStatementLine)).getBuffer();

            workerTaxRegion = PayrollWorkerTaxRegion::find(statementLine.WorkerTaxRegion);
        }
        else
        {
            HcmWorker worker = HcmWorker::findByPersonnelNumber(this.PersonnelNumber);

            workerTaxRegion = PayrollEarningStatementImportEntityHelper::resolveWorkerTaxRegion(this.WorkerTaxRegion, worker.RecId);
        }

        return workerTaxRegion;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>PayrollAdministration</ConfigurationKey>
	<Label>@PayrollProcessing:PayrollEarningStatementImport</Label>
	<Tags>Earnings</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>PayrollEarningStatementImportStaging</DataManagementStagingTable>
	<EntityCategory>Transaction</EntityCategory>
	<Modules>Payroll</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EarningsDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EarningCodeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EarningRate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Quantity</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PositionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EarningsDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EarningCodeId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDate</Name>
			<DataField>AccountingDate</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountingDistributionTemplate</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>AccountingDistributionTemplate</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Dimension</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultDimension</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<DataField>DisplayValue</DataField>
			<DataSource>DimensionDAVS</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EarningCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>EarningCode</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EarningCodeId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>EarningCode</DataField>
			<DataSource>EarningCode</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EarningsDate</Name>
			<DataField>EarningDate</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>EarningRate</Name>
			<DataField>EarningRate</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GenerationSource</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>GenerationSource</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineModified</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>isEdited</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsManual</Name>
			<DataField>IsManual</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Note</Name>
			<DataField>Note</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PaymentStatus</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PaymentStatus</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PayStatementEarningLine</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PayStatementEarningLine</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Position</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Position</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PositionId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PositionId</DataField>
			<DataSource>Position</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Project</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjId</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectId</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProjId</DataField>
			<DataSource>ProjTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategory</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjCategoryId</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectCategoryId</Name>
			<Mandatory>No</Mandatory>
			<DataField>CategoryId</DataField>
			<DataSource>ProjCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectActivityNumber</Name>
			<DataField>ProjActivityNumber</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLineProperty</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ProjLinePropertyId</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProjectLinePropertyId</Name>
			<Mandatory>No</Mandatory>
			<DataField>LinePropertyId</DataField>
			<DataSource>ProjLineProperty</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>Quantity</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerCompensationBenefit</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerCompensationBenefit</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>GeneralLiabilityInsurance</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerGLIBenefit</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TaxRegion</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkerTaxRegion</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkPeriod</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>WorkPeriod</DataField>
			<DataSource>PayrollEarningStatementLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerCompensationBenefitId</Name>
			<Mandatory>No</Mandatory>
			<DataField>BenefitId</DataField>
			<DataSource>WorkerCompensationBenefit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerGeneralLiabilityInsuranceBenefitId</Name>
			<Mandatory>No</Mandatory>
			<DataField>BenefitId</DataField>
			<DataSource>WorkerGeneralLiabilityInsuranceBenefit</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerTaxRegion</Name>
			<DataField>Description</DataField>
			<DataSource>LogisticsLocation</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PersonnelNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>PersonnelNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EarningsDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>PositionId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkerTaxRegion</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EarningCodeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Quantity</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>EarningRate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>DimensionDisplayValue</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AccountingDistributionTemplate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkerGeneralLiabilityInsuranceBenefitId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>WorkerCompensationBenefitId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectCategoryId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectActivityNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProjectLinePropertyId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Note</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>DimensionDimensionSet</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionSetEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>Dimension</Name>
					<Field>Dimension</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>PayrollEarningCodeEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>PayrollEarningCodeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>EarningCode</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>EarningCodeId</Field>
					<RelatedField>EarningCode</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>HcmPositionV2Entity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmPositionV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Position</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>PositionId</Field>
					<RelatedField>PositionId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>HcmBenefitEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmBenefitEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WokerCompensationBenefit</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>WorkerCompensationBenefitId</Field>
					<RelatedField>BenefitId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjectCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProjectCategories</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectCategoryId</Field>
					<RelatedField>Category</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Project</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjectEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Project</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>ProjectEntity_ProjectID</Name>
					<Field>ProjectId</Field>
					<RelatedField>ProjectID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>ProjProjectLinePropertyEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>ProjProjectLinePropertyEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProjectLineProperty</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>EarningStatementLine</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProjectLinePropertyId</Field>
					<RelatedField>LinePropertyId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>PayrollEarningStatementLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>PayrollEarningStatementLine</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EarningCode</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PayrollEarningCode</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EarningCode</Name>
								<JoinRelationName>PayrollEarningCode</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>Position</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmPosition</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>Position</Name>
								<JoinRelationName>HcmPosition</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WorkerCompensationBenefit</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmBenefit</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WorkerCompensationBenefit</Name>
								<JoinRelationName>WorkerCompensationBenefit</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WorkerGeneralLiabilityInsuranceBenefit</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmBenefit</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WorkerGeneralLiabilityInsuranceBenefit</Name>
								<JoinRelationName>HcmBenefit</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WorkerTaxRegion</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>PayrollWorkerTaxRegion</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>PayrollTaxRegion</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>PayrollTaxRegion</Table>
								<DataSources>
									<AxQuerySimpleEmbeddedDataSource>
										<Name>LogisticsLocation</Name>
										<DynamicFields>Yes</DynamicFields>
										<IsReadOnly>Yes</IsReadOnly>
										<Table>LogisticsLocation</Table>
										<DataSources />
										<DerivedDataSources />
										<Fields />
										<Ranges />
										<Relations>
											<AxQuerySimpleDataSourceRelation>
												<Name>QueryDataSourceRelation1</Name>
												<Field>LogisticsLocation</Field>
												<JoinDataSource>PayrollTaxRegion</JoinDataSource>
												<RelatedField>RecId</RelatedField>
											</AxQuerySimpleDataSourceRelation>
										</Relations>
									</AxQuerySimpleEmbeddedDataSource>
								</DataSources>
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>TaxRegion_FK</Name>
										<JoinRelationName>PayrollTaxRegion</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmWorker</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmWorker</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Worker</Field>
										<JoinDataSource>WorkerTaxRegion</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>WorkerTaxRegion</Name>
								<JoinRelationName>PayrollWorkerTaxRegion</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionDAVS</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionSetEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionDAVS</Name>
								<Field>DefaultDimension</Field>
								<JoinDataSource>PayrollEarningStatementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>AccountingDistributionTemplate</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>AccountingDistributionTemplate</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>AccountingDistributionTemplate</Field>
								<JoinDataSource>PayrollEarningStatementLine</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjLineProperty</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjLineProperty</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjLinePropertyId</Field>
								<JoinDataSource>PayrollEarningStatementLine</JoinDataSource>
								<RelatedField>LinePropertyId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ProjId</Field>
								<JoinDataSource>PayrollEarningStatementLine</JoinDataSource>
								<RelatedField>ProjId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>ProjCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>ProjCategory</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1Copy1</Name>
								<Field>ProjCategoryId</Field>
								<JoinDataSource>PayrollEarningStatementLine</JoinDataSource>
								<RelatedField>CategoryId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>