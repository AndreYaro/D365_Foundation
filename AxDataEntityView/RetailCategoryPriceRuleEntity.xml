<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailCategoryPriceRuleEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailCategoryPriceRuleEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Prepares the record to save to the RetailCategoryPriceGroup table, based on which field is populated in the entity record.
    /// </summary>
    /// <param name = "_entityCtx">The entity context.</param>
    /// <param name = "_dataSourceCtx">The data source context.</param>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        // The only datasource that we need to worry about is the RetailCategoryPriceRule datasource. The rest are populated by the framework.
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailCategoryPriceRuleEntity, RetailCategoryPriceRule))
        {
            RetailCategoryPriceRule categoryPriceRule = _dataSourceCtx.getBuffer();

            if (this.CustomerAccount && this.CustomerPriceGroupCode)
            {
                throw Global::error("@Retail:CustomerPriceGroupAndCustomerAccountFieldCannotBeProvidedTogether");
            }
            else if (this.CustomerAccount)
            {
                // The customer account field has been set, therefore the record should be of type 'Table'.
                categoryPriceRule.AccountCode = TableGroupAll::Table;
                categoryPriceRule.AccountRelation = this.CustomerAccount;
            }
            else if (this.CustomerPriceGroupCode)
            {
                // The customer price group code field has been set, therefore the record should be of type 'Group'.
                categoryPriceRule.AccountCode = TableGroupAll::GroupId;
                categoryPriceRule.AccountRelation = this.CustomerPriceGroupCode;
            }
            else
            {
                // If both of the fields have not been set, then the record type should 'All'.
                categoryPriceRule.AccountCode = TableGroupAll::All;
            }

            _dataSourceCtx.setBuffer(categoryPriceRule);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerAccount</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the customer account field on the entity.
    /// </summary>
    /// <returns>The computed column definition.</returns>
    public static str customerAccount()
    {
        TableName viewName = tableStr(RetailCategoryPriceRuleEntity);

        return
            SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(viewName, tableStr(RetailCategoryPriceRule), fieldStr(RetailCategoryPriceRule, AccountCode)),
                    SysComputedColumn::comparisonLiteral(TableGroupAll::Table)
                ),
                SysComputedColumn::returnField(viewName, tableStr(RetailCategoryPriceRule), fieldStr(RetailCategoryPriceRule, AccountRelation)),
                SysComputedColumn::returnLiteral('')
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerPriceGroupCode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the customer price group code field on the entity.
    /// </summary>
    /// <returns>The computed column definition.</returns>
    public static str customerPriceGroupCode()
    {
        TableName viewName = tableStr(RetailCategoryPriceRuleEntity);

        return
            SysComputedColumn::if(
                SysComputedColumn::equalExpression(
                    SysComputedColumn::comparisonField(viewName, tableStr(RetailCategoryPriceRule), fieldStr(RetailCategoryPriceRule, AccountCode)),
                    SysComputedColumn::comparisonLiteral(TableGroupAll::GroupId)
                ),
                SysComputedColumn::returnField(viewName, tableStr(RetailCategoryPriceRule), fieldStr(RetailCategoryPriceRule, AccountRelation)),
                SysComputedColumn::returnLiteral('')
            );
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@Retail:CategoryPriceRuleEntity</Label>
	<Tags>Category</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailCategoryPriceRuleStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Merchandising</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailCategoryPriceRules</PublicCollectionName>
	<PublicEntityName>RetailCategoryPriceRule</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountCode</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>AccountRelation</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AmountPercent</Name>
			<DataField>AmountPercent</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceBasis</Name>
			<DataField>PriceBasis</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PriceSetupType</Name>
			<DataField>PriceSetupType</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SmartRoundingGroup</Name>
			<DataField>SmartRoundingGroup</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitId</Name>
			<DataField>UnitId</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VendorAccount</Name>
			<DataField>VendAccount</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineNumber</Name>
			<DataField>LineNum</DataField>
			<DataSource>RetailCategoryPriceRule</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategory</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryHierarchyName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>EcoResCategoryHierarchy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccount</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>CustomerAccount</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerPriceGroupCode</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Retail:CustomerPriceGroupCode</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>CustomerPriceGroupCode</ComputedFieldMethod>
			<ExtendedDataType>CustPriceGroup</ExtendedDataType>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LineNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailCategoryPriceRule</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailCategoryPriceRule</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResCategory</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResCategory</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResCategoryHierarchy</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResCategoryHierarchy</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>EcoResCategoryHierarchy</Name>
										<JoinRelationName>BelongsTo</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources>
							<AxQuerySimpleDerivedDataSource>
								<Name>PCClass</Name>
								<DynamicFields>Yes</DynamicFields>
								<Table>PCClass</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
							</AxQuerySimpleDerivedDataSource>
						</DerivedDataSources>
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>EcoResCategory</Name>
								<JoinRelationName>EcoResCategory</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>