<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SalesCustomerProductDescriptionEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SalesCustomerProductDescriptionEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, InventDim):
                // Set the correct inventDimId on the table buffer.
                InventDim inventDim = this.InventInventoryDimensionEntityFieldsMapping::resolveInventDim();
                _dataSourceCtx.setBuffer(inventDim);

                this.InventDimId = inventDim.inventDimId;
                break;

            default:
                super(_entityCtx, _dataSourceCtx);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, InventDim):
                // Initialise handles the mapping too.
                break;

            default:
                super(_entityCtx, _dataSourceCtx);
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, InventDim):
                // InventDim is handled by mapped map.
                return true;

            default:
                return super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, InventDim):
                // InventDim is handled by mapped map.
                return true;

            default:
                return super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerGroupComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(SalesCustomerProductDescriptionEntity),
            dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, CustVendExternalItem),
            fieldStr(CustVendExternalItem, ModuleType),
            ModuleInventPurchSalesVendCustGroup::CustGroup,
            fieldStr(CustVendExternalItem, CustVendRelation), '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerNumberComputedColumnDefinition()
    {
        return SysComputedColumn::codeDependentRelation(
            tableStr(SalesCustomerProductDescriptionEntity),
            dataEntityDataSourceStr(SalesCustomerProductDescriptionEntity, CustVendExternalItem),
            fieldStr(CustVendExternalItem, ModuleType),
            ModuleInventPurchSalesVendCustGroup::Cust,
            fieldStr(CustVendExternalItem, CustVendRelation), '');
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultModuleType</Name>
				<Source><![CDATA[
    private void defaultModuleType()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(SalesCustomerProductDescriptionEntity, CustomerAccountNumber)))
            {
                this.ModuleType = ModuleInventPurchSalesVendCustGroup::Cust;
            }
        }
        else if (this.ProductDescriptionCustomerGroupId)
        {
            if (this.isFieldSet(fieldNum(SalesCustomerProductDescriptionEntity, ProductDescriptionCustomerGroupId)))
            {
                this.ModuleType = ModuleInventPurchSalesVendCustGroup::CustGroup;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultCustVendRelation</Name>
				<Source><![CDATA[
    private void defaultCustVendRelation()
    {
        if (this.CustomerAccountNumber)
        {
            if (this.isFieldSet(fieldNum(SalesCustomerProductDescriptionEntity, CustomerAccountNumber)))
            {
                this.CustVendRelation = this.CustomerAccountNumber;
            }
        }
        else if (this.ProductDescriptionCustomerGroupId)
        {
            if (this.isFieldSet(fieldNum(SalesCustomerProductDescriptionEntity, ProductDescriptionCustomerGroupId)))
            {
                this.CustVendRelation = this.ProductDescriptionCustomerGroupId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(SalesCustomerProductDescriptionEntity, ModuleType),
                [fieldNum(SalesCustomerProductDescriptionEntity, CustomerAccountNumber), fieldNum(SalesCustomerProductDescriptionEntity, ProductDescriptionCustomerGroupId)]],
            [fieldNum(SalesCustomerProductDescriptionEntity, CustVendRelation),
                [fieldNum(SalesCustomerProductDescriptionEntity, CustomerAccountNumber), fieldNum(SalesCustomerProductDescriptionEntity, ProductDescriptionCustomerGroupId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(SalesCustomerProductDescriptionEntity, ModuleType):
                this.defaultModuleType();
                break;
            case fieldNum(SalesCustomerProductDescriptionEntity, CustVendRelation):
                this.defaultCustVendRelation();
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            // Validate that at least 1 customer relation has been provided:
            if (!this.CustomerAccountNumber && !this.ProductDescriptionCustomerGroupId)
            {
                ret = checkFailed('@SCM:EntityCustomerOrItemDescriptionGroupRequiredError');
            }

            // Validate that only 1 customer relation has been provided:
            if (this.CustomerAccountNumber && this.ProductDescriptionCustomerGroupId)
            {
                ret = checkFailed('@SCM:EntityCustomerAndItemDescriptionGroupSpecifiedError');
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret = super(_fieldIdToCheck);

        switch (_fieldIdToCheck)
        {
            case fieldNum(SalesCustomerProductDescriptionEntity, ModuleType):
                if (this.ModuleType != ModuleInventPurchSalesVendCustGroup::Cust
                    && this.ModuleType != ModuleInventPurchSalesVendCustGroup::CustGroup)
                {
                    ret = checkFailed('@SCM:EntityExternalProductDescriptionModuleError');
                }
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:SalesCustomerProductDescriptionEntityDevDoc</DeveloperDocumentation>
	<FormRef>CustExternalItemAction</FormRef>
	<IsObsolete>Yes</IsObsolete>
	<Label>@SCM:SalesCustomerProductDescriptionEntityLabel</Label>
	<Tags>External item setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>SalesCustomerProductDescriptionStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>SalesAndMarketing</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>CustomerProductDescriptions</PublicCollectionName>
	<PublicEntityName>CustomerProductDescription</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ItemNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductColorId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductConfigurationId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductSizeId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductStyleId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerAccountNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ProductDescriptionCustomerGroupId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerProductNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerProductDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerABCCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CustomerABCCodeNote</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemId</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductColorId</Name>
			<DataField>InventColorId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>configId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductSizeId</Name>
			<DataField>InventSizeId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductStyleId</Name>
			<DataField>InventStyleId</DataField>
			<DataSource>InventDim</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductDescriptionCustomerGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustVendItemGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerProductNumber</Name>
			<DataField>ExternalItemId</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerProductDescription</Name>
			<DataField>ExternalItemTxt</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerABCCode</Name>
			<DataField>ABCCategory</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustomerABCCodeNote</Name>
			<DataField>Description</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustVendRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustVendRelation</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ModuleType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ModuleType</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDimId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventDimId</DataField>
			<DataSource>CustVendExternalItem</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductColorId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductConfigurationId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductSizeId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductStyleId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductDescriptionCustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventInventoryDimensionEntityFieldsMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>configId</MapField>
					<MapFieldTo>ProductConfigurationId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventBatchId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventColorId</MapField>
					<MapFieldTo>ProductColorId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventGTDId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventOwnerId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventProfileId_RU</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>inventSerialId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSiteId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventSizeId</MapField>
					<MapFieldTo>ProductSizeId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStatusId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>InventStyleId</MapField>
					<MapFieldTo>ProductStyleId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>LicensePlateId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSLocationId</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>wMSPalletId</MapField>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReleasedProduct</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReleasedProduct</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerProductDescriptions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>EcoResReleasedProductV2Entity_ItemNumber</Name>
					<Field>ItemNumber</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Customer</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>CustCustomerV3Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>Customer</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerProductDescriptions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>CustCustomerV3Entity_CustomerAccount</Name>
					<Field>CustomerAccountNumber</Field>
					<RelatedField>CustomerAccount</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ProductDescriptionCustomerGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SalesProductDescriptionCustomerGroupEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ProductDescriptionCustomerGroup</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>CustomerProductDescriptions</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>PurchProductDescriptionVendorGroupEntity_GroupId</Name>
					<Field>ProductDescriptionCustomerGroupId</Field>
					<RelatedField>GroupId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>ProductDescriptionVendorGroupKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>CustVendExternalItem</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>CustVendExternalItem</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>InventDim</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>InventDim</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinRelationName>InventDim</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>ModuleType</Name>
						<Field>ModuleType</Field>
						<Value>Cust, CustGroup</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>