<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailItemLabelsToPrintEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailItemLabelsToPrintEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Insert entity datasource.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source data entity runtime context.</param>
    /// <returns>An boolean.</returns>
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        // Set the variantId for RetailInventItemLabel entity data source.
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailItemLabelsToPrintEntity, RetailInventItemLabel))
        {
            RetailInventItemLabel inventItemLabel = _dataSourceCtx.getBuffer();
            inventItemLabel.VariantId = this.getVariantId();

            _dataSourceCtx.setBuffer(inventItemLabel);
        }

        ret = super(_entityCtx, _dataSourceCtx);

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getVariantId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the VariantId field from inventory dimension combination if any item dimension exists.
    /// </summary>
    /// <returns>RetailVariantId from <c>InventDimCombination</c></returns>
    private RetailVariantId getVariantId()
    {
        InventDimCombination inventDimCombination;
        InventDim inventDim;

        // Find the Inventory dimension combination if any item dimension exists.
        if (this.Color || this.Size || this.Style || this.ConfigId)
        {
            select firstonly RetailVariantId from inventDimCombination
                where inventDimCombination.DistinctProductVariant != 0
                    && inventDimCombination.ItemId == this.ItemId
                    join inventDim
                        where inventDim.inventDimId == inventDimCombination.InventDimId
                            && inventDim.InventColorId == this.Color
                            && inventDim.InventSizeId == this.Size
                            && inventDim.InventStyleId == this.Style
                            && inventDim.configId == this.ConfigId;

            if (!inventDimCombination.RetailVariantId)
            {
                throw error(strFmt("@Retail:InvalidVariant", this.Color, this.Size, this.Style, this.ConfigId));
            }
        }

        return inventDimCombination.RetailVariantId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the Color, Size, Style, ConfigId fields.
    /// </summary>
    public void postLoad()
    {
        if (this.VariantId)
        {
            InventDimCombination inventDimCombination;
            InventDim inventDim;

            changecompany(this.DataAreaId)
            {
                select firstonly InventColorId, InventSizeId, InventStyleId, configId from inventDim
                    exists join inventDimCombination
                          where inventDimCombination.InventDimId  == inventDim.inventDimId
                             && inventDimCombination.ItemId == this.ItemId
                             && inventDimCombination.RetailVariantId == this.VariantId;
            }

            this.Color = inventDim.InventColorId;
            this.Size = inventDim.InventSizeId;
            this.Style = inventDim.InventStyleId;
            this.ConfigId = inventDim.configId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update entity datasource.
    /// </summary>
    /// <param name = "_entityCtx">Data entity runtime context.</param>
    /// <param name = "_dataSourceCtx">Data source data entity runtime context.</param>
    /// <returns></returns>
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        boolean ret;

        // Set the variantId for RetailInventItemLabel entity data source.
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailItemLabelsToPrintEntity, RetailInventItemLabel))
        {
            RetailInventItemLabel inventItemLabel = _dataSourceCtx.getBuffer();
            inventItemLabel.VariantId = this.getVariantId();

            _dataSourceCtx.setBuffer(inventItemLabel);
        }
    
        ret = super(_entityCtx, _dataSourceCtx);
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<FormRef>RetailInventItemLabel</FormRef>
	<Label>@Retail:ItemLabelsToPrintEntity</Label>
	<Tags>Labels</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailItemLabelsToPrintEntityStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>BrickAndMortarStore</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>RetailItemLabelsToPrint</PublicCollectionName>
	<PublicEntityName>RetailItemLabelToPrintEntity</PublicEntityName>
	<SupportsSetBasedSqlOperations>Yes</SupportsSetBasedSqlOperations>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>StoreNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UnitOfMeasureSymbol</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidOnDate</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LabelType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VariantId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Size</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Color</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Style</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ConfigId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ComparisonPriceOnShelfLabel</Name>
			<DataField>CompLabelPrice</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionNumber</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventDim</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemBarCode</Name>
			<DataField>ItemBarCode</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemId</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ItemId</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LabelType</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>LabelType</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryKey</Name>
			<DataField>PrimaryKey</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Printed</Name>
			<DataField>Printed</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Quantity</Name>
			<DataField>Qty</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportName</Name>
			<DataField>ReportName</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>StoreNumber</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>StoreNumber</DataField>
			<DataSource>RetailStoreTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Text1</Name>
			<DataField>Text1</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Text2</Name>
			<DataField>Text2</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Type</Name>
			<DataField>Type</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UnitOfMeasureSymbol</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>UnitID</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ValidOnDate</Name>
			<Mandatory>Yes</Mandatory>
			<DataField>ValidOnDate</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VariantId</Name>
			<DataField>VariantId</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Size</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemSizeName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Color</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemColorName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>Style</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemStyleName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ConfigId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<ExtendedDataType>EcoResItemConfigurationName</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Price</Name>
			<DataField>Price</DataField>
			<DataSource>RetailInventItemLabel</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>ItemId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>StoreNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>UnitOfMeasureSymbol</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ValidOnDate</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LabelType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>VariantId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>EcoResReleasedProductV2Entity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResReleasedProductV2Entity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ItemId</Field>
					<RelatedField>ItemNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailInventItemLabel</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailInventItemLabel</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailStoreTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RetailStoreTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>RetailStoreTable</Name>
								<JoinRelationName>RetailStoreTable</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>Printed</Name>
						<Field>Printed</Field>
						<Status>Locked</Status>
						<Value>0</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>