<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RouteOperationPropertiesResourceRequirementEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RouteOperationPropertiesResourceRequirementEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super(_fieldId);

        switch (_fieldId)
        {
            case fieldnum(RouteOperationPropertiesResourceRequirementEntity, RelationshipType):
                if (this.RequiredCapabilityName)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::Capability;
                }
                else if (this.RequiredCertificateType)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::Certificate;
                }
                else if (this.RequiredCourseId)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::Course;
                }
                else if (this.RequiredTitleId)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::PersonTitle;
                }
                else if (this.RequiredOperationsResourceGroupId)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::ResourceGroup;
                }
                else if (this.RequiredOperationsResourceId)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::Resource;
                }
                else if (this.RequiredSkillId)
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::Skill;
                }
                else
                {
                    this.RelationshipType = WrkCtrActivityRequirementType::ResourceType;
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return [[fieldnum(RouteOperationPropertiesResourceRequirementEntity, RelationshipType),
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredCapabilityName)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredCertificateType)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredCourseId)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredTitleId)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredOperationsResourceGroupId)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredOperationsResourceId)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredOperationsResourceType)],
                    [fieldnum(RouteOperationPropertiesResourceRequirementEntity, RequiredSkillId)]]
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        DataEntityDatabaseOperation dbOperation = _dataSourceCtx.getDatabaseOperation();
        if (dbOperation == DataEntityDatabaseOperation::Insert
            || dbOperation ==DataEntityDatabaseOperation::Update)
        {
            switch (_dataSourceCtx.name())
            {
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityCapabilityRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::Capability);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityCertificateRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::Certificate);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityCourseRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::Course);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityPersonTitleRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::PersonTitle);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityResourceGroupRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::ResourceGroup);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityResourceRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::Resource);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityResourceTypeRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::ResourceType);
                    break;
                case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivitySkillRequirement):
                    this.setDatabaseOperationByRequirementType(_dataSourceCtx, WrkCtrActivityRequirementType::Skill);
                    break;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityRequirement):
                WrkCtrActivityRequirement activityRequirement = _dataSourceCtx.getBuffer();
                RouteOpr routeOpr = this.getRouteOprForEntity();

                if(!routeOpr)
                {
                    checkFailed("@SCM:ExistingRouteOprNotFound");
                }

                activityRequirement.ActivityRequirementSet = routeOpr.activityRequirementSet().RecId;

                break;

            case dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, WrkCtrActivityResourceGroupRequirement):
                WrkCtrActivityResourceGroupRequirement activityResourceGroupRequirement = _dataSourceCtx.getBuffer();
                WrkCtrResourceGroup resourceGroup = WrkCtrResourceGroup::findWrkCtrId(this.RequiredOperationsResourceGroupId);

                if(!resourceGroup)
                {
                    checkFailed(strFmt("@SCM:TableRecordValidation", tableStr(WrkCtrActivityResourceGroupRequirement)));
                }

                activityResourceGroupRequirement.ResourceGroup = resourceGroup.RecId;
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RouteOperationPropertiesResourceRequirementEntity, HcmRatingLevel))
        {
            HcmSkill skill = HcmSkill::findBySkill(this.RequiredSkillId);
            ret = HcmRatingLevel::findByRatingLevelRatingModel(this.RequiredSkillLevel, skill.RatingModel);
        }
        else
        {
            ret = super(_entityCtx, _dataSourceCtx);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret = super();

        if (ret)
        {
            int numberOfRequirements = this.getNumberOfSpecifiedRequirements();
            if (numberOfRequirements == 0)
            {
                ret = checkFailed("@SCM:NoResourceRequirementSpecified");
            }
            else if (numberOfRequirements > 1)
            {
                ret = checkFailed("@SCM:CannotSpecifyMultipleResourceRequirements");
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfSpecifiedRequirements</Name>
				<Source><![CDATA[
    private int getNumberOfSpecifiedRequirements()
    {
        int numberOfRequirements = 0;
        if (this.RequiredCapabilityName)
        {
            numberOfRequirements++;
        }

        if (this.RequiredCertificateType)
        {
            numberOfRequirements++;
        }

        if (this.RequiredCourseId)
        {
            numberOfRequirements++;
        }

        if (this.RequiredTitleId)
        {
            numberOfRequirements++;
        }

        if (this.RequiredOperationsResourceGroupId)
        {
            numberOfRequirements++;
        }

        if (this.RequiredOperationsResourceId)
        {
            numberOfRequirements++;
        }

        if ((this.RequiredOperationsResourceType != WrkCtrType::Vendor                      ||
             this.isResourceTypeVendorAndFieldSet())                                        ||
             this.RequiredOperationsResourceType)
        {
            numberOfRequirements++;
        }

        if (this.RequiredSkillId)
        {
            numberOfRequirements++;
        }

        return numberOfRequirements;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDatabaseOperationByRequirementType</Name>
				<Source><![CDATA[
    private void setDatabaseOperationByRequirementType(DataEntityDataSourceRuntimeContext _dataSourceCtx, WrkCtrActivityRequirementType _requirementType)
    {
        if (this.RelationshipType != _requirementType)
        {
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isResourceTypeVendorAndFieldSet</Name>
				<Source><![CDATA[
    private boolean isResourceTypeVendorAndFieldSet()
    {
        return this.RequiredOperationsResourceType == WrkCtrType::Vendor            &&
               this.RelationshipType == WrkCtrActivityRequirementType::ResourceType &&
               this.isFieldSet(fieldNum(RouteOperationPropertiesResourceRequirementEntity, RequiredOperationsResourceType));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getRouteOprForEntity</Name>
				<Source><![CDATA[
    private RouteOpr getRouteOprForEntity()
    {
        RouteAll routeCode = RouteAll::All;
        ItemCode itemCode = TableGroupAll::All;
        ItemRelationInvent itemRelation;

        if (this.RouteId)
        {
            routeCode = RouteAll::Route;
        }

        if (this.ItemNumber)
        {
            ItemCode = TableGroupAll::Table;
            itemRelation = this.ItemNumber;
        }
        else if (this.ProductGroupId)
        {
            ItemCode = TableGroupAll::GroupId;
            itemRelation = this.ProductGroupId;
        }

        RouteOpr routeOpr = RouteOpr::find(
                    this.RouteOperationId,
                    itemCode,
                    itemRelation,
                    this.ProductConfigurationId,
                    routeCode,
                    this.RouteId,
                    this.ProductionSiteId);

        return routeOpr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WrkCtr</ConfigurationKey>
	<DeveloperDocumentation>@SCM:RouteOperationPropertiesResourceRequirementEntity</DeveloperDocumentation>
	<FormRef>Routeopr</FormRef>
	<Label>@SCM:RouteOperationPropertiesResourceRequirement</Label>
	<Tags>Route</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RouteOperationPropertiesResourceRequirementStaging</DataManagementStagingTable>
	<Modules>ProductionControl</Modules>
	<PrimaryCompanyContext>RouteOperationDataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RelationshipType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>RelationshipType</DataField>
			<DataSource>WrkCtrActivityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Capability</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Capability</DataField>
			<DataSource>WrkCtrActivityCapabilityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillJobSchedulingUseRequirement</Name>
			<DataField>UsedForJobScheduling</DataField>
			<DataSource>WrkCtrActivityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillOperationSchedulingUseRequirement</Name>
			<DataField>UsedForOperationScheduling</DataField>
			<DataSource>WrkCtrActivityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemNumber</Name>
			<DataField>ItemNumber</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductGroupId</Name>
			<DataField>ProductGroupId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RouteId</Name>
			<DataField>RouteId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductionSiteId</Name>
			<DataField>ProductionSiteId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductConfigurationId</Name>
			<DataField>ProductConfigurationId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RouteOperationId</Name>
			<DataField>OperationId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredCapabilityName</Name>
			<Mandatory>No</Mandatory>
			<DataField>Name</DataField>
			<DataSource>WrkCtrCapability</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumRequiredCapabilityLevel</Name>
			<DataField>MinimumLevelNeeded</DataField>
			<DataSource>WrkCtrActivityCapabilityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredCertificateType</Name>
			<Mandatory>No</Mandatory>
			<DataField>CertificateTypeId</DataField>
			<DataSource>HcmCertificateType</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredCourseId</Name>
			<Mandatory>No</Mandatory>
			<DataField>HRMCourseId</DataField>
			<DataSource>WrkCtrActivityCourseRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredTitleId</Name>
			<Mandatory>No</Mandatory>
			<DataField>TitleId</DataField>
			<DataSource>HCMTitle</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredOperationsResourceGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<DataField>WrkCtrId</DataField>
			<DataSource>WrkCtrResourceGroup</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredOperationsResourceId</Name>
			<Mandatory>No</Mandatory>
			<DataField>WrkCtrId</DataField>
			<DataSource>WrkCtrActivityResourceRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredOperationsResourceType</Name>
			<DataField>ResourceType</DataField>
			<DataSource>WrkCtrActivityResourceTypeRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredSkillId</Name>
			<Mandatory>No</Mandatory>
			<DataField>SkillId</DataField>
			<DataSource>HcmSkill</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RequiredSkillLevel</Name>
			<Mandatory>No</Mandatory>
			<DataField>RatingLevelId</DataField>
			<DataSource>HcmRatingLevel</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RecordId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>RecId</DataField>
			<DataSource>WrkCtrActivityRequirement</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RouteOperationDataAreaId</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>DataAreaId</DataField>
			<DataSource>RouteOperationPropertiesEntity</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>RecordId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WrkCtrActivityRequirement</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WrkCtrActivityRequirement</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RouteOperationPropertiesEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>RouteOperationPropertiesEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>ActivityRequirementSet</Field>
								<JoinDataSource>WrkCtrActivityRequirement</JoinDataSource>
								<RelatedField>WrkCtrActivityRequirementSetRecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityCapabilityRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityCapabilityRequirement</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WrkCtrCapability</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>WrkCtrCapability</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Capability</Field>
										<JoinDataSource>WrkCtrActivityCapabilityRequirement</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityCertificateRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityCertificateRequirement</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmCertificateType</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmCertificateType</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>CertificateType</Field>
										<JoinDataSource>WrkCtrActivityCertificateRequirement</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityCourseRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityCourseRequirement</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityPersonTitleRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityPersonTitleRequirement</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HCMTitle</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HCMTitle</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>Title</Name>
										<JoinRelationName>Title</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityResourceGroupRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityResourceGroupRequirement</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>WrkCtrResourceGroup</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>WrkCtrResourceGroup</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>ResourceGroup</Name>
										<JoinRelationName>ResourceGroup</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityResourceRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityResourceRequirement</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivityResourceTypeRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivityResourceTypeRequirement</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>WrkCtrActivitySkillRequirement</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>WrkCtrActivitySkillRequirement</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmRatingLevel</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmRatingLevel</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>RatingLevel</Name>
										<JoinRelationName>RatingLevel</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>HcmSkill</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>HcmSkill</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<UseRelations>Yes</UseRelations>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>PersonSkill</Name>
										<JoinRelationName>PersonSkill</JoinRelationName>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>ActivityRequirement</Name>
								<JoinRelationName>ActivityRequirement</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>