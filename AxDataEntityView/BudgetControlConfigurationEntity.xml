<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BudgetControlConfigurationEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BudgetControlConfigurationEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>setEnityOfficeMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the Office menu options for the entity when the <c>setEntityOfficeMenuOptionDelegate</c> delegate in the <c>BudgetControlConfigurationEntityHelper</c> class is called.
    /// </summary>
    /// <param name="_entityOfficeMenuOption">
    /// The <c>BudgetControlConfigurationEntityOfficeMenuOption</c> instance for the entity.
    /// </param>
    [SubscribesTo(classstr(BudgetControlConfigurationEntityHelper), delegatestr(BudgetControlConfigurationEntityHelper, setEntityOfficeMenuOptionDelegate))]
    public static void setEnityOfficeMenuOption(BudgetControlConfigurationEntityOfficeMenuOption _entityOfficeMenuOption)
    {
        if (_entityOfficeMenuOption.parmEntityName() == tableStr(BudgetControlConfigurationEntity))
        {
            _entityOfficeMenuOption.parmLegalEntityIdFieldName(fieldStr(BudgetControlConfigurationEntity, LegalEntityId));
            _entityOfficeMenuOption.parmStatusFieldName(fieldStr(BudgetControlConfigurationEntity, Status));
            _entityOfficeMenuOption.parmDisplayFieldGroupName(tableFieldGroupStr(BudgetControlConfigurationEntity, AutoReport));
            _entityOfficeMenuOption.parmDisplayName("@Budget:ControlConfigurationEntityOfficeExportDisplayValue");
            _entityOfficeMenuOption.parmDataAreaIdFieldName(fieldStr(BudgetControlConfigurationEntity, DataAreaId));
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getStatusSql</Name>
				<Source><![CDATA[
    private static str getStatusSql()
    {
        DictDataEntity budgetControlConfigurationEntity = new DictDataEntity(tableNum(BudgetControlConfigurationEntity));

        str configurationDataSourceName = budgetControlConfigurationEntity.query().dataSourceTable(tablenum(BudgetControlConfiguration)).name();

        str isActive = budgetControlConfigurationEntity.computedColumnString(configurationDataSourceName, fieldStr(BudgetControlConfiguration, IsActive), FieldNameGenerationMode::WhereClause);

        return isActive;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultBudgetCycleTimeSpanNameSql</Name>
				<Source><![CDATA[
    private static str getDefaultBudgetCycleTimeSpanNameSql()
    {
        DictDataEntity budgetControlConfigurationEntity = new DictDataEntity(tableNum(BudgetControlConfigurationEntity));

        str configurationDataSourceName = budgetControlConfigurationEntity.query().dataSourceTable(tablenum(BudgetControlConfiguration)).name();

        str sql = strFmt('SELECT NAME FROM BUDGETCYCLETIMESPAN WHERE RECID = %1',
            SysComputedColumn::returnField(
                tableStr(BudgetControlConfigurationEntity),
                dataEntityDataSourceStr(BudgetControlConfigurationEntity, BudgetControlConfiguration),
                fieldStr(BudgetControlConfiguration, DefaultBudgetCycleTimeSpan)));

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultBudgetCycleTimeSpanFiscalCalendarIdSql</Name>
				<Source><![CDATA[
    private static str getDefaultBudgetCycleTimeSpanFiscalCalendarIdSql()
    {
        DictDataEntity budgetControlConfigurationEntity = new DictDataEntity(tableNum(BudgetControlConfigurationEntity));

        str configurationDataSourceName = budgetControlConfigurationEntity.query().dataSourceTable(tablenum(BudgetControlConfiguration)).name();

        str sql = strFmt(@'
            SELECT CALENDARID
                FROM FISCALCALENDAR
                    INNER JOIN BUDGETCYCLETIMESPAN
                        ON FISCALCALENDAR.RECID = BUDGETCYCLETIMESPAN.FISCALCALENDAR
                WHERE BUDGETCYCLETIMESPAN.RECID = %1
            ', SysComputedColumn::returnField(
                    tableStr(BudgetControlConfigurationEntity),
                    dataEntityDataSourceStr(BudgetControlConfigurationEntity, BudgetControlConfiguration),
                    fieldStr(BudgetControlConfiguration, DefaultBudgetCycleTimeSpan)));

        return sql;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copyEntityToTable</Name>
				<Source><![CDATA[
    private void copyEntityToTable(BudgetControlConfigurationEntity _controlConfigurationEntity, BudgetControlConfiguration _controlConfiguration)
    {
        _controlConfiguration.DefaultBudgetCycleTimeSpan = _controlConfigurationEntity.DefaultBudgetCycleTimeSpan;
        _controlConfiguration.DefaultInterval = _controlConfigurationEntity.DefaultBudgetControlInterval;
        _controlConfiguration.DefaultResponsibleUser = _controlConfigurationEntity.DefaultBudgetManager;
        _controlConfiguration.DefaultThresholdPercent = _controlConfigurationEntity.DefaultBudgetThresholdPercent;
        _controlConfiguration.DimensionHierarchyAccountStructure = _controlConfigurationEntity.DimensionHierarchyAccountStructure;
        _controlConfiguration.WarnOnOverBudgetThreshold = _controlConfigurationEntity.DisplayAMessageWhenExceedingBudgetThreshold;

        _controlConfiguration.InUseBy = _controlConfigurationEntity.InUseBy;
        _controlConfiguration.InUseSinceDateTime = _controlConfigurationEntity.InUseSinceDateTime;

        _controlConfiguration.SumOriginalBudget = _controlConfigurationEntity.SumOriginalBudgetInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumPreliminaryBudget = _controlConfigurationEntity.SumPreliminaryBudgetInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumAmendments = _controlConfigurationEntity.SumRevisionsInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumDraftAmendments = _controlConfigurationEntity.SumDraftRevisionsInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumTransfers = _controlConfigurationEntity.SumTransfersInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumDraftTransfersIn = _controlConfigurationEntity.SumDraftTransfersInInBudgetFundsAvailableCalculation;
        _controlConfiguration.SumDraftTransfersOut = _controlConfigurationEntity.SumDraftTransfersOutInBudgetFundsAvailableCalculation;
        _controlConfiguration.IncludeCarryforwardAmounts = _controlConfigurationEntity.IncludeCarryforwardAmountsInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractActualExpenditures = _controlConfigurationEntity.SubtractActualExpendituresInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractUnpostedActualExpenditures = _controlConfigurationEntity.SubtractUnpostedActualExpendituresInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractEncumbrances = _controlConfigurationEntity.SubtractEncumbrancesInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractDraftEncumbrances = _controlConfigurationEntity.SubtractUnconfirmedEncumbrancesInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractDraftEncumbranceReductions = _controlConfigurationEntity.SubtractUnconfirmedEncumbranceReductionsInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractPreencumbrances = _controlConfigurationEntity.SubtractPreencumbrancesInBudgetFundsAvailableCalculation;
        _controlConfiguration.SubtractDraftPreencumbrances = _controlConfigurationEntity.SubtractUnconfirmedPreencumbrancesInBudgetFundsAvailableCalculation;
        _controlConfiguration.UseApportionedAmount = _controlConfigurationEntity.UseOnlyApportionedAmountInBudgetFundsAvailableCalculation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDraftRecord</Name>
				<Source><![CDATA[
    private void updateDraftRecord()
    {
        BudgetControlConfiguration budgetControlConfiguration = BudgetControlConfigurationEntityHelper::getDraftBudgetControlConfiguration(this.LegalEntityId, true);

        this.copyEntityToTable(this, budgetControlConfiguration);

        budgetControlConfiguration.update();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upsertRecord</Name>
				<Source><![CDATA[
    private void upsertRecord()
    {
        // Because mapEntityToDataSource is skipped by not calling super in update() or insert(),
        // the FKs for the custom lookups must be manually resolved.
        if (this.fieldState(fieldNum(BudgetControlConfigurationEntity, AccountStructure)) == FieldState::Set)
        {
            this.DimensionHierarchyAccountStructure = DimensionHierarchy::findByTypeAndName(
                DimensionHierarchyType::AccountStructure,
                this.AccountStructure).RecId;
        }

        if (this.fieldState(fieldNum(BudgetControlConfigurationEntity, DefaultBudgetCycleTimeSpanName)) == FieldState::Set
            || this.fieldState(fieldNum(BudgetControlConfigurationEntity, DefaultBudgetCycleTimeSpanFiscalCalendarId)) == FieldState::Set)
        {
            this.DefaultBudgetCycleTimeSpan = BudgetControlConfigurationEntityHelper::getBudgetCycleTimeSpan(
                this.DefaultBudgetCycleTimeSpanName,
                this.DefaultBudgetCycleTimeSpanFiscalCalendarId).RecId;
        }

        this.updateDraftRecord();

        // The entity keys and the company context field may not be correct for the changes or current context.
        // Set the entity instance to the saved data.
        BudgetControlConfigurationEntity entity;

        // Set the current company context to match the primary company context set on the entity.
        changecompany(this.LegalEntityId)
        {
            // Select the entity record based on the key.
            select * from entity
                where entity.Status == BudgetControlConfigurationStatus::Draft;
        }

        this.data(entity);
    }

]]></Source>
			</Method>
			<Method>
				<Name>update</Name>
				<Source><![CDATA[
    public void update()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        this.upsertRecord();
    }

]]></Source>
			</Method>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    public void delete()
    {
        if (BudgetControlConfigurationManager::validateConfigurationEditPermitted(this.RecId))
        {
            // The configuration has been validated as draft and can be deleted.
            super();
        }
        else
        {
            // The validation will log errors, throw an exception to stop the delete.
            throw Exception::Error;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupAccountStructure</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of account structure IDs.
    /// </summary>
    /// <param name="_entityFields">
    /// The <c>Array</c> of entity fields values on the instance performing the lookup.
    /// </param>
    /// <returns>
    /// The serialized string of the <c>OfficeAppCustomLookupListResult</c> object for the list of account structure IDs.
    /// </returns>
    [SysODataActionAttribute("BudgetConfigurationEntityAccountStructureLookup", false),
     SysODataCollectionAttribute("_fields", Types::String),
     SysODataFieldLookupAttribute("AccountStructure")]
    public static str lookupAccountStructure(Array _fields)
    {
        List accountStructureNames = new List(Types::String);

        LedgerRecId primaryLedger = BudgetEntityHelper::getPrimaryLedgerFromOfficeAppCustomLookupFields(
            tableStr(BudgetControlConfigurationEntity),
            fieldStr(BudgetControlConfigurationEntity, LegalEntityId),
            _fields);

        if (primaryLedger)
        {
            accountStructureNames = BudgetPrimaryLedgerDimensionAttribute::getBudgetAccountStructureNamesForLedger(primaryLedger);
        }

        return BudgetEntityHelper::getSerializedOfficeAppCustomLookupListResult(accountStructureNames);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LedgerAdv2BudgetCtrl</ConfigurationKey>
	<DeveloperDocumentation>@Budget:BudgetControlConfigurationEntityDeveloperDocumentation</DeveloperDocumentation>
	<FormRef>BudgetControlConfiguration</FormRef>
	<Label>@Budget:BudgetControlConfiguration</Label>
	<Tags>Budget control setup</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BudgetControlConfigurationStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>Budgeting</Modules>
	<PrimaryCompanyContext>LegalEntityId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>BudgetControlConfigurations</PublicCollectionName>
	<PublicEntityName>BudgetControlConfiguration</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LegalEntityId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Status</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseBy</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>InUseSinceDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultBudgetControlInterval</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultBudgetCycleTimeSpanName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultBudgetCycleTimeSpanFiscalCalendarId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultBudgetManager</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultBudgetThresholdPercent</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountStructure</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DisplayAMessageWhenExceedingBudgetThreshold</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumOriginalBudgetInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumPreliminaryBudgetInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumRevisionsInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumDraftRevisionsInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumTransfersInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumDraftTransfersInInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SumDraftTransfersOutInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IncludeCarryforwardAmountsInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractActualExpendituresInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractUnpostedActualExpendituresInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractEncumbrancesInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractUnconfirmedEncumbrancesInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractUnconfirmedEncumbranceReductionsInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractPreencumbrancesInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>SubtractUnconfirmedPreencumbrancesInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>UseOnlyApportionedAmountInBudgetFundsAvailableCalculation</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultBudgetCycleTimeSpan</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>DefaultBudgetCycleTimeSpan</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>DefaultBudgetCycleTimeSpanFiscalCalendarId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Budget:BudgetCycleTimeSpanFiscalCalendar</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>getDefaultBudgetCycleTimeSpanFiscalCalendarIdSql</ComputedFieldMethod>
			<ExtendedDataType>FiscalCalendarId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>DefaultBudgetCycleTimeSpanName</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Budget:BudgetCycleTimeSpanName</Label>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>getDefaultBudgetCycleTimeSpanNameSql</ComputedFieldMethod>
			<ExtendedDataType>BudgetCycleTimeSpanName</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultBudgetControlInterval</Name>
			<DataField>DefaultInterval</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultBudgetManager</Name>
			<DataField>DefaultResponsibleUser</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultBudgetThresholdPercent</Name>
			<DataField>DefaultThresholdPercent</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DimensionHierarchyAccountStructure</Name>
			<AccessModifier>Private</AccessModifier>
			<AllowEdit>No</AllowEdit>
			<DataField>DimensionHierarchyAccountStructure</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountStructure</Name>
			<AllowEdit>No</AllowEdit>
			<Label>@Budget:BudgetControlConfigurationAccountStructure</Label>
			<Mandatory>Yes</Mandatory>
			<DataField>Name</DataField>
			<DataSource>DimensionHierarchy</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DisplayAMessageWhenExceedingBudgetThreshold</Name>
			<DataField>WarnOnOverBudgetThreshold</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseBy</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseBy</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InUseSinceDateTime</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<DataField>InUseSinceDateTime</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>Status</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Label>@Budget:BudgetControlConfigurationEntityStatus</Label>
			<ComputedFieldMethod>getStatusSql</ComputedFieldMethod>
			<EnumType>BudgetControlConfigurationStatus</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LegalEntityId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DataArea</DataField>
			<DataSource>CompanyInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrimaryLedger</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>PrimaryLedger</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumOriginalBudgetInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityOriginalBudget</Label>
			<DataField>SumOriginalBudget</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumPreliminaryBudgetInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityPreliminaryBudget</Label>
			<DataField>SumPreliminaryBudget</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumRevisionsInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityRevisions</Label>
			<DataField>SumAmendments</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumDraftRevisionsInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityDraftRevisions</Label>
			<DataField>SumDraftAmendments</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumTransfersInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityTransfers</Label>
			<DataField>SumTransfers</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumDraftTransfersInInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityDraftTransfersIn</Label>
			<DataField>SumDraftTransfersIn</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SumDraftTransfersOutInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityDraftTransfersOut</Label>
			<DataField>SumDraftTransfersOut</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IncludeCarryforwardAmountsInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityIncludeCarryForwardAmounts</Label>
			<DataField>IncludeCarryforwardAmounts</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractActualExpendituresInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityActualExpenditures</Label>
			<DataField>SubtractActualExpenditures</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractUnpostedActualExpendituresInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityUnpostedActualExpenditures</Label>
			<DataField>SubtractUnpostedActualExpenditures</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractEncumbrancesInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityEncumbrances</Label>
			<DataField>SubtractEncumbrances</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractUnconfirmedEncumbrancesInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityUnconfirmedEncumbrances</Label>
			<DataField>SubtractDraftEncumbrances</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractUnconfirmedEncumbranceReductionsInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityUnconfirmedEncumbranceReductions</Label>
			<DataField>SubtractDraftEncumbranceReductions</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractPreencumbrancesInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityPreencumbrances</Label>
			<DataField>SubtractPreencumbrances</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SubtractUnconfirmedPreencumbrancesInBudgetFundsAvailableCalculation</Name>
			<Label>@Budget:BudgetControlConfigurationEntityUnconfirmedPreencumbrances</Label>
			<DataField>SubtractDraftPreencumbrances</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>UseOnlyApportionedAmountInBudgetFundsAvailableCalculation</Name>
			<DataField>UseApportionedAmount</DataField>
			<DataSource>BudgetControlConfiguration</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>LegalEntityId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>Status</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LedgerEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>LedgerEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurationLedgerEntity</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>LedgerEntity</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>LedgerEntity_LegalEntityId</Name>
					<Field>LegalEntityId</Field>
					<RelatedField>LegalEntityId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>SystemUserEntityDefaultBudgetManager</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>SystemUserEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurationDefaultBudgetManager</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>DefaultBudgetManager</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>SystemUserEntity_UserID</Name>
					<Field>DefaultBudgetManager</Field>
					<RelatedField>UserID</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>BudgetCycleTimeSpan</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>BudgetCycleTimeSpanEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurationBudgetCycleTimeSpan</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>BudgetCycleTimeSpan</Role>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>DefaultBudgetCycleTimeSpanName</Field>
					<RelatedField>Name</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>DefaultBudgetCycleTimeSpanFiscalCalendarId</Field>
					<RelatedField>FiscalCalendarId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation>
			<Name>LedgerAccountStructureEntity</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>LedgerAccountStructureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>BudgetControlConfigurationAccountStructure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>AccountStructure</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>AccountStructure</Field>
					<RelatedField>AccountStructureName</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintRelatedFixed">
					<Name>RelationConstraintRelatedFixed1</Name>
					<RelatedField>Status</RelatedField>
					<ValueStr>DimensionHierarchyConstraintStatus::Active</ValueStr>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BudgetControlConfiguration</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BudgetControlConfiguration</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DimensionHierarchy</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionHierarchy</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges>
							<AxQuerySimpleDataSourceRange>
								<Name>StructureType</Name>
								<Field>StructureType</Field>
								<Value>AccountStructure</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>IsDraft</Name>
								<Field>IsDraft</Field>
								<Value>0</Value>
							</AxQuerySimpleDataSourceRange>
							<AxQuerySimpleDataSourceRange>
								<Name>IsSystemGenerated</Name>
								<Field>IsSystemGenerated</Field>
								<Value>0</Value>
							</AxQuerySimpleDataSourceRange>
						</Ranges>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DimensionHierarchy</Name>
								<JoinRelationName>DimensionHierarchy</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>PrimaryLedger</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>Ledger</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>CompanyInfo</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>CompanyInfo</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>PrimaryForLegalEntity</Field>
										<JoinDataSource>PrimaryLedger</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PrimaryLedger</Field>
								<JoinDataSource>BudgetControlConfiguration</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>