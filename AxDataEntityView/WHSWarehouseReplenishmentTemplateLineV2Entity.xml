<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>WHSWarehouseReplenishmentTemplateLineV2Entity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class WHSWarehouseReplenishmentTemplateLineV2Entity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;
        ret = super();
        if (ret)
        {
            WHSReplenishmentTemplate template = WHSReplenishmentTemplate::find(this.WarehouseReplenishmentTemplateId);
            switch (template.ReplenishmentType)
            {
                case WHSReplenishmentType::LoadDemand:
                    ret = this.validateDemand(template.ReplenishmentType);
                    break;
                case WHSReplenishmentType::WaveDemand:
                    ret = this.validateWaveDemand(template.ReplenishmentType);
                    break;
                case WHSReplenishmentType::MinMax:
                    ret = this.validateMinMax(template.ReplenishmentType);
                    break;
            }
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDemand</Name>
				<Source><![CDATA[
    private boolean validateDemand(WHSReplenishmentType _templateType)
    {
        boolean ret = true;
        if (this.ReplenishmentQuantityUnitSymbol)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentQuantityUnitSymbol), _templateType));
        }

        if (this.MinimumReplenishmentQuantity)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, MinimumReplenishmentQuantity), _templateType));
        }

        if (this.MaximumReplenishmentQuantity)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, MaximumReplenishmentQuantity), _templateType));
        }

        if (this.WillTemplateReplenishEmptyFixedLocations)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, WillTemplateReplenishEmptyFixedLocations), _templateType));
        }

        if (this.WillTemplateReplenishOnlyFixedLocations)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, WillTemplateReplenishOnlyFixedLocations), _templateType));
        }

        if (this.DemandIncrementRoundingMethod)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, DemandIncrementRoundingMethod), _templateType));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWaveDemand</Name>
				<Source><![CDATA[
    private boolean validateWaveDemand(WHSReplenishmentType _templateType)
    {
        boolean ret = this.validateDemand(_templateType);
        if (this.ApplicableDemandMethod)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ApplicableDemandMethod), _templateType));
        }
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateMinMax</Name>
				<Source><![CDATA[
    private boolean validateMinMax(WHSReplenishmentType _templateType)
    {
        boolean ret = true;
        if (this.ApplicableDemandMethod)
        {
            ret = checkFailed(strFmt("@WAX:ReplenishmentTempleteWrongFieldSpecified", fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ApplicableDemandMethod), _templateType));
        }

        if (this.ReplenishmentThresholdScope == WHSReplenishmentThresholdScope::Zone)
        {
            ret = this.validateWarehouseGroupSetting();
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupSetting</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupSetting()
    {
        if (!this.isFieldSet(fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseSelection)))
        {
            if (this.ReplenishmentWarehouseId && this.ReplenishmentWarehouseGroupId)
            {
                return checkFailed(strFmt("@WAX:WHSWarehouseReplenishmentTemplateLineV2EntityInvalidValuesWithWhsSelection",
                    fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseId),
                    fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseGroupId)));
            }

            return true;
        }

        boolean ret = this.validateWarehouseGroupSettingAll();
        ret = ret && this.validateWarehouseGroupSettingGroup();
        return ret && this.validateWarehouseGroupSettingWarehouse();
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupSettingAll</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupSettingAll()
    {
        if (this.ReplenishmentWarehouseSelection == WhsWarehouseGroupAll::All)
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseReplenishmentTemplateLineV2EntityWarehouseSelectionAllIsNotSupported",
                fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.ReplenishmentWarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupSettingGroup</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupSettingGroup()
    {
        if (this.ReplenishmentWarehouseSelection == WhsWarehouseGroupAll::Group
            && this.ReplenishmentWarehouseId)
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseReplenishmentTemplateLineV2EntityWarehouseMentioned",
                fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseId),
                fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.ReplenishmentWarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWarehouseGroupSettingWarehouse</Name>
				<Source><![CDATA[
    private boolean validateWarehouseGroupSettingWarehouse()
    {
        if (this.ReplenishmentWarehouseSelection == WhsWarehouseGroupAll::Warehouse
            && this.ReplenishmentWarehouseGroupId)
        {
            return checkFailed(strFmt("@WAX:WHSWarehouseReplenishmentTemplateLineV2EntityWarehouseGroupIdMentioned",
                fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseGroupId),
                fieldPName(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseSelection),
                enum2Symbol(enumNum(WhsWarehouseGroupAll), this.ReplenishmentWarehouseSelection)));
        }

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        this.WarehouseWorkTemplateWorkOrderType = WHSWorkTransType::Replenishment;
        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWarehouseSelection</Name>
				<Source><![CDATA[
    private void initWarehouseSelection()
    {
        if (!this.isFieldSet(fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, ReplenishmentWarehouseSelection)))
        {
            if (this.ReplenishmentWarehouseId)
            {
                this.ReplenishmentWarehouseSelection = WhsWarehouseGroupAll::Warehouse;
            }
            else if (this.ReplenishmentWarehouseGroupId)
            {
                this.ReplenishmentWarehouseSelection = WhsWarehouseGroupAll::Group;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>warehouseWorkTemplateWorkOrderTypeDefinition</Name>
				<Source><![CDATA[
    public static str warehouseWorkTemplateWorkOrderTypeDefinition()
    {
        return SysComputedColumn::returnLiteral(WHSWorkTransType::Replenishment);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(WHSWarehouseReplenishmentTemplateLineV2Entity, WHSReplenishmentTemplateLine):
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, ProductQueryJson), fieldNum(WHSReplenishmentTemplateLine, ItemQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, LocationQueryJson), fieldNum(WHSReplenishmentTemplateLine, LocationQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, ProductVariantQueryJson), fieldNum(WHSReplenishmentTemplateLine, ProductVariantQuery));
                WHSDataEntityHelper::markEmptyDataEntityFieldAsNotSetForUpdate(_entityCtx, _dataSourceCtx, fieldNum(WHSWarehouseReplenishmentTemplateLineV2Entity, ZoneQueryJson), fieldNum(WHSReplenishmentTemplateLine, ZoneQuery));
                
                this.initWarehouseSelection();
                break;
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    public void postLoad()
    {
        super();

        if (this.ProductQuery)
        {
            QueryRun queryRun = new QueryRun(this.ProductQuery);
            this.ProductQueryJson = new SysQuery(queryRun.query()).toJson();
        }

        if (this.LocationQuery)
        {
            QueryRun queryRun = new QueryRun(this.LocationQuery);
            this.LocationQueryJson = new SysQuery(queryRun.query()).toJson();
        }


        if (this.ProductVariantQuery)
        {
            QueryRun queryRun = new QueryRun(this.ProductVariantQuery);
            this.ProductVariantQueryJson = new SysQuery(queryRun.query()).toJson();
        }

        if (this.ZoneQuery)
        {
            QueryRun queryRun = new QueryRun(this.ZoneQuery);
            this.ZoneQueryJson = new SysQuery(queryRun.query()).toJson();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSWarehouseReplenishmentTemplateLineV2Entity, WHSReplenishmentTemplateLine))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Insert);
            this.validateQuery(_dataSourceCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateEntityDataSource</Name>
				<Source><![CDATA[
    public boolean updateEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(WHSWarehouseReplenishmentTemplateLineV2Entity, WHSReplenishmentTemplateLine))
        {
            this.initializeQuery(_dataSourceCtx, DataEntityDatabaseOperation::Update);
            this.validateQuery(_dataSourceCtx);
        }

        return super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQuery</Name>
				<Source><![CDATA[
    private void initializeQuery(DataEntityDataSourceRuntimeContext _dataSourceCtx, DataEntityDatabaseOperation _databaseOperation)
    {
        WHSReplenishmentTemplateLine replenishmentTemplateLine = _dataSourceCtx.getBuffer();
		
        switch (_databaseOperation)
        {
            case DataEntityDatabaseOperation::Insert:
            case DataEntityDatabaseOperation::Update:
                if (this.ProductQueryJson)
                {
                    replenishmentTemplateLine.ItemQuery = this.initializeQueryFromJson(this.ProductQueryJson).pack();
                }
                
                if (this.LocationQueryJson)
                {
                    replenishmentTemplateLine.LocationQuery = this.initializeQueryFromJson(this.LocationQueryJson).pack();
                }
                
                if (this.ProductVariantQueryJson)
                {
                    replenishmentTemplateLine.ProductVariantQuery = this.initializeQueryFromJson(this.ProductVariantQueryJson).pack();
                }

                if (this.ZoneQueryJson)
                {
                    replenishmentTemplateLine.ZoneQuery = this.initializeQueryFromJson(this.ZoneQueryJson).pack();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeQueryFromJson</Name>
				<Source><![CDATA[
    private QueryRun initializeQueryFromJson(str _jsonQuery)
    {
        Query deserializedQuery = SysQuery::newFromJson(_jsonQuery);
        return new QueryRun(deserializedQuery);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQuery</Name>
				<Source><![CDATA[
    private void validateQuery(DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        this.validateQueryStructure(_dataSourceCtx, this.ProductQueryJson, fieldNum(WHSReplenishmentTemplateLine, ItemQuery));
        this.validateQueryStructure(_dataSourceCtx, this.LocationQueryJson, fieldNum(WHSReplenishmentTemplateLine, LocationQuery));
        this.validateQueryStructure(_dataSourceCtx, this.ProductVariantQueryJson, fieldNum(WHSReplenishmentTemplateLine, ProductVariantQuery));
        this.validateQueryStructure(_dataSourceCtx, this.ZoneQueryJson, fieldNum(WHSReplenishmentTemplateLine, ZoneQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateQueryStructure</Name>
				<Source><![CDATA[
    private void validateQueryStructure(DataEntityDataSourceRuntimeContext _dataSourceCtx, str _queryJson, FieldId _fieldId)
    {
        if (_queryJson)
        {
            Query actualQuery = SysQuery::newFromJson(_queryJson);
            Query expectedQuery = this.defaultExpectedQuery(_dataSourceCtx.getBuffer(), _fieldId);

            if (!WHSQueryInitializer::initializeDataSource(expectedQuery.dataSourceNo(1), actualQuery.dataSourceNo(1)))
            {
                _dataSourceCtx.throwValidateWriteFailed();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpectedQuery</Name>
				<Source><![CDATA[
    private Query defaultExpectedQuery(WHSReplenishmentTemplateLine _replenishmentTemplateLine, FieldId _fieldId)
    {
        WHSReplenishmentTemplateLine replenishmentTemplateLine;

        switch (_fieldId)
        {
            case fieldNum(WHSReplenishmentTemplateLine, ItemQuery):
                return this.queryFromContainer(replenishmentTemplateLine.initItemQuery());
            case fieldNum(WHSReplenishmentTemplateLine, LocationQuery):
                return this.queryFromContainer(replenishmentTemplateLine.initLocationQuery());
            case fieldNum(WHSReplenishmentTemplateLine, ProductVariantQuery):
                return this.queryFromContainer(replenishmentTemplateLine.initProductVariantQuery());
            case fieldNum(WHSReplenishmentTemplateLine, ZoneQuery):
                return this.defaultExpectedZoneQuery(_replenishmentTemplateLine);
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>queryFromContainer</Name>
				<Source><![CDATA[
    private Query queryFromContainer(container _packedQuery)
    {
        if (_packedQuery == conNull())
        {
            return null;
        }

        return new QueryRun(_packedQuery).query();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultExpectedZoneQuery</Name>
				<Source><![CDATA[
    private Query defaultExpectedZoneQuery(WHSReplenishmentTemplateLine _replenishmentTemplateLine)
    {
        WHSReplenishmentTemplateLine replenishmentTemplateLine;

        buf2Buf(_replenishmentTemplateLine, replenishmentTemplateLine);

        replenishmentTemplateLine.ZoneQuery = conNull();
        replenishmentTemplateLine.initZoneQuery();

        return this.queryFromContainer(replenishmentTemplateLine.ZoneQuery);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>WHSandTMS</ConfigurationKey>
	<FormRef>whsreplenishmenttemplates</FormRef>
	<Label>@WAX:WHSWarehouseReplenishmentTemplateLineV2EntityLabel</Label>
	<Tags>Replenishment</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>WHSWarehouseReplenishmentTemplateLineV2Staging</DataManagementStagingTable>
	<Modules>WMS</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseReplenishmentTemplateId</Name>
			<DataField>ReplenishTemplateId</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SequenceNumber</Name>
			<DataField>SeqNum</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineDescription</Name>
			<DataField>Description</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentUnitSymbol</Name>
			<DataField>ReplenishmentUOM</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseReplenishmentRequestTypeId</Name>
			<DataField>RequestTypeId</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseLocationDirectiveCode</Name>
			<DataField>LocDirHintCode</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WarehouseWorkTemplateId</Name>
			<DataField>WorkTemplateCode</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MinimumReplenishmentQuantity</Name>
			<DataField>MinQty</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MaximumReplenishmentQuantity</Name>
			<DataField>MaxQty</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentQuantityUnitSymbol</Name>
			<DataField>QtyUOM</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DemandIncrementRoundingMethod</Name>
			<DataField>DemandIncrement</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTemplateReplenishEmptyFixedLocations</Name>
			<DataField>EvalEmptyFixed</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WillTemplateReplenishOnlyFixedLocations</Name>
			<DataField>ReplenFixedOnly</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ApplicableDemandMethod</Name>
			<DataField>ApplicableDemand</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductQueryMode</Name>
			<DataField>ProductQueryMode</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>ItemQuery</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LocationQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>LocationQuery</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVariantQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>ProductVariantQuery</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>WarehouseWorkTemplateWorkOrderType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ComputedFieldMethod>warehouseWorkTemplateWorkOrderTypeDefinition</ComputedFieldMethod>
			<IsComputedField>No</IsComputedField>
			<EnumType>WHSWorkTransType</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentStrategy</Name>
			<DataField>ReplenishmentStrategy</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentThresholdScope</Name>
			<DataField>ReplenishmentThresholdScope</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ZoneQuery</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<IsObsolete>Yes</IsObsolete>
			<DataField>ZoneQuery</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductQueryJson</Name>
			<Label>@WAX:ReplenishmentTemplateProductQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>LocationQueryJson</Name>
			<Label>@WAX:ReplenishmentTemplateLocationQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductVariantQueryJson</Name>
			<Label>@WAX:ReplenishmentTemplateProductVariantQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ZoneQueryJson</Name>
			<Label>@WAX:ReplenishmentTemplateZoneQueryJson</Label>
			<IsComputedField>No</IsComputedField>
			<StringSize>-1</StringSize>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentWarehouseGroupId</Name>
			<DataField>WarehouseGroupId</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReplenishmentWarehouseSelection</Name>
			<DataField>WarehouseGroupAll</DataField>
			<DataSource>WHSReplenishmentTemplateLine</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>WarehouseReplenishmentTemplateId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>SequenceNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReplenishmentUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReplenishmentUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>ReplenishmentUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>ReplenishmentQuantityUnitOfMeasure</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>UnitOfMeasureEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>ReplenishmentQuantityUnitOfMeasure</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>UnitOfMeasureEntity_UnitSymbol</Name>
					<Field>ReplenishmentQuantityUnitSymbol</Field>
					<RelatedField>UnitSymbol</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>UnitSymbolKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseLocationDirectiveCode</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseLocationDirectiveCodeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseLocationDirectiveCode</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseWorkDirectiveEntity_DirectiveCode</Name>
					<Field>WarehouseLocationDirectiveCode</Field>
					<RelatedField>DirectiveCodeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseReplenishmentTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseReplenishmentTemplateEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseReplenishmentTemplate</RelatedDataEntityRole>
			<RelationshipType>Composition</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseReplenishmentTemplateEntity_TemplateId</Name>
					<Field>WarehouseReplenishmentTemplateId</Field>
					<RelatedField>TemplateId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseReplenishmentRequestType</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseReplenishmentRequestTypeEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseReplenishmentRequestType</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseReplenishmentRequestTypeEntity_TypeId</Name>
					<Field>WarehouseReplenishmentRequestTypeId</Field>
					<RelatedField>TypeId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>EntityKey</Key>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>WarehouseWorkTemplate</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>WHSWarehouseWorkTemplateEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelatedDataEntityRole>WarehouseWorkTemplate</RelatedDataEntityRole>
			<RelationshipType>Association</RelationshipType>
			<Role>WarehouseReplenishmentTemplateLines</Role>
			<UseDefaultRoleNames>No</UseDefaultRoleNames>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseWorkTemplateEntity_TemplateId</Name>
					<Field>WarehouseWorkTemplateId</Field>
					<RelatedField>TemplateId</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>WHSWarehouseWorkTemplateEntity_WorkOrderType</Name>
					<Field>WarehouseWorkTemplateWorkOrderType</Field>
					<RelatedField>WorkOrderType</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
			<Key>TemplateIdKey</Key>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>WHSReplenishmentTemplateLine</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>WHSReplenishmentTemplateLine</Table>
				<DataSources />
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>