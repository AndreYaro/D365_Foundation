<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EFDocTechResponsibleInformationEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class EFDocTechResponsibleInformationEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(EFDocTechResponsibleInformationEntity, FiscalEstablishment_BR):
                FiscalEstablishment_BR fiscalEstablishment = _dataSourceCtx.getBuffer();
                if (this.TechnicalResponsibleCSRT)
                {
                    fiscalEstablishment.technicalResponsibleCSRTEdit(true, this.TechnicalResponsibleCSRT);
                }
                break;

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findEntityDataSource</Name>
				<Source><![CDATA[
    public Common findEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        Common ret;

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(EFDocTechResponsibleInformationEntity, FiscalEstablishment_BR):
                ret = this.findFiscalEstablishment();
                break;

            default:
                ret = super(_entityCtx, _dataSourceCtx);
                break;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(EFDocTechResponsibleInformationEntity, FiscalEstablishment_BR):
                if (_entityCtx.isDatabaseOperationUpdate())
                {
                    this.updateTechnicalInformation();
                }

            default:
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>findFiscalEstablishment</Name>
				<Source><![CDATA[
    private FiscalEstablishment_BR findFiscalEstablishment()
    {
        FiscalEstablishment_BR fiscalEstablishment;

        QueryRun qr = new QueryRun(this.fiscalEstablishmentQuery());

        if (qr.next())
        {
            fiscalEstablishment = qr.get(tableNum(FiscalEstablishment_BR));
        }

        return fiscalEstablishment;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fiscalEstablishmentQuery</Name>
				<Source><![CDATA[
    private Query fiscalEstablishmentQuery(boolean _firstOnly = true)
    {
        Query query = new Query();
        QueryBuildDataSource qbds = query.addDataSource(tableNum(FiscalEstablishment_BR));
        qbds.firstOnly(_firstOnly);

        if (!_firstOnly)
        {
            qbds.addRange(fieldNum(FiscalEstablishment_BR, RecId)).value(SysQuery::valueNot(this.RecId));
            qbds.update(true);
        }

        QueryBuildDataSource qbdsDirParty = qbds.addDataSource(tableNum(DirPartyLocation));
        qbdsDirParty.relations(true);
        qbdsDirParty.joinMode(JoinMode::ExistsJoin);

        QueryBuildDataSource qbdsAddressEntity = qbdsDirParty.addDataSource(tableNum(LogisticsPostalAddressBaseEntity));
        qbdsAddressEntity.addLink(fieldNum(DirPartyLocation, Location), fieldNum(LogisticsPostalAddressBaseEntity, LocationRecId));
        qbdsAddressEntity.addRange(fieldNum(LogisticsPostalAddressBaseEntity, State)).value(this.State);

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateTechnicalInformation</Name>
				<Source><![CDATA[
    private void updateTechnicalInformation()
    {
        QueryRun qr = new QueryRun(this.fiscalEstablishmentQuery(false));

        while (qr.next())
        {
            ttsbegin;
            FiscalEstablishment_BR fiscalEstablishment = qr.get(tableNum(FiscalEstablishment_BR));
            fiscalEstablishment.TechnicalResponsibleCNPJ = this.TechnicalResponsibleCNPJ;
            fiscalEstablishment.TechnicalResponsibleContactName = this.TechnicalResponsibleContactName;
            fiscalEstablishment.TechnicalResponsiblePhone = this.TechnicalResponsiblePhone;
            fiscalEstablishment.TechnicalResponsibleEmail = this.TechnicalResponsibleEmail;
            fiscalEstablishment.TechnicalResponsibleIdCSRT = this.TechnicalResponsibleCSRTId;
            fiscalEstablishment.technicalResponsibleCSRTEdit(true, this.TechnicalResponsibleCSRT);
            fiscalEstablishment.update();
            ttscommit;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<CountryRegionCodes>BR</CountryRegionCodes>
	<Label>@NFE:TechnicalResponsibleInformation</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>EFDocTechResponsibleInformationStaging</DataManagementStagingTable>
	<EntityCategory>Reference</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>FiscalBooks_BR</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>EFDocTechResponsibleInformations</PublicCollectionName>
	<PublicEntityName>EFDocTechResponsibleInformation</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>State</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsibleCNPJ</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsibleContactName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsibleEmail</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsiblePhone</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsibleCSRTId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>TechnicalResponsibleCSRT</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>State</Name>
			<DataField>State</DataField>
			<DataSource>LogisticsPostalAddressBaseEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalResponsibleCNPJ</Name>
			<DataField>TechnicalResponsibleCNPJ</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalResponsibleContactName</Name>
			<DataField>TechnicalResponsibleContactName</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalResponsibleEmail</Name>
			<DataField>TechnicalResponsibleEmail</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalResponsiblePhone</Name>
			<DataField>TechnicalResponsiblePhone</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>TechnicalResponsibleCSRTId</Name>
			<DataField>TechnicalResponsibleIdCSRT</DataField>
			<DataSource>FiscalEstablishment_BR</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>TechnicalResponsibleCSRT</Name>
			<ExtendedDataType>TechResponsibleCSRT_BR</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>State</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>FiscalEstablishment_BR</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>FiscalEstablishment_BR</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DirPartyLocation</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DirPartyLocation</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>LogisticsPostalAddressBaseEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>LogisticsPostalAddressBaseEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges>
									<AxQuerySimpleDataSourceRange>
										<Name>State</Name>
										<Field>State</Field>
										<Status>Hidden</Status>
										<Value>!=""</Value>
									</AxQuerySimpleDataSourceRange>
								</Ranges>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Location</Field>
										<JoinDataSource>DirPartyLocation</JoinDataSource>
										<RelatedField>LocationRecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>DirPartyLocation</Name>
								<JoinRelationName>DirPartyLocation</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>