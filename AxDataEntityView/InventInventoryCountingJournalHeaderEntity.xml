<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventInventoryCountingJournalHeaderEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventInventoryCountingJournalHeaderEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        if (!this.skipNumberSequenceCheck())
        {
            NumberSeqRecordFieldHandler::enableNumberSequenceControlForField(
                this, fieldNum(InventInventoryCountingJournalHeaderEntity, JournalNumber), InventParameters::numRefInventJournalId());
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DataEntityDatabaseOperation entityDatabaseOperation = _entityCtx.getDatabaseOperation();
        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable):
                if (entityDatabaseOperation == DataEntityDatabaseOperation::Insert)
                {
                    InventJournalTable inventJournalTable = _dataSourceCtx.getBuffer();
                    InventJournalTableData inventJournalTableData = JournalTableData::newTable(inventJournalTable) as InventJournalTableData;

                    inventJournalTableData.initFromJournalName(InventJournalName::find(this.JournalNameId));

                    inventJournalTable.JournalType = InventJournalType::Count;

                    InventDimParm defaultCountingDimensions = InventJournalTable::defaultInventDimParmEnabledForCounting();
                    this.InventDimFixedActiveDimensionEntityMapping::updateInventDimParmFromExplicitlySetFlags(defaultCountingDimensions);
                    inventJournalTable.InventDimFixed = defaultCountingDimensions.inventDimFixed();
                }
                break;
        }

        super(_entityCtx, _dataSourceCtx);

        switch (_dataSourceCtx.name())
        {
            case dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, NumberSequenceTable):
                if ((entityDatabaseOperation == DataEntityDatabaseOperation::Insert || entityDatabaseOperation == DataEntityDatabaseOperation::Update)
                    && this.isFieldSet(fieldNum(InventInventoryCountingJournalHeaderEntity, VoucherNumberSequenceCode)))
                {
                    NumberSequenceTable numberSequenceTable = _dataSourceCtx.getBuffer();
                    numberSequenceTable.NumberSequenceScope = NumberSeqScopeFactory::createDataAreaScope(this.DataAreaId).getId();
                }
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingByInventoryStatusIdEnabledDefinition</Name>
				<Source><![CDATA[
    static private str isCountingByInventoryStatusIdEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::isInventoryStatusIdActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingByItemBatchNumberEnabledDefinition</Name>
				<Source><![CDATA[
    static private str isCountingByItemBatchNumberEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::IsItemBatchNumberActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingByItemSerialNumberEnabledDefinition</Name>
				<Source><![CDATA[
    static private str isCountingByItemSerialNumberEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::IsItemSerialNumberActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCountingByLicensePlateNumberEnabledDefinition</Name>
				<Source><![CDATA[
    static private str isCountingByLicensePlateNumberEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::IsLicensePlateNumberActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsCountingByInventoryWarehouseIdEnabledDefinition</Name>
				<Source><![CDATA[
    static private str IsCountingByInventoryWarehouseIdEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::IsWarehouseIdActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
			<Method>
				<Name>IsCountingByWarehouseLocationIdEnabledDefinition</Name>
				<Source><![CDATA[
    static private str IsCountingByWarehouseLocationIdEnabledDefinition()
    {
        return InventDimFixedActiveDimensionEntityMapping::IsWarehouseLocationIdActiveDefinition(
                    tableStr(InventInventoryCountingJournalHeaderEntity),
                    dataEntityDataSourceStr(InventInventoryCountingJournalHeaderEntity, InventJournalTable),
                    fieldStr(InventJournalTable, InventDimFixed));
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:InventInventoryCountingJournalsEntityDevDocs</DeveloperDocumentation>
	<FormRef>InventJournalTableCount</FormRef>
	<Label>@SCM:InventInventoryCountingJournalHeaderEntityTitle</Label>
	<Tags>Counting</Tags>
	<AllowRowVersionChangeTracking>Yes</AllowRowVersionChangeTracking>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventInventoryCountingJournalHeaderStaging</DataManagementStagingTable>
	<EntityCategory>Document</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>InventoryCountingJournalHeaders</PublicCollectionName>
	<PublicEntityName>InventoryCountingJournalHeader</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataAreaId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNameId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>JournalNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Description</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultInventorySiteId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>DefaultWarehouseId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AreLinesDeletedAfterPosting</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReservationMode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostingDetailLevel</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberSelectionRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberAllocationRule</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VoucherNumberSequenceCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WorkerPersonnelNumber</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingWarehouseSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingInventoryStatusSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingWarehouseLocationSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingLicensePlateSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingItemBatchSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsCountingItemSerialNumberSpecific</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsPosted</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedDateTime</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PostedUserId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>CountingStatusRegistrationPolicy</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AreLinesDeletedAfterPosting</Name>
			<DataField>DeletePostedLines</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>Description</Name>
			<DataField>Description</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostingDetailLevel</Name>
			<DataField>DetailSummary</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultInventorySiteId</Name>
			<DataField>InventSiteId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DefaultWarehouseId</Name>
			<DataField>InventLocationId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>JournalId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>JournalNameId</Name>
			<DataField>JournalNameId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>IsPosted</Name>
			<DataField>Posted</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostedDateTime</Name>
			<DataField>PostedDateTime</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PostedUserId</Name>
			<DataField>PostedUserId</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReservationMode</Name>
			<DataField>Reservation</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VoucherNumberSelectionRule</Name>
			<DataField>VoucherChange</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VoucherNumberAllocationRule</Name>
			<DataField>VoucherDraw</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VoucherNumberSequenceRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>VoucherNumberSequenceTable</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>VoucherNumberSequenceCode</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>NumberSequence</DataField>
			<DataSource>NumberSequenceTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerRecId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>Worker</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>WorkerPersonnelNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<DataField>PersonnelNumber</DataField>
			<DataSource>HcmWorker</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventDimFixed</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventDimFixed</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingWarehouseSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsCountingByInventoryWarehouseIdEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventLocationIdFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingInventoryStatusSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsCountingByInventoryStatusIdEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>WHSInventStatusFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingWarehouseLocationSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsCountingByWarehouseLocationIdEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>WMSLocationIdFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingLicensePlateSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>isCountingByLicensePlateNumberEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>WHSLicensePlateFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingItemBatchSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsCountingByItemBatchNumberEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventBatchIdFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>IsCountingItemSerialNumberSpecific</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>IsCountingByItemSerialNumberEnabledDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventSerialIdFlag</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CountingStatusRegistrationPolicy</Name>
			<DataField>CountingStatusRegistrationPolicy</DataField>
			<DataSource>InventJournalTable</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>JournalNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>InventDimFixedActiveDimensionEntityMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>InventDimFixed</MapField>
					<MapFieldTo>InventDimFixed</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsInventoryStatusIdActive</MapField>
					<MapFieldTo>IsCountingInventoryStatusSpecific</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsItemBatchNumberActive</MapField>
					<MapFieldTo>IsCountingItemBatchSpecific</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsItemSerialNumberActive</MapField>
					<MapFieldTo>IsCountingItemSerialNumberSpecific</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsLicensePlateNumberActive</MapField>
					<MapFieldTo>IsCountingLicensePlateSpecific</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsOperationalSiteIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsProductColorIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsProductConfigurationIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsProductSizeIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsProductStyleIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsProductVersionIdActive</MapField>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsWarehouseIdActive</MapField>
					<MapFieldTo>IsCountingWarehouseSpecific</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>IsWarehouseLocationIdActive</MapField>
					<MapFieldTo>IsCountingWarehouseLocationSpecific</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Worker</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>HcmWorkerEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>WorkerPersonnelNumber</Field>
					<RelatedField>PersonnelNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventJournalTable</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventJournalTable</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>HcmWorker</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>HcmWorker</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Worker</Field>
								<JoinDataSource>InventJournalTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>NumberSequenceTable</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>NumberSequenceTable</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>VoucherNumberSequenceTable</Field>
								<JoinDataSource>InventJournalTable</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>JournalTypeCount</Name>
						<Field>JournalType</Field>
						<Value>Count</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>