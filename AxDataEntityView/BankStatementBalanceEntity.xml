<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>BankStatementBalanceEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class BankStatementBalanceEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>insertEntityDataSource</Name>
				<Source><![CDATA[
    public boolean insertEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        BankStmtISOCashBalance balance;
        SysGlobalCache cache = classfactory.globalCache();

        if (_dataSourceCtx.name() == dataentitydatasourcestr(BankStatementBalanceEntity, BankStmtISOCashBalance)
            && this.AvailibilityLineNum > 1)
        {
            RecId balanceId = cache.get(
                BankStatementImportHelper::getStatementBalanceCacheOwner(guid2Str(this.scopeIdentifier())),
                BankStatementImportHelper::getStatementBalanceCacheKey(this.DocumentLineNum, this.StatementLineNum, this.BalanceLineNum, 1));
            select firstonly balance where balance.RecId == balanceId;

            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            _dataSourceCtx.setBuffer(balance);

            // The validation for target insert / update requires entity to have a RecId,
            // regardless of whether insert / update operation really happens.
            Common entityRecord = _entityCtx.getEntityRecord();
            if (entityRecord.RecId == 0)
            {
                entityRecord.RecId = 1;
            }

            _dataSourceCtx.setDataSaved(true);
        }
        else if (_dataSourceCtx.name() == dataentitydatasourcestr(BankStatementBalanceEntity, BankStmtISOCashBalance)
            && this.AvailibilityLineNum <= 1)
        {
            RecId stmtId = cache.get(
                BankStatementImportHelper::getStatementCacheOwner(guid2Str(this.scopeIdentifier())),
                BankStatementImportHelper::getStatementCacheKey(this.DocumentLineNum, this.StatementLineNum));
            balance = _dataSourceCtx.getBuffer() as BankStmtISOCashBalance;
            balance.BankStmtISOAccountStatement = stmtId;
            _dataSourceCtx.setBuffer(balance);
        }
        else if ( _dataSourceCtx.name() == dataentitydatasourcestr(BankStatementBalanceEntity, BankStmtISOCashBalanceAvailibility)
        && this.AvailibilityLineNum == 0 )
        {
            _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            _dataSourceCtx.setDataSaved(true);
        }

        boolean ret = super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataentitydatasourcestr(BankStatementBalanceEntity, BankStmtISOCashBalance)
            && this.AvailibilityLineNum <= 1)
        {
            balance = _dataSourceCtx.getBuffer() as BankStmtISOCashBalance;
            cache.set(
                BankStatementImportHelper::getStatementBalanceCacheOwner(guid2Str(this.scopeIdentifier())),
                BankStatementImportHelper::getStatementBalanceCacheKey(this.DocumentLineNum, this.StatementLineNum, this.BalanceLineNum, 1),
                balance.RecId);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if (this.DataAreaId && this.DataAreaId != curExt())
        {
            changecompany(this.DataAreaId)
            {
                super();
            }
        }
        else
        {
            super();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>BankElectronicBanking</ConfigurationKey>
	<Label>@SYS316321</Label>
	<Tags>Statement</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>BankStatementBalanceStaging</DataManagementStagingTable>
	<Modules>CashAndBankManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>BalanceLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>AvailibilityLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceType</Name>
			<DataField>BankStatementBalanceType</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceIndicator</Name>
			<DataField>AmountCreditDebitIndicator</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceAmount</Name>
			<DataField>CashBalanceAmount</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceItemCount</Name>
			<DataField>ItemCount</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceTypeCode</Name>
			<DataField>TypeCode</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BalanceFundsType</Name>
			<DataField>FundsType</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankStmtISOAccountStatement</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>BankStmtISOAccountStatement</DataField>
			<DataSource>BankStmtISOCashBalance</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>BankStmtISOCashBalance</Name>
			<AccessModifier>Private</AccessModifier>
			<Mandatory>No</Mandatory>
			<DataField>BankStmtISOCashBalance</DataField>
			<DataSource>BankStmtISOCashBalanceAvailibility</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AvailibilityAmount</Name>
			<Mandatory>No</Mandatory>
			<DataField>Amount</DataField>
			<DataSource>BankStmtISOCashBalanceAvailibility</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AvailibilityActualDate</Name>
			<Mandatory>No</Mandatory>
			<DataField>ActualDate</DataField>
			<DataSource>BankStmtISOCashBalanceAvailibility</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AvailibilityNumberOfDays</Name>
			<Mandatory>No</Mandatory>
			<DataField>NumberOfDays</DataField>
			<DataSource>BankStmtISOCashBalanceAvailibility</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>StatementLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldInt">
			<Name>DocumentLineNum</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>DocumentLineNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>StatementLineNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>BalanceLineNum</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>AvailibilityLineNum</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation>
			<Name>BankStatementEntity</Name>
			<Cardinality>ExactlyOne</Cardinality>
			<RelatedDataEntity>BankStatementEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>BankStmtISOAccountStatement</Field>
					<RelatedField>BankStatementRecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>BankStmtISOCashBalance</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>BankStmtISOCashBalance</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>BankStmtISOCashBalanceAvailibility</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>BankStmtISOCashBalanceAvailibility</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<FetchMode>OneToN</FetchMode>
						<JoinMode>OuterJoin</JoinMode>
						<UseRelations>Yes</UseRelations>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>BankStmtISOCashBalance</Name>
								<JoinRelationName>BankStmtISOCashBalance</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>