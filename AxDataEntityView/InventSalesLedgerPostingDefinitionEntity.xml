<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>InventSalesLedgerPostingDefinitionEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class InventSalesLedgerPostingDefinitionEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>itemNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str itemNumberComputedColumnDefinition()
    {
        return EcoResTableGroupAllProductRelationExpansionMapping::tableCategoryIdDefinition(tableStr(InventSalesLedgerPostingDefinitionEntity),
                                                                                            dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, InventPosting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>itemGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str itemGroupComputedColumnDefinition()
    {
        return EcoResTableGroupAllProductRelationExpansionMapping::groupCategoryIdDefinition(tableStr(InventSalesLedgerPostingDefinitionEntity),
                                                                                            dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, InventPosting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerNumberComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerNumberComputedColumnDefinition()
    {
        return CustTableGroupAllCustomerRelationExpansionMapping::tableCategoryIdDefinition(tableStr(InventSalesLedgerPostingDefinitionEntity),
                                                                                            dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, InventPosting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>customerGroupComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str customerGroupComputedColumnDefinition()
    {
        return CustTableGroupAllCustomerRelationExpansionMapping::groupCategoryIdDefinition(tableStr(InventSalesLedgerPostingDefinitionEntity),
                                                                                            dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, InventPosting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>salesSiteIdComputedColumnDefinition</Name>
				<Source><![CDATA[
    private static str salesSiteIdComputedColumnDefinition()
    {
        return InventSiteTableAllSiteRelationExpansionMapping::tableCategoryIdDefinition(tableStr(InventSalesLedgerPostingDefinitionEntity),
                                                                                           dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, InventPosting));
    }

]]></Source>
			</Method>
			<Method>
				<Name>inventAccountTypeComputedColumnDefinition</Name>
				<Source><![CDATA[
    public static str inventAccountTypeComputedColumnDefinition()
    {
        return InventLedgerPostingDefinitionEntityHelper::inventAccountTypeComputedColumnDefinition(enumNum(InventAccountTypeSales));
    }

]]></Source>
			</Method>
			<Method>
				<Name>getExtension</Name>
				<Source><![CDATA[
    public TableExtension getExtension()
    {
        return SysTableExtension::construct();
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemCode</Name>
				<Source><![CDATA[
    private void defaultItemCode()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemNumber)))
            {
                this.ItemCode = InventPostingItemCode::Table;
            }
        }
        else if (this.ProductGroupId)
        {
            if (this.isFieldSet(fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductGroupId)))
            {
                this.ItemCode = InventPostingItemCode::GroupId;
            }
        }
        else if (this.ProductCategoryName)
        {
            if (this.isFieldSet(fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductCategoryName)))
            {
                this.ItemCode = InventPostingItemCode::Category;
            }
        }
        else
        {
            this.ItemCode = InventPostingItemCode::All;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultItemRelation</Name>
				<Source><![CDATA[
    private void defaultItemRelation()
    {
        if (this.ItemNumber)
        {
            if (this.isFieldSet(fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemNumber)))
            {
                this.ItemRelation = this.ItemNumber;
            }
        }
        else if (this.ProductGroupId)
        {
            if (this.isFieldSet(fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductGroupId)))
            {
                this.ItemRelation = this.ProductGroupId;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultAccountType</Name>
				<Source><![CDATA[
    private void defaultAccountType()
    {
        this.AccountType = InventPosting::salesAccount2AccountType(this.InventoryAccountType);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDefaultingDependencies</Name>
				<Source><![CDATA[
    public container getDefaultingDependencies()
    {
        return  [
            [fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemCode),
                [fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemNumber), fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductGroupId), fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductCategoryName)]],
            [fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemRelation),
                [fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemNumber), fieldNum(InventSalesLedgerPostingDefinitionEntity, ProductGroupId)]],
            [fieldNum(InventSalesLedgerPostingDefinitionEntity, AccountType),
                [fieldNum(InventSalesLedgerPostingDefinitionEntity, InventoryAccountType)]],
            this.CustTableGroupAllCustomerRelationExpansionMapping::relationControllingCodeDefaultingDependencies(),
            this.CustTableGroupAllCustomerRelationExpansionMapping::codeControlledRelationDefaultingDependencies(),
            this.InventSiteTableAllSiteRelationExpansionMapping::relationControllingCodeDefaultingDependencies(),
            this.InventSiteTableAllSiteRelationExpansionMapping::codeControlledRelationDefaultingDependencies()
        ];
    }

]]></Source>
			</Method>
			<Method>
				<Name>defaultField</Name>
				<Source><![CDATA[
    public void defaultField(FieldId _fieldId)
    {
        super (_fieldId);

        switch (_fieldId)
        {
            case fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemCode):
                this.defaultItemCode();
                break;
            case fieldNum(InventSalesLedgerPostingDefinitionEntity, ItemRelation):
                this.defaultItemRelation();
                break;
            case fieldNum(InventSalesLedgerPostingDefinitionEntity, AccountType):
                this.defaultAccountType();
                break;
        }

        this.CustTableGroupAllCustomerRelationExpansionMapping::defaultMappedField(_fieldId);
        this.InventSiteTableAllSiteRelationExpansionMapping::defaultMappedField(_fieldId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (InventLedgerPostingDefinitionEntityHelper::mapEntityToDataSource(_entityCtx, _dataSourceCtx))
        {
            // Remap as the buffer has been changed:
            super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapDataSourceToEntity</Name>
				<Source><![CDATA[
    public void mapDataSourceToEntity(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        super(_entityCtx, _dataSourceCtx);

        if (_dataSourceCtx.name() == dataEntityDataSourceStr(InventSalesLedgerPostingDefinitionEntity, SalesProductCategoryEntity))
        {
            SalesProductCategoryEntity buffer = _dataSourceCtx.getBuffer();
            this.CategoryRecordId = buffer.CategoryRecordId;
            this.CategoryRelation = buffer.CategoryRecordId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    public boolean validateWrite()
    {
        boolean ret;

        ret = super();

        if (ret)
        {
            // Validate that only 1 item relation has been provided:
            int numSetFields = 0;

            if (this.ItemNumber)
            {
                numSetFields++;
            }

            if (this.ProductGroupId)
            {
                numSetFields++;
            }

            if (this.ProductCategoryName)
            {
                numSetFields++;
            }

            if (numSetFields > 1)
            {
                ret = checkFailed("@SCM:EntityItemAndGroupAndCategorySpecifiedError");
            }

            // Validate that only 1 customer relation has been provided:
            ret = this.CustTableGroupAllCustomerRelationExpansionMapping::mappedValidateWrite() && ret;
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>LogisticsBasic</ConfigurationKey>
	<DeveloperDocumentation>@SCM:InventSalesLedgerPostingDefinitionEntityDevDoc</DeveloperDocumentation>
	<FormRef>InventPosting</FormRef>
	<Label>@SCM:InventSalesLedgerPostingDefinitionEntityLabel</Label>
	<Tags>Posting definitions</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>InventSalesLedgerPostingDefinitionStaging</DataManagementStagingTable>
	<EntityCategory>Parameters</EntityCategory>
	<Modules>InventoryAndWarehouseManagement</Modules>
	<PrimaryCompanyContext>DataAreaId</PrimaryCompanyContext>
	<PrimaryKey>EntityKey</PrimaryKey>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SalesSiteId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldEnum">
			<Name>InventoryAccountType</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>inventAccountTypeComputedColumnDefinition</ComputedFieldMethod>
			<EnumType>InventAccountTypeSales</EnumType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountIdDisplayValue</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DisplayValue</DataField>
			<DataSource>MainAccountDAVC</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ItemNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>ProductGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>itemGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>ItemGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductCategoryName</Name>
			<Mandatory>No</Mandatory>
			<DataField>CategoryName</DataField>
			<DataSource>SalesProductCategoryEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SalesTaxGroupCode</Name>
			<DataField>TaxGroupId</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerAccountNumber</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerNumberComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustAccount</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>CustomerGroupId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>customerGroupComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>CustGroupId</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>AccountType</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>InventAccountType</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ItemCode</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ItemRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>ItemRelation</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CategoryRelation</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustVendCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustVendCode</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CustVendRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CustVendRelation</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryProfileRelation</Name>
			<DataField>InventProfileTypeAll_RU</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>KindOfActivity</Name>
			<DataField>InventProfileType_RU</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>InventoryProfileId</Name>
			<DataField>InventProfileId_RU</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>MainAccountId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>LedgerDimension</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SiteCode</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SiteCode_CN</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>SiteRelation</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>SiteRelation_CN</DataField>
			<DataSource>InventPosting</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>SalesSiteId</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>No</Mandatory>
			<ComputedFieldMethod>salesSiteIdComputedColumnDefinition</ComputedFieldMethod>
			<ExtendedDataType>InventSiteRelation_CN</ExtendedDataType>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>CategoryRecordId</Name>
			<AccessModifier>Private</AccessModifier>
			<DataField>CategoryRecordId</DataField>
			<DataSource>SalesProductCategoryEntity</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>InventoryAccountType</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ItemNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductCategoryName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>SalesTaxGroupCode</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerAccountNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>CustomerGroupId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>SalesSiteId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InventoryProfileRelation</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>KindOfActivity</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>InventoryProfileId</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings>
		<AxTableMapping>
			<MappingTable>CustTableGroupAllCustomerRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>CustomerCodeControlledRelation</MapField>
					<MapFieldTo>CustVendRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomerGroupId</MapField>
					<MapFieldTo>CustomerGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>CustomerId</MapField>
					<MapFieldTo>CustomerAccountNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RelationControllingCustomerCode</MapField>
					<MapFieldTo>CustVendCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>EcoResTableGroupAllProductRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>ProductCodeControlledRelation</MapField>
					<MapFieldTo>ItemRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProductGroupId</MapField>
					<MapFieldTo>ProductGroupId</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>ProductId</MapField>
					<MapFieldTo>ItemNumber</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>RelationControllingProductCode</MapField>
					<MapFieldTo>ItemCode</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
		<AxTableMapping>
			<MappingTable>InventSiteTableAllSiteRelationExpansionMapping</MappingTable>
			<Connections>
				<AxTableMappingConnection>
					<MapField>RelationControllingSiteCode</MapField>
					<MapFieldTo>SiteCode</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SiteCodeControlledRelation</MapField>
					<MapFieldTo>SiteRelation</MapFieldTo>
				</AxTableMappingConnection>
				<AxTableMappingConnection>
					<MapField>SiteId</MapField>
					<MapFieldTo>SalesSiteId</MapFieldTo>
				</AxTableMappingConnection>
			</Connections>
		</AxTableMapping>
	</Mappings>
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>MainAccountCombination</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>DimensionCombinationEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Validate>No</Validate>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>MainAccount</Name>
					<Field>MainAccountId</Field>
					<RelatedField>RecId</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>InventPosting</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>InventPosting</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>MainAccountDAVC</Name>
						<AllowAdd>No</AllowAdd>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>DimensionCombinationEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>MainAccountDAVC</Name>
								<Field>LedgerDimension</Field>
								<JoinDataSource>InventPosting</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>SalesProductCategoryEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>SalesProductCategoryEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>CategoryRelation</Field>
								<JoinDataSource>InventPosting</JoinDataSource>
								<RelatedField>CategoryRecordId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges>
					<AxQuerySimpleDataSourceRange>
						<Name>InventAccountType</Name>
						<Field>InventAccountType</Field>
						<Value>(InventLedgerPostingDefinitionEntityHelper::inventAccountTypeSalesFilter())</Value>
					</AxQuerySimpleDataSourceRange>
				</Ranges>
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>