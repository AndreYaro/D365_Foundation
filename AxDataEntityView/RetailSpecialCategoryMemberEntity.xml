<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RetailSpecialCategoryMemberEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class RetailSpecialCategoryMemberEntity extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initializeEntityDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// Set the correct buffers for <c>RetailSpecialCategoryMember</c>, <c>RetailGroupMemberLine</c>
    /// and skip the insert operation if the records already exist.
    /// </summary>
    /// <param name = "_entityCtx">>Data entity runtime context</param>
    /// <param name = "_dataSourceCtx">Data entity data source runtime context.</param>
    public void initializeEntityDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        if (_dataSourceCtx.name() == dataEntityDataSourceStr(RetailSpecialCategoryMemberEntity, RetailSpecialCategoryMember)
            || _dataSourceCtx.name() == dataEntityDataSourceStr(RetailSpecialCategoryMemberEntity, RetailGroupMemberLine))
        {
            if (_entityCtx.isDatabaseOperationInsert() && RetailSpecialCategoryMemberSkipDuplicateImportFlight::instance().isEnabled())
            {
                RetailGroupMemberLine groupMemberLine;
                RetailSpecialCategoryMember specialCategoryMember;
                EcoResCategoryId headerCategoryRecId = EcoResCategory::findCategoryByNameAndHierarchy(this.HeaderProductCategoryName, this.HeaderProductCategoryHierarchyName).RecId;
                EcoResCategoryId lineCategoryRecId = EcoResCategory::findCategoryByNameAndHierarchy(this.LineProductCategoryName, this.LineProductCategoryHierarchyName).RecId;
                EcoResProductRecId ecoResProductRecId = EcoResProduct::findByDisplayProductNumber(this.ProductNumber).RecId;
                EcoResDistinctProductVariant ecoResDistinctProductVariant = EcoResProduct::findByDisplayProductNumber(this.ProductVariantNumber) as EcoResDistinctProductVariant;

                select firstonly groupMemberLine
                    where groupMemberLine.Category == lineCategoryRecId
                    && groupMemberLine.Product == ecoResProductRecId
                    && groupMemberLine.Variant == ecoResDistinctProductVariant.RecId
                join specialCategoryMember
                    where specialCategoryMember.RetailGroupMember == groupMemberLine.RecId
                    && specialCategoryMember.Category == headerCategoryRecId;

                if (groupMemberLine.RecId && _dataSourceCtx.name() == dataEntityDataSourceStr(RetailSpecialCategoryMemberEntity, RetailGroupMemberLine))
                {
                    _dataSourceCtx.setBuffer(groupMemberLine);
                    _dataSourceCtx.setDataSaved(true);
                }

                if (specialCategoryMember.RecId && _dataSourceCtx.name() == dataEntityDataSourceStr(RetailSpecialCategoryMemberEntity, RetailSpecialCategoryMember))
                {
                    _dataSourceCtx.setBuffer(specialCategoryMember);
                    _dataSourceCtx.setDataSaved(true);
                }
            }

            if (RetailSpecialCategoryMemberFixEntityIssuesFlight::instance().isEnabled())
            {
                this.initLineCategory();
            }
        }

        super(_entityCtx, _dataSourceCtx);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLineCategory</Name>
				<Source><![CDATA[
    private void initLineCategory()
    {
        if (!this.LineProductCategoryName && this.LineProductCategoryHierarchyName && this.ProductNumber)
        {
            EcoResProduct ecoResProduct = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
            EcoResCategoryHierarchy categoryHierarchy = EcoResCategoryHierarchy::findByName(this.LineProductCategoryHierarchyName);

            EcoResProductCategory ecoResProductCategory = EcoResProductCategory::findByProductAndCategoryHierarchy(ecoResProduct.RecId, categoryHierarchy.RecId);
  
            if (ecoResProductCategory)
            {
                this.LineProductCategoryName = EcoResCategory::find(ecoResProductCategory.Category).Name;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the field values of the data entity.
    /// </summary>
    /// <param name = "_fieldIdToCheck">The Field Id</param>
    /// <returns>True, if validation is successful; otherwise false</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;

        ret = super(_fieldIdToCheck);

        if ( RetailSpecialCategoryMemberFixEntityIssuesFlight::instance().isEnabled()
            && _fieldIdToCheck == fieldNum(RetailSpecialCategoryMemberEntity, LineProductCategoryName))
        {
            if (this.LineProductCategoryName && this.LineProductCategoryHierarchyName && this.ProductNumber)
            {
                EcoResProduct ecoResProduct = EcoResProduct::findByDisplayProductNumber(this.ProductNumber);
                EcoResCategoryHierarchy categoryHierarchy = EcoResCategoryHierarchy::findByName(this.LineProductCategoryHierarchyName);
                EcoResProductCategory ecoResProductCategory = EcoResProductCategory::findByProductAndCategoryHierarchy(ecoResProduct.RecId, categoryHierarchy.RecId);
                Name categoryName = EcoResCategory::find(ecoResProductCategory.Category).Name;

                if (ecoResProductCategory && categoryName != this.LineProductCategoryName)
                {
                    ret = checkFailed(strFmt("@Retail:RetailProvideAppropriateCategoryWarning",
                        this.LineProductCategoryName, categoryName));
                }
            }
        }

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>Retail</ConfigurationKey>
	<Label>@Retail:SpecialCategoryMember</Label>
	<Tags>Product</Tags>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>RetailSpecialCategoryMemberStaging</DataManagementStagingTable>
	<IsPublic>Yes</IsPublic>
	<Modules>Merchandising</Modules>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>SpecialCategoryMembers</PublicCollectionName>
	<PublicEntityName>SpecialCategoryMember</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderProductCategoryHierarchyName</Name>
			<Label>@Retail:HeaderProductCategoryHierarchyName</Label>
			<DataField>ProductCategoryHierarchyName</DataField>
			<DataSource>EcoResProductCategoryEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>HeaderProductCategoryName</Name>
			<Label>@Retail:HeaderProductCategoryName</Label>
			<DataField>CategoryName</DataField>
			<DataSource>EcoResProductCategoryEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineProductCategoryHierarchyName</Name>
			<Label>@Retail:LineProductCategoryHierarchyName</Label>
			<Mandatory>No</Mandatory>
			<DataField>ProductCategoryHierarchyName</DataField>
			<DataSource>EcoResProductCategoryEntity1</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>LineProductCategoryName</Name>
			<Label>@Retail:LineProductCategoryName</Label>
			<Mandatory>No</Mandatory>
			<DataField>CategoryName</DataField>
			<DataSource>EcoResProductCategoryEntity1</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProductNumber</DataField>
			<DataSource>EcoResProductEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductVariantNumber</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProductVariantNumber</DataField>
			<DataSource>EcoResProductVariantEntity</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ProductName</Name>
			<Mandatory>No</Mandatory>
			<DataField>ProductName</DataField>
			<DataSource>EcoResProductEntity</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>HeaderProductCategoryHierarchyName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>HeaderProductCategoryName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineProductCategoryHierarchyName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>LineProductCategoryName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductNumber</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ProductVariantNumber</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>HeaderProductCategory</Name>
			<Cardinality>OneMore</Cardinality>
			<RelatedDataEntity>EcoResProductCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ExactlyOne</RelatedDataEntityCardinality>
			<RelationshipType>Composition</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>HeaderProductCategoryHierarchyName</Field>
					<RelatedField>ProductCategoryHierarchyName</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>HeaderProductCategoryName</Field>
					<RelatedField>CategoryName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>LineProductCategory</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductCategoryEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>LineProductCategoryHierarchyName</Field>
					<RelatedField>ProductCategoryHierarchyName</RelatedField>
				</AxDataEntityViewRelationConstraint>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField2</Name>
					<Field>LineProductCategoryName</Field>
					<RelatedField>CategoryName</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Product</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProductNumber</Field>
					<RelatedField>ProductNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
		<AxDataEntityViewRelation xmlns=""
			i:type="AxDataEntityViewRelationForeignKey">
			<Name>Variant</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedDataEntity>EcoResProductVariantEntity</RelatedDataEntity>
			<RelatedDataEntityCardinality>ZeroOne</RelatedDataEntityCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxDataEntityViewRelationConstraint xmlns=""
					i:type="AxDataEntityViewRelationConstraintField">
					<Name>RelationConstraintField1</Name>
					<Field>ProductVariantNumber</Field>
					<RelatedField>ProductVariantNumber</RelatedField>
				</AxDataEntityViewRelationConstraint>
			</Constraints>
		</AxDataEntityViewRelation>
	</Relations>
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>RetailSpecialCategoryMember</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>RetailSpecialCategoryMember</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>EcoResProductCategoryEntity</Name>
						<DynamicFields>Yes</DynamicFields>
						<IsReadOnly>Yes</IsReadOnly>
						<Table>EcoResProductCategoryEntity</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>Category</Field>
								<JoinDataSource>RetailSpecialCategoryMember</JoinDataSource>
								<RelatedField>RecId</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>RetailGroupMemberLine</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>RetailGroupMemberLine</Table>
						<DataSources>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductCategoryEntity1</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductCategoryEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Category</Field>
										<JoinDataSource>RetailGroupMemberLine</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Product</Field>
										<JoinDataSource>RetailGroupMemberLine</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
							<AxQuerySimpleEmbeddedDataSource>
								<Name>EcoResProductVariantEntity</Name>
								<DynamicFields>Yes</DynamicFields>
								<IsReadOnly>Yes</IsReadOnly>
								<Table>EcoResProductVariantEntity</Table>
								<DataSources />
								<DerivedDataSources />
								<Fields />
								<Ranges />
								<JoinMode>OuterJoin</JoinMode>
								<Relations>
									<AxQuerySimpleDataSourceRelation>
										<Name>QueryDataSourceRelation1</Name>
										<Field>Variant</Field>
										<JoinDataSource>RetailGroupMemberLine</JoinDataSource>
										<RelatedField>RecId</RelatedField>
									</AxQuerySimpleDataSourceRelation>
								</Relations>
							</AxQuerySimpleEmbeddedDataSource>
						</DataSources>
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<JoinDataSource>RetailSpecialCategoryMember</JoinDataSource>
								<JoinRelationName>RetailGroupMemberLine</JoinRelationName>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>