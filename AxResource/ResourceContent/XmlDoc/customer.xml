<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:msxsl="urn:schemas-microsoft-com:xslt"
				xmlns:ws="http://schemas.microsoft.com/Dynamics/OnlineServices/WebService"
				xmlns:dt="http://schemas.microsoft.com/Dynamics/OnlineServices/DataTypes"
				exclude-result-prefixes="msxsl ws dt">

  <xsl:output method="xml" indent="yes"/>

  <xsl:template match="/">
    <Customer xmlns="http://schemas.microsoft.com/dynamics/2008/01/documents/Customer">
      <xsl:for-each select="Root/Body/ArrayOfCustomer/Customer">
        <xsl:variable name="CustomerTemplateNodeName">OnlineStore<xsl:value-of select="dt:OnlineStoreId/ws:Dynamics"/>
        </xsl:variable>
        <CustTable class="entity">
          <PaymTermId>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/PaymTermId"/>
          </PaymTermId>
          <CustGroup>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/CustGroup"/>
          </CustGroup>
          <EndDisc>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/EndDisc"/>
          </EndDisc>
          <DlvMode>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DlvMode"/>
          </DlvMode>
          <DlvTerm>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DlvTerm"/>
          </DlvTerm>
          <InventLocation>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/InventLocation"/>
          </InventLocation>
          <InventSiteId>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/InventSiteId"/>
          </InventSiteId>
          <LineDisc>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/LineDisc"/>
          </LineDisc>
          <xsl:if test='dt:Id/dt:OnlineStore[.!=""]'>
            <Memo>
              <xsl:value-of select="dt:Id/dt:OnlineStore"/>
            </Memo>
          </xsl:if>
          <MultiLineDisc>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/MultiLineDisc"/>
          </MultiLineDisc>
          <PriceGroup>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/PriceGroup"/>
          </PriceGroup>
          <xsl:if test='dt:Segment[.!=""]'>
            <SegmentId>
              <xsl:value-of select="dt:Segment"/>
            </SegmentId>
          </xsl:if>
          <xsl:if test='dt:SubSegment[.!=""]'>
            <SubsegmentId>
              <xsl:value-of select="dt:SubSegment"/>
            </SubsegmentId>
          </xsl:if>
          <TaxGroup>
            <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/TaxGroup"/>
          </TaxGroup>
          <xsl:if test='dt:VATRegNumber[.!=""]'>
            <VATNum>
              <xsl:value-of select="dt:VATRegNumber"/>
            </VATNum>
          </xsl:if>
          <xsl:if test='dt:Addresses[.!=""] or dt:Email[.!=""] or dt:Telephone[.!=""] or dt:Name[.!=""]'>
            <DirParty xsi:type="AxdEntity_DirParty_DirOrganization" class="entity" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
              <xsl:if test='dt:Name[.!=""]'>
                <Name>
                  <xsl:value-of select="dt:Name"/>
                </Name>
                <NameAlias>
                  <xsl:value-of select="dt:Name"/>
                </NameAlias>
              </xsl:if>
              <xsl:variable name="phone" select="dt:Telephone" />
              <xsl:variable name="email" select="dt:Email" />
              <xsl:for-each select="dt:Addresses/dt:Address">
                <DirPartyPostalAddressView class="entity">
                  <City>
                    <xsl:value-of select="dt:City"/>
                  </City>
                  <CountryRegionId>
                    <xsl:value-of select="dt:CountryRegion"/>
                  </CountryRegionId>
                  <County>
                    <xsl:value-of select="dt:County"/>
                  </County>
                  <IsPrimary>
                    <xsl:choose>
                      <xsl:when test='dt:IsPrimary[.="true"]'>Yes</xsl:when>
                      <xsl:when test='dt:IsPrimary[.="false"]'>No</xsl:when>
                    </xsl:choose>
                  </IsPrimary>
                  <LocationName>
                    <xsl:value-of select="dt:Name"/>
                  </LocationName>
                  <Roles>
                    <xsl:value-of select="dt:Type"/>
                  </Roles>
                  <State>
                    <xsl:value-of select="dt:State"/>
                  </State>
                  <Street>
                    <xsl:value-of select="concat(dt:Street1, ' ', dt:Street2)"/>
                  </Street>
                  <ZipCode>
                    <xsl:value-of select="dt:ZipCode"/>
                  </ZipCode>
                </DirPartyPostalAddressView>

                <xsl:if test='dt:Email[.!=""]'>
                  <DirPartyContactInfoView class="entity">
                    <Locator>
                      <xsl:value-of select="dt:Email"/>
                    </Locator>
                    <Roles>
                      <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DefaultLogisticsLocationRole"/>
                    </Roles>
                    <Type>Email</Type>
                    <IsPrimary>
                      <xsl:choose>
                        <xsl:when test='dt:IsPrimary[.="true"]'>Yes</xsl:when>
                        <xsl:when test='dt:IsPrimary[.="false"]'>No</xsl:when>
                      </xsl:choose>
                    </IsPrimary>
                  </DirPartyContactInfoView>
                </xsl:if>
                <xsl:if test='dt:Telephone[.!=""]'>
                  <DirPartyContactInfoView class="entity">
                    <Locator>
                      <xsl:value-of select="dt:Telephone"/>
                    </Locator>
                    <Roles>
                      <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DefaultLogisticsLocationRole"/>
                    </Roles>
                    <Type>Phone</Type>
                    <IsPrimary>
                      <xsl:choose>
                        <xsl:when test='dt:IsPrimary[.="true"]'>Yes</xsl:when>
                        <xsl:when test='dt:IsPrimary[.="false"]'>No</xsl:when>
                      </xsl:choose>
                    </IsPrimary>
                  </DirPartyContactInfoView>
                </xsl:if>
              </xsl:for-each>
              <xsl:if test='$phone != "" and not(contains(dt:Addresses/dt:Address/dt:Telephone, $phone))'>
                <DirPartyContactInfoView class="entity">
                  <Locator>
                    <xsl:value-of select="$phone"/>
                  </Locator>
                  <Roles>
                    <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DefaultLogisticsLocationRole"/>
                  </Roles>
                  <Type>Phone</Type>
                </DirPartyContactInfoView>
              </xsl:if>
              <xsl:if test='$email != "" and not(contains(dt:Addresses/dt:Address/dt:Email, $email))'>
                <DirPartyContactInfoView class="entity">
                  <Locator>
                    <xsl:value-of select="dt:Email"/>
                  </Locator>
                  <Roles>
                    <xsl:value-of select="/Root/Header/CustomerTemplate/*[local-name()=$CustomerTemplateNodeName]/DefaultLogisticsLocationRole"/>
                  </Roles>
                  <Type>Email</Type>
                </DirPartyContactInfoView>
              </xsl:if>
            </DirParty>
          </xsl:if>
        </CustTable>
      </xsl:for-each>
    </Customer>
  </xsl:template>

</xsl:stylesheet>
