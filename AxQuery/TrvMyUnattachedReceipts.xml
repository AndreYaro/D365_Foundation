<?xml version="1.0" encoding="utf-8"?>
<AxQuery xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns=""
	i:type="AxQuerySimple">
	<Name>TrvMyUnattachedReceipts</Name>
	<SourceCode>
		<Methods>
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Query]
public class TrvMyUnattachedReceipts extends QueryRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a range to the query for current worker, if a range isn't already present.
    /// </summary>
    public void init()
    {
        QueryBuildDataSource docuRefDs =  this.query().dataSourceName(tableStr(DocuRef));
        QueryBuildRange refTableIdRange = docuRefDs.findRange(fieldnum(DocuRef, RefTableId));
        QueryBuildRange redRecIdTableRange = docuRefDs.findRange(fieldnum(DocuRef, RefRecId));

        // The Receipts list page query is modified every time the worker (delegating worker and employment legal entity) is changed.
        // To reflect the changes, the executeQuery() on the form data source is called, which will invoke this init() and either overwrite
        // the values on the query or append to it. To avoid this, add the unreconciled receipt container and table ID ranges only if they do not exist,
        // i.e during the form init().
        if (!refTableIdRange || !redRecIdTableRange)
        {
            TrvUnreconciledExpenseTransaction   unreconciledReceiptContainer;
            HcmWorkerRecId workerRecId = HcmWorkerLookup::currentWorker();

            if (workerRecId)
            {
                unreconciledReceiptContainer = TrvReceiptsHelper::getOrCreateUnreconciledReceiptContainer(workerRecId);
            }
            // In the case that user is not mapped to worker unreconciledReceiptContainer will be 0, and the user won't see any receipts.

            docuRefDs.addRange(fieldnum(DocuRef, RefTableId)).value(queryValue(tablenum(TrvUnreconciledExpenseTransaction)));
            docuRefDs.addRange(fieldnum(DocuRef, RefRecId)).value(queryValue(unreconciledReceiptContainer.RecId));
        }
        super();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DataSources>
		<AxQuerySimpleRootDataSource>
			<Name>DocuRef</Name>
			<DynamicFields>Yes</DynamicFields>
			<Table>DocuRef</Table>
			<DataSources>
				<AxQuerySimpleEmbeddedDataSource>
					<Name>DocuValue</Name>
					<DynamicFields>Yes</DynamicFields>
					<Table>DocuValue</Table>
					<DataSources />
					<DerivedDataSources />
					<Fields />
					<Ranges />
					<Relations>
						<AxQuerySimpleDataSourceRelation>
							<Name>QueryDataSourceRelation1</Name>
							<Field>ValueRecId</Field>
							<JoinDataSource>DocuRef</JoinDataSource>
							<RelatedField>RecId</RelatedField>
						</AxQuerySimpleDataSourceRelation>
					</Relations>
				</AxQuerySimpleEmbeddedDataSource>
			</DataSources>
			<DerivedDataSources />
			<Fields />
			<Ranges />
			<GroupBy />
			<Having />
			<OrderBy />
		</AxQuerySimpleRootDataSource>
	</DataSources>
</AxQuery>