<?xml version="1.0" encoding="utf-8"?>
<AxQuery xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns=""
	i:type="AxQuerySimple">
	<Name>TrvRequisitionTable_MyListPage</Name>
	<SourceCode>
		<Methods>
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Query]
public class TrvRequisitionTable_MyListPage extends QueryRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        Query                q = this.query();
        QueryBuildDataSource qbds = q.dataSourceTable(tablenum(TrvRequisitionTable));

        super();

        // The Expense list page query is modified every time the worker (delegating worker and employment legal entity) is changed.
        // To reflect the changes, the executeQuery() on the form data source is called, which will invoke this init() and either overwrite
        // the values on the query or append to it. To avoid this, add the Creating worker and Legal entity ranges only if they do not exist,
        // i.e during the form init().
        if (qbds.findRange(fieldnum(TrvRequisitionTable, LegalEntity)) == null)
        {
            TrvRequisitionTableQueryHelper::filterByCurrentCompany(q);
        }

        if (qbds.findRange(fieldnum(TrvRequisitionTable, CreatingWorker)) == null)
        {
            TrvRequisitionTableQueryHelper::filterByCurrentWorker(q);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<Title>@Expense:ExpenseReports</Title>
	<DataSources>
		<AxQuerySimpleRootDataSource>
			<Name>TrvRequisitionTable_1</Name>
			<DynamicFields>Yes</DynamicFields>
			<Table>TrvRequisitionTable</Table>
			<DataSources>
				<AxQuerySimpleEmbeddedDataSource>
					<Name>HcmWorker_1</Name>
					<DynamicFields>Yes</DynamicFields>
					<Table>HcmWorker</Table>
					<DataSources>
						<AxQuerySimpleEmbeddedDataSource>
							<Name>DirPerson_1_1</Name>
							<DynamicFields>Yes</DynamicFields>
							<Table>DirPerson</Table>
							<DataSources>
								<AxQuerySimpleEmbeddedDataSource>
									<Name>DirPersonName_1_1</Name>
									<DynamicFields>Yes</DynamicFields>
									<Table>DirPersonName</Table>
									<DataSources />
									<DerivedDataSources />
									<Fields />
									<Ranges />
									<UseRelations>Yes</UseRelations>
									<Relations>
										<AxQuerySimpleDataSourceRelation>
											<Name>Relation</Name>
											<JoinDataSource>DirPerson_1_1</JoinDataSource>
											<JoinRelationName>PersonRole</JoinRelationName>
										</AxQuerySimpleDataSourceRelation>
									</Relations>
								</AxQuerySimpleEmbeddedDataSource>
							</DataSources>
							<DerivedDataSources />
							<Fields />
							<Ranges />
							<UseRelations>Yes</UseRelations>
							<Relations>
								<AxQuerySimpleDataSourceRelation>
									<Name>Relation</Name>
									<JoinDataSource>HcmWorker_1</JoinDataSource>
									<JoinRelationName>DirPerson</JoinRelationName>
								</AxQuerySimpleDataSourceRelation>
							</Relations>
						</AxQuerySimpleEmbeddedDataSource>
					</DataSources>
					<DerivedDataSources />
					<Fields />
					<Ranges />
					<UseRelations>Yes</UseRelations>
					<Relations>
						<AxQuerySimpleDataSourceRelation>
							<Name>Relation</Name>
							<JoinDataSource>TrvRequisitionTable_1</JoinDataSource>
							<JoinRelationName>Creates</JoinRelationName>
						</AxQuerySimpleDataSourceRelation>
					</Relations>
				</AxQuerySimpleEmbeddedDataSource>
			</DataSources>
			<DerivedDataSources />
			<Fields />
			<Ranges />
			<GroupBy />
			<Having />
			<OrderBy>
				<AxQuerySimpleOrderByField>
					<Name>CreatedDateTime</Name>
					<DataSource>TrvRequisitionTable_1</DataSource>
					<Direction>Descending</Direction>
					<Field>CreatedDateTime</Field>
				</AxQuerySimpleOrderByField>
			</OrderBy>
		</AxQuerySimpleRootDataSource>
	</DataSources>
</AxQuery>