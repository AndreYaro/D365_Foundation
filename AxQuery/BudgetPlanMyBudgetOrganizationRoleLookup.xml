<?xml version="1.0" encoding="utf-8"?>
<AxQuery xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns=""
	i:type="AxQuerySimple">
	<Name>BudgetPlanMyBudgetOrganizationRoleLookup</Name>
	<SourceCode>
		<Methods>
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Query]
public class BudgetPlanMyBudgetOrganizationRoleLookup extends QueryRun
{
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        QueryBuildDataSource organizationGraph;
        QueryBuildDataSource userRoleOrganization;
        QueryBuildDataSource internalOrganization;
        QueryBuildRange      organizationRange;

        organizationGraph    = this.query().dataSourceTable(tableNum(OMExplodedOrganizationSecurityGraph));
        userRoleOrganization = this.query().dataSourceTable(tableNum(OMUserRoleOrganization));
        internalOrganization = this.query().dataSourceTable(tableNum(OMInternalOrganization));

        organizationRange = organizationGraph.addRange(fieldNum(OMExplodedOrganizationSecurityGraph, AncestorOrganization));
        organizationRange.status(2);
        organizationRange.value(strFmt('(%1.%4 == %2.%5) && (%1.%6 == %2.%7) && (%2.%8 == %3.%9)',
                                        userRoleOrganization.name(),
                                        organizationGraph.name(),
                                        internalOrganization.name(),
                                        fieldStr(OMUserRoleOrganization, OMHierarchyType),
                                        fieldStr(OMExplodedOrganizationSecurityGraph, OMHierarchyType),
                                        fieldStr(OMUserRoleOrganization, OMInternalOrganization),
                                        fieldStr(OMExplodedOrganizationSecurityGraph, AncestorOrganization),
                                        fieldStr(OMExplodedOrganizationSecurityGraph, Organization),
                                        fieldStr(OMInternalOrganization, RecId)));

        organizationRange = organizationGraph.addRange(fieldNum(OMExplodedOrganizationSecurityGraph, AncestorOrganization));
        organizationRange.status(2);
        organizationRange.value(strFmt('(%1.%4 == %8) && (%1.%5 == %2.%6) && (%2.%6 == %3.%7)',
                                        userRoleOrganization.name(),
                                        organizationGraph.name(),
                                        internalOrganization.name(),
                                        fieldStr(OMUserRoleOrganization, OMHierarchyType),
                                        fieldStr(OMUserRoleOrganization, OMInternalOrganization),
                                        fieldStr(OMExplodedOrganizationSecurityGraph, Organization),
                                        fieldStr(OMInternalOrganization, RecId),
                                        0));

        super();
    }
]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DataSources>
		<AxQuerySimpleRootDataSource>
			<Name>OMInternalOrganization</Name>
			<Table>OMInternalOrganization</Table>
			<DataSources>
				<AxQuerySimpleEmbeddedDataSource>
					<Name>RoleOrgHierarchy</Name>
					<DynamicFields>Yes</DynamicFields>
					<Table>OMUserRoleOrganization</Table>
					<DataSources>
						<AxQuerySimpleEmbeddedDataSource>
							<Name>Process</Name>
							<DynamicFields>Yes</DynamicFields>
							<Table>BudgetPlanningProcess</Table>
							<DataSources>
								<AxQuerySimpleEmbeddedDataSource>
									<Name>OrgGraph</Name>
									<DynamicFields>Yes</DynamicFields>
									<Table>OMExplodedOrganizationSecurityGraph</Table>
									<DataSources />
									<DerivedDataSources />
									<Fields />
									<Ranges />
									<JoinMode>ExistsJoin</JoinMode>
									<Relations>
										<AxQuerySimpleDataSourceRelation>
											<Name>RecId</Name>
											<Field>RecId</Field>
											<JoinDataSource>OMInternalOrganization</JoinDataSource>
											<RelatedField>Organization</RelatedField>
										</AxQuerySimpleDataSourceRelation>
										<AxQuerySimpleDataSourceRelation>
											<Name>OrganizationHierarchyType</Name>
											<Field>OrganizationHierarchyType</Field>
											<JoinDataSource>Process</JoinDataSource>
											<RelatedField>OMHierarchyType</RelatedField>
										</AxQuerySimpleDataSourceRelation>
									</Relations>
								</AxQuerySimpleEmbeddedDataSource>
							</DataSources>
							<DerivedDataSources />
							<Fields />
							<Ranges />
							<JoinMode>ExistsJoin</JoinMode>
							<Relations />
						</AxQuerySimpleEmbeddedDataSource>
					</DataSources>
					<DerivedDataSources />
					<Fields />
					<Ranges>
						<AxQuerySimpleDataSourceRange>
							<Name>User</Name>
							<Field>User</Field>
							<Value>(currentUserId())</Value>
						</AxQuerySimpleDataSourceRange>
					</Ranges>
					<JoinMode>ExistsJoin</JoinMode>
					<Relations />
				</AxQuerySimpleEmbeddedDataSource>
				<AxQuerySimpleEmbeddedDataSource>
					<Name>RoleBased</Name>
					<DynamicFields>Yes</DynamicFields>
					<Table>BudgetPlanningConfiguration</Table>
					<DataSources />
					<DerivedDataSources />
					<Fields />
					<Ranges>
						<AxQuerySimpleDataSourceRange>
							<Name>SecurityModel</Name>
							<Field>SecurityModel</Field>
							<Value>SecurityRole</Value>
						</AxQuerySimpleDataSourceRange>
					</Ranges>
					<JoinMode>ExistsJoin</JoinMode>
					<Relations />
				</AxQuerySimpleEmbeddedDataSource>
			</DataSources>
			<DerivedDataSources />
			<Fields>
				<AxQuerySimpleDataSourceField>
					<Name>Name</Name>
					<DerivedTable>OMInternalOrganization</DerivedTable>
					<Field>Name</Field>
				</AxQuerySimpleDataSourceField>
				<AxQuerySimpleDataSourceField>
					<Name>InstanceRelationType</Name>
					<DerivedTable>OMInternalOrganization</DerivedTable>
					<Field>InstanceRelationType</Field>
				</AxQuerySimpleDataSourceField>
				<AxQuerySimpleDataSourceField>
					<Name>RecId</Name>
					<DerivedTable>OMInternalOrganization</DerivedTable>
					<Field>RecId</Field>
				</AxQuerySimpleDataSourceField>
			</Fields>
			<Ranges />
			<GroupBy />
			<Having />
			<OrderBy />
		</AxQuerySimpleRootDataSource>
	</DataSources>
</AxQuery>