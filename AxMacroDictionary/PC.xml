<?xml version="1.0" encoding="utf-8"?>
<AxMacroDictionary xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PC</Name>
	<Source>//Macros for Product Configuration&#xD;
#define.True('True')&#xD;
#define.False('False')&#xD;
&#xD;
#define.EmptyLanguage('GLOBAL')&#xD;
&#xD;
#define.ClickedOverride('clicked')&#xD;
#define.WhereUsedButtonName('link')&#xD;
&#xD;
#define.NewRootComponentSufix('_RootComponent')&#xD;
&#xD;
#define.Duplicate('copy')&#xD;
&#xD;
#define.emptyString("")&#xD;
&#xD;
#define.defaultSalesId('tempSalesId')&#xD;
&#xD;
// XML elements and attributes:&#xD;
#define.enumDomainElement('EnumDomain')&#xD;
#define.EnumValueElement('EnumValue')&#xD;
#define.booleanDomainElement('BooleanDomain')&#xD;
#define.integerDomainElement('IntegerDomain')&#xD;
#define.integerUnboundDomainElement('IntegerUnboundDomain')&#xD;
#define.decimalDomainElement('DecimalDomain')&#xD;
#define.textDomainElement('TextDomain')&#xD;
#define.isUserSelected('isUserSelected')&#xD;
#define.IntegerSetDomainElement('IntegerSetDomain')&#xD;
#define.integerSetDomainId('integerSetDomainId')&#xD;
&#xD;
#define.fromAttribute('from')&#xD;
#define.toAttribute('to')&#xD;
&#xD;
#define.numberOfDecimalsElement('numberOfDecimals')&#xD;
&#xD;
#define.constraintElement('Constraint')&#xD;
#define.conditionElement('Condition')&#xD;
#define.conditionAttribute('condition')&#xD;
#define.conditionAttributeElement('ConditionAttribute')&#xD;
#define.conditionVariableElement('ConditionVariable')&#xD;
#define.constraintIdAttribute('constraintId')&#xD;
#define.constraintTextAttribute('constraintText')&#xD;
&#xD;
#define.Calculation('Calculation')&#xD;
#define.PriceElement('PriceCalculation')&#xD;
#define.Expression('expression')&#xD;
#define.TargetAttribute('targetAttribute')&#xD;
#define.Id("id")&#xD;
#define.Value('Value')&#xD;
&#xD;
#define.operationLineElement('OperationLine')&#xD;
#define.subPartElement('SubPart')&#xD;
#define.subComponentElement('Subcomponent')&#xD;
#define.nameAttribute('name')&#xD;
#define.displayName('displayName')&#xD;
#define.displayValue('displayValue')&#xD;
#define.valueAttribute('value')&#xD;
#define.defaultAttribute('default')&#xD;
#define.componentAttribute('component')&#xD;
&#xD;
#define.attributeElement('Attribute')&#xD;
#define.attributeGroupElement('AttributeGroup')&#xD;
#define.typeAttribute('type')&#xD;
#define.variableTypeInteger('integer')&#xD;
#define.variableTypeBoolean('boolean')&#xD;
#define.variableTypeEnum('enum')&#xD;
#define.variableTypeIntegerUnbound('integerunbound')&#xD;
#define.variableTypeDecimal('decimal')&#xD;
#define.variableTypeText('text')&#xD;
#define.variableTypeIntegerSet('integerset')&#xD;
&#xD;
#define.variableDomainAttribute('domain')&#xD;
#define.enumDomainId('enumDomainId')&#xD;
#define.enumDefinitionId('enumDefinitionId')&#xD;
&#xD;
#define.modelElement('Model')&#xD;
&#xD;
#define.componentElement('Component')&#xD;
#define.componentId('componentId')&#xD;
#define.componentDefinitionId('componentDefinitionId')&#xD;
#define.instanceId('instanceId')&#xD;
&#xD;
#define.sessionElement('Session')&#xD;
&#xD;
#define.HiddenModifierElement('HiddenModifier')&#xD;
#define.ReadOnlyModifierElement('ReadOnlyModifier')&#xD;
#define.MandatoryModifierElement('MandatoryModifier')&#xD;
#define.ModifierConditionType('Condition')&#xD;
#define.ReqIdAttribute('uniqueId')&#xD;
&#xD;
// XML focus&#xD;
#define.ConstraintFocus('&lt;Component componentXPath=\"\"&gt;&lt;Constraint uniqueId=\"\%1\"\/&gt;&lt;/Component&gt;')&#xD;
#define.CalculationFocus('&lt;Component componentXPath=\"\"&gt;&lt;Calculation id=\"\%1\"\/&gt;&lt;/Component&gt;')&#xD;
#define.PriceCalculationFocus('&lt;Component componentXPath=\"\"&gt;&lt;PriceCalculation id=\"\%1\"\/&gt;&lt;/Component&gt;')&#xD;
#define.ComponentFocus('&lt;Component componentXPath=\"\%1\"/&gt;')&#xD;
#define.AnyFocus('&lt;Component componentXPath=\"\"/&gt;')&#xD;
&#xD;
// Note generation&#xD;
#define.DocuRefType('Note')&#xD;
#define.DocuRefNewLine('\n')&#xD;
#define.DocuRefTab('\t')&#xD;
&#xD;
#define.AXLabelSection('AXLabelCollection')&#xD;
#define.AXLabel('AXLabel')&#xD;
#define.AXLabelID('LabelID')&#xD;
#define.AXLabelValue('Value')&#xD;
&#xD;
// formatting&#xD;
#define.numberOfDecimals(2)</Source>
	<Macros />
</AxMacroDictionary>